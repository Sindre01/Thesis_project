[
    {
        "experiment_name": "regular_MANY_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 16000,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -341, y: -217, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -343, y: 20, name: \"list2\") property(List) list2_5b4c6d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -1, y: -35) intersection_c9e4c2 root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2f9e -> intersection_c9e4c2.left\n        list2_5b4c6d -> intersection_c9e4c2.right\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"intersection.length > 0\"\n        }\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        intersection_c9e4c2.intersection -> ifexpression_875761.gen_0\n        instance(x: -275, y: -35) length_3f8b1d root.Std_k98ojb.List.Length {}\n        length_3f8b1d.list -> intersection_c9e4c2.intersection\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_fc79d5 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -341, y: -210, name: \"list1\") property(List) list1_3a0f8e\n        in(x: -349, y: 28, name: \"list2\") property(List) list2_7b9c4d\n\n        out(x: 1215, y: 6, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_5bbcd7\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_3a0f8e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_7b9c4d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        list1_3a0f8e -> for_d26972.items\n        for_d26972.item -> setter_9d4f1c.new_value\n        for_d26972.done -> output_5bbcd7\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.item -> ifexpression_875761.gen_2\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_fc79d5 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -425, y: -214, name: \"list1\") property(List) list1_3a0b8f\n        in(x: -445, y: 30, name: \"list2\") property(List) list2_7e9c5d\n\n        out(x: 1269, y: 5, name: \"output\") property(Bool) output_4a6c3f\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"intersection\") intersection_1e8f9f root.Std_k98ojb.Sets.Intersection {}\n        list1_3a0b8f -> intersection_1e8f9f.left\n        list2_7e9c5d -> intersection_1e8f9f.right\n        intersection_1e8f9f.intersect -> contains_32727d.list\n        1 -> contains_32727d.item\n        contains_32727d.is_contained -> output_4a6c3f\n    }\n\n    \n\n    instance(x: -293, y: -5) common_element_7a4dad root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -457, y: -214, name: \"list1\") property(List) list1_9e6f8d\n        in(x: -465, y: 30, name: \"list2\") property(List) list2_7b0a3c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_38e107.execute\n        list1_9e6f8d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        list2_7b0a3c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        for_d26972.item -> setter_9d4f1c.new_value\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_c7b8a5 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -482, y: -214, name: \"list1\") property(List) list1_8e9f6d\n        in(x: -484, y: 30, name: \"list2\") property(List) list2_4a0b5c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_3c2b1e\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_6f9d6f\n\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: -203) ifexpression_2a8e6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"contains\"\n        }\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: 752, y: -324) contains_32727d root.Std_k98ojb.List.Contains {}\n        ifexpression_875761.else -> continue_3c2b1e\n        ifexpression_875761.value -> output_6f9d6f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_8e9f6d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_3c2b1e\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_8e9f6d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n        ifexpression_2a8e6f.then -> contains_32727d.item\n        ifexpression_2a8e6f.else -> continue_3c2b1e\n        ifexpression_2a8e6f.value -> output_6f9d6f\n        for_d26972.item -> contains_32727d.list\n        list2_4a0b5c -> contains_32727d.list\n        contains_32727d.is_contained -> ifexpression_2a8e6f.gen_1\n        true -> ifexpression_2a8e6f.gen_0\n        for_d26972.onItem -> ifexpression_2a8e6f.execute\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_c5b3c9 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -435, y: -214, name: \"list1\") property(List) list1_9a3b6f\n        in(x: -445, y: 30, name: \"list2\") property(List) list2_8e4c0d\n\n        out(x: 1269, y: 5, name: \"output\") property(Bool) output_7f1d8a\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"intersection\") intersection_9e4c3b root.Std_k98ojb.Sets.Intersection {}\n        list1_9a3b6f -> intersection_9e4c3b.left\n        list2_8e4c0d -> intersection_9e4c3b.right\n        intersection_9e4c3b.intersect -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_7f1d8a\n    }\n\n    \n\n    instance(x: -293, y: -5) common_element_6a2e4c root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -445, y: -235, name: \"list1\") property(List) list1_2a3f5e\n        in(x: -465, y: 30, name: \"list2\") property(List) list2_eb8d7c\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_9f4c1a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_9f4c1a\n        ifexpression_875761.value -> output_9f4c1a\n        list1_2a3f5e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_eb8d7c -> contains_32727d.list\n        for_d26972.item -> contains_32727d.item\n        contains_32727d.is_contained -> ifexpression_875761.then\n        contains_32727d.is_contained -> output_9f4c1a\n        for_d26972.done -> output_9f4c1a\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        setter_9d4f1c.new_value -> contains_32727d.item\n        for_d26972.item -> setter_9d4f1c.new_value\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        not_75283f.result -> output_9f4c1a\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_c5e7a6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -375, y: -214, name: \"list1\") property(List) list1_3a0b5f\n        in(x: -376, y: 30, name: \"list2\") property(List) list2_9c8e6d\n\n        out(x: 1267, y: 5, name: \"output\") property(Bool) output_4e1e3a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_4e1e3a\n        ifexpression_875761.value -> output_4e1e3a\n        list1_3a0b5f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_9c8e6d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_d26972.done -> output_4e1e3a\n        for_d26972.item -> setter_9d4f1c.new_value\n        setter_9d4f1c.continue -> for_d26972.next\n        setter_38e107.continue -> for_d26972.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_7a4dad root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -465, y: -235, name: \"list1\") property(List) list_0f3b5e\n        in(x: -485, y: 30, name: \"list2\") property(List) list_9a8c6d\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_4c1b0f\n\n        instance(x: 752, y: 93) intersection_c3e1dc root.Std_k98ojb.Sets.Intersection {}\n        list_0f3b5e -> intersection_c3e1dc.left\n        list_9a8c6d -> intersection_c3e1dc.right\n        instance(x: 321, y: -20) notempty_7b4a2f root.Std_k98ojb.List.NotEmpty {}\n        intersection_c3e1dc.intersection -> notempty_7b4a2f.list\n        notempty_7b4a2f.is_not_empty -> output_4c1b0f\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_8d9f5f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -479, y: -213, name: \"list1\") property(List) list1_9e6b3f\n        in(x: -487, y: 30, name: \"list2\") property(List) list2_5a7c8d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: 752, y: -212) contains_32727d root.Std_k98ojb.List.Contains {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list2_5a7c8d -> for_d26972.items\n        for_d26972.item -> contains_32727d.list\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        contains_32727d.is_contained -> ifexpression_875761.gen_2\n        list1_9e6b3f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        for_d26972.item -> setter_9d4f1c.new_value\n        contains_32727d.item -> list1_9e6b3f\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_7a4dad root.main.has_common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -535, y: 3, name: \"list\") property(List) list_2f1a9e\n\n        out(x: 1265, y: -6, name: \"output\") property(Bool) output_7c4b0d\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_2f1a9e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_2f1a9e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_5a3b7f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -489, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -465, y: 5, name: \"list\") property(List) list_1a0e9f\n\n        out(x: 1227, y: 147, name: \"output\") property(Bool) output_6c3d2b\n\n        instance(x: 752, y: 93) ifexpression_5e8a4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_9d6f2b\") getter_9d6f2b = previous\n        setter(x: 679, y: -313, name: \"setter_7c4a0e\") setter_7c4a0e = previous\n        instance(x: 321, y: -20) for_e1b5c8 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7c4a0e\") setter_3f2d6c = previous\n        instance(x: -275, y: -35) getat_9e1f5c root.Std_k98ojb.List.GetAt {}\n        ifexpression_5e8a4c.else -> continue_a96db6\n        ifexpression_5e8a4c.value -> output_6c3d2b\n        ifexpression_5e8a4c.then -> setter_7c4a0e.execute\n        list_1a0e9f -> for_e1b5c8.items\n        for_e1b5c8.item -> ifexpression_5e8a4c.gen_2\n        for_e1b5c8.index -> ifexpression_5e8a4c.gen_0\n        getter_9d6f2b.value -> ifexpression_5e8a4c.gen_1\n        for_e1b5c8.onItem -> ifexpression_5e8a4c.execute\n        for_e1b5c8.done -> continue_a96db6\n        for_e1b5c8.item -> setter_7c4a0e.new_value\n        list_1a0e9f -> getat_9e1f5c.list\n        0 -> getat_9e1f5c.index\n        getat_9e1f5c.itemAtIndex -> setter_3f2d6c.new_value\n        execute_90aaec -> setter_3f2d6c.execute\n        setter_3f2d6c.continue -> for_e1b5c8.reset\n        setter_7c4a0e.continue -> for_e1b5c8.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_f9b7d root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -485, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -523, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -523, y: 1, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -525, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -485, y: 10, name: \"list\") property(List) list_3a8d1f\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3a8d1f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3a8d1f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -475, y: 20, name: \"list1\") property(List) list1_5a3f9d\n        in(x: -476, y: -145, name: \"list2\") property(List) list2_6e4b8c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -271, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_5a3f9d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_6e4b8c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"sublist\") property(List) sublist_5e9f8d\n        in(x: -485, y: -235, name: \"list\") property(List) list_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: -100, y: 5) contains_32727d root.Std_k98ojb.List.Contains {}\n        sublist_5e9f8d -> contains_32727d.list\n        list_ec88cd -> contains_32727d.item\n        contains_32727d.is_contained -> ifexpression_875761.input\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -365, y: 5, name: \"sublist\") property(List) sublist_1a9e4f\n        in(x: -366, y: -166, name: \"list\") property(List) list_7c8d2b\n\n        out(x: 1040, y: -167, name: \"output\") property(Bool) output_5e3f6f\n\n        instance(x: -108, y: -168) find_1a9a4f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: 10, y: -22, name: \"current\") property(List) current_8d0e7c\n            in(x: 18, y: 55, name: \"_index\") property(Number) _index_6f9a2b\n\n            out(x: 666, y: 49, name: \"output\") property(Bool) output_1b4f5c\n\n            instance(x: 247, y: 56) contains_7e3d8c root.Std_k98ojb.List.Contains {}\n            sublist_1a9e4f -> contains_7e3d8c.list\n            current_8d0e7c -> contains_7e3d8c.item\n            contains_7e3d8c.is_contained -> output_1b4f5c\n        } -> find_1a9a4f.predicate\n        func() {\n            in(x: -31, y: 79, name: \"_index\") property(Number) _index_6f9a2b\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_8c1d5e\n\n            instance(x: 226, y: 56) slice_7e3d8c root.Std_k98ojb.List.Slice {}\n            _index_6f9a2b -> slice_7e3d8c.start\n            list_7c8d2b -> slice_7e3d8c.list\n            length_1b4f5c - 1 -> slice_7e3d8c.end\n            slice_7e3d8c.slice -> output_8c1d5e\n        } -> find_1a9a4f.handler\n        list_7c8d2b -> find_1a9a4f.items\n        find_1a9a4f.item -> output_5e3f6f\n    }\n\n    \n\n    instance(x: -55, y: 58) is_sublist_0a9f4f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 0, name: \"sublist\") property(List) sublist_1e3f9b\n        in(x: -284, y: 180, name: \"list\") property(List) list_7c6d8a\n\n        out(x: 557, y: 95, name: \"output\") property(Bool) output_2e4b0f\n\n        instance(x: -92, y: 94) find_1a9b3c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            sublist_1e3f9b -> contains_32727d.list\n            _index_769593 -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> find_1a9b3c.predicate\n        list_7c6d8a -> find_1a9b3c.items\n        find_1a9b3c.item -> output_2e4b0f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_a5f9a8 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -485, y: 30, name: \"list1\") property(List) list1_5f0b8e\n        in(x: -485, y: -215, name: \"list2\") property(List) list2_9c3d7a\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_4f6c1e\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_0b1f2e\n\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        list2_9c3d7a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        ifexpression_875761.else -> continue_4f6c1e\n        ifexpression_875761.value -> output_0b1f2e\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_5f0b8e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_4f6c1e\n        for_d26972.item -> setter_9d4f1c.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_7b8a5c root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -459, y: 10, name: \"sublist\") property(List) sublist_3e9a6f\n        in(x: -465, y: -232, name: \"list\") property(List) list_4b2c5d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_1a0f8c\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_9e3f6c\n\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        ifexpression_875761.else -> continue_1a0f8c\n        ifexpression_875761.value -> output_9e3f6c\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_4b2c5d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_1a0f8c\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_4b2c5d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        sublist_3e9a6f -> for_d26972.items\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_8b5a7c root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 5, name: \"sublist\") property(List) sublist_3f1e6d\n        in(x: -467, y: 167, name: \"list\") property(List) list_4c7a8b\n\n        out(x: 1227, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_5bbcd7\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_4c7a8b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_5bbcd7\n        for_d26972.item -> setter_9d4f1c.new_value\n        sublist_3f1e6d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 10, name: \"sublist\") property(List) sublist_2a3e1f\n        in(x: -313, y: 122, name: \"list\") property(List) list_7b8c0d\n\n        out(x: 1045, y: 87, name: \"output\") property(Bool) output_9f6a4f\n\n        instance(x: -93, y: 88, name: \"find sublist in list\") find_3e2f1f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -0, y: -16, name: \"current\") property(List) current_9c6a7d\n            in(x: 12, y: 59, name: \"_index\") property(Number) _index_8e1f5b\n\n            out(x: 706, y: 49, name: \"output\") property(Bool) output_3f2b0f\n\n            instance(x: 226, y: 56) contains_9c6a7d root.Std_k98ojb.List.Contains {}\n            sublist_2a3e1f -> contains_9c6a7d.list\n            current_9c6a7d -> contains_9c6a7d.item\n        } -> find_3e2f1f.predicate\n        list_7b8c0d -> find_3e2f1f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> find_3e2f1f.handler\n        list_7b8c0d -> find_3e2f1f.context\n        find_3e2f1f.item -> output_9f6a4f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 5, name: \"sublist\") property(List) sublist_3d1f6b\n        in(x: -284, y: -150, name: \"list\") property(List) list_8c7a9e\n\n        out(x: 557, y: -145, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -140) find_5b3d4f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 15, name: \"current\") property(List) current_81298e\n            in(x: -183, y: -125, name: \"_index\") property(Number) _index_769593\n\n            out(x: 521, y: -110, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 74, y: -115) find_5b3d4f root.Std_k98ojb.Iteration.Find {}\n            func() {\n                in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n                instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n                instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n                2 -> modulo_c76d2b.divisor\n                0 -> notequal_7836b4.right\n                notequal_7836b4.result -> output_efbc78\n                modulo_c76d2b.result -> notequal_7836b4.left\n                _index_769593 -> modulo_c76d2b.value\n            } -> find_5b3d4f.predicate\n            sublist_3d1f6b -> find_5b3d4f.items\n            current_81298e -> find_5b3d4f.context\n        } -> find_5b3d4f.handler\n        list_8c7a9e -> find_5b3d4f.items\n        find_5b3d4f.item -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -485, y: 30, name: \"list1\") property(List) list1_3f0e2d\n        in(x: -485, y: -235, name: \"list2\") property(List) list2_9c7b5a\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"is sublist\") find_9a3f2c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            list2_9c7b5a -> contains_32727d.list\n            _index_769593 -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> find_9a3f2c.predicate\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        list1_3f0e2d -> for_d26972.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) slice_9a3f2c root.Std_k98ojb.List.Slice {}\n            instance(x: 285, y: -25) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> slice_9a3f2c.list\n            for_d26972.index -> slice_9a3f2c.start\n            list1_3f0e2d.length + 1 -> slice_9a3e5f.end\n            slice_9a3f2c.slice -> equal_f89569.left\n            list2_9c7b5a -> equal_f89569.right\n            equal_f89569.result -> bool_4524be\n        } -> find_9a3f2c.context\n        for_d26972.onItem -> find_9a3f2c.execute\n        for_d26972.done -> continue_a96db6\n        find_9a3f2c.item -> output_5bbcd7\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e4b8f\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c9a5d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_8e3f2c\n            in(x: -113, y: 33, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_5e1b4c root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_8e3f2c -> sub_5e1b4c.first\n            elem_9f6850 -> sub_5e1b4c.second\n            sub_5e1b4c.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3e4b8f -> find_6d05b0.items\n        find_6d05b0.index + 1 -> missing_7c9a5d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a8f9e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c2d5b\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n            in(x: -108, y: 44, name: \"elem\") property(Number) elem_af09a7\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_e1b8d2\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_af09a7 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_e1b8d2\n        } -> find_6d05b0.predicate\n        list_3a8f9e -> find_6d05b0.items\n        find_6d05b0.index -> missing_7c2d5b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -285, y: 0, name: \"list\") property(List) list_9f6a1e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n            in(x: -111, y: 44, name: \"elem\") property(Number) elem_ae8c5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_1b0d3f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> sub_1b0d3f.first\n            elem_ae8c5a -> sub_1b0d3f.second\n            sub_1b0d3f.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f6a1e -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n            in(x: -111, y: 44, name: \"elem\") property(Number) elem_ae8c5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1b0d3f root.Std_k98ojb.Math.Add {}\n            index_9f6850 -> add_1b0d3f.first\n            1 -> add_1b0d3f.second\n            add_1b0d3f.result -> elem_ae8c5a\n        } -> find_6d05b0.context\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1f8d4a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n            in(x: -108, y: 44, name: \"elem\") property(Number) elem_af09a7\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3bc2ae\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_af09a7 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_3bc2ae\n        } -> find_6d05b0.predicate\n        list_1f8d4a -> find_6d05b0.items\n        find_6d05b0.index -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a1f9e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c6b5d\n\n        instance(x: 0, y: 0) find_8b4f2a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1e7c6f\n            in(x: -109, y: 29, name: \"elem\") property(Number) elem_9d5a8b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3c2f0f\n\n            instance(x: 89, y: 29) sub_1e4c6a root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) greaterthan_7d8e9c root.Std_k98ojb.Math.GreaterThan {}\n            index_1e7c6f -> sub_1e4c6a.first\n            elem_9d5a8b -> sub_1e4c6a.second\n            sub_1e4c6a.result -> greaterthan_7d8e9c.left\n            0 -> greaterthan_7d8e9c.right\n            greaterthan_7d8e9c.result -> bool_3c2f0f\n        } -> find_8b4f2a.predicate\n        list_3a1f9e -> find_8b4f2a.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_7c6d5f\n            in(x: -109, y: 29, name: \"elem\") property(Number) elem_1e8b9f\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3c2f0f\n\n            instance(x: 89, y: 29) add_7d4a6b root.Std_k98ojb.Math.Add {}\n            index_7c6d5f -> add_7d4a6b.first\n            1 -> add_7d4a6b.second\n            add_7d4a6b.result -> elem_1e8b9f\n        } -> find_8b4f2a.handler\n        func() {\n            out(x: -113, y: 34, name: \"index\") property(Number) index_3c5f0f\n\n            instance(x: 89, y: 29) add_7d4a6b root.Std_k98ojb.Math.Add {}\n            index_3c5f0f -> add_7d4a6b.first\n            1 -> add_7d4a6b.second\n            add_7d4a6b.result -> index_3c5f0f\n        } -> find_8b4f2a.context\n        find_8b4f2a.item -> missing_7c6b5d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1e9b5f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9a4b1e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c3f6d\n\n        instance(x: 0, y: 0) forloop_8f2b5e root.Std_k98ojb.Std.For {\n            items: list_9a4b1e\n        }\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item_7d3c6f\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_8a9b4e\n\n            instance(x: 89, y: 29) sub_1a2b3c root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_4d5f6g root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_4d5f6g.right\n            sub_1a2b3c.result -> notequal_4d5f6g.left\n            item_7d3c6f -> sub_1a2b3c.second\n            index_8h9i0j -> sub_1a2b3c.first\n            notequal_4d5f6g.result -> bool_8a9b4e\n        } -> forloop_8f2b5e.predicate\n        forloop_8f2b5e.onItem -> setter_3c2b1a.execute\n        index_8h9i0j -> setter_3c2b1a.new_value\n        instance(x: 116, y: -268) setter_3c2b1a root.Std_k98ojb.Setting.Setter {\n            name: \"missing\"\n        }\n        forloop_8f2b5e.done -> continue_6d7e8f.execute\n        instance(x: 512, y: -114) continue_6d7e8f root.Std_k98ojb.Trigger.Continue {}\n        setter_3c2b1a.value -> missing_7c3f6d\n        forloop_8f2b5e.trigger -> execute_9k0l1m.execute\n        instance(x: -450, y: -114) execute_9k0l1m root.Std_k98ojb.Trigger.Execute {}\n        continue_6d7e8f.continue -> missing_7c3f6d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_node root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1f3b9a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c6e2d\n\n        instance(x: 0, y: 0) find_4f8b5f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1a7c3e\n            in(x: -113, y: 36, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_1b8c4e root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_1a7c3e -> sub_1b8c4e.first\n            0 -> sub_1b8c4e.second\n            sub_1b8c4e.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_4f8b5f.predicate\n        list_1f3b9a -> find_4f8b5f.items\n        find_4f8b5f.index + 1 -> missing_7c6e2d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9a8f4e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c2b6d\n\n        instance(x: 0, y: 0) for_5c3b2e root.Std_k98ojb.Std.For {\n            items: list_9a8f4e\n        }\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item_1d6f7e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2c8b5a\n\n            instance(x: 89, y: 29) sub_3a9b4f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_7d6e1f root.Std_k98ojb.Logic.NotEqual {}\n            item_1d6f7e -> sub_3a9b4f.first\n            for_5c3b2e.index + 1 -> sub_3a9b4f.second\n            sub_3a9b4f.result -> notequal_7d6e1f.left\n            item_1d6f7e -> notequal_7d6e1f.right\n            notequal_7d6e1f.result -> bool_2c8b5a\n        } -> for_5c3b2e.handler\n        for_5c3b2e.onItem -> find_missing.execute\n        for_5c3b2e.done -> find_missing.reset\n        for_5c3b2e.index + 1 -> missing_7c2b6d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_8f4a9e root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f6a2e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_ae8d5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> sub_1088d5.first\n            elem_ae8d5a -> sub_1088d5.second\n            sub_1088d5.result -> notequal_807ffd.left\n            1 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f6a2e -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_ae8d5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index_9f6850 -> sub_1088d5.first\n            elem_ae8d5a -> sub_1088d5.second\n            sub_1088d5.result -> bool_af09a7\n        } -> find_6d05b0.context\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a8f2e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_5b9d7c\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_8f3a2e\n            in(x: -103, y: 44, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_3b1d6c root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_8f3a2e -> add_3b1d6c.first\n            0 -> add_3b1d6c.second\n            add_3b1d6c.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3a8f2e -> find_6d05b0.items\n        find_6d05b0.index -> missing_5b9d7c\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1c4f9f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -124, y: 0, name: \"input\") property(String) input_9f8a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1b4c5e\n\n        instance(x: 0, y: 1) replace_7a6d7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a8c2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_5e9c1e root.Std_k98ojb.Strings.Replace {}\n        input_9f8a3d -> replace_7a6d7f.input\n        \" \" -> replace_7a6d7f.search\n        \":\" -> replace_7a6d7f.replace\n        replace_7a6d7f.output -> replace_3a8c2d.input\n        \",\" -> replace_3a8c2d.search\n        \":\" -> replace_3a8c2d.replace\n        replace_3a8c2d.output -> replace_5e9c1e.input\n        \".\" -> replace_5e9c1e.search\n        \":\" -> replace_5e9c1e.replace\n        replace_5e9c1e.output -> output_1b4c5e\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -128, y: 0, name: \"input\") property(String) input_1a8f9d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4e3c7b\n\n        instance(x: 0, y: 1) replace_5b6d8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9a3c2a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_7e4f8a root.Std_k98ojb.Strings.Replace {}\n        input_1a8f9d -> replace_5b6d8f.input\n        \" \" -> replace_5b6d8f.search\n        \":\" -> replace_5b6d8f.replace\n        replace_5b6d8f.output -> replace_9a3c2a.input\n        \",\" -> replace_9a3c2a.search\n        \":\" -> replace_9a3c2a.replace\n        replace_9a3c2a.output -> replace_7e4f8a.input\n        \".\" -> replace_7e4f8a.search\n        \":\" -> replace_7e4f8a.replace\n        replace_7e4f8a.output -> output_4e3c7b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_2d5b1f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"input\") property(String) input_1f8d3a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_7c6e9b\n\n        instance(x: 0, y: 1) replace_4b5b6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a3d2c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9e7b1a root.Std_k98ojb.Strings.Replace {}\n        input_1f8d3a -> replace_4b5b6f.input\n        \" \" -> replace_4b5b6f.search\n        \":\" -> replace_4b5b6f.replace\n        replace_4b5b6f.output -> replace_8a3d2c.input\n        \",\" -> replace_8a3d2c.search\n        \":\" -> replace_8a3d2c.replace\n        replace_8a3d2c.output -> replace_9e7b1a.input\n        \".\" -> replace_9e7b1a.search\n        \":\" -> replace_9e7b1a.replace\n        replace_9e7b1a.output -> output_7c6e9b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -172, y: 0, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4d5e6f\n\n        instance(x: 0, y: 1) replace_7g8h9i root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_jk0l1m root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_nopqrs root.Std_k98ojb.Strings.Replace {}\n        input_1a2b3c -> replace_7g8h9i.input\n        \" \" -> replace_7g8h9i.search\n        \":\" -> replace_7g8h9i.replace\n        replace_7g8h9i.output -> replace_jk0l1m.input\n        \",\" -> replace_jk0l1m.search\n        \":\" -> replace_jk0l1m.replace\n        replace_jk0l1m.output -> replace_nopqrs.input\n        \".\" -> replace_nopqrs.search\n        \":\" -> replace_nopqrs.replace\n        replace_nopqrs.output -> output_4d5e6f\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_tuvwx root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -123, y: 0, name: \"input\") property(String) input_2a1f9d\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_4b8e7c\n\n        instance(x: 0, y: 1) replace_5f6c3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9a3d2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_7e8b4d root.Std_k98ojb.Strings.Replace {}\n        input_2a1f9d -> replace_5f6c3c.input\n        \" \" -> replace_5f6c3c.search\n        \":\" -> replace_5f6c3c.replace\n        replace_5f6c3c.output -> replace_9a3d2f.input\n        \",\" -> replace_9a3d2f.search\n        \":\" -> replace_9a3d2f.replace\n        replace_9a3d2f.output -> replace_7e8b4d.input\n        \".\" -> replace_7e8b4d.search\n        \":\" -> replace_7e8b4d.replace\n        replace_7e8b4d.output -> output_4b8e7c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_9f3a5f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -172, y: 0, name: \"input\") property(String) input_9f1d5a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4e8c3b\n\n        instance(x: 0, y: 1) replace_7b6b1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5a9d2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_3c4e8f root.Std_k98ojb.Strings.Replace {}\n        input_9f1d5a -> replace_7b6b1f.input\n        \" \" -> replace_7b6b1f.search\n        \":\" -> replace_7b6b1f.replace\n        replace_7b6b1f.output -> replace_5a9d2f.input\n        \",\" -> replace_5a9d2f.search\n        \":\" -> replace_5a9d2f.replace\n        replace_5a9d2f.output -> replace_3c4e8f.input\n        \".\" -> replace_3c4e8f.search\n        \":\" -> replace_3c4e8f.replace\n        replace_3c4e8f.output -> output_4e8c3b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_9a5d7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -172, y: 0, name: \"input\") property(String) input_9a1b6f\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_8e3d7c\n\n        instance(x: 221, y: 0) replace_5a4f3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: -32) replace_9e1e2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: -64) replace_6d8b7c root.Std_k98ojb.Strings.Replace {}\n        input_9a1b6f -> replace_5a4f3c.input\n        \" \" -> replace_5a4f3c.search\n        \":\" -> replace_5a4f3c.replace\n        replace_5a4f3c.output -> replace_9e1e2f.input\n        \",\" -> replace_9e1e2f.search\n        \":\" -> replace_9e1e2f.replace\n        replace_9e1e2f.output -> replace_6d8b7c.input\n        \".\" -> replace_6d8b7c.search\n        \":\" -> replace_6d8b7c.replace\n        replace_6d8b7c.output -> output_8e3d7c\n    }\n\n    \n\n    instance(x: -138, y: 30) replace_spaces_commas_dots_with_colon_aad0c2 root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -156, y: 0, name: \"input\") property(String) input_9f1d6a\n\n        out(x: 340, y: -2, name: \"output\") property(String) output_7e8b5c\n\n        instance(x: 772, y: 76) replace_4a3b0f root.Std_k98ojb.Strings.Replace {}\n        input_9f1d6a -> replace_4a3b0f.input\n        \" ,.\" -> replace_4a3b0f.search\n        \":\" -> replace_4a3b0f.replace\n        replace_4a3b0f.output -> output_7e8b5c\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_chars_e9d1a2 root.main.replace_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -122, y: 0, name: \"input\") property(String) input_9a3f6d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_7e1c5b\n\n        instance(x: 0, y: 1) replace_4a8d5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9a3f6d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c7c8e1 root.Std_k98ojb.Strings.Replace {}\n        replace_4a8d5f.output -> replace_9a3f6d.input\n        \" \" -> replace_4a8d5f.search\n        \":\" -> replace_4a8d5f.replace\n        input_9a3f6d -> replace_4a8d5f.input\n        \",\" -> replace_9a3f6d.search\n        replace_9a3f6d.output -> replace_c7c8e1.input\n        \".\" -> replace_9a3f6d.replace\n        \":\" -> replace_9a3f6d.replace\n        replace_c7c8e1.output -> output_7e1c5b\n        \",\" -> replace_c7c8e1.search\n        \":\" -> replace_c7c8e1.replace\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_3f4d2a root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -144, y: 0, name: \"input\") property(String) input_1a2f6e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5c9b8d\n\n        instance(x: 0, y: 1) replace_3e7d4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6f7a2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_b9f8e5 root.Std_k98ojb.Strings.Replace {}\n        input_1a2f6e -> replace_3e7d4c.input\n        \" \" -> replace_3e7d4c.search\n        \":\" -> replace_3e7d4c.replace\n        replace_3e7d4c.output -> replace_6f7a2d.input\n        \",\" -> replace_6f7a2d.search\n        \":\" -> replace_6f7a2d.replace\n        replace_6f7a2d.output -> replace_b9f8e5.input\n        \".\" -> replace_b9f8e5.search\n        \":\" -> replace_b9f8e5.replace\n        replace_b9f8e5.output -> output_5c9b8d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_7a4f2 root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -316, y: 30, name: \"input\") property(String) input_8f1e9d\n\n        out(x: 1014, y: 24, name: \"output\") property(Bool) output_7c0a6b\n\n        instance(x: -165, y: 31) characters_5b2b3c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 288, y: 23) uniquelist_9f8d1e root.Std_k98ojb.List.UniqueList {}\n        instance(x: 592, y: 24) length_6a4b5a root.Std_k98ojb.List.Length {}\n        instance(x: 808, y: 25) equal_3c7b0c root.Std_k98ojb.Logic.Equal {}\n        characters_5b2b3c.characters -> uniquelist_9f8d1e.list\n        uniquelist_9f8d1e.uniqueList -> length_6a4b5a.list\n        1 -> equal_3c7b0c.right\n        length_6a4b5a.length -> equal_3c7b0c.left\n        equal_3c7b0c.result -> output_7c0a6b\n        input_8f1e9d -> characters_5b2b3c.input\n    }\n\n    \n\n    instance(x: -91, y: 139) is_same_4a1d5f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -297, y: 0, name: \"input\") property(String) input_1a9f3e\n\n        out(x: 557, y: 5, name: \"output\") property(Bool) output_8b7c2d\n\n        instance(x: -95, y: 14) characters_4a0f6c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 15) length_3e9f1f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 16) equal_7d5c2f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 574, y: -6) contains_8a4b0c root.Std_k98ojb.Strings.Contains {}\n        characters_4a0f6c.characters -> length_3e9f1f.list\n        input_1a9f3e -> characters_4a0f6c.input\n        2 -> equal_7d5c2f.right\n        length_3e9f1f.length -> equal_7d5c2f.left\n        contains_8a4b0c.contains -> output_8b7c2d\n        characters_4a0f6c.characters -> contains_8a4b0c.list\n        input_1a9f3e -> contains_8a4b0c.input\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_5f7b2d root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -284, y: 0, name: \"input\") property(String) input_9a3e4f\n\n        out(x: 557, y: 5, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -95) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        input_9a3e4f -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        input_9a3e4f -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_ac7dfb root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -290, y: 0, name: \"input\") property(String) input_9e1f8d\n\n        out(x: 557, y: 5, name: \"output\") property(Bool) output_7c2a6b\n\n        instance(x: -92, y: 30) characters_c3e0cc root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 35) length_1d9f8f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 40) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -92, y: -95) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        input_9e1f8d -> characters_c3e0cc.input\n        characters_c3e0cc.characters -> length_1d9f8f.list\n        1 -> equal_f89569.right\n        length_1d9f8f.length -> equal_f89569.left\n        characters_c3e0cc.characters -> intersection_c7c7e6.left\n        characters_c3e0cc.characters -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        1 -> equal_f89569.right\n        length_8166b0.length -> equal_f89569.left\n        equal_f89569.result -> output_7c2a6b\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_a5e8f9 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -288, y: 0, name: \"input\") property(String) input_8e9f1d\n\n        out(x: 1006, y: 2, name: \"output\") property(Bool) output_eb4c7a\n\n        instance(x: -137, y: 3, name: \"get characters\") characters_5b0f4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 341, y: 2) allmatch_1d9e6a root.Std_k98ojb.Strings.AllMatchesWithRange {\n            pattern: \"(.)\\\\1*\"\n        }\n        instance(x: 577, y: -3) length_5c0f4f root.Std_k98ojb.List.Length {}\n        instance(x: 792, y: 2) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        input_8e9f1d -> characters_5b0f4f.input\n        allmatch_1d9e6a.matches -> length_5c0f4f.list\n        length_5c0f4f.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_eb4c7a\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -296, y: 0, name: \"input\") property(String) input_8f3a2e\n\n        out(x: 557, y: 55, name: \"output\") property(Bool) output_7b4c5d\n\n        instance(x: -164, y: 54) characters_9e1e0f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 53) length_6a3c2c root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 52) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 575, y: -1) firstitem_5f7d8e root.Std_k98ojb.List.FirstItem {}\n        instance(x: 760, y: 54) contains_32727d root.Std_k98ojb.List.Contains {}\n        input_8f3a2e -> characters_9e1e0f.input\n        length_6a3c2c.list -> characters_9e1e0f.characters\n        firstitem_5f7d8e.list -> contains_32727d.list\n        characters_9e1e0f.characters -> firstitem_5f7d8e.list\n        length_6a3c2c.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        contains_32727d.is_contained -> equal_f89569.result\n        characters_9e1e0f.characters -> contains_32727d.list\n        firstitem_5f7d8e.item -> contains_32727d.item\n        equal_f89569.result -> output_7b4c5d\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_a3a1a9 root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -286, y: 0, name: \"input\") property(String) input_8e9f5d\n\n        out(x: 554, y: 29, name: \"output\") property(Bool) output_1b7a3c\n\n        instance(x: -93, y: 28) characters_4b0e6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 27) length_5d2c9f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 26) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 575, y: -1) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 784, y: 28) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 998, y: 27) equal_f89569_2 root.Std_k98ojb.Logic.Equal {}\n        input_8e9f5d -> characters_4b0e6f.input\n        characters_4b0e6f.characters -> length_5d2c9f.list\n        1 -> length_8166b0.list\n        intersection_c7c7e6.left -> length_5d2c9f.length\n        intersection_c7c7e6.right -> length_8166b0.length\n        characters_4b0e6f.characters -> intersection_c7c7e6.left\n        equal_f89569.result -> output_1b7a3c\n        length_5d2c9f.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        length_8166b0.length -> equal_f89569_2.left\n        intersection_c7c7e6.intersection -> equal_f89569_2.right\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_a5a9d1 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -275, y: 0, name: \"input\") property(String) input_8f3a1e\n\n        out(x: 1215, y: 20, name: \"output\") property(Bool) output_7c2d9b\n\n        instance(x: -124, y: 15, name: \"characters\") characters_4b6c0f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 334, y: 20) length_5a3e8c root.Std_k98ojb.List.Length {}\n        instance(x: 549, y: 19) ifexpression_7d1c2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 229, y: 97, name: \"getter_5e9a6f\") getter_5e9a6f = previous\n        setter(x: 482, y: -31, name: \"setter_8c1d7b\") setter_8c1d7b = previous\n        instance(x: 211, y: -17) for_2f3f0c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -117, name: \"setter_8c1d7b\") setter_d5e4a9 = previous\n        instance(x: -275, y: -32) getat_6a2b3f root.Std_k98ojb.List.GetAt {}\n        ifexpression_7d1c2f.else -> output_7c2d9b\n        ifexpression_7d1c2f.value -> setter_8c1d7b.execute\n        characters_4b6c0f.characters -> for_2f3f0c.items\n        for_2f3f0c.item -> ifexpression_7d1c2f.gen_2\n        for_2f3f0c.index -> ifexpression_7d1c2f.gen_0\n        getter_5e9a6f.value -> ifexpression_7d1c2f.gen_1\n        for_2f3f0c.onItem -> ifexpression_7d1c2f.execute\n        for_2f3f0c.done -> output_7c2d9b\n        for_2f3f0c.item -> setter_8c1d7b.new_value\n        characters_4b6c0f.characters -> getat_6a2b3f.list\n        0 -> getat_6a2b3f.index\n        getat_6a2b3f.itemAtIndex -> setter_d5e4a9.new_value\n        input_8f3a1e -> characters_4b6c0f.input\n        length_5a3e8c.list -> for_2f3f0c.items\n        input_8f3a1e -> getat_6a2b3f.list\n        setter_d5e4a9.continue -> for_2f3f0c.reset\n        setter_8c1d7b.continue -> for_2f3f0c.next\n    }\n\n    \n\n    instance(x: 10, y: -177) check_same_f6e7d9 root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -285, y: -86, name: \"string\") property(String) string_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        string_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        string_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -305, y: 5, name: \"input\") property(String) input_1f0a3e\n\n        out(x: 1066, y: 4, name: \"output\") property(Bool) output_9b7c8d\n\n        instance(x: -141, y: 2, name: \"get characters\") characters_5a1f92 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 334, y: 3) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 550, y: -4) firstitem_f9d7c8 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 754, y: 0) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1016, y: 1) not_75283f root.Std_k98ojb.Logic.Not {}\n        characters_5a1f92.characters -> length_6e87f2.list\n        characters_5a1f92.characters -> filter_c91965.items\n        func() {\n            in(x: -26, y: 46, name: \"current\") property(String) current_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            firstitem_f9d7c8.item -> equal_f89569.left\n            current_81298e -> equal_f89569.right\n            equal_f89569.result -> output_efbc78\n        } -> filter_c91965.handler\n        not_75283f.result -> output_9b7c8d\n        length_6e87f2.length -> not_75283f.input\n        filter_c91965.output_list -> not_75283f.input\n        input_1f0a3e -> characters_5a1f92.input\n    }\n\n    \n\n    instance(x: -63, y: 131) is_same_9b8c6d root.main.is_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -30, y: 0) std_split_node root.Std_k98ojb.Strings.Split {}\n        instance(x: 0, y: 0) std_filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(doc: \"checks if the input is a digit.\") check_digit {\n                in(x: 0, y: 0, name: \"item\") property(String) item_ai\n                out(x: 0, y: 0, name: \"is_digit\") property(Bool) is_digit_ai\n\n                instance(x: 0, y: 0) std_is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item_ai -> std_is_numeric_node.input\n                std_is_numeric_node.is_numeric -> is_digit_ai\n            }\n        }\n        instance(x: -30, y: 0) std_count_node root.Std_k98ojb.Count {}\n\n        input_ai -> std_split_node.string\n        std_split_node.strings -> std_filter_node.items\n        std_filter_node.output_list -> std_count_node.items\n        std_count_node.count -> output_ai\n    }\n\n    \n    instance(x: -30, y: 0) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -15, y: 0) split_2a1f8c root.Std_k98ojb.Strings.Split {}\n        instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n        instance(x: 0, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n\n        input_ai -> split_2a1f8c.string\n        \" \" -> split_2a1f8c.split_on\n        split_2a1f8c.strings -> count_digits_node.items\n        count_digits_node.output_list -> std_count_node.count\n        0 -> std_count_node.reset\n        std_count_node.count -> output_ai\n\n    }\n    \n\n    instance(x: -15, y: 0) split_3e25a9 root.Std_k98ojb.Strings.Split {}\n    instance(x: 0, y: 0) count_digits_86117a root.main.count_digits {}\n    instance(x: 0, y: 0) std_count_3e25a9 root.Std_k98ojb.Std.Count {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -25, y: 0) split_node root.Std_k98ojb.Strings.Split {}\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Count {}\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        input_ai -> split_node.string\n        split_node.strings -> filter_7b3b7b.list\n        filter_7b3b7b.result -> count_node.items\n        count_node.count -> output_ai\n    }\n\n    \n    instance(x: 0, y: -38) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -10, y: 0) split_node root.Std_k98ojb.Strings.Split {}\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Count {}\n        instance(x: 0, y: 0) filter_1a2d3c root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        input_ai -> split_node.string\n        split_node.strings -> filter_1a2d3c.list\n        filter_1a2d3c.result -> count_node.items\n        count_node.count -> output_ai\n    }\n\n    \n    instance(x: 0, y: -10) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -10, y: 0) split_node root.Std_k98ojb.Strings.Split {}\n        instance(x: 15, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        instance(x: 15, y: -30) count_node root.Std_k98ojb.Count {}\n\n        input_ai -> split_node.string\n        split_node.strings -> filter_7b3b7b.list\n        filter_7b3b7b.result -> count_node.items\n        count_node.count -> output_ai\n    }\n    \n\n    instance(x: 15, y: -30) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -50, y: 0) split_node root.Std_k98ojb.Strings.Split {}\n        instance(x: 100, y: 0) filter_1c8d9a root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        instance(x: 300, y: 0) count_node root.Std_k98ojb.Count {}\n\n        input_ai -> split_node.string\n        split_node.strings -> filter_1c8d9a.list\n        filter_1c8d9a.result -> count_node.items\n        count_node.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: -50) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -15, y: 0) split_9e3f2a root.Std_k98ojb.Strings.Split {}\n        instance(x: 15, y: 0) filter_8c7d6a root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        instance(x: -15, y: 30) count_9e3f2a root.Std_k98ojb.Count {}\n        input_ai -> split_9e3f2a.string\n        split_9e3f2a.strings -> filter_8c7d6a.list\n        filter_8c7d6a.result -> count_9e3f2a.items\n        count_9e3f2a.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: -38, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -50, y: 0) split_node root.Std_k98ojb.Strings.Split {}\n        instance(x: 200, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        instance(x: 450, y: 0) count_node root.Std_k98ojb.Count {}\n\n        input_ai -> split_node.string\n        split_node.strings -> filter_7b3b7b.list\n        filter_7b3b7b.result -> count_node.items\n        count_node.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: -50) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -20, y: 0) split_node root.Std_k98ojb.Strings.Split {}\n        instance(x: 10, y: 0) filter_1c9a6e root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        instance(x: 30, y: 0) count_node root.Std_k98ojb.Count {}\n\n        input_ai -> split_node.string\n        split_node.strings -> filter_1c9a6e.list\n        filter_1c9a6e.result -> count_node.items\n        count_node.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: -46) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -10, y: 0) split_node root.Std_k98ojb.Strings.Split {}\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Count {}\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        input_ai -> split_node.string\n        split_node.strings -> filter_7b3b7b.list\n        count_node.reset -> split_node.execute\n        filter_7b3b7b.result -> count_node.count\n        count_node.count -> count_node.reset\n        count_node.count -> output_ai\n\n    }\n    \n\n    instance(x: 0, y: -46) count_digits_node root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) pow_4d1e9c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_4d1e9c.second\n        mul_f892a4.result -> pow_4d1e9c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_4d1e9c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_f892a4.second\n        mul_64046c.result -> sum_365f7b\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        expression_2d6da6.result -> mul_64046c.first\n        pow_f892a4.result -> mul_64046c.second\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -290, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4c2e5d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_5e9f7c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_4c2e5d.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_4c2e5d.first\n        pow_4c2e5d.result -> add_5e9f7c.first\n        add_5e9f7c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) pow_1e4d9c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_1e4d9c.second\n        mul_f892a4.result -> pow_1e4d9c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_1e4d9c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -278, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_f892a4.second\n        mul_64046c.result -> sum_365f7b\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_64046c.first\n        pow_f892a4.result -> mul_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -282, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_f892a4.second\n        mul_64046c.result -> sum_365f7b\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        expression_2d6da6.result -> mul_64046c.first\n        pow_f892a4.result -> mul_64046c.second\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_f892a4.second\n        mul_64046c.result -> sum_365f7b\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        expression_2d6da6.result -> mul_64046c.first\n        pow_f892a4.result -> mul_64046c.second\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -280, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_f892a4.second\n        mul_64046c.result -> sum_365f7b\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        expression_2d6da6.result -> mul_64046c.first\n        pow_f892a4.result -> mul_64046c.second\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) pow_9e1c0d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n-3\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 394, y: -339) data_3c713b  = [sum]\n        instance(x: 46, y: -383, name: \"sum\") add_2f0d8e root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> pow_9e1c0d.y\n        expression_2d6da6.result -> pow_9e1c0d.x\n        data_cde0dc -> pow_9e1c0d.power\n        pow_9e1c0d.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        add_2f0d8e.continue -> sum_fourth_power.sum_365f7b\n        data_3c713b -> add_2f0d8e.second\n        pow_9e1c0d.result -> add_2f0d8e.first\n        mul_f892a4.result -> expression_2d6da6.gen_0\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -278, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_f892a4.second\n        mul_64046c.result -> sum_365f7b\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_64046c.first\n        pow_f892a4.result -> mul_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -104, y: 21, name: \"size\") property(Number) size_3f8e1d\n\n        out(x: 1066, y: 17, name: \"surface_area\") property(Number) surface_area_7a4c5b\n\n        instance(x: 12, y: -15) mul_9a0b2f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_3f8e1d -> mul_9a0b2f.first\n        data_cde0dc -> mul_9a0b2f.second\n        mul_9a0b2f.result -> surface_area_7a4c5b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -102, y: 21, name: \"size\") property(Number) size_1a8f9e\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_cbb7bd\n\n        instance(x: 94, y: -105) mul_f0d3b4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_584bfd root.Std_k98ojb.Math.Mul {}\n        size_1a8f9e -> mul_f0d3b4.first\n        6 -> mul_f0d3b4.second\n        mul_f0d3b4.result -> mul_584bfd.first\n        size_1a8j9e -> mul_584bfd.second\n        mul_584bfd.result -> result_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -219, y: 55, name: \"size\") property(Number) size_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        data_cde0dc -> mul_f892a4.first\n        expression_2d6da6.result -> mul_f892a4.second\n        size_3a3116 -> expression_2d6da6.gen_0\n        mul_f892a4.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -101, y: 17, name: \"size\") property(Number) size_1a9e8f\n\n        out(x: 1066, y: 7, name: \"surface_area\") property(Number) surface_area_3c4d5b\n\n        instance(x: 12, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a9e8f -> mul_f892a4.first\n        data_cde0dc -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_3c4d5b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -103, y: 25, name: \"size\") property(Number) size_1a8f3e\n\n        out(x: 1062, y: 24, name: \"surface_area\") property(Number) surface_area_5c6b7d\n\n        instance(x: 15, y: -13) mul_f0e4ba root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a8f3e -> mul_f0e4ba.first\n        data_cde0dc -> mul_f0e4ba.second\n        instance(x: 303, y: 2) mul_7b9d5c root.Std_k98ojb.Math.Mul {}\n        mul_f0e4ba.result -> mul_7b9d5c.first\n        size_1a8f3e -> mul_7b9d5c.second\n        mul_7b9d5c.result -> surface_area_5c6b7d\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_2b4f0f root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: 55, name: \"size\") property(Number) size_9f2e5d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: -105) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_9a9c70  = 6\n        size_9f2e5d -> mul_f892a4.first\n        data_9a9c70 -> mul_f892a4.second\n        instance(x: 303, y: 2) mul_1b7e8c root.Std_k98ojb.Math.Mul {}\n        mul_f892a4.result -> mul_1b7e8c.first\n        size_9f2e5d -> mul_1b7e8c.second\n        mul_1b7e8c.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -102, y: 35, name: \"size\") property(Number) size_1a9f0e\n\n        out(x: 1058, y: 13, name: \"surface_area\") property(Number) surface_area_5b7d3c\n\n        instance(x: 16, y: -6) mul_4b2e5f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a9f0e -> mul_4b2e5f.first\n        data_cde0dc -> mul_4b2e5f.second\n        mul_4b2e5f.result -> surface_area_5b7d3c\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: 55, name: \"size\") property(Number) size_9f5a2d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: -105) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_9a9c70  = 6\n        size_9f5a2d -> mul_f892a4.first\n        data_9a9c70 -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -100, y: 0, name: \"size\") property(Number) size_1a8e3f\n\n        out(x: 0, y: 0, name: \"surface_area\") property(Number) surface_area_7b2d6c\n\n        instance(x: 0, y: -100) mul_5f9b4c root.Std_k98ojb.Math.Mul {}\n        size_1a8e3f -> mul_5f9b4c.first\n        6 -> mul_5f9b4c.second\n        instance(x: 0, y: -200) mul_2d7a1f root.Std_k98ojb.Math.Mul {}\n        mul_5f9b4c.result -> mul_2d7a1f.first\n        size_1a8e3f -> mul_2d7a1f.second\n        mul_2d7a1f.result -> surface_area_7b2d6c\n    }\n\n    \n\n    instance(x: 100, y: -100) cube_surface_area_5f9b4c root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -103, y: 41, name: \"size\") property(Number) size_9e3a2f\n\n        out(x: 1000, y: 43, name: \"surface_area\") property(Number) surface_area_8b7c1d\n\n        instance(x: 10, y: -16) mul_6e4c5c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 316, y: 133) data_cde0dc  = 6\n        size_9e3a2f -> mul_6e4c5c.first\n        data_cde0dc -> mul_6e4c5c.second\n        mul_6e4c5c.result -> surface_area_8b7c1d\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 22, name: \"list\") property(List) list_6a9f1e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        list_6a9f1e -> max_f3b46d.items\n        list_6a9f1e -> min_4d4556.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 10, name: \"list\") property(List) list_0d1f9e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) max_6e87f2 root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_cb50ae root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        max_6e87f2.max -> sub_852f2e.first\n        min_cb50ae.min -> sub_852f2e.second\n        list_0d1f9e -> max_6e87f2.items\n        list_0d1f9e -> min_cb50ae.items\n        sub_852f2e.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 0, name: \"list\") property(List) list_1e3f5a\n\n        out(x: 442, y: 20, name: \"difference\") property(Number) difference_4b9c8d\n\n        instance(x: -10, y: 11) max_2f7b6c root.Std_k98ojb.List.Max {}\n        instance(x: -10, y: -124) min_1e3a0c root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 20) sub_4d8a5f root.Std_k98ojb.Math.Sub {}\n        list_1e3f5a -> max_2f7b6c.items\n        list_1e3f5a -> min_1e3a0c.items\n        max_2f7b6c.max -> sub_4d8a5f.first\n        min_1e3a0c.min -> sub_4d8a5f.second\n        sub_4d8a5f.result -> difference_4b9c8d\n    }\n\n    \n\n    instance(x: 48, y: -11) diff_max_min_2c7d6f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_0f9d8e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) max_6e87f2 root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_cb50ae root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_0f9d8e -> max_6e87f2.items\n        list_0f9d8e -> min_cb50ae.items\n        max_6e87f2.max -> sub_852f2e.first\n        min_cb50ae.min -> sub_852f2e.second\n        sub_852f2e.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 27, name: \"list\") property(List) list_0d9f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        list_0d9f8e -> max_f3b46d.items\n        list_0d9f8e -> min_4d4556.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -35, y: 13, name: \"list\") property(List) list_1a8f2e\n\n        out(x: 440, y: 63, name: \"difference\") property(Number) difference_6c9b0d\n\n        instance(x: -82, y: 155) max_3e4f7c root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -375) min_d5a1aa root.Std_k98ojb.List.Min {}\n        instance(x: 201, y: 62) sub_9d8b0f root.Std_k98ojb.Math.Sub {}\n        list_1a8f2e -> max_3e4f7c.items\n        list_1a8f2e -> min_d5a1aa.items\n        max_3e4f7c.max -> sub_9d8b0f.first\n        min_d5a1aa.min -> sub_9d8b0f.second\n        sub_9d8b0f.result -> difference_6c9b0d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_2e4c7f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_0d9f1e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        list_0d9f1e -> max_f3b46d.items\n        list_0d9f1e -> min_4d4556.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -36, y: 16, name: \"list\") property(List) list_1a8f2e\n\n        out(x: 442, y: 20, name: \"difference\") property(Number) difference_7c9d6b\n\n        instance(x: 0, y: 63) max_5a3b4c root.Std_k98ojb.List.Max {}\n        instance(x: -66, y: -61) min_1f2e8a root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 20) sub_9d7f6b root.Std_k98ojb.Math.Sub {}\n        list_1a8f2e -> max_5a3b4c.items\n        list_1a8f2e -> min_1f2e8a.items\n        max_5a3b4c.max -> sub_9d7f6b.first\n        min_1f2e8a.min -> sub_9d7f6b.second\n        sub_9d7f6b.result -> difference_7c9d6b\n    }\n\n    \n\n    instance(x: 48, y: -37) diff_max_min_5b3e4f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_0d1b5f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        list_0d1b5f -> max_f3b46d.items\n        list_0d1b5f -> min_4d4556.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 20, name: \"list\") property(List) list_1e9b6f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        list_1e9b6f -> max_f3b46d.items\n        list_1e9b6f -> min_4d4556.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 0, name: \"input\") property(Number) input_5f3a9e\n\n        out(x: 1268, y: 1, name: \"output\") property(Bool) output_6c2d7b\n\n        instance(x: 201, y: -4) modulo_f9b0cc root.Std_k98ojb.Math.Modulo {}\n        instance(x: 447, y: 3) notequal_5f1e8a root.Std_k98ojb.Logic.NotEqual {}\n        input_5f3a9e -> modulo_f9b0cc.value\n        2 -> modulo_f9b0cc.divisor\n        modulo_f9b0cc.result -> notequal_5f1e8a.left\n        0 -> notequal_5f1e8a.right\n        not(notequal_5f1e8a.result) -> output_6c2d7b\n    }\n\n    \n\n    instance(x: -3, y: 12) is_even_9c4f2c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 0, name: \"input\") property(Number) input_1a8f9e\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> map_c73e3b.handler\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        [input_1a8f9e] -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -27, y: 2, name: \"input\") property(Number) input_1e3f5d\n        out(x: 189, y: 2, name: \"output\") property(Bool) output_7a9b0c\n\n        instance(x: 42, y: 4) modulo_8f6c6c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 132, y: -1) notequal_5d3e2c root.Std_k98ojb.Logic.NotEqual {}\n        input_1e3f5d -> modulo_8f6c6c.value\n        2 -> modulo_8f6c6c.divisor\n        modulo_8f6c6c.result -> notequal_5d3e2c.left\n        0 -> notequal_5d3e2c.right\n        notequal_5d3e2c.result -> output_7a9b0c\n    }\n\n    \n\n    instance(x: -12, y: -13) is_even_f6f4a8 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 11, name: \"input\") property(Number) input_1e9d8f\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 434, y: 57) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n        input_1e9d8f -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> notequal_cb8a55.left\n        0 -> notequal_cb8a55.right\n        notequal_cb8a55.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 0, name: \"input\") property(Number) input_1a8f5e\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> map_c73e3b.handler\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        [input_1a8f5e] -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -32, y: 2, name: \"input\") property(Number) input_1a0f5e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_1a0f5e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_1a0f5e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_1a0f5e -> expression_9fba8c.gen_0\n        input_1a0f5e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_4e5d0c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_1a9f0e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_1a9f0e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_1a9f0e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_1a9f0e -> expression_9fba8c.gen_0\n        input_1a9f0e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_4e5d0c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -32, y: 2, name: \"input\") property(Number) input_1a0f6e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_1a0f6e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_1a0f6e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_1a0f6e -> expression_9fba8c.gen_0\n        input_1a0f6e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e0d2c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_1a8e5f\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_1a8e5f -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_1a8e5f -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> out_f3db9f\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_1a8e5f -> expression_9fba8c.gen_0\n        input_1a8e5f -> expression_b720d7.gen_0\n        if_e19a62.then -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_4b2b6c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 1, name: \"input\") property(Number) input_9e8a0f\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_9e8a0f -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_9e8a0f -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_9e8a0f -> expression_9fba8c.gen_0\n        input_9e8a0f -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5e2d1c root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5f3b4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7e8a9d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) ``find_7e8a9d_1`` root.Std_k98ojb.Iteration.Find {}\n        characters_5f3b4c.characters -> find_7e8a9d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a6b2f0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3d4a5c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_a6b2f0 -> contains_3d4a5c.input\n            find_7e8a9d.item -> contains_3d4a5c.contains\n            contains_3d4a5c.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_7e8a9d.predicate\n        characters_5f3b4c.characters -> ``find_7e8a9d_1``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a6b2f0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3d4a5c root.Std_k98ojb.Strings.Contains {}\n            current_a6b2f0 -> contains_3d4a5c.input\n            find_7e8a9d.item -> contains_3d4a5c.contains\n            contains_3d4a5c.result -> bool_1eb6e9\n        } -> ``find_7e8a9d_1``.predicate\n        find_7e8a9d.item -> result_0\n        input_0 -> characters_5f3b4c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_09fcba root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated character\") ``characters_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        input_0 -> characters_09fcba.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            find_7e1ce0.item -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``characters_0b1361``.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_09fcba.characters -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        ``characters_0b1361``.items -> characters_09fcba.characters\n        characters_09fcba.characters -> find_7e1ce0.items\n        ``characters_0b1361``.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -288, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3b7c9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5a6d8e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) ``find_5a6d8e_1`` root.Std_k98ojb.Iteration.Find {}\n        characters_3b7c9f.input -> find_5a6d8e.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) ``contains_d42dce_0`` root.Std_k98ojb.Iteration.Filter {}\n            current_afd5b1 -> contains_d42dce.input\n            find_5a6d8e.item -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``find_5a6d8e_1``.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) ``contains_d42dce_0`` root.Std_k98ojb.Iteration.Filter {}\n            current_afd5b1 -> contains_d42dce.input\n            find_5a6d8e.item -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``contains_d42dce_0``.handler\n        characters_3b7c9f.characters -> ``contains_d42dce_0``.items\n        ``contains_d42dce_0``.output_list -> find_5a6d8e.items\n        input_0 -> characters_3b7c9f.input\n        find_5a6d8e.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_09fcba root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated character\") ``characters_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        input_0 -> characters_09fcba.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            find_7e1ce0.item -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``characters_0b1361``.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_09fcba.characters -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        ``characters_0b1361``.items -> characters_09fcba.characters\n        characters_09fcba.characters -> find_7e1ce0.items\n        ``characters_0b1361``.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_09fcba root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated character\") ``characters_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        input_0 -> characters_09fcba.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            find_7e1ce0.item -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``characters_0b1361``.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_09fcba.characters -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        ``characters_0b1361``.items -> characters_09fcba.characters\n        characters_09fcba.characters -> find_7e1ce0.items\n        ``characters_0b1361``.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5f8b3c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7a9d6e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 531, y: -2) ``find_7a9d6e_1`` root.Std_k98ojb.Iteration.Find {}\n        characters_5f8b3c.input -> find_7a9d6e.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2f0c7a root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_2f0c7a.input\n            find_7a9d6e.item -> contains_2f0c7a.contains\n            contains_2f0c7a.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_7a9d6e.predicate\n        characters_5f8b3c.input -> ``find_7a9d6e_1``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2f0c7a root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_2f0c7a.input\n            find_7a9d6e.item -> contains_2f0c7a.contains\n            contains_2f0c7a.result -> bool_1eb6e9\n        } -> ``find_7a9d6e_1``.predicate\n        find_7a9d6e.item -> result_0\n        input_0 -> characters_5f8b3c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_7f1c9e root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_2d0a4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"filter\") filter_7e1ce0 root.Std_k98ojb.Iteration.Filter {}\n        input_0 -> characters_2d0a4f.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_2d0a4f.characters -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> filter_7e1ce0.handler\n        characters_2d0a4f.characters -> filter_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_7f1c9e.predicate\n        filter_7e1ce0.output_list -> find_7f1c9e.items\n        find_7f1c9e.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -279, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5f8b9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3a4d6e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) ``find_3a4d6e_1`` root.Std_k98ojb.Iteration.Find {}\n        characters_5f8b9c.input -> find_3a4d6e.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3a4f7c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_3a4f7c.input\n            find_3a4d6e.item -> contains_3a4f7c.contains\n            contains_3a4f7c.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_3a4d6e.predicate\n        characters_5f8b9c.input -> ``find_3a4d6e_1``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3a4f7c root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_3a4f7c.input\n            find_3a4d6e.item -> contains_3a4f7c.contains\n            contains_3a4f7c.result -> bool_1eb6e9\n        } -> ``find_3a4d6e_1``.predicate\n        input_0 -> characters_5f8b9c.input\n        find_3a4d6e.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_7f3c9e root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_1a8d0c root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated character\") ``characters_1a8d0c`` root.Std_k98ojb.Iteration.Find {}\n        input_0 -> characters_1a8d0c.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_ae7f6e\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2b3c0a root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_ae7f6e -> contains_2b3c0a.contains\n            find_7f3c9e.items -> contains_2b3c0a.input\n            contains_2b3c0a.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_7f3c9e.predicate\n        characters_1a8d0c.characters -> find_7f3c9e.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_ae7f6e\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2b3c0a root.Std_k98ojb.Strings.Contains {}\n            current_ae7f6e -> contains_2b3c0a.contains\n            ``characters_1a8d0c``.items -> contains_2b3c0a.input\n            contains_2b3c0a.result -> bool_1eb6e9\n        } -> ``characters_1a8d0c``.predicate\n        characters_1a8d0c.characters -> ``characters_1a8d0c``.items\n        find_7f3c9e.item -> output_ebef81\n        ``characters_1a8d0c``.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"characters\") characters_1a9d4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"first repeated character\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_1a9d4f.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) substring_7c8f2a root.Std_k98ojb.Strings.Substring {}\n            instance(x: 415, y: 86) contains_d42dce_0 root.Std_k98ojb.Strings.Contains {}\n            input_0 -> substring_7c8f2a.input\n            substring_7c8f2a.start -> substring_7c8f2a.end\n            current_afd5b1 -> substring_7c8f2a.start\n            substring_7c8f2a.substring -> contains_d42dce_0.input\n            current_afd5b1 -> contains_d42dce_0.contains\n            contains_d42dce_0.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        input_0 -> characters_1a9d4f.input\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -20, y: 57) min_9a3f1c root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_9a3f1c.items\n            min_9a3f1c.min -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -113, y: 34) min_7e9f1c root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_7e9f1c.items\n            min_7e9f1c.min -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.result\n            notequal_807ffd.right -> modulo_1088d5.result\n            0 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -288, y: -0, name: \"list\") property(List) list_9f6a1e\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -112, y: -60, name: \"index\") property(Number) index_7c8d3e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -2, y: -66) greaterthan_1e9f4a root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: 0, y: -83) and_7c8d3e root.Std_k98ojb.Logic.And {}\n\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n\n            index_7c8d3e -> greaterthan_1e9f4a.right\n            0 -> greaterthan_1e9f4a.left\n\n            notequal_807ffd.result -> and_7c8d3e.left\n            greaterthan_1e9f4a.result -> and_7c8d3e.right\n\n            and_7c8d3e.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f6a1e -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -1, y: 0) min_7e6f9c root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_7e6f9c.items\n            min_7e6f9c.min -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.result\n            notequal_807ffd.right -> modulo_1088d5.result\n            0 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -12, y: 59) min_9e7f1c root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_9e7f1c.items\n            min_9e7f1c.min -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.result\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: -0, name: \"list\") property(List) list_9e4f6a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: -74, name: \"index\") property(Number) index_8e4c1a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -109, y: -111) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            func() {\n                in(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = bool\n                setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = bool\n                setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = bool\n\n                getter_9cceb3.value -> bool_af09a7\n                ifexpression_e38995.then -> setter_1cedb2.execute\n                true -> setter_1cedb2.new_value\n                ifexpression_e38995.else -> setter_37db7f.execute\n                false -> setter_37db7f.new_value\n            }\n            0 -> notequal_807ffd.right\n            index_8e4c1a -> notequal_807ffd.left\n            notequal_807ffd.result -> ifexpression_e38995.gen_0\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            modulo_1088d5.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9e4f6a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -1, y: 0) min_2c9f4a root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_2c9f4a.items\n            min_2c9f4a.min -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            modulo_1088d5.divisor -> number_3bc2ae\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: -0, name: \"list\") property(List) list_9a4f1e\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -1, y: 0) min_2c9e3f root.Std_k98ojb.List.Min {}\n            list_9a4f1e -> min_2c9e3f.items\n            min_2c9e3f.min -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9a4f1e -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -1, y: 0) min_2a9f4c root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_2a9f4c.items\n            min_2a9f4c.min -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.result\n            notequal_807ffd.right -> modulo_1088d5.result\n            min_2a9f4c.min -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -4, y: 57) min_7e3c6f root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_7e3c6f.items\n            min_7e3c6f.min -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.result\n            notequal_807ffd.right -> modulo_1088d5.result\n            0 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_MANY_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 16000,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -341, y: -217, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -343, y: 20, name: \"list2\") property(List) list2_5b4c6d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -1, y: -35) intersection_c9e4c2 root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2f9e -> intersection_c9e4c2.left\n        list2_5b4c6d -> intersection_c9e4c2.right\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"intersection.length > 0\"\n        }\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        intersection_c9e4c2.intersection -> ifexpression_875761.gen_0\n        instance(x: -275, y: -35) length_3f8b1d root.Std_k98ojb.List.Length {}\n        length_3f8b1d.list -> intersection_c9e4c2.intersection\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_fc79d5 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -463, y: -235, name: \"list1\") property(List) list1_9e3b8f\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_6c0d5a\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_4f1c9e\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_4f1c9e\n        ifexpression_875761.value -> output_4f1c9e\n        list1_9e3b8f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_6c0d5a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_d26972.done -> output_4f1c9e\n        for_d26972.item -> setter_9d4f1c.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_3b5a2f root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -457, y: -236, name: \"list1\") property(List) list1_9a2f6b\n        in(x: -469, y: 29, name: \"list2\") property(List) list2_7c3e8d\n\n        out(x: 1225, y: 4, name: \"output\") property(Bool) output_0f1a9b\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_0f1a9b\n        ifexpression_875761.value -> output_0f1a9b\n        list1_9a2f6b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_7c3e8d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        list1_9a2f6b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_7c3e8d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_5f9b3c root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_9f0b5e\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_7a8c3d\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_6f1b4d\n\n        instance(x: 752, y: 93) intersection_9e0c4f root.Std_k98ojb.Sets.Intersection {}\n        list1_9f0b5e -> intersection_9e0c4f.left\n        list2_7a8c3d -> intersection_9e0c4f.right\n        instance(x: 321, y: -20) notempty_6b3f8a root.Std_k98ojb.List.NotEmpty {}\n        intersection_9e0c4f.intersect -> notempty_6b3f8a.list\n        notempty_6b3f8a.is_not_empty -> output_6f1b4d\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_5c7f9e root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -457, y: -235, name: \"list1\") property(List) list1_9a8b3f\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_7c6e0d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_4e9f1c\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_3b9a2f\n\n        instance(x: -275, y: -35) getat_6d7c5f root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_8e1b4f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_8e5b3a root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: 752, y: -35) contains_6f2a8f root.Std_k98ojb.List.Contains {}\n        ifexpression_8e1b4f.else -> continue_4e9f1c\n        ifexpression_8e1b4f.value -> output_3b9a2f\n        ifexpression_8e1b4f.then -> setter_9d4f1c.execute\n        list1_9a8b3f -> for_8e5b3a.items\n        for_8e5b3a.item -> contains_6f2a8f.item\n        list2_7c6e0d -> contains_6f2a8f.list\n        contains_6f2a8f.is_contained -> ifexpression_8e1b4f.input\n        for_8e5b3a.item -> ifexpression_8e1b4f.gen_2\n        for_8e5b3a.index -> ifexpression_8e1b4f.gen_0\n        getter_b280eb.value -> ifexpression_8e1b4f.gen_1\n        for_8e5b3a.onItem -> ifexpression_8e1b4f.execute\n        for_8e5b3a.done -> continue_4e9f1c\n        for_8e5b3a.item -> setter_9d4f1c.new_value\n        list2_7c6e0d -> getat_6d7c5f.list\n        0 -> getat_6d7c5f.index\n        getat_6d7c5f.itemAtIndex -> setter_38e107.new_value\n        continue_4e9f1c -> setter_38e107.continue\n        setter_38e107.continue -> for_8e5b3a.reset\n        setter_9d4f1c.continue -> for_8e5b3a.next\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_7b6f2f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -464, y: -230, name: \"list1\") property(List) list1_9e3f6d\n        in(x: -465, y: 30, name: \"list2\") property(List) list2_8a7c4b\n\n        out(x: 1225, y: 5, name: \"continue\") trigger() continue_0a9f1f\n        out(x: 1216, y: 147, name: \"output\") property(Bool) output_e3e5d2\n\n        instance(x: -275, y: -35) getat_8b4c7c root.Std_k98ojb.List.GetAt {}\n        instance(x: 321, y: -20) for_9a0f1c root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: 93) ifexpression_e5d3e6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_1f7c2a\") getter_1f7c2a = previous\n        setter(x: 679, y: -313, name: \"setter_e9b5e6\") setter_e9b5e6 = previous\n        instance(x: 1228, y: 93) ifexpression_4d3b0f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 1211, y: 160, name: \"getter_5e9c2a\") getter_5e9c2a = previous\n        setter(x: 1556, y: -313, name: \"setter_8f4b7d\") setter_8f4b7d = previous\n\n        ifexpression_e5d3e6.else -> continue_0a9f1f\n        ifexpression_e5d3e6.value -> output_e3e5d2\n        ifexpression_e5d3e6.then -> setter_e9b5e6.execute\n        list1_9e3f6d -> for_9a0f1c.items\n        for_9a0f1c.item -> ifexpression_e5d3e6.gen_2\n        for_9a0f1c.index -> ifexpression_e5d3e6.gen_0\n        getter_1f7c2a.value -> ifexpression_e5d3e6.gen_1\n        for_9a0f1c.onItem -> ifexpression_e5d3e6.execute\n        for_9a0f1c.done -> continue_0a9f1f\n        for_9a0f1c.item -> setter_e9b5e6.new_value\n        list2_8a7c4b -> getat_8b4c7c.list\n        0 -> getat_8b4c7c.index\n        getat_8b4c7c.itemAtIndex -> setter_e9b5e6.old_value\n        ifexpression_4d3b0f.else -> continue_0a9f1f\n        ifexpression_4d3b0f.value -> output_e3e5d2\n        ifexpression_4d3b0f.then -> setter_8f4b7d.execute\n        list2_8a7c4b -> for_9a0f1c.items\n        for_9a0f1c.item -> ifexpression_4d3b0f.gen_2\n        for_9a0f1c.index -> ifexpression_4d3b0f.gen_0\n        getter_5e9c2a.value -> ifexpression_4d3b0f.gen_1\n        for_9a0f1c.onItem -> ifexpression_4d3b0f.execute\n        for_9a0f1c.done -> continue_0a9f1f\n        for_9a0f1c.item -> setter_8f4b7d.new_value\n        list1_9e3f6d -> getat_8b4c7c.list\n        0 -> getat_8b4c7c.index\n        getat_8b4c7c.itemAtIndex -> setter_8f4b7d.old_value\n        setter_e9b5e6.continue -> for_9a0f1c.reset\n        setter_8f4b7d.continue -> for_9a0f1c.next\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_2e3c5c root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -482, y: -214, name: \"list1\") property(List) list1_0e9b5f\n        in(x: -486, y: 30, name: \"list2\") property(List) list2_8c7d3a\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_4e6b1e\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_9f0c2f\n\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: 752, y: -203) contains_32727d root.Std_k98ojb.List.Contains {}\n        ifexpression_875761.else -> continue_4e6b1e\n        ifexpression_875761.value -> output_9f0c2f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_0e9b5f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_4e6b1e\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_8c7d3a -> contains_32727d.list\n        for_d26972.item -> contains_32727d.item\n        contains_32727d.is_contained -> ifexpression_875761.input\n        list1_0e9b5f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_7a8b3f root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -463, y: -235, name: \"list1\") property(List) list1_9e3f5d\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_7a4c0b\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_8f6e1c\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_9d3f2c\n\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: -35) ifexpression_8e3a0f root.Std_k98ojb.Std.IfExpression {\n            expression: \"contains\"\n        }\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        ifexpression_8e3a0f.then -> continue_8f6e1c\n        ifexpression_8e3a0f.value -> output_9d3f2c\n        list1_9e3f5d -> for_d26972.items\n        for_d26972.item -> ifexpression_8e3a0f.gen_0\n        list2_7a4c0b -> contains_6c9c2c.list\n        for_d26972.item -> contains_6c9c2c.item\n        contains_6c9c2c.is_contained -> ifexpression_8e3a0f.gen_1\n        for_d26972.onItem -> ifexpression_8e3a0f.execute\n        for_d26972.done -> continue_8f6e1c\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_7b4d5f root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -435, y: -218, name: \"list1\") property(List) list1_4a2e6f\n        in(x: -441, y: 29, name: \"list2\") property(List) list2_7c0b5d\n\n        out(x: 1269, y: 10, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        list1_4a2e6f -> for_d26972.items\n        for_d26972.item -> contains_32727d.item\n        for_d26972.onItem -> contains_32727d.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.index -> getat_ce2a48.index\n        list2_7c0b5d -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> contains_32727d.list\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_7a4dad root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -475, y: -216, name: \"list1\") property(List) list1_3a0f6e\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_7c4d5b\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_38e107.execute\n        list1_3a0f6e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        list2_7c4d5b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        for_d26972.item -> contains_9f3b1c.list\n        contains_9f3b1c.is_contained -> ifexpression_875761.input\n        contains_9f3b1c.item -> for_d26972.item\n        setter_38e107.continue -> for_d26972.reset\n        setter_38e107.execute -> getat_ce2a48.trigger\n        setter_38e107.new_value -> contains_9f3b1c.item\n        ifexpression_875761.value -> output_5bbcd7\n        continue_a96db6 -> output_5bbcd7\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_8d0e2a root.main.has_common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -535, y: 3, name: \"list\") property(List) list_2f1a9e\n\n        out(x: 1265, y: -6, name: \"output\") property(Bool) output_7c4b0d\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_2f1a9e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_2f1a9e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_5a3b7f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -526, y: 3, name: \"list\") property(List) list_1a8f2e\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c5b6d\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_1a8f2e -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name=\"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name=\"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_7c5b6d\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_3a4dad root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -515, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -529, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -521, y: 2, name: \"list\") property(List) list_4f8a1e\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7b6c5d\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_4f8a1e -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_7b6c5d\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_1a8e3f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -526, y: 4, name: \"list\") property(List) list_1f0a2e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_8c3d9b\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_6a4d92\n\n        instance(x: 752, y: 93) ifexpression_7e1f0c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_ea3d5f\") getter_ea3d5f = previous\n        setter(x: 679, y: -313, name: \"setter_7b9c8e\") setter_7b9c8e = previous\n        instance(x: 321, y: -20) for_6f1b2c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7b9c8e\") setter_e3a4d5 = previous\n        instance(x: -275, y: -35) getat_1a6f3c root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e1f0c.else -> continue_8c3d9b\n        ifexpression_7e1f0c.value -> output_6a4d92\n        ifexpression_7e1f0c.then -> setter_7b9c8e.execute\n        list_1f0a2e -> for_6f1b2c.items\n        for_6f1b2c.item -> ifexpression_7e1f0c.gen_2\n        for_6f1b2c.index -> ifexpression_7e1f0c.gen_0\n        getter_ea3d5f.value -> ifexpression_7e1f0c.gen_1\n        for_6f1b2c.onItem -> ifexpression_7e1f0c.execute\n        for_6f1b2c.done -> continue_8c3d9b\n        for_6f1b2c.item -> setter_7b9c8e.new_value\n        list_1f0a2e -> getat_1a6f3c.list\n        0 -> getat_1a6f3c.index\n        getat_1a6f3c.itemAtIndex -> setter_e3a4d5.new_value\n    }\n\n    \n\n    instance(x: -10, y: -177) is_consecutive_9e8b2f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -489, y: 3, name: \"list\") property(List) list_1a8f9e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_6c2b4d\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_3e0b0d\n\n        instance(x: 752, y: 93) ifexpression_7a5f1f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_9c3d2e\") getter_9c3d2e = previous\n        setter(x: 679, y: -313, name: \"setter_8b5f7a\") setter_8b5f7a = previous\n        instance(x: 321, y: -20) for_6a1b4c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_8b5f7a\") setter_3e9d2f = previous\n        instance(x: -275, y: -35) getat_6f1b4c root.Std_k98ojb.List.GetAt {}\n        ifexpression_7a5f1f.else -> continue_6c2b4d\n        ifexpression_7a5f1f.value -> output_3e0b0d\n        ifexpression_7a5f1f.then -> setter_8b5f7a.execute\n        list_1a8f9e -> for_6a1b4c.items\n        for_6a1b4c.item -> ifexpression_7a5f1f.gen_2\n        for_6a1b4c.index -> ifexpression_7a5f1f.gen_0\n        getter_9c3d2e.value -> ifexpression_7a5f1f.gen_1\n        for_6a1b4c.onItem -> ifexpression_7a5f1f.execute\n        for_6a1b4c.done -> continue_6c2b4d\n        for_6a1b4c.item -> setter_8b5f7a.new_value\n        list_1a8f9e -> getat_6f1b4c.list\n        0 -> getat_6f1b4c.index\n        getat_6f1b4c.itemAtIndex -> setter_3e9d2f.new_value\n        execute_90aaec -> setter_3e9d2f.execute\n        setter_3e9d2f.continue -> for_6a1b4c.reset\n        setter_8b5f7a.continue -> for_6a1b4c.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_5f3d0a root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_1f8e3a\n\n        out(x: 1269, y: -5, name: \"output\") property(Bool) output_7c4d0b\n\n        instance(x: -303, y: -6, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -8) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -5, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: 1) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: 46, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 202, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 166, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 173) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 168) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_1f8e3a -> filter_c91965.items\n        func() {\n            in(x: -192, y: 62, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: 48, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: 53) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: 55) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_7c4d0b\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: 59) is_consecutive_7a4dad root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -475, y: 20, name: \"list1\") property(List) list1_5a3f9d\n        in(x: -476, y: -145, name: \"list2\") property(List) list2_6e4b8c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -271, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_5a3f9d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_6e4b8c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -525, y: 20, name: \"sublist\") property(List) sublist_1e8a9f\n        in(x: -526, y: -165, name: \"list\") property(List) list_3c2b5d\n\n        out(x: 1110, y: -125, name: \"output\") property(Bool) output_7f4f6f\n\n        instance(x: -305, y: -122, name: \"find sublist in list\") find_1a8e8f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -30, y: 24, name: \"current\") property(List) current_5d9c4e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_1f9c0d root.Std_k98ojb.List.Contains {}\n            sublist_1e8a9f -> contains_1f9c0d.list\n            current_5d9c4e -> contains_1f9c0d.item\n            contains_1f9c0d.is_contained -> output_efbc78\n        } -> find_1a8e8f.predicate\n        list_3c2b5d -> find_1a8e8f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) slice_9f7c1d root.Std_k98ojb.List.Slice {}\n            instance(x: 285, y: -25) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> slice_9f7c1d.list\n            _index_769593 -> slice_9f7c1d.start\n            sublist_1e8a9f.Length() + _index_769593 -> slice_9f7c1d.end\n            slice_9f7c1d.slice -> equal_f89569.left\n            sublist_1e8a9f -> equal_f89569.right\n            equal_f89569.result -> bool_4524be\n        } -> find_1a8e8f.handler\n        0 -> find_1a8e8f.context\n        find_1a8e8f.item -> output_7f4f6f\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_3c2b5d root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -275, y: 5, name: \"sublist\") property(List) sublist_1e8f6d\n        in(x: -272, y: -140, name: \"list\") property(List) list_7c2b4a\n\n        out(x: 1040, y: -128, name: \"output\") property(Bool) output_9f3c5e\n\n        instance(x: -55, y: -127) find_1d6b8c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: 0, y: -25, name: \"current\") property(List) current_7a9f2f\n            in(x: 0, y: 50, name: \"_index\") property(Number) _index_6c3d4e\n\n            out(x: 695, y: 24, name: \"output\") property(Bool) output_eb8c1f\n\n            instance(x: 224, y: 31) contains_7a2a0f root.Std_k98ojb.List.Contains {}\n            sublist_1e8f6d -> contains_7a2a0f.list\n            current_7a9f2f -> contains_7a2a0f.item\n            contains_7a2a0f.is_contained -> output_eb8c1f\n        } -> find_1d6b8c.predicate\n        func() {\n            in(x: -30, y: 79, name: \"_index\") property(Number) _index_5e9e4f\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_3a7d1b\n\n            instance(x: 226, y: 56) slice_6c0c8f root.Std_k98ojb.List.Slice {}\n            _index_5e9e4f -> slice_6c0c8f.start\n            list_7c2b4a -> slice_6c0c8f.list\n            slice_6c0c8f.slice -> output_3a7d1b\n        } -> find_1d6b8c.handler\n        0 -> find_1d6b8c.context\n        list_7c2b4a -> find_1d6b8c.items\n        find_1d6b8c.item -> output_9f3c5e\n    }\n\n    \n\n    instance(x: -17, y: 69) is_sublist_0f8b3f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 5, name: \"list1\") property(List) list_0a9f2b\n        in(x: -285, y: -155, name: \"list2\") property(List) list_7e6c4d\n\n        out(x: 557, y: -154, name: \"output\") property(Bool) output_8f1f5c\n\n        instance(x: -92, y: -153) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -152) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -151) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_7e6c4d -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_0a9f2b -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        list_7e6c4d -> equal_f89569.right\n        equal_f89569.result -> output_8f1f5c\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_a3a2d9 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 0, name: \"sublist\") property(List) sublist_1f9d3e\n        in(x: -287, y: 160, name: \"list\") property(List) list_7c8a6b\n\n        out(x: 557, y: 145, name: \"output\") property(Bool) output_5e2e4c\n\n        instance(x: -92, y: 140) find_3f9d0f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 105, name: \"current\") property(List) current_7a1c2e\n            in(x: -184, y: 235, name: \"_index\") property(Number) _index_5f0d4b\n\n            out(x: 521, y: 210, name: \"output\") property(Bool) output_9c6b3c\n\n            instance(x: 74, y: 205) find_7e8a2c root.Std_k98ojb.Iteration.Find {}\n            func() {\n                in(x: -30, y: 160, name: \"current\") property(Number) current_1f0d4e\n                in(x: -23, y: 300, name: \"_index\") property(Number) _index_7c8a6b\n\n                out(x: 705, y: 275, name: \"output\") property(Bool) output_3f9d0f\n\n                instance(x: 226, y: 280) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n                current_1f0d4e -> equal_f89569.left\n                sublist_1f9d3e[_index_7c8a6b] -> equal_f89569.right\n                equal_f89569.result -> output_3f9d0f\n            } -> find_7e8a2c.predicate\n            list_7c8a6b[_index_5f0d4b:] -> find_7e8a2c.items\n            sublist_1f9d3e.length -> find_7e8a2c.context\n            find_7e8a2c.item -> output_9c6b3c\n        } -> find_3f9d0f.predicate\n        list_7c8a6b -> find_3f9d0f.items\n        true -> find_3f9d0f.context\n        find_3f9d0f.item -> output_5e2e4c\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -450, y: 0, name: \"list1\") property(List) list_2a9f6b\n        in(x: -451, y: 139, name: \"list2\") property(List) list_8c7e5d\n\n        out(x: 1203, y: 40, name: \"output\") property(Bool) output_1e4b0a\n\n        instance(x: -240, y: 41, name: \"find sublist in list\") find_2f6f9c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            list_8c7e5d -> contains_32727d.list\n            _index_769593 -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> find_2f6f9c.predicate\n        instance(x: -240, y: 41) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) slice_1b8f2c root.Std_k98ojb.List.Slice {}\n            list_2a9f6b -> slice_1b8f2c.list\n            current_81298e -> slice_1b8f2c.start\n            -1 -> slice_1b8f2c.end\n            slice_1b8f2c.slice -> bool_4524be\n        } -> map_c73e3b.handler\n        list_2a9f6b -> map_c73e3b.items\n        find_2f6f9c.item -> output_1e4b0a\n        map_c73e3b.output_list -> find_2f6f9c.items\n    }\n\n    \n\n    instance(x: -293, y: 59) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -427, y: 6, name: \"sublist\") property(List) sublist_2e9a1f\n        in(x: -426, y: 166, name: \"list\") property(List) list_3c7d8b\n\n        out(x: 1000, y: 5, name: \"output\") property(Bool) output_4f6b73\n\n        instance(x: -183, y: 19, name: \"find sublist in list\") find_9e2a1c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -0, y: -25, name: \"current\") property(List) current_7f8d5f\n            in(x: 10, y: 79, name: \"_index\") property(Number) _index_9a2c4e\n\n            out(x: 706, y: 49, name: \"output\") property(Bool) output_3b6c1e\n\n            instance(x: 226, y: 56) contains_5d8f0f root.Std_k98ojb.List.Contains {}\n            sublist_2e9a1f -> contains_5d8f0f.list\n            current_7f8d5f -> contains_5d8f0f.item\n            contains_5d8f0f.is_contained -> output_3b6c1e\n        } -> find_9e2a1c.predicate\n        instance(x: -272, y: 19) slice_7f4b2f root.Std_k98ojb.List.Slice {}\n        list_3c7d8b -> slice_7f4b2f.list\n        _index_9a2c4e -> slice_7f4b2f.start\n        -1 -> slice_7f4b2f.end\n        slice_7f4b2f.slice -> find_9e2a1c.items\n        func() {\n            in(x: 0, y: 0, name: \"index\") property(Number) index_8d6f3e\n\n            out(x: 0, y: 0, name: \"output\") property(Bool) output_7b9d5a\n\n            instance(x: -30, y: -25, name: \"current\") property(List) current_2c1f4e\n            instance(x: -23, y: 79, name: \"_index\") property(Number) _index_6f8c3e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_5b7d9a\n\n            instance(x: 226, y: 56) contains_4d8f0f root.Std_k98ojb.List.Contains {}\n            sublist_2e9a1f -> contains_4d8f0f.list\n            current_2c1f4e -> contains_4d8f0f.item\n            contains_4d8f0f.is_contained -> output_5b7d9a\n        } -> find_9e2a1c.predicate\n        instance(x: -272, y: 19) slice_6f4b2f root.Std_k98ojb.List.Slice {}\n        list_3c7d8b -> slice_6f4b2f.list\n        index_8d6f3e -> slice_6f4b2f.start\n        -1 -> slice_6f4b2f.end\n        slice_6f4b2f.slice -> find_9e2a1c.items\n        find_9e2a1c.item -> output_4f6b73\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -365, y: 20, name: \"sublist\") property(List) sublist_1e8f0b\n        in(x: -364, y: -140, name: \"list\") property(List) list_7a3c2d\n\n        out(x: 1115, y: -105, name: \"output\") property(Bool) output_6c4b9e\n\n        instance(x: -132, y: -106, name: \"find sublist in list\") find_1f8b0f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: 18, y: -20, name: \"current\") property(List) current_5a3e9c\n            in(x: 26, y: 71, name: \"_index\") property(Number) _index_1f8d0b\n\n            out(x: 701, y: 49, name: \"output\") property(Bool) output_7f2a4b\n\n            instance(x: 242, y: 56) contains_9e6c5f root.Std_k98ojb.List.Contains {}\n            sublist_1e8f0b -> contains_9e6c5f.list\n            current_5a3e9c -> contains_9e6c5f.item\n            instance(x: 463, y: 51) notequal_7d4b2c root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_7d4b2c.right\n            contains_9e6c5f.result -> notequal_7d4b2c.left\n            notequal_7d4b2c.result -> output_7f2a4b\n        } -> find_1f8b0f.predicate\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_5a3e9c\n\n            out(x: 705, y: -28, name: \"output\") property(List) output_7f2a4b\n\n            instance(x: 74, y: -23) slice_8d0a6c root.Std_k98ojb.List.Slice {}\n            current_5a3e9c -> slice_8d0a6c.list\n            _index_1f8d0b -> slice_8d0a6c.start\n            99999 -> slice_8d0a6c.end\n            slice_8d0a6c.slice -> output_7f2a4b\n        } -> find_1f8b0f.handler\n        list_7a3c2d -> find_1f8b0f.items\n        instance(x: 1058, y: -103) not_9e5a6c root.Std_k98ojb.Logic.Not {}\n        find_1f8b0f.item -> not_9e5a6c.input\n        not_9e5a6c.result -> output_6c4b9e\n    }\n\n    \n\n    instance(x: -64, y: 63) is_sublist_7d2d3f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 5, name: \"list1\") property(List) list1_4a3b8f\n        in(x: -463, y: 147, name: \"list2\") property(List) list2_9c6e7d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_0a9c1f\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_3b4c2f\n\n        instance(x: 752, y: 93) ifexpression_7d5e6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_7d5e6.else -> continue_0a9c1f\n        ifexpression_7d5e6.value -> output_3b4c2f\n        ifexpression_7d5e6.then -> setter_9d4f1c.execute\n        list1_4a3b8f -> for_d26972.items\n        for_d26972.item -> ifexpression_7d5e6.gen_2\n        for_d26972.index -> ifexpression_7d5e6.gen_0\n        getter_b280eb.value -> ifexpression_7d5e6.gen_1\n        for_d26972.onItem -> ifexpression_7d5e6.execute\n        for_d26972.done -> continue_0a9c1f\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_9c6e7d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_0a9c1f -> output_3b4c2f\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_7a5d6 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 5, name: \"list1\") property(List) list1_3a9f2b\n        in(x: -464, y: 146, name: \"list2\") property(List) list2_7c0e4d\n\n        out(x: 1227, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_5bbcd7\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_3a9f2b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_7c0e4d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        for_d26972.done -> output_5bbcd7\n        for_d26972.item -> setter_9d4f1c.new_value\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e4b8f\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c9a5d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_8e3f2c\n            in(x: -113, y: 33, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_5e1b4c root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_8e3f2c -> sub_5e1b4c.first\n            elem_9f6850 -> sub_5e1b4c.second\n            sub_5e1b4c.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3e4b8f -> find_6d05b0.items\n        find_6d05b0.index + 1 -> missing_7c9a5d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 0, name: \"list\") property(List) list_9f7759\n        out(x: 46, y: 158, name: \"missing\") property(Number) missing_b2508f\n\n        instance(x: -105, y: -110) for_1c2e3a root.Std_k98ojb.Std.For {\n            items: list_9f7759\n        }\n        func() {\n            in(x: 0, y: 0, name: \"index\") property(Number) index_12bf99\n\n            out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n            instance(x: 89, y: 29) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index + 1 != item\"\n            }\n            getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = missing\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = missing\n            setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = missing\n            index_12bf99 -> ifexpression_e38995.gen_0\n            list_9f7759 -> for_1c2e3a.items\n            getter_9cceb3.value -> missing_b2508f\n            ifexpression_e38995.then -> setter_1cedb2.execute\n            index_12bf99 -> setter_1cedb2.new_value\n            ifexpression_e38995.else -> setter_37db7f.execute\n            for_1c2e3a.item -> ifexpression_e38995.gen_1\n            for_1c2e3a.onItem -> func.execute\n            func.continue -> continue_685c8f\n            func.continue -> for_1c2e3a.next\n            setter_1cedb2.continue -> continue_685c8f\n            setter_37db7f.continue -> continue_685c8f\n        }\n    }\n\n    \n\n    instance(x: -174, y: -63) find_missing_d6e930 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: 0, name: \"list\") property(List) list_1f9b2a\n\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_8e7c3d\n\n        instance(x: -341, y: -301) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1f9b2a\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1b2c8e root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_1f9b2a -> add_1b2c8e.first\n            0 -> add_1b2c8e.second\n            add_1b2c8e.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_1f9b2a -> find_6d05b0.items\n        find_6d05b0.index -> missing_8e7c3d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n            in(x: -112, y: 35, name: \"elem\") property(Number) elem_af09a7\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3bc2ae\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_af09a7 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_3bc2ae\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"elem\") property(Any) elem_af09a7\n\n            instance(x: 89, y: 29) getat_1088d5 root.Std_k98ojb.List.GetAt {}\n            index_9f6850 -> getat_1088d5.index\n            list_9f7759 -> getat_1088d5.list\n            getat_1088d5.item -> elem_af09a7\n        } -> find_6d05b0.handler\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"result\") property(Any) result_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> result_af09a7\n        } -> find_6d05b0.context\n        find_6d05b0.item -> missing_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1f8b3a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_2e4c7d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_1f8b3a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"elem\") property(Any) elem_9f6850\n\n            instance(x: 89, y: 29) getat_1088d5 root.Std_k98ojb.List.GetAt {}\n            index_9f6850 -> getat_1088d5.index\n            list_1f8b3a -> getat_1088d5.list\n            getat_1088d5.item -> elem_9f6850\n        } -> find_6d05b0.handler\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"result\") property(Any) result_af09a7\n\n            instance(x: 89, y: 29) generate_range_1088d5 root.Std_k98ojb.List.GenerateRange {}\n            0 -> generate_range_1088d5.from\n            list_1f8b3a.length - 1 -> generate_range_1088d5.to\n            generate_range_1088d5.list -> result_af09a7\n        } -> find_6d05b0.context\n        find_6d05b0.item -> missing_2e4c7d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_3a9f8e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7b5c6d\n\n        instance(x: 0, y: 0) for_2f4a7f root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9e8c1f\n            in(x: -110, y: 38, name: \"item\") property(Number) item_3a5d6f\n\n            out(x: 515, y: 44, name: \"continue\") trigger() continue_7b4f2f\n\n            instance(x: 89, y: 29) ifexpression_1c8e9f root.Std_k98ojb.Std.IfExpression {\n                expression: \"item - index > 1\"\n            }\n            getter(x: -144, y: 112, name: \"getter_3a5d6f\") getter_3a5d6f = missing\n            setter(x: 116, y: -268, name: \"setter_9e8c1f\") setter_9e8c1f = missing\n            a_9f7759 -> ifexpression_1c8e9f.gen_0\n            b_f9110a -> ifexpression_1c8e9f.gen_1\n            getter_3a5d6f.value -> missing_7b5c6d\n            ifexpression_1c8e9f.then -> setter_9e8c1f.execute\n            index_9e8c1f + 1 -> setter_9e8c1f.new_value\n            ifexpression_1c8e9f.else -> continue_7b4f2f\n            item_3a5d6f -> ifexpression_1c8e9f.gen_0\n            index_9e8c1f -> ifexpression_1c8e9f.gen_1\n        } -> for_2f4a7f.onItem\n        list_3a9f8e -> for_2f4a7f.items\n        continue_7b4f2f -> for_2f4a7f.next\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1c5d6f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a1f9e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_5c8d7b\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n            in(x: -108, y: 29, name: \"elem\") property(Number) elem_ae3c5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_8b0d2f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> sub_8b0d2f.first\n            elem_ae3c5a -> sub_8b0d2f.second\n            sub_8b0d2f.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3a1f9e -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"elem\") property(Any) elem_8e7c1a\n\n            instance(x: 89, y: 29) getat_6b3d5f root.Std_k98ojb.List.GetAt {}\n            index_9f6850 -> getat_6b3d5f.index\n            list_3a1f9e -> getat_6b3d5f.list\n            getat_6b3d5f.item -> elem_8e7c1a\n        } -> find_6d05b0.handler\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"elem\") property(Any) elem_8e7c1a\n\n            instance(x: 89, y: 29) generate_range_2d3b5f root.Std_k98ojb.List.GenerateRange {}\n            0 -> generate_range_2d3b5f.from\n            list_3a1f9e.length -> generate_range_2d3b5f.to\n            instance(x: -24, y: 29) getat_6b3d5f root.Std_k98ojb.List.GetAt {}\n            index_9f6850 -> getat_6b3d5f.index\n            generate_range_2d3b5f.list -> getat_6b3d5f.list\n            getat_6b3d5f.item -> elem_8e7c1a\n        } -> find_6d05b0.context\n        find_6d05b0.item -> missing_5c8d7b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -285, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n            in(x: -108, y: 44, name: \"elem\") property(Number) elem_af09a7\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3bc2ae\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_af09a7 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_3bc2ae\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"elem\") property(Number) elem_af09a7\n\n            instance(x: 89, y: 29) getat_1088d5 root.Std_k98ojb.List.GetAt {}\n            index_9f6850 -> getat_1088d5.index\n            list_9f7759 -> getat_1088d5.list\n            getat_1088d5.item -> elem_af09a7\n        } -> find_6d05b0.handler\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"result\") property(Any) result_3bc2ae\n\n            instance(x: 89, y: 29) generate_range_1088d5 root.Std_k98ojb.List.GenerateRange {}\n            0 -> generate_range_1088d5.from\n            list_9f7759.length - 1 -> generate_range_1088d5.to\n            generate_range_1088d5.list -> result_3bc2ae\n        } -> find_6d05b0.context\n        find_6d05b0.item -> missing_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1a2b3c\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_4d5e6f\n\n        instance(x: 0, y: 0) find_missing_instance root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_7g8h9i\n            in(x: -123, y: 44, name: \"elem\") property(Number) elem_jk0l1m\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_nopqrs\n\n            instance(x: 89, y: 29) add_abc123 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_xyz456 root.Std_k98ojb.Logic.NotEqual {}\n            index_7g8h9i -> add_abc123.first\n            1 -> add_abc123.second\n            add_abc123.result -> notequal_xyz456.left\n            elem_jk0l1m -> notequal_xyz456.right\n            notequal_xyz456.result -> bool_nopqrs\n        } -> find_missing_instance.predicate\n        list_1a2b3c -> find_missing_instance.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_tuv789\n\n            out(x: 515, y: 44, name: \"elem\") property(Number) elem_wxyz012\n\n            instance(x: 89, y: 29) getat_345def root.Std_k98ojb.List.GetAt {}\n            index_tuv789 -> getat_345def.index\n            list_1a2b3c -> getat_345def.list\n            getat_345def.item -> elem_wxyz012\n        } -> find_missing_instance.handler\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_123ghi\n\n            out(x: 515, y: 44, name: \"result\") property(Any) result_jklmno\n\n            instance(x: 89, y: 29) add_pqrstu root.Std_k98ojb.Math.Add {}\n            index_123ghi -> add_pqrstu.first\n            0 -> add_pqrstu.second\n            add_pqrstu.result -> result_jklmno\n        } -> find_missing_instance.context\n        find_missing_instance.item -> missing_number_4d5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_node root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_af09a7\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3bc2ae\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_af09a7 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_3bc2ae\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"elem\") property(Any) elem_af09a7\n\n            instance(x: 89, y: 29) getat_1088d5 root.Std_k98ojb.List.GetAt {}\n            index_9f6850 -> getat_1088d5.index\n            list_9f7759 -> getat_1088d5.list\n            getat_1088d5.item -> elem_af09a7\n        } -> find_6d05b0.handler\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"result\") property(Any) result_af09a7\n\n            instance(x: 89, y: 29) generate_range_1088d5 root.Std_k98ojb.List.GenerateRange {}\n            0 -> generate_range_1088d5.from\n            list_9f7759.length() -> generate_range_1088d5.to\n            generate_range_1088d5.list -> result_af09a7\n        } -> find_6d05b0.context\n        find_6d05b0.item -> missing_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -124, y: 0, name: \"input\") property(String) input_9f8a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1b4c5e\n\n        instance(x: 0, y: 1) replace_7a6d7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a8c2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_5e9c1e root.Std_k98ojb.Strings.Replace {}\n        input_9f8a3d -> replace_7a6d7f.input\n        \" \" -> replace_7a6d7f.search\n        \":\" -> replace_7a6d7f.replace\n        replace_7a6d7f.output -> replace_3a8c2d.input\n        \",\" -> replace_3a8c2d.search\n        \":\" -> replace_3a8c2d.replace\n        replace_3a8c2d.output -> replace_5e9c1e.input\n        \".\" -> replace_5e9c1e.search\n        \":\" -> replace_5e9c1e.replace\n        replace_5e9c1e.output -> output_1b4c5e\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -1489, y: 0, name: \"input\") property(String) input_1a2f8e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_3b4c7d\n\n        instance(x: 0, y: 1) replace_5d6e7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a9b0c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_d1e2f3 root.Std_k98ojb.Strings.Replace {}\n        input_1a2f8e -> replace_5d6e7f.input\n        \" \" -> replace_5d6e7f.search\n        \":\" -> replace_5d6e7f.replace\n        replace_5d6e7f.output -> replace_8a9b0c.input\n        \",\" -> replace_8a9b0c.search\n        \":\" -> replace_8a9b0c.replace\n        replace_8a9b0c.output -> replace_d1e2f3.input\n        \".\" -> replace_d1e2f3.search\n        \":\" -> replace_d1e2f3.replace\n        replace_d1e2f3.output -> output_3b4c7d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -172, y: 0, name: \"input\") property(String) input_1f2a9d\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_3e5b8c\n\n        instance(x: 221, y: 1) replace_4f7b0c root.Std_k98ojb.Strings.Replace {}\n        input_1f2a9d -> replace_4f7b0c.input\n        \" ,.\" -> replace_4f7b0c.search\n        \":\" -> replace_4f7b0c.replace\n        replace_4f7b0c.output -> output_3e5b8c\n    }\n\n    \n\n    instance(x: -138, y: 30) replace_chars_2d9a6f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"input\") property(String) input_2f1a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4e7b9c\n\n        instance(x: 0, y: 1) replace_6e5c8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a5d2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_7b9c1d root.Std_k98ojb.Strings.Replace {}\n        input_2f1a3d -> replace_6e5c8c.input\n        \" \" -> replace_6e5c8c.search\n        \":\" -> replace_6e5c8c.replace\n        replace_6e5c8c.output -> replace_3a5d2f.input\n        \",\" -> replace_3a5d2f.search\n        \":\" -> replace_3a5d2f.replace\n        replace_3a5d2f.output -> replace_7b9c1d.input\n        \".\" -> replace_7b9c1d.search\n        \":\" -> replace_7b9c1d.replace\n        replace_7b9c1d.output -> output_4e7b9c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -156, y: 0, name: \"input\") property(String) input_1f2a6d\n\n        out(x: 540, y: -2, name: \"output\") property(String) output_3b7c4e\n\n        instance(x: 0, y: 1) replace_8f9c5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6d3a2c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_7e4f1d root.Std_k98ojb.Strings.Replace {}\n        input_1f2a6d -> replace_8f9c5f.input\n        \" \" -> replace_8f9c5f.search\n        \":\" -> replace_8f9c5f.replace\n        replace_8f9c5f.output -> replace_6d3a2c.input\n        \",\" -> replace_6d3a2c.search\n        \":\" -> replace_6d3a2c.replace\n        replace_6d3a2c.output -> replace_7e4f1d.input\n        \".\" -> replace_7e4f1d.search\n        \":\" -> replace_7e4f1d.replace\n        replace_7e4f1d.output -> output_3b7c4e\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_2a8b5f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) or_3 root.Std_k98ojb.Logic.Or {}\n        instance(x: -11, y: 9) or_4 root.Std_k98ojb.Logic.Or {}\n        \" \" -> or_3.left\n        \",\" -> or_3.right\n        or_3.result -> or_4.left\n        \".\" -> or_4.right\n        or_4.result -> replace_2.search\n        \":\" -> replace_2.replace\n        input_0 -> replace_2.input\n        replace_2.output -> output_1\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_chars_a root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -149, y: 0, name: \"input\") property(String) input_2a1d9f\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_3e8c5b\n\n        instance(x: 0, y: 1) replace_7b6d4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9a7d2c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_5e8f3f root.Std_k98ojb.Strings.Replace {}\n        input_2a1d9f -> replace_7b6d4f.input\n        \" \" -> replace_7b6d4f.search\n        \":\" -> replace_7b6d4f.replace\n        replace_7b6d4f.output -> replace_9a7d2c.input\n        \",\" -> replace_9a7d2c.search\n        \":\" -> replace_9a7d2c.replace\n        replace_9a7d2c.output -> replace_5e8f3f.input\n        \".\" -> replace_5e8f3f.search\n        \":\" -> replace_5e8f3f.replace\n        replace_5e8f3f.output -> output_3e8c5b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -1489, y: 0, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4d5e6f\n\n        instance(x: 0, y: 1) replace_7g8h9i root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_jk0l1m root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_nopqrs root.Std_k98ojb.Strings.Replace {}\n\n        input_1a2b3c -> replace_7g8h9i.input\n        \" \" -> replace_7g8h9i.search\n        \":\" -> replace_7g8h9i.replace\n\n        replace_7g8h9i.output -> replace_jk0l1m.input\n        \",\" -> replace_jk0l1m.search\n        \":\" -> replace_jk0l1m.replace\n\n        replace_jk0l1m.output -> replace_nopqrs.input\n        \".\" -> replace_nopqrs.search\n        \":\" -> replace_nopqrs.replace\n\n        replace_nopqrs.output -> output_4d5e6f\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -1489, y: 0, name: \"input\") property(String) input_6f8b1a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4e7d3c\n\n        instance(x: 0, y: 1) replace_5e9b2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a6c1c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_7d3c4f root.Std_k98ojb.Strings.Replace {}\n        input_6f8b1a -> replace_5e9b2f.input\n        \" \" -> replace_5e9b2f.search\n        \":\" -> replace_5e9b2f.replace\n        replace_5e9b2f.output -> replace_8a6c1c.input\n        \",\" -> replace_8a6c1c.search\n        \":\" -> replace_8a6c1c.replace\n        replace_8a6c1c.output -> replace_7d3c4f.input\n        \".\" -> replace_7d3c4f.search\n        \":\" -> replace_7d3c4f.replace\n        replace_7d3c4f.output -> output_4e7d3c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_1b2a5f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -172, y: 0, name: \"input\") property(String) input_2f1a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_7c9e6b\n\n        instance(x: 0, y: 1) replace_5a4b8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3f7d2a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6e9f1d root.Std_k98ojb.Strings.Replace {}\n        input_2f1a3d -> replace_5a4b8c.input\n        \" \" -> replace_5a4b8c.search\n        \":\" -> replace_5a4b8c.replace\n        replace_5a4b8c.output -> replace_3f7d2a.input\n        \",\" -> replace_3f7d2a.search\n        \":\" -> replace_3f7d2a.replace\n        replace_3f7d2a.output -> replace_6e9f1d.input\n        \".\" -> replace_6e9f1d.search\n        \":\" -> replace_6e9f1d.replace\n        replace_6e9f1d.output -> output_7c9e6b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_e54b7f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -316, y: 30, name: \"input\") property(String) input_8f1e9d\n\n        out(x: 1014, y: 24, name: \"output\") property(Bool) output_7c0a6b\n\n        instance(x: -165, y: 31) characters_5b2b3c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 288, y: 23) uniquelist_9f8d1e root.Std_k98ojb.List.UniqueList {}\n        instance(x: 592, y: 24) length_6a4b5a root.Std_k98ojb.List.Length {}\n        instance(x: 808, y: 25) equal_3c7b0c root.Std_k98ojb.Logic.Equal {}\n        characters_5b2b3c.characters -> uniquelist_9f8d1e.list\n        uniquelist_9f8d1e.uniqueList -> length_6a4b5a.list\n        1 -> equal_3c7b0c.right\n        length_6a4b5a.length -> equal_3c7b0c.left\n        equal_3c7b0c.result -> output_7c0a6b\n        input_8f1e9d -> characters_5b2b3c.input\n    }\n\n    \n\n    instance(x: -91, y: 139) is_same_4a1d5f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -296, y: 5, name: \"input\") property(String) input_9a8e1f\n\n        out(x: 557, y: 63, name: \"output\") property(Bool) output_6b3c7d\n\n        instance(x: -150, y: 4) characters_2a0f5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 62) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 360, y: 61) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        input_9a8e1f -> characters_2a0f5f.input\n        characters_2a0f5f.characters -> intersection_c7c7e6.left\n        characters_2a0f5f.characters -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        instance(x: 360, y: -95) length_8166b0 root.Std_k98ojb.List.Length {}\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_6b3c7d\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_a5f8e9 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -290, y: 10, name: \"input\") property(String) input_9a8f3e\n\n        out(x: 549, y: 55, name: \"output\") property(Bool) output_7b0c5d\n\n        instance(x: -88, y: 11) characters_1a2f4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 201, y: 54) uniquelist_8e3b6a root.Std_k98ojb.List.Unique {}\n        instance(x: 360, y: 53) length_5d9f7f root.Std_k98ojb.List.Length {}\n        instance(x: 480, y: 52) equal_f0c2a1 root.Std_k98ojb.Logic.Equal {}\n        characters_1a2f4c.characters -> uniquelist_8e3b6a.list\n        length_5d9f7f.length -> equal_f0c2a1.left\n        1 -> equal_f0c2a1.right\n        uniquelist_8e3b6a.unique_list -> length_5d9f7f.list\n        input_9a8f3e -> characters_1a2f4c.input\n        equal_f0c2a1.result -> output_7b0c5d\n    }\n\n    \n\n    instance(x: -82, y: 155) check_same_6f7b9d root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -285, y: -86, name: \"string\") property(String) string_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        string_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        string_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -294, y: 155, name: \"input\") property(String) input_0d3e6f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: -25, name: \"only first character\") getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        input_0d3e6f -> characters_9c8f1c.input\n        length_6e87f2.length -> contains_32727d.index\n        getat_ce2a48.itemAtIndex -> contains_32727d.item\n        0 -> getat_ce2a48.index\n        input_0d3e6f -> getat_ce2a48.list\n        characters_9c8f1c.characters -> length_6e87f2.list\n        equal_f89569.result -> output_b1d7f8\n        contains_32727d.is_contained -> equal_f89569.left\n        1 -> equal_f89569.right\n    }\n\n    \n\n    instance(x: 48, y: 11) is_same_15f9e9 root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -290, y: 13, name: \"input\") property(String) input_9e3f5d\n\n        out(x: 557, y: 49, name: \"output\") property(Bool) output_8b7c4a\n\n        instance(x: -96, y: 14) characters_1f0f6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 48) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 360, y: 47) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        input_9e3f5d -> characters_1f0f6f.input\n        characters_1f0f6f.characters -> intersection_c7c7e6.left\n        characters_1f0f6f.characters -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_8b7c4a\n    }\n\n    \n\n    instance(x: -84, y: 159) check_same_5d9f2f root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -288, y: 0, name: \"input\") property(String) input_8e9a3f\n\n        out(x: 1175, y: 1, name: \"output\") property(Bool) output_6c4b2d\n\n        instance(x: -92, y: 14, name: \"get all characters\") characters_0a7e88 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 1) intersection_c9f5ea root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 360, y: -2) length_8c3d6f root.Std_k98ojb.List.Length {}\n        instance(x: 570, y: 0) equal_f7e4a1 root.Std_k98ojb.Logic.Equal {}\n        input_8e9a3f -> characters_0a7e88.input\n        characters_0a7e88.characters -> intersection_c9f5ea.left\n        characters_0a7e88.characters -> intersection_c9f5ea.right\n        length_8c3d6f.length -> equal_f7e4a1.left\n        1 -> equal_f7e4a1.right\n        intersection_c9f5ea.intersection -> length_8c3d6f.list\n        equal_f7e4a1.result -> output_6c4b2d\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_a0f3f9 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -277, y: 5, name: \"input\") property(String) input_9e3f8d\n\n        out(x: 1016, y: 7, name: \"output\") property(Bool) output_1a0c4b\n\n        instance(x: -121, y: 2, name: \"characters\") characters_5a8b29 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 250, y: 6) length_7e3f9d root.Std_k98ojb.List.Length {}\n        instance(x: 463, y: -1) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 673, y: 5) contains_32727d root.Std_k98ojb.List.Contains {}\n        characters_5a8b29.characters -> length_7e3f9d.list\n        input_9e3f8d -> characters_5a8b29.input\n        length_7e3f9d.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        contains_32727d.is_contained -> output_1a0c4b\n        characters_5a8b29.characters -> contains_32727d.list\n        characters_5a8b29.characters[0] -> contains_32727d.item\n    }\n\n    \n\n    instance(x: 14, y: -6) check_same_7e9f1f root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -277, y: 6, name: \"input\") property(String) input_8f1a2e\n\n        out(x: 1023, y: 5, name: \"output\") property(Bool) output_7b9c4d\n\n        instance(x: -93, y: 10) characters_0e6e1f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 226, y: 3) uniquelist_5a8a2c root.Std_k98ojb.List.Unique {}\n        instance(x: 451, y: -4) length_9d7f55 root.Std_k98ojb.List.Length {}\n        instance(x: 660, y: 0) equal_6e1e3c root.Std_k98ojb.Logic.Equal {}\n        characters_0e6e1f.characters -> uniquelist_5a8a2c.list\n        length_9d7f55.length -> equal_6e1e3c.left\n        1 -> equal_6e1e3c.right\n        uniquelist_5a8a2c.uniqueList -> length_9d7f55.list\n        input_8f1a2e -> characters_0e6e1f.input\n        equal_6e1e3c.result -> output_7b9c4d\n    }\n\n    \n\n    instance(x: -45, y: 88) is_same_5a8b4f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -286, y: 6, name: \"input\") property(String) input_1a9f0e\n\n        out(x: 557, y: 17, name: \"output\") property(Bool) output_7b8c4d\n\n        instance(x: -91, y: 5) characters_3a2b6c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 16) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 15) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 574, y: -5) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        characters_3a2b6c.characters -> length_8166b0.list\n        input_1a9f0e -> characters_3a2b6c.input\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        intersection_c7c7e6.intersection -> output_7b8c4d\n        characters_3a2b6c.characters -> intersection_c7c7e6.left\n        characters_3a2b6c.characters -> intersection_c7c7e6.right\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_5f8c1d root.main.is_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -30, y: 0) std_split_node root.Std_k98ojb.Strings.Split {}\n        instance(x: 0, y: 0) std_filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(doc: \"checks if the input is a digit.\") check_digit {\n                in(x: 0, y: 0, name: \"item\") property(String) item_ai\n                out(x: 0, y: 0, name: \"is_digit\") property(Bool) is_digit_ai\n\n                instance(x: 0, y: 0) std_is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item_ai -> std_is_numeric_node.input\n                std_is_numeric_node.is_numeric -> is_digit_ai\n            }\n        }\n        instance(x: -30, y: 0) std_count_node root.Std_k98ojb.Count {}\n\n        input_ai -> std_split_node.string\n        std_split_node.strings -> std_filter_node.items\n        std_filter_node.output_list -> std_count_node.items\n        std_count_node.count -> output_ai\n    }\n\n    \n    instance(x: -30, y: 0) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -40, y: 0) split_1a3d9c root.Std_k98ojb.Strings.Split {}\n        instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n        instance(x: 0, y: 0) map_4f8e6c root.Std_k98ojb.Iteration.Map {\n            handler: count_digits_node\n        }\n        instance(x: 0, y: 0) reduce_1a3d9c root.Std_k98ojb.Iteration.Reduce {\n            reducer: add_5f7e2c\n        }\n        instance(x: 0, y: 0) add_5f7e2c root.Std_k98ojb.Math.Add {}\n        input_ai -> split_1a3d9c.string\n        \" \" -> split_1a3d9c.split_on\n        split_1a3d9c.strings -> map_4f8e6c.items\n        map_4f8e6c.output_list -> reduce_1f7e2c.input_list\n        0 -> add_5f7e2c.first\n        add_5f7e2c.result -> reduce_1a3d9c.accumulated_value\n        reduce_1a3d9c.reduced -> output_ai\n\n        func(doc: \"count the number of digits in a given string.\") count_digits_node {\n            in(x: 0, y: 0, name: \"item\") property(String) item_ai\n            out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n            instance(x: -40, y: 0) is_numeric_1a3d9c root.Std_k98ojb.Strings.IsNumeric {}\n            instance(x: 0, y: 0) choose_4f8e6c root.Std_k98ojb.Std.Choose {}\n            item_ai -> is_numeric_1a3d9c.input\n            is_numeric_1a3d9c.is_numeric -> choose_4f8e6c.predicate\n            1 -> choose_4f8e6c.then\n            0 -> choose_4f8e6c.else\n            choose_4f8e6c.value -> output_ai\n        }\n    }\n\n    \n    instance(x: -40, y: 0) count_digits_node root.main.count_digits {}\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -35, y: 0) split_1f2d4a root.Std_k98ojb.Strings.Split {}\n        instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n        instance(x: 0, y: 0) map_5c9e6a root.Std_k98ojb.Iteration.Map {\n            handler: count_digits_node\n        }\n        instance(x: 0, y: 0) reduce_1f2d4a root.Std_k98ojb.Iteration.Reduce {}\n        input_ai -> split_1f2d4a.string\n        \" \" -> split_1f2d4a.split_on\n        split_1f2d4a.strings -> map_5c9e6a.items\n        0 -> reduce_1f2d4a.accumulated_value\n        count_digits_node.item -> map_5c9e6a.handler.gen_0\n        map_5c9e6a.output_list -> reduce_1f2d4a.values\n        reduce_1f2d4a.result -> output_ai\n\n        func(doc: \"count the number of digits in a given string.\") count_digits_node {\n            in(x: 0, y: 0, name: \"item\") property(String) item_ai\n            out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n            instance(x: -35, y: 0) is_numeric_1f2d4a root.Std_k98ojb.Strings.IsNumeric {}\n            instance(x: 0, y: 0) choose_5c9e6a root.Std_k98ojb.Std.Choose {}\n            item_ai -> is_numeric_1f2d4a.input\n            is_numeric_1f2d4a.isNumeric -> choose_5c9e6a.predicate\n            1 -> choose_5c9e6a.then\n            0 -> choose_5c9e6a.else\n            choose_5c9e6a.value -> output_ai\n        }\n\n        func(doc: \"reduce the list of numbers to a single number.\") reduce_handler {\n            in(x: 0, y: 0, name: \"accumulated_value\") property(Number) accumulated_value_ai\n            in(x: 0, y: 0, name: \"value\") property(Number) value_ai\n            out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n            instance(x: -35, y: 0) add_1f2d4a root.Std_k98ojb.Math.Add {}\n            accumulated_value_ai -> add_1f2d4a.first\n            value_ai -> add_1f2d4a.second\n            add_1f2d4a.result -> output_ai\n        }\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -1, y: 0) split_node root.Std_k98ojb.Strings.Split {\n            split_on: \" \"\n        }\n        input_ai -> split_node.string\n        instance(x: 0, y: 0) map_3c9f6a root.Std_k98ojb.Iteration.Map {}\n        split_node.strings -> map_3c9f6a.items\n        instance(x: -1, y: 0) count_digits_handler root.main.count_digits_handler {}\n        map_3c9f6a.handler -> count_digits_handler\n        instance(x: 0, y: 0) reduce_8e4b5d root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"it + acc\"\n        }\n        map_3c9f6a.output_list -> reduce_8e4b5d.item\n        0 -> reduce_8e4b5d.acc\n        reduce_8e4b5d.result -> output_ai\n    }\n\n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits_handler {\n        in(x: -1, y: 0, name: \"it\") property(String) it_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 0) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: \"Strings.IsNumeric(it)\"\n        }\n        it_ai -> filter_node.items\n        instance(x: -1, y: 0) count_digits_handler_2 root.main.count_digits_handler {}\n        filter_node.output_list -> count_digits_handler_2.items\n        instance(x: 0, y: 0) reduce_8e4b5d_2 root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"it + acc\"\n        }\n        count_digits_handler_2.output_list -> reduce_8e4b5d_2.item\n        0 -> reduce_8e4b5d_2.acc\n        reduce_8e4b5d_2.result -> output_ai\n    }\n\n    \n    instance(x: -1, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -20, y: 0) split_node root.Std_k98ojb.Strings.Split {}\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Count {}\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        input_ai -> split_node.string\n        split_node.strings -> filter_7b3b7b.list\n        count_node.reset -> split_node.execute\n        filter_7b3b7b.result -> count_node.count\n        count_node.count -> count_node.reset\n        count_node.count -> output_ai\n\n    }\n    \n\n    instance(x: 0, y: -40) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -12, y: 0) std_split_node root.Std_k98ojb.Strings.Split {}\n        instance(x: 0, y: 0) std_filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(doc: \"checks if the input is a digit.\") check_digit {\n                in(x: 0, y: 0, name: \"item\") property(String) item_ai\n                out(x: 0, y: 0, name: \"is_digit\") property(Bool) is_digit_ai\n\n                instance(x: 0, y: 0) std_is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item_ai -> std_is_numeric_node.input\n                std_is_numeric_node.is_numeric -> is_digit_ai\n            }\n        }\n        instance(x: -12, y: 0) std_count_node root.Std_k98ojb.Count {}\n\n        input_ai -> std_split_node.string\n        std_split_node.strings -> std_filter_node.items\n        std_filter_node.output_list -> std_count_node.items\n        std_count_node.count -> output_ai\n    }\n\n    \n    instance(x: -12, y: 0) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -40, y: 0) split_9e3c1a root.Std_k98ojb.Strings.Split {}\n        instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n        instance(x: 0, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n\n        input_ai -> split_9e3c1a.string\n        \" \" -> split_9e3c1a.split_on\n        split_9e3c1a.strings -> count_digits_node.items\n        count_digits_node.output -> std_count_node.count\n        std_count_node.reset -> count_digits_node.execute\n        std_count_node.done -> count_digits_node.continue\n        std_count_node.count -> output_ai\n\n    }\n    \n\n    instance(x: 0, y: -40) count_digits_2a9d7e root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -25, y: 0) split_node root.Std_k98ojb.Strings.Split {}\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Count {}\n        instance(x: 0, y: 0) filter_1f2a8e root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        input_ai -> split_node.string\n        split_node.strings -> filter_1f2a8e.list\n        filter_1f2a8e.result -> count_node.items\n        count_node.count -> output_ai\n    }\n\n    \n    instance(x: 0, y: -46) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -15, y: 0) std_split_node root.Std_k98ojb.Strings.Split {}\n        instance(x: 15, y: 0) std_filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(input: String) -> Bool {\n                return Std_k98ojb.Strings.IsNumeric(input)\n            }\n        }\n        input_ai -> std_split_node.string\n        std_split_node.strings -> std_filter_node.items\n        instance(x: 15, y: -30) std_length_node root.Std_k98ojb.List.Length {}\n        std_filter_node.output_list -> std_length_node.list\n        std_length_node.length -> output_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_1e9a4f root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -15, y: 0) std_split_node root.Std_k98ojb.Strings.Split {}\n        instance(x: 0, y: 0) std_filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(doc: \"checks if the input is a digit.\") check_digit {\n                in(x: 0, y: 0, name: \"item\") property(String) item_ai\n                out(x: 0, y: 0, name: \"is_digit\") property(Bool) is_digit_ai\n\n                instance(x: 0, y: 0) std_is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item_ai -> std_is_numeric_node.input\n                std_is_numeric_node.is_numeric -> is_digit_ai\n            }\n        }\n        instance(x: -15, y: 0) std_count_node root.Std_k98ojb.Count {}\n\n        input_ai -> std_split_node.string\n        std_split_node.strings -> std_filter_node.items\n        std_filter_node.output_list -> std_count_node.items\n        std_count_node.count -> output_ai\n    }\n    \n\n    instance(x: -15, y: 0) count_digits_node root.main.count_digits {}\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) pow_4d1e9c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_4d1e9c.second\n        mul_f892a4.result -> pow_4d1e9c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_4d1e9c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -279, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_f892a4.second\n        mul_64046c.result -> sum_365f7b\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        expression_2d6da6.result -> mul_64046c.first\n        pow_f892a4.result -> mul_64046c.second\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -290, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_f892a4.second\n        mul_64046c.result -> sum_365f7b\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_64046c.first\n        pow_f892a4.result -> mul_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4c2e9d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_5e7f8c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_4c2e9d.second\n        n_3a3116 -> pow_4c2e9d.first\n        expression_2d6da6.result -> add_5e7f8c.first\n        pow_4c2e9d.result -> add_5e7f8c.second\n        add_5e7f8c.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) pow_1c8e0d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n-3\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 394, y: -339) data_3c713b  = [sum]\n        instance(x: 46, y: -383, name: \"sum\") add_8e9d5f root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> pow_1c8e0d.y\n        expression_2d6da6.result -> pow_1c8e0d.x\n        data_cde0dc -> pow_1c8e0d.power\n        pow_1c8e0d.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        add_8e9d5f.result -> data_3c713b.sum\n        expression_2d6da6.gen_0 -> expression_2d6da6.n\n        pow_1c8e0d.result -> add_8e9d5f.second\n        mul_f892a4.result -> add_8e9d5f.first\n        data_3c713b.sum -> sum_365f7b\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -282, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4c9e0d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_5a8f9c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_4c9e0d.second\n        pow_4c9e0d.result -> add_5a8f9c.first\n        expression_2d6da6.result -> pow_4c9e0d.first\n        n_3a3116 -> pow_4c9e0d.y\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_5a8f9c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -279, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_f892a4.second\n        mul_64046c.result -> sum_365f7b\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        expression_2d6da6.result -> mul_64046c.first\n        pow_f892a4.result -> mul_64046c.second\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -290, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_f892a4.second\n        mul_64046c.result -> sum_365f7b\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_64046c.first\n        pow_f892a4.result -> mul_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_f892a4.second\n        mul_64046c.result -> sum_365f7b\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        expression_2d6da6.result -> mul_64046c.first\n        pow_f892a4.result -> mul_64046c.second\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_f892a4.second\n        mul_64046c.result -> sum_365f7b\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        expression_2d6da6.result -> mul_64046c.first\n        pow_f892a4.result -> mul_64046c.second\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -104, y: 21, name: \"size\") property(Number) size_3f8e1d\n\n        out(x: 1066, y: 17, name: \"surface_area\") property(Number) surface_area_7a4c5b\n\n        instance(x: 12, y: -15) mul_9a0b2f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_3f8e1d -> mul_9a0b2f.first\n        data_cde0dc -> mul_9a0b2f.second\n        mul_9a0b2f.result -> surface_area_7a4c5b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -106, y: 24, name: \"size\") property(Number) size_1a8f6e\n\n        out(x: 1024, y: 23, name: \"surface_area\") property(Number) surface_area_9c3b5d\n\n        instance(x: 1012, y: -13) mul_7f0f0f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 1001, y: 53) data_ea8e4c  = [6]\n        size_1a8f6e -> mul_7f0f0f.first\n        data_ea8e4c.a -> mul_7f0f0f.second\n        mul_7f0f0f.result -> surface_area_9c3b5d\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -110, y: 15, name: \"size\") property(Number) size_9e8a3f\n\n        out(x: 1076, y: 19, name: \"surface_area\") property(Number) surface_area_7b4c5d\n\n        instance(x: 1020, y: -2) mul_1f3f2c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 1058, y: 54) data_6e9a91  = 6\n        size_9e8a3f -> mul_1f3f2c.first\n        data_6e9a91 -> mul_1f3f2c.second\n        mul_1f3f2c.result -> surface_area_7b4c5d\n    }\n\n    \n\n    instance(x: 114, y: -26) cube_surface_area_8e0f8f root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -105, y: 45, name: \"size\") property(Number) size_9f7759\n\n        out(x: 46, y: 158, name: \"surface_area\") property(Number) surface_area_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -144, y: 112, name: \"\") mul_1a0b9d root.Std_k98ojb.Math.Mul {}\n        instance(x: 116, y: -268, name: \"\") mul_2e6c4f root.Std_k98ojb.Math.Mul {}\n        instance(x: 118, y: -56, name: \"\") mul_3a8f5d root.Std_k98ojb.Math.Mul {}\n        instance(x: -105, y: -110, name: \"\") add_0e9c2d root.Std_k98ojb.Math.Add {}\n        size_9f7759 -> mul_1a0b9d.first\n        6 -> mul_1a0b9d.second\n        mul_1a0b9d.result -> mul_2e6c4f.first\n        size_9f7759 -> mul_2e6c4f.second\n        mul_2e6c4f.result -> add_0e9c2d.left\n        mul_3a8f5d.result -> add_0e9c2d.right\n        mul_1a0b9d.result -> mul_3a8f5d.first\n        size_9f7759 -> mul_3a8f5d.second\n        add_0e9c2d.result -> surface_area_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) cube_surface_area_d6e930 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -100, y: 40, name: \"size\") property(Number) size_1e8f0d\n\n        out(x: 118, y: -19, name: \"surface_area\") property(Number) surface_area_9b7c3a\n\n        instance(x: 18, y: -38) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 331, y: 133) data_cde0dc  = 6\n        size_1e8f0d -> mul_2f9d09.first\n        data_cde0dc -> mul_2f9d09.second\n        mul_2f9d09.result -> surface_area_9b7c3a\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -111, y: 15, name: \"size\") property(Number) size_3a8f1e\n\n        out(x: 1000, y: 5, name: \"surface_area\") property(Number) surface_area_7c9b4d\n\n        instance(x: 23, y: -10) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_3a8f1e -> mul_f892a4.first\n        data_cde0dc -> mul_f892a4.second\n        instance(x: 303, y: 2) mul_9b7c5d root.Std_k98ojb.Math.Mul {}\n        mul_f892a4.result -> mul_9b7c5d.first\n        size_3a8f1e -> mul_9b7c5d.second\n        mul_9b7c5d.result -> surface_area_7c9b4d\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -106, y: 41, name: \"size\") property(Number) size_1a9f2e\n\n        out(x: 1058, y: 10, name: \"surface_area\") property(Number) surface_area_5b7d3c\n\n        instance(x: 11, y: -4) mul_f6e0ee root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 334, y: 127) data_cde0dc  = 6\n        size_1a9f2e -> mul_f6e0ee.first\n        data_cde0dc -> mul_f6e0ee.second\n        mul_f6e0ee.result -> surface_area_5b7d3c\n    }\n\n    \n\n    instance(x: 117, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -219, y: 55, name: \"size\") property(Number) size_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        data_cde0dc -> mul_f892a4.first\n        expression_2d6da6.result -> mul_f892a4.second\n        size_3a3116 -> expression_2d6da6.gen_0\n        mul_f892a4.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -102, y: 15, name: \"size\") property(Number) size_3f8a6d\n\n        out(x: 1000, y: 12, name: \"surface_area\") property(Number) surface_area_1b9c7e\n\n        instance(x: 13, y: -5) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_3f8a6d -> mul_2f9d09.first\n        data_cde0dc -> mul_2f9d09.second\n        mul_2f9d09.result -> surface_area_1b9c7e\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -102, y: 22, name: \"size\") property(Number) size_9f5e8d\n\n        out(x: 1016, y: 12, name: \"surface_area\") property(Number) surface_area_7c2b1a\n\n        instance(x: 15, y: -16) mul_3f0c4c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 333, y: 127) data_9d6e5c  = [size]\n        instance(x: 287, y: 2) mul_7a8c1f root.Std_k98ojb.Math.Mul {}\n        size_9f5e8d -> data_9d6e5c.size\n        data_9d6e5c.size -> mul_3f0c4c.first\n        data_9d6e5c.size -> mul_7a8c1f.first\n        6 -> mul_3f0c4c.second\n        2 -> mul_7a8c1f.second\n        mul_3f0c4c.result -> surface_area_7c2b1a\n        mul_7a8c1f.result -> mul_3f0c4c.second\n    }\n\n    \n\n    instance(x: 111, y: -26) cube_surface_area_9e5d6f root.main.cube_surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 22, name: \"list\") property(List) list_6a9f1e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        list_6a9f1e -> max_f3b46d.items\n        list_6a9f1e -> min_4d4556.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -31, y: 16, name: \"list\") property(List) list_1e8f3a\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        list_1e8f3a -> max_f3b46d.items\n        list_1e8f3a -> min_4d4556.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -37, y: 13, name: \"list\") property(List) list_1e8b5f\n\n        out(x: 456, y: 22, name: \"difference\") property(Number) difference_4a7d2c\n\n        instance(x: -105, y: 23) max_9e3f0f root.Std_k98ojb.List.Max {}\n        instance(x: -106, y: -79) min_1a5b8f root.Std_k98ojb.List.Min {}\n        instance(x: 201, y: 21) sub_6c7d2f root.Std_k98ojb.Math.Sub {}\n        list_1e8b5f -> max_9e3f0f.items\n        list_1e8b5f -> min_1a5b8f.items\n        max_9e3f0f.max -> sub_6c7d2f.first\n        min_1a5b8f.min -> sub_6c7d2f.second\n        sub_6c7d2f.result -> difference_4a7d2c\n    }\n\n    \n\n    instance(x: 48, y: -11) diff_max_min_15f9e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -32, y: 11, name: \"list\") property(List) list_6a3f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        list_6a3f8e -> max_f3b46d.items\n        list_6a3f8e -> min_4d4556.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_0f8b2e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        list_0f8b2e -> max_f3b46d.items\n        list_0f8b2e -> min_4d4556.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -30, y: 10, name: \"list\") property(List) list_4e9f1a\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_3c2b5d\n\n        instance(x: -82, y: 155) max_8b0c7f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_1e9a6c root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        max_8b0c7f.max -> sub_852f2e.first\n        min_1e9a6c.min -> sub_852f2e.second\n        list_4e9f1a -> max_8b0c7f.items\n        list_4e9f1a -> min_1e9a6c.items\n        sub_852f2e.result -> output_3c2b5d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -31, y: 18, name: \"list\") property(List) list_1a9f2e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_7c3d8b\n\n        instance(x: -82, y: 155) max_5b4e0c root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_9f2a6f root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        max_5b4e0c.max -> sub_852f2e.first\n        min_9f2a6f.min -> sub_852f2e.second\n        list_1a9f2e -> max_5b4e0c.items\n        list_1a9f2e -> min_9f2a6f.items\n        sub_852f2e.result -> output_7c3d8b\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_15f9e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 157, name: \"list\") property(List) list_0d1b9f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        list_0d1b9f -> max_f3b46d.items\n        list_0d1b9f -> min_4d4556.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_6a9b1f\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_7e5d4c\n\n        instance(x: -82, y: 155) max_2a8f3f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_1a0f9f root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_6a9b1f -> max_2a8f3f.items\n        list_6a9b1f -> min_1a0f9f.items\n        max_2a8f3f.max -> sub_852f2e.first\n        min_1a0f9f.min -> sub_852f2e.second\n        sub_852f2e.result -> output_7e5d4c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1a0f8e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_7b9d4c\n\n        instance(x: -82, y: 155) max_2e5c3f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_1a8b0f root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        max_2e5c3f.max -> sub_852f2e.first\n        min_1a8b0f.min -> sub_852f2e.second\n        list_1a0f8e -> max_2e5c3f.items\n        list_1a0f8e -> min_1a8b0f.items\n        sub_852f2e.result -> output_7b9d4c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 0, name: \"input\") property(Number) input_5f3a9e\n\n        out(x: 1268, y: 1, name: \"output\") property(Bool) output_6c2d7b\n\n        instance(x: 201, y: -4) modulo_f9b0cc root.Std_k98ojb.Math.Modulo {}\n        instance(x: 447, y: 3) notequal_5f1e8a root.Std_k98ojb.Logic.NotEqual {}\n        input_5f3a9e -> modulo_f9b0cc.value\n        2 -> modulo_f9b0cc.divisor\n        modulo_f9b0cc.result -> notequal_5f1e8a.left\n        0 -> notequal_5f1e8a.right\n        not(notequal_5f1e8a.result) -> output_6c2d7b\n    }\n\n    \n\n    instance(x: -3, y: 12) is_even_9c4f2c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -34, y: 127, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> out_f3db9f\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> out_f3db9f\n        for_8cb3f6.done -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_2e4c1b root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -36, y: 0, name: \"input\") property(Number) input_1e8a3f\n        out(x: 1232, y: 16, name: \"output\") property(Bool) output_7b6c4d\n\n        instance(x: 1045, y: -9) modulo_0a7f0f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1331, y: 17) notequal_3e8a2c root.Std_k98ojb.Logic.NotEqual {}\n        input_1e8a3f -> modulo_0a7f0f.value\n        2 -> modulo_0a7f0f.divisor\n        modulo_0a7f0f.result -> notequal_3e8a2c.left\n        0 -> notequal_3e8a2c.right\n        notequal_3e8a2c.result -> output_7b6c4d\n    }\n\n    \n\n    instance(x: -1, y: -11) is_even_5f9c8c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_0a8f1e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_0a8f1e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_0a8f1e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_0a8f1e -> expression_9fba8c.gen_0\n        input_0a8f1e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e0d2c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 11, name: \"input\") property(Number) input_1e3f6d\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_170471 -> modulo_c76d2b.value\n        } -> map_c73e3b.handler\n        list_07cae4: List = [0, 1]\n        map_c73e3b.items = list_07cae4\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -31, y: 2, name: \"input\") property(Number) input_9e8f5d\n        out(x: 1266, y: 63, name: \"output\") property(Bool) output_1a7c3b\n\n        instance(x: 1024, y: 61) modulo_0e2f49 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1298, y: 62) equal_6d9b5f root.Std_k98ojb.Logic.Equal {}\n        input_9e8f5d -> modulo_0e2f49.value\n        2 -> modulo_0e2f49.divisor\n        0 -> equal_6d9b5f.right\n        modulo_0e2f49.result -> equal_6d9b5f.left\n        equal_6d9b5f.result -> output_1a7c3b\n    }\n\n    \n\n    instance(x: -14, y: 11) is_even_8f4f0c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -34, y: 127, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> out_f3db9f\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> out_f3db9f\n        for_8cb3f6.done -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e2c5b root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -27, y: 3, name: \"input\") property(Number) input_1e8f9d\n        out(x: 1270, y: 2, name: \"output\") property(Bool) output_7a5b4c\n\n        instance(x: 105, y: -10, name: \"modulo\") modulo_6b3b1f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 426, y: 2) notequal_9d8e0c root.Std_k98ojb.Logic.NotEqual {}\n        input_1e8f9d -> modulo_6b3b1f.value\n        2 -> modulo_6b3b1f.divisor\n        modulo_6b3b1f.result -> notequal_9d8e0c.left\n        0 -> notequal_9d8e0c.right\n        notequal_9d8e0c.result -> output_7a5b4c\n    }\n\n    \n\n    instance(x: -10, y: -14) is_even_2f6b3c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 11, name: \"input\") property(Number) input_9a8f6e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_1c3d5b\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 432, y: 57) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n        input_9a8f6e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> notequal_cb8a55.left\n        0 -> notequal_cb8a55.right\n        notequal_cb8a55.result -> output_1c3d5b\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_0a8f1e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_0a8f1e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_0a8f1e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_0a8f1e -> expression_9fba8c.gen_0\n        input_0a8f1e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_2d1e5c root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5f3b4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7e8a9d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) ``find_7e8a9d_1`` root.Std_k98ojb.Iteration.Find {}\n        characters_5f3b4c.characters -> find_7e8a9d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a6b2f0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3d4a5c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_a6b2f0 -> contains_3d4a5c.input\n            find_7e8a9d.item -> contains_3d4a5c.contains\n            contains_3d4a5c.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_7e8a9d.predicate\n        characters_5f3b4c.characters -> ``find_7e8a9d_1``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a6b2f0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3d4a5c root.Std_k98ojb.Strings.Contains {}\n            current_a6b2f0 -> contains_3d4a5c.input\n            find_7e8a9d.item -> contains_3d4a5c.contains\n            contains_3d4a5c.result -> bool_1eb6e9\n        } -> ``find_7e8a9d_1``.predicate\n        find_7e8a9d.item -> result_0\n        input_0 -> characters_5f3b4c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -2, name: \"output\") property(Any) output_3\n\n        instance(x: 0, y: 0) characters_7e6b9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 1) find_4f5a8d root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"first\") ``first repeated character_2`` root.Std_k98ojb.Iteration.Find {}\n        characters_7e6b9c.input -> find_4f5a8d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 112, y: 80) contains_7e6b9c root.Std_k98ojb.Strings.Contains {}\n            find_4f5a8d.item -> contains_7e6b9c.input\n            current_1 -> contains_7e6b9c.contains\n            contains_7e6b9c.result -> bool_2\n        } -> find_4f5a8d.predicate\n        characters_7e6b9c.characters -> ``first repeated character_2``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 112, y: 80) contains_7e6b9c root.Std_k98ojb.Strings.Contains {}\n            find_4f5a8d.item -> contains_7e6b9c.input\n            current_1 -> contains_7e6b9c.contains\n            contains_7e6b9c.result -> bool_2\n        } -> ``first repeated character_2``.predicate\n        input_1 -> characters_7e6b9c.input\n        find_4f5a8d.item -> output_3\n    }\n\n    \n\n    instance(x: -81, y: 159) first_repeated_char_f15bad root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -282, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3b9f7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4e8d6a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 265, y: -100) filter_2b1c5c root.Std_k98ojb.Iteration.Filter {}\n        characters_3b9f7c.characters -> find_4e8d6a.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0c2ad\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3f7d5a root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_a0c2ad -> contains_3f7d5a.input\n            characters_3b9f7c.characters -> contains_3f7d5a.contains\n            contains_3f7d5a.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_4e8d6a.predicate\n        instance(x: -39, y: 26) characters_3b9f7c_0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257) ``find_4e8d6a_1`` root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0c2ad\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3f7d5a_2 root.Std_k98ojb.Strings.Contains {}\n            current_a0c2ad -> contains_3f7d5a_2.input\n            find_4e8d6a.item -> contains_3f7d5a_2.contains\n            contains_3f7d5a_2.result -> bool_1eb6e9\n        } -> ``find_4e8d6a_1``.predicate\n        characters_3b9f7c.characters -> ``find_4e8d6a_1``.items\n        find_4e8d6a.item -> result_0\n        input_0 -> characters_3b9f7c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 0) characters_7f3b5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        data_instance(x: 394, y: -339) data_3c713b  = [seen]\n        characters_7f3b5c.input -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            data_3c713b.seen -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) list_add_0c7a8f root.Std_k98ojb.List.Add {}\n            data_3c713b.seen -> list_add_0c7a8f.list\n            current_afd5b1 -> list_add_0c7a8f.item\n            list_add_0c7a8f.listWithItem -> data_3c713b.seen\n        } -> find_6d05b0.onItem\n        input_0 -> characters_7f3b5c.input\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_f15bad root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_d624f root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated character\") ``characters_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        input_0 -> characters_d624f.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            characters_d624f.characters -> contains_45e806.input\n            current_afd5b1 -> contains_45e806.contains\n            contains_45e806.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            characters_d624f.characters -> contains_45e806.input\n            current_afd5b1 -> contains_45e806.contains\n            contains_45e806.result -> bool_1eb6e9\n        } -> ``characters_0b1361``.predicate\n        find_7e1ce0.item -> ``characters_0b1361``.items\n        characters_d624f.characters -> ``characters_0b1361``.items\n        ``characters_0b1361``.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3e4c9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7d8a5f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) ``find_7d8a5f_1`` root.Std_k98ojb.Iteration.Find {}\n        characters_3e4c9f.characters -> find_7d8a5f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) ``contains_d42dce_2`` root.Std_k98ojb.Iteration.Find {}\n            current_afd5b1 -> contains_d42dce.input\n            characters_3e4c9f.characters -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_7d8a5f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_3e4c9f.characters -> contains_d42dce.contains\n            current_afd5b1 -> contains_d42dce.input\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``find_7d8a5f_1``.predicate\n        find_7d8a5f.item -> result_0\n        characters_3e4c9f.characters -> ``find_7d8a5f_1``.items\n        input_0 -> characters_3e4c9f.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_1 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_807ffd.left\n            find_6d05b0.index -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: 0, y: -1) characters_5e3c9f root.Std_k98ojb.Strings.Characters {}\n        input_1 -> characters_5e3c9f.input\n        characters_5e3c9f.characters -> find_6d05b0.items\n        find_6d05b0.item -> output_0\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -288, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3e4c5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7a8d6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) ``find_7a8d6f_1`` root.Std_k98ojb.Iteration.Find {}\n        characters_3e4c5f.characters -> find_7a8d6f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a9c2a0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_8b7f3d root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_a9c2a0 -> contains_8b7f3d.input\n            find_7a8d6f.item -> contains_8b7f3d.contains\n            contains_8b7f3d.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_7a8d6f.predicate\n        characters_3e4c5f.characters -> ``find_7a8d6f_1``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a9c2a0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_8b7f3d root.Std_k98ojb.Strings.Contains {}\n            current_a9c2a0 -> contains_8b7f3d.input\n            find_7a8d6f.item -> contains_8b7f3d.contains\n            contains_8b7f3d.result -> bool_1eb6e9\n        } -> ``find_7a8d6f_1``.predicate\n        find_7a8d6f.item -> result_0\n        input_0 -> characters_3e4c5f.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated character\") ``characters_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        input_0 -> characters_3c713b.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_3c713b.characters -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_3c713b.characters -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``characters_0b1361``.predicate\n        find_6d05b0.items -> ``characters_0b1361``.items\n        input_0 -> find_6d05b0.items\n        ``characters_0b1361``.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_09fcba root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated character\") ``characters_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        input_0 -> characters_09fcba.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            find_7e1ce0.item -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``characters_0b1361``.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_09fcba.characters -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        ``characters_0b1361``.items -> characters_09fcba.characters\n        characters_09fcba.characters -> find_7e1ce0.items\n        ``characters_0b1361``.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -20, y: 57) min_9a3f1c root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_9a3f1c.items\n            min_9a3f1c.min -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: -193, name: \"items\") property(List) items_ai\n        out(x: 46, y: 158, name: \"second min\") property(Number) second_min_ai\n\n        instance(x: -105, y: -110) find_1c5a7f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_ae\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1c\n\n            instance(x: 89, y: 29) min_2a0f7d root.Std_k98ojb.List.Min {}\n            items_ai -> min_2a0f7d.items\n            min_2a0f7d.min -> elem_ae\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            elem_ae -> notequal_807ffd.left\n            min_2a0f7d.min -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_1c\n        } -> find_1c5a7f.predicate\n        items_ai -> find_1c5a7f.items\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        find_1c5a7f.item -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -285, y: -0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"second smallest\") property(Number) second_smallest_f9110a\n\n        instance(x: 0, y: 0) min_node root.Std_k98ojb.List.Min {}\n        list_9f7759 -> min_node.items\n        instance(x: 0, y: 0) filter_node root.Std_k98ojb.Query.Filter {\n            where: \"it > min\"\n        }\n        min_node.min -> filter_node.list\n        list_9f7759 -> filter_node.list\n        instance(x: 0, y: 0) min2_node root.Std_k98ojb.List.Min {}\n        filter_node.result -> min2_node.items\n        min2_node.min -> second_smallest_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: -193, name: \"items\") property(List) items_ai\n        out(x: 46, y: 158, name: \"second min\") property(Number) second_min_ai\n\n        instance(x: -105, y: -110) find_1c7a6f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_ae\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1c7a6f\n\n            instance(x: 89, y: 29) min_2b0d3f root.Std_k98ojb.List.Min {}\n            items_ai -> min_2b0d3f.items\n            min_2b0d3f.min -> elem_ae\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            elem_ae -> notequal_807ffd.left\n            min_2b0d3f.min -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_1c7a6f\n        } -> find_1c7a6f.predicate\n        items_ai -> find_1c7a6f.items\n        find_1c7a6f.item -> second_min_ai\n\n    }\n    \n\n    instance(x: -174, y: -63) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -1, y: 0) min_7c3e4f root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_7c3e4f.items\n            min_7c3e4f.min -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: -0, name: \"list\") property(List) list_8f9d6a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -15, y: 49) min_7e9f4a root.Std_k98ojb.List.Min {}\n            list_8f9d6a -> min_7e9f4a.items\n            min_7e9f4a.min -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.result\n            notequal_807ffd.right -> modulo_1088d5.result\n            0 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_8f9d6a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: -193, name: \"items\") property(List) items_ai\n        out(x: 46, y: 158, name: \"second min\") property(Number) second_min_ai\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> min_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n\n        instance(x: -105, y: 0) find_second_smallest root.Std_k98ojb.Iteration.Find {\n            predicate: \"it != min_b2508f\"\n        }\n        items_ai -> find_second_smallest.items\n        find_second_smallest.item -> second_min_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) second_smallest_d6e930 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -288, y: -193, name: \"items\") property(List) items_9f7759\n\n        out(x: 46, y: 158, name: \"second min\") property(Number) second_min_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> min_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n\n        instance(x: -105, y: 0) ifexpression_9e3d5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"min < a\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1c7b4f\") getter_1c7b4f = min\n        setter(x: 116, y: -268, name: \"setter_3e8d2a\") setter_3e8d2a = min\n        a_9f7759 -> ifexpression_9e3d5a.gen_0\n        getter_1c7b4f.value -> ifexpression_9e3d5a.gen_1\n        ifexpression_9e3d5a.then -> setter_3e8d2a.execute\n        a_9f7759 -> setter_3e8d2a.new_value\n        getter_1c7b4f.value -> ifexpression_9e3d5a.gen_1\n        ifexpression_9e3d5a.else -> continue_685c8f\n        min_b2508f -> getter_1c7b4f.value\n        setter_3e8d2a.continue -> continue_685c8f\n\n        instance(x: -105, y: 0) ifexpression_9e3d5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"min < a\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1c7b4f\") getter_1c7b4f = min\n        setter(x: 116, y: -268, name: \"setter_3e8d2a\") setter_3e8d2a = min\n        a_9f7759 -> ifexpression_9e3d5a.gen_0\n        getter_1c7b4f.value -> ifexpression_9e3d5a.gen_1\n        ifexpression_9e3d5a.then -> setter_3e8d2a.execute\n        a_9f7759 -> setter_3e8d2a.new_value\n        getter_1c7b4f.value -> ifexpression_9e3d5a.gen_1\n        ifexpression_9e3d5a.else -> continue_685c8f\n        min_b2508f -> getter_1c7b4f.value\n        setter_3e8d2a.continue -> continue_685c8f\n\n        instance(x: -105, y: 0) ifexpression_9e3d5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"min < a\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1c7b4f\") getter_1c7b4f = min\n        setter(x: 116, y: -268, name: \"setter_3e8d2a\") setter_3e8d2a = min\n        a_9f7759 -> ifexpression_9e3d5a.gen_0\n        getter_1c7b4f.value -> ifexpression_9e3d5a.gen_1\n        ifexpression_9e3d5a.then -> setter_3e8d2a.execute\n        a_9f7759 -> setter_3e8d2a.new_value\n        getter_1c7b4f.value -> ifexpression_9e3d5a.gen_1\n        ifexpression_9e3d5a.else -> continue_685c8f\n        min_b2508f -> getter_1c7b4f.value\n        setter_3e8d2a.continue -> continue_685c8f\n\n        instance(x: -105, y: 0) ifexpression_9e3d5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"min < a\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1c7b4f\") getter_1c7b4f = min\n        setter(x: 116, y: -268, name: \"setter_3e8d2a\") setter_3e8d2a = min\n        a_9f7759 -> ifexpression_9e3d5a.gen_0\n        getter_1c7b4f.value -> ifexpression_9e3d5a.gen_1\n        ifexpression_9e3d5a.then -> setter_3e8d2a.execute\n        a_9f7759 -> setter_3e8d2a.new_value\n        getter_1c7b4f.value -> ifexpression_9e3d5a.gen_1\n        ifexpression_9e3d5a.else -> continue_685c8f\n        min_b2508f -> getter_1c7b4f.value\n        setter_3e8d2a.continue -> continue_685c8f\n\n        instance(x: -105, y: 0) ifexpression_9e3d5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"min < a\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1c7b4f\") getter_1c7b4f = min\n        setter(x: 116, y: -268, name: \"setter_3e8d2a\") setter_3e8d2a = min\n        a_9f7759 -> ifexpression_9e3d5a.gen_0\n        getter_1c7b4f.value -> ifexpression_9e3d5a.gen_1\n        ifexpression_9e3d5a.then -> setter_3e8d2a.execute\n        a_9f7759 -> setter_3e8d2a.new_value\n        getter_1c7b4f.value -> ifexpression_9e3d5a.gen_1\n        ifexpression_9e3d5a.else -> continue_685c8f\n        min_b2508f -> getter_1c7b4f.value\n        setter_3e8d2a.continue -> continue_685c8f\n\n        instance(x: -105, y: 0) ifexpression_9e3d5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"min < a\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1c7b4f\") getter_1c7b4f = min\n        setter(x: 116, y: -268, name: \"setter_3e8d2a\") setter_3e8d2a = min\n        a_9f7759 -> ifexpression_9e3d5a.gen_0\n        getter_1c7b4f.value -> ifexpression_9e3d5a.gen_1\n        ifexpression_9e3d5a.then -> setter_3e8d2a.execute\n        a_9f7759 -> setter_3e8d2a.new_value\n        getter_1c7b",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -2, y: 41) min_9a3c7f root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_9a3c7f.items\n            min_9a3c7f.min -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.result\n            notequal_807ffd.right -> modulo_1088d5.result\n            0 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -1, y: 0) min_9a7f3c root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_9a7f3c.items\n            min_9a7f3c.min -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.result\n            notequal_807ffd.right -> modulo_1088d5.result\n            0 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_MANY_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 16000,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -341, y: -217, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -343, y: 20, name: \"list2\") property(List) list2_5b4c6d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -1, y: -35) intersection_c9e4c2 root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2f9e -> intersection_c9e4c2.left\n        list2_5b4c6d -> intersection_c9e4c2.right\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"intersection.length > 0\"\n        }\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        intersection_c9e4c2.intersection -> ifexpression_875761.gen_0\n        instance(x: -275, y: -35) length_3f8b1d root.Std_k98ojb.List.Length {}\n        length_3f8b1d.list -> intersection_c9e4c2.intersection\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_fc79d5 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -450, y: -213, name: \"list1\") property(List) list1_3f0b8e\n        in(x: -452, y: 27, name: \"list2\") property(List) list2_9a7c5d\n\n        out(x: 1224, y: 10, name: \"output\") property(Bool) output_6c1c3f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_6c1c3f\n        ifexpression_875761.value -> output_6c1c3f\n        list1_3f0b8e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_9a7c5d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        list1_3f0b8e -> ifexpression_875761.gen_2\n        for_d26972.item -> setter_9d4f1c.new_value\n        ifexpression_875761.then -> setter_9d4f1c.execute\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_c7e5b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -467, y: -237, name: \"list1\") property(List) list1_3f0b8e\n        in(x: -481, y: 30, name: \"list2\") property(List) list2_9c4d7a\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_6e1e5c\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_3b0f2c\n\n        instance(x: -275, y: -35) getat_9a7d4f root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_1e6f5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_3a5b0e root.Std_k98ojb.Std.For {}\n        instance(x: 1008, y: -19) contains_7b2b6f root.Std_k98ojb.List.Contains {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        ifexpression_1e6f5f.else -> continue_6e1e5c\n        contains_7b2b6f.is_contained -> output_3b0f2c\n        ifexpression_1e6f5f.value -> contains_7b2b6f.item\n        list2_9c4d7a -> contains_7b2b6f.list\n        ifexpression_1e6f5f.then -> setter_9d4f1c.execute\n        list1_3f0b8e -> for_3a5b0e.items\n        for_3a5b0e.item -> ifexpression_1e6f5f.gen_2\n        for_3a5b0e.index -> ifexpression_1e6f5f.gen_0\n        getter_b280eb.value -> ifexpression_1e6f5f.gen_1\n        for_3a5b0e.onItem -> ifexpression_1e6f5f.execute\n        for_3a5b0e.done -> continue_6e1e5c\n        for_3a5b0e.item -> setter_9d4f1c.new_value\n        list1_3f0b8e -> getat_9a7d4f.list\n        0 -> getat_9a7d4f.index\n        getat_9a7d4f.itemAtIndex -> setter_38e107.new_value\n        contains_7b2b6f.execute -> continue_6e1e5c\n        setter_38e107.continue -> for_3a5b0e.reset\n        setter_9d4f1c.continue -> for_3a5b0e.next\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_2c8b6f root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -437, y: -234, name: \"list1\") property(List) list1_3f0e5d\n        in(x: -445, y: 28, name: \"list2\") property(List) list2_7a9c8b\n\n        out(x: 1224, y: 6, name: \"output\") property(Bool) output_4f1c3d\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_4f1c3d\n        ifexpression_875761.value -> output_4f1c3d\n        list1_3f0e5d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_7a9c8b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        list1_3f0e5d -> ifexpression_875761.gen_2\n        for_d26972.item -> ifexpression_875761.gen_2\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_d26972.done -> output_4f1c3d\n        for_d26972.item -> setter_9d4f1c.new_value\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_7b5a6f root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -341, y: -210, name: \"list1\") property(List) list1_9a8b2f\n        in(x: -347, y: 31, name: \"list2\") property(List) list2_6c0e3d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -1, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 321, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_9a8b2f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        list2_6c0e3d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        for_d26972.item -> setter_9d4f1c.new_value\n        ifexpression_875761.value -> output_5bbcd7\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_3b8a6f root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -375, y: -216, name: \"list1\") property(List) list1_8e3f2d\n        in(x: -377, y: 35, name: \"list2\") property(List) list2_5a0c7b\n\n        out(x: 1229, y: 19, name: \"output\") property(Bool) output_4e1c8f\n\n        instance(x: 1073, y: -25) contains_6d4a1c root.Std_k98ojb.List.Contains {}\n        instance(x: 752, y: -205) ifexpression_7e2a5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e2a5f.else -> output_4e1c8f\n        contains_6d4a1c.is_contained -> ifexpression_7e2a5f.value\n        list1_8e3f2d -> for_d26972.items\n        for_d26972.item -> ifexpression_7e2a5f.gen_2\n        for_d26972.index -> ifexpression_7e2a5f.gen_0\n        getter_b280eb.value -> ifexpression_7e2a5f.gen_1\n        for_d26972.onItem -> ifexpression_7e2a5f.execute\n        list2_5a0c7b -> contains_6d4a1c.list\n        for_d26972.item -> contains_6d4a1c.item\n        ifexpression_7e2a5f.then -> setter_9d4f1c.execute\n        for_d26972.done -> output_4e1c8f\n        list1_8e3f2d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        for_d26972.reset -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.next\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_5b7a6f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -463, y: -235, name: \"list1\") property(List) list1_2a0f8e\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_eb9d6c\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_3a1e4f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_3a1e4f\n        ifexpression_875761.value -> output_3a1e4f\n        list1_2a0f8e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_eb9d6c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        list1_2a0f8e -> ifexpression_875761.gen_3\n        for_d26972.item -> ifexpression_875761.gen_4\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        ifexpression_875761.expression: \"list2.contains(item)\"\n        setter_9d4f1c.new_value: true\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_5b8a2d root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -475, y: -225, name: \"list1\") property(List) list1_3f0b6a\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_9c5d4e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list2_9c5d4e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_3f0b6a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_fc79d5 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -341, y: -207, name: \"list1\") property(List) list1_9e3b8f\n        in(x: -347, y: 31, name: \"list2\") property(List) list2_6c0d7a\n\n        out(x: 1265, y: -11, name: \"output\") property(Bool) output_4f1f9e\n\n        instance(x: 1023, y: 49) contains_8b3f55 root.Std_k98ojb.List.Contains {}\n        instance(x: 647, y: -13) intersection_2a6c7d root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3b8f -> intersection_2a6c7d.left\n        list2_6c0d7a -> intersection_2a6c7d.right\n        intersection_2a6c7d.intersection -> contains_8b3f55.list\n        0 -> contains_8b3f55.item\n        contains_8b3f55.is_contained -> output_4f1f9e\n    }\n\n    \n\n    instance(x: -299, y: -5) common_element_7a4dad root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_9f0e6d\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_5b3c8a\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_4c1b9f\n\n        instance(x: 752, y: 93) intersection_6e0d1f root.Std_k98ojb.Sets.Intersection {}\n        list1_9f0e6d -> intersection_6e0d1f.left\n        list2_5b3c8a -> intersection_6e0d1f.right\n        instance(x: 321, y: -20) notempty_7e4b5c root.Std_k98ojb.List.NotEmpty {}\n        intersection_6e0d1f.intersect -> notempty_7e4b5c.list\n        notempty_7e4b5c.is_not_empty -> output_4c1b9f\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_3a8f2b root.main.common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -535, y: 3, name: \"list\") property(List) list_2f1a9e\n\n        out(x: 1265, y: -6, name: \"output\") property(Bool) output_7c4b0d\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_2f1a9e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_2f1a9e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_5a3b7f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -529, y: 4, name: \"list\") property(List) list_1f0a9e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_3c8b2d\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_6f4a7d\n\n        instance(x: 752, y: 93) ifexpression_1e5b0c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_7a9f6d\") getter_7a9f6d = previous\n        setter(x: 679, y: -313, name: \"setter_5b3c2e\") setter_5b3c2e = previous\n        instance(x: 321, y: -20) for_8e1f4d root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_5b3c2e\") setter_d9a6b7 = previous\n        instance(x: -275, y: -35) getat_3b8b1f root.Std_k98ojb.List.GetAt {}\n        ifexpression_1e5b0c.else -> continue_3c8b2d\n        ifexpression_1e5b0c.value -> output_6f4a7d\n        ifexpression_1e5b0c.then -> setter_5b3c2e.execute\n        list_1f0a9e -> for_8e1f4d.items\n        for_8e1f4d.item -> ifexpression_1e5b0c.gen_2\n        for_8e1f4d.index -> ifexpression_1e5b0c.gen_0\n        getter_7a9f6d.value -> ifexpression_1e5b0c.gen_1\n        for_8e1f4d.onItem -> ifexpression_1e5b0c.execute\n        for_8e1f4d.done -> continue_3c8b2d\n        for_8e1f4d.item -> setter_5b3c2e.new_value\n        list_1f0a9e -> getat_3b8b1f.list\n        0 -> getat_3b8b1f.index\n        getat_3b8b1f.itemAtIndex -> setter_d9a6b7.new_value\n        execute_90aaec -> setter_d9a6b7.execute\n        setter_d9a6b7.continue -> for_8e1f4d.reset\n        setter_5b3c2e.continue -> for_8e1f4d.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_0f7d3e root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -523, y: 2, name: \"list\") property(List) list_1a0f9e\n\n        out(x: 1267, y: -3, name: \"output\") property(Bool) output_8b6d5c\n\n        instance(x: 847, y: -4) contains_3c2c4c root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: 1, name: \"transform numbers to true/false\") map_9e0f7a root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -6) not_3c2d4c root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -11, name: \"current\") property(Number) current_1a0f9e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_1a0f9e -> modulo_c76d2b.value\n            _index_769593 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_9e0f7a.handler\n        list_1a0f9e -> map_9e0f7a.items\n        map_9e0f7a.output_list -> contains_3c2c4c.list\n        false -> contains_3c2c4c.item\n        not_3c2d4c.result -> output_8b6d5c\n        contains_3c2c4c.is_contained -> not_3c2d4c.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_7a4dad root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -533, y: 1, name: \"list\") property(List) list_2f8a4e\n\n        out(x: 555, y: -3, name: \"output\") property(Bool) output_7b9c6d\n\n        instance(x: 772, y: 76) filter_5e0f1f root.Std_k98ojb.Query.Filter {\n            where: \"it + 1 == it.next\"\n        }\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_2f8a4e -> filter_5e0f1f.list\n        filter_5e0f1f.result -> intersection_c7c7e6.left\n        list_2f8a4e -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_7b9c6d\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_8f2a4e root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -489, y: 4, name: \"list\") property(List) list_1a9d6f\n\n        out(x: 1265, y: 3, name: \"output\") property(Bool) output_8c7b2e\n\n        instance(x: 752, y: -11) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 72, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_1a9d6f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1a9d6f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -525, y: 2, name: \"list\") property(List) list_1f0a8e\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_1f0a8e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1f0a8e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_5b8a2a root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -505, y: 3, name: \"list\") property(List) list_5f0e1a\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_9b4c2d\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_3c6f7a\n\n        instance(x: 752, y: 93) ifexpression_1e5c0f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_3a7d2a\") getter_3a7d2a = previous\n        setter(x: 679, y: -313, name: \"setter_8b9f4c\") setter_8b9f4c = previous\n        instance(x: 321, y: -20) for_6e5f1d root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_8b9f4c\") setter_d3a7a2 = previous\n        instance(x: -275, y: -35) getat_8e6f5a root.Std_k98ojb.List.GetAt {}\n        ifexpression_1e5c0f.else -> continue_9b4c2d\n        ifexpression_1e5c0f.value -> output_3c6f7a\n        ifexpression_1e5c0f.then -> setter_8b9f4c.execute\n        list_5f0e1a -> for_6e5f1d.items\n        for_6e5f1d.item -> ifexpression_1e5c0f.gen_2\n        for_6e5f1d.index -> ifexpression_1e5c0f.gen_0\n        getter_3a7d2a.value -> ifexpression_1e5c0f.gen_1\n        for_6e5f1d.onItem -> ifexpression_1e5c0f.execute\n        for_6e5f1d.done -> continue_9b4c2d\n        for_6e5f1d.item -> setter_8b9f4c.new_value\n        list_5f0e1a -> getat_8e6f5a.list\n        0 -> getat_8e6f5a.index\n        getat_8e6f5a.itemAtIndex -> setter_d3a7a2.new_value\n        setter_d3a7a2.continue -> for_6e5f1d.reset\n        setter_8b9f4c.continue -> for_6e5f1d.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_0e8f3a root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -529, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -475, y: 20, name: \"list1\") property(List) list1_5a3f9d\n        in(x: -476, y: -145, name: \"list2\") property(List) list2_6e4b8c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -271, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_5a3f9d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_6e4b8c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 25, name: \"sublist\") property(List) sublist_5e9f8d\n        in(x: -285, y: -115, name: \"list\") property(List) list_1a7c0b\n\n        out(x: 555, y: -96, name: \"output\") property(Bool) output_6c4c3f\n\n        instance(x: -90, y: -95) find_9e5d8c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -30, y: 79, name: \"_index\") property(Number) _index_769593\n            in(x: -23, y: -25, name: \"current\") property(List) current_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) slice_9f8b5c root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            _index_769593 -> slice_9f8b5c.start\n            sublist_5e9f8d -> slice_9f8b5c.list\n            list_1a7c0b.length -> slice_9f8b5c.end\n            slice_9f8b5c.slice -> equal_f89569.left\n            current_81298e -> equal_f89569.right\n            equal_f89569.result -> output_efbc78\n        } -> find_9e5d8c.handler\n        list_1a7c0b -> find_9e5d8c.items\n        find_9e5d8c.item -> output_6c4c3f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_a2c1c8 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 5, name: \"list1\") property(List) list_2a3f9b\n        in(x: -311, y: -145, name: \"list2\") property(List) list_7e4d6c\n\n        out(x: 1050, y: -131, name: \"output\") property(Bool) output_1f5c8a\n\n        instance(x: -89, y: -133, name: \"find sublist\") find_9b2f3f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: 0, y: -25, name: \"current\") property(List) current_1e8a7c\n            in(x: -11, y: 79, name: \"_index\") property(Number) _index_9d5f2b\n\n            out(x: 701, y: 49, name: \"output\") property(Bool) output_e4f3aa\n\n            instance(x: 226, y: 56) contains_7a6c1e root.Std_k98ojb.List.Contains {}\n            list_7e4d6c -> contains_7a6c1e.list\n            current_1e8a7c -> contains_7a6c1e.item\n            contains_7a6c1e.is_contained -> output_e4f3aa\n        } -> find_9b2f3f.predicate\n        instance(x: -272, y: 5) slice_0d7b8c root.Std_k98ojb.List.Slice {}\n        list_2a3f9b -> slice_0d7b8c.list\n        _index_9d5f2b -> slice_0d7b8c.start\n        -1 -> slice_0d7b8c.end\n        slice_0d7b8c.slice -> find_9b2f3f.items\n        func() {\n            in(x: 0, y: -25, name: \"current\") property(List) current_6a4e5f\n\n            out(x: 701, y: 49, name: \"output\") property(Bool) output_1c7b8d\n\n            instance(x: 226, y: 56) equal_2a9b0c root.Std_k98ojb.Logic.Equal {}\n            current_6a4e5f -> equal_2a9b0c.left\n            list_7e4d6c -> equal_2a9b0c.right\n            equal_2a9b0c.result -> output_1c7b8d\n        } -> find_9b2f3f.predicate\n        instance(x: -89, y: 5) generateRange_6e4b6f root.Std_k98ojb.List.GenerateRange {}\n        0 -> generateRange_6e4b6f.from\n        list_2a3f9b.length -> generateRange_6e4b6f.to\n        generateRange_6e4b6f.range -> find_9b2f3f.items\n        find_9b2f3f.item -> output_1f5c8a\n    }\n\n    \n\n    instance(x: -82, y: 59) is_sublist_7d0c1c root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -445, y: 20, name: \"list1\") property(List) list1_3f0a4b\n        in(x: -444, y: -120, name: \"list2\") property(List) list2_9e7c8d\n\n        out(x: 1165, y: -110, name: \"output\") property(Bool) output_6e1c3f\n\n        instance(x: -255, y: -109, name: \"find first item of list2 in list1\") find_4a9b0d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 107, y: -110) contains_5f6e7c root.Std_k98ojb.List.Contains {}\n        instance(x: 425, y: -109) not_8e1f2f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Any) current_7c3a9d\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_5e6f8b\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_1e0b4f\n\n            instance(x: 226, y: 56) equal_7c9a3d root.Std_k98ojb.Logic.Equal {}\n            current_7c3a9d -> equal_7c9a3d.left\n            list2_9e7c8d[_index_5e6f8b] -> equal_7c9a3d.right\n            equal_7c9a3d.result -> output_1e0b4f\n        } -> find_4a9b0d.predicate\n        list1_3f0a4b -> find_4a9b0d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_7c3a9d\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -365, y: 30, name: \"sublist\") property(List) sublist_1a3e5f\n        in(x: -364, y: -160, name: \"list\") property(List) list_9b7c6d\n\n        out(x: 1220, y: -125, name: \"output\") property(Bool) output_8f2b4e\n\n        instance(x: -111, y: -128, name: \"find sublist in list\") find_1a5c3c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: 0, y: -25, name: \"current\") property(List) current_9e6d2f\n            in(x: 0, y: 78, name: \"_index\") property(Number) _index_7a5c3b\n\n            out(x: 711, y: 49, name: \"output\") property(Bool) output_1e8c4f\n\n            instance(x: 226, y: 56) contains_2d0f9f root.Std_k98ojb.List.Contains {}\n            sublist_1a3e5f -> contains_2d0f9f.list\n            current_9e6d2f -> contains_2d0f9f.item\n            contains_2d0f9f.is_contained -> output_1e8c4f\n        } -> find_1a5c3c.predicate\n        instance(x: -276, y: 30) slice_f7b6a8 root.Std_k98ojb.List.Slice {}\n        list_9b7c6d -> slice_f7b6a8.list\n        _index_7a5c3b -> slice_f7b6a8.start\n        -1 -> slice_f7b6a8.end\n        slice_f7b6a8.slice -> find_1a5c3c.items\n        func() {\n            in(x: 0, y: -25, name: \"current\") property(List) current_9e6d2f\n\n            out(x: 711, y: 49, name: \"output\") property(Bool) output_1e8c4f\n\n            instance(x: 226, y: 56) contains_2d0f9f root.Std_k98ojb.List.Contains {}\n            sublist_1a3e5f -> contains_2d0f9f.list\n            current_9e6d2f -> contains_2d0f9f.item\n            contains_2d0f9f.is_contained -> output_1e8c4f\n        } -> find_1a5c3c.predicate\n        instance(x: -276, y: 30) slice_f7b6a8 root.Std_k98ojb.List.Slice {}\n        list_9b7c6d -> slice_f7b6a8.list\n        0 -> slice_f7b6a8.start\n        -1 -> slice_f7b6a8.end\n        slice_f7b6a8.slice -> find_1a5c3c.items\n        find_1a5c3c.item -> output_8f2b4e\n    }\n\n    \n\n    instance(x: 14, y: -121) is_sublist_9d0d7c root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 5, name: \"sublist\") property(List) sublist_2a1f3e\n        in(x: -464, y: 143, name: \"list\") property(List) list_6c8d9b\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_4a0f5f\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_3e2b1e\n\n        instance(x: 752, y: 93) ifexpression_9d7c6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_8a2e4f\") getter_8a2e4f = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_9d7c6f.else -> continue_4a0f5f\n        ifexpression_9d7c6f.value -> output_3e2b1e\n        ifexpression_9d7c6f.then -> setter_9d4f1c.execute\n        list_6c8d9b -> for_d26972.items\n        for_d26972.item -> ifexpression_9d7c6f.gen_2\n        for_d26972.index -> ifexpression_9d7c6f.gen_0\n        getter_8a2e4f.value -> ifexpression_9d7c6f.gen_1\n        for_d26972.onItem -> ifexpression_9d7c6f.execute\n        for_d26972.done -> continue_4a0f5f\n        for_d26972.item -> setter_9d4f1c.new_value\n        sublist_2a1f3e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_4a0f5f -> setter_38e107.continue\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_3b8f6f root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"sublist\") property(List) sublist_2e8f9d\n        in(x: -469, y: -235, name: \"list\") property(List) list_3b7c6a\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3b7c6a -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3b7c6a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: -485, y: 30) contains_32727d root.Std_k98ojb.List.Contains {}\n        sublist_2e8f8d -> contains_32727d.list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        contains_32727d.is_contained -> output_5bbcd7\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 5, name: \"list1\") property(List) list_2e9f3a\n        in(x: -284, y: -175, name: \"list2\") property(List) list_7c6d4b\n\n        out(x: 557, y: -174, name: \"output\") property(Bool) output_5e8c0b\n\n        instance(x: -92, y: -173) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -172) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -171) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_2e9f3a -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_7c6d4b -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        list_2e9f3a -> equal_f89569.right\n        equal_f89569.result -> output_5e8c0b\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_7d4f6f root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -467, y: 20, name: \"list1\") property(List) list1_2e8b9f\n        in(x: -468, y: -170, name: \"list2\") property(List) list2_3c0d7a\n\n        out(x: 1225, y: -159, name: \"output\") property(Bool) output_6e4c1e\n\n        instance(x: -303, y: -158, name: \"find all indices of first element in list2\") findall_8b0d9f root.Std_k98ojb.Iteration.FindAll {}\n        instance(x: 847, y: -156) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -158, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -152) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -47, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> findall_8b0d9f.handler\n        list1_2e8b9f -> findall_8b0d9f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        findall_8b0d9f.indices_of_matches -> map_c73e3b.items\n        list2_3c0d7a -> contains_32727d.list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_32727d.item\n        map_c73e3b.output_list -> contains_32727d.list\n        not_75283f.result -> output_6e4c1e\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 5, name: \"sublist\") property(List) sublist_3a1f9b\n        in(x: -282, y: -166, name: \"list\") property(List) list_7e6d2c\n\n        out(x: 557, y: -157, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -162) find_1a9b4f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            sublist_3a1f9b -> contains_32727d.list\n            _index_769593 -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> find_1a9b4f.predicate\n        list_7e6d2c -> find_1a9b4f.items\n        find_1a9b4f.item -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e4b8f\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c9a5d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_8e3f2c\n            in(x: -113, y: 33, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_5e1b4c root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_8e3f2c -> sub_5e1b4c.first\n            elem_9f6850 -> sub_5e1b4c.second\n            sub_5e1b4c.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3e4b8f -> find_6d05b0.items\n        find_6d05b0.index + 1 -> missing_7c9a5d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a8f9e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c2d6b\n\n        instance(x: 0, y: 0) find_5f4c5e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1a9b2d\n            in(x: -108, y: 116, name: \"elem\") property(Number) elem_3c5f7e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_e4f8a6\n\n            instance(x: 89, y: 29) sub_9d2b1a root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) greaterthan_7c3e5f root.Std_k98ojb.Math.GreaterThan {}\n            index_1a9b2d -> sub_9d2b1a.first\n            elem_3c5f7e -> sub_9d2b1a.second\n            sub_9d2b1a.result -> greaterthan_7c3e5f.left\n            0 -> greaterthan_7c3e5f.right\n            greaterthan_7c3e5f.result -> bool_e4f8a6\n        } -> find_5f4c5e.predicate\n        list_3a8f9e -> find_5f4c5e.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1a9b2d\n            in(x: -108, y: 116, name: \"elem\") property(Number) elem_3c5f7e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_e4f8a6\n\n            instance(x: 89, y: 29) sub_9d2b1a root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) greaterthan_7c3e5f root.Std_k98ojb.Math.GreaterThan {}\n            index_1a9b2d -> sub_9d2b1a.first\n            elem_3c5f7e -> sub_9d2b1a.second\n            sub_9d2b1a.result -> greaterthan_7c3e5f.left\n            0 -> greaterthan_7c3e5f.right\n            greaterthan_7c3e5f.result -> bool_e4f8a6\n        } -> find_5f4c5e.context\n        index_1a9b2d -> find_missing.missing_7c2d6b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_3b0b6f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 0, name: \"list\") property(List) list_1f8d9e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_2b7c4a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_e5f8e9\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_3e4c5d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_e5f8e9 -> add_3e4c5d.first\n            1 -> add_3e4c5d.second\n            elem_9f6850 -> notequal_807ffd.right\n            add_3e4c5d.result -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_1f8d9e -> find_6d05b0.items\n        find_6d05b0.index -> missing_2b7c4a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_3b5d1f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 0, name: \"list\") property(List) list_3e9f5a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7b2d8c\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3e9f5a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"elem\") property(Any) elem_af09a7\n\n            instance(x: 89, y: 29) getat_1088d5 root.Std_k98ojb.List.GetAt {}\n            index_9f6850 -> getat_1088d5.index\n            list_3e9f5a -> getat_1088d5.list\n            getat_1088d5.item -> elem_af09a7\n        } -> find_6d05b0.handler\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"elem\") property(Any) elem_af09a7\n\n            instance(x: 89, y: 29) generate_range_1088d5 root.Std_k98ojb.List.GenerateRange {}\n            0 -> generate_range_1088d5.from\n            list_3e9f5a.Length() -> generate_range_1088d5.to\n            generate_range_1088d5.list -> elem_af09a7\n        } -> find_6d05b0.context\n        find_6d05b0.item -> missing_7b2d8c\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 0, name: \"list\") property(List) list_9f6d4a\n\n        out(x: 590, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n            in(x: -108, y: 44, name: \"elem\") property(Number) elem_af09a7\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1d8c5e\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> sub_1088d5.first\n            elem_af09a7 -> sub_1088d5.second\n            sub_1088d5.result -> notequal_807ffd.left\n            1 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_1d8c5e\n        } -> find_6d05b0.predicate\n        list_9f6d4a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"elem\") property(Number) elem_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> elem_af09a7\n        } -> find_6d05b0.handler\n        func() {\n            out(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            instance(x: 89, y: 29) max2_1088d5 root.Std_k98ojb.Math.Max2 {}\n            0 -> max2_1088d5.left\n            list_9f6d4a.length - 1 -> max2_1088d5.right\n            max2_1088d5.max -> index_9f6850\n        } -> find_6d05b0.context\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1a2b3c\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_4d5e6f\n\n        instance(x: 0, y: 0) find_missing_instance root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_7g8h9i\n            in(x: -123, y: 44, name: \"elem\") property(Number) elem_jk0l1m\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_nopqrs\n\n            instance(x: 89, y: 29) add_abc123 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_xyz456 root.Std_k98ojb.Logic.NotEqual {}\n            index_7g8h9i -> add_abc123.first\n            1 -> add_abc123.second\n            add_abc123.result -> notequal_xyz456.left\n            elem_jk0l1m -> notequal_xyz456.right\n            notequal_xyz456.result -> bool_nopqrs\n        } -> find_missing_instance.predicate\n        list_1a2b3c -> find_missing_instance.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_tuv789\n\n            out(x: 515, y: 44, name: \"elem\") property(Number) elem_wxyz012\n\n            instance(x: 89, y: 29) getat_345def root.Std_k98ojb.List.GetAt {}\n            index_tuv789 -> getat_345def.index\n            list_1a2b3c -> getat_345def.list\n            getat_345def.item -> elem_wxyz012\n        } -> find_missing_instance.handler\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_123ghi\n\n            out(x: 515, y: 44, name: \"result\") property(Any) result_jklmno\n\n            instance(x: 89, y: 29) add_pqrstu root.Std_k98ojb.Math.Add {}\n            index_123ghi -> add_pqrstu.first\n            0 -> add_pqrstu.second\n            add_pqrstu.result -> result_jklmno\n        } -> find_missing_instance.context\n        find_missing_instance.item -> missing_number_4d5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_node root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a1f5e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c8b6d\n\n        instance(x: 0, y: 0) find_4f9c2a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1e7b3e\n            in(x: -108, y: 116, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1e5c8d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_1e7b3e -> add_1e5c8d.first\n            1 -> add_1e5c8d.second\n            add_1e5c8d.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_4f9c2a.predicate\n        list_3a1f5e -> find_4f9c2a.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1e7b3e\n\n            out(x: 515, y: 44, name: \"elem\") property(Any) elem_6d0f5c\n\n            instance(x: 89, y: 29) getat_2a8b9c root.Std_k98ojb.List.GetAt {}\n            index_1e7b3e -> getat_2a8b9c.index\n            list_3a1f5e -> getat_2a8b9c.list\n            getat_2a8b9c.item -> elem_6d0f5c\n        } -> find_4f9c2a.handler\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1e7b3e\n\n            out(x: 515, y: 44, name: \"elem\") property(Any) elem_6d0f5c\n\n            instance(x: 89, y: 29) getat_2a8b9c root.Std_k98ojb.List.GetAt {}\n            index_1e7b3e -> getat_2a8b9c.index\n            list_3a1f5e -> getat_2a8b9c.list\n            getat_2a8b9c.item -> elem_6d0f5c\n        } -> find_4f9c2a.context\n        find_4f9c2a.index + 1 -> missing_7c8b6d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_3e7c4f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9e3f8a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7b2c6d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1a9e7f\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_2c3b5e root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_1a9e7f -> sub_2c3b5e.first\n            elem_9f6850 -> sub_2c3b5e.second\n            sub_2c3b5e.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9e3f8a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1a9e7f\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_2c3b5e root.Std_k98ojb.Math.Sub {}\n            index_1a9e7f -> sub_2c3b5e.first\n            elem_9f6850 -> sub_2c3b5e.second\n            sub_2c3b5e.result -> bool_af09a7\n        } -> find_6d05b0.index_predicate\n        find_6d05b0.item -> missing_7b2c6d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -280, y: 0, name: \"list\") property(List) list_3a8f6e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_9c7d2b\n\n        instance(x: 0, y: 0) for_4a5c5e root.Std_k98ojb.Std.For {\n            items: list_3a8f6e\n        }\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1d9b7e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2c8f3a\n\n            instance(x: 89, y: 29) sub_5f4b6a root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) greaterthan_7e9d1f root.Std_k98ojb.Math.GreaterThan {}\n            index_1d9b7e -> sub_5f4b6a.first\n            item -> sub_5f4b6a.second\n            sub_5f4b6a.result -> greaterthan_7e9d1f.left\n            0 -> greaterthan_7e9d1f.right\n            greaterthan_7e9d1f.result -> bool_2c8f3a\n        } -> for_4a5c5e.handler\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_6b0f8e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3d9a7c\n\n            instance(x: 89, y: 29) sub_2f4b1a root.Std_k98ojb.Math.Sub {}\n            index_6b0f8e -> sub_2f4b1a.first\n            item -> sub_2f4b1a.second\n            sub_2f4b1a.result -> bool_3d9a7c\n        } -> for_4a5c5e.predicate\n        instance(x: 0, y: 0) find_8d5c6e root.Std_k98ojb.Iteration.Find {\n            predicate: \"it > 0\"\n        }\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Bool) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            elem_9f6850 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_8d5c6e.predicate\n        for_4a5c5e.index -> find_8d5c6e.items\n        find_8d5c6e.item -> missing_9c7d2b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n            in(x: -103, y: 44, name: \"elem\") property(Number) elem_af09a7\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3bc2ae\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_af09a7 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_3bc2ae\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"elem\") property(Any) elem_af09a7\n\n            instance(x: 89, y: 29) getat_1088d5 root.Std_k98ojb.List.GetAt {}\n            index_9f6850 -> getat_1088d5.index\n            list_9f7759 -> getat_1088d5.list\n            getat_1088d5.item -> elem_af09a7\n        } -> find_6d05b0.handler\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"result\") property(Any) result_af09a7\n\n            instance(x: 89, y: 29) number_1088d5 root.Std_k98ojb.Data.Number {}\n            index_9f6850 -> number_1088d5.value\n            number_1088d5.number -> result_af09a7\n        } -> find_6d05b0.context\n        find_6d05b0.item -> missing_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -124, y: 0, name: \"input\") property(String) input_9f8a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1b4c5e\n\n        instance(x: 0, y: 1) replace_7a6d7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a8c2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_5e9c1e root.Std_k98ojb.Strings.Replace {}\n        input_9f8a3d -> replace_7a6d7f.input\n        \" \" -> replace_7a6d7f.search\n        \":\" -> replace_7a6d7f.replace\n        replace_7a6d7f.output -> replace_3a8c2d.input\n        \",\" -> replace_3a8c2d.search\n        \":\" -> replace_3a8c2d.replace\n        replace_3a8c2d.output -> replace_5e9c1e.input\n        \".\" -> replace_5e9c1e.search\n        \":\" -> replace_5e9c1e.replace\n        replace_5e9c1e.output -> output_1b4c5e\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -125, y: 0, name: \"input\") property(String) input_1a8f6e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4b7c9d\n\n        instance(x: 0, y: 1) replace_3e5d4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a6c2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c9e7da root.Std_k98ojb.Strings.Replace {}\n        input_1a8f6e -> replace_3e5d4f.input\n        \" \" -> replace_3e5d4f.search\n        \":\" -> replace_3e5d4f.replace\n        replace_3e5d4f.output -> replace_8a6c2f.input\n        \",\" -> replace_8a6c2f.search\n        \":\" -> replace_8a6c2f.replace\n        replace_8a6c2f.output -> replace_c9e7da.input\n        \".\" -> replace_c9e7da.search\n        \":\" -> replace_c9e7da.replace\n        replace_c9e7da.output -> output_4b7c9d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_1a8f6e root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"input\") property(String) input_1a8f6e\n\n        out(x: 532, y: -2, name: \"output\") property(String) output_3c7d4b\n\n        instance(x: 0, y: 1) replace_9e5f1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6a8b2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_3c4d7f root.Std_k98ojb.Strings.Replace {}\n        input_1a8f6e -> replace_9e5f1f.input\n        \" \" -> replace_9e5f1f.search\n        \":\" -> replace_9e5f1f.replace\n        replace_9e5f1f.output -> replace_6a8b2f.input\n        \",\" -> replace_6a8b2f.search\n        \":\" -> replace_6a8b2f.replace\n        replace_6a8b2f.output -> replace_3c4d7f.input\n        \".\" -> replace_3c4d7f.search\n        \":\" -> replace_3c4d7f.replace\n        replace_3c4d7f.output -> output_3c7d4b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -531, y: 2, name: \"input\") property(String) input_1\n        out(x: 340, y: 77, name: \"output\") property(String) output_1\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        instance(x: -531, y: 2) replace_0f5c4e root.Std_k98ojb.Strings.Replace {}\n        instance(x: -531, y: 2) replace_1a8d9c root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_chars.input\n        \" \" -> replace_7b3b7b.search\n        \":\" -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> replace_0f5c4e.input\n        \",\" -> replace_0f5c4e.search\n        \":\" -> replace_0f5c4e.replace\n        replace_0f5c4e.output -> replace_1a8d9c.input\n        \".\" -> replace_1a8d9c.search\n        \":\" -> replace_1a8d9c.replace\n        replace_1a8d9c.output -> output_1\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_chars_59bc6e root.main.replace_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -124, y: 0, name: \"input\") property(String) input_1f3d4a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5e8b7c\n\n        instance(x: 0, y: 1) replace_9a6f0f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4d3f2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_8c5e7c root.Std_k98ojb.Strings.Replace {}\n        input_1f3d4a -> replace_9a6f0f.input\n        \" \" -> replace_9a6f0f.search\n        \":\" -> replace_9a6f0f.replace\n        replace_9a6f0f.output -> replace_4d3f2f.input\n        \",\" -> replace_4d3f2f.search\n        \":\" -> replace_4d3f2f.replace\n        replace_4d3f2f.output -> replace_8c5e7c.input\n        \".\" -> replace_8c5e7c.search\n        \":\" -> replace_8c5e7c.replace\n        replace_8c5e7c.output -> output_5e8b7c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -1489, y: 0, name: \"input\") property(String) input_6f8a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1b5e7c\n\n        instance(x: 0, y: 1) replace_4f9f4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3d8a2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_7e5c1f root.Std_k98ojb.Strings.Replace {}\n        input_6f8a3d -> replace_4f9f4f.input\n        \" \" -> replace_4f9f4f.search\n        \":\" -> replace_4f9f4f.replace\n        replace_4f9f4f.output -> replace_3d8a2d.input\n        \",\" -> replace_3d8a2d.search\n        \":\" -> replace_3d8a2d.replace\n        replace_3d8a2d.output -> replace_7e5c1f.input\n        \".\" -> replace_7e5c1f.search\n        \":\" -> replace_7e5c1f.replace\n        replace_7e5c1f.output -> output_1b5e7c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_e54b7f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -150, y: 0, name: \"input\") property(String) input_3a8f1e\n\n        out(x: 520, y: -2, name: \"output\") property(String) output_7b4d9c\n\n        instance(x: 0, y: 1) replace_5a6c1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8e3b2a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9d4b7c root.Std_k98ojb.Strings.Replace {}\n        input_3a8f1e -> replace_5a6c1f.input\n        \" \" -> replace_5a6c1f.search\n        \":\" -> replace_5a6c1f.replace\n        replace_5a6c1f.output -> replace_8e3b2a.input\n        \",\" -> replace_8e3b2a.search\n        \":\" -> replace_8e3b2a.replace\n        replace_8e3b2a.output -> replace_9d4b7c.input\n        \".\" -> replace_9d4b7c.search\n        \":\" -> replace_9d4b7c.replace\n        replace_9d4b7c.output -> output_7b4d9c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_5e2a8f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -122, y: 0, name: \"input\") property(String) input_2a1f6e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_3c7d8b\n\n        instance(x: 0, y: 1) replace_9e5f4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6a7b2c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_3d8a5b root.Std_k98ojb.Strings.Replace {}\n        input_2a1f6e -> replace_9e5f4f.input\n        \" \" -> replace_9e5f4f.search\n        \":\" -> replace_9e5f4f.replace\n        replace_9e5f4f.output -> replace_6a7b2c.input\n        \",\" -> replace_6a7b2c.search\n        \":\" -> replace_6a7b2c.replace\n        replace_6a7b2c.output -> replace_3d8a5b.input\n        \".\" -> replace_3d8a5b.search\n        \":\" -> replace_3d8a5b.replace\n        replace_3d8a5b.output -> output_3c7d8b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_e54b7f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -124, y: 0, name: \"input\") property(String) input_1a3d9f\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_5e4b8c\n\n        instance(x: 221, y: 1) replace_7f6f0f root.Std_k98ojb.Strings.Replace {}\n        input_1a3d9f -> replace_7f6f0f.input\n        \" ,.\" -> replace_7f6f0f.search\n        \":\" -> replace_7f6f0f.replace\n        replace_7f6f0f.output -> output_5e4b8c\n    }\n\n    \n\n    instance(x: 101, y: -67) replace_chars_2a3d9f root.main.replace_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"input\") property(String) input_2f3a8d\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_5e9c6b\n\n        instance(x: 221, y: 1) replace_4f7c0f root.Std_k98ojb.Strings.Replace {}\n        input_2f3a8d -> replace_4f7c0f.input\n        \" ,.\" -> replace_4f7c0f.search\n        \":\" -> replace_4f7c0f.replace\n        replace_4f7c0f.output -> output_5e9c6b\n    }\n\n    \n\n    instance(x: -138, y: 45) replace_chars_1a3d8c root.main.replace_chars {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -316, y: 30, name: \"input\") property(String) input_8f1e9d\n\n        out(x: 1014, y: 24, name: \"output\") property(Bool) output_7c0a6b\n\n        instance(x: -165, y: 31) characters_5b2b3c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 288, y: 23) uniquelist_9f8d1e root.Std_k98ojb.List.UniqueList {}\n        instance(x: 592, y: 24) length_6a4b5a root.Std_k98ojb.List.Length {}\n        instance(x: 808, y: 25) equal_3c7b0c root.Std_k98ojb.Logic.Equal {}\n        characters_5b2b3c.characters -> uniquelist_9f8d1e.list\n        uniquelist_9f8d1e.uniqueList -> length_6a4b5a.list\n        1 -> equal_3c7b0c.right\n        length_6a4b5a.length -> equal_3c7b0c.left\n        equal_3c7b0c.result -> output_7c0a6b\n        input_8f1e9d -> characters_5b2b3c.input\n    }\n\n    \n\n    instance(x: -91, y: 139) is_same_4a1d5f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -305, y: 5, name: \"input\") property(String) input_1f3e8d\n\n        out(x: 1016, y: 15, name: \"output\") property(Bool) output_9a7c4b\n\n        instance(x: -91, y: 13) characters_0c2c5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 244, y: 16) uniquelist_f1f3d8 root.Std_k98ojb.List.UniqueList {}\n        instance(x: 488, y: 15) length_7a6e4f root.Std_k98ojb.List.Length {}\n        instance(x: 712, y: 14) equal_5c9a2c root.Std_k98ojb.Logic.Equal {}\n        characters_0c2c5c.characters -> uniquelist_f1f3d8.list\n        input_1f3e8d -> characters_0c2c5c.input\n        length_7a6e4f.length -> equal_5c9a2c.left\n        1 -> equal_5c9a2c.right\n        equal_5c9a2c.result -> output_9a7c4b\n    }\n\n    \n\n    instance(x: -68, y: 117) is_same_8f6e0d root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -286, y: 3, name: \"input\") property(String) input_1f8e5d\n\n        out(x: 551, y: 99, name: \"output\") property(Bool) output_9b4a7c\n\n        instance(x: -90, y: 100) characters_0f6b2f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 101) length_8e3d1f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 102) equal_f9a5c7 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 574, y: -4) contains_6e0c2c root.Std_k98ojb.Strings.Contains {}\n        characters_0f6b2f.characters -> length_8e3d1f.list\n        input_1f8e5d -> characters_0f6b2f.input\n        1 -> equal_f89569.right\n        length_8166b0.length -> equal_f89569.left\n        contains_6e0c2c.contains -> equal_f9a5c7.left\n        input_1f8e5d -> contains_6e0c2c.input\n        characters_0f6b2f.characters -> contains_6e0c2c.search\n        equal_f89569.result -> equal_f9a5c7.right\n        equal_f9a5c7.result -> output_9b4a7c\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_1f8e5d root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -278, y: 14, name: \"input\") property(String) input_1f3a4d\n\n        out(x: 1016, y: 5, name: \"output\") property(Bool) output_9e7c2b\n\n        instance(x: -111, y: 15, name: \"get all characters\") characters_8f0c9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 299, y: 5) uniquelist_6a1d4c root.Std_k98ojb.List.Unique {}\n        instance(x: 565, y: -2) length_7e3f8f root.Std_k98ojb.List.Length {}\n        instance(x: 768, y: 9) equal_f0a5da root.Std_k98ojb.Logic.Equal {}\n        characters_8f0c9c.characters -> uniquelist_6a1d4c.list\n        length_7e3f8f.length -> equal_f0a5da.left\n        1 -> equal_f0a5da.right\n        uniquelist_6a1d4c.unique_list -> length_7e3f8f.list\n        input_1f3a4d -> characters_8f0c9c.input\n        equal_f0a5da.result -> output_9e7c2b\n    }\n\n    \n\n    instance(x: -64, y: 112) check_same_e6a3d2 root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -288, y: 0, name: \"input\") property(String) input_9a1e3f\n\n        out(x: 1056, y: 5, name: \"output\") property(Bool) output_eb7c8d\n\n        instance(x: -91, y: 4) characters_2e0c1c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 3) length_6a5f9f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 2) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 572, y: -1) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 842, y: 0) not_75283f root.Std_k98ojb.Logic.Not {}\n        characters_2e0c1c.characters -> length_6a5f9f.list\n        input_9a1e3f -> characters_2e0c1c.input\n        length_6a5f9f.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        contains_32727d.is_contained -> not_75283f.input\n        characters_2e0c1c.characters -> contains_32727d.list\n        characters_2e0c1c.characters.FirstItem.item -> contains_32727d.item\n        equal_f89569.result -> output_eb7c8d\n        not_75283f.result -> output_eb7c8d\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_3e1a6 root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -333, y: 11, name: \"input\") property(String) input_8f1e6d\n\n        out(x: 1069, y: 16, name: \"output\") property(Bool) output_5b2c7a\n\n        instance(x: -193, y: 12, name: \"characters\") characters_3a4c0c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 257, y: 14) uniquelist_8e1f9d root.Std_k98ojb.List.Unique {}\n        instance(x: 585, y: 15) length_5b2c7a root.Std_k98ojb.List.Length {}\n        instance(x: 801, y: 16) equal_6e4f3f root.Std_k98ojb.Logic.Equal {}\n        input_8f1e6d -> characters_3a4c0c.input\n        characters_3a4c0c.characters -> uniquelist_8e1f9d.list\n        length_5b2c7a.length -> equal_6e4f3f.left\n        1 -> equal_6e4f3f.right\n        equal_6e4f3f.result -> output_5b2c7a\n    }\n\n    \n\n    instance(x: -87, y: -10) is_same_9d0f8f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -316, y: 0, name: \"input\") property(String) input_8e1f3d\n\n        out(x: 1224, y: 10, name: \"output\") property(Bool) output_7a2c5b\n\n        instance(x: -91, y: 11) characters_6a0b9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 246, y: 12) uniquelist_3d1e8a root.Std_k98ojb.List.Unique {}\n        instance(x: 480, y: 13) length_2c7c4f root.Std_k98ojb.List.Length {}\n        instance(x: 694, y: 14) equal_f0a5ee root.Std_k98ojb.Logic.Equal {}\n        characters_6a0b9f.characters -> uniquelist_3d1e8a.list\n        input_8e1f3d -> characters_6a0b9f.input\n        length_2c7c4f.length -> equal_f0a5ee.left\n        1 -> equal_f0a5ee.right\n        uniquelist_3d1e8a.unique_list -> length_2c7c4f.list\n        equal_f0a5ee.result -> output_7a2c5b\n    }\n\n    \n\n    instance(x: -57, y: 113) is_same_6a9c3c root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -287, y: 12, name: \"input\") property(String) input_1f3e5d\n\n        out(x: 557, y: 13, name: \"output\") property(Bool) output_7a8b9c\n\n        instance(x: -111, y: 14, name: \"characters\") characters_6e0e4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 13) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 12) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 575, y: -1) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        characters_6e0e4f.characters -> length_8166b0.list\n        input_1f3e5d -> characters_6e0e4f.input\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        intersection_c7c7e6.intersection -> output_7a8b9c\n        characters_6e0e4f.characters -> intersection_c7c7e6.left\n        characters_6e0e4f.characters -> intersection_c7c7e6.right\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_a5a1b9 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -288, y: 3, name: \"input\") property(String) input_9e1a8f\n\n        out(x: 1065, y: 4, name: \"output\") property(Bool) output_2c6b7d\n\n        instance(x: -97, y: 0, name: \"characters\") characters_3f7b1f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 252, y: 4) length_9a5e8c root.Std_k98ojb.List.Length {}\n        instance(x: 459, y: -2) ifexpression_6d0f4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 147, y: 28, name: \"getter_1a9e8f\") getter_1a9e8f = previous\n        setter(x: 392, y: -132, name: \"setter_6c4b3d\") setter_6c4b3d = previous\n        instance(x: 119, y: -25) for_e5c2ea root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_6c4b3d\") setter_7e9f8a = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_6d0f4c.else -> output_2c6b7d\n        ifexpression_6d0f4c.value -> setter_6c4b3d.new_value\n        ifexpression_6d0f4c.then -> setter_6c4b3d.execute\n        characters_3f7b1f.characters -> for_e5c2ea.items\n        for_e5c2ea.item -> ifexpression_6d0f4c.gen_2\n        for_e5c2ea.index -> ifexpression_6d0f4c.gen_0\n        getter_1a9e8f.value -> ifexpression_6d0f4c.gen_1\n        for_e5c2ea.onItem -> ifexpression_6d0f4c.execute\n        for_e5c2ea.done -> output_2c6b7d\n        for_e5c2ea.item -> setter_6c4b3d.new_value\n        characters_3f7b1f.characters -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_7e9f8a.new_value\n        length_9a5e8c.length -> for_e5c2ea.itemsLength\n        input_9e1a8f -> characters_3f7b1f.input\n        setter_7e9f8a.continue -> for_e5c2ea.reset\n        setter_6c4b3d.continue -> for_e5c2ea.next\n    }\n\n    \n\n    instance(x: 10, y: -177) check_same_0c0d1f root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -285, y: -86, name: \"string\") property(String) string_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        string_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        string_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -30, y: 0) std_split_node root.Std_k98ojb.Strings.Split {}\n        instance(x: 0, y: 0) std_filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(doc: \"checks if the input is a digit.\") check_digit {\n                in(x: 0, y: 0, name: \"item\") property(String) item_ai\n                out(x: 0, y: 0, name: \"is_digit\") property(Bool) is_digit_ai\n\n                instance(x: 0, y: 0) std_is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item_ai -> std_is_numeric_node.input\n                std_is_numeric_node.is_numeric -> is_digit_ai\n            }\n        }\n        instance(x: -30, y: 0) std_count_node root.Std_k98ojb.Count {}\n\n        input_ai -> std_split_node.string\n        std_split_node.strings -> std_filter_node.items\n        std_filter_node.output_list -> std_count_node.items\n        std_count_node.count -> output_ai\n    }\n\n    \n    instance(x: -30, y: 0) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -1, y: 0) strings_split_node root.Std_k98ojb.Strings.Split {}\n        input_ai -> strings_split_node.string\n        \"\" -> strings_split_node.split_on\n        instance(x: 0, y: 0) iteration_filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(doc: \"checks if the given string is a digit.\") check_digit {\n                in(x: 0, y: 0, name: \"item\") property(String) item_ai\n                out(x: 0, y: 0, name: \"result\") property(Bool) result_ai\n\n                instance(x: 0, y: 0) strings_is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item_ai -> strings_is_numeric_node.input\n                strings_is_numeric_node.value -> result_ai\n            }\n        }\n        strings_split_node.strings -> iteration_filter_node.items\n        iteration_filter_node.output_list -> output_ai\n    }\n\n    \n    instance(x: 0, y: -1) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -16, y: 0) std_split_node root.Std_k98ojb.Strings.Split {}\n        instance(x: 0, y: 0) std_filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(doc: \"checks if the input is a digit.\") check_digit {\n                in(x: 0, y: 0, name: \"item\") property(String) item_ai\n                out(x: 0, y: 0, name: \"isDigit\") property(Bool) isDigit_ai\n\n                instance(x: 0, y: 0) std_is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item_ai -> std_is_numeric_node.input\n                std_is_numeric_node.isNumeric -> isDigit_ai\n            }\n        }\n        instance(x: -16, y: 0) std_count_node root.Std_k98ojb.Count {}\n\n        input_ai -> std_split_node.string\n        std_split_node.strings -> std_filter_node.items\n        std_filter_node.output_list -> std_count_node.items\n        std_count_node.count -> output_ai\n    }\n    \n\n    instance(x: -16, y: 0) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -16, y: 0) std_split_node root.Std_k98ojb.Strings.Split {}\n        instance(x: 0, y: 0) std_filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(doc: \"handler for filter\") handler_3c7f9e {\n                in(x: -16, y: 0, name: \"item\") property(String) item_ai\n                out(x: 0, y: 0, name: \"result\") property(Bool) result_ai\n\n                instance(x: 0, y: 0) std_is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item_ai -> std_is_numeric_node.input\n                std_is_numeric_node.is_numeric -> result_ai\n            }\n        }\n        instance(x: -16, y: 0) std_count_node root.Std_k98ojb.Count {}\n\n        input_ai -> std_split_node.string\n        std_split_node.strings -> std_filter_node.items\n        std_filter_node.output_list -> std_count_node.items\n        std_count_node.count -> output_ai\n    }\n    \n\n    instance(x: -16, y: 0) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -25, y: 0) split_node root.Std_k98ojb.Strings.Split {}\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Count {}\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        input_ai -> split_node.string\n        split_node.strings -> filter_7b3b7b.list\n        filter_7b3b7b.result -> count_node.items\n        count_node.count -> output_ai\n    }\n\n    \n    instance(x: 0, y: -26) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -15, y: 0) split_2c3f8a root.Std_k98ojb.Strings.Split {}\n        instance(x: 0, y: 0) count_digits_1e9d7f root.main.count_digits {}\n        instance(x: 0, y: 0) filter_4c6a5a root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        instance(x: -15, y: 0) count_2a8e9d root.Std_k98ojb.Count {}\n        input_ai -> split_2c3f8a.string\n        split_2c3f8a.strings -> filter_4c6a5a.list\n        filter_4c6a5a.result -> count_2a8e9d.items\n        count_2a8e9d.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: -30) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -15, y: 0) split_9e1f2a root.Std_k98ojb.Strings.Split {}\n        instance(x: 30, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Std.IsNumeric(it)\"\n        }\n        instance(x: -15, y: 40) list_length_node root.Std_k98ojb.List.Length {}\n\n        input_ai -> split_9e1f2a.string\n        split_9e1f2a.strings -> filter_7b3b7b.list\n        filter_7b3b7b.result -> list_length_node.items\n        list_length_node.length -> output_ai\n    }\n    \n\n    instance(x: 0, y: -40) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -20, y: 0) std_split_node root.Std_k98ojb.Strings.Split {}\n        instance(x: 0, y: 0) std_filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(doc: \"checks if the input is a digit.\") check_digit {\n                in(x: 0, y: 0, name: \"item\") property(String) item_ai\n                out(x: 0, y: 0, name: \"isDigit\") property(Bool) isDigit_ai\n\n                instance(x: 0, y: 0) std_is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item_ai -> std_is_numeric_node.input\n                std_is_numeric_node.isNumeric -> isDigit_ai\n            }\n        }\n        instance(x: -20, y: 0) std_count_node root.Std_k98ojb.Count {}\n\n        input_ai -> std_split_node.string\n        std_split_node.strings -> std_filter_node.items\n        std_filter_node.output_list -> std_count_node.items\n        std_count_node.count -> output_ai\n    }\n    \n\n    instance(x: -20, y: 0) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -5, y: 0) std_split_node root.Std_k98ojb.Strings.Split {}\n        instance(x: 0, y: 0) std_filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(doc: \"handler function for filtering digits.\") filter_handler {\n                in(x: 0, y: 0, name: \"item\") property(String) item_ai\n                out(x: 0, y: 0, name: \"result\") property(Bool) result_ai\n\n                instance(x: 0, y: 0) std_is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item_ai -> std_is_numeric_node.input\n                std_is_numeric_node.is_numeric -> result_ai\n            }\n        }\n        instance(x: 0, y: 0) std_reduce_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func(doc: \"reducer function for counting digits.\") reduce_handler {\n                in(x: 0, y: 0, name: \"accumulated\") property(Number) accumulated_ai\n                in(x: 0, y: 0, name: \"current\") property(Bool) current_ai\n                out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n                instance(x: 0, y: 0) std_add_node root.Std_k98ojb.Math.Add {}\n                accumulated_ai -> std_add_node.first\n                std_if_node.root.Std_k98ojb.Std.If {\n                    input: current_ai\n                    then: func() { std_number_1_node.root.Std_k98ojb.Math.NumberFromString {} }\n                    else: 0\n                } -> std_add_node.second\n                std_add_node.result -> result_ai\n            }\n        }\n\n        input_ai -> std_split_node.string\n        std_split_node.strings -> std_filter_node.items\n        std_filter_node.output_list -> std_reduce_node.item\n        0 -> std_reduce_node.accumulated\n        std_reduce_node.result -> output_ai\n    }\n\n\n    instance(x: -5, y: 0) split_node root.main.count_digits.std_split_node {}\n    instance(x: 0, y: 0) filter_node root.main.count_digits.std_filter_node {\n        handler: func(doc: \"handler function for filtering digits.\") filter_handler {\n            in(x: 0, y: 0, name: \"item\") property(String) item_ai\n            out(x: 0, y: 0, name: \"result\") property(Bool) result_ai\n\n            instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n            item_ai -> is_numeric_node.input\n            is_numeric_node.is_numeric -> result_ai\n        }\n    }\n    instance(x: 0, y: 0) reduce_node root.main.count_digits.std_reduce_node {\n        reducer: func(doc: \"reducer function for counting digits.\") reduce_handler {\n            in(x: 0, y: 0, name: \"accumulated\") property(Number) accumulated_ai\n            in(x: 0, y: 0, name: \"current\") property(Bool) current_ai\n            out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n            instance(x: 0, y: 0) add_node root.Std_k98ojb.Math.Add {}\n            accumulated_ai -> add_node.first\n            std_if_node.root.Std_k98ojb.Std.If {\n                input: current_ai\n                then: func() { number_1_node.root.Std_k98ojb.Math.NumberFromString {} }\n                else: 0\n            } -> add_node.second\n            add_node.result -> result_ai\n        }\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -1, y: 0) split_node root.Std_k98ojb.Strings.Split {\n            split_on: \" \"\n        }\n        input_ai -> split_node.string\n        instance(x: 0, y: 0) map_5c3f8a root.Std_k98ojb.Iteration.Map {}\n        split_node.strings -> map_5c3f8a.items\n        instance(x: -1, y: 0) count_digits_handler root.main.count_digits_handler {}\n        map_5c3f8a.handler -> count_digits_handler\n        instance(x: 0, y: 0) sum_digits root.main.sum_digits {}\n        map_5c3f8a.output_list -> sum_digits.list_ai\n        sum_digits.result_ai -> output_ai\n    }\n\n    \n    func(doc: \"count the number of digits in a given string.\") count_digits_handler {\n        in(x: 0, y: 0, name: \"item\") property(String) item_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -1, y: 0) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: root.main.is_digit\n        }\n        item_ai -> filter_node.items\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_node.output_list -> list_length_node.list\n        list_length_node.length -> output_ai\n    }\n\n    \n    func(doc: \"check if a string is a digit.\") is_digit {\n        in(x: 0, y: 0, name: \"item\") property(String) item_ai\n        out(x: 0, y: 0, name: \"output\") property(Bool) output_ai\n\n        instance(x: -1, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        item_ai -> is_numeric_node.input\n        is_numeric_node.isNumeric -> output_ai\n    }\n\n    \n    func(doc: \"gets the sum of the digits of a non-negative integer.\") sum_digits {\n        in(x: -450, y: -421, name: \"list_ai\") property(List) list_ai\n        out(x: 1146, y: -647, name: \"result_ai\") property(Number) result_ai\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"list_ai.length == 0\"\n        }\n        instance(x: 395, y: -378) sum_digits_96023e root.main.sum_digits {}\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> add_88bb8a.first\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        list_ai -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        floor_61b38d.output -> modulo_adfa16.value\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n        10 -> div_547f34.second\n        div_547f34.result -> sum_digits_96023e.list_ai\n        sum_digits_96023e.result_ai -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> result_ai\n    }\n\n    \n    instance(x: -176, y: -38) sum_digits_86117a root.main.sum_digits {}\n\n    \n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n    \n\n    instance(x: 0, y: 0) map_5c3f8a_2 root.Std_k98ojb.Iteration.Map {}\n    \n\n    instance(x: -1, y: 0) filter_node_2 root.Std_k98ojb.Iteration.Filter {\n        handler: root.main.is_digit\n    }\n    \n\n    instance(x: 0, y: 0) list_length_node_2 root.Std_k98ojb.List.Length {}\n\n    \n    instance(x: -1, y: 0) is_numeric_node_2 root.Std_k98ojb.Strings.IsNumeric {}\n    \n\n    instance(x: -450, y: -421) ifexpression_3d7de6_2 root.Std_k98ojb.Std.IfExpression {\n        expression: \"list_ai.length == 0\"\n    }\n    \n\n    instance(x: 395, y: -378) sum_digits_96023e_2 root.main.sum_digits {}\n    \n\n    instance(x: 97, y: -127) modulo_adfa16_2 root.Std_k98ojb.Math.Modulo {}\n    \n\n    instance(x: 656, y: -330) add_88bb8a_2 root.Std_k98ojb.Math.Add {}\n    \n\n    instance(x: 99, y: -249) div_547f34_2 root.Std_k98ojb.Math.Div {}\n    \n\n    setter(x: -215, y: -463, name: \"setter_41e4ad_2\") setter_41e4ad_2 = sum\n        \n\n    setter(x: 875, y: -518, name: \"setter_375321_2\") setter_375321_2 = sum\n        \n\n    getter(x: 902, y: -314, name: \"getter_38583a_2\") getter_38583a_2 = sum\n        \n\n    instance(x: -202, y: -236) floor_61b38d_2 root.Std_k98ojb.Math.Floor {}\n    \n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) pow_4d1e9c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_4d1e9c.second\n        mul_f892a4.result -> pow_4d1e9c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_4d1e9c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 56, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_f892a4.second\n        mul_64046c.result -> sum_365f7b\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_64046c.first\n        pow_f892a4.result -> mul_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -280, y: 0, name: \"n\") property(Number) n_9e3b5f\n\n        out(x: 600, y: -1, name: \"sum\") property(Number) sum_ea7c4d\n\n        instance(x: 10, y: 0) pow_8e2c6 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) iter_range_5a9f7c root.Std_k98ojb.Std.IterRange {}\n        instance(x: 0, y: -1) sum_6e8d3f root.Std_k98ojb.Math.Add {}\n        n_9e3b5f -> pow_8e2c6.second\n        expression_2d6da6.result -> pow_8e2c6.first\n        iter_range_5a9f7c.continue -> sum_fourth_power.sum_ea7c4d\n        data_cde0dc -> iter_range_5a9f7c.to\n        1 -> iter_range_5a9f7c.from\n        n_9e3b5f -> expression_2d6da6.gen_0\n        pow_8e2c6.result -> sum_6e8d3f.second\n        sum_6e8d3f.first -> sum_fourth_power.sum_ea7c4d\n        iter_range_5a9f7c.iteration -> expression_2d6da6.gen_0\n        iter_range_5a9f7c.index -> pow_8e2c6.first\n        0 -> sum_6e8d3f.first\n        iter_range_5a9f7c.execute -> expression_2d6da6.execute\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -344, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e8d5c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) iter_range_7f8a9c root.Std_k98ojb.Std.IterRange {}\n        instance(x: 0, y: -1) sum_3d6e5c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_9e8d5c.second\n        expression_2d6da6.result -> pow_9e8d5c.first\n        n_3a3116 -> iter_range_7f8a9c.from\n        1 -> iter_range_7f8a9c.to\n        sum_3d6e5c.second -> sum_365f7b\n        pow_9e8d5c.result -> sum_3d6e5c.first\n        iter_range_7f8a9c.iteration -> expression_2d6da6.gen_0\n        n_3a3116 -> expression_2d6da6.gen_1\n        0 -> sum_3d6e5c.first\n        iter_range_7f8a9c.continue -> sum_3d6e5c.execute\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -288, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_f892a4.second\n        mul_64046c.result -> sum_365f7b\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_64046c.first\n        pow_f892a4.result -> mul_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_f892a4.second\n        mul_64046c.result -> sum_365f7b\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        expression_2d6da6.result -> mul_64046c.first\n        pow_f892a4.result -> mul_64046c.second\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_f892a4.second\n        mul_64046c.result -> sum_365f7b\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        expression_2d6da6.result -> mul_64046c.first\n        pow_f892a4.result -> mul_64046c.second\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) pow_5e9c4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_5e9c4.second\n        mul_f892a4.result -> pow_5e9c4.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_5e9c4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -285, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4c2d8e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_5e7c9f root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_4c2d8e.second\n        pow_4c2d8e.result -> add_5e7c9f.first\n        expression_2d6da6.result -> pow_4c2d8e.first\n        n_3a3116 -> pow_4c2d8e.gen_0\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_5e7c9f.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_f892a4.second\n        mul_64046c.result -> sum_365f7b\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_64046c.first\n        pow_f892a4.result -> mul_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -104, y: 21, name: \"size\") property(Number) size_3f8e1d\n\n        out(x: 1066, y: 17, name: \"surface_area\") property(Number) surface_area_7a4c5b\n\n        instance(x: 12, y: -15) mul_9a0b2f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_3f8e1d -> mul_9a0b2f.first\n        data_cde0dc -> mul_9a0b2f.second\n        mul_9a0b2f.result -> surface_area_7a4c5b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -105, y: 41, name: \"size\") property(Number) size_9f7759\n\n        out(x: 46, y: 158, name: \"surface_area\") property(Number) surface_area_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -144, y: 112, name: \"\") mul_1a9d5e root.Std_k98ojb.Math.Mul {}\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"size < 0\"\n        }\n        instance(x: 116, y: -268, name: \"\") setter_1cedb2 root.Std_k98ojb.Setter {}\n        instance(x: 118, y: -56, name: \"\") setter_37db7f root.Std_k98ojb.Setter {}\n        size_9f7759 -> mul_1a9d5e.first\n        size_9f7759 -> mul_1a9d5e.second\n        mul_1a9d5e.result -> surface_area_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        0 -> setter_1cedb2.new_value\n        size_9f7759 -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        surface_area_b2508f -> setter_1cedb2.value\n        surface_area_b2508f -> setter_37db7f.value\n        6 -> mul_1a9d5e.first\n        size_9f7759 -> ifexpression_e38995.gen_0\n        continue_685c8f -> mul_1a9d5e.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) cube_surface_area_d6e930 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: 45, name: \"size\") property(Number) size_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        data_cde0dc -> mul_f892a4.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        mul_f892a4.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -108, y: 57, name: \"size\") property(Number) size_3f1e5d\n\n        out(x: 1126, y: 18, name: \"surface_area\") property(Number) surface_area_7a9c8b\n\n        instance(x: 12, y: -2) mul_4a0b6c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_3f1e5d -> mul_4a0b6c.first\n        data_cde0dc -> mul_4a0b6c.second\n        mul_4a0b6c.result -> surface_area_7a9c8b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -219, y: 55, name: \"size\") property(Number) size_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        data_cde0dc -> mul_f892a4.first\n        expression_2d6da6.result -> mul_f892a4.second\n        size_3a3116 -> expression_2d6da6.gen_0\n        mul_f892a4.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -100, y: 50, name: \"size\") property(Number) size_9f0a1d\n\n        out(x: 400, y: 40, name: \"surface_area\") property(Number) surface_area_e5c3e8\n\n        instance(x: 24, y: 2) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_9f0a1d -> mul_f892a4.first\n        data_cde0dc -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_e5c3e8\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -102, y: 43, name: \"size\") property(Number) size_1a9e8f\n\n        out(x: 1062, y: 7, name: \"surface_area\") property(Number) surface_area_6c3b5d\n\n        instance(x: 11, y: -4) mul_0a8b7c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a9e8f -> mul_0a8b7c.first\n        data_cde0dc -> mul_0a8b7c.second\n        instance(x: 303, y: 2) pow_4d3f5c root.Std_k98ojb.Math.Pow {}\n        size_1a9e8f -> pow_4d3f5c.x\n        2 -> pow_4d3f5c.y\n        mul_0a8b7c.result -> surface_area_6c3b5d\n        pow_4d3f5c.result -> mul_0a8b7c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -100, y: 45, name: \"size\") property(Number) size_3e9f1d\n\n        out(x: 1040, y: 7, name: \"surface_area\") property(Number) surface_area_5c6a8b\n\n        instance(x: 13, y: -2) mul_4a9bdc root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 331, y: 133) data_cde0dc  = 6\n        size_3e9f1d -> mul_4a9bdc.first\n        data_cde0dc -> mul_4a9bdc.second\n        mul_4a9bdc.result -> surface_area_5c6a8b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -107, y: 57, name: \"size\") property(Number) size_3a9f6d\n\n        out(x: 1068, y: 7, name: \"surface_area\") property(Number) surface_area_2b4e1c\n\n        instance(x: 0, y: -16) mul_5e3f3c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_3a9f6d -> mul_5e3f3c.first\n        data_cde0dc -> mul_5e3f3c.second\n        mul_5e3f3c.result -> surface_area_2b4e1c\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -105, y: 45, name: \"size\") property(Number) size_1f9e6d\n\n        out(x: 46, y: 158, name: \"surface_area\") property(Number) surface_area_8b7c3a\n\n        instance(x: 116, y: -268) mul_f5f2ef root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 118, y: -56) data_9e4d6c  = [size]\n        instance(x: -144, y: 112) expression_1a3e7c root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size^2\"\n        }\n        size_1f9e6d -> mul_f5f2ef.first\n        data_9e4d6c.size -> mul_f5f2ef.second\n        mul_f5f2ef.result -> surface_area_8b7c3a\n        expression_1a3e7c.gen_0 -> data_9e4d6c.size\n    }\n\n    \n\n    instance(x: -174, y: -63) cube_surface_area_8e7c93 root.main.cube_surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 22, name: \"list\") property(List) list_6a9f1e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        list_6a9f1e -> max_f3b46d.items\n        list_6a9f1e -> min_4d4556.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -32, y: 8, name: \"list\") property(List) list_4a1f0e\n\n        out(x: 446, y: 7, name: \"difference\") property(Number) difference_3c9b5d\n\n        instance(x: 201, y: 6) sub_2b3c8c root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 155, name: \"Max list\") max_f7a4e1 root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 172) firstitem_5d0f9f root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_3c2e4a root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 537) firstitem_5d0f9f_1 root.Std_k98ojb.List.FirstItem {}\n        max_f7a4e1.max -> sub_2b3c8c.first\n        min_3c2e4a.min -> sub_2b3c8c.second\n        list_4a1f0e -> max_f7a4e1.items\n        max_f7a4e1.max -> firstitem_5d0f9f.item\n        list_4a1f0e -> min_3c2e4a.items\n        min_3c2e4a.min -> firstitem_5d0f9f_1.item\n        sub_2b3c8c.result -> difference_3c9b5d\n    }\n\n    \n\n    instance(x: 48, y: -11) diff_max_min_7c6b0c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -36, y: 12, name: \"list\") property(List) list_4e9f8a\n\n        out(x: 444, y: 35, name: \"difference\") property(Number) difference_1b7d2c\n\n        instance(x: 0, y: 11) max_3a6e5c root.Std_k98ojb.List.Max {}\n        instance(x: -120, y: 12) min_4f9a8c root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 35) sub_7d1f2e root.Std_k98ojb.Math.Sub {}\n        list_4e9f8a -> max_3a6e5c.items\n        list_4e9f8a -> min_4f9a8c.items\n        max_3a6e5c.max -> sub_7d1f2e.first\n        min_4f9a8c.min -> sub_7d1f2e.second\n        sub_7d1f2e.result -> difference_1b7d2c\n    }\n\n    \n\n    instance(x: 48, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -34, y: 17, name: \"list\") property(List) list_4a1f6e\n\n        out(x: 506, y: 63, name: \"difference\") property(Number) difference_2c9b7d\n\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"min list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it\"\n        }\n        instance(x: -319, y: 358, name: \"max list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        list_4a1f6e -> filter_f3b46d.list\n        filter_f3b46d.result -> firstitem_870503.list\n        list_4a1f6e -> filter_4d4556.list\n        filter_4d4556.result -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_2c9b7d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -29, y: 18, name: \"list\") property(List) list_1e3b5f\n\n        out(x: 488, y: 11, name: \"difference\") property(Number) difference_7a8d6c\n\n        instance(x: 0, y: 17) max_2b9d4c root.Std_k98ojb.List.Max {}\n        instance(x: -29, y: -31) min_5f3e3c root.Std_k98ojb.List.Min {}\n        instance(x: 201, y: 11) sub_7a6b8c root.Std_k98ojb.Math.Sub {}\n        list_1e3b5f -> max_2b9d4c.items\n        list_1e3b5f -> min_5f3e3c.items\n        max_2b9d4c.max -> sub_7a6b8c.first\n        min_5f3e3c.min -> sub_7a6b8c.second\n        sub_7a6b8c.result -> difference_7a8d6c\n    }\n\n    \n\n    instance(x: 48, y: -37) diff_max_min_2f0f9c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1a8f0e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_7b2c3d\n\n        instance(x: -82, y: 155) max_4e9a5f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_1b6c0c root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_1a8f0e -> max_4e9a5f.items\n        list_1a8f0e -> min_1b6c0c.items\n        max_4e9a5f.max -> sub_852f2e.first\n        min_1b6c0c.min -> sub_852f2e.second\n        sub_852f2e.result -> output_7b2c3d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 13, name: \"list\") property(List) list_0d9b8f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        list_0d9b8f -> max_f3b46d.items\n        list_0d9b8f -> min_4d4556.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_6a1f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        list_6a1f8e -> max_f3b46d.items\n        list_6a1f8e -> min_4d4556.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -28, y: 18, name: \"list\") property(List) list_6e8a5f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        list_6e8a5f -> max_f3b46d.items\n        list_6e8a5f -> min_4d4556.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -32, y: 11, name: \"list\") property(List) list_1a0b8f\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5c7d6e\n\n        instance(x: -82, y: 155) max_4a9f2f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_1b0c8f root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        max_4a9f2f.max -> sub_852f2e.first\n        min_1b0c8f.min -> sub_852f2e.second\n        list_1a0b8f -> max_4a9f2f.items\n        list_1a0b8f -> min_1b0c8f.items\n        sub_852f2e.result -> output_5c7d6e\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 0, name: \"input\") property(Number) input_5f3a9e\n\n        out(x: 1268, y: 1, name: \"output\") property(Bool) output_6c2d7b\n\n        instance(x: 201, y: -4) modulo_f9b0cc root.Std_k98ojb.Math.Modulo {}\n        instance(x: 447, y: 3) notequal_5f1e8a root.Std_k98ojb.Logic.NotEqual {}\n        input_5f3a9e -> modulo_f9b0cc.value\n        2 -> modulo_f9b0cc.divisor\n        modulo_f9b0cc.result -> notequal_5f1e8a.left\n        0 -> notequal_5f1e8a.right\n        not(notequal_5f1e8a.result) -> output_6c2d7b\n    }\n\n    \n\n    instance(x: -3, y: 12) is_even_9c4f2c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 10, name: \"input\") property(Number) input_0a9f1e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 442, y: 57) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n        input_0a9f1e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> equal_7836b4.left\n        0 -> equal_7836b4.right\n        equal_7836b4.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -32, y: 0, name: \"input\") property(Number) input_5e9f8d\n\n        out(x: 1264, y: 1, name: \"output\") property(Bool) output_7c6a3b\n\n        instance(x: 1022, y: -10, name: \"modulo\") modulo_0c8b4f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1129, y: 41, name: \"equal to zero\") equal_1d5a3e root.Std_k98ojb.Logic.Equal {}\n        input_5e9f8d -> modulo_0c8b4f.value\n        2 -> modulo_0c8b4f.divisor\n        modulo_0c8b4f.result -> equal_1d5a3e.left\n        0 -> equal_1d5a3e.right\n        equal_1d5a3e.result -> output_7c6a3b\n    }\n\n    \n\n    instance(x: -11, y: -10) is_even_2f8c4f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -34, y: 127, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n        instance(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -37, y: 4, name: \"input\") property(Number) input_1e3a6f\n        out(x: 1085, y: 2, name: \"output\") property(Bool) output_9c8b7d\n\n        instance(x: 0, y: -11, name: \"modulo\") modulo_4b1b8f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 246, y: 2) notequal_5a6e3f root.Std_k98ojb.Logic.NotEqual {}\n        input_1e3a6f -> modulo_4b1b8f.value\n        2 -> modulo_4b1b8f.divisor\n        modulo_4b1b8f.result -> notequal_5a6e3f.left\n        0 -> notequal_5a6e3f.right\n        notequal_5a6e3f.result -> output_9c8b7d\n    }\n\n    \n\n    instance(x: -13, y: -11) is_even_1d2d4f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 11, name: \"input\") property(Number) input_0a3f8e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 440, y: 57) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n        input_0a3f8e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        0 -> equal_7836b4.right\n        modulo_c76d2b.result -> equal_7836b4.left\n        equal_7836b4.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 0, name: \"input\") property(Number) input_1a9d8e\n\n        out(x: 1266, y: 2, name: \"output\") property(Bool) output_5c7f3b\n\n        instance(x: 1014, y: -10, name: \"modulo\") modulo_0f3c0f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1058, y: 49, name: \"notequal\") notequal_9e2a6d root.Std_k98ojb.Logic.NotEqual {}\n        input_1a9d8e -> modulo_0f3c0f.value\n        2 -> modulo_0f3c0f.divisor\n        modulo_0f3c0f.result -> notequal_9e2a6d.left\n        0 -> notequal_9e2a6d.right\n        not(notequal_9e2a6d.result) -> output_5c7f3b\n    }\n\n    \n\n    instance(x: -1, y: -13) is_even_4e8c93 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_9a3f1e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_9a3f1e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_9a3f1e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_9a3f1e -> expression_9fba8c.gen_0\n        input_9a3f1e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e4d2c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -35, y: 3, name: \"input\") property(Number) input_9e6f5d\n        out(x: 1268, y: 2, name: \"output\") property(Bool) output_7c4a0b\n\n        instance(x: 1051, y: -11) modulo_3a7c8f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1049, y: 49) equal_6e5d2f root.Std_k98ojb.Logic.Equal {}\n        input_9e6f5d -> modulo_3a7c8f.value\n        2 -> modulo_3a7c8f.divisor\n        0 -> equal_6e5d2f.right\n        modulo_3a7c8f.result -> equal_6e5d2f.left\n        equal_6e5d2f.result -> output_7c4a0b\n    }\n\n    \n\n    instance(x: -15, y: 18) is_even_1c9d7f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_1a0e8f\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_1a0e8f -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_1a0e8f -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_1a0e8f -> expression_9fba8c.gen_0\n        input_1a0e8f -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5d0e1c root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5f3b4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7e8a9d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) ``find_7e8a9d_1`` root.Std_k98ojb.Iteration.Find {}\n        characters_5f3b4c.characters -> find_7e8a9d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a6b2f0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3d4a5c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_a6b2f0 -> contains_3d4a5c.input\n            find_7e8a9d.item -> contains_3d4a5c.contains\n            contains_3d4a5c.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_7e8a9d.predicate\n        characters_5f3b4c.characters -> ``find_7e8a9d_1``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a6b2f0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3d4a5c root.Std_k98ojb.Strings.Contains {}\n            current_a6b2f0 -> contains_3d4a5c.input\n            find_7e8a9d.item -> contains_3d4a5c.contains\n            contains_3d4a5c.result -> bool_1eb6e9\n        } -> ``find_7e8a9d_1``.predicate\n        find_7e8a9d.item -> result_0\n        input_0 -> characters_5f3b4c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_1 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_807ffd.left\n            find_6d05b0.index -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: 0, y: -1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        input_1 -> characters_2e1444.input\n        characters_2e1444.characters -> find_6d05b0.items\n        find_6d05b0.item -> output_0\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -279, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_4e9b5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3a7f6d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 265, y: -105) filter_2a8f1f root.Std_k98ojb.Iteration.Filter {}\n        characters_4e9b5c.characters -> find_3a7f6d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0a2ad\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3f5c8d root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_a0a2ad -> contains_3f5c8d.input\n            characters_4e9b5c.characters -> contains_3f5c8d.contains\n            contains_3f5c8d.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_3a7f6d.predicate\n        characters_4e9b5c.characters -> filter_2a8f1f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0a2ad\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) count_3f5c8d root.Std_k98ojb.Iteration.Count {}\n            current_a0a2ad -> count_3f5c8d.items\n            characters_4e9b5c.characters -> count_3f5c8d.items\n            count_3f5c8d.count -> bool_1eb6e9\n        } -> filter_2a8f1f.handler\n        find_3a7f6d.item -> result_0\n        characters_4e9b5c.characters -> filter_2a8f1f.items\n        input_0 -> characters_4e9b5c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_4e3c6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7d9a8f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) ``find_7d9a8f_1`` root.Std_k98ojb.Iteration.Find {}\n        characters_4e3c6f.characters -> find_7d9a8f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0e2ec\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3a5b7c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) ``contains_3a5b7c_2`` root.Std_k98ojb.Iteration.Filter {}\n            current_a0e2ec -> contains_3a5b7c.input\n            characters_4e3c6f.characters -> contains_3a5b7c.contains\n            contains_3a5b7c.result -> bool_1eb6e9\n        } -> find_7d9a8f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0e2ec\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3a5b7c root.Std_k98ojb.Strings.Contains {}\n            current_a0e2ec -> contains_3a5b7c.input\n            characters_4e3c6f.characters -> ``find_7d9a8f_1``.items\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_a0e2ec\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) contains_3a5b7c root.Std_k98ojb.Strings.Contains {}\n                current_a0e2ec -> contains_3a5b7c.input\n                characters_4e3c6f.characters -> contains_3a5b7c.contains\n                contains_3a5b7c.result -> bool_1eb6e9\n            } -> ``find_7d9a8f_1``.predicate\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_a0e2ec\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) contains_3a5b7c root.Std_k98ojb.Strings.Contains {}\n                current_a0e2ec -> contains_3a5b7c.input\n                ``find_7d9a8f_1``.items -> contains_3a5b7c.contains\n                contains_3a5b7c.result -> bool_1eb6e9\n            } -> ``contains_3a5b7c_2``.handler\n            characters_4e3c6f.characters -> ``contains_3a5b7c_2``.items\n            ``contains_3a5b7c_2``.output_list -> bool_1eb6e9\n        } -> ``find_7d9a8f_1``.predicate\n        find_7d9a8f.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_5b3c4f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -275, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3b8c6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7e9a4d root.Std_k98ojb.Iteration.Find {}\n        instance(x: -5, y: 60) filter_2e1a1c root.Std_k98ojb.Iteration.Filter {}\n        characters_3b8c6f.characters -> find_7e9a4d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_7a8c3f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_7a8c3f.input\n            find_7e9a4d.items -> contains_7a8c3f.contains\n            contains_7a8c3f.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_7e9a4d.predicate\n        instance(x: -5, y: 60) contains_2f8c3f root.Std_k98ojb.Strings.Contains {}\n        characters_3b8c6f.characters -> filter_2e1a1c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_7a8c3f root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_7a8c3f.input\n            find_7e9a4d.items -> contains_7a8c3f.contains\n            contains_7a8c3f.result -> bool_1eb6e9\n        } -> filter_2e1a1c.handler\n        filter_2e1a1c.output_list -> contains_2f8c3f.contains\n        input_0 -> characters_3b8c6f.input\n        find_7e9a4d.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_09fcba root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated character\") ``characters_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        input_0 -> characters_09fcba.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            find_7e1ce0.item -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``characters_0b1361``.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_09fcba.characters -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        ``characters_0b1361``.items -> characters_09fcba.characters\n        characters_09fcba.characters -> find_7e1ce0.items\n        ``characters_0b1361``.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_7f1d9e root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0a3c4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"filter\") filter_7e1ce0 root.Std_k98ojb.Iteration.Filter {}\n        input_0 -> characters_0a3c4f.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_0a3c4f.characters -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> filter_7e1ce0.handler\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_0a3c4f.characters -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_7f1d9e.predicate\n        filter_7e1ce0.output_list -> find_7f1d9e.items\n        characters_0a3c4f.characters -> filter_7e1ce0.items\n        find_7f1d9e.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated character\") ``characters_2e1444`` root.Std_k98ojb.Iteration.Find {}\n        input_0 -> characters_2e1444.input\n        func() {\n            in(x: -192, y: 84, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_2e1444.characters -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        characters_2e1444.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            ``characters_2e1444``.characters -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> ``first repeated character``.predicate\n        characters_2e1444.characters -> ``first repeated character``.items\n        find_6d05b0.item -> output_ebef81\n        ``first repeated character``.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -276, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3e4b5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7c8a6d root.Std_k98ojb.Iteration.Find {}\n        instance(x: -2, y: 52) filter_9f1e8f root.Std_k98ojb.Iteration.Filter {}\n        characters_3e4b5f.characters -> filter_9f1e8f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3f4a8c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_3f4a8c.input\n            input_0 -> contains_3f4a8c.contains\n            contains_3f4a8c.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> filter_9f1e8f.handler\n        filter_9f1e8f.output_list -> find_7c8a6d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3f4a8c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_3f4a8c.input\n            input_0 -> contains_3f4a8c.contains\n            contains_3f4a8c.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_7c8a6d.predicate\n        input_0 -> characters_3e4b5f.input\n        find_7c8a6d.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5f9b4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3e6d8a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) ``find_3e6d8a_1`` root.Std_k98ojb.Iteration.Find {}\n        characters_5f9b4c.characters -> find_3e6d8a.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0e7ec\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3a2f5c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_a0e7ec -> contains_3a2f5c.input\n            find_3e6d8a.item -> contains_3a2f5c.contains\n            contains_3a2f5c.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_3e6d8a.predicate\n        characters_5f9b4c.characters -> ``find_3e6d8a_1``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0e7ec\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3a2f5c root.Std_k98ojb.Strings.Contains {}\n            current_a0e7ec -> contains_3a2f5c.input\n            find_3e6d8a.item -> contains_3a2f5c.contains\n            contains_3a2f5c.result -> bool_1eb6e9\n        } -> ``find_3e6d8a_1``.predicate\n        input_0 -> characters_5f9b4c.input\n        find_3e6d8a.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -20, y: 57) min_9a3f1c root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_9a3f1c.items\n            min_9a3f1c.min -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: -193, name: \"items\") property(List) items_ai\n        out(x: 46, y: 158, name: \"second min\") property(Number) second_min_ai\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> min_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n\n        instance(x: -105, y: 0) ifexpression_3a9d4e root.Std_k98ojb.Std.IfExpression {\n            expression: \"min < a\"\n        }\n        getter(x: -144, y: 112, name: \"getter_7c1b5f\") getter_7c1b5f = second_min\n        setter(x: 116, y: -268, name: \"setter_2e3d9a\") setter_2e3d9a = second_min\n        a_f37c19 -> ifexpression_3a9d4e.gen_0\n        min_b2508f -> ifexpression_3a9d4e.gen_1\n        getter_7c1b5f.value -> second_min_ai\n        ifexpression_3a9d4e.then -> setter_2e3d9a.execute\n        a_f37c19 -> setter_2e3d9a.new_value\n        min_b2508f -> setter_37db7f.new_value\n        ifexpression_3a9d4e.else -> setter_37db7f.execute\n        continue_685c8f -> ifexpression_3a9d4e.execute\n        setter_2e3d9a.continue -> second_min_ai\n\n        instance(x: -105, y: 0) ifexpression_6b5d1f root.Std_k98ojb.Std.IfExpression {\n            expression: \"min < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_8a4c2e\") getter_8a4c2e = second_min\n        setter(x: 116, y: -268, name: \"setter_3f1b9d\") setter_3f1b9d = second_min\n        b_ca79ac -> ifexpression_6b5d1f.gen_0\n        min_b2508f -> ifexpression_6b5d1f.gen_1\n        getter_8a4c2e.value -> second_min_ai\n        ifexpression_6b5d1f.then -> setter_3f1b9d.execute\n        b_ca79ac -> setter_3f1b9d.new_value\n        min_b2508f -> setter_37db7f.new_value\n        ifexpression_6b5d1f.else -> setter_37db7f.execute\n        continue_685c8f -> ifexpression_6b5d1f.execute\n        setter_3f1b9d.continue -> second_min_ai\n\n        instance(x: -105, y: 0) ifexpression_4a2e9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"min < c\"\n        }\n        getter(x: -144, y: 112, name: \"getter_5c3d7f\") getter_5c3d7f = second_min\n        setter(x: 116, y: -268, name: \"setter_6e2b8a\") setter_6e2b8a = second_min\n        c_a89f71 -> ifexpression_4a2e9f.gen_0\n        min_b2508f -> ifexpression_4a2e9f.gen_1\n        getter_5c3d7f.value -> second_min_ai\n        ifexpression_4a2e9f.then -> setter_6e2b8a.execute\n        c_a89f71 -> setter_6e2b8a.new_value\n        min_b2508f -> setter_37db7f.new_value\n        ifexpression_4a2e9f.else -> setter_37db7f.execute\n        continue_685c8f -> ifexpression_4a2e9f.execute\n        setter_6e2b8a.continue -> second_min_ai\n\n        instance(x: -105, y: 0) ifexpression_1d5c3e root.Std_k98ojb.Std.IfExpression {\n            expression: \"second_min < a\"\n        }\n        getter(x: -144, y: 112, name: \"getter_2f6d4e\") getter_2f6d4e = second_min\n        setter(x: 116, y: -268, name: \"setter_3g7b5a\") setter_3g7b5a = second_min\n        a_f37c19 -> ifexpression_1d5c3e.gen_0\n        second_min_ai -> ifexpression_1d5c3e.gen_1\n        getter_2f6d4e.value -> second_min_ai\n        ifexpression_1d5c3e.then -> setter_3g7b5a.execute\n        a_f37c19 -> setter_3g7b5a.new_value\n        second_min_ai -> setter_37db7f.new_value\n        ifexpression_1d5c3e.else -> setter_37db7f.execute\n        continue_685c8f -> ifexpression_1d5c3e.execute\n        setter_3g7b5a.continue -> second_min_ai\n\n        instance(x: -105, y: 0) ifexpression_9h4j2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"second_min < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_8i5k3\") getter_8i5k3 = second_min\n        setter(x: 116, y: -268, name: \"setter_7j6l4\") setter_7j6l4 = second_min\n        b_ca79ac -> ifexpression_9h4j2.gen_0\n        second_min_ai -> ifexpression_9h4j2.gen_1\n        getter_8i5k3.value -> second_min_ai\n        ifexpression_9h4j2.then -> setter_7j6l4.execute\n        b_ca79ac -> setter_7j6l4.new_value\n        second_min_ai -> setter_37db7f.new_value\n        ifexpression_9h4j2.else -> setter_37db7f.execute\n        continue_685c8f -> ifexpression_9h4j2.execute\n        setter_7j6l4.continue -> second_min_ai\n\n        instance(x: -105, y: 0) ifexpression_3k7m5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"second_min < c\"\n        }\n        getter(x: -144, y: 112, name: \"getter_4l8n6\") getter_4l8n6 = second_min\n        setter(x: 116, y: -268, name: \"setter_5m9o7\") setter_5m9o7 = second_min\n        c_a89f71 -> ifexpression_3k7m5.gen_0\n        second_min_ai -> ifexpression_3k7m5.gen_1\n        getter_4l8n6.value -> second_min_ai\n        ifexpression_3k7m5.then -> setter_5m9o7.execute\n        c_a89f71 -> setter_5m9o7.new_value\n        second_min_ai -> setter_37db7f.new_value\n        ifexpression_3k7m5.else -> setter_37db7f.execute\n        continue_685c8f -> ifexpression_3k7m5",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: -0, name: \"list\") property(List) list_8f9d5a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -17, y: 59) min_1a0c4f root.Std_k98ojb.List.Min {}\n            list_8f9d5a -> min_1a0c4f.items\n            min_1a0c4f.min -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            modulo_1088d5.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_8f9d5a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: -193, name: \"items\") property(List) items_8f9d4a\n\n        out(x: 46, y: 158, name: \"second min\") property(Number) second_min_3b1c2e\n\n        instance(x: -105, y: -110) find_smallest_5e6b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1c3d5 root.Std_k98ojb.List.Min {}\n            items_8f9d4a -> min_1c3d5.items\n            min_1c3d5.min -> find_smallest_5e6b0.context\n\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            find_smallest_5e6b0.context -> notequal_807ffd.right\n            elem_9f6850 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_smallest_5e6b0.predicate\n        items_8f9d4a -> find_smallest_5e6b0.items\n\n        instance(x: -105, y: 110) filter_1c3d5 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            find_smallest_5e6b0.item -> notequal_807ffd.right\n            elem_9f6850 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> filter_1c3d5.handler\n        items_8f9d4a -> filter_1c3d5.items\n\n        instance(x: 105, y: -110) min_2c3d5 root.Std_k98ojb.List.Min {}\n        filter_1c3d5.output_list -> min_2c3d5.items\n        min_2c3d5.min -> second_min_3b1c2e\n    }\n\n    \n\n    instance(x: -174, y: -63) second_smallest_d6e930 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: -198, name: \"items\") property(List) items_9f7759\n\n        out(x: 46, y: 158, name: \"second min\") property(Number) second_min_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> min_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n\n        instance(x: -105, y: 0) ifexpression_5e9d6a root.Std_k98ojb.Std.IfExpression {\n            expression: \"min < a\"\n        }\n        getter(x: -144, y: 112, name: \"getter_7c4b3f\") getter_7c4b3f = min\n        setter(x: 116, y: -268, name: \"setter_1d9a2e\") setter_1d9a2e = min\n        a_9f7759 -> ifexpression_5e9d6a.gen_0\n        getter_7c4b3f.value -> ifexpression_5e9d6a.gen_1\n        ifexpression_5e9d6a.then -> setter_1d9a2e.execute\n        a_9f7759 -> setter_1d9a2e.new_value\n        getter_7c4b3f.value -> second_min_b2508f\n        ifexpression_5e9d6a.else -> continue_685c8f\n\n        instance(x: -105, y: 0) ifexpression_1e6d5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"min < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_7c4b3f\") getter_7c4b3f = min\n        setter(x: 116, y: -268, name: \"setter_1d9a2e\") setter_1d9a2e = min\n        b_f9110a -> ifexpression_1e6d5a.gen_0\n        getter_7c4b3f.value -> ifexpression_1e6d5a.gen_1\n        ifexpression_1e6d5a.then -> setter_1d9a2e.execute\n        b_f9110a -> setter_1d9a2e.new_value\n        getter_7c4b3f.value -> second_min_b2508f\n        ifexpression_1e6d5a.else -> continue_685c8f\n\n        instance(x: -105, y: 0) ifexpression_5e9d6a root.Std_k98ojb.Std.IfExpression {\n            expression: \"min < c\"\n        }\n        getter(x: -144, y: 112, name: \"getter_7c4b3f\") getter_7c4b3f = min\n        setter(x: 116, y: -268, name: \"setter_1d9a2e\") setter_1d9a2e = min\n        c_a89f71 -> ifexpression_5e9d6a.gen_0\n        getter_7c4b3f.value -> ifexpression_5e9d6a.gen_1\n        ifexpression_5e9d6a.then -> setter_1d9a2e.execute\n        c_a89f71 -> setter_1d9a2e.new_value\n        getter_7c4b3f.value -> second_min_b2508f\n        ifexpression_5e9d6a.else -> continue_685c8f\n\n        instance(x: -105, y: 0) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"min < a\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        a_9f7759 -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> ifexpression_e38995.gen_1\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        getter_9cceb3.value -> second_min_b2508f\n        ifexpression_e38995.else -> continue_685c8f\n\n        instance(x: -105, y: 0) ifexpression_5e9d6a root.Std_k98ojb.Std.IfExpression {\n            expression: \"min < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_7c4b3f\") getter_7c4b3f = min\n        setter(x: 116, y: -268, name: \"setter_1d9a2e\") setter_1d9a2e = min\n        b_f9110a -> ifexpression_5e9d6a.gen_0\n        getter_7c4b3f.value -> ifexpression_5e9d6a.gen_1\n        ifexpression_5e9d6a.then -> setter_1d9a2e.execute\n        b_f9110a -> setter_1d9a2e.new_value\n        getter_7c4b3f.value -> second_min_b2508f\n        ifexpression_5e9d6a.else -> continue_685c8f\n\n        instance(x: -105, y: 0) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"min < c\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        c_a89f71 -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> ifexpression_e38995.gen_1\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        c_a89f71 -> setter_1cedb2.new_value\n        getter_9cceb3.value -> second_min_b2508f\n        ifexpression_e38995.else -> continue_685c8f\n\n        instance(x: -105, y: 0) ifexpression_5e9d6a root.Std_k98ojb.Std.IfExpression {\n            expression: \"min < a\"\n        }\n        getter(x: -144, y: 112, name: \"getter_7c4b3f\") getter_7c4b3f = min\n        setter(x: 116, y: -268, name: \"setter_1d9a2e\") setter_1d9a2e = min\n        a_9f7759 -> ifexpression_5e9d6a.gen_0\n        getter_7c4b3f.value -> ifexpression_5e9d6a.gen_1\n        ifexpression_5e9d6a.then -> setter_1d9a2e.execute\n        a_9f7759 -> setter_1d9a2e.new_value\n        getter_7c4b3f.value -> second_min_b2508f\n        ifexpression_5e9d6a.else -> continue_685c8f\n\n        instance(x: -105, y: 0) ifexpression_e38995 root.Std_k98ojb.Std",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -10, y: 56) min_9e1f4c root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_9e1f4c.items\n            min_9e1f4c.min -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.result\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -6, y: 69) min_9e3f1c root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_9e3f1c.items\n            min_9e3f1c.min -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -1, y: 0) min_9e7f3c root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_9e7f3c.items\n            min_9e7f3c.min -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.result\n            notequal_807ffd.right -> modulo_1088d5.result\n            0 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -280, y: -192, name: \"items\") property(List) items_8f1a3e\n\n        out(x: 46, y: 158, name: \"second min\") property(Number) second_min_9c5d6b\n\n        instance(x: -105, y: -110) find_smallest_2d7c0a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_2b1d3c root.Std_k98ojb.List.Min {}\n            items_8f1a3e -> min_2b1d3c.items\n            min_2b1d3c.min -> find_smallest_2d7c0a.context\n\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            min_2b1d3c.min -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_smallest_2d7c0a.predicate\n        items_8f1a3e -> find_smallest_2d7c0a.items\n\n        instance(x: -105, y: 60) filter_6b9d4a root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            find_smallest_2d7c0a.item -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> filter_6b9d4a.handler\n        items_8f1a3e -> filter_6b9d4a.items\n\n        instance(x: -105, y: 190) min_2b1d3c_2 root.Std_k98ojb.List.Min {}\n        filter_6b9d4a.output_list -> min_2b1d3c_2.items\n        min_2b1d3c_2.min -> second_min_9c5d6b\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -1, y: 0) min_2a9f7c root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_2a9f7c.items\n            min_2a9f7c.min -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.result\n            notequal_807ffd.right -> modulo_1088d5.result\n            0 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}"
            ]
        }
    }
]