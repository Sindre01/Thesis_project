[
    {
        "experiment_name": "regular_ONE_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15999,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -280, y: -91, name: \"list1\") property(List) list1_4a0f9e\n        in(x: -279, y: 39, name: \"list2\") property(List) list2_8c6b5d\n\n        out(x: 554, y: 17, name: \"output\") property(Bool) output_3a1c4d\n\n        instance(x: 0, y: -78) intersection_7e9f4f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 247, y: -77) notempty_5e2b6f root.Std_k98ojb.List.NotEmpty {}\n        list1_4a0f9e -> intersection_7e9f4f.left\n        list2_8c6b5d -> intersection_7e9f4f.right\n        intersection_7e9f4f.intersect -> notempty_5e2b6f.list\n        notempty_5e2b6f.isEmpty -> output_3a1c4d\n    }\n\n    \n\n    instance(x: -71, y: 53) has_common_element_8b0d9f root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -280, y: -86, name: \"list1\") property(List) list1_3f0b8e\n        in(x: -285, y: 30, name: \"list2\") property(List) list2_9a7c4d\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_5a8d4f root.Std_k98ojb.List.NotEmpty {}\n        list1_3f0b8e -> intersection_c7c7e6.left\n        list2_9a7c4d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> notempty_5a8d4f.list\n        notempty_5a8d4f.is_empty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -284, y: -86, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_1d8a5f root.Std_k98ojb.List.NotEmpty {}\n        list1_1f846b -> intersection_c7c7e6.left\n        list2_c62075 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> notempty_1d8a5f.list\n        notempty_1d8a5f.is_empty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_ac7dfb root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -289, y: -86, name: \"list1\") property(List) list1_1f846b\n        in(x: -297, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_1a8d4f root.Std_k98ojb.List.NotEmpty {}\n        list1_1f846b -> intersection_c7c7e6.left\n        list2_c62075 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> notempty_1a8d4f.list\n        notempty_1a8d4f.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -280, y: -86, name: \"list1\") property(List) list1_3f0b9e\n        in(x: -290, y: 30, name: \"list2\") property(List) list2_5c6a8d\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_9d4a8c root.Std_k98ojb.List.NotEmpty {}\n        list1_3f0b9e -> intersection_c7c7e6.left\n        list2_5c6a8d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> notempty_9d4a8c.list\n        notempty_9d4a8c.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -290, y: -86, name: \"list1\") property(List) list1_1f846b\n        in(x: -298, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_5d9a8f root.Std_k98ojb.List.NotEmpty {}\n        list1_1f846b -> intersection_c7c7e6.left\n        list2_c62075 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_5d9a8f.list\n        notempty_5d9a8f.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_ac7dfb root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -275, y: -86, name: \"list1\") property(List) list1_4e9f6d\n        in(x: -276, y: 36, name: \"list2\") property(List) list2_8c7a3b\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_9d4a2f root.Std_k98ojb.List.NotEmpty {}\n        list1_4e9f6d -> intersection_c7c7e6.left\n        list2_8c7a3b -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> notempty_9d4a2f.list\n        notempty_9d4a2f.is_empty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -265, y: -86, name: \"list1\") property(List) list1_2a3b9f\n        in(x: -271, y: 30, name: \"list2\") property(List) list2_7c8e4d\n\n        out(x: 558, y: -97, name: \"output\") property(Bool) output_5b6d1a\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_9f8b4a root.Std_k98ojb.List.NotEmpty {}\n        list1_2a3b9f -> intersection_c7c7e6.left\n        list2_7c8e4d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> notempty_9f8b4a.list\n        notempty_9f8b4a.isEmpty -> output_5b6d1a\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_instance root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -285, y: -86, name: \"list1\") property(List) list1_3af6ba\n        in(x: -181, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_1d0a3c root.Std_k98ojb.List.NotEmpty {}\n        list1_3af6ba -> intersection_c7c7e6.left\n        list2_c62075 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> notempty_1d0a3c.list\n        notempty_1d0a3c.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -282, y: -86, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -8, y: -53) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_f89569 root.Std_k98ojb.List.NotEmpty {}\n        list1_1f846b -> intersection_4e8c54.left\n        list2_c62075 -> intersection_4e8c54.right\n        intersection_4e8c54.intersect -> notempty_f89569.list\n        notempty_f89569.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -535, y: 3, name: \"list\") property(List) list_2f1a9e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_4b0c6d\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_3e4c93\n\n        instance(x: 752, y: 93) ifexpression_7a1f2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_3d9e8c\") getter_3d9e8c = previous\n        setter(x: 679, y: -313, name: \"setter_7f0b4a\") setter_7f0b4a = previous\n        instance(x: 321, y: -20) for_e1b6a2 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7f0b4a\") setter_d5e8d9 = previous\n        instance(x: -275, y: -35) getat_3c1c6f root.Std_k98ojb.List.GetAt {}\n        ifexpression_7a1f2c.else -> continue_4b0c6d\n        ifexpression_7a1f2c.value -> output_3e4c93\n        ifexpression_7a1f2c.then -> setter_7f0b4a.execute\n        list_2f1a9e -> for_e1b6a2.items\n        for_e1b6a2.item -> ifexpression_7a1f2c.gen_2\n        for_e1b6a2.index -> ifexpression_7a1f2c.gen_0\n        getter_3d9e8c.value -> ifexpression_7a1f2c.gen_1\n        for_e1b6a2.onItem -> ifexpression_7a1f2c.execute\n        for_e1b6a2.done -> continue_4b0c6d\n        for_e1b6a2.item -> setter_7f0b4a.new_value\n        list_2f1a9e -> getat_3c1c6f.list\n        0 -> getat_3c1c6f.index\n        getat_3c1c6f.itemAtIndex -> setter_d5e8d9.new_value\n        continue_4b0c6d -> setter_d5e8d9.continue\n        setter_7f0b4a.continue -> for_e1b6a2.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_3c7d8f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) sub_9a7b2a root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_9a7b2a.first\n            _index_170471 -> sub_9a7b2a.second\n            sub_9a7b2a.result -> notequal_cb8a55.left\n            1 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_7a4dad root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -515, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -525, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -465, y: 10, name: \"list\") property(List) list_1f3a9e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_4c2d6b\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_0e2b78\n\n        instance(x: 752, y: 93) ifexpression_7f9a1c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_8d5e2f\") getter_8d5e2f = previous\n        setter(x: 679, y: -313, name: \"setter_9c6b4a\") setter_9c6b4a = previous\n        instance(x: 321, y: -20) for_7c3f0f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9c6b4a\") setter_2d5e8a = previous\n        instance(x: -275, y: -35) getat_1a3b7f root.Std_k98ojb.List.GetAt {}\n        ifexpression_7f9a1c.else -> continue_4c2d6b\n        ifexpression_7f9a1c.value -> output_0e2b78\n        ifexpression_7f9a1c.then -> setter_9c6b4a.execute\n        list_1f3a9e -> for_7c3f0f.items\n        for_7c3f0f.item -> ifexpression_7f9a1c.gen_2\n        for_7c3f0f.index -> ifexpression_7f9a1c.gen_0\n        getter_8d5e2f.value -> ifexpression_7f9a1c.gen_1\n        for_7c3f0f.onItem -> ifexpression_7f9a1c.execute\n        for_7c3f0f.done -> continue_4c2d6b\n        for_7c3f0f.item -> setter_9c6b4a.new_value\n        list_1f3a9e -> getat_1a3b7f.list\n        0 -> getat_1a3b7f.index\n        getat_1a3b7f.itemAtIndex -> setter_2d5e8a.new_value\n        setter_2d5e8a.continue -> for_7c3f0f.reset\n        setter_9c6b4a.continue -> for_7c3f0f.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_1e4a5f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -526, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 575, y: 3) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it + 1 in list\"\n        }\n        instance(x: 801, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 1015, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n        list_3af6ba -> filter_7b3b7b.list\n        filter_7b3b7b.result -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        list_3af6ba -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_ac7dfb root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) sub_a7f9d8 root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_a7f9d8.first\n            _index_170471 -> sub_a7f9d8.second\n            sub_a7f9d8.result -> notequal_cb8a55.left\n            1 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_7a4dad root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -526, y: 1, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 580, y: 1) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it + 1 in list\"\n        }\n        instance(x: 810, y: -96) length_8166b0_2 root.Std_k98ojb.List.Length {}\n        instance(x: 1024, y: -95) equal_f89569_2 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        filter_7b3b7b.result -> length_8166b0_2.list\n        list_3af6ba -> filter_7b3b7b.list\n        length_8166b0_2.length -> equal_f89569_2.left\n        length_8166b0.length -> equal_f89569_2.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_ac7dfb root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -485, y: 30, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_c7097f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3af6ba -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3af6ba -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -465, y: 20, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_c7097f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3af6ba -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3af6ba -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -464, y: 15, name: \"sublist\") property(List) sublist_2a1f8e\n        in(x: -465, y: -220, name: \"list\") property(List) list_5b3c4d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: 321, y: -20, name: \"for_d26972\") for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_5b3c4d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        sublist_2a1f8e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 60, name: \"list1\") property(List) list_2e9f6b\n        in(x: -284, y: -128, name: \"list2\") property(List) list_3c7a5d\n\n        out(x: 555, y: -129, name: \"output\") property(Bool) output_e1a8ba\n\n        instance(x: -92, y: -130) filter_6f9e0b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: 20, name: \"current\") property(List) current_7d5c4a\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_9e8f6b\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_3c1c2f\n\n            instance(x: 226, y: 56) contains_7a0d5f root.Std_k98ojb.List.Contains {}\n            current_7d5c4a -> contains_7a0d5f.list\n            list_3c7a5d -> contains_7a0d5f.item\n            contains_7a0d5f.is_contained -> output_3c1c2f\n        } -> filter_6f9e0b.handler\n        instance(x: 146, y: -128) generateRange_8f4a2d root.Std_k98ojb.List.GenerateRange {}\n        list_2e9f6b -> filter_6f9e0b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_1c5a7f\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_3d8f6e\n\n            instance(x: 74, y: -23) slice_9b0f2d root.Std_k98ojb.List.Slice {}\n            current_1c5a7f -> slice_9b0f2d.start\n            _index_9e8f6b -> slice_9b0f2d.end\n            list_2e9f6b -> slice_9b0f2d.list\n            slice_9b0f2d.slice -> current_7d5c4a\n        } -> generateRange_8f4a2d.handler\n        0 -> generateRange_8f4a2d.from\n        list_2e9f6b.length - list_3c7a5d.length + 1 -> generateRange_8f4a2d.to\n        filter_6f9e0b.output_list.length > 0 -> output_e1a8ba\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_f21f44 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -375, y: 5, name: \"list1\") property(List) list1_2e9b6f\n        in(x: -377, y: -160, name: \"list2\") property(List) list2_7a8d0c\n\n        out(x: 1063, y: -155, name: \"output\") property(Bool) output_5a1b4e\n\n        instance(x: -171, y: -153, name: \"length of list2\") length_9f6a9f root.Std_k98ojb.List.Length {}\n        instance(x: 247, y: -155) contains_3d0c7f root.Std_k98ojb.List.Contains {}\n        instance(x: 529, y: -154) slice_8e5a4f root.Std_k98ojb.List.Slice {}\n        instance(x: 742, y: -153) equal_1e2f9f root.Std_k98ojb.Logic.Equal {}\n        list2_7a8d0c -> length_9f6a9f.list\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_efbc78\n\n            instance(x: 226, y: 56) add_1e2f9f root.Std_k98ojb.List.Add {}\n            instance(x: 463, y: 51) getat_c76d2b root.Std_k98ojb.List.GetAt {}\n            _index_170471 -> getat_c76d2b.index\n            list1_2e9b6f -> getat_c76d2b.list\n            add_1e2f9f.item -> output_efbc78\n            slice_8e5a4f.slice -> add_1e2f9f.list\n        } -> contains_3d0c7f.handler\n        list1_2e9b6f -> contains_3d0c7f.list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(List) bool_4524be\n\n            instance(x: 74, y: -23) add_ad7b2a root.Std_k98ojb.List.Add {}\n            instance(x: 285, y: -25) getat_cb8a55 root.Std_k98ojb.List.GetAt {}\n            current_81298e -> getat_cb8a55.index\n            list1_2e9b6f -> getat_cb8a55.list\n            add_ad7b2a.item -> bool_4524be\n            slice_8e5a4f.slice -> add_ad7b2a.list\n        } -> contains_3d0c7f.items\n        length_9f6a9f.length -> slice_8e5a4f.start\n        0 -> slice_8e5a4f.end\n        list1_2e9b6f -> slice_8e5a4f.list\n        contains_3d0c7f.is_contained -> equal_1e2f9f.left\n        true -> equal_1e2f9f.right\n        equal_1e2f9f.result -> output_5a1b4e\n    }\n\n    \n\n    instance(x: -64, y: 55) is_sublist_8c7d6f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -425, y: 5, name: \"list1\") property(List) list1_3a2f9d\n        in(x: -427, y: 165, name: \"list2\") property(List) list2_7c0e8b\n\n        out(x: 1056, y: 140, name: \"output\") property(Bool) output_4e5c3a\n\n        instance(x: -198, y: 142, name: \"length of list1\") length_9f1d2c root.Std_k98ojb.List.Length {}\n        instance(x: -197, y: 7, name: \"length of list2\") length_8e4f3a root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 140) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 7, name: \"length of list2\") length_8e4f3a root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 7) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 142, name: \"length of list1\") length_9f1d2c root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 142) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 7, name: \"length of list2\") length_8e4f3a root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 7) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 142, name: \"length of list1\") length_9f1d2c root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 142) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 7, name: \"length of list2\") length_8e4f3a root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 7) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 142, name: \"length of list1\") length_9f1d2c root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 142) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 7, name: \"length of list2\") length_8e4f3a root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 7) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 142, name: \"length of list1\") length_9f1d2c root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 142) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 7, name: \"length of list2\") length_8e4f3a root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 7) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 142, name: \"length of list1\") length_9f1d2c root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 142) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 7, name: \"length of list2\") length_8e4f3a root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 7) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 142, name: \"length of list1\") length_9f1d2c root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 142) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 7, name: \"length of list2\") length_8e4f3a root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 7) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 142, name: \"length of list1\") length_9f1d2c root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 142) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 7, name: \"length of list2\") length_8e4f3a root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 7) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 142, name: \"length of list1\") length_9f1d2c root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 142) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 7, name: \"length of list2\") length_8e4f3a root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 7) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 142, name: \"length of list1\") length_9f1d2c root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 142) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 7, name: \"length of list2\") length_8e4f3a root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 7) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 142, name: \"length of list1\") length_9f1d2c root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 142) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 7, name: \"length of list2\") length_8e4f3a root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 7) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 142, name: \"length of list1\") length_9f1d2c root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 142) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 7, name: \"length of list2\") length_8e4f3a root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 7) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 142, name: \"length of list1\") length_9f1d2c root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 142) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 7, name: \"length of list2\") length_8e4f3a root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 7) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 142, name: \"length of list1\") length_9f1d2c root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 142) sub_6f0d1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -198, y: 7, name: \"length of list2\") length_8e4f3a root.Std_k98ojb.List.Length {}\n        instance(x: 504, y: 7)",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -485, y: 30, name: \"list1\") property(List) list1_5f0b8a\n        in(x: -485, y: -110, name: \"list2\") property(List) list2_9c3d7e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_6a4b1e\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_0f9f2e\n\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        ifexpression_875761.else -> continue_6a4b1e\n        ifexpression_875761.value -> output_0f9f2e\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_5f0b8a -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_6a4b1e\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_9c3d7e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_7b8a5e root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -400, y: 5, name: \"list1\") property(List) list1_9a3b6f\n        in(x: -401, y: -139, name: \"list2\") property(List) list2_8e0c4d\n\n        out(x: 1117, y: -122, name: \"output\") property(Bool) output_5a1c9f\n\n        instance(x: -160, y: -121, name: \"is sublist\") filter_3b6b0c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -31, y: 7, name: \"current\") property(List) current_9e8a2f\n            in(x: -24, y: 83, name: \"_index\") property(Number) _index_1c6d5b\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_7c3a4f\n\n            instance(x: 226, y: 56) contains_2e9c0f root.Std_k98ojb.List.Contains {}\n            instance(x: 463, y: 51) notequal_1d8b6f root.Std_k98ojb.Logic.NotEqual {}\n            list2_8e0c4d -> contains_2e9c0f.list\n            current_9e8a2f -> contains_2e9c0f.item\n            contains_2e9c0f.is_contained -> notequal_1d8b6f.left\n            0 -> notequal_1d8b6f.right\n            notequal_1d8b6f.result -> output_7c3a4f\n        } -> filter_3b6b0c.handler\n        instance(x: -275, y: -35) generateRange_9e2c5c root.Std_k98ojb.List.GenerateRange {}\n        list1_9a3b6f -> filter_3b6b0c.items\n        0 -> generateRange_9e2c5c.from\n        length(list1_9a3b6f) - length(list2_8e0c4d) + 1 -> generateRange_9e2c5c.to\n        generateRange_9e2c5c.list -> filter_3b6b0c.context\n        instance(x: -275, y: -35) slice_7f8a3c root.Std_k98ojb.List.Slice {}\n        list1_9a3b6f -> slice_7f8a3c.list\n        _index_1c6d5b -> slice_7f8a3c.start\n        length(list2_8e0c4d) + _index_1c6d5b - 1 -> slice_7f8a3c.end\n        filter_3b6b0c.output_list -> output_5a1c9f\n    }\n\n    \n\n    instance(x: -80, y: -10) is_sublist_2e4b8c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 5, name: \"list1\") property(List) list_0f8a2b\n        in(x: -287, y: 166, name: \"list2\") property(List) list_7c3e4d\n\n        out(x: 557, y: 146, name: \"output\") property(Bool) output_1f5c6c\n\n        instance(x: -92, y: 145, name: \"all elements of list2 are in list1\") filter_9a0b3e root.Std_k98ojb.Query.Filter {\n            where: \"list_0f8a2b.contains(it)\"\n        }\n        instance(x: 146, y: 144) length_6d5c4c root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 143) equal_9e3b7c root.Std_k98ojb.Logic.Equal {}\n        list_0f8a2b -> filter_9a0b3e.list\n        list_7c3e4d -> filter_9a0b3e.items\n        filter_9a0b3e.result -> length_6d5c4c.list\n        length_6d5c4c.length -> equal_9e3b7c.left\n        list_7c3e4d -> length_6d5c4c.list\n        length_6d5c4c.length -> equal_9e3b7c.right\n        equal_9e3b7c.result -> output_1f5c6c\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_2a8f0f root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -400, y: 10, name: \"list1\") property(List) list1_5a9b4f\n        in(x: -398, y: -150, name: \"list2\") property(List) list2_7c6e0d\n\n        out(x: 1058, y: -119, name: \"output\") property(Bool) output_3e1e5a\n\n        instance(x: -170, y: -120, name: \"length of list2\") length_9b4f3f root.Std_k98ojb.List.Length {}\n        instance(x: 0, y: -119) count_6c8d7f root.Std_k98ojb.Std.Count {}\n        instance(x: 221, y: -118) for_1a5e2c root.Std_k98ojb.Std.For {}\n        instance(x: 490, y: -117) slice_4e9c0f root.Std_k98ojb.List.Slice {}\n        instance(x: 714, y: -116) equal_7d3b6f root.Std_k98ojb.Logic.Equal {}\n        list2_7c6e0d -> length_9b4f3f.list\n        count_6c8d7f.count -> for_1a5e2c.trigger\n        0 -> count_6c8d7f.reset\n        list1_5a9b4f -> slice_4e9c0f.list\n        for_1a5e2c.index -> slice_4e9c0f.start\n        length_9b4f3f.length -> slice_4e9c0f.end\n        -1 -> slice_4e9c0f.end\n        slice_4e9c0f.slice -> equal_7d3b6f.left\n        list2_7c6e0d -> equal_7d3b6f.right\n        for_1a5e2c.onItem -> count_6c8d7f.count\n        equal_7d3b6f.result -> for_1a5e2c.breakCondition\n        for_1a5e2c.done -> output_3e1e5a\n    }\n\n    \n\n    instance(x: -65, y: 49) is_sublist_4f9c0c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 5, name: \"list1\") property(List) list1_4e6f3d\n        in(x: -464, y: 147, name: \"list2\") property(List) list2_9a0c8b\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_4e6f3d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_9a0c8b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -485, y: 30, name: \"list1\") property(List) list1_3f0a2b\n        in(x: -485, y: -150, name: \"list2\") property(List) list2_7c9e5d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"is_sublist\") filter_9e3b1c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) list2_6a8f5d\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_1e3b9c root.Std_k98ojb.List.Contains {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            list2_7c9e5d -> contains_1e3b9c.list\n            list2_6a8f5d -> contains_1e3b9c.item\n            contains_1e3b9c.is_contained -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_9e3b1c.handler\n        list1_3f0a2b -> filter_9e3b1c.items\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) list1_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) contains_7c9e5d root.Std_k98ojb.List.Contains {}\n            list2_3f0a2b -> contains_7c9e5d.list\n            list1_81298e -> contains_7c9e5d.item\n            contains_7c9e5d.is_contained -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_9e3b1c.output_list -> map_c73e3b.items\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_5bbcd7\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_3e8f9a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c4b6d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 29, name: \"index\") property(Number) index_8c3e1a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_4b0f5d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_8c3e1a -> add_4b0f5d.first\n            1 -> add_4b0f5d.second\n            elem_9f6850 -> notequal_807ffd.left\n            add_4b0f5d.result -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3e8f9a -> find_6d05b0.items\n        find_6d05b0.index -> missing_7c4b6d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 36, name: \"index\") property(Number) index_7c8d3a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7c8d3a -> add_1088d5.first\n            1 -> add_1088d5.second\n            elem_9f6850 -> notequal_807ffd.left\n            add_1088d5.result -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        find_6d05b0.index -> number_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) missing_node root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f6a5e\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: 35, name: \"index\") property(Number) index_1c7d6e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_1c7d6e -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f6a5e -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_1c7d6e\n\n            instance(x: 89, y: 29) minus_4b3a5f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) plus_2b8b9f root.Std_k98ojb.Math.Add {}\n            1 -> plus_2b8b9f.second\n            index_1c7d6e -> plus_2b8b9f.first\n            minus_4b3a5f.result -> index_1c7d6e\n            elem_9f6850 -> minus_4b3a5f.second\n            0 -> minus_4b3a5f.first\n        } -> find_6d05b0.index_handler\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -116, y: -1, name: \"index\") property(Number) index_3bc2ae\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_3bc2ae -> add_1088d5.first\n            1 -> add_1088d5.second\n            elem_9f6850 -> notequal_807ffd.left\n            add_1088d5.result -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        0 -> find_6d05b0.index\n        find_6d05b0.item -> missing_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -280, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 29, name: \"index\") property(Number) index_7a5c2e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_1b0f8d root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            sub_1b0f8d.result -> notequal_807ffd.left\n            index_7a5c2e -> sub_1b0f8d.first\n            elem_9f6850 -> sub_1b0f8d.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_7a5c2e\n\n            instance(x: 89, y: 29) count_3d1b4c root.Std_k98ojb.Count {}\n            elem_9f6850 -> count_3d1b4c.count\n            count_3d1b4c.value -> index_7a5c2e\n        } -> find_6d05b0.index_handler\n        find_6d05b0.item -> number_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9e4f5a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: -40, name: \"index\") property(Number) index_7e3d8a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_7e3d8a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9e4f5a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_7e3d8a\n\n            instance(x: 89, y: 29) count_c1b5c6 root.Std_k98ojb.Count {}\n            elem_9f6850 -> count_c1b5c6.count\n            count_c1b5c6.value -> index_7e3d8a\n        } -> find_6d05b0.index_handler\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9a9c70\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: 35, name: \"index\") property(Number) index_8e7c5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_2b9d0f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_2b9d0f.result -> notequal_807ffd.left\n            index_8e7c5a -> sub_2b9d0f.first\n            elem_9f6850 -> sub_2b9d0f.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9a9c70 -> find_6d05b0.items\n        find_6d05b0.index + 1 -> missing_3bc2ae\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9e4f3a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -110, y: 29, name: \"index\") property(Number) index_7c3e5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: -1) add_7f0e6a root.Std_k98ojb.Math.Add {}\n            1 -> add_7f0e6a.second\n            index_7c3e5a -> add_7f0e6a.first\n            modulo_1088d5.result -> notequal_807ffd.left\n            add_7f0e6a.result -> notequal_807ffd.right\n            0 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9e4f3a -> find_6d05b0.items\n        find_6d05b0.index -> index_7c3e5a\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9a9c70\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: -44, name: \"index\") property(Number) index_7e8d3a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_2b1c0f root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7e8d3a -> add_2b1c0f.first\n            1 -> add_2b1c0f.second\n            add_2b1c0f.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9a9c70 -> find_6d05b0.items\n        find_6d05b0.index -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: 0, name: \"list\") property(List) list_1f8a5e\n\n        out(x: 159, y: 77, name: \"missing\") property(Number) missing_9c3b2d\n\n        instance(x: 426, y: 76) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1f8a5e\n            in(x: -108, y: 29, name: \"index\") property(Number) index_9c3b2d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_7e4b0f\n\n            instance(x: 89, y: 29) add_1a8c5f root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_2d6e9c root.Std_k98ojb.Logic.NotEqual {}\n            elem_1f8a5e -> add_1a8c5f.first\n            index_9c3b2d -> add_1a8c5f.second\n            1 -> notequal_2d6e9c.right\n            add_1a8c5f.result -> notequal_2d6e9c.left\n            notequal_2d6e9c.result -> bool_7e4b0f\n        } -> find_missing_node.predicate\n        list_1f8a5e -> find_missing_node.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1f8a5e\n\n            out(x: 515, y: 44, name: \"number\") property(Number) number_9c3b2d\n\n            instance(x: 89, y: 29) add_7e4b0f root.Std_k98ojb.Math.Add {}\n            index_9c3b2d -> add_7e4b0f.first\n            1 -> add_7e4b0f.second\n            add_7e4b0f.result -> number_9c3b2d\n        } -> find_missing_node.handler\n        find_missing_node.item -> missing_9c3b2d\n    }\n\n    \n\n    instance(x: -55, y: 127) find_missing_1f8a5e root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -124, y: 0, name: \"input\") property(String) input_9f8a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1c6b4e\n\n        instance(x: 0, y: 1) replace_7f5a3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9d8b2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6e4c1e root.Std_k98ojb.Strings.Replace {}\n        input_9f8a3d -> replace_7f5a3c.input\n        \" \" -> replace_7f5a3c.search\n        \":\" -> replace_7f5a3c.replace\n        replace_7f5a3c.output -> replace_9d8b2f.input\n        \",\" -> replace_9d8b2f.search\n        \":\" -> replace_9d8b2f.replace\n        replace_9d8b2f.output -> replace_6e4c1e.input\n        \".\" -> replace_6e4c1e.search\n        \":\" -> replace_6e4c1e.replace\n        replace_6e4c1e.output -> output_1c6b4e\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -124, y: 0, name: \"input\") property(String) input_1a8f9e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4c3b7d\n\n        instance(x: 0, y: 1) replace_5c6a2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9e8c2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_7e3b1c root.Std_k98ojb.Strings.Replace {}\n        input_1a8f9e -> replace_5c6a2f.input\n        \" \" -> replace_5c6a2f.search\n        \":\" -> replace_5c6a2f.replace\n        replace_5c6a2f.output -> replace_9e8c2d.input\n        \",\" -> replace_9e8c2d.search\n        \":\" -> replace_9e8c2d.replace\n        replace_9e8c2d.output -> replace_7e3b1c.input\n        \".\" -> replace_7e3b1c.search\n        \":\" -> replace_7e3b1c.replace\n        replace_7e3b1c.output -> output_4c3b7d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_9f8a2f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -122, y: 0, name: \"input\") property(String) input_1f8b3a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_7c6e9d\n\n        instance(x: 0, y: 1) replace_4a5d3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8f8b2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9e7d1d root.Std_k98ojb.Strings.Replace {}\n        input_1f8b3a -> replace_4a5d3c.input\n        \" \" -> replace_4a5d3c.search\n        \":\" -> replace_4a5d3c.replace\n        replace_4a5d3c.output -> replace_8f8b2f.input\n        \",\" -> replace_8f8b2f.search\n        \":\" -> replace_8f8b2f.replace\n        replace_8f8b2f.output -> replace_9e7d1d.input\n        \".\" -> replace_9e7d1d.search\n        \":\" -> replace_9e7d1d.replace\n        replace_9e7d1d.output -> output_7c6e9d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"input\") property(String) input_1a2f9e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_3c4d5b\n\n        instance(x: 0, y: 1) replace_6b7c8d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9a0b1c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_d4e5f6 root.Std_k98ojb.Strings.Replace {}\n        input_1a2f9e -> replace_6b7c8d.input\n        \" \" -> replace_6b7c8d.search\n        \":\" -> replace_6b7c8d.replace\n        replace_6b7c8d.output -> replace_9a0b1c.input\n        \",\" -> replace_9a0b1c.search\n        \":\" -> replace_9a0b1c.replace\n        replace_9a0b1c.output -> replace_d4e5f6.input\n        \".\" -> replace_d4e5f6.search\n        \":\" -> replace_d4e5f6.replace\n        replace_d4e5f6.output -> output_3c4d5b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -150, y: 0, name: \"input\") property(String) input_2a1f9e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_3b5c4d\n\n        instance(x: 0, y: 1) replace_7f6a8b root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9e3c2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c4b5e1 root.Std_k98ojb.Strings.Replace {}\n        input_2a1f9e -> replace_7f6a8b.input\n        \" \" -> replace_7f6a8b.search\n        \":\" -> replace_7f6a8b.replace\n        replace_7f6a8b.output -> replace_9e3c2d.input\n        \",\" -> replace_9e3c2d.search\n        \":\" -> replace_9e3c2d.replace\n        replace_9e3c2d.output -> replace_c4b5e1.input\n        \".\" -> replace_c4b5e1.search\n        \":\" -> replace_c4b5e1.replace\n        replace_c4b5e1.output -> output_3b5c4d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -156, y: 0, name: \"input\") property(String) input_9f1b6a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4e8c3d\n\n        instance(x: 0, y: 1) replace_5f7f7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6a9f6a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_3c8d3c root.Std_k98ojb.Strings.Replace {}\n        input_9f1b6a -> replace_5f7f7f.input\n        \" \" -> replace_5f7f7f.search\n        \":\" -> replace_5f7f7f.replace\n        replace_5f7f7f.output -> replace_6a9f6a.input\n        \",\" -> replace_6a9f6a.search\n        \":\" -> replace_6a9f6a.replace\n        replace_6a9f6a.output -> replace_3c8d3c.input\n        \".\" -> replace_3c8d3c.search\n        \":\" -> replace_3c8d3c.replace\n        replace_3c8d3c.output -> output_4e8c3d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1b2f7a root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"input\") property(String) input_3a1f2d\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7c8b6e\n\n        instance(x: 221, y: 0) replace_5f9b4c root.Std_k98ojb.Strings.Replace {}\n        input_3a1f2d -> replace_5f9b4c.input\n        \" \" -> replace_5f9b4c.search\n        \":\" -> replace_5f9b4c.replace\n        replace_5f9b4c.output -> replace_5f9b4c.input\n        \",\" -> replace_5f9b4c.search\n        \".\" -> replace_5f9b4c.search\n        replace_5f9b4c.output -> output_7c8b6e\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_chars_b9ff6b root.main.replace_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -1489, y: 0, name: \"input\") property(String) input_2f1b3a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4e7d5c\n\n        instance(x: 0, y: 1) replace_6e8f9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a5a2a root.Std_k98ojb.Strings.Replace {}\n        instance(x: -1049, y: -375) replace_7c4d1a root.Std_k98ojb.Strings.Replace {}\n        input_2f1b3a -> replace_6e8f9f.input\n        \" \" -> replace_6e8f9f.search\n        \":\" -> replace_6e8f9f.replace\n        replace_6e8f9f.output -> replace_3a5a2a.input\n        \",\" -> replace_3a5a2a.search\n        \":\" -> replace_3a5a2a.replace\n        replace_3a5a2a.output -> replace_7c4d1a.input\n        \".\" -> replace_7c4d1a.search\n        \":\" -> replace_7c4d1a.replace\n        replace_7c4d1a.output -> output_4e7d5c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_3f9b8f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"input\") property(String) input_3a8f6e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1c9b4d\n\n        instance(x: 0, y: 1) replace_5e7c93 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a8f6e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9d4d1c root.Std_k98ojb.Strings.Replace {}\n        input_3a8f6e -> replace_5e7c93.input\n        \" \" -> replace_5e7c93.search\n        \":\" -> replace_5e7c93.replace\n        replace_5e7c93.output -> replace_3a8f6e.input\n        \",\" -> replace_3a8f6e.search\n        \":\" -> replace_3a8f6e.replace\n        replace_3a8f6e.output -> replace_9d4d1c.input\n        \".\" -> replace_9d4d1c.search\n        \":\" -> replace_9d4d1c.replace\n        replace_9d4d1c.output -> output_1c9b4d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_3a8f6e root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -128, y: 0, name: \"input\") property(String) input_1\n        out(x: 520, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_7c8d6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a9e5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_f4f7f1 root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_7c8d6f.input\n        \" \" -> replace_7c8d6f.search\n        \":\" -> replace_7c8d6f.replace\n        replace_7c8d6f.output -> replace_3a9e5f.input\n        \",\" -> replace_3a9e5f.search\n        \":\" -> replace_3a9e5f.replace\n        replace_3a9e5f.output -> replace_f4f7f1.input\n        \".\" -> replace_f4f7f1.search\n        \":\" -> replace_f4f7f1.replace\n        replace_f4f7f1.output -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -305, y: 17, name: \"input\") property(String) input_8f1e9d\n\n        out(x: 1055, y: 23, name: \"output\") property(Bool) output_7c0a6b\n\n        instance(x: -141, y: 18, name: \"characters\") characters_d3d2ec root.Std_k98ojb.Strings.Characters {}\n        instance(x: 226, y: 22) filter_8e1f9f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 532, y: 23) length_7a6c5c root.Std_k98ojb.List.Length {}\n        instance(x: 747, y: 24) equal_4d2b3c root.Std_k98ojb.Logic.Equal {}\n        characters_d3d2ec.input -> filter_8e1f9f.items\n        func() {\n            in(x: -28, y: 41, name: \"current\") property(String) current_7a6b0c\n\n            out(x: 384, y: 43, name: \"output\") property(Bool) output_4d5e3c\n\n            instance(x: 152, y: 44) equal_9f1c2c root.Std_k98ojb.Logic.Equal {}\n            current_7a6b0c -> equal_9f1c2c.left\n            characters_d3d2ec.characters[0] -> equal_9f1c2c.right\n            equal_9f1c2c.result -> output_4d5e3c\n        } -> filter_8e1f9f.handler\n        length_7a6c5c.length -> equal_4d2b3c.left\n        1 -> equal_4d2b3c.right\n        filter_8e1f9f.output_list -> length_7a6c5c.list\n        equal_4d2b3c.result -> output_7c0a6b\n    }\n\n    \n\n    instance(x: -55, y: 111) is_same_1f6f4 root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -305, y: 0, name: \"input\") property(String) input_1a9f3e\n\n        out(x: 1228, y: 5, name: \"output\") property(Bool) output_7c6d2b\n        out(x: 1218, y: 147, name: \"continue\") trigger() continue_4b0f0b\n\n        instance(x: -80, y: 1) characters_c3a9e5 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        ifexpression_875761.else -> continue_4b0f0b\n        ifexpression_875761.value -> output_7c6d2b\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        characters_c3a9e5.characters -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_4b0f0b\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_1a9f3e -> characters_c3a9e5.input\n        setter_9d4f1c.continue -> for_d26972.next\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) is_same_f6a3b9 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -284, y: 0, name: \"input\") property(String) input_9a3e4f\n\n        out(x: 557, y: 59, name: \"output\") property(Bool) output_5b7d2c\n\n        instance(x: -92, y: 60) characters_6a8c0f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 61) length_9e1f3c root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 62) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        input_9a3e4f -> characters_6a8c0f.input\n        characters_6a9c0f.characters -> length_9e1f3c.list\n        length_9e1f3c.length -> for_d26972.items\n        for_d26972.item -> getat_ce2a48.index\n        0 -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        input_9a3e4f -> getat_ce2a48.list\n        for_d26972.onItem -> setter_9d4f1c.execute\n        for_d26972.done -> equal_f89569.execute\n        1 -> equal_f89569.left\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        getter_b280eb.value -> equal_f89569.right\n        setter_9d4f1c.continue -> for_d26972.next\n        equal_f89569.result -> output_5b7d2c\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_aac7df root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -333, y: 0, name: \"input\") property(String) input_9e1f8d\n\n        out(x: 1065, y: 11, name: \"output\") property(Bool) output_4b3c7a\n\n        instance(x: -197, y: 6) characters_d2b0a8 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 332, y: 10) filter_9e1f5d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 634, y: 11) length_3c7c6f root.Std_k98ojb.List.Length {}\n        instance(x: 840, y: 12) equal_f8a0ac root.Std_k98ojb.Logic.Equal {}\n        input_9e1f8d -> characters_d2b0a8.input\n        func() {\n            in(x: -31, y: 46, name: \"current\") property(String) current_7c3e4f\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_9d1b5a\n\n            instance(x: 106, y: 17) equal_6c8a2f root.Std_k98ojb.Logic.Equal {}\n            current_7c3e4f -> equal_6c8a2f.left\n            characters_d2b0a8.characters[0] -> equal_6c8a2f.right\n            equal_6c8a2f.result -> out_9d1b5a\n        } -> filter_9e1f5d.handler\n        characters_d2b0a8.characters -> filter_9e1f5d.items\n        length_3c7c6f.length -> equal_f8a0ac.left\n        1 -> equal_f8a0ac.right\n        filter_9e1f5d.output_list -> length_3c7c6f.list\n        equal_f8a0ac.result -> output_4b3c7a\n    }\n\n    \n\n    instance(x: -62, y: 121) is_same_2c9c1c root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -277, y: 0, name: \"input\") property(String) input_1a9f8e\n\n        out(x: 1115, y: 4, name: \"output\") property(Bool) output_eb3c7d\n\n        instance(x: -97, y: 6) characters_d2b0a8 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 341, y: 1) filter_5f9e4f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 642, y: 7) equal_3d6c4c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 928, y: -2) length_0a1f8f root.Std_k98ojb.List.Length {}\n        instance(x: 1105, y: 10) ifexpression_9e7b3f root.Std_k98ojb.Std.IfExpression {\n            expression: \"length == 1\"\n        }\n        characters_d2b0a8.characters -> filter_5f9e4f.items\n        func() {\n            in(x: -31, y: 41, name: \"current\") property(String) current_7c3d6\n\n            out(x: 493, y: 34, name: \"output\") property(Bool) output_8b2a9e\n\n            instance(x: 226, y: 38) equal_4f5c1f root.Std_k98ojb.Logic.Equal {}\n            current_7c3d6 -> equal_4f5c1f.left\n            input_1a9f8e -> equal_4f5c1f.right\n            equal_4f5c1f.result -> output_8b2a9e\n        } -> filter_5f9e4f.handler\n        length_0a1f8f.list -> ifexpression_9e7b3f.gen_0\n        filter_5f9e4f.output_list -> equal_3d6c4c.left\n        characters_d2b0a8.characters -> equal_3d6c4c.right\n        equal_3d6c4c.result -> ifexpression_9e7b3f.gen_1\n        ifexpression_9e7b3f.value -> output_eb3c7d\n    }\n\n    \n\n    instance(x: -63, y: 111) is_same_8a2f5 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -297, y: 0, name: \"input\") property(String) input_8f3a4e\n\n        out(x: 1059, y: 5, name: \"output\") property(Bool) output_1c2d6b\n\n        instance(x: -93, y: 10) characters_7e0e8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 11) filter_9a4e5f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 360, y: 12) length_6c1d2c root.Std_k98ojb.List.Length {}\n        instance(x: 574, y: 13) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        input_8f3a4e -> characters_7e0e8f.input\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(String) current_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> equal_7836b4.left\n            characters_7e0e8f.characters[0] -> equal_7836b4.right\n            equal_7836b4.result -> output_efbc78\n        } -> filter_9a4e5f.handler\n        characters_7e0e8f.characters -> filter_9a4e5f.items\n        length_6c1d2c.length -> equal_f89569.left\n        filter_9a4e5f.output_list -> length_6c1d2c.list\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_1c2d6b\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_ac7dfb root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -286, y: 5, name: \"input\") property(String) input_8e9f0d\n\n        out(x: 554, y: 123, name: \"output\") property(Bool) output_1b7a3c\n\n        instance(x: -93, y: 6) characters_2b5e4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 125) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 360, y: 124) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 574, y: 123) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        input_8e9f0d -> characters_2b5e4f.input\n        characters_2b5e4f.characters -> intersection_c7c7e6.left\n        characters_2b5e4f.characters -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        equal_f89569.result -> output_1b7a3c\n    }\n\n    \n\n    instance(x: -84, y: 239) is_same_8f9d2f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -296, y: 0, name: \"input\") property(String) input_8f3a1e\n\n        out(x: 1146, y: 5, name: \"output\") property(Bool) output_7c2d9b\n\n        instance(x: -140, y: 4) characters_5b0e8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 334, y: 3) filter_6a1b0f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 641, y: -2) length_9d7c4f root.Std_k98ojb.List.Length {}\n        instance(x: 858, y: 5) equal_8e3b0f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1066, y: 1) lessthanorequal_2a9d7c root.Std_k98ojb.Math.LessThanOrEqual {}\n        characters_5b0e8f.input -> filter_6a1b0f.items\n        func() {\n            in(x: -30, y: 26, name: \"current\") property(String) current_2c4d9f\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_5e8a7b\n\n            instance(x: 106, y: 17) equal_f0f6d1 root.Std_k98ojb.Logic.Equal {}\n            current_2c4d9f -> equal_f0f6d1.right\n            characters_5b0e8f.characters[0] -> equal_f0f6d1.left\n            equal_f0f6d1.result -> out_5e8a7b\n        } -> filter_6a1b0f.handler\n        length_9d7c4f.list -> lessthanorequal_2a9d7c.right\n        1 -> lessthanorequal_2a9d7c.left\n        lessthanorequal_2a9d7c.result -> equal_8e3b0f.left\n        filter_6a1b0f.output_list -> length_9d7c4f.list\n        true -> equal_8e3b0f.right\n        equal_8e3b0f.result -> output_7c2d9b\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -285, y: 30, name: \"input\") property(String) input_8e6f3d\n\n        out(x: 557, y: 5, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: 0) characters_4b9c1a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: -3) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -5) getat_c7f2e8 root.Std_k98ojb.List.GetAt {}\n        instance(x: 520, y: 1) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        input_8e6f3d -> characters_4b9c1a.input\n        length_8166b0.list -> getat_c7f2e8.list\n        1 -> getat_c7f2e8.index\n        characters_4b9c1a.characters -> length_8166b0.list\n        equal_f89569.result -> output_c7097f\n        input_8e6f3d -> equal_f89569.left\n        getat_c7f2e8.itemAtIndex -> equal_f89569.right\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -280, y: 11, name: \"input\") property(String) input_1a3e6f\n\n        out(x: 1110, y: 10, name: \"output\") property(Bool) output_9b7c8d\n\n        instance(x: -98, y: 12) characters_d5f4a2 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 336, y: 13) filter_3e6f0c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 643, y: 14) length_9d7b1c root.Std_k98ojb.List.Length {}\n        instance(x: 857, y: 15) equal_2a5c8f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1063, y: 16) ifexpression_0e4f6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == previous\"\n        }\n        getter(x: 454, y: 47, name: \"getter_ea7d8c\") getter_ea7d8c = previous\n        setter(x: 799, y: -12, name: \"setter_9b5e2f\") setter_9b5e2f = previous\n        instance(x: 422, y: -20) for_0f6f3f root.Std_k98ojb.Std.For {}\n        setter(x: -1, y: 29, name: \"setter_9b5e2f\") setter_7c8d4a = previous\n        instance(x: -276, y: 34) getat_0e6f3f root.Std_k98ojb.List.GetAt {}\n        ifexpression_0e4f6f.else -> output_9b7c8d\n        ifexpression_0e4f6f.value -> setter_9b5e2f.execute\n        characters_d5f4a2.characters -> for_0f6f3f.items\n        for_0f6f3f.item -> ifexpression_0e4f6f.gen_2\n        for_0f6f3f.index -> ifexpression_0e4f6f.gen_0\n        getter_ea7d8c.value -> ifexpression_0e4f6f.gen_1\n        for_0f6f3f.onItem -> ifexpression_0e4f6f.execute\n        for_0f6f3f.done -> output_9b7c8d\n        for_0f6f3f.item -> setter_9b5e2f.new_value\n        characters_d5f4a2.characters -> getat_0e6f3f.list\n        0 -> getat_0e6f3f.index\n        getat_0e6f3f.itemAtIndex -> setter_7c8d4a.new_value\n        input_1a3e6f -> characters_d5f4a2.input\n        filter_3e6f0c.output_list -> length_9d7b1c.list\n        1 -> equal_2a5c8f.right\n        length_9d7b1c.length -> equal_2a5c8f.left\n        characters_d5f4a2.characters -> filter_3e6f0c.items\n        func() {\n            in(x: -41, y: 62, name: \"current\") property(String) current_5f9d7b\n\n            out(x: 485, y: 46, name: \"out\") property(Bool) out_8a3e6f\n\n            instance(x: 224, y: 51) equal_0c4f1e root.Std_k98ojb.Logic.Equal {}\n            current_5f9d7b -> equal_0c4f1e.left\n            getter_ea7d8c.value -> equal_0c4f1e.right\n            equal_0c4f1e.result -> out_8a3e6f\n        } -> filter_3e6f0c.handler\n        setter_7c8d4a.continue -> for_0f6f3f.reset\n        setter_9b5e2f.continue -> for_0f6f3f.next\n    }\n\n    \n\n    instance(x: 40, y: -10) is_same_1a3e6f root.main.is_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 80, y: 0) count_digits_2 root.main.count_digits {}\n        instance(x: 240, y: 0) filter_1 root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_1.items\n        instance(x: 440, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_1.output_list -> list_length_node.list\n        list_length_node.length -> output_ai\n    }\n\n    \n    instance(x: -40, y: 0) count_digits_1 root.main.count_digits {}\n\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        instance(x: 0, y: 0) filter_1 root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        characters_node.characters -> filter_1.items\n        filter_1.output_list -> list_length_node.list\n        list_length_node.length -> output_ai\n    }\n\n    \n    instance(x: -15, y: 0) count_digits_2 root.main.count_digits {}\n\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -5, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_1e9a4f root.Std_k98ojb.Iteration.Filter {\n            handler: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_1e9a4f.items\n        instance(x: 0, y: -5) list_length_node root.Std_k98ojb.List.Length {}\n        filter_1e9a4f.output_list -> list_length_node.list\n        list_length_node.length -> output_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_2d8c7c root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -10, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_2c1a6f root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_2c1a6f.items\n        instance(x: 0, y: -50) count_node root.Std_k98ojb.Count {}\n        filter_2c1a6f.result -> count_node.items\n        count_node.count -> output_ai\n    }\n\n    \n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_7d3e5a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -10, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 15, y: 0) count_digits_2 root.main.count_digits {}\n        instance(x: 30, y: 0) filter_1 root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_1.items\n        instance(x: 45, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_1.output_list -> list_length_node.list\n        list_length_node.length -> output_ai\n    }\n\n    \n    instance(x: -10, y: 0) count_digits_2 root.main.count_digits {}\n\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -16, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_1e3a9f root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_1e3a9f.items\n        instance(x: 0, y: -16) count_node root.Std_k98ojb.Count {}\n        filter_1e3a9f.result -> count_node.count\n        count_node.value -> output_ai\n    }\n\n    \n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_7d4c6f root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 30, y: 0) count_digits_2 root.main.count_digits {}\n        instance(x: 60, y: 0) filter_1 root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_1.items\n        instance(x: 90, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_1.output_list -> list_length_node.list\n        list_length_node.length -> output_ai\n    }\n\n    \n    instance(x: -15, y: 0) count_digits_2 root.main.count_digits {}\n\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -16, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 15, y: 0) filter_1c9a4f root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_1c9a4f.items\n        instance(x: 15, y: -16) list_length_node root.Std_k98ojb.List.Length {}\n        filter_1c9a4f.output_list -> list_length_node.list\n        list_length_node.length -> output_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_2d3e5a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -20, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 100, y: 0) count_digits_2 root.main.count_digits {}\n        instance(x: 300, y: 0) filter_1 root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_1.items\n        instance(x: 500, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_1.output_list -> list_length_node.list\n        list_length_node.length -> output_ai\n    }\n\n    \n    instance(x: -20, y: 0) count_digits_1 root.main.count_digits {}\n\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -30, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: 0) iteration_filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        characters_node.characters -> iteration_filter_node.items\n        iteration_filter_node.output_list -> count_digits_2.input_list\n        is_numeric_node.value -> count_digits_2.predicate\n        count_digits_2.output_count -> output_ai\n\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_1 root.main.count_digits {}\n\n    \n\n    func(doc: \"count the number of items in a list.\") count_items {\n        in(x: -426, y: -248, name: \"input_list\") property(List) input_list_ai\n        in(x: -426, y: -303, name: \"predicate\") property(Function) predicate_ai\n        out(x: 159, y: -219, name: \"output_count\") property(Number) output_count_ai\n\n        instance(x: 0, y: 0) iteration_filter_node_1 root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        input_list_ai -> iteration_filter_node_1.items\n        predicate_ai -> iteration_filter_node_1.handler\n        iteration_filter_node_1.output_list -> count_items.input_list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_items.input_list -> list_length_node.list\n        list_length_node.length -> output_count_ai\n\n    }\n\n    \n    instance(x: 0, y: 0) count_items_1 root.main.count_items {}\n\n    \n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) pow_4d1c8e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_4d1c8e.second\n        mul_f892a4.result -> sum_365f7b\n        expression_2d6da6.result -> mul_f892a4.first\n        n_3a3116 -> mul_f892a4.second\n        expression_2d6da6.result -> pow_4d1c8e.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        n_3a3116 -> pow_4d1c8e.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> mul_64046c.second\n        pow_f892a4.result -> mul_64046c.first\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        mul_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -280, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4d5c2e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_9e8f0c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_4d5c2e.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_4d5c2e.first\n        pow_4d5c2e.result -> add_9e8f0c.first\n        pow_4d5c2e.result -> sum_365f7b\n        n_3a3116 -> add_9e8f0c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> mul_64046c.second\n        pow_f892a4.result -> mul_64046c.first\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        mul_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_9e6f1a\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_7b3d0c\n\n        instance(x: 532, y: 147) pow_4d5f8 root.Std_k98ojb.Math.Pow {}\n        instance(x: -39, y: 26, name: \"First odd number\") find_9e6a2e root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Sum of fourth power\") ``First odd number_0b1361`` root.Std_k98ojb.Iteration.Reduce {}\n        n_9e6f1a -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First odd number_0b1361``.predicate\n        list_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> pow_4d5f8.first\n        4 -> pow_4d5f8.second\n        pow_4d5f8.result -> ``First odd number_0b1361``.reducer\n        n_9e6f1a -> ``First odd number_0b1361``.initial_value\n        ``First odd number_0b1361``.output -> output_7b3d0c\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> mul_64046c.second\n        pow_f892a4.result -> mul_64046c.first\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        mul_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) pow_64046c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n-3\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_64046c.y\n        mul_f892a4.result -> pow_64046c.x\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 394, y: -339) data_3c713b  = [sum]\n        pow_64046c.result -> data_3c713b.sum\n        data_3c713b -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> mul_64046c.second\n        pow_f892a4.result -> mul_64046c.first\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        mul_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) pow_64046c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n-3\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_64046c.y\n        mul_f892a4.result -> pow_64046c.x\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -1) reduce_64046c root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -113, y: 34, name: \"acc\") property(Number) acc_9f6850\n\n            in(x: 89, y: 29, name: \"elem\") property(Number) elem_af09a7\n\n            out(x: 515, y: 44, name: \"output\") property(Number) output_b8b2e6\n\n            instance(x: 310, y: 35) add_807ffd root.Std_k98ojb.Math.Add {}\n            acc_9f6850 -> add_807ffd.first\n            pow_64046c.result -> add_807ffd.second\n            add_807ffd.result -> output_b8b2e6\n        } -> reduce_64046c.reducer\n        0 -> reduce_64046c.initial_value\n        n_64046c -> reduce_64046c.items\n        pow_64046c.x -> n_64046c\n        reduce_64046c.output -> sum_365f7b\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_1f3b6a\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_e9e8c0\n\n        instance(x: 532, y: 147) pow_7d5f2c root.Std_k98ojb.Math.Pow {}\n        instance(x: -39, y: 26, name: \"First odd number\") find_1a4f3c root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Sum of fourth power\") ``First odd number_0b1361`` root.Std_k98ojb.Iteration.Reduce {}\n        n_1f3b6a -> find_1a4f3c.gen_0\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_1a4f3c.predicate\n        list_instance(x: -39, y: 257) list_7d5f2c = [1..n*2]\n        ``First odd number_0b1361``.items -> pow_7d5f2c.x\n        4 -> pow_7d5f2c.y\n        find_1a4f3c.item -> ``First odd number_0b1361``.initial_value\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> list_7d5f2c.filter.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> list_instance(x: -39, y: 257).filter.predicate\n        pow_7d5f2c.result -> ``First odd number_0b1361``.reducer\n        ``First odd number_0b1361``.output -> output_e9e8c0\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -219, y: 55, name: \"size\") property(Number) size_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        size_3a3116 -> mul_f892a4.first\n        size_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -102, y: 53, name: \"size\") property(Number) size_1a3f8e\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_cbb7bd\n\n        instance(x: 94, y: -105) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_584bfd root.Std_k98ojb.Math.Mul {}\n        size_1a3f8e -> mul_f2330d.first\n        6 -> mul_f2330d.second\n        mul_f2330d.result -> mul_584bfd.first\n        size_1a3f8e -> mul_584bfd.second\n        mul_584bfd.result -> result_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_b9ff6b root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: 45, name: \"size\") property(Number) size_1a8f6e\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_9c2b7d\n\n        instance(x: 94, y: -105) mul_f5a0eb root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_3f8e6d  = 6\n        size_1a8f6e -> mul_f5a0eb.first\n        data_3f8e6d -> mul_f5a0eb.second\n        instance(x: 303, y: 2) mul_9b7c4f root.Std_k98ojb.Math.Mul {}\n        size_1a8f6e -> mul_9b7c4f.first\n        size_1a8f6e -> mul_9b7c4f.second\n        mul_f5a0eb.result -> surface_area_9c2b7d\n        mul_9b7c4f.result -> mul_f5a0eb.second\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_3e6b8c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -101, y: 20, name: \"size\") property(Number) size_1a9e8f\n\n        out(x: 0, y: 0, name: \"surface_area\") property(Number) surface_area_7c6d4b\n\n        instance(x: 0, y: -40) mul_f3b5aa root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 0, y: 80) data_1a9e8f  = [size]\n        size_1a9e8f -> data_1a9e8f.size\n        data_1a9e8f.size -> mul_f3b5aa.first\n        6 -> mul_f3b5aa.second\n        instance(x: 0, y: -120) mul_7c6d4b root.Std_k98ojb.Math.Mul {}\n        mul_f3b5aa.result -> mul_7c6d4b.first\n        data_1a9e8f.size -> mul_7c6d4b.second\n        mul_7c6d4b.result -> surface_area_7c6d4b\n    }\n\n    \n\n    instance(x: 0, y: -160) surface_area_cube_5b2f3f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -103, y: 47, name: \"size\") property(Number) size_1f3e8d\n\n        out(x: 0, y: 0, name: \"surface_area\") property(Number) surface_area_7c2a9b\n\n        instance(x: 0, y: -55) mul_6a5e4f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 0, y: 76) data_3d1f8c  = [size]\n        size_1f3e8d -> data_3d1f8c.size\n        data_3d1f8c.size -> mul_6a5e4f.first\n        6 -> mul_6a5e4f.second\n        instance(x: -2, y: -55) mul_9b7c0c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 0, y: 76) data_3d1f8c_1  = [size]\n        size_1f3e8d -> data_3d1f8c_1.size\n        data_3d1f8c_1.size -> mul_9b7c0c.first\n        mul_6a5e4f.result -> mul_9b7c0c.second\n        mul_9b7c0c.result -> surface_area_7c2a9b\n    }\n\n    \n\n    instance(x: 0, y: -1) surface_area_cube_e8d3ed root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -218, y: 55, name: \"size\") property(Number) size_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        size_3a3116 -> mul_f892a4.first\n        size_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -102, y: 22, name: \"size\") property(Number) size_1f3e8d\n\n        out(x: 1062, y: 24, name: \"surface_area\") property(Number) surface_area_9b7a5c\n\n        instance(x: 0, y: -13) mul_6b4e5f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 332, y: 122) data_3d2c8c  = [size]\n        instance(x: 12, y: 136) expression_9a0c7f root.Std_k98ojb.Math.Expression {\n            expression: \"6*size*size\"\n        }\n        size_1f3e8d -> mul_6b4e5f.first\n        data_3d2c8c.size -> mul_6b4e5f.second\n        expression_9a0c7f.result -> surface_area_9b7a5c\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_e1c9bc root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -111, y: 15, name: \"size\") property(Number) size_1f0e5d\n\n        out(x: 1046, y: 7, name: \"surface_area\") property(Number) surface_area_9b2c3a\n\n        instance(x: 10, y: -8) mul_4b4eac root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1f0e5d -> mul_4b4eac.first\n        data_cde0dc -> mul_4b4eac.second\n        mul_4b4eac.result -> surface_area_9b2c3a\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -101, y: 45, name: \"size\") property(Number) size_1f8a5e\n\n        out(x: 46, y: 158, name: \"surface_area\") property(Number) surface_area_7c3b0d\n\n        instance(x: 10, y: -22) mul_9b4c2c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1f8a5e -> mul_9b4c2c.first\n        data_cde0dc -> mul_9b4c2c.second\n        mul_9b4c2c.result -> surface_area_7c3b0d\n    }\n\n    \n\n    instance(x: 322, y: 568) surface_area_cube_6a5e1f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -104, y: 43, name: \"size\") property(Number) size_9e3a2f\n\n        out(x: 1000, y: 44, name: \"surface_area\") property(Number) surface_area_8b7c1d\n\n        instance(x: 20, y: -16) mul_6e4c5c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 338, y: 133) data_cde0dc  = 6\n        size_9e3a2f -> mul_6e4c5c.first\n        data_cde0dc -> mul_6e4c5c.second\n        instance(x: 303, y: 2) mul_1b8d7f root.Std_k98ojb.Math.Mul {}\n        size_9e3a2f -> mul_1b8d7f.first\n        size_9e3a2f -> mul_1b8d7f.second\n        mul_6e4c5c.result -> surface_area_8b7c1d\n        mul_1b8d7f.result -> mul_6e4c5c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 0, name: \"list\") property(List) list_4a3f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.items -> list_4a3f8e\n        min_list_4d4556.items -> list_4a3f8e\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 13, name: \"list\") property(List) list_1a8f9e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.items -> list_1a8f9e\n        min_list_4d4556.items -> list_1a8f9e\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -27, y: 0, name: \"list\") property(List) list_1e8f5a\n\n        out(x: 442, y: 62, name: \"difference\") property(Number) difference_4b9c7d\n\n        instance(x: 201, y: 61) sub_2a6e3f root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 155) max_1a5f8f root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_7d4c0c root.Std_k98ojb.List.Min {}\n        list_1e8f5a -> max_1a5f8f.items\n        list_1e8f5a -> min_7d4c0c.items\n        max_1a5f8f.max -> sub_2a6e3f.first\n        min_7d4c0c.min -> sub_2a6e3f.second\n        sub_2a6e3f.result -> difference_4b9c7d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_5c1b8f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1e9b8a\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.items -> list_1e9b8a\n        min_list_4d4556.items -> list_1e9b8a\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 15, name: \"list\") property(List) list_1a8f6e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.items -> list_1a8f6e\n        min_list_4d4556.items -> list_1a8f6e\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -35, y: 13, name: \"list\") property(List) list_1a8f2e\n\n        out(x: 448, y: 63, name: \"difference\") property(Number) difference_6c9b0d\n\n        instance(x: 201, y: 62) sub_7a4f3e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"max list\") max_list_f8b2a1 root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358, name: \"min list\") min_list_7e9f6c root.Std_k98ojb.List.Min {}\n        sub_7a4f3e.result -> difference_6c9b0d\n        max_list_f8b2a1.max -> sub_7a4f3e.first\n        min_list_7e9f6c.min -> sub_7a4f3e.second\n        list_1a8f2e -> max_list_f8b2a1.items\n        list_1a8f2e -> min_list_7e9f6c.items\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_5d4f0c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1a9f0e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.items -> list_1a9f0e\n        min_list_4d4556.items -> list_1a9f0e\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -34, y: 14, name: \"list\") property(List) list_1a8f2e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_4c7d5b\n\n        instance(x: 201, y: 62) sub_6a3b9e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_2f0b1c root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_7d8b5a root.Std_k98ojb.List.Min {}\n        sub_6a3b9e.result -> output_4c7d5b\n        max_2f0b1c.max -> sub_6a3b9e.first\n        min_7d8b5a.min -> sub_6a3b9e.second\n        list_1a8f2e -> max_2f0b1c.items\n        list_1a8f2e -> min_7d8b5a.items\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_6e9c3f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1a8b6f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.items -> list_1a8b6f\n        min_list_4d4556.items -> list_1a8b6f\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 26, name: \"list\") property(List) list_0d9b3f\n\n        out(x: 546, y: -63, name: \"output\") property(Number) output_1e7c8a\n\n        instance(x: 201, y: -62) sub_5b2e4e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: -125) max_9f0d6f root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: -125) min_1c3a8c root.Std_k98ojb.List.Min {}\n        sub_5b2e4e.result -> output_1e7c8a\n        max_9f0d6f.max -> sub_5b2e4e.first\n        min_1c3a8c.min -> sub_5b2e4e.second\n        list_0d9b3f -> max_9f0d6f.items\n        list_0d9b3f -> min_1c3a8c.items\n    }\n\n    \n\n    instance(x: 48, y: -11) diff_max_min_5c7e4f root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 11, name: \"input\") property(Number) input_9a8f5e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 432, y: 56) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n        input_9a8f5e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> notequal_cb8a55.left\n        0 -> notequal_cb8a55.right\n        not(notequal_cb8a55.result) -> output_b1d7f8\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 11, name: \"input\") property(Number) input_1a0f9e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 434, y: 56) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n        input_1a0f9e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> notequal_cb8a55.left\n        0 -> notequal_cb8a55.right\n        not(notequal_cb8a55.result) -> output_b1d7f8\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -27, y: 2, name: \"input\") property(Number) input_1e3f0d\n        out(x: 1276, y: 11, name: \"output\") property(Bool) output_7a8b4c\n\n        instance(x: 1055, y: -9) modulo_2f3c4c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1311, y: 49) equal_6e0d3c root.Std_k98ojb.Logic.Equal {}\n        input_1e3f0d -> modulo_2f3c4c.value\n        2 -> modulo_2f3c4c.divisor\n        modulo_2f3c4c.result -> equal_6e0d3c.left\n        0 -> equal_6e0d3c.right\n        equal_6e0d3c.result -> output_7a8b4c\n    }\n\n    \n\n    instance(x: -13, y: -14) is_even_5f2d9c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_1e9d8f\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_1e9d8f -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_1e9d8f -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> out_f3db9f\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_1e9d8f -> expression_9fba8c.gen_0\n        input_1e9d8f -> expression_b720d7.gen_0\n        if_e19a62.then -> out_f3db9f\n        for_8cb3f6.done -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e4c2b root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 11, name: \"input\") property(Number) input_1a0f8e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7b2c3d\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 432, y: 56) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n        input_1a0f8e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> notequal_cb8a55.left\n        0 -> notequal_cb8a55.right\n        notequal_cb8a55.result -> output_7b2c3d\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -32, y: 2, name: \"input\") property(Number) input_1a8f6e\n        out(x: 1894, y: 120, name: \"output\") property(Bool) output_5c9b0d\n\n        instance(x: 1087, y: -54) modulo_2e3a9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1506, y: -400) equal_1f4c8c root.Std_k98ojb.Logic.Equal {}\n        input_1a8f6e -> modulo_2e3a9.value\n        2 -> modulo_2e3a9.divisor\n        modulo_2e3a9.result -> equal_1f4c8c.left\n        0 -> equal_1f4c8c.right\n        equal_1f4c8c.result -> output_5c9b0d\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_1a9f0e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_1a9f0e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_1a9f0e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_1a9f0e -> expression_9fba8c.gen_0\n        input_1a9f0e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -31, y: 2, name: \"input\") property(Number) input_1a8f6e\n        out(x: 1749, y: -10, name: \"out\") property(Bool) out_7b4c3d\n\n        instance(x: 1505, y: -400, name: \"modulo\") modulo_2b0e7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1496, y: -187, name: \"equal\") equal_1a9b4c root.Std_k98ojb.Logic.Equal {}\n        input_1a8f6e -> modulo_2b0e7f.value\n        2 -> modulo_2b0e7f.divisor\n        modulo_2b0e7f.result -> equal_1a9b4c.left\n        0 -> equal_1a9b4c.right\n        equal_1a9b4c.result -> out_7b4c3d\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 0, name: \"input\") property(Number) input_1a8e5f\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7b3d4c\n\n        instance(x: 1016, y: -203) modulo_0f2b7c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1058, y: -203) notequal_75283f root.Std_k98ojb.Logic.NotEqual {}\n        input_1a8e5f -> modulo_0f2b7c.value\n        2 -> modulo_0f2b7c.divisor\n        modulo_0f2b7c.result -> notequal_75283f.left\n        0 -> notequal_75283f.right\n        not(notequal_75283f.result) -> output_7b3d4c\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 1, name: \"input\") property(Number) input_9e8a2f\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_9e8a2f -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_9e8a2f -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_9e8a2f -> expression_9fba8c.gen_0\n        input_9e8a2f -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_1e9f7c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"characters\") characters_0d5a4c root.Std_k98ojb.Strings.Characters {}\n        input_0 -> characters_0d5a4c.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2a8f4c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            characters_0d5a4c.characters -> contains_2a8f4c.input\n            current_afd5b1 -> contains_2a8f4c.contains\n            find_1e9f7c.item -> contains_2a8f4c.contains\n            contains_2a8f4c.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_1e9f7c.predicate\n        characters_0d5a4c.characters -> find_1e9f7c.items\n        find_1e9f7c.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"First repeated character\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"Characters\") characters_1a9f5c root.Std_k98ojb.Strings.Characters {}\n        input_0 -> characters_1a9f5c.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            characters_1a9f5c.characters -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        characters_1a9f5c.characters -> find_6d05b0.items\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -288, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3b7c9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -20, y: 80) filter_5e1a4f root.Std_k98ojb.Iteration.Filter {}\n        characters_3b7c9f.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            filter_5e1a4f.output_list -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        characters_3b7c9f.characters -> filter_5e1a4f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_d42dce.input\n            input_0 -> contains_d42dce.contains\n            contains_d42dce.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> filter_5e1a4f.handler\n        find_6d05b0.item -> result_0\n    }\n\n    \n\n    instance(x: -81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_09fcba root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated character\") ``characters_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        input_0 -> characters_09fcba.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_09fcba.characters -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            find_7e1ce0.item -> contains_d42dce.contains\n            characters_09fcba.characters -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.input\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``characters_0b1361``.predicate\n        characters_09fcba.characters -> find_7e1ce0.items\n        characters_09fcba.characters -> ``characters_0b1361``.items\n        find_7e1ce0.item -> output_ebef81\n        ``characters_0b1361``.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"First repeated character\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"Characters\") characters_1a9c7f root.Std_k98ojb.Strings.Characters {}\n        input_0 -> characters_1a9c7f.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            find_6d05b0.indexedItems -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        characters_1a9c7f.characters -> find_6d05b0.items\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -279, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5a3f4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7d9e8c root.Std_k98ojb.Iteration.Find {}\n        instance(x: -2, y: 159) ``Finds the first repeated character in a given string_1f3a4c`` root.Std_k98ojb.Iteration.Filter {}\n        characters_5a3f4c.characters -> find_7d9e8c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_7f3b2c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_0 -> contains_7f3b2c.input\n            characters_5a3f4c.characters -> contains_7f3b2c.contains\n            contains_7f3b2c.result -> notequal_148aeb.left\n            find_7d9e8c.item -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``Finds the first repeated character in a given string_1f3a4c``.handler\n        characters_5a3f4c.characters -> ``Finds the first repeated character in a given string_1f3a4c``.items\n        ``Finds the first repeated character in a given string_1f3a4c``.output_list -> find_7d9e8c.items\n        input_0 -> characters_5a3f4c.input\n        find_7d9e8c.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_7b1f8c root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0e6d4a root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated character\") ``characters_0e6d4a`` root.Std_k98ojb.Iteration.Find {}\n        input_0 -> characters_0e6d4a.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a1f7c9\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2b3a0d root.Std_k98ojb.Strings.Contains {}\n            current_a1f7c9 -> contains_2b3a0d.input\n            find_7b1f8c.item -> contains_2b3a0d.contains\n            contains_2b3a0d.result -> bool_1eb6e9\n        } -> ``characters_0e6d4a``.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a1f7c9\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2b3a0d root.Std_k98ojb.Strings.Contains {}\n            current_a1f7c9 -> contains_2b3a0d.input\n            find_7b1f8c.item -> contains_2b3a0d.contains\n            contains_2b3a0d.result -> bool_1eb6e9\n        } -> find_7b1f8c.predicate\n        characters_0e6d4a.characters -> find_7b1f8c.items\n        ``characters_0e6d4a``.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5a3f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257) ``Finds the first repeated character in a given string_1e7f2c`` root.Std_k98ojb.Iteration.Filter {}\n        characters_5a3f8c.input -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            characters_5a3f8c.characters -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        characters_5a3f8c.characters -> ``Finds the first repeated character in a given string_1e7f2c``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_5a3f8c.characters -> contains_d42dce.contains\n            current_afd5b1 -> contains_d42dce.input\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``Finds the first repeated character in a given string_1e7f2c``.handler\n        find_6d05b0.item -> result_0\n        ``Finds the first repeated character in a given string_1e7f2c``.output_list -> find_6d05b0.items\n        input_0 -> characters_5a3f8c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_7b9c8f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_1a2d4e root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated character\") ``characters_1a2d4e`` root.Std_k98ojb.Iteration.Find {}\n        input_0 -> characters_1a2d4e.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_7c8f3a root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_7c8f3a.input\n            find_7b9c8f.item -> contains_7c8f3a.contains\n            contains_7c8f3a.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_7b9c8f.predicate\n        characters_1a2d4e.characters -> find_7b9c8f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_7c8f3a root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_7c8f3a.input\n            ``characters_1a2d4e``.item -> contains_7c8f3a.contains\n            contains_7c8f3a.result -> bool_1eb6e9\n        } -> ``first repeated character``.predicate\n        characters_1a2d4e.characters -> ``first repeated character``.items\n        find_7b9c8f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"First repeated character\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"Characters\") characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        input_0 -> characters_3c713b.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            characters_3c713b.characters -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        characters_3c713b.characters -> find_6d05b0.items\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -104, y: 89, name: \"index\") property(Int) index_1e7c6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3f9d5b root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_3f9d5b.items\n            min_3f9d5b.min -> min_1c6e0a\n\n            instance(x: -8, y: 62) ifexpression_7b2c6a root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            index_1e7c6a -> ifexpression_7b2c6a.gen_0\n            getter(x: -41, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n            setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n            getter_9cceb3.value -> min_1c6e0a\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            min_1c6e0a -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            ifexpression_7b2c6a.then -> setter_1cedb2.execute\n            elem_9f6850 -> setter_1cedb2.new_value\n            ifexpression_7b2c6a.else -> setter_37db7f.execute\n            notequal_807ffd.result -> bool_af09a7\n\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -104, y: 44, name: \"index\") property(Int) index_1e7c8a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 309, y: -1) and_7e3c4a root.Std_k98ojb.Logic.And {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> and_7e3c4a.left\n            index_1e7c8a -> and_7e3c4a.right\n            1 -> and_7e3c4a.gen_1\n            and_7e3c4a.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -286, y: -0, name: \"list\") property(List) list_9f6a1e\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1d5c8e root.Std_k98ojb.List.Min {}\n            list_9f6a1e -> min_1d5c8e.items\n            min_1d5c8e.min -> find_6d05b0.predicate.gen_0\n            instance(x: 310, y: 35) greaterthan_3a2d7c root.Std_k98ojb.Math.GreaterThan {}\n            elem_9f6850 -> greaterthan_3a2d7c.left\n            min_1d5c8e.min -> greaterthan_3a2d7c.right\n            greaterthan_3a2d7c.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f6a1e -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -103, y: 44, name: \"index\") property(Int) index_7e8c6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: -1) equal_9a0f7c root.Std_k98ojb.Logic.Equal {}\n            instance(x: 310, y: -71) greaterthan_5e3d4f root.Std_k98ojb.Math.GreaterThan {}\n\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n\n            list_abed4a -> equal_9a0f7c.right\n            elem_9f6850 -> equal_9a0f7c.left\n\n            index_7e8c6a -> greaterthan_5e3d4f.right\n            1 -> greaterthan_5e3d4f.left\n\n            notequal_807ffd.result -> bool_af09a7\n            equal_9a0f7c.result -> bool_af09a7\n            greaterthan_5e3d4f.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -105, y: 112, name: \"index\") property(Int) index_7c1d8a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -15, y: 112, name: \"if\") root.Std_k98ojb.Std.If {\n                input: \"index == 0\"\n            }\n            instance(x: 89, y: 29) modulo_1088d5_2 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd_2 root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            if.then -> notequal_807ffd_2.execute\n            true -> if.input\n            notequal_807ffd.result -> bool_af09a7\n            instance(x: 89, y: 29) min_1c6e4b root.Std_k98ojb.Math.Min {}\n            instance(x: -15, y: 112, name: \"if2\") root.Std_k98ojb.Std.If {\n                input: \"index == 1\"\n            }\n            if.else -> if2.execute\n            false -> if.input\n            min_1c6e4b.result -> bool_af09a7\n            instance(x: -15, y: 112, name: \"if3\") root.Std_k98ojb.Std.If {\n                input: \"index > 1\"\n            }\n            if2.else -> if3.execute\n            false -> if2.input\n            modulo_1088d5_2.result -> notequal_807ffd_2.left\n            min_1c6e4b.right -> modulo_1088d5_2.value\n            2 -> modulo_1088d5_2.divisor\n            elem_9f6850 -> min_1c6e4b.left\n            list_abed4a.firstItem -> min_1c6e4b.right\n            notequal_807ffd_2.result -> bool_af09a7\n            true -> if3.input\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: -32) and_7f9c3a root.Std_k98ojb.Logic.And {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> and_7f9c3a.left\n            instance(x: -113, y: -64) min_1b4e6c root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_1b4e6c.items\n            min_1b4e6c.min -> and_7f9c3a.right\n            and_7f9c3a.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        instance(x: 772, y: -1) find_2e8f5f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_2e8f5f.predicate\n        instance(x: -113, y: -64) list_without_min root.Std_k98ojb.List.Remove {}\n        find_6d05b0.item -> list_without_min.index\n        list_abed4a -> list_without_min.list\n        list_without_min.listWithoutItem -> find_2e8f5f.items\n        find_2e8f5f.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -34, y: 127) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 62, name: \"index\") property(Int) index_ae7c6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -13, y: 94) ifexpression_7e1f2a root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            instance(x: 89, y: 130) and_5c3d9a root.Std_k98ojb.Logic.And {}\n            instance(x: 310, y: 116) notequal_7e1f2b root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 89, y: 154) ifexpression_4a8d0c root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 1\"\n            }\n            instance(x: 310, y: 140) notequal_7e1f2c root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> and_5c3d9a.left\n            ifexpression_7e1f2a.then -> and_5c3d9a.right\n            0 -> ifexpression_7e1f2a.gen_0\n            index_ae7c6a -> ifexpression_7e1f2a.gen_1\n            1 -> notequal_7e1f2b.right\n            index_ae7c6a -> notequal_7e1f2b.left\n            notequal_7e1f2b.result -> and_5c3d9a.continue\n            ifexpression_4a8d0c.then -> bool_af09a7\n            1 -> ifexpression_4a8d0c.gen_0\n            index_ae7c6a -> ifexpression_4a8d0c.gen_1\n            and_5c3d9a.result -> notequal_7e1f2c.left\n            0 -> notequal_7e1f2c.right\n            notequal_7e1f2c.result -> ifexpression_4a8d0c.else\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: -43) and_7f9a1c root.Std_k98ojb.Logic.And {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> and_7f9a1c.left\n            instance(x: -113, y: -43) min_6e3b4f root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_6e3b4f.items\n            min_6e3b4f.min -> and_7f9a1c.right\n            elem_9f6850 -> and_7f9a1c.gen_2\n            and_7f9a1c.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 94, name: \"index\") property(Int) index_ae8c6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1d9b5f root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_1d9b5f.items\n            min_1d9b5f.min -> smallest_ae8c6a\n\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            smallest_ae8c6a -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n\n            instance(x: 310, y: 95) equal_1d4b5f root.Std_k98ojb.Logic.Equal {}\n            index_ae8c6a -> equal_1d4b5f.left\n            0 -> equal_1d4b5f.right\n            equal_1d4b5f.result -> bool_b3a9a7\n\n            instance(x: 310, y: 155) and_2f7e8c root.Std_k98ojb.Logic.And {}\n            notequal_807ffd.result -> and_2f7e8c.left\n            equal_1d4b5f.result -> and_2f7e8c.right\n            and_2f7e8c.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 69, name: \"index\") property(Int) index_7e6d8a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -14, y: 69) ifexpression_9e7c2a root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            instance(x: 89, y: 107) and_1d5f3c root.Std_k98ojb.Logic.And {}\n            instance(x: 310, y: 95) notequal_7e8a4a root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> and_1d5f3c.left\n            ifexpression_9e7c2a.then -> and_1d5f3c.right\n            1 -> notequal_7e8a4a.right\n            index_7e6d8a -> notequal_7e8a4a.left\n            and_1d5f3c.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_7e8f9c root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_ONE_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15999,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -280, y: -91, name: \"list1\") property(List) list1_4a0f9e\n        in(x: -279, y: 39, name: \"list2\") property(List) list2_8c6b5d\n\n        out(x: 554, y: 17, name: \"output\") property(Bool) output_3a1c4d\n\n        instance(x: 0, y: -78) intersection_7e9f4f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 247, y: -77) notempty_5e2b6f root.Std_k98ojb.List.NotEmpty {}\n        list1_4a0f9e -> intersection_7e9f4f.left\n        list2_8c6b5d -> intersection_7e9f4f.right\n        intersection_7e9f4f.intersect -> notempty_5e2b6f.list\n        notempty_5e2b6f.isEmpty -> output_3a1c4d\n    }\n\n    \n\n    instance(x: -71, y: 53) has_common_element_8b0d9f root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -277, y: -85, name: \"list1\") property(List) list1_3f8a9e\n        in(x: -285, y: 30, name: \"list2\") property(List) list2_4b0c7d\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_9a1d4f root.Std_k98ojb.List.NotEmpty {}\n        list1_3f8a9e -> intersection_c7c7e6.left\n        list2_4b0c7d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> notempty_9a1d4f.list\n        notempty_9a1d4f.is_empty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -290, y: -85, name: \"list1\") property(List) list1_3f9b6e\n        in(x: -299, y: 38, name: \"list2\") property(List) list2_7c4a0d\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_1d8a2c root.Std_k98ojb.List.NotEmpty {}\n        list1_3f9b6e -> intersection_c7c7e6.left\n        list2_7c4a0d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_1d8a2c.list\n        notempty_1d8a2c.is_empty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_ac7dfb root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -285, y: -86, name: \"list1\") property(List) list1_3af6ba\n        in(x: -181, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_9d5a1f root.Std_k98ojb.List.NotEmpty {}\n        list1_3af6ba -> intersection_c7c7e6.left\n        list2_c62075 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> notempty_9d5a1f.list\n        notempty_9d5a1f.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -283, y: -86, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -8, y: -53) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_c7097f root.Std_k98ojb.List.NotEmpty {}\n        list1_1f846b -> intersection_4e8c54.left\n        list2_c62075 -> intersection_4e8c54.right\n        intersection_4e8c54.intersect -> notempty_c7097f.list\n        notempty_c7097f.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -283, y: -83, name: \"list1\") property(List) list1_3f9b6e\n        in(x: -285, y: 40, name: \"list2\") property(List) list2_4a8c0d\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_9a8d3f root.Std_k98ojb.List.NotEmpty {}\n        list1_3f9b6e -> intersection_c7c7e6.left\n        list2_4a8c0d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_9a8d3f.list\n        notempty_9a8d3f.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_ac7dfb root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -280, y: -86, name: \"list1\") property(List) list1_2e9b5f\n        in(x: -283, y: 31, name: \"list2\") property(List) list2_8c7d6a\n\n        out(x: 554, y: 4, name: \"output\") property(Bool) output_e3c0ba\n\n        instance(x: 144, y: -97) intersection_c1f5b9 root.Std_k98ojb.Sets.Intersection {}\n        list1_2e9b5f -> intersection_c1f5b9.left\n        list2_8c7d6a -> intersection_c1f5b9.right\n        instance(x: 362, y: -96) notempty_4e3f0c root.Std_k98ojb.List.NotEmpty {}\n        intersection_c1f5b9.intersection -> notempty_4e3f0c.list\n        notempty_4e3f0c.isEmpty -> output_e3c0ba\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_a7d8a6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -280, y: -86, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -8, y: -53) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_f89569 root.Std_k98ojb.List.NotEmpty {}\n        list1_1f846b -> intersection_4e8c54.left\n        list2_c62075 -> intersection_4e8c54.right\n        intersection_4e8c54.intersect -> notempty_f89569.list\n        notempty_f89569.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -273, y: -82, name: \"list1\") property(List) list1_4a0b5f\n        in(x: -285, y: 38, name: \"list2\") property(List) list2_7c8e9d\n\n        out(x: 558, y: 12, name: \"output\") property(Bool) output_3c1b6a\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) greaterthan_1f8a4d root.Std_k98ojb.Math.GreaterThan {}\n        list1_4a0b5f -> intersection_c7c7e6.left\n        list2_7c8e9d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        0 -> greaterthan_1f8a4d.left\n        length_8166b0.length -> greaterthan_1f8a4d.right\n        greaterthan_1f8a4d.result -> output_3c1b6a\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_a7e5f9 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -275, y: -92, name: \"list1\") property(List) list1_3e9f0a\n        in(x: -274, y: 36, name: \"list2\") property(List) list2_7b6c8d\n\n        out(x: 1135, y: 11, name: \"output\") property(Bool) output_4a1c3e\n\n        instance(x: 680, y: -14) intersection_9f0e0c root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1022, y: 12) notempty_5d8b6c root.Std_k98ojb.List.NotEmpty {}\n        list1_3e9f0a -> intersection_9f0e0c.left\n        list2_7b6c8d -> intersection_9f0e0c.right\n        intersection_9f0e0c.intersect -> notempty_5d8b6c.list\n        notempty_5d8b6c.isEmpty -> output_4a1c3e\n    }\n\n    \n\n    instance(x: -240, y: 59) has_common_element_7b2c6f root.main.has_common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -535, y: 3, name: \"list\") property(List) list_2f1a9e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_4b0c6d\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_3e4c93\n\n        instance(x: 752, y: 93) ifexpression_7a1f2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_3d9e8c\") getter_3d9e8c = previous\n        setter(x: 679, y: -313, name: \"setter_7f0b4a\") setter_7f0b4a = previous\n        instance(x: 321, y: -20) for_e1b6a2 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7f0b4a\") setter_d5e8d9 = previous\n        instance(x: -275, y: -35) getat_3c1c6f root.Std_k98ojb.List.GetAt {}\n        ifexpression_7a1f2c.else -> continue_4b0c6d\n        ifexpression_7a1f2c.value -> output_3e4c93\n        ifexpression_7a1f2c.then -> setter_7f0b4a.execute\n        list_2f1a9e -> for_e1b6a2.items\n        for_e1b6a2.item -> ifexpression_7a1f2c.gen_2\n        for_e1b6a2.index -> ifexpression_7a1f2c.gen_0\n        getter_3d9e8c.value -> ifexpression_7a1f2c.gen_1\n        for_e1b6a2.onItem -> ifexpression_7a1f2c.execute\n        for_e1b6a2.done -> continue_4b0c6d\n        for_e1b6a2.item -> setter_7f0b4a.new_value\n        list_2f1a9e -> getat_3c1c6f.list\n        0 -> getat_3c1c6f.index\n        getat_3c1c6f.itemAtIndex -> setter_d5e8d9.new_value\n        continue_4b0c6d -> setter_d5e8d9.continue\n        setter_7f0b4a.continue -> for_e1b6a2.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_3c7d8f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -533, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -489, y: 3, name: \"list\") property(List) list_1a8d5e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_1a8d5e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1a8d5e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_2a5b8 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -569, y: 438, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"output\") property(Bool) output_57c890\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_542a51 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_542a51 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        list_542a51 -> filter_f3b46d.list\n        filter_f3b46d.result -> firstitem_870503.list\n        list_542a51 -> filter_4d4556.list\n        filter_4d4556.result -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) is_consecutive_f21f44 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -505, y: 2, name: \"list\") property(List) list_4f8a3e\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7b6c1d\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_4f8a3e -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_7b6c1d\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_8e9a2f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -529, y: 3, name: \"list\") property(List) list_1f0a2e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_8c6d9b\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_3b4a93\n\n        instance(x: 752, y: 93) ifexpression_7f0e5c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_3a2d8c\") getter_3a2d8c = previous\n        setter(x: 679, y: -313, name: \"setter_9f4b7e\") setter_9f4b7e = previous\n        instance(x: 321, y: -20) for_1b6a0d root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9f4b7e\") setter_3c2b8c = previous\n        instance(x: -275, y: -35) getat_1b6a0d root.Std_k98ojb.List.GetAt {}\n        ifexpression_7f0e5c.else -> continue_8c6d9b\n        ifexpression_7f0e5c.value -> output_3b4a93\n        ifexpression_7f0e5c.then -> setter_9f4b7e.execute\n        list_1f0a2e -> for_1b6a0d.items\n        for_1b6a0d.item -> ifexpression_7f0e5c.gen_2\n        for_1b6a0d.index -> ifexpression_7f0e5c.gen_0\n        getter_3a2d8c.value -> ifexpression_7f0e5c.gen_1\n        for_1b6a0d.onItem -> ifexpression_7f0e5c.execute\n        for_1b6a0d.done -> continue_8c6d9b\n        for_1b6a0d.item -> setter_9f4b7e.new_value\n        list_1f0a2e -> getat_1b6a0d.list\n        0 -> getat_1b6a0d.index\n        getat_1b6a0d.itemAtIndex -> setter_3c2b8c.new_value\n        continue_8c6d9b -> setter_3c2b8c.execute\n        setter_3c2b8c.continue -> for_1b6a0d.reset\n        setter_9f4b7e.continue -> for_1b6a0d.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_5c8f9f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -515, y: 5, name: \"list\") property(List) list_1a8f9e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_3c2b6d\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_4f0a4d\n\n        instance(x: 752, y: 93) ifexpression_7e5c1f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_9d4f1c\") getter_9d4f1c = previous\n        setter(x: 679, y: -313, name: \"setter_b280eb\") setter_b280eb = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e5c1f.else -> continue_3c2b6d\n        ifexpression_7e5c1f.value -> output_4f0a4d\n        ifexpression_7e5c1f.then -> setter_b280eb.execute\n        list_1a8f9e -> for_d26972.items\n        for_d26972.item -> ifexpression_7e5c1f.gen_2\n        for_d26972.index -> ifexpression_7e5c1f.gen_0\n        getter_9d4f1c.value -> ifexpression_7e5c1f.gen_1\n        for_d26972.onItem -> ifexpression_7e5c1f.execute\n        for_d26972.done -> continue_3c2b6d\n        for_d26972.item -> setter_b280eb.new_value\n        list_1a8f9e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        setter_38e107.continue -> for_d26972.reset\n        setter_b280eb.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_7c4d5f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_f3b46d.handler\n        list_3af6ba -> filter_f3b46d.items\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> filter_4d4556.handler\n        list_3af6ba -> filter_4d4556.items\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_7b3b7b.handler\n        filter_f3b46d.result -> filter_7b3b7b.items\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> filter_9d3f5c.handler\n        filter_4d4556.result -> filter_9d3f5c.items\n        instance(x: 1058, y: -203) filter_9d3f5c root.Std_k98ojb.Query.Filter {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> filter_bf6c5d.handler\n        filter_7b3b7b.result -> filter_bf6c5d.items\n        instance(x: -319, y: 358, name: \"Even list\") filter_bf6c5d root.Std_k98ojb.Query.Filter {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> filter_d9f3e6.handler\n        filter_9d3f5c.result -> filter_d9f3e6.items\n        instance(x: -318, y: 521, name: \"Odd list\") filter_d9f3e6 root.Std_k98ojb.Query.Filter {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> filter_f3b46d.handler\n        filter_bf6c5d.result -> filter_f3b46d.items\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521,"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -464, y: 15, name: \"sublist\") property(List) sublist_2a1f8e\n        in(x: -465, y: -220, name: \"list\") property(List) list_5b3c4d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: 321, y: -20, name: \"for_d26972\") for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_5b3c4d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        sublist_2a1f8e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 20, name: \"list1\") property(List) list1_3f8b9a\n        in(x: -285, y: -135, name: \"list2\") property(List) list2_5c6e7d\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list1_3f8b9a -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list2_5c6e7d -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        list1_3f8b9a -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -375, y: 0, name: \"list1\") property(List) list1_3e8f6b\n        in(x: -378, y: 168, name: \"list2\") property(List) list2_7a5c4d\n\n        out(x: 1029, y: 87, name: \"output\") property(Bool) output_0f1c3e\n\n        instance(x: -147, y: 91, name: \"length of list2\") length_8b6a7d root.Std_k98ojb.List.Length {}\n        instance(x: 445, y: 88) contains_5a9f4f root.Std_k98ojb.List.Contains {}\n        instance(x: -146, y: -3, name: \"slice list1\") slice_2c0e7d root.Std_k98ojb.List.Slice {}\n        instance(x: 444, y: -6) equal_8a9f4f root.Std_k98ojb.Logic.Equal {}\n        length_8b6a7d.list -> slice_2c0e7d.list\n        list1_3e8f6b -> contains_5a9f4f.list\n        func() {\n            in(x: -31, y: 50, name: \"index\") property(Number) index_0a5c4d\n\n            out(x: 704, y: 49, name: \"output\") property(List) output_3e8f6b\n\n            instance(x: 226, y: 56) add_7a5c4d root.Std_k98ojb.List.Add {}\n            instance(x: 463, y: 51) generateRange_0f1c3e root.Std_k98ojb.List.GenerateRange {}\n            index_0a5c4d -> add_7a5c4d.index\n            list2_7a5c4d -> add_7a5c4d.item\n            generateRange_0f1c3e.to -> add_7a5c4d.listWithItem\n            0 -> generateRange_0f1c3e.from\n            length_8b6a7d.length -> generateRange_0f1c3e.to\n            add_7a5c4d.listWithItem -> output_3e8f6b\n        } -> slice_2c0e7d.start\n        index_0a5c4d -> contains_5a9f4f.index\n        list2_7a5c4d -> contains_5a9f4f.item\n        slice_2c0e7d.slice -> equal_8a9f4f.left\n        list2_7a5c4d -> equal_8a9f4f.right\n        equal_8a9f4f.result -> output_0f1c3e\n    }\n\n    \n\n    instance(x: -64, y: 20) is_sublist_6b5c4d root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -427, y: 0, name: \"list1\") property(List) list1_2a9f6b\n        in(x: -428, y: 170, name: \"list2\") property(List) list2_7c3d5e\n\n        out(x: 1074, y: 95, name: \"output\") property(Bool) output_8b1e0a\n\n        instance(x: -201, y: 96, name: \"length of list2\") length_6f9f81 root.Std_k98ojb.List.Length {}\n        instance(x: 250, y: 95) contains_5d3c4f root.Std_k98ojb.List.Contains {}\n        instance(x: -201, y: -12, name: \"slice of list1\") slice_f7a9e6 root.Std_k98ojb.List.Slice {}\n        instance(x: 250, y: -13) equal_2d3c5f root.Std_k98ojb.Logic.Equal {}\n        func() {\n            in(x: -30, y: -25, name: \"index\") property(Number) index_7a9e4b\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_8c5f6d\n\n            instance(x: 226, y: 56) add_3c76d2 root.Std_k98ojb.List.Add {}\n            instance(x: 463, y: 51) sub_7836b4 root.Std_k98ojb.Math.Sub {}\n            index_7a9e4b -> sub_7836b4.first\n            length_6f9f81.length -> sub_7836b4.second\n            list1_2a9f6b -> add_3c76d2.list\n            sub_7836b4.result -> add_3c76d2.index\n            add_3c76d2.listWithItem -> output_8c5f6d\n        } -> slice_f7a9e6.start\n        0 -> slice_f7a9e6.end\n        list1_2a9f6b -> slice_f7a9e6.list\n        func() {\n            in(x: -30, y: -25, name: \"index\") property(Number) index_5c4d8b\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_1f3e7a\n\n            instance(x: 226, y: 56) add_6c76d2 root.Std_k98ojb.List.Add {}\n            instance(x: 463, y: 51) sub_2836b4 root.Std_k98ojb.Math.Sub {}\n            index_5c4d8b -> sub_2836b4.first\n            length_6f9f81.length -> sub_2836b4.second\n            list1_2a9f6b -> add_6c76d2.list\n            sub_2836b4.result -> add_6c76d2.index\n            add_6c76d2.listWithItem -> output_1f3e7a\n        } -> slice_f7a9e6.end\n        slice_f7a9e6.slicedList -> contains_5d3c4f.list\n        list2_7c3d5e -> contains_5d3c4f.item\n        contains_5d3c4f.is_contained -> equal_2d3c5f.left\n        true -> equal_2d3c5f.right\n        equal_2d3c5f.result -> output_8b1e0a\n    }\n\n    \n\n    instance(x: -69, y: 30) is_sublist_7c4db6 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 5, name: \"list1\") property(List) list1_2a3b6f\n        in(x: -467, y: 145, name: \"list2\") property(List) list2_8c9e0d\n\n        out(x: 1227, y: 130, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_5bbcd7\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list2_8c9e0d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_5bbcd7\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_2a3b6f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -475, y: 0, name: \"sublist\") property(List) sublist_1e8f5b\n        in(x: -476, y: 142, name: \"list\") property(List) list_3a7c2d\n\n        out(x: 1269, y: 95, name: \"output\") property(Bool) output_6e0f4f\n\n        instance(x: -305, y: 92, name: \"length of sublist\") length_1b8b5f root.Std_k98ojb.List.Length {}\n        instance(x: 847, y: 95) contains_7a9c3d root.Std_k98ojb.List.Contains {}\n        instance(x: -305, y: 0, name: \"length of list\") length_1e6b5f root.Std_k98ojb.List.Length {}\n        instance(x: 246, y: 92) map_4a9c3d root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_efbc78\n\n            instance(x: 226, y: 56) slice_7c6d2b root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) add_7836b4 root.Std_k98ojb.List.Add {}\n            _index_769593 -> slice_7c6d2b.start\n            length_1e6b5f.length -> slice_7c6d2b.end\n            list_3a7c2d -> slice_7c6d2b.list\n            sublist_1e8f5b -> add_7836b4.item\n            slice_7c6d2b.slice -> add_7836b4.list\n            add_7836b4.listWithItem -> output_efbc78\n        } -> map_4a9c3d.handler\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            length_1b8b5f.length -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_4a9c3d.index_handler\n        length_1e6b5f.length -> map_4a9c3d.from\n        0 -> map_4a9c3d.to\n        map_4a9c3d.output_list -> contains_7a9c3d.list\n        sublist_1e8f5b -> contains_7a9c3d.item\n        contains_7a9c3d.is_contained -> output_6e0f4f\n    }\n\n    \n\n    instance(x: -293, y: 59) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -420, y: 15, name: \"list1\") property(List) list1_5e9b2f\n        in(x: -425, y: -164, name: \"list2\") property(List) list2_8c7d6a\n\n        out(x: 1070, y: -145, name: \"output\") property(Bool) output_4e1c3d\n\n        instance(x: -244, y: -150, name: \"length of list2\") length_9b5f4f root.Std_k98ojb.List.Length {}\n        instance(x: 250, y: -145) contains_7a6a8f root.Std_k98ojb.List.Contains {}\n        instance(x: 650, y: -144) slice_f0e3d1 root.Std_k98ojb.List.Slice {}\n        list2_8c7d6a -> length_9b5f4f.list\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_efbc78\n\n            instance(x: 226, y: 56) add_1f3c6a root.Std_k98ojb.List.Add {}\n            instance(x: 463, y: 51) mul_2e8d4f root.Std_k98ojb.Math.Mul {}\n            _index_170471 -> mul_2e8d4f.second\n            1 -> mul_2e8d4f.first\n            mul_2e8d4f.result -> add_1f3c6a.index\n            list1_5e9b2f -> add_1f3c6a.list\n            add_1f3c6a.listWithItem -> output_efbc78\n        } -> slice_f0e3d1.start\n        length_9b5f4f.length -> slice_f0e3d1.end\n        list1_5e9b2f -> slice_f0e3d1.list\n        slice_f0e3d1.slice -> contains_7a6a8f.list\n        list2_8c7d6a -> contains_7a6a8f.item\n        contains_7a6a8f.is_contained -> output_4e1c3d\n    }\n\n    \n\n    instance(x: -68, y: 60) is_sublist_9b5f4f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -375, y: 20, name: \"list1\") property(List) list1_2e8f5b\n        in(x: -376, y: -170, name: \"list2\") property(List) list2_7a3c0d\n\n        out(x: 1056, y: -55, name: \"output\") property(Bool) output_4b1b9e\n\n        instance(x: -154, y: -56, name: \"length of list2\") length_5f8b2c root.Std_k98ojb.List.Length {}\n        instance(x: 488, y: -55) contains_6a3d0f root.Std_k98ojb.List.Contains {}\n        instance(x: 750, y: -56) not_7e4b1f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) list1_2e8f5b\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            list1_2e8f5b -> contains_6a3d0f.list\n            length_5f8b2c.length -> modulo_c76d2b.value\n            _index_769593 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_6a3d0f.item\n        list1_2e8f5b -> length_5f8b2c.list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            length_5f8b2c.length -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_6a3d0f.handler\n        list2_7a3c0d -> contains_6a3d0f.item\n        not_7e4b1f.input -> contains_6a3d0f.is_contained\n        not_7e4b1f.result -> output_4b1b9e\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 5, name: \"sublist\") property(List) sublist_3d0a6f\n        in(x: -283, y: -165, name: \"list\") property(List) list_1b8e7c\n\n        out(x: 557, y: -160, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -155) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 146, y: -154) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -153) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        sublist_3d0a6f -> contains_32727d.item\n        list_1b8e7c -> contains_32727d.list\n        contains_32727d.is_contained -> length_8166b0.list\n        0 -> equal_f89569.right\n        length_8166b0.length -> equal_f89569.left\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 5, name: \"sublist\") property(List) sublist_2a3f8d\n        in(x: -284, y: 146, name: \"list\") property(List) list_7e6b9c\n\n        out(x: 557, y: 139, name: \"output\") property(Bool) output_5e4b0e\n\n        instance(x: -92, y: 138) contains_1a2d3f root.Std_k98ojb.List.Contains {}\n        instance(x: 146, y: 137) length_9c8b7e root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 136) greaterthan_5f6b4d root.Std_k98ojb.Math.GreaterThan {}\n        sublist_2a3f8d -> contains_1a2d3f.list\n        list_7e6b9c -> contains_1a2d3f.item\n        length_9c8b7e.list -> greaterthan_5f6b4d.left\n        contains_1a2d3f.index + sublist_2a3f8d.length - 1 -> greaterthan_5f6b4d.right\n        greaterthan_5f6b4d.result -> output_5e4b0e\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_7c9dfb root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_3e8f9a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c4b6d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 29, name: \"index\") property(Number) index_8c3e1a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_4b0f5d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_8c3e1a -> add_4b0f5d.first\n            1 -> add_4b0f5d.second\n            elem_9f6850 -> notequal_807ffd.left\n            add_4b0f5d.result -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3e8f9a -> find_6d05b0.items\n        find_6d05b0.index -> missing_7c4b6d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 35, name: \"index\") property(Number) index_7c3d4a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_1e8b5f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            sub_1e8b5f.result -> notequal_807ffd.left\n            index_7c3d4a -> sub_1e8b5f.first\n            elem_9f6850 -> sub_1e8b5f.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        find_6d05b0.index + 1 -> number_f9110a\n        find_6d05b0.item -> number_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -112, y: 35, name: \"index\") property(Number) index_ae3c7a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_2b8f0d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_ae3c7a -> add_2b8f0d.first\n            1 -> add_2b8f05.second\n            add_2b8f0d.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        find_6d05b0.index -> number_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1f3b8a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_2c9d7e\n\n        instance(x: 0, y: 0) find_5f4b6a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_8f3c1d\n            in(x: -111, y: 29, name: \"index\") property(Number) index_7a9e2b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_ae09b7\n\n            instance(x: 89, y: 29) sub_1d8f5c root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_9a0ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_9a0ffd.right\n            sub_1d8f5c.result -> notequal_9a0ffd.left\n            index_7a9e2b -> sub_1d8f5c.first\n            elem_8f3c1d -> sub_1d8f5c.second\n            notequal_9a0ffd.result -> bool_ae09b7\n        } -> find_6d05b0.predicate\n        list_1f3b8a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.index_predicate\n        list_1f3b8a -> find_6d05b0.index_items\n        find_6d05b0.item -> number_2c9d7e\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_4c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -112, y: 2, name: \"index\") property(Number) index_7c8e3a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_5b1f9d root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            sub_5b1f9d.result -> notequal_807ffd.left\n            index_7c8e3a -> sub_5b1f9d.first\n            elem_9f6850 -> sub_5b1f9d.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_7c8e3a\n\n            instance(x: 89, y: 29) list_getat_1d4b5c root.Std_k98ojb.List.GetAt {}\n            instance(x: 310, y: 35) add_9f2c6c root.Std_k98ojb.Math.Add {}\n            elem_9f6850 -> list_getat_1d4b5c.index\n            list_9f7759 -> list_getat_1d4b5c.list\n            0 -> add_9f2c6c.first\n            list_getat_1d4b5c.item -> add_9f2c6c.second\n            add_9f2c6c.result -> index_7c8e3a\n        } -> find_6d05b0.index_handler\n        find_6d05b0.item -> missing_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a9f1e\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_7b4c8d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 29, name: \"index\") property(Number) index_8c7d4e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_8c7d4e -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3a9f1e -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_8c7d4e\n\n            instance(x: 89, y: 29) minus_2a5b6f root.Std_k98ojb.Math.Sub {}\n            elem_9f6850 -> minus_2a5b6f.first\n            1 -> minus_2a5b6f.second\n            minus_2a5b6f.result -> index_8c7d4e\n        } -> find_6d05b0.index_handler\n        find_6d05b0.item -> number_7b4c8d\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9e8f4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -116, y: -11, name: \"index\") property(Number) index_1c7e6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -12, y: -11) add_9a3c6f root.Std_k98ojb.Math.Add {}\n            index_1c7e6a -> add_9a3c6f.first\n            1 -> add_9a3c6f.second\n            add_9a3c6f.result -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.right -> modulo_1088d5.result\n            modulo_1088d5.result -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9e8f4a -> find_6d05b0.items\n        find_6d05b0.index -> index_1c7e6a\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -112, y: 35, name: \"index\") property(Number) index_1c7d5e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 311, y: 36) add_2c9f0e root.Std_k98ojb.Math.Add {}\n            1 -> add_2c9f0e.second\n            index_1c7d5e -> add_2c9f0e.first\n            add_2c9f0e.result -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        find_6d05b0.index -> number_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1a8d6f\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c2b5e\n\n        instance(x: 0, y: 0) find_9c3b4f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1a8d6f\n            in(x: -111, y: 35, name: \"index\") property(Number) index_7c2b5e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9c3b4f\n\n            instance(x: 89, y: 29) add_1a8d6f root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_7c2b5e root.Std_k98ojb.Logic.NotEqual {}\n            index_7c2b5e -> add_1a8d6f.first\n            1 -> add_1a8d6f.second\n            elem_1a8d6f -> notequal_7c2b5e.left\n            add_1a8d6f.result -> notequal_7c2b5e.right\n            notequal_7c2b5e.result -> bool_9c3b4f\n        } -> find_9c3b4f.predicate\n        list_1a8d6f -> find_9c3b4f.items\n        index_7c2b5e -> find_9c3b4f.indexes\n        find_9c3b4f.item -> missing_7c2b5e\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1a8d6f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1a3f8e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_9c6d5b\n\n        instance(x: 0, y: 0) find_7a2f4a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_3e8c9d\n            in(x: -110, y: 36, name: \"index\") property(Number) index_7f1a5b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_4c6a2b\n\n            instance(x: 89, y: 29) sub_3d8e9b root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_1f5b7c root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_1f5b7c.right\n            sub_3d8e9b.result -> notequal_1f5b7c.left\n            index_7f1a5b -> sub_3d8e9b.first\n            elem_3e8c9d -> sub_3d8e9b.second\n            notequal_1f5b7c.result -> bool_4c6a2b\n        } -> find_7a2f4a.predicate\n        list_1a3f8e -> find_7a2f4a.items\n        find_7a2f4a.index + 1 -> missing_9c6d5b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -124, y: 0, name: \"input\") property(String) input_9f8a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1c6b4e\n\n        instance(x: 0, y: 1) replace_7f5a3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9d8b2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6e4c1e root.Std_k98ojb.Strings.Replace {}\n        input_9f8a3d -> replace_7f5a3c.input\n        \" \" -> replace_7f5a3c.search\n        \":\" -> replace_7f5a3c.replace\n        replace_7f5a3c.output -> replace_9d8b2f.input\n        \",\" -> replace_9d8b2f.search\n        \":\" -> replace_9d8b2f.replace\n        replace_9d8b2f.output -> replace_6e4c1e.input\n        \".\" -> replace_6e4c1e.search\n        \":\" -> replace_6e4c1e.replace\n        replace_6e4c1e.output -> output_1c6b4e\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -150, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_5c8d7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9e4a3f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6e1b7f root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_5c8d7f.input\n        \" \" -> replace_5c8d7f.search\n        \":\" -> replace_5c8d7f.replace\n        replace_5c8d7f.output -> replace_9e4a3f.input\n        \",\" -> replace_9e4a3f.search\n        \":\" -> replace_9e4a3f.replace\n        replace_9e4a3f.output -> replace_6e1b7f.input\n        \".\" -> replace_6e1b7f.search\n        \":\" -> replace_6e1b7f.replace\n        replace_6e1b7f.output -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -156, y: 0, name: \"input\") property(String) input_1f2b8a\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_3e4d9c\n\n        instance(x: 221, y: 0) replace_5a6b7a root.Std_k98ojb.Strings.Replace {}\n        input_1f2b8a -> replace_5a6b7a.input\n        \" ,.\" -> replace_5a6b7a.search\n        \":\" -> replace_5a6b7a.replace\n        replace_5a6b7a.output -> output_3e4d9c\n    }\n\n    \n\n    instance(x: 101, y: -67) replace_spaces_commas_dots_1f2b8a root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"input\") property(String) input_2f1a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4e7b8c\n\n        instance(x: 0, y: 1) replace_9e6c5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a0d2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_7c8b4a root.Std_k98ojb.Strings.Replace {}\n        input_2f1a3d -> replace_9e6c5c.input\n        \" \" -> replace_9e6c5c.search\n        \":\" -> replace_9e6c5c.replace\n        replace_9e6c5c.output -> replace_3a0d2f.input\n        \",\" -> replace_3a0d2f.search\n        \":\" -> replace_3a0d2f.replace\n        replace_3a0d2f.output -> replace_7c8b4a.input\n        \".\" -> replace_7c8b4a.search\n        \":\" -> replace_7c8b4a.replace\n        replace_7c8b4a.output -> output_4e7b8c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"input\") property(String) input_1f2d6a\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_3c7b5e\n\n        instance(x: 221, y: 0) replace_9e8f4c root.Std_k98ojb.Strings.Replace {}\n        input_1f2d6a -> replace_9e8f4c.input\n        \" ,.\" -> replace_9e8f4c.search\n        \":\" -> replace_9e8f4c.replace\n        replace_9e8f4c.output -> output_3c7b5e\n    }\n\n    \n\n    instance(x: 101, y: -67) replace_chars_aad0c2 root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -172, y: 0, name: \"input\") property(String) input_1a8f6e\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_5b9c7d\n\n        instance(x: 221, y: -48) replace_3b4d0f root.Std_k98ojb.Strings.Replace {}\n        input_1a8f6e -> replace_3b4d0f.input\n        \" \" -> replace_3b4d0f.search\n        \":\" -> replace_3b4d0f.replace\n        instance(x: 221, y: -120) replace_7c9d5f root.Std_k98ojb.Strings.Replace {}\n        replace_3b4d0f.output -> replace_7c9d5f.input\n        \",\" -> replace_7c9d5f.search\n        \":\" -> replace_7c9d5f.replace\n        instance(x: 221, y: -192) replace_d8a6e2 root.Std_k98ojb.Strings.Replace {}\n        replace_7c9d5f.output -> replace_d8a6e2.input\n        \".\" -> replace_d8a6e2.search\n        \":\" -> replace_d8a6e2.replace\n        replace_d8a6e2.output -> output_5b9c7d\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_spaces_commas_dots_aad0c2 root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -149, y: 0, name: \"input\") property(String) input_2a1d9f\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_3e8c4b\n\n        instance(x: 0, y: 1) replace_5e6d7c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9f5a1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_8b4d3f root.Std_k98ojb.Strings.Replace {}\n        input_2a1d9f -> replace_5e6d7c.input\n        \" \" -> replace_5e6d7c.search\n        \":\" -> replace_5e6d7c.replace\n        replace_5e6d7c.output -> replace_9f5a1f.input\n        \",\" -> replace_9f5a1f.search\n        \":\" -> replace_9f5a1f.replace\n        replace_9f5a1f.output -> replace_8b4d3f.input\n        \".\" -> replace_8b4d3f.search\n        \":\" -> replace_8b4d3f.replace\n        replace_8b4d3f.output -> output_3e8c4b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -150, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_3c8d9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7a4e6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_5c0c1f root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_3c8d9f.input\n        \" \" -> replace_3c8d9f.search\n        \":\" -> replace_3c8d9f.replace\n        replace_3c8d9f.output -> replace_7a4e6f.input\n        \",\" -> replace_7a4e6f.search\n        \":\" -> replace_7a4e6f.replace\n        replace_7a4e6f.output -> replace_5c0c1f.input\n        \".\" -> replace_5c0c1f.search\n        \":\" -> replace_5c0c1f.replace\n        replace_5c0c1f.output -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -172, y: 0, name: \"input\") property(String) input_2f8d6a\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1c3e9b\n\n        instance(x: 221, y: -48, name: \"replace_chars\") replace_0f7f5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_2a8d6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: -49) replace_1e4c3e root.Std_k98ojb.Strings.Replace {}\n        input_2f8d6a -> replace_chars.input\n        \" \" -> replace_chars.search\n        \":\" -> replace_chars.replace\n        replace_chars.output -> replace_2a8d6f.input\n        \",\" -> replace_2a8d6f.search\n        \":\" -> replace_2a8d6f.replace\n        replace_2a8d6f.output -> replace_1e4c3e.input\n        \".\" -> replace_1e4c3e.search\n        \":\" -> replace_1e4c3e.replace\n        replace_1e4c3e.output -> output_1c3e9b\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_chars_2a8d6f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"input\") property(String) input_2f1a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_7c9e6b\n\n        instance(x: 0, y: 1) replace_5a4c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3d5b2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_7e9b6c root.Std_k98ojb.Strings.Replace {}\n        input_2f1a3d -> replace_5a4c8f.input\n        \" \" -> replace_5a4c8f.search\n        \":\" -> replace_5a4c8f.replace\n        replace_5a4c8f.output -> replace_3d5b2f.input\n        \",\" -> replace_3d5b2f.search\n        \":\" -> replace_3d5b2f.replace\n        replace_3d5b2f.output -> replace_7e9b6c.input\n        \".\" -> replace_7e9b6c.search\n        \":\" -> replace_7e9b6c.replace\n        replace_7e9b6c.output -> output_7c9e6b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_1d8f3a root.main.replace_chars {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -305, y: 17, name: \"input\") property(String) input_8f1e9d\n\n        out(x: 1055, y: 23, name: \"output\") property(Bool) output_7c0a6b\n\n        instance(x: -141, y: 18, name: \"characters\") characters_d3d2ec root.Std_k98ojb.Strings.Characters {}\n        instance(x: 226, y: 22) filter_8e1f9f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 532, y: 23) length_7a6c5c root.Std_k98ojb.List.Length {}\n        instance(x: 747, y: 24) equal_4d2b3c root.Std_k98ojb.Logic.Equal {}\n        characters_d3d2ec.input -> filter_8e1f9f.items\n        func() {\n            in(x: -28, y: 41, name: \"current\") property(String) current_7a6b0c\n\n            out(x: 384, y: 43, name: \"output\") property(Bool) output_4d5e3c\n\n            instance(x: 152, y: 44) equal_9f1c2c root.Std_k98ojb.Logic.Equal {}\n            current_7a6b0c -> equal_9f1c2c.left\n            characters_d3d2ec.characters[0] -> equal_9f1c2c.right\n            equal_9f1c2c.result -> output_4d5e3c\n        } -> filter_8e1f9f.handler\n        length_7a6c5c.length -> equal_4d2b3c.left\n        1 -> equal_4d2b3c.right\n        filter_8e1f9f.output_list -> length_7a6c5c.list\n        equal_4d2b3c.result -> output_7c0a6b\n    }\n\n    \n\n    instance(x: -55, y: 111) is_same_1f6f4 root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -297, y: 5, name: \"input\") property(String) input_9a8d1f\n\n        out(x: 1223, y: 4, name: \"output\") property(Bool) output_6c0b7e\n        out(x: 1212, y: 127, name: \"continue\") trigger() continue_5a9b9f\n\n        instance(x: -95, y: 12) characters_8d1e3c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 147, y: 13) filter_6f7c2f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 360, y: 14) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 574, y: -1) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_5a9b9f\n        ifexpression_875761.value -> output_6c0b7e\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        characters_8d1e3c.characters -> filter_6f7c2f.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_f89569.left\n            characters_8d1e3c.characters[0] -> equal_f89569.right\n            equal_f89569.result -> out_d0fd24\n        } -> filter_6f7c2f.handler\n        filter_6f7c2f.output_list -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_5a96db6\n        filter_6f7c2f.output_list -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> equal_f89569.left\n        true -> equal_f89569.right\n        equal_f89569.result -> output_6c0b7e\n        for_d26972.item -> setter_9d4f1c.new_value\n        filter_6f7c2f.output_list -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        input_9a8d1f -> characters_8d1e3c.input\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_same_fc79d5 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -296, y: 30, name: \"input\") property(String) input_9a8f6e\n\n        out(x: 1005, y: 40, name: \"output\") property(Bool) output_3c1d4b\n\n        instance(x: -147, y: 31) characters_2f7c0c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 346, y: 39) filter_8a5e9f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 647, y: 38) length_1d4f6c root.Std_k98ojb.List.Length {}\n        instance(x: 850, y: 37) equal_f3b7ee root.Std_k98ojb.Logic.Equal {}\n        characters_2f7c0c.characters -> filter_8a5e9f.items\n        func() {\n            in(x: -30, y: 46, name: \"current\") property(String) current_1d4f6c\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_2e8b9a root.Std_k98ojb.Logic.Equal {}\n            current_1d4f6c -> equal_2e8b9a.left\n            characters_2f7c0c.characters[0] -> equal_2e8b9a.right\n            equal_2e8b9a.result -> out_d0fd24\n        } -> filter_8a5e9f.handler\n        length_1d4f6c.length -> equal_f3b7ee.left\n        filter_8a5e9f.output_list -> length_1d4f6c.list\n        characters_2f9d09.characters -> equal_f3b7ee.right\n        equal_f3b7ee.result -> output_3c1d4b\n    }\n\n    \n\n    instance(x: -63, y: 110) check_same_8a5e9f root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -285, y: 20, name: \"input\") property(String) input_1a9f0e\n\n        out(x: 557, y: 5, name: \"output\") property(Bool) output_7b2d8c\n\n        instance(x: -92, y: 30) characters_c3e4ef root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 35) length_6a9f0f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 40) lessthanorequal_8c1d5e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 574, y: -15) getat_7a4b9f root.Std_k98ojb.List.GetAt {}\n        instance(x: 834, y: 10) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1058, y: -5) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1272, y: 0) length_6a9f0f_1 root.Std_k98ojb.List.Length {}\n        instance(x: 1496, y: 5) equal_f89569_1 root.Std_k98ojb.Logic.Equal {}\n        characters_c3e4ef.characters -> getat_7a4b9f.list\n        input_1a9f0e -> getat_7a4b9f.index\n        length_6a9f0f.length -> lessthanorequal_8c1d5e.right\n        1 -> lessthanorequal_8c1d5e.left\n        lessthanorequal_8c1d5e.result -> filter_c91965.predicate\n        getat_7a4b9f.itemAtIndex -> equal_f89569.left\n        input_1a9f0e -> equal_f89569.right\n        equal_f89569.result -> filter_c91965.items\n        func() {\n            in(x: -30, y: 46, name: \"current\") property(Any) current_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            1 -> mul_2f9d09.first\n            current_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> length_6a9f0f_1.list\n        length_6a9f0f_1.length -> equal_f89569_1.left\n        1 -> equal_f89569_1.right\n        equal_f89569_1.result -> output_7b2d8c\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -316, y: 10, name: \"input\") property(String) input_9a1e5f\n\n        out(x: 1073, y: 12, name: \"output\") property(Bool) output_eb0d4c\n\n        instance(x: -131, y: 11) characters_7f6b2f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 403, y: 13) filter_1e3a8c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 700, y: 12) length_5d9a4f root.Std_k98ojb.List.Length {}\n        instance(x: 922, y: 11) equal_7f6c2f root.Std_k98ojb.Logic.Equal {}\n        characters_7f6b2f.input -> filter_1e3a8c.items\n        func() {\n            in(x: -22, y: 26, name: \"current\") property(String) current_5d0b9f\n\n            out(x: 488, y: 28, name: \"output\") property(Bool) output_7f6e2a\n\n            instance(x: 226, y: 27) equal_8c4c1f root.Std_k98ojb.Logic.Equal {}\n            current_5d0b9f -> equal_8c4c1f.left\n            characters_7f6b2f.characters[0] -> equal_8c4c1f.right\n            equal_8c4c1f.result -> output_7f6e2a\n        } -> filter_1e3a8c.handler\n        length_5d9a4f.list -> equal_7f6c2f.left\n        filter_1e3a8c.output_list -> length_5d9a4f.list\n        1 -> equal_7f6c2f.right\n        equal_7f6c2f.result -> output_eb0d4c\n    }\n\n    \n\n    instance(x: -99, y: -93) is_same_8e3c1f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -294, y: 155, name: \"string\") property(String) string_0d3f1e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 0, y: 0, name: \"characters\") characters_1a8d5c = string_0d3f1e\n        instance(x: -82, y: 155) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 201, y: 62) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        length_6e87f2.length -> lessthanorequal_f11fda.right\n        0 -> lessthanorequal_f11fda.left\n        lessthanorequal_f11fda.result -> equal_f89569.predicate\n        getat_ce2a48.itemAtIndex -> equal_f89569.left\n        characters_1a8d5c.characters -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        string_0d3f1e -> characters_1a8d5c.input\n        length_6e87f2.length -> getat_ce2a48.index\n        equal_f89569.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) check_same_15f9e9 root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -277, y: 0, name: \"input\") property(String) input_8e9a3f\n\n        out(x: 1006, y: 5, name: \"output\") property(Bool) output_1b4c2d\n\n        instance(x: -99, y: 14) characters_7a0ebe root.Std_k98ojb.Strings.Characters {}\n        instance(x: 287, y: 12) filter_8f9b3f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 577, y: 11) length_6d1c5f root.Std_k98ojb.List.Length {}\n        instance(x: 787, y: 10) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        input_8e9a3f -> characters_7a0ebe.input\n        func() {\n            in(x: -31, y: 46, name: \"current\") property(String) current_1d4c5e\n\n            out(x: 450, y: 49, name: \"output\") property(Bool) output_8f7a9b\n\n            instance(x: 225, y: 51) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            current_1d4c5e -> equal_f89569.left\n            characters_7a0ebe.characters[0] -> equal_f89569.right\n            equal_f89569.result -> output_8f7a9b\n        } -> filter_8f9b3f.handler\n        characters_7a0ebe.characters -> filter_8f9b3f.items\n        length_6d1c5f.length -> equal_f89569.left\n        filter_8f9b3f.output_list -> length_6d1c5f.list\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_1b4c2d\n    }\n\n    \n\n    instance(x: -56, y: -177) is_same_7e8a9c root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -333, y: 10, name: \"input\") property(String) input_9e3f8d\n\n        out(x: 1056, y: 5, name: \"output\") property(Bool) output_7a4b1c\n\n        instance(x: -177, y: 11) characters_0a2c5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 296, y: 6) filter_9f8e3d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 621, y: -1) length_4b7c8c root.Std_k98ojb.List.Length {}\n        instance(x: 840, y: 5) equal_2a0b6f root.Std_k98ojb.Logic.Equal {}\n        characters_0a2c5c.characters -> filter_9f8e3d.items\n        func() {\n            in(x: -20, y: 44, name: \"current\") property(String) current_7c4b1f\n\n            out(x: 472, y: 19, name: \"output\") property(Bool) output_2a0b6f\n\n            instance(x: 176, y: 26) equal_8e9d5f root.Std_k98ojb.Logic.Equal {}\n            current_7c4b1f -> equal_8e9d5f.left\n            characters_0a2a5c.characters[0] -> equal_8e9d5f.right\n            equal_8e9d5f.result -> output_2a0b6f\n        } -> filter_9f8e3d.handler\n        length_4b7c8c.list -> equal_2a0b6f.left\n        filter_9f8e3d.output_list -> length_4b7c8c.list\n        1 -> equal_2a0b6f.right\n        equal_2a0b6f.result -> output_7a4b1c\n    }\n\n    \n\n    instance(x: -111, y: 57) check_same_5e3d9f root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -294, y: 155, name: \"string\") property(String) string_1a8e5f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) uniquelist_9c4a3f root.Std_k98ojb.List.Unique {}\n        instance(x: 410, y: 63) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        string_1a8e5f -> length_6e87f2.list\n        string_1a8e5f -> uniquelist_9c4a3f.list\n        length_6e87f2.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        uniquelist_9c4a3f.unique_list -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) is_same_15f9e9 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -290, y: 12, name: \"input\") property(String) input_1a9f2e\n\n        out(x: 1056, y: 17, name: \"output\") property(Bool) output_8c7b0d\n\n        instance(x: -82, y: 11) characters_5e4c3f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 201, y: 16) intersection_c6a2ed root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 436, y: 15) length_7d8b1c root.Std_k98ojb.List.Length {}\n        instance(x: 649, y: 14) equal_f9f3e4 root.Std_k98ojb.Logic.Equal {}\n        input_1a9f2e -> characters_5e4c3f.input\n        characters_5e4c3f.characters -> intersection_c6a2ed.left\n        characters_5e4c3f.characters -> intersection_c6a2ed.right\n        length_7d8b1c.length -> equal_f9f3e4.left\n        1 -> equal_f9f3e4.right\n        intersection_c6a2ed.intersect -> length_7d8b1c.list\n        equal_f9f3e4.result -> output_8c7b0d\n    }\n\n    \n\n    instance(x: -64, y: 124) is_same_5c6b8f root.main.is_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 80, y: 0) count_digits_2 root.main.count_digits {}\n        instance(x: 240, y: 0) filter_1 root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_1.items\n        instance(x: 440, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_1.output_list -> list_length_node.list\n        list_length_node.length -> output_ai\n    }\n\n    \n    instance(x: -40, y: 0) count_digits_1 root.main.count_digits {}\n\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -1, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.isNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: -1) count_node root.Std_k98ojb.Count {}\n        filter_7b3b7b.result -> count_node.items\n        count_node.count -> output_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -25, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.isNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: -25) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.items\n        list_length_node.length -> output_ai\n    }\n    \n\n    instance(x: 426, y: -303) count_digits_node root.main.count_digits {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: 0) iteration_filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        characters_node.characters -> iteration_filter_node.items\n        iteration_filter_node.output_list -> count_digits_2.input_list\n        is_numeric_node.value -> count_digits_2.predicate\n        count_digits_2.output_count -> output_ai\n\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_1 root.main.count_digits {}\n\n    \n\n    func(doc: \"count the number of items in a list.\") count_items {\n        in(x: -426, y: -248, name: \"input_list\") property(List) input_list_ai\n        in(x: -426, y: -323, name: \"predicate\") property(Function) predicate_ai\n        out(x: 159, y: -219, name: \"output_count\") property(Number) output_count_ai\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Count {}\n        instance(x: 0, y: 0) iteration_filter_node_2 root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        input_list_ai -> iteration_filter_node_2.items\n        predicate_ai -> iteration_filter_node_2.handler\n        count_node.count -> output_count_ai\n        iteration_filter_node_2.output_list -> count_node.trigger\n    }\n\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -20, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_1e3d9a root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_1e3d9a.items\n        instance(x: 0, y: -40) count_node root.Std_k98ojb.Count {}\n        filter_1e3d9a.result -> count_node.items\n        count_node.count -> output_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -16, y: 0) chars_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> chars_node.input\n        instance(x: 0, y: 0) filter_1c2a6f root.Std_k98ojb.Iteration.Filter {\n            handler: \"it.IsNumeric()\"\n        }\n        chars_node.characters -> filter_1c2a6f.items\n        instance(x: 0, y: -16) list_length_node root.Std_k98ojb.List.Length {}\n        filter_1c2a6f.output_list -> list_length_node.list\n        list_length_node.length -> output_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_3e25a9 root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -1, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.isNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: -1) count_node root.Std_k98ojb.Count {}\n        filter_7b3b7b.result -> count_node.items\n        count_node.count -> output_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -5, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_1c2a8f root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_1c2a8f.items\n        instance(x: 0, y: -50) list_length_node root.Std_k98ojb.List.Length {}\n        filter_1c2a8f.output_list -> list_length_node.list\n        list_length_node.length -> output_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_5e7d6a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 15, y: 0) count_digits_2 root.main.count_digits {}\n        instance(x: 45, y: 0) filter_3 root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_3.items\n        instance(x: 75, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_3.output_list -> list_length_node.list\n        list_length_node.length -> output_ai\n    }\n\n    \n    instance(x: -15, y: 0) count_digits_1 root.main.count_digits {}\n\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 15, y: 0) count_digits_2 root.main.count_digits {}\n        instance(x: 30, y: 0) filter_1 root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_1.items\n        instance(x: 45, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_1.output_list -> list_length_node.list\n        list_length_node.length -> output_ai\n    }\n\n    \n    instance(x: -15, y: 0) count_digits_2 root.main.count_digits {}\n\n    \n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) pow_4d1c8e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_4d1c8e.second\n        mul_f892a4.result -> sum_365f7b\n        expression_2d6da6.result -> mul_f892a4.first\n        n_3a3116 -> mul_f892a4.second\n        expression_2d6da6.result -> pow_4d1c8e.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        n_3a3116 -> pow_4d1c8e.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4c9e5d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_4c9e5d.second\n        mul_f892a4.result -> sum_365f7b\n        expression_2d6da6.result -> pow_4c9e5d.first\n        n_3a3116 -> pow_4c9e5d.gen_0\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_4c9e5d.result -> mul_f892a4.second\n        mul_f892a4.first -> mul_f892a4.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -282, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> mul_64046c.second\n        pow_f892a4.result -> mul_64046c.first\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        mul_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -278, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> mul_64046c.second\n        pow_f892a4.result -> mul_64046c.first\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        mul_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> mul_64046c.second\n        pow_f892a4.result -> mul_64046c.first\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        mul_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4c9e8d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_4c9e8d.second\n        n_3a3116 -> pow_4c9e8d.first\n        expression_2d6da6.result -> mul_f892a4.first\n        pow_4c9e8d.result -> mul_f892a4.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        mul_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4d0c5e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_4d0c5e.second\n        mul_f892a4.result -> sum_365f7b\n        expression_2d6da6.result -> pow_4d0c5e.first\n        n_3a3116 -> pow_4d0c5e.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        mul_f892a4.second -> pow_4d0c5e.first\n        pow_4d0c5e.result -> mul_f892a4.first\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -280, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> mul_64046c.second\n        pow_f892a4.result -> mul_64046c.first\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        mul_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> mul_64046c.second\n        pow_f892a4.result -> mul_64046c.first\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        mul_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> mul_64046c.second\n        pow_f892a4.result -> mul_64046c.first\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        mul_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -219, y: 55, name: \"size\") property(Number) size_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        size_3a3116 -> mul_f892a4.first\n        size_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -106, y: 15, name: \"size\") property(Number) size_1a3f6d\n\n        out(x: 1024, y: 7, name: \"surface_area\") property(Number) surface_area_5c8e9b\n\n        instance(x: 12, y: -2) mul_0f7f0f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a3f6d -> mul_0f7f0f.first\n        data_cde0dc -> mul_0f7f0f.second\n        mul_0f7f0f.result -> surface_area_5c8e9b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_6d3a4c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -109, y: 35, name: \"size\") property(Number) size_9e8a3f\n\n        out(x: 1056, y: 40, name: \"surface_area\") property(Number) surface_area_7b4c5d\n\n        instance(x: 12, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        size_9e8a3f -> mul_f892a4.first\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        div_64046c.result -> surface_area_7b4c5d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -105, y: 45, name: \"size\") property(Number) size_9f0a3d\n\n        out(x: 1066, y: 7, name: \"surface_area\") property(Number) surface_area_1b2e8c\n\n        instance(x: 24, y: -1) mul_5a4a5c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_5a4a5c.result -> div_64046c.first\n        expression_2d6da6.result -> mul_5a4a5c.second\n        size_9f0a3d -> mul_5a4a5c.first\n        size_9f0a3d -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_1b2e8c\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_7f4a5f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -100, y: 40, name: \"size\") property(Number) size_1a8f0e\n\n        out(x: 200, y: 7, name: \"surface_area\") property(Number) surface_area_9c3b4d\n\n        instance(x: 17, y: -6) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 140, y: 56) data_cde0dc  = 6\n        size_1a8f0e -> mul_2f9d09.first\n        data_cde0dc -> mul_2f9d09.second\n        mul_2f9d09.result -> surface_area_9c3b4d\n    }\n\n    \n\n    instance(x: 111, y: -26) surface_area_cube_1e8a5c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -218, y: 55, name: \"size\") property(Number) size_9e3f8d\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_1b4c0a\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        data_cde0dc -> mul_f892a4.first\n        expression_2d6da6.result -> mul_f892a4.second\n        size_9e3f8d -> expression_2d6da6.gen_0\n        mul_f892a4.result -> surface_area_1b4c0a\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_7c5e2f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -106, y: 44, name: \"size\") property(Number) size_1f3e4d\n\n        out(x: 1026, y: 11, name: \"surface_area\") property(Number) surface_area_7c9a8b\n\n        instance(x: 23, y: -2) mul_5a0c93 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_7f9e3d root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        instance(x: 303, y: 2) div_4c1a8d root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_4c1a8d.second\n        mul_5a0c93.result -> div_4c1a8d.first\n        expression_7f9e3d.result -> mul_5a0c93.second\n        size_1f3e4d -> mul_5a0c93.first\n        size_1f3e4d -> expression_7f9e3d.gen_0\n        div_4c1a8d.result -> surface_area_7c9a8b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_5c6f2f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: 47, name: \"size\") property(Number) size_1a3f8e\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_7c9b5d\n\n        instance(x: 94, y: -105) mul_f0b6dc root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_ea4e8f  = 6\n        size_1a3f8e -> mul_f0b6dc.first\n        data_ea4e8f -> mul_f0b6dc.second\n        instance(x: 303, y: 2) mul_7c9d5c root.Std_k98ojb.Math.Mul {}\n        size_1a3f8e -> mul_7c9d5c.first\n        size_1a3f8e -> mul_7c9d5c.second\n        mul_f0b6dc.result -> surface_area_7c9b5d\n        mul_7c9d5c.result -> mul_f0b6dc.second\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_8f1e3a root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -102, y: 17, name: \"size\") property(Number) size_3f8e6d\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_cbb7bd\n\n        instance(x: 94, y: -105) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_584bfd root.Std_k98ojb.Math.Mul {}\n        size_3f8e6d -> mul_f2330d.first\n        size_3f8e6d -> mul_f2330d.second\n        mul_f2330d.result -> mul_584bfd.first\n        6 -> mul_584bfd.second\n        mul_584bfd.result -> result_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_b9ff6b root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -102, y: 22, name: \"size\") property(Number) size_9a3f8d\n\n        out(x: 1042, y: 24, name: \"surface_area\") property(Number) surface_area_1b6c0e\n\n        instance(x: 32, y: -10) mul_7f5b4f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 332, y: 133) data_cde0dc  = 6\n        size_9a3f8d -> mul_7f5b4f.first\n        data_cde0dc -> mul_7f5b4f.second\n        mul_7f5b4f.result -> surface_area_1b6c0e\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 0, name: \"list\") property(List) list_4a3f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.items -> list_4a3f8e\n        min_list_4d4556.items -> list_4a3f8e\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -31, y: 16, name: \"list\") property(List) list_1e3f0a\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.items -> list_1e3f0a\n        min_list_4d4556.items -> list_1e3f0a\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -28, y: 14, name: \"list\") property(List) list_1e3b9f\n\n        out(x: 444, y: 64, name: \"difference\") property(Number) difference_2a7d4c\n\n        instance(x: 0, y: 154, name: \"Max\") max_6e8b5f root.Std_k98ojb.List.Max {}\n        instance(x: -280, y: 155, name: \"Min\") min_1a3f9f root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 64) sub_2c7e8d root.Std_k98ojb.Math.Sub {}\n        list_1e3b9f -> max_6e8b5f.items\n        list_1e3b9f -> min_1a3f9f.items\n        max_6e8b5f.max -> sub_2c7e8d.first\n        min_1a3f9f.min -> sub_2c7e8d.second\n        sub_2c7e8d.result -> difference_2a7d4c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_5b6f7c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_0a3f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.items -> list_0a3f8e\n        min_list_4d4556.items -> list_0a3f8e\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1e8f2a\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.items -> list_1e8f2a\n        min_list_4d4556.items -> list_1e8f2a\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -35, y: 10, name: \"list\") property(List) list_6e9f1a\n\n        out(x: 441, y: 63, name: \"difference\") property(Number) difference_4b2c7d\n\n        instance(x: 188, y: 62) sub_8b0c5e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 155) max_1f3a6c root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_4d2c9f root.Std_k98ojb.List.Min {}\n        list_6e9f1a -> max_1f3a6c.items\n        list_6e9f1a -> min_4d2c9f.items\n        max_1f3a6c.max -> sub_8b0c5e.first\n        min_4d2c9f.min -> sub_8b0c5e.second\n        sub_8b0c5e.result -> difference_4b2c7d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_1a3f6e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -32, y: 8, name: \"list\") property(List) list_1a9f3e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.items -> list_1a9f3e\n        min_list_4d4556.items -> list_1a9f3e\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -27, y: 16, name: \"list\") property(List) list_1e3b8a\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_4f7c0d\n\n        instance(x: 201, y: 62) sub_6e5f2f root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"max list\") max_list_f3a8e9 root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358, name: \"min list\") min_list_1f7d5c root.Std_k98ojb.List.Min {}\n        sub_6e5f2f.result -> output_4f7c0d\n        max_list_f3a8e9.max -> sub_6e5f2f.first\n        min_list_1f7d5c.min -> sub_6e5f2f.second\n        list_1e3b8a -> max_list_f3a8e9.items\n        list_1e3b8a -> min_list_1f7d5c.items\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_4f2d6c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_6a9b1f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.items -> list_6a9b1f\n        min_list_4d4556.items -> list_6a9b1f\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_0a3f1e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.items -> list_0a3f1e\n        min_list_4d4556.items -> list_0a3f1e\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 11, name: \"input\") property(Number) input_9a8f5e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 432, y: 56) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n        input_9a8f5e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> notequal_cb8a55.left\n        0 -> notequal_cb8a55.right\n        not(notequal_cb8a55.result) -> output_b1d7f8\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -34, y: 0, name: \"input\") property(Number) input_1e8f2d\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_9c3a6b\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n        input_1e8f2d -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> notequal_cb8a55.left\n        0 -> notequal_cb8a55.right\n        notequal_cb8a55.result -> output_9c3a6b\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -27, y: 0, name: \"input\") property(Number) input_1e8a3f\n        out(x: 189, y: 79, name: \"output\") property(Bool) output_eb7d2c\n\n        instance(x: 54, y: 76) modulo_5e9b0c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 161, y: 75) equal_3f1a4f root.Std_k98ojb.Logic.Equal {}\n        input_1e8a3f -> modulo_5e9b0c.value\n        2 -> modulo_5e9b0c.divisor\n        modulo_5e9b0c.result -> equal_3f1a4f.left\n        0 -> equal_3f1a4f.right\n        equal_3f1a4f.result -> output_eb7d2c\n    }\n\n    \n\n    instance(x: -14, y: -6) is_even_8e9f5f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 0, name: \"input\") property(Number) input_9a2f1e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 439, y: 56) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n        input_9a2f1e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> notequal_cb8a55.left\n        0 -> notequal_cb8a55.right\n        not(notequal_cb8a55.result) -> output_b1d7f8\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_1e3f6d\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 1087, y: -54) modulo_eb4c5a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1502, y: -400) expression_0d8e1f root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1493, y: -187) expression_5c7a4c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        input_1e3f6d -> modulo_eb4c5a.value\n        2 -> modulo_eb4c5a.divisor\n        modulo_eb4c5a.result -> expression_0d8e1f.gen_0\n        input_1e3f6d -> expression_0d8e1f.gen_1\n        modulo_eb4c5a.result -> expression_5c7a4c.gen_0\n        input_1e3f6d -> expression_5c7a4c.gen_1\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> for_8cb3f6.items\n        add_b4554f.result -> expression_0d8e1f.gen_1\n        add_b4554f.result -> expression_5c7a4c.gen_1\n        expression_0d8e1f.result -> and_80a119.left\n        expression_5c7a4c.result -> and_80a119.right\n        for_8cb3f6.item -> modulo_eb4c5a.value\n        and_80a119.result -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_e19a62.else -> out_f3db9f\n        if_e19a62.then -> for_8cb3f6.next\n        for_8cb3f6.done -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1c2b7e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -32, y: 0, name: \"input\") property(Number) input_5e9f1d\n        out(x: 1268, y: 2, name: \"output\") property(Bool) output_ea3c7b\n\n        instance(x: 1086, y: -10) modulo_4a0f3f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1479, y: 25) equal_8d2e1c root.Std_k98ojb.Logic.Equal {}\n        input_5e9f1d -> modulo_4a0f3f.value\n        2 -> modulo_4a0f3f.divisor\n        modulo_4a0f3f.result -> equal_8d2e1c.left\n        0 -> equal_8d2e1c.right\n        equal_8d2e1c.result -> output_ea3c7b\n    }\n\n    \n\n    instance(x: -5, y: -11) is_even_f9f6a4 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -34, y: 2, name: \"input\") property(Number) input_1a9f6e\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_1a9f6e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_1a9f6e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> out_f3db9f\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_1a9f6e -> expression_9fba8c.gen_0\n        input_1a9f6e -> expression_b720d7.gen_0\n        if_e19a62.then -> out_f3db9f\n        for_8cb3f6.done -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1c4b2e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -27, y: 1, name: \"input\") property(Number) input_0e8f9d\n        out(x: 1003, y: 2, name: \"output\") property(Bool) output_7a6b4c\n\n        instance(x: 350, y: -5) modulo_3b1c7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 710, y: 0) equal_9e2d8c root.Std_k98ojb.Logic.Equal {}\n        input_0e8f9d -> modulo_3b1c7f.value\n        2 -> modulo_3b1c7f.divisor\n        0 -> equal_9e2d8c.right\n        modulo_3b1c7f.result -> equal_9e2d8c.left\n        equal_9e2d8c.result -> output_7a6b4c\n    }\n\n    \n\n    instance(x: -5, y: 12) is_even_f0f3c6 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_9a8f6e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_9a8f6e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_9a8f6e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_9a8f6e -> expression_9fba8c.gen_0\n        input_9a8f6e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5e2d0c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_0a8f1e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_0a8f1e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_0a8f1e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_0a8f1e -> expression_9fba8c.gen_0\n        input_0a8f1e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_1e9f7c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"characters\") characters_0d5a4c root.Std_k98ojb.Strings.Characters {}\n        input_0 -> characters_0d5a4c.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2a8f4c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            characters_0d5a4c.characters -> contains_2a8f4c.input\n            current_afd5b1 -> contains_2a8f4c.contains\n            find_1e9f7c.item -> contains_2a8f4c.contains\n            contains_2a8f4c.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_1e9f7c.predicate\n        characters_0d5a4c.characters -> find_1e9f7c.items\n        find_1e9f7c.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) characters_7f8c4e root.Std_k98ojb.Strings.Characters {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            characters_7f8c4e.characters -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_807ffd.left\n            1 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        characters_7f8c4e.input -> input_0\n        characters_7f8c4e.characters -> find_6d05b0.items\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -290, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3e9b5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -4, y: 60) filter_7a2f1c root.Std_k98ojb.Iteration.Filter {}\n        characters_3e9b5c.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            characters_3e9b5c.characters -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_3e9b5c.characters -> contains_d42dce.contains\n            current_afd5b1 -> contains_d42dce.input\n            contains_d42dce.result -> bool_1eb6e9\n        } -> filter_7a2f1c.handler\n        find_6d05b0.item -> result_0\n        characters_3e9b5c.characters -> filter_7a2f1c.items\n        filter_7a2f1c.output_list -> find_6d05b0.items\n        input_0 -> characters_3e9b5c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_4a3b9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7e5f6d root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257) ``Finds the first repeated character in a given string_2c3a8d`` root.Std_k98ojb.Iteration.Filter {}\n        characters_4a3b9c.characters -> find_7e5f6d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a1b2c3\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_4d5e6f\n\n            instance(x: 112, y: 80) contains_8a9b0c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) ``Finds the first repeated character in a given string_3g7h8i`` root.Std_k98ojb.Iteration.Find {}\n            characters_4a3b9c.characters -> ``Finds the first repeated character in a given string_3g7h8i``.items\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_a1b2c3\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_4d5e6f\n\n                instance(x: 112, y: 80) notequal_9j0k1l root.Std_k98ojb.Logic.NotEqual {}\n                current_a1b2c3 -> notequal_9j0k1l.left\n                ``Finds the first repeated character in a given string_3g7h8i``.item -> notequal_9j0k1l.right\n                notequal_9j0k1l.result -> bool_4d5e6f\n            } -> ``Finds the first repeated character in a given string_3g7h8i``.predicate\n            current_a1b2c3 -> contains_8a9b0c.input\n            characters_4a3b9c.characters -> contains_8a9b0c.contains\n            contains_8a9b0c.result -> bool_4d5e6f\n        } -> find_7e5f6d.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a1b2c3\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_4d5e6f\n\n            instance(x: 112, y: 80) contains_8a9b0c root.Std_k98ojb.Strings.Contains {}\n            current_a1b2c3 -> contains_8a9b0c.input\n            characters_4a3b9c.characters -> contains_8a9b0c.contains\n            contains_8a9b0c.result -> bool_4d5e6f\n        } -> ``Finds the first repeated character in a given string_2c3a8d``.handler\n        characters_4a3b9c.characters -> ``Finds the first repeated character in a given string_2c3a8d``.items\n        find_7e5f6d.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_09fcba root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"seen\") list_0b1361 = []\n        input_0 -> characters_09fcba.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            list_0b1361 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) add_148aeb root.Std_k98ojb.List.Add {}\n            current_afd5b1 -> contains_d42dce.input\n            list_0b1361 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n            current_afd5b1 -> add_148aeb.item\n            list_0b1361 -> add_148aeb.list\n            add_148aeb.listWithItem -> list_0b1361\n        } -> find_7e1ce0.handler\n        characters_09fcba.characters -> find_7e1ce0.items\n        find_7e1ce0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3e4b9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7a8f5d root.Std_k98ojb.Iteration.Find {}\n        instance(x: -2, y: 60) filter_6a1b5c root.Std_k98ojb.Iteration.Filter {}\n        characters_3e4b9c.characters -> filter_6a1b5c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a7f0d8\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_2e3a6b\n\n            instance(x: 112, y: 80) contains_1c5e9f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_7d0b4f root.Std_k98ojb.Logic.NotEqual {}\n            current_a7f0d8 -> contains_1c5e9f.input\n            characters_3e4b9c.characters -> contains_1c5e9f.contains\n            contains_1c5e9f.result -> notequal_7d0b4f.left\n            true -> notequal_7d0b4f.right\n            notequal_7d0b4f.result -> bool_2e3a6b\n        } -> filter_6a1b5c.handler\n        filter_6a1b5c.output_list -> find_7a8f5d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a7f0d8\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_2e3a6b\n\n            instance(x: 112, y: 80) contains_1c5e9f root.Std_k98ojb.Strings.Contains {}\n            current_a7f0d8 -> contains_1c5e9f.input\n            filter_6a1b5c.output_list -> contains_1c5e9f.contains\n            contains_1c5e9f.result -> bool_2e3a6b\n        } -> find_7a8f5d.predicate\n        input_0 -> characters_3e4b9c.input\n        find_7a8f5d.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5e9f7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -4, y: 60) filter_3a1f2f root.Std_k98ojb.Iteration.Filter {}\n        characters_5e9f7c.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            characters_5e9f7c.characters -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_5e9f7c.characters -> contains_d42dce.contains\n            current_afd5b1 -> contains_d42dce.input\n            contains_d42dce.result -> bool_1eb6e9\n        } -> filter_3a1f2f.handler\n        find_6d05b0.item -> result_0\n        characters_5e9f7c.characters -> filter_3a1f2f.items\n        filter_3a1f2f.output_list -> find_6d05b0.items\n        input_0 -> characters_5e9f7c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -288, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3e4b5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7c8d6a root.Std_k98ojb.Iteration.Find {}\n        instance(x: -10, y: 60) filter_2f9c1f root.Std_k98ojb.Iteration.Filter {}\n        characters_3e4b5f.characters -> filter_2f9c1f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3a8f7c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_3a8f7c.input\n            input_0 -> contains_3a8f7c.contains\n            contains_3a8f7c.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> filter_2f9c1f.handler\n        filter_2f9c1f.output_list -> find_7c8d6a.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3a8f7c root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_3a8f7c.input\n            input_0 -> contains_3a8f7c.contains\n            contains_3a8f7c.result -> bool_1eb6e9\n        } -> find_7c8d6a.predicate\n        find_7c8d6a.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_2a7c9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated character\") ``characters_2a7c9f`` root.Std_k98ojb.Iteration.Find {}\n        input_0 -> characters_2a7c9f.input\n        func() {\n            in(x: -192, y: 84, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_2a7c9f.characters -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        characters_2a7c9f.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            find_6d05b0.item -> contains_d42dce.contains\n            characters_2a7c9f.characters -> contains_d42dce.input\n            contains_d42dce.result -> bool_af09a7\n        } -> ``characters_2a7c9f``.predicate\n        characters_2a7c9f.characters -> ``characters_2a7c9f``.items\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"seen\") list_9e7d0f root.Std_k98ojb.List.Empty {}\n        input_0 -> characters_3c713b.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            list_9e7d0f -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            list_9e7d0f -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        characters_3c713b.characters -> find_6d05b0.items\n        list_9e7d0f -> find_6d05b0.context\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            list_9e7d0f -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            list_9e7d0f -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        list_9e7d0f -> find_6d05b0.context\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            list_9e7d0f -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        list_9e7d0f -> find_6d05b0.context\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            list_9e7d0f -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        list_9e7d0f -> find_6d05b0.context\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            list_9e7d0f -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        list_9e7d0f -> find_6d05b0.context\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            list_9e7d0f -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        list_9e7d0f -> find_6d05b0.context\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -104, y: 89, name: \"index\") property(Int) index_1e7c6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3f9d5b root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_3f9d5b.items\n            min_3f9d5b.min -> min_1c6e0a\n\n            instance(x: -8, y: 62) ifexpression_7b2c6a root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            index_1e7c6a -> ifexpression_7b2c6a.gen_0\n            getter(x: -41, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n            setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n            getter_9cceb3.value -> min_1c6e0a\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            min_1c6e0a -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            ifexpression_7b2c6a.then -> setter_1cedb2.execute\n            elem_9f6850 -> setter_1cedb2.new_value\n            ifexpression_7b2c6a.else -> setter_37db7f.execute\n            notequal_807ffd.result -> bool_af09a7\n\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: -193, name: \"list\") property(List) list_ai\n\n        out(x: 46, y: 158, name: \"second_smallest\") property(Number) second_smallest_1f9d8a\n\n        instance(x: -105, y: -110) min_2c3e5b root.Std_k98ojb.List.Min {}\n        list_ai -> min_2c3e5b.items\n        instance(x: 0, y: 0) remove_4c7f9d root.Std_k98ojb.List.Remove {}\n        min_2c3e5b.min -> remove_4c7f9d.index\n        list_ai -> remove_4c7f9d.list\n        instance(x: -105, y: -110) min_1a6f8a root.Std_k98ojb.List.Min {}\n        remove_4c7f9d.listWithoutItem -> min_1a6f8a.items\n        min_1a6f8a.min -> second_smallest_1f9d8a\n    }\n\n    \n\n    instance(x: -174, y: -63) second_smallest_2b5e3c root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -290, y: -0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_a89f71\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_b2508f\n\n            instance(x: 89, y: 29) min_1c2d5a root.Std_k98ojb.List.Min {}\n            list_9f7759 -> min_1c2d5a.items\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            min_1c2d5a.min -> notequal_807ffd.left\n            elem_a89f71 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_b2508f\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        instance(x: 772, y: 76) min_1c2d5a_1 root.Std_k98ojb.List.Min {}\n        find_6d05b0.item -> min_1c2d5a_1.items\n        min_1c2d5a_1.min -> number_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 89, name: \"index\") property(Int) index_3c2a7e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1b9d4f root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_1b9d4f.items\n            min_1b9d4f.min -> smallest_2e3c6a\n\n            instance(x: -7, y: 29) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            index_3c2a7e -> ifexpression_e38995.gen_0\n            getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = bool\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = bool\n            setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = bool\n            getter_9cceb3.value -> bool_af09a7\n\n            instance(x: -144, y: 29) ifexpression_1b5e8d root.Std_k98ojb.Std.IfExpression {\n                expression: \"elem < smallest\"\n            }\n            elem_9f6850 -> ifexpression_1b5e8d.gen_0\n            smallest_2e3c6a -> ifexpression_1b5e8d.gen_1\n\n            instance(x: 89, y: -7) min_4c1c99 root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_4c1c99.items\n            min_4c1c99.min -> second_smallest_3e9f8d\n\n            instance(x: 89, y: -7) ifexpression_5c0c6c root.Std_k98ojb.Std.IfExpression {\n                expression: \"elem < second_smallest\"\n            }\n            elem_9f6850 -> ifexpression_5c0c6c.gen_0\n            second_smallest_3e9f8d -> ifexpression_5c0c6c.gen_1\n\n            instance(x: 89, y: -7) min_4c1c99_2 root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_4c1c99_2.items\n            min_4c1c99_2.min -> second_smallest_3e9f8d\n\n            ifexpression_e38995.then -> setter_1cedb2.execute\n            true -> setter_1cedb2.new_value\n            ifexpression_e38995.else -> setter_37db7f.execute\n            false -> setter_37db7f.new_value\n\n            ifexpression_1b5e8d.then -> min_4c1c99.reset\n            ifexpression_5c0c6c.then -> min_4c1c99_2.reset\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -103, y: 44, name: \"index\") property(Int) index_3c2d6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: -1) and_7e2c4a root.Std_k98ojb.Logic.And {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> and_7e2c4a.left\n            index_3c2d6a -> and_7e2c4a.right\n            1 -> and_7e2c4a.gen_1\n            and_7e2c4a.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: -0, name: \"list\") property(List) list_8f9d6a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3b2c1e root.Std_k98ojb.List.Min {}\n            list_8f9d6a -> min_3b2c1e.items\n            min_3b2c1e.min -> smallest_4a0b7f\n\n            instance(x: -11, y: 29) filter_5a9c3d root.Std_k98ojb.Query.Filter {\n                where: \"it > $smallest\"\n            }\n            list_8f9d6a -> filter_5a9c3d.list\n            smallest_4a0b7f -> filter_5a9c3d.smallest\n\n            instance(x: 310, y: 35) min_1e2c3f root.Std_k98ojb.List.Min {}\n            filter_5a9c3d.result -> min_1e2c3f.items\n            min_1e2c3f.min -> second_smallest_7b8c4f\n\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            elem_9f6850 -> notequal_807ffd.left\n            second_smallest_7b8c4f -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_8f9d6a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -105, y: 112, name: \"index\") property(Int) index_3c1d8a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -20, y: 113) ifexpression_1a9c6e root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            instance(x: 89, y: 29) modulo_1088d5_2 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd_2 root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd_2.right\n            modulo_1088d5_2.result -> notequal_807ffd_2.left\n            2 -> modulo_1088d5_2.divisor\n            elem_9f6850 -> modulo_1088d5_2.value\n            instance(x: -144, y: 112, name: \"getter_1c6e4a\") getter_1c6e4a = bool\n            instance(x: 116, y: -268, name: \"setter_3f0b7a\") setter_3f0b7a = bool\n            instance(x: 118, y: -56, name: \"setter_2d5b9c\") setter_2d5b9c = bool\n            ifexpression_1a9c6e.then -> setter_3f0b7a.execute\n            notequal_807ffd.result -> getter_1c6e4a.value\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            ifexpression_1a9c6e.else -> setter_2d5b9c.execute\n            notequal_807ffd_2.result -> setter_2d5b9c.new_value\n            getter_1c6e4a.value -> bool_af09a7\n            index_3c1d8a -> ifexpression_1a9c6e.gen_0\n            1 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            setter_3f0b7a.new_value -> bool_af09a7\n            setter_2d5b9c.continue -> continue_6e4c8f\n            setter_3f0b7a.continue -> continue_6e4c8f\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -286, y: -0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_a89f71\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_b2508f\n\n            instance(x: 89, y: 29) min_1c9b7a root.Std_k98ojb.List.Min {}\n            list_9f7759 -> min_1c9b7a.items\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            min_1c9b7a.min -> notequal_807ffd.left\n            elem_a89f71 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_b2508f\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it < min\"\n        }\n        find_6d05b0.item -> filter_7b3b7b.list\n        filter_7b3b7b.result -> list_9f7759\n        instance(x: 772, y: -114) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_9f7759 -> min_c3e343.items\n        min_c3e343.min -> number_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: -38, name: \"index\") property(Int) index_1c8d3a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -11, y: -44) ifexpression_7c9f2a root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            instance(x: 89, y: -58) notequal_1e8d5a root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: -44) ifexpression_e9f3c6 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 1\"\n            }\n            instance(x: 89, y: -78) notequal_7e8d5a root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: -64) ifexpression_e9f3c6_2 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            instance(x: 89, y: -94) notequal_1e8d5a_2 root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: -80) ifexpression_e9f3c6_3 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 1\"\n            }\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            notequal_807ffd.result -> ifexpression_7c9f2a.gen_1\n            index_1c8d3a -> ifexpression_7c9f2a.gen_0\n            ifexpression_7c9f2a.then -> notequal_1e8d5a.execute\n            elem_9f6850 -> notequal_1e8d5a.left\n            0 -> notequal_1e8d5a.right\n            notequal_1e8d5a.result -> ifexpression_e9f3c6.gen_1\n            index_1c8d3a -> ifexpression_e9f3c6.gen_0\n            ifexpression_e9f3c6.then -> notequal_7e8d5a.execute\n            elem_9f6850 -> notequal_7e8d5a.left\n            0 -> notequal_7e8d5a.right\n            notequal_7e8d5a.result -> ifexpression_e9f3c6_2.gen_1\n            index_1c8d3a -> ifexpression_e9f3c6_2.gen_0\n            ifexpression_e9f3c6_2.then -> notequal_1e8d5a_2.execute\n            elem_9f6850 -> notequal_1e8d5a_2.left\n            0 -> notequal_1e8d5a_2.right\n            notequal_1e8d5a_2.result -> ifexpression_e9f3c6_3.gen_1\n            index_1c8d3a -> ifexpression_e9f3c6_3.gen_0\n            ifexpression_e9f3c6_3.then -> bool_af09a7.set_value\n            true -> bool_af09a7.set_value.value\n            ifexpression_e9f3c6_3.else -> bool_af09a7.set_value\n            false -> bool_af09a7.set_value.value\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 63, name: \"index\") property(Int) index_1e3a7c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -3, y: 86) ifexpression_7c9f0e root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 1\"\n            }\n            func() {\n                in(x: -144, y: 112, name: \"getter_2d4a8c\") getter_2d4a8c = bool\n                out(x: 116, y: -268, name: \"setter_5e3b9f\") trigger() setter_5e3b9f\n                in(x: 118, y: -56, name: \"new_value\") property(Bool) new_value_1c2d8a\n\n                instance(x: -105, y: -110) ifexpression_4a6b0c root.Std_k98ojb.Std.IfExpression {\n                    expression: \"elem < min\"\n                }\n                getter(x: -144, y: 112, name: \"getter_1e3f2d\") getter_1e3f2d = bool\n                setter(x: 116, y: -268, name: \"setter_7c8a0b\") trigger() setter_7c8a0b\n                in(x: 118, y: -56, name: \"new_value\") property(Bool) new_value_1e3f2d\n\n                instance(x: -144, y: -110) ifexpression_4a6b0c root.Std_k98ojb.Std.IfExpression {\n                    expression: \"elem > min\"\n                }\n                getter(x: -183, y: 112, name: \"getter_1e3f2d\") getter_1e3f2d = bool\n                setter(x: 116, y: -268, name: \"setter_7c8a0b\") trigger() setter_7c8a0b\n                in(x: 118, y: -56, name: \"new_value\") property(Bool) new_value_1e3f2d\n\n                instance(x: -105, y: -110) ifexpression_4a6b0c root.Std_k98ojb.Std.IfExpression {\n                    expression: \"elem == min\"\n                }\n                getter(x: -144, y: 112, name: \"getter_1e3f2d\") getter_1e3f2d = bool\n                setter(x: 116, y: -268, name: \"setter_7c8a0b\") trigger() setter_7c8a0b\n                in(x: 118, y: -56, name: \"new_value\") property(Bool) new_value_1e3f2d\n\n                min -> ifexpression_4a6b0c.gen_0\n                elem_9f6850 -> ifexpression_4a6b0c.gen_1\n                getter_1e3f2d.value -> bool_af09a7\n                ifexpression_4a6b0c.then -> setter_5e3b9f.execute\n                true -> new_value_1c2d8a\n                setter_5e3b9f.continue -> continue_1e3f2d\n                ifexpression_4a6b0c.else -> setter_7c8a0b.execute\n                false -> new_value_1e3f2d\n                setter_7c8a0b.continue -> continue_1e3f2d\n            } -> ifexpression_7c9f0e.then\n            getter(x: -183, y: 112, name: \"getter_2d4a8c\") getter_2d4a8c = bool\n            setter(x: 116, y: -268, name: \"setter_5e3b9f\") trigger() setter_5e3b9f\n            in(x: 118, y: -56, name: \"new_value\") property(Bool) new_value_2d4a8c\n\n            instance(x: -144, y: -110) ifexpression_7c9f0e root.Std_k98ojb.Std.IfExpression {\n                expression: \"index != 1\"\n            }\n            getter(x: -183, y: 112, name: \"getter_2d4a8c\") getter_2d4a8c = bool\n            setter(x: 116, y: -268, name: \"setter_5e3b9f\") trigger() setter_5e3b9f\n            in(x: 118, y: -56, name: \"new_value\") property(Bool) new_value_2d4a8c\n\n            index_1e3a7c -> ifexpression_7c9f0e.gen_0\n            getter_2d4a8c.value -> bool_af09a7\n            ifexpression_7c9f0e.then -> setter_5e3b9f.execute\n            false -> new_value_2d4a8c\n            setter_5e3b9f.continue -> continue_2d4a8c\n            ifexpression_7c9f0e.else -> setter_5e3b9f.execute\n            true -> new_value_2d4a8c\n            setter_5e3b9f.continue -> continue_2d4a8c\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n\n        instance(x: 772, y: -1) min_7b3b7b root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_7b3b7b.items\n        min_7b3b7b.min -> find_6d05b0.context\n\n    }\n\n    \n\n    instance(x: -34, y: 127) second_smallest_node root.main.second_smallest {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_ONE_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15999,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -280, y: -91, name: \"list1\") property(List) list1_4a0f9e\n        in(x: -279, y: 39, name: \"list2\") property(List) list2_8c6b5d\n\n        out(x: 554, y: 17, name: \"output\") property(Bool) output_3a1c4d\n\n        instance(x: 0, y: -78) intersection_7e9f4f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 247, y: -77) notempty_5e2b6f root.Std_k98ojb.List.NotEmpty {}\n        list1_4a0f9e -> intersection_7e9f4f.left\n        list2_8c6b5d -> intersection_7e9f4f.right\n        intersection_7e9f4f.intersect -> notempty_5e2b6f.list\n        notempty_5e2b6f.isEmpty -> output_3a1c4d\n    }\n\n    \n\n    instance(x: -71, y: 53) has_common_element_8b0d9f root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -255, y: -88, name: \"list1\") property(List) list1_2e9f5a\n        in(x: -245, y: 33, name: \"list2\") property(List) list2_7c8b4d\n\n        out(x: 558, y: 14, name: \"output\") property(Bool) output_3e0f1f\n\n        instance(x: 160, y: -76) intersection_5a6b9c root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 456, y: 15) notempty_4d2f7a root.Std_k98ojb.List.NotEmpty {}\n        list1_2e9f5a -> intersection_5a6b9c.left\n        list2_7c8b4d -> intersection_5a6b9c.right\n        intersection_5a6b9c.intersect -> notempty_4d2f7a.list\n        notempty_4d2f7a.isEmpty -> output_3e0f1f\n    }\n\n    \n\n    instance(x: -86, y: 60) has_common_element_8b9d6f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -287, y: -83, name: \"list1\") property(List) list1_2e9f5a\n        in(x: -279, y: 18, name: \"list2\") property(List) list2_7b4d8c\n\n        out(x: 553, y: -82, name: \"output\") property(Bool) output_6a1c3e\n\n        instance(x: -92, y: -77) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -76) notempty_9d8f2f root.Std_k98ojb.List.NotEmpty {}\n        list1_2e9f5a -> intersection_c7c7e6.left\n        list2_7b4d8c -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_9d8f2f.list\n        notempty_9d8f2f.isEmpty -> output_6a1c3e\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_a5b4d0 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -277, y: -106, name: \"list1\") property(List) list1_2e9b4f\n        in(x: -278, y: 40, name: \"list2\") property(List) list2_8a7c0d\n\n        out(x: 553, y: 15, name: \"output\") property(Bool) output_3e5f6c\n\n        instance(x: 146, y: -95) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 360, y: 13) notempty_4a8d1c root.Std_k98ojb.List.NotEmpty {}\n        list1_2e9b4f -> intersection_c7c7e6.left\n        list2_8a7c0d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_4a8d1c.list\n        notempty_4a8d1c.isEmpty -> output_3e5f6c\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -261, y: -86, name: \"list1\") property(List) list1_1f846b\n        in(x: -269, y: 34, name: \"list2\") property(List) list2_c62075\n\n        out(x: 557, y: 29, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -1) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 27) notempty_9d8a5f root.Std_k98ojb.List.NotEmpty {}\n        list1_1f846b -> intersection_c7c7e6.left\n        list2_c62075 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_9d8a5f.list\n        notempty_9d8a5f.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_ac7dfb root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -265, y: -93, name: \"list1\") property(List) list1_2a0f3e\n        in(x: -267, y: 29, name: \"list2\") property(List) list2_8c6d5b\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_9e4c1a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_9e4c1a\n        ifexpression_875761.value -> output_9e4c1a\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list2_8c6d5b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list1_2a0f3e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        for_d26972.done -> output_9e4c1a\n        for_d26972.item -> setter_9d4f1c.new_value\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_5b7a3c root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -261, y: -86, name: \"list1\") property(List) list1_2e3f8a\n        in(x: -259, y: 30, name: \"list2\") property(List) list2_7b9c6d\n\n        out(x: 558, y: 5, name: \"output\") property(Bool) output_4c0c1e\n\n        instance(x: 146, y: -96) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 360, y: -95) notempty_9f3d2a root.Std_k98ojb.List.NotEmpty {}\n        list1_2e3f8a -> intersection_c7c7e6.left\n        list2_7b9c6d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_9f3d2a.list\n        notempty_9f3d2a.isEmpty -> output_4c0c1e\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_a8b5f3 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -299, y: -150, name: \"list1\") property(List) list1_2e9f6d\n        in(x: -301, y: 30, name: \"list2\") property(List) list2_8b4a7c\n\n        out(x: 1203, y: 5, name: \"output\") property(Bool) output_0e1b93\n\n        instance(x: 746, y: 92) ifexpression_9d6f0f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 328, y: 159, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 673, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 311, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_9d6f0f.else -> output_0e1b93\n        ifexpression_9d6f0f.value -> output_0e1b93\n        ifexpression_9d6f0f.then -> setter_9d4f1c.execute\n        list2_8b4a7c -> for_d26972.items\n        for_d26972.item -> ifexpression_9d6f0f.gen_2\n        for_d26972.index -> ifexpression_9d6f0f.gen_0\n        getter_b280eb.value -> ifexpression_9d6f0f.gen_1\n        for_d26972.onItem -> ifexpression_9d6f0f.execute\n        list1_2e9f6d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        for_d26972.item -> setter_9d4f1c.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_3b5a8f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -305, y: -185, name: \"list1\") property(List) list1_9e3b8f\n        in(x: -304, y: 30, name: \"list2\") property(List) list2_5c0d7a\n\n        out(x: 1266, y: -182, name: \"output\") property(Bool) output_4f1f9e\n\n        instance(x: -52, y: -179) intersection_c3b8ef root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3b8f -> intersection_c3b8ef.left\n        list2_5c0d7a -> intersection_c3b8ef.right\n        instance(x: 1084, y: -178) notempty_6b3d9f root.Std_k98ojb.List.NotEmpty {}\n        intersection_c3b8ef.intersection -> notempty_6b3d9f.list\n        notempty_6b3d9f.isEmpty -> output_4f1f9e\n    }\n\n    \n\n    instance(x: 101, y: -67) common_element_7c2a0f root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -285, y: -86, name: \"list1\") property(List) list1_3af6ba\n        in(x: -181, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_1d9a3f root.Std_k98ojb.List.NotEmpty {}\n        list1_3af6ba -> intersection_c7c7e6.left\n        list2_c62075 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> notempty_1d9a3f.list\n        notempty_1d9a3f.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -535, y: 3, name: \"list\") property(List) list_2f1a9e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_4b0c6d\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_3e4c93\n\n        instance(x: 752, y: 93) ifexpression_7a1f2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_3d9e8c\") getter_3d9e8c = previous\n        setter(x: 679, y: -313, name: \"setter_7f0b4a\") setter_7f0b4a = previous\n        instance(x: 321, y: -20) for_e1b6a2 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7f0b4a\") setter_d5e8d9 = previous\n        instance(x: -275, y: -35) getat_3c1c6f root.Std_k98ojb.List.GetAt {}\n        ifexpression_7a1f2c.else -> continue_4b0c6d\n        ifexpression_7a1f2c.value -> output_3e4c93\n        ifexpression_7a1f2c.then -> setter_7f0b4a.execute\n        list_2f1a9e -> for_e1b6a2.items\n        for_e1b6a2.item -> ifexpression_7a1f2c.gen_2\n        for_e1b6a2.index -> ifexpression_7a1f2c.gen_0\n        getter_3d9e8c.value -> ifexpression_7a1f2c.gen_1\n        for_e1b6a2.onItem -> ifexpression_7a1f2c.execute\n        for_e1b6a2.done -> continue_4b0c6d\n        for_e1b6a2.item -> setter_7f0b4a.new_value\n        list_2f1a9e -> getat_3c1c6f.list\n        0 -> getat_3c1c6f.index\n        getat_3c1c6f.itemAtIndex -> setter_d5e8d9.new_value\n        continue_4b0c6d -> setter_d5e8d9.continue\n        setter_7f0b4a.continue -> for_e1b6a2.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_3c7d8f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -569, y: 438, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"output\") property(Bool) output_57c890\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_542a51 -> filter_f3b46d.list\n        filter_f3b46d.result -> firstitem_870503.list\n        list_542a51 -> filter_4d4556.list\n        filter_4d4556.result -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> output_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) is_consecutive_f21f44 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -523, y: 2, name: \"list\") property(List) list_1a0f9e\n\n        out(x: 1265, y: -7, name: \"output\") property(Bool) output_8b6d3c\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_1a0f9e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1a0f9e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_3b7a8f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -523, y: 3, name: \"list\") property(List) list_2f8a4e\n\n        out(x: 1249, y: -5, name: \"output\") property(Bool) output_1b7c6d\n\n        instance(x: 1050, y: 20) not_3e9b7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 752, y: 93) ifexpression_5f2a8f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_7c3e6d\") getter_7c3e6d = previous\n        setter(x: 679, y: -313, name: \"setter_9f4b2a\") setter_9f4b2a = previous\n        instance(x: 321, y: -20) for_1f8a5d root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9f4b2a\") setter_6e3c7e = previous\n        instance(x: -275, y: -35) getat_1b8a5d root.Std_k98ojb.List.GetAt {}\n        ifexpression_5f2a8f.else -> not_3e9b7c.input\n        not_3e9b7c.result -> output_1b7c6d\n        ifexpression_5f2a8f.value -> setter_9f4b2a.execute\n        list_2f8a4e -> for_1f8a5d.items\n        for_1f8a5d.item -> ifexpression_5f2a8f.gen_2\n        for_1f8a5d.index -> ifexpression_5f2a8f.gen_0\n        getter_7c3e6d.value -> ifexpression_5f2a8f.gen_1\n        for_1f8a5d.onItem -> ifexpression_5f2a8f.execute\n        for_1f8a5d.done -> not_3e9b7c.continue\n        for_1f8a5d.item -> setter_9f4b2a.new_value\n        list_2f8a4e -> getat_1b8a5d.list\n        0 -> getat_1b8a5d.index\n        getat_1b8a5d.itemAtIndex -> setter_6e3c7e.new_value\n        setter_6e3c7e.continue -> for_1f8a5d.reset\n        setter_9f4b2a.continue -> for_1f8a5d.next\n    }\n\n    \n\n    instance(x: -80, y: 59) is_consecutive_0a7dfb root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -515, y: 3, name: \"list\") property(List) list_1a2d8e\n\n        out(x: 1259, y: -5, name: \"output\") property(Bool) output_6c7b4f\n\n        instance(x: 847, y: -10) contains_1e0f3c root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -8, name: \"transform numbers to true/false\") map_2a9d5f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1057, y: 1) not_4c6e3a root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -15, name: \"current\") property(Number) _index_5f8d2b\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_3a7c4e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_9f6b1d\n\n            instance(x: 226, y: 56) modulo_8f2b5c root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7a3e4f root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_8f2b5c.divisor\n            _index_3a7c4e -> modulo_8f2b5c.value\n            modulo_8f2b5c.result -> notequal_7a3e4f.left\n            0 -> notequal_7a3e4f.right\n            notequal_7a3e4f.result -> output_9f6b1d\n        } -> map_2a9d5f.handler\n        list_1a2d8e -> map_2a9d5f.items\n        map_2a9d5f.output_list -> contains_1e0f3c.list\n        false -> contains_1e0f3c.item\n        not_4c6e3a.result -> output_6c7b4f\n        contains_1e0f3c.is_contained -> not_4c6e3a.input\n    }\n\n    \n\n    instance(x: -293, y: 5) is_consecutive_8d2f9b root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -485, y: 30, name: \"list\") property(List) list_5f8a3e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_9c1b4d\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_2c0f6f\n\n        instance(x: 752, y: 93) ifexpression_7a3e5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_8d9c6d\") getter_8d9c6d = previous\n        setter(x: 679, y: -313, name: \"setter_3b5a0f\") setter_3b5a0f = previous\n        instance(x: 321, y: -20) for_1e7c4e root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_3b5a0f\") setter_6d2b8c = previous\n        instance(x: -275, y: -35) getat_9a7b1e root.Std_k98ojb.List.GetAt {}\n        ifexpression_7a3e5f.else -> continue_9c1b4d\n        ifexpression_7a3e5f.value -> output_2c0f6f\n        ifexpression_7a3e5f.then -> setter_3b5a0f.execute\n        list_5f8a3e -> for_1e7c4e.items\n        for_1e7c4e.item -> ifexpression_7a3e5f.gen_2\n        for_1e7c4e.index -> ifexpression_7a3e5f.gen_0\n        getter_8d9c6d.value -> ifexpression_7a3e5f.gen_1\n        for_1e7c4e.onItem -> ifexpression_7a3e5f.execute\n        for_1e7c4e.done -> continue_9c1b4d\n        for_1e7c4e.item -> setter_3b5a0f.new_value\n        list_5f8a3e -> getat_9a7b1e.list\n        0 -> getat_9a7b1e.index\n        getat_9a7b1e.itemAtIndex -> setter_6d2b8c.new_value\n        execute_90aaec -> setter_6d2b8c.execute\n        setter_6d2b8c.continue -> for_1e7c4e.reset\n        setter_3b5a0f.continue -> for_1e7c4e.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_9a8f2b root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -521, y: 3, name: \"list\") property(List) list_2a9f6e\n\n        out(x: 1267, y: -1, name: \"output\") property(Bool) output_4b5d8c\n\n        instance(x: 847, y: 0) contains_3a7c8c root.Std_k98ojb.List.Contains {}\n        instance(x: 1059, y: -2) not_6f1e6f root.Std_k98ojb.Logic.Not {}\n        instance(x: 246, y: 2, name: \"transform numbers to true/false\") map_c3d8a5 root.Std_k98ojb.Iteration.Map {}\n        instance(x: -303, y: 0) only_consecutive_1f7c6e root.Std_k98ojb.Query.Filter {\n            where: \"it + 1 == next\"\n        }\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> only_consecutive_1f7c6e.handler\n        list_2a9f6e -> only_consecutive_1f7c6e.list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c3d8a5.handler\n        only_consecutive_1f7c6e.result -> map_c3d8a5.items\n        map_c3d8a5.output_list -> contains_3a7c8c.list\n        false -> contains_3a7c8c.item\n        not_6f1e6f.result -> output_4b5d8c\n        contains_3a7c8c.is_contained -> not_6f1e6f.input\n    }\n\n    \n\n    instance(x: -293, y: 13) is_consecutive_c0a9a2 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -569, y: 438, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"output\") property(Bool) output_57c890\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_542a51 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_542a51 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        list_542a51 -> filter_f3b46d.list\n        filter_f3b46d.result -> firstitem_870503.list\n        list_542a51 -> filter_4d4556.list\n        filter_4d4556.result -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) is_consecutive_f21f44 root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -464, y: 15, name: \"sublist\") property(List) sublist_2a1f8e\n        in(x: -465, y: -220, name: \"list\") property(List) list_5b3c4d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: 321, y: -20, name: \"for_d26972\") for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_5b3c4d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        sublist_2a1f8e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -427, y: 45, name: \"list1\") property(List) list1_3a9f6b\n        in(x: -428, y: -142, name: \"list2\") property(List) list2_7c8e5d\n\n        out(x: 1110, y: -99, name: \"output\") property(Bool) output_4b1f3a\n\n        instance(x: -198, y: -105, name: \"length of list2\") length_6e9b1d root.Std_k98ojb.List.Length {}\n        instance(x: 238, y: -102) sub_7c0a8c root.Std_k98ojb.List.Slice {}\n        instance(x: 552, y: -101) contains_3f5a4c root.Std_k98ojb.List.Contains {}\n        list2_7c8e5d -> length_6e9b1d.list\n        func() {\n            in(x: -0, y: -16, name: \"index\") property(Number) index_1f4b3c\n\n            out(x: 411, y: 49, name: \"output\") property(List) output_5a8e2c\n\n            instance(x: 226, y: 56) add_7d6c0c root.Std_k98ojb.List.Add {}\n            index_1f4b3c -> add_7d6c0c.index\n            list1_3a9f6b -> add_7d6c0c.list\n            add_7d6c0c.listWithItem -> output_5a8e2c\n        } -> sub_7c0a8c.start\n        length_6e9b1d.length -> sub_7c0a8c.end\n        list1_3a9f6b -> sub_7c0a8c.list\n        sub_7c0a8c.slice -> contains_3f5a4c.list\n        list2_7c8e5d -> contains_3f5a4c.item\n        contains_3f5a4c.is_contained -> output_4b1f3a\n    }\n\n    \n\n    instance(x: -68, y: 54) is_sublist_6e9b1d root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 0, name: \"sublist\") property(List) sublist_1e9f3b\n        in(x: -308, y: -210, name: \"list\") property(List) list_7c6d8a\n\n        out(x: 1075, y: -105, name: \"output\") property(Bool) output_2b4b0f\n\n        instance(x: -99, y: -110, name: \"sublist length\") length_9e3b1f root.Std_k98ojb.List.Length {}\n        instance(x: 205, y: -107) contains_7a8d6c root.Std_k98ojb.List.Contains {}\n        sublist_1e9f3b -> length_9e3b1f.list\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_2c4b5a\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_7d9e6c\n\n            instance(x: 226, y: 56) slice_3f0f1a root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) equal_8a4c5f root.Std_k98ojb.Logic.Equal {}\n            current_2c4b5a -> slice_3f0f1a.list\n            length_9e3b1f.length -> slice_3f0f1a.start\n            -1 -> slice_3f0f1a.end\n            sublist_1e9f3b -> equal_8a4c5f.left\n            slice_3f0f1a.slice -> equal_8a4c5f.right\n            equal_8a4c5f.result -> output_7d9e6c\n        } -> contains_7a8d6c.handler\n        list_7c6d8a -> contains_7a8d6c.list\n        contains_7a8d6c.is_contained -> output_2b4b0f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_3e1f5f root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 20, name: \"sublist\") property(List) sublist_5e9a6f\n        in(x: -304, y: -165, name: \"list\") property(List) list_7c1b3d\n\n        out(x: 1070, y: -115, name: \"output\") property(Bool) output_2a4c8d\n\n        instance(x: -94, y: -119, name: \"length of sublist\") length_5e9a6f root.Std_k98ojb.List.Length {}\n        instance(x: 194, y: -118) sub_7c1b3d root.Std_k98ojb.List.Slice {}\n        instance(x: 504, y: -117) contains_8a2b4f root.Std_k98ojb.List.Contains {}\n        sublist_5e9a6f -> length_5e9a6f.list\n        list_7c1b3d -> sub_7c1b3d.list\n        0 -> sub_7c1b3d.start\n        length_5e9a6f.length -> sub_7c1b3d.end\n        sublist_5e9a6f -> contains_8a2b4f.item\n        sub_7c1b3d.slice -> contains_8a2b4f.list\n        contains_8a2b4f.is_contained -> output_2a4c8d\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_9e5d6 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -375, y: 15, name: \"list1\") property(List) list1_3e6b2f\n        in(x: -376, y: -166, name: \"list2\") property(List) list2_5c9a8d\n\n        out(x: 1110, y: -110, name: \"output\") property(Bool) output_7c1b3e\n\n        instance(x: -132, y: -112, name: \"length of list2\") length_4f6a6f root.Std_k98ojb.List.Length {}\n        instance(x: 278, y: -113) greaterthan_5d9a0c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 504, y: -112) sub_7e8b4c root.Std_k98ojb.Math.Sub {}\n        instance(x: 730, y: -111) count_1f3f6f root.Std_k98ojb.Std.Count {}\n        instance(x: 956, y: -110) for_5d2a0c root.Std_k98ojb.Std.For {}\n        instance(x: 1184, y: -109) contains_7e8b48 root.Std_k98ojb.List.Contains {}\n        list1_3e6b2f -> length_4f6a6f.list\n        length_4f6a6f.length -> greaterthan_5d9a0c.left\n        0 -> greaterthan_5d9a0c.right\n        greaterthan_5d9a0c.result -> sub_7e8b4c.first\n        list1_3e6b2f -> sub_7e8b4c.second\n        sub_7e8b4c.result -> count_1f3f6f.count\n        0 -> for_5d2a0c.index\n        greaterthan_5d9a0c.result -> for_5d2a0c.to\n        list1_3e6b2f -> for_5d2a0c.items\n        func() {\n            in(x: -29, y: 11, name: \"current\") property(Number) index_7e8b4c\n\n            out(x: 703, y: 17, name: \"output\") property(Bool) output_1f3f6f\n\n            instance(x: 226, y: 24) slice_5d9a0c root.Std_k98ojb.List.Slice {}\n            instance(x: 453, y: 23) contains_7e8b4c root.Std_k98ojb.List.Contains {}\n            index_7e8b4c -> slice_5d9a0c.start\n            list2_5c9a8d -> slice_5d9a0c.list\n            count_1f3f6f.count -> slice_5d9a0c.end\n            -1 -> slice_5d9a0c.end\n            slice_5d9a0c.slice -> contains_7e8b4c.list\n            list2_5c9a8d -> contains_7e8b4c.item\n            contains_7e8b4c.contains -> output_1f3f6f\n        } -> for_5d2a0c.onItem\n        for_5d2a0c.done -> count_1f3f6f.reset\n        for_5d2a0c.item -> contains_7e8b48.list\n        0 -> contains_7e8b48.item\n        contains_7e8b48.is_contained -> output_7c1b3e\n    }\n\n    \n\n    instance(x: -20, y: -57) is_sublist_5d9a0c root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 5, name: \"list1\") property(List) list1_4a3f2d\n        in(x: -464, y: 138, name: \"list2\") property(List) list2_8e6c7b\n\n        out(x: 1227, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_5bbcd7\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list2_8e6c7b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_5bbcd7\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_4a3f2d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        output_5bbcd7 -> output_5bbcd7\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"list1\") property(List) list1_5e3f8d\n        in(x: -467, y: -210, name: \"list2\") property(List) list2_9b7c0a\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_5e3f8d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_9b7c0a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> is_sublist.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -425, y: 5, name: \"sublist\") property(List) sublist_2e9f6d\n        in(x: -423, y: -175, name: \"list\") property(List) list_7c3a8b\n\n        out(x: 1070, y: -110, name: \"output\") property(Bool) output_1a4b5c\n\n        instance(x: -179, y: -105, name: \"sublist length\") length_9f2d6e root.Std_k98ojb.List.Length {}\n        instance(x: 0, y: -104, name: \"list length\") length_8b7a3f root.Std_k98ojb.List.Length {}\n        instance(x: 223, y: -105) greaterthan_5c1d2e root.Std_k98ojb.Math.GreaterThan {}\n        sublist_2e9f6d -> length_9f2d6e.list\n        list_7c3a8b -> length_8b7a3f.list\n        length_9f2d6e.length -> greaterthan_5c1d2e.left\n        length_8b7a3f.length -> greaterthan_5c1d2e.right\n        instance(x: 446, y: -105) not_4e0c9f root.Std_k98ojb.Logic.Not {}\n        not_4e0c9f.result -> ifexpression_6c8e9d.input\n        instance(x: 658, y: -104) filter_1a5b2c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -29, y: -25, name: \"current\") property(List) current_7f3a8e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_9c2d6b\n\n            instance(x: 226, y: 56) contains_5c1d2e root.Std_k98ojb.List.Contains {}\n            sublist_2e9f6d -> contains_5c1d2e.list\n            current_7f3a8e -> contains_5c1d2e.item\n            contains_5c1d2e.is_contained -> output_9c2d6b\n        } -> filter_1a5b2c.handler\n        list_7c3a8b -> filter_1a5b2c.items\n        instance(x: 878, y: -104) equal_0f4b5c root.Std_k98ojb.Logic.Equal {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_1a5b2c.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n        filter_1a5b2c.output_list -> equal_0f4b5c.left\n        sublist_2e9f6d -> equal_0f4b5c.right\n        instance(x: 1001, y: -105) ifexpression_6c8e9d root.Std_k98ojb.Std.IfExpression {\n            expression: \"not(list_length > sublist_length) && filter_result == sublist\"\n        }\n        ifexpression_6c8e9d.value -> output_1a4b5c\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -275, y: 30, name: \"sublist\") property(List) sublist_1e8a9f\n        in(x: -276, y: -140, name: \"list\") property(List) list_5b3d7c\n\n        out(x: 1210, y: -120, name: \"output\") property(Bool) output_4f6c2d\n\n        instance(x: -1, y: -116, name: \"find sublist in list\") find_9e8a0c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -29, y: 16, name: \"current\") property(List) current_3f2d7f\n            in(x: -22, y: 81, name: \"_index\") property(Number) _index_6a1c8e\n\n            out(x: 717, y: 51, name: \"output\") property(Bool) output_9b5c4f\n\n            instance(x: 227, y: 58) contains_2d0b7f root.Std_k98ojb.List.Contains {}\n            sublist_1e8a9f -> contains_2d0b7f.list\n            current_3f2d7f -> contains_2d0b7f.item\n            contains_2d0b7f.is_contained -> output_9b5c4f\n        } -> find_9e8a0c.predicate\n        func() {\n            in(x: -29, y: 16, name: \"current\") property(List) current_3f2d7f\n\n            out(x: 717, y: 51, name: \"output\") property(Bool) output_9b5c4f\n\n            instance(x: 227, y: 58) contains_2d0b7f root.Std_k98ojb.List.Contains {}\n            sublist_1e8a9f -> contains_2d0b7f.list\n            current_3f2d7f -> contains_2d0b7f.item\n            contains_2d0b7f.is_contained -> output_9b5c4f\n        } -> find_9e8a0c.handler\n        list_5b3d7c -> find_9e8a0c.items\n        find_9e8a0c.item -> output_4f6c2d\n    }\n\n    \n\n    instance(x: 70, y: -88) is_sublist_1c6c0f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -427, y: 0, name: \"list1\") property(List) list1_5a8f9b\n        in(x: -425, y: 190, name: \"list2\") property(List) list2_7e6d4c\n\n        out(x: 1023, y: 95, name: \"output\") property(Bool) output_0e1f5a\n\n        instance(x: -179, y: 94, name: \"is sublist\") filter_9b8a2c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -29, y: -16, name: \"current\") property(List) current_1e7d5f\n            in(x: -22, y: 79, name: \"_index\") property(Number) _index_2a9c0b\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_3a6c4f\n\n            instance(x: 226, y: 56) contains_7e8d1f root.Std_k98ojb.List.Contains {}\n            instance(x: 463, y: 51) notequal_5e0b9c root.Std_k98ojb.Logic.NotEqual {}\n            list2_7e6d4c -> contains_7e8d1f.list\n            current_1e7d5f -> contains_7e8d1f.item\n            contains_7e8d1f.is_contained -> notequal_5e0b9c.left\n            0 -> notequal_5e0b9c.right\n            notequal_5e0b9c.result -> output_3a6c4f\n        } -> filter_9b8a2c.handler\n        instance(x: -277, y: 94) generateRange_1d7c9f root.Std_k98ojb.List.GenerateRange {}\n        list1_5a8f9b -> generateRange_1d7c9f.from\n        length_6e0f4e.length -> generateRange_1d7c9f.to\n        instance(x: -277, y: 239) length_6e0f4e root.Std_k98ojb.List.Length {}\n        list2_7e6d4c -> length_6e0f4e.list\n        generateRange_1d7c9f.range -> filter_9b8a2c.items\n        instance(x: -277, y: 384) map_3e5b5c root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -29, y: -16, name: \"current\") property(Number) current_1e7d5f\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_3a6c4f\n\n            instance(x: 226, y: 56) slice_9b8a2c root.Std_k98ojb.List.Slice {}\n            list1_5a8f9b -> slice_9b8a2c.list\n            current_1e7d5f -> slice_9b8a2c.start\n            length_6e0f4e.length -> slice_9b8a2c.end\n            slice_9b8a2c.slice -> output_3a6c4f\n        } -> map_3e5b5c.handler\n        generateRange_1d7c9f.range -> map_3e5b5c.items\n        filter_9b8a2c.output_list -> contains_0b7c5c.list\n        true -> contains_0b7c5c.item\n        instance(x: 424, y: 95) contains_0b7c5c root.Std_k98ojb.List.Contains {}\n        contains_0b7c5c.is_contained -> output_0e1f5a\n    }\n\n    \n\n    instance(x: -63, y: -3) is_sublist_8d4f6c root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_3e8f9a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c4b6d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 29, name: \"index\") property(Number) index_8c3e1a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_4b0f5d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_8c3e1a -> add_4b0f5d.first\n            1 -> add_4b0f5d.second\n            elem_9f6850 -> notequal_807ffd.left\n            add_4b0f5d.result -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3e8f9a -> find_6d05b0.items\n        find_6d05b0.index -> missing_7c4b6d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing {\n        in(x: -287, y: 0, name: \"list\") property(List) list_1f8d5a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: -2, name: \"index\") property(Number) index_7e8c5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -2, y: 36) add_9e3c6f root.Std_k98ojb.Math.Add {}\n            1 -> add_9e3c6f.second\n            index_7e8c5a -> add_9e3c6f.first\n            add_9e3c6f.result -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_1f8d5a -> find_6d05b0.items\n        find_6d05b0.index -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a9f8e\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_5c2b4d\n\n        instance(x: 0, y: 0) find_7b6a2f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_8e5c1d\n            in(x: -114, y: -30, name: \"index\") property(Number) index_9f2a7b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3f4b6a\n\n            instance(x: 89, y: 29) sub_1d8e5c root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_2f9b7d root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_2f9b7d.right\n            sub_1d8e5c.result -> notequal_2f9b7d.left\n            index_9f2a7b -> sub_1d8e5c.first\n            elem_8e5c1d -> sub_1d8e5c.second\n            notequal_2f9b7d.result -> bool_3f4b6a\n        } -> find_7b6a2f.predicate\n        list_3a9f8e -> find_7b6a2f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1c5d4f\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9e3b7a\n\n            instance(x: 89, y: 29) sub_2b8e6c root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) greaterthan_1f9d7e root.Std_k98ojb.Math.GreaterThan {}\n            0 -> greaterthan_1f9d7e.left\n            sub_2b8e6c.result -> greaterthan_1f9d7e.right\n            index_9f2a7b -> sub_2b8e6c.first\n            elem_1c5d4f -> sub_2b8e6c.second\n            greaterthan_1f9d7e.result -> bool_9e3b7a\n        } -> find_7b6a2f.index_predicate\n        find_7b6a2f.item -> number_5c2b4d\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_1e8b7f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing {\n        in(x: -283, y: 0, name: \"list\") property(List) list_3e9f5a\n\n        out(x: 592, y: -1, name: \"number\") property(Number) number_6c2b7d\n\n        instance(x: 0, y: 0) find_4e8b5f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1a9c3e\n            in(x: -111, y: 35, name: \"index\") property(Number) index_8f2d7b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_4f5a6d\n\n            instance(x: 89, y: 29) add_3c9e1f root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_7f8b2d root.Std_k98ojb.Logic.NotEqual {}\n            index_8f2d7b -> add_3c9e1f.first\n            1 -> add_3c9e1f.second\n            elem_1a9c3e -> notequal_7f8b2d.left\n            add_3c9e1f.result -> notequal_7f8b2d.right\n            notequal_7f8b2d.result -> bool_4f5a6d\n        } -> find_6d05b0.predicate\n        list_3e9f5a -> find_6d05b0.items\n        find_6d05b0.index -> number_6c2b7d\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_8b4f1e root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing {\n        in(x: -281, y: 0, name: \"list\") property(List) list_9e4b6a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 29, name: \"index\") property(Number) index_ea1c7e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 309, y: -1) add_9e4c0f root.Std_k98ojb.Math.Add {}\n            1 -> add_9e4c0f.second\n            index_ea1c7e -> add_9e4c0f.first\n            add_9e4c0f.result -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9e4b6a -> find_6d05b0.items\n        find_6d05b0.index -> index_ea1c7e\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1a8f6e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c3d4b\n\n        instance(x: 0, y: 0) find_2e5c9c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1a8f6e\n            in(x: -108, y: 35, name: \"index\") property(Number) index_7c3d4b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2e5c9c\n\n            instance(x: 89, y: 29) sub_1a8f6e root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_7c3d4b root.Std_k98ojb.Logic.NotEqual {}\n            elem_1a8f6e -> sub_1a8f6e.first\n            index_7c3d4b -> sub_1a8f6e.second\n            sub_1a8f6e.result -> notequal_7c3d4b.left\n            0 -> notequal_7c3d4b.right\n            notequal_7c3d4b.result -> bool_2e5c9c\n        } -> find_2e5c9c.predicate\n        list_1a8f6e -> find_2e5c9c.items\n        index_7c3d4b -> find_2e5c9c.index\n        find_2e5c9c.item -> missing_7c3d4b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1a8f6e root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -283, y: 0, name: \"list\") property(List) list_9a9c70\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(property(Number)) index\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9a9c70 -> find_6d05b0.items\n        find_6d05b0.index -> index\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_node root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1a9f6e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c2b3d\n\n        instance(x: 0, y: 0) find_8f5b4f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 29, name: \"index\") property(Number) index_3c2d8e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_1b5f6e root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            sub_1b5f6e.result -> notequal_807ffd.left\n            index_3c2d8e -> sub_1b5f6e.first\n            elem_9f6850 -> sub_1b5f6e.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_8f5b4f.predicate\n        list_1a9f6e -> find_8f5b4f.items\n        find_8f5b4f.index + 1 -> missing_7c2b3d\n        find_8f5b4f.item -> missing_7c2b3d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing {\n        in(x: -281, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 46, y: 158, name: \"missing\") property(Number) missing_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_1e9b3a root.Std_k98ojb.Std.For {\n            items: list_9f7759\n        }\n        func() {\n            in(x: 0, y: 0, name: \"index\") property(Number) index_8c5d7f\n\n            out(x: -113, y: 34, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_8c5d7f -> modulo_1088d5.value\n            1 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_1e9b3a.on_item\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index + 1 != item\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = missing\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = missing\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = missing\n        index_8c5d7f -> ifexpression_e38995.gen_0\n        for_1e9b3a.item -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> missing_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        index_8c5d7f -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        for_1e9b3a.item -> setter_37db7f.new_value\n        for_1e9b3a.done -> continue_685c8f\n        for_1e9b3a.trigger -> ifexpression_e38995.execute\n        for_1e9b3a.reset -> continue_685c8f\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) smallest_missing_d6e930 root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9a8b6f\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 29, name: \"index\") property(Number) index_7c3d1e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_2f0b9c root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_2f0b9c.result -> notequal_807ffd.left\n            index_7c3d1e -> sub_2f0b9c.first\n            elem_9f6850 -> sub_2f0b9c.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9a8b6f -> find_6d05b0.items\n        find_6d05b0.index -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -124, y: 0, name: \"input\") property(String) input_9f8a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1c6b4e\n\n        instance(x: 0, y: 1) replace_7f5a3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9d8b2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6e4c1e root.Std_k98ojb.Strings.Replace {}\n        input_9f8a3d -> replace_7f5a3c.input\n        \" \" -> replace_7f5a3c.search\n        \":\" -> replace_7f5a3c.replace\n        replace_7f5a3c.output -> replace_9d8b2f.input\n        \",\" -> replace_9d8b2f.search\n        \":\" -> replace_9d8b2f.replace\n        replace_9d8b2f.output -> replace_6e4c1e.input\n        \".\" -> replace_6e4c1e.search\n        \":\" -> replace_6e4c1e.replace\n        replace_6e4c1e.output -> output_1c6b4e\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -120, y: 0, name: \"input\") property(String) input_1\n        out(x: 530, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_3c8a6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4d7e9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_5b1b6f root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_3c8a6f.input\n        \" \" -> replace_3c8a6f.search\n        \":\" -> replace_3c8a6f.replace\n        replace_3c8a6f.output -> replace_4d7e9f.input\n        \",\" -> replace_4d7e9f.search\n        \":\" -> replace_4d7e9f.replace\n        replace_4d7e9f.output -> replace_5b1b6f.input\n        \".\" -> replace_5b1b6f.search\n        \":\" -> replace_5b1b6f.replace\n        replace_5b1b6f.output -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -122, y: 0, name: \"input\") property(String) input_1a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1a\n\n        instance(x: 0, y: 1) replace_5e3c4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6d7d8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9a5f1f root.Std_k98ojb.Strings.Replace {}\n        input_1a -> replace_5e3c4f.input\n        \" \" -> replace_5e3c4f.search\n        \":\" -> replace_5e3c4f.replace\n        replace_5e3c4f.output -> replace_6d7d8f.input\n        \",\" -> replace_6d7d8f.search\n        \":\" -> replace_6d7d8f.replace\n        replace_6d7d8f.output -> replace_9a5f1f.input\n        \".\" -> replace_9a5f1f.search\n        \":\" -> replace_9a5f1f.replace\n        replace_9a5f1f.output -> output_1a\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -123, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_5f8d9c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7e3a4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6b7c1f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5f8d9c.input\n        \" \" -> replace_5f8d9c.search\n        \":\" -> replace_5f8d9c.replace\n        replace_5f8d9c.output -> replace_7e3a4c.input\n        \",\" -> replace_7e3a4c.search\n        \":\" -> replace_7e3a4c.replace\n        replace_7e3a4c.output -> replace_6b7c1f.input\n        \".\" -> replace_6b7c1f.search\n        \":\" -> replace_6b7c1f.replace\n        replace_6b7c1f.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_2d9e8a root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -124, y: 0, name: \"input\") property(String) input_1f9b2a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_3e5d8c\n\n        instance(x: 0, y: 1) replace_7e6d4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9f3a2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c5c8d1 root.Std_k98ojb.Strings.Replace {}\n        input_1f9b2a -> replace_7e6d4c.input\n        \" \" -> replace_7e6d4c.search\n        \":\" -> replace_7e6d4c.replace\n        replace_7e6d4c.output -> replace_9f3a2f.input\n        \",\" -> replace_9f3a2f.search\n        \":\" -> replace_9f3a2f.replace\n        replace_9f3a2f.output -> replace_c5c8d1.input\n        \".\" -> replace_c5c8d1.search\n        \":\" -> replace_c5c8d1.replace\n        replace_c5c8d1.output -> output_3e5d8c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_7a9f2b root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -156, y: 0, name: \"input\") property(String) input_2f8a6e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4b9c3d\n\n        instance(x: 0, y: 1) replace_5a7d3f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6e8c2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4a9d1e root.Std_k98ojb.Strings.Replace {}\n        input_2f8a6e -> replace_5a7d3f.input\n        \" \" -> replace_5a7d3f.search\n        \":\" -> replace_5a7d3f.replace\n        replace_5a7d3f.output -> replace_6e8c2d.input\n        \",\" -> replace_6e8c2d.search\n        \":\" -> replace_6e8c2d.replace\n        replace_6e8c2d.output -> replace_4a9d1e.input\n        \".\" -> replace_4a9d1e.search\n        \":\" -> replace_4a9d1e.replace\n        replace_4a9d1e.output -> output_4b9c3d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -121, y: 0, name: \"input\") property(String) input_9a3f1e\n\n        out(x: 520, y: -2, name: \"output\") property(String) output_7c6d8b\n\n        instance(x: 0, y: 1) replace_4b5c8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9e3f2a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_7d6f4a root.Std_k98ojb.Strings.Replace {}\n        input_9a3f1e -> replace_4b5c8c.input\n        \" \" -> replace_4b5c8c.search\n        \":\" -> replace_4b5c8c.replace\n        replace_4b5c8c.output -> replace_9e3f2a.input\n        \",\" -> replace_9e3f2a.search\n        \":\" -> replace_9e3f2a.replace\n        replace_9e3f2a.output -> replace_7d6f4a.input\n        \".\" -> replace_7d6f4a.search\n        \":\" -> replace_7d6f4a.replace\n        replace_7d6f4a.output -> output_7c6d8b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_3e9b1f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"input\") property(String) input_1a3f6e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4c9d5b\n\n        instance(x: 0, y: 1) replace_8e7c0f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a6b2e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9d5f1f root.Std_k98ojb.Strings.Replace {}\n        input_1a3f6e -> replace_8e7c0f.input\n        \" \" -> replace_8e7c0f.search\n        \":\" -> replace_8e7c0f.replace\n        replace_8e7c0f.output -> replace_3a6b2e.input\n        \",\" -> replace_3a6b2e.search\n        \":\" -> replace_3a6b2e.replace\n        replace_3a6b2e.output -> replace_9d5f1f.input\n        \".\" -> replace_9d5f1f.search\n        \":\" -> replace_9d5f1f.replace\n        replace_9d5f1f.output -> output_4c9d5b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_3a7e2f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -121, y: 0, name: \"input\") property(String) input_1a8b9f\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_3e6d5c\n\n        instance(x: 0, y: 1) replace_7a4b1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8c9d2e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_5f3b6c root.Std_k98ojb.Strings.Replace {}\n        input_1a8b9f -> replace_7a4b1f.input\n        \" \" -> replace_7a4b1f.search\n        \":\" -> replace_7a4b1f.replace\n        replace_7a4b1f.output -> replace_8c9d2e.input\n        \",\" -> replace_8c9d2e.search\n        \":\" -> replace_8c9d2e.replace\n        replace_8c9d2e.output -> replace_5f3b6c.input\n        \".\" -> replace_5f3b6c.search\n        \":\" -> replace_5f3b6c.replace\n        replace_5f3b6c.output -> output_3e6d5c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"input\") property(String) input_2f3a8e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4b1c7d\n\n        instance(x: 0, y: 1) replace_9a5b6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3e8b2a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_7c4d1e root.Std_k98ojb.Strings.Replace {}\n        input_2f3a8e -> replace_9a5b6f.input\n        \" \" -> replace_9a5b6f.search\n        \":\" -> replace_9a5b6f.replace\n        replace_9a5b6f.output -> replace_3e8b2a.input\n        \",\" -> replace_3e8b2a.search\n        \":\" -> replace_3e8b2a.replace\n        replace_3e8b2a.output -> replace_7c4d1e.input\n        \".\" -> replace_7c4d1e.search\n        \":\" -> replace_7c4d1e.replace\n        replace_7c4d1e.output -> output_4b1c7d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -305, y: 17, name: \"input\") property(String) input_8f1e9d\n\n        out(x: 1055, y: 23, name: \"output\") property(Bool) output_7c0a6b\n\n        instance(x: -141, y: 18, name: \"characters\") characters_d3d2ec root.Std_k98ojb.Strings.Characters {}\n        instance(x: 226, y: 22) filter_8e1f9f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 532, y: 23) length_7a6c5c root.Std_k98ojb.List.Length {}\n        instance(x: 747, y: 24) equal_4d2b3c root.Std_k98ojb.Logic.Equal {}\n        characters_d3d2ec.input -> filter_8e1f9f.items\n        func() {\n            in(x: -28, y: 41, name: \"current\") property(String) current_7a6b0c\n\n            out(x: 384, y: 43, name: \"output\") property(Bool) output_4d5e3c\n\n            instance(x: 152, y: 44) equal_9f1c2c root.Std_k98ojb.Logic.Equal {}\n            current_7a6b0c -> equal_9f1c2c.left\n            characters_d3d2ec.characters[0] -> equal_9f1c2c.right\n            equal_9f1c2c.result -> output_4d5e3c\n        } -> filter_8e1f9f.handler\n        length_7a6c5c.length -> equal_4d2b3c.left\n        1 -> equal_4d2b3c.right\n        filter_8e1f9f.output_list -> length_7a6c5c.list\n        equal_4d2b3c.result -> output_7c0a6b\n    }\n\n    \n\n    instance(x: -55, y: 111) is_same_1f6f4 root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -280, y: 11, name: \"input\") property(String) input_1a9f3e\n\n        out(x: 1065, y: 7, name: \"output\") property(Bool) output_8b2c0d\n\n        instance(x: -126, y: 10) characters_4b6c8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 334, y: 11) filter_5e9a3f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 634, y: -2) equal_7d1c0f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 855, y: 10) length_6c4c8f root.Std_k98ojb.List.Length {}\n        instance(x: 1003, y: 11) lessthanorequal_9e2d1a root.Std_k98ojb.Math.LessThanOrEqual {}\n        characters_4b6c8c.characters -> filter_5e9a3f.items\n        func() {\n            in(x: -32, y: 43, name: \"current\") property(String) current_0c2d7e\n\n            out(x: 542, y: 41, name: \"output\") property(Bool) output_1b5f4a\n\n            instance(x: 225, y: 42) equal_3f6c8f root.Std_k98ojb.Logic.Equal {}\n            current_0c2d7e -> equal_3f6c8f.right\n            characters_4b6c8c.characters[0] -> equal_3f6c8f.left\n            equal_3f6c8f.result -> output_1b5f4a\n        } -> filter_5e9a3f.handler\n        length_6c4c8f.length -> lessthanorequal_9e2d1a.right\n        1 -> lessthanorequal_9e2d1a.left\n        lessthanorequal_9e2d1a.result -> equal_7d1c0f.right\n        true -> equal_7d1c0f.left\n        filter_5e9a3f.output_list.length -> length_6c4c8f.list\n        equal_7d1c0f.result -> output_8b2c0d\n    }\n\n    \n\n    instance(x: -93, y: 88) is_same_7e9bda root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -293, y: 6, name: \"input\") property(String) input_1f3e8d\n\n        out(x: 1165, y: 7, name: \"output\") property(Bool) output_4b2c0a\n\n        instance(x: -91, y: 9) characters_6f2b5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 8) filter_1e7d3f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 360, y: 7) length_4a9d0c root.Std_k98ojb.List.Length {}\n        instance(x: 574, y: 6) equal_f5a2ec root.Std_k98ojb.Logic.Equal {}\n        instance(x: 788, y: 5) lessthanorequal_e3f8e1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        characters_6f2b5c.input -> filter_1e7d3f.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(String) current_0a4a8e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_f9c2b7\n\n            instance(x: 226, y: 56) equal_3d1f5c root.Std_k98ojb.Logic.Equal {}\n            current_0a4a8e -> equal_3d1f5c.left\n            characters_6f2b5c.characters[0] -> equal_3d1f5c.right\n            equal_3d1f5c.result -> output_f9c2b7\n        } -> filter_1e7d3f.handler\n        length_4a9d0c.length -> lessthanorequal_e3f8e1.left\n        1 -> lessthanorequal_e3f8e1.right\n        lessthanorequal_e3f8e1.result -> equal_f5a2ec.left\n        filter_1e7d3f.output_list -> length_4a9d0c.list\n        true -> equal_f5a2ec.right\n        equal_f5a2ec.result -> output_4b2c0a\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_1e8b7f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -278, y: 14, name: \"input\") property(String) input_1f3e4d\n\n        out(x: 1016, y: 5, name: \"output\") property(Bool) output_9a7c2b\n\n        instance(x: -93, y: 15) characters_c8e0da root.Std_k98ojb.Strings.Characters {}\n        instance(x: 242, y: 14) filter_6f4d1f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 532, y: 13) length_7a3c9c root.Std_k98ojb.List.Length {}\n        instance(x: 741, y: 12) equal_f8e5da root.Std_k98ojb.Logic.Equal {}\n        characters_c8e0da.input -> filter_6f4d1f.items\n        func() {\n            in(x: -30, y: 46, name: \"element\") property(String) element_7c9a3f\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_2e5b8d\n\n            instance(x: 106, y: 17) equal_1e0c6 root.Std_k98ojb.Logic.Equal {}\n            element_7c9a3f -> equal_1e0c6.left\n            characters_c8e0da.characters[0] -> equal_1e0c6.right\n            equal_1e0c6.result -> out_2e5b8d\n        } -> filter_6f4d1f.handler\n        length_7a3c9c.list -> equal_f8e5da.left\n        1 -> equal_f8e5da.right\n        filter_6f4d1f.output_list -> length_7a3c9c.list\n        equal_f8e5da.result -> output_9a7c2b\n    }\n\n    \n\n    instance(x: -76, y: 59) is_same_0c9b5c root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -305, y: 0, name: \"input\") property(String) input_9a1e3f\n\n        out(x: 1056, y: 5, name: \"output\") property(Bool) output_eb7c8d\n\n        instance(x: -148, y: 4) characters_2b0b8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 346, y: 3) filter_9a6f1e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 655, y: -5) length_7d4a82 root.Std_k98ojb.List.Length {}\n        instance(x: 879, y: 2) equal_8c0e3f root.Std_k98ojb.Logic.Equal {}\n        characters_2b0b8c.characters -> filter_9a6f1e.items\n        func() {\n            in(x: -26, y: 46, name: \"current\") property(String) current_7d5e4f\n\n            out(x: 391, y: 25, name: \"output\") property(Bool) output_2b9c8a\n\n            instance(x: 144, y: 31) equal_1f3a6 root.Std_k98ojb.Logic.Equal {}\n            current_7d5e4f -> equal_1f3a6.left\n            characters_2b0b8c.characters[0] -> equal_1f3a6.right\n            equal_1f3a6.result -> output_2b9c8a\n        } -> filter_9a6f1e.handler\n        length_7d4a82.list -> input_9a1e3f\n        filter_9a6f1e.output_list -> length_7d4a82.list\n        1 -> equal_8c0e3f.left\n        length_7d4a82.length -> equal_8c0e3f.right\n        equal_8c0e3f.result -> output_eb7c8d\n    }\n\n    \n\n    instance(x: -80, y: 107) check_same_5a6f1e root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -296, y: 12, name: \"input\") property(String) input_8f1e6d\n\n        out(x: 1212, y: 9, name: \"output\") property(Bool) output_5b0c7a\n\n        instance(x: -141, y: 13) characters_4f3c0c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 321, y: 10) length_8d6e9f root.Std_k98ojb.List.Length {}\n        instance(x: 560, y: 11) getat_7a5e1f root.Std_k98ojb.List.GetAt {}\n        instance(x: 799, y: 12) equal_3c2c0c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1038, y: 13) filter_9d4f1c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1277, y: 14) length_5e6a3c root.Std_k98ojb.List.Length {}\n        characters_4f3c0c.characters -> getat_7a5e1f.list\n        input_8f1e6d -> characters_4f3c0c.input\n        0 -> getat_7a5e1f.index\n        getat_7a5e1f.itemAtIndex -> equal_3c2c0c.left\n        characters_4f3c0c.characters -> filter_9d4f1c.items\n        func() {\n            in(x: -23, y: 36, name: \"current\") property(Any) current_7e5b8a\n\n            out(x: 768, y: 49, name: \"output\") property(Bool) output_9d4f1c\n\n            instance(x: 232, y: 47) equal_3c2c0c root.Std_k98ojb.Logic.Equal {}\n            current_7e5b8a -> equal_3c2c0c.right\n            getat_7a5e1f.itemAtIndex -> equal_3c2c0c.left\n            equal_3c2c0c.result -> output_9d4f1c\n        } -> filter_9d4f1c.handler\n        length_8d6e9f.length -> equal_3c2c0c.right\n        equal_3c2c0c.result -> length_5e6a3c.list\n        1 -> length_5e6a3c.listWithItem\n        length_5e6a3c.length -> output_5b0c7a\n    }\n\n    \n\n    instance(x: -122, y: -4) is_same_f8d2f9 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -278, y: 10, name: \"input\") property(String) input_8e1f3d\n\n        out(x: 1214, y: 20, name: \"output\") property(Bool) output_7a2c0b\n\n        instance(x: -99, y: 11) characters_6a5c9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 338, y: 19) filter_3d1e8c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 639, y: 18) equal_7f4f2c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1006, y: 17) length_5a0d9c root.Std_k98ojb.List.Length {}\n        instance(x: 1068, y: -1) lessthanorequal_3e7c4f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1126, y: 20) ifexpression_0d9a2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        characters_6a5c9f.input -> filter_3d1e8c.items\n        func() {\n            in(x: -26, y: 44, name: \"current\") property(String) current_2b4c7f\n\n            out(x: 493, y: 27, name: \"output\") property(Bool) output_5a3d1e\n\n            instance(x: 164, y: 33) length_9e6f8f root.Std_k98ojb.Strings.Length {}\n            instance(x: 328, y: 30) equal_7c2f4f root.Std_k98ojb.Logic.Equal {}\n            1 -> length_9e6f8f.input\n            length_9e6f8f.length -> equal_7c2f4f.left\n            current_2b4c7f -> equal_7c2f4f.right\n            equal_7c2f4f.result -> output_5a3d1e\n        } -> filter_3d1e8c.handler\n        filter_3d1e8c.output_list -> length_5a0d9c.list\n        1 -> lessthanorequal_3e7c4f.left\n        length_5a0d9c.length -> lessthanorequal_3e7c4f.right\n        lessthanorequal_3e7c4f.result -> ifexpression_0d9a2f.predicate\n        filter_3d1e8c.output_list -> ifexpression_0d9a2f.items\n        func() {\n            in(x: -30, y: 54, name: \"current\") property(String) current_5b6a4f\n\n            out(x: 555, y: 37, name: \"output\") property(Bool) output_7c1e9d\n\n            instance(x: 176, y: 46) length_8c0b3f root.Std_k98ojb.Strings.Length {}\n            instance(x: 340, y: 43) equal_6a4c5f root.Std_k98ojb.Logic.Equal {}\n            1 -> length_8c0b3f.input\n            length_8c0b3f.length -> equal_6a4c5f.left\n            current_5b6a4f -> equal_6a4c5f.right\n            equal_6a4c5f.result -> output_7c1e9d\n        } -> ifexpression_0d9a2f.handler\n        input_8e1f3d -> ifexpression_0d9a2f.gen_0\n        ifexpression_0d9a2f.value -> equal_7f4f2c.left\n        ifexpression_0d9a2f.value -> output_b1d7f8\n        input_8e1f3d -> equal_7f4f2c.right\n    }\n\n    \n\n    instance(x: 12, y: -5) is_same_6b4d9f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -287, y: 17, name: \"input\") property(String) input_1f3e5d\n\n        out(x: 1056, y: 10, name: \"output\") property(Bool) output_8b9c2a\n\n        instance(x: -91, y: 16) characters_7e0e4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 17) filter_3d1e5c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 360, y: 18) length_9a6e8c root.Std_k98ojb.List.Length {}\n        instance(x: 574, y: 19) equal_f0f4dc root.Std_k98ojb.Logic.Equal {}\n        input_1f3e5d -> characters_7e0e4f.input\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(String) current_9a6c2e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_1b7d5e\n\n            instance(x: 226, y: 56) equal_3f4c8f root.Std_k98ojb.Logic.Equal {}\n            current_9a6c2e -> equal_3f4c8f.left\n            characters_7e0e4f.characters[0] -> equal_3f4c8f.right\n            equal_3f4c8f.result -> output_1b7d5e\n        } -> filter_3d1e5c.handler\n        characters_7e0e4f.characters -> filter_3d1e5c.items\n        length_9a6e8c.length -> equal_f0f4dc.left\n        filter_3d1e5c.output_list -> length_9a6e8c.list\n        characters_7e0e4f.characters -> equal_f0f4dc.right\n        equal_f0f4dc.result -> output_8b9c2a\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_1d5d6f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -305, y: 13, name: \"input\") property(String) input_9e3a8f\n\n        out(x: 1115, y: 10, name: \"output\") property(Bool) output_6b2c1d\n\n        instance(x: -151, y: 12) characters_7a4b0f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 443, y: 11) uniquelist_9e5e3c root.Std_k98ojb.List.UniqueList {}\n        instance(x: 786, y: 10) length_6d1f8a root.Std_k98ojb.List.Length {}\n        instance(x: 1000, y: 10) equal_f4c7ea root.Std_k98ojb.Logic.Equal {}\n        characters_7a4b0f.characters -> uniquelist_9e5e3c.list\n        length_6d1f8a.length -> equal_f4c7ea.left\n        1 -> equal_f4c7ea.right\n        uniquelist_9e5e3c.uniqueList -> length_6d1f8a.list\n        input_9e3a8f -> characters_7a4b0f.input\n        equal_f4c7ea.result -> output_6b2c1d\n    }\n\n    \n\n    instance(x: -78, y: 124) check_same_5e7f9c root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -285, y: 0, name: \"input\") property(String) input_8f2e9d\n\n        out(x: 557, y: 11, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: 6) characters_5b4c1a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 12) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 11) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 574, y: 10) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        input_8f2e9d -> characters_5b4c1a.input\n        characters_5b4c1a.characters -> length_8166b0.list\n        characters_5b4c1a.characters -> intersection_c7c7e6.left\n        1 -> length_8166b0.list\n        intersection_c7c7e6.intersection -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 80, y: 0) count_digits_2 root.main.count_digits {}\n        instance(x: 240, y: 0) filter_1 root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_1.items\n        instance(x: 440, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_1.output_list -> list_length_node.list\n        list_length_node.length -> output_ai\n    }\n\n    \n    instance(x: -40, y: 0) count_digits_1 root.main.count_digits {}\n\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -40, y: 15) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_digits_1 root.main.count_digits {}\n        instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Count {}\n        characters_node.characters -> count_digits_1.input\n        count_digits_1.output -> count_node.count\n        count_digits_1.execute -> count_node.reset\n        is_numeric_node.value -> count_digits_1.condition\n        characters_node.characters -> is_numeric_node.input\n        count_node.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -50, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_1c2a9f root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_1c2a9f.items\n        instance(x: 50, y: 0) count_node root.Std_k98ojb.Count {}\n        filter_1c2a9f.output_list -> count_node.items\n        count_node.count -> output_ai\n    }\n\n    \n    instance(x: -50, y: 0) characters_node root.main.count_digits.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) filter_1c2a9f root.main.count_digits.Iteration.Filter {\n        handler: \"Std.IsNumeric(it)\"\n    }\n    \n\n    instance(x: 50, y: 0) count_node root.main.count_digits.Count {}\n    \n\n    instance(x: -34, y: 127) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -50, y: 0) strings_characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> strings_characters_node.input\n        instance(x: 0, y: 0) iteration_filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: \"Strings.IsNumeric(it)\"\n        }\n        strings_characters_node.characters -> iteration_filter_node.items\n        instance(x: 50, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        iteration_filter_node.output_list -> list_length_node.list\n        list_length_node.length -> output_ai\n    }\n\n    \n    instance(x: -50, y: 0) count_digits_1 root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -5, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.isNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: -50) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.items\n        list_length_node.length -> output_ai\n    }\n    \n\n    instance(x: 426, y: -303) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -20, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.isNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: -20) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.items\n        list_length_node.length -> output_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_4c9d6a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 30, y: 0) count_digits_2 root.main.count_digits {}\n        instance(x: 60, y: 0) filter_1 root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_1.items\n        instance(x: 90, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_1.output_list -> list_length_node.list\n        list_length_node.length -> output_ai\n    }\n\n    \n    instance(x: -15, y: 0) count_digits_2 root.main.count_digits {}\n\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -20, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_1c8a2e root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_1c8a2e.items\n        instance(x: 0, y: -20) count_node root.Std_k98ojb.Count {}\n        filter_1c8a2e.output_list -> count_node.items\n        count_node.count -> output_ai\n    }\n\n    \n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_9d3f4f root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -35, y: 2) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_digits_1 root.main.count_digits {}\n        instance(x: 0, y: 0) map_node root.Std_k98ojb.Iteration.Map {\n            handler: count_digits_1\n        }\n        instance(x: -35, y: 2) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        characters_node.characters -> map_node.items\n        map_node.output_list -> output_ai\n        characters_node.characters -> is_numeric_node.input\n        is_numeric_node.value -> count_digits_1.char\n        instance(x: -35, y: 2) if_expression_node root.Std_k98ojb.Std.IfExpression {\n            expression: \"char.isNumeric\"\n        }\n        is_numeric_node.value -> if_expression_node.gen_0\n        1 -> if_expression_node.then\n        0 -> if_expression_node.else_\n        if_expression_node.value -> count_digits_1.output\n    }\n\n    \n    instance(x: -35, y: 2) count_digits_1 root.main.count_digits {}\n\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: 0) iteration_filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        characters_node.characters -> iteration_filter_node.items\n        iteration_filter_node.output_list -> count_digits_2.input_list\n        is_numeric_node.value -> count_digits_2.predicate\n        count_digits_2.output_count -> output_ai\n\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_1 root.main.count_digits {}\n\n    \n\n    func(doc: \"count the number of items in a list.\") count_items {\n        in(x: -426, y: -248, name: \"input_list\") property(List) input_list_ai\n        in(x: -426, y: -303, name: \"predicate\") property(Function) predicate_ai\n        out(x: 159, y: -219, name: \"output_count\") property(Number) output_count_ai\n\n        instance(x: 0, y: 0) iteration_filter_node_1 root.Std_k98ojb.Iteration.Filter {\n            handler: \"it\"\n        }\n        input_list_ai -> iteration_filter_node_1.items\n        predicate_ai -> iteration_filter_node_1.handler\n        iteration_filter_node_1.output_list -> count_items.input_list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_items.input_list -> list_length_node.list\n        list_length_node.length -> output_count_ai\n\n    }\n\n    \n    instance(x: 0, y: 0) count_items_1 root.main.count_items {}\n\n    \n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) pow_4d1c8e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_4d1c8e.second\n        mul_f892a4.result -> sum_365f7b\n        expression_2d6da6.result -> mul_f892a4.first\n        n_3a3116 -> mul_f892a4.second\n        expression_2d6da6.result -> pow_4d1c8e.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        n_3a3116 -> pow_4d1c8e.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -278, y: 56, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> mul_64046c.second\n        pow_f892a4.result -> mul_64046c.first\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        mul_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -344, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e8c0d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_9e8c0d.second\n        pow_9e8c0d.result -> sum_365f7b\n        expression_2d6da6.result -> pow_9e8c0d.first\n        n_3a3116 -> pow_9e8c0d.gen_1\n        mul_f892a4.result -> pow_9e8c0d.first\n        4 -> mul_f892a4.second\n        expression_2d6da6.result -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -344, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e8d5c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_9e8d5c.second\n        pow_9e8d5c.result -> sum_365f7b\n        expression_2d6da6.result -> pow_9e8d5c.first\n        n_3a3116 -> pow_9e8d5c.gen_0\n        n_3a3116 -> expression_2d6da6.gen_0\n        mul_f892a4.result -> sum_365f7b\n        expression_2d6da6.result -> mul_f892a4.first\n        pow_9e8d5c.result -> mul_f892a4.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -280, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> mul_64046c.second\n        pow_f892a4.result -> mul_64046c.first\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        mul_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> mul_64046c.second\n        pow_f892a4.result -> mul_64046c.first\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        mul_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> mul_64046c.second\n        pow_f892a4.result -> mul_64046c.first\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        mul_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_9a3b8f\n\n        out(x: 593, y: -1, name: \"sum\") property(Number) sum_2e7c4d\n\n        instance(x: 46, y: -383, name: \"fourth power\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(n * (n+1)/2)^4\"\n        }\n        instance(x: 62, y: -226, name: \"sum of fourth powers\") reduce_8c3f9d root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -113, y: 34, name: \"acc\") property(Number) acc_7a2e1f\n\n            in(x: 89, y: 29, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"output\") property(Number) output_8c3b6d\n\n            instance(x: 310, y: 35) add_2e7a5a root.Std_k98ojb.Math.Add {}\n            acc_7a2e1f -> add_2e7a5a.first\n            expression_634b7e.result -> add_2e7a5a.second\n            add_2e7a5a.result -> output_8c3b6d\n        } -> reduce_8c3f9d.reducer\n        n_9a3b8f -> expression_634b7e.gen_0\n        0 -> reduce_8c3f9d.initial_value\n        instance(x: -81, y: 159) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        instance(x: -55, y: 529) generate_range_2f3a5c root.Std_k98ojb.List.GenerateRange {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> generate_range_2f3a5c.predicate\n        n_9a3b8f -> generate_range_2f3a5c.to\n        1 -> generate_range_2f3a5c.from\n        find_6d05b0.items -> generate_range_2f3a5c.list\n        generate_range_2f3a5c.output_list -> find_6d05b0.items\n        reduce_8c3f9d.items -> find_6d05b0.items\n        find_6d05b0.item -> sum_fourth_power.sum_2e7c4d\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -279, y: 0, name: \"n\") property(Number) n_1f9a4e\n\n        out(x: 600, y: -2, name: \"sum\") property(Number) sum_3c6b8d\n\n        instance(x: 12, y: 136, name: \"expression\") expression_7a5f0c root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_3e8d9c root.Std_k98ojb.Math.Pow {}\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_1f9a4e -> mul_f892a4.first\n        n_1f9a4e -> expression_7a5f0c.gen_0\n        expression_7a5f0c.result -> pow_3e8d9c.x\n        4 -> pow_3e8d9c.y\n        pow_3e8d9c.result -> sum_3c6b8d\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_1f7a5c root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -278, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> mul_64046c.second\n        pow_f892a4.result -> mul_64046c.first\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        mul_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -219, y: 55, name: \"size\") property(Number) size_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        size_3a3116 -> mul_f892a4.first\n        size_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -105, y: 23, name: \"size\") property(Number) size_9f0a3d\n\n        out(x: 46, y: 158, name: \"surface_area\") property(Number) surface_area_7c1e8b\n\n        instance(x: 12, y: -2) mul_5b4e6f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_9f0a3d -> mul_5b4e6f.first\n        data_cde0dc -> mul_5b4e6f.second\n        mul_5b4e6f.result -> surface_area_7c1e8b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -111, y: 22, name: \"size\") property(Number) size_3a8f9e\n\n        out(x: 46, y: 158, name: \"surface_area\") property(Number) surface_area_b2508f\n\n        instance(x: 0, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_3a8f9e -> mul_f892a4.first\n        data_cde0dc -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_b2508f\n    }\n\n    \n\n    instance(x: 322, y: 568) surface_area_cube_cee202 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -108, y: 15, name: \"size\") property(Number) size_3f1e5d\n\n        out(x: 114, y: -7, name: \"surface_area\") property(Number) surface_area_8a9c6b\n\n        instance(x: 12, y: 16) mul_4a0b2c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_3f1e5d -> mul_4a0b2c.first\n        data_cde0dc -> mul_4a0b2c.second\n        mul_4a0b2c.result -> surface_area_8a9c6b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: 43, name: \"size\") property(Number) size_1a8e3f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: -105) mul_f0b9d2 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_3f1c5e  = 6\n        size_1a8e3f -> mul_f0b9d2.first\n        data_3f1c5e -> mul_f0b9d2.second\n        instance(x: 333, y: -50) mul_4a7f81 root.Std_k98ojb.Math.Mul {}\n        size_1a8e3f -> mul_4a7f81.first\n        size_1a8e3f -> mul_4a7f81.second\n        mul_f0b9d2.result -> surface_area_cbb7bd\n        mul_4a7f81.result -> mul_f0b9d2.second\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_b9ff6b root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -100, y: 50, name: \"size\") property(Number) size_9f6e1d\n\n        out(x: 0, y: 0, name: \"surface_area\") property(Number) surface_area_f3c8b7\n\n        instance(x: 0, y: 0) mul_5a4b2f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -100, y: 50) data_9e6d1c  = [size]\n        size_9f6e1d -> data_9e6d1c.size\n        data_9e6d1c.size -> mul_5a4b2f.first\n        6 -> mul_5a4b2f.second\n        instance(x: -100, y: 50) expression_8c7c0f root.Std_k98ojb.Math.Expression {\n            expression: \"size * size\"\n        }\n        data_9e6d1c.size -> expression_8c7c0f.gen_0\n        mul_5a4b2f.result -> surface_area_f3c8b7\n        expression_8c7c0f.result -> mul_5a4b2f.first\n    }\n\n    \n\n    instance(x: 0, y: 0) surface_area_cube_1e9d6f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -100, y: 25, name: \"size\") property(Number) size_1e9a8f\n\n        out(x: 0, y: 0, name: \"surface_area\") property(Number) surface_area_3c2b5d\n\n        instance(x: 0, y: -10) mul_7e4c6c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 0, y: 50) data_1a9f8d  = [size]\n        size_1e9a8f -> data_1a9f8d.size\n        data_1a9f8d.size -> mul_7e4c6c.first\n        6 -> mul_7e4c6c.second\n        instance(x: 0, y: -70) mul_f5b3dc root.Std_k98ojb.Math.Mul {}\n        mul_7e4c6c.result -> mul_f5b3dc.first\n        data_1a9f8d.size -> mul_f5b3dc.second\n        mul_f5b3dc.result -> surface_area_3c2b5d\n    }\n\n    \n\n    instance(x: 0, y: -100) surface_area_cube_7e6c4d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -101, y: 22, name: \"size\") property(Number) size_3f1e8d\n\n        out(x: 1056, y: 7, name: \"surface_area\") property(Number) surface_area_5c0a9b\n\n        instance(x: 17, y: -2) mul_4f3c99 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 334, y: 133) data_cde0dc  = 6\n        size_3f1e8d -> mul_4f3c99.first\n        data_cde0dc -> mul_4f3c99.second\n        instance(x: 303, y: 2) mul_7a5b9f root.Std_k98ojb.Math.Mul {}\n        size_3f1e8d -> mul_7a5b9f.first\n        size_3f1e8d -> mul_7a5b9f.second\n        mul_4f3c99.result -> surface_area_5c0a9b\n        mul_7a5b9f.result -> mul_4f3c99.second\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_1d6e2c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -110, y: 23, name: \"size\") property(Number) size_3a9f5e\n\n        out(x: 0, y: 0, name: \"surface_area\") property(Number) surface_area_1c2b6d\n\n        instance(x: 0, y: -10) mul_4a7c8f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 0, y: 40) data_e9e3dc  = [size]\n        size_3a9f5e -> data_e9e3dc.size\n        instance(x: -10, y: 80) map_7d4c8b root.Std_k98ojb.Iteration.Map {}\n        data_e9e3dc -> map_7d4c8b.items\n        func() {\n            in(x: -100, y: 50, name: \"x\") property(Number) x_1a2f5f\n\n            out(x: 0, y: 90, name: \"\") property(Number) _9e3b6f\n\n            instance(x: -80, y: 70) mul_7c8d4f root.Std_k98ojb.Math.Mul {}\n            x_1a2f5f -> mul_7c8d4f.first\n            x_1a2f5f -> mul_7c8d4f.second\n            mul_7c8d4f.result -> _9e3b6f\n        } -> map_7d4c8b.handler\n        instance(x: 0, y: 130) sum_8c1a2d root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -10, y: 140, name: \"acc\") property(Number) acc_9f3e7f\n                in(x: -10, y: 170, name: \"x\") property(Number) x_1a2f5f\n\n                out(x: 0, y: 160, name: \"\") property(Number) _4b8c6d\n\n                instance(x: 0, y: 180) add_3e9c7f root.Std_k98ojb.Math.Add {}\n                acc_9f3e7f -> add_3e9c7f.first\n                x_1a2f5f -> add_3e9c7f.second\n                add_3e9c7f.result -> _4b8c6d\n            }\n        }\n        map_7d4c8b.output_list -> sum_8c1a2d.items\n        instance(x: 0, y: 210) mul_5a8c7f root.Std_k98ojb.Math.Mul {}\n        6 -> mul_5a8c7f.first\n        sum_8c1a2d.result -> mul_5a8c7f.second\n        mul_5a8c7f.result -> surface_area_1c2b6d\n    }\n\n    \n\n    instance(x: -40, y: 50) surface_area_cube_9e3b6f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -105, y: 45, name: \"size\") property(Number) size_1e8a3f\n\n        out(x: 46, y: 158, name: \"surface_area\") property(Number) surface_area_7b9c5d\n\n        instance(x: 12, y: -10) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1e8a3f -> mul_2f9d09.first\n        data_cde0dc -> mul_2f9d09.second\n        mul_2f9d09.result -> surface_area_7b9c5d\n    }\n\n    \n\n    instance(x: 322, y: 568) surface_area_cube_1e8a3f root.main.surface_area_cube {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 0, name: \"list\") property(List) list_4a3f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.items -> list_4a3f8e\n        min_list_4d4556.items -> list_4a3f8e\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 18, name: \"list\") property(List) list_0a9f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.items -> list_0a9f8e\n        min_list_4d4556.items -> list_0a9f8e\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -34, y: 0, name: \"list\") property(List) list_6e9f8a\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -319, y: 358, name: \"min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.max -> sub_852f2e.first\n        list_6e9f8a -> max_list_f3b46d.items\n        min_list_4d4556.min -> sub_852f2e.second\n        list_6e9f8a -> min_list_4d4556.items\n        firstitem_870503.item -> output_b1d7f8\n        firstitem_3078c6.item -> output_b1d7f8\n        max_list_f3b46d.items -> firstitem_870503.list\n        min_list_4d4556.items -> firstitem_3078c6.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_15f9e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -31, y: 20, name: \"list\") property(List) list_6a1f0e\n\n        out(x: 459, y: 63, name: \"difference\") property(Number) difference_4c9b7d\n\n        instance(x: 201, y: 62) sub_3b8c2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"max list\") max_list_f5a6f1 root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358, name: \"min list\") min_list_8e3c9d root.Std_k98ojb.List.Min {}\n        sub_3b8c2e.result -> difference_4c9b7d\n        max_list_f5a6f1.max -> sub_3b8c2e.first\n        min_list_8e3c9d.min -> sub_3b8c2e.second\n        list_6a1f0e -> max_list_f5a6f1.items\n        list_6a1f0e -> min_list_8e3c9d.items\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_4b7f2e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -27, y: 15, name: \"list\") property(List) list_1e8b6a\n\n        out(x: 462, y: 11, name: \"difference\") property(Number) difference_7f0d5c\n\n        instance(x: 186, y: 12) sub_9a4b3c root.Std_k98ojb.Math.Sub {}\n        instance(x: -210, y: 15) max_8e1c2f root.Std_k98ojb.List.Max {}\n        instance(x: -214, y: -167) min_7d6f5f root.Std_k98ojb.List.Min {}\n        list_1e8b6a -> max_8e1c2f.items\n        list_1e8b6a -> min_7d6f5f.items\n        max_8e1c2f.max -> sub_9a4b3c.first\n        min_7d6f5f.min -> sub_9a4b3c.second\n        sub_9a4b3c.result -> difference_7f0d5c\n    }\n\n    \n\n    instance(x: 60, y: -14) diff_max_min_2e8b1f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_0a1f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.items -> list_0a1f8e\n        min_list_4d4556.items -> list_0a1f8e\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 10, name: \"list\") property(List) list_1a9b8f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.items -> list_1a9b8f\n        min_list_4d4556.items -> list_1a9b8f\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_6a1f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.items -> list_6a1f8e\n        min_list_4d4556.items -> list_6a1f2e\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -36, y: 8, name: \"list\") property(List) list_6e1b2f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.items -> list_6e1b2f\n        min_list_4d4556.items -> list_6e1b2f\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1a0b8f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.items -> list_1a0b8f\n        min_list_4d4556.items -> list_1a0b8f\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 11, name: \"input\") property(Number) input_9a8f5e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 432, y: 56) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n        input_9a8f5e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> notequal_cb8a55.left\n        0 -> notequal_cb8a55.right\n        not(notequal_cb8a55.result) -> output_b1d7f8\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 3, name: \"input\") property(Number) input_0a9f1e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_0a9f1e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_0a9f1e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_0a9f1e -> expression_9fba8c.gen_0\n        input_0a9f1e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -31, y: 0, name: \"input\") property(Number) input_5e9f8d\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7c1a4b\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 432, y: 56) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n        input_5e9f8d -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> notequal_cb8a55.left\n        0 -> notequal_cb8a55.right\n        notequal_cb8a55.result -> output_7c1a4b\n    }\n\n    \n\n    instance(x: -5, y: 11) is_even_f9f6e3 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -31, y: 2, name: \"input\") property(Number) input_9e8f0d\n        out(x: 1766, y: 4, name: \"output\") property(Bool) output_1a7c5b\n\n        instance(x: 1183, y: -11) modulo_2e8c6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1720, y: 20) equal_4f9d0c root.Std_k98ojb.Logic.Equal {}\n        input_9e8f0d -> modulo_2e8c6.value\n        2 -> modulo_2e8c6.divisor\n        modulo_2e8c6.result -> equal_4f9d0c.left\n        0 -> equal_4f9d0c.right\n        equal_4f9d0c.result -> output_1a7c5b\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -36, y: 1, name: \"input\") property(Number) input_0e3a6f\n        out(x: 1258, y: 2, name: \"output\") property(Bool) output_5b9c7d\n\n        instance(x: 1054, y: -11) modulo_1b8b9f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1066, y: 64) equal_3a0e2c root.Std_k98ojb.Logic.Equal {}\n        input_0e3a6f -> modulo_1b8b9f.value\n        2 -> modulo_1b8b9f.divisor\n        modulo_1b8b9f.result -> equal_3a0e2c.left\n        0 -> equal_3a0e2c.right\n        equal_3a0e2c.result -> output_5b9c7d\n    }\n\n    \n\n    instance(x: -16, y: -6) is_even_1f4d8c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 11, name: \"input\") property(Number) input_0a9f1e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 441, y: 56) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n        input_0a9f1e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> notequal_cb8a55.left\n        0 -> notequal_cb8a55.right\n        not(notequal_cb8a55.result) -> output_b1d7f8\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 11, name: \"input\") property(Number) input_1a9d8f\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e6b3c\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 439, y: 57) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n        input_1a9d8f -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> notequal_cb8a55.left\n        0 -> notequal_cb8a55.right\n        notequal_cb8a55.result -> output_7e6b3c\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_9a3f1e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_9a3f1e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_9a3f1e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_9a3f1e -> expression_9fba8c.gen_0\n        input_9a3f1e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -35, y: 1, name: \"input\") property(Number) input_5e8f3d\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c6a0b\n\n        instance(x: 1082, y: 10) modulo_1e4b1 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1495, y: 11) equal_8d9f3f root.Std_k98ojb.Logic.Equal {}\n        input_5e8f3d -> modulo_1e4b1.value\n        2 -> modulo_1e4b1.divisor\n        modulo_1e4b1.result -> equal_8d9f3f.left\n        0 -> equal_8d9f3f.right\n        equal_8d9f3f.result -> output_7c6a0b\n    }\n\n    \n\n    instance(x: -33, y: -5) is_even_2e1b4 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 0, name: \"input\") property(Number) input_1a3e8f\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_1a3e8f -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_1a3e8f -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> out_f3db9f\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_1a3e8f -> expression_9fba8c.gen_0\n        input_1a3e8f -> expression_b720d7.gen_0\n        if_e19a62.then -> out_f3db9f\n        for_8cb3f6.done -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5b1c4e root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_1e9f7c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"characters\") characters_0d5a4c root.Std_k98ojb.Strings.Characters {}\n        input_0 -> characters_0d5a4c.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2a8f4c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            characters_0d5a4c.characters -> contains_2a8f4c.input\n            current_afd5b1 -> contains_2a8f4c.contains\n            find_1e9f7c.item -> contains_2a8f4c.contains\n            contains_2a8f4c.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_1e9f7c.predicate\n        characters_0d5a4c.characters -> find_1e9f7c.items\n        find_1e9f7c.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_4e7b5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -10, y: 100) filter_2f1a8f root.Std_k98ojb.Iteration.Filter {}\n        characters_4e7b5c.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            find_6d05b0.item -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        characters_4e7b5c.characters -> filter_2f1a8f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            input_0 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> filter_2f1a8f.handler\n        find_6d05b0.item -> result_0\n        filter_2f1a8f.output_list -> find_6d05b0.items\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_4e3b7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_8a9f6d root.Std_k98ojb.Iteration.Find {}\n        instance(x: -11, y: 60) ``first repeated character_1`` root.Std_k98ojb.Iteration.Filter {}\n        characters_4e3b7c.characters -> ``first repeated character_1``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2f8a7c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_2f8a7c.input\n            characters_4e3b7c.characters -> contains_2f8a7c.contains\n            contains_2f8a7c.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``first repeated character_1``.handler\n        ``first repeated character_1``.output_list -> find_8a9f6d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2f8a7c root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_2f8a7c.input\n            characters_4e3b7c.characters -> contains_2f8a7c.contains\n            contains_2f8a7c.result -> bool_1eb6e9\n        } -> find_8a9f6d.predicate\n        input_0 -> characters_4e3b7c.input\n        find_8a9f6d.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_2\n\n        instance(x: 0, y: 0) find_3 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_4\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5\n\n            instance(x: 89, y: 29) contains_6 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_7 root.Std_k98ojb.Logic.NotEqual {}\n            input_1 -> contains_6.input\n            elem_4 -> contains_6.contains\n            contains_6.result -> notequal_7.left\n            find_3.item -> notequal_7.right\n            notequal_7.result -> bool_5\n        } -> find_3.predicate\n        instance(x: 0, y: -1) characters_8 root.Std_k98ojb.Strings.Characters {}\n        input_1 -> characters_8.input\n        characters_8.characters -> find_3.items\n        find_3.item -> output_2\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_9 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -288, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3b8c6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7e9a5d root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257) ``Finds the first repeated character in a given string_1c3f6f`` root.Std_k98ojb.Iteration.Filter {}\n        characters_3b8c6f.characters -> find_7e9a5d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a4f2ba\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3b8c7a root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> contains_3b8c7a.input\n            current_a4f2ba -> contains_3b8c7a.contains\n            contains_3b8c7a.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_7e9a5d.predicate\n        characters_3b8c6f.characters -> ``Finds the first repeated character in a given string_1c3f6f``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a4f2ba\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3b8c7a root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_3b8c7a.input\n            current_a4f2ba -> contains_3b8c7a.contains\n            contains_3b8c7a.result -> bool_1eb6e9\n        } -> ``Finds the first repeated character in a given string_1c3f6f``.predicate\n        find_7e9a5d.item -> result_0\n        ``Finds the first repeated character in a given string_1c3f6f``.output_list -> input_0\n        characters_3b8c6f.input -> input_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_2a7f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated character\") ``characters_2a7f9c`` root.Std_k98ojb.Iteration.Find {}\n        input_0 -> characters_2a7f9c.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            find_6d05b0.item -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_2a7f9c``.predicate\n        characters_2a7f9c.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            find_6d05b0.item -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        characters_2a7f9c.characters -> ``characters_2a7f9c``.items\n        ``characters_2a7f9c``.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"First repeated character\") find_1a8f7e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"characters\") characters_2d44da root.Std_k98ojb.Strings.Characters {}\n        input_0 -> characters_2d44da.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            characters_2d44da.characters -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_1a8f7e.predicate\n        characters_2d44da.characters -> find_1a8f7e.items\n        find_1a8f7e.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 532, y: 147) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated character\") ``characters_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        input_0 -> characters_3c713b.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_3c713b.characters -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            find_6d05b0.items -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``characters_0b1361``.predicate\n        characters_3c713b.characters -> find_6d05b0.items\n        input_0 -> ``characters_0b1361``.items\n        find_6d05b0.item -> output_ebef81\n        ``characters_0b1361``.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3e4c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -2, y: 60) filter_5a9d7f root.Std_k98ojb.Iteration.Filter {}\n        characters_3e4c8f.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            characters_3e4c8f.characters -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        instance(x: -2, y: 60) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_3e4c8f.characters -> filter_5a9d7f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_d42dce.input\n            input_0 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> filter_5a9d7f.handler\n        find_6d05b0.item -> result_0\n        characters_3e4c8f.characters -> contains_d42dce.input\n        input_0 -> contains_d42dce.contains\n        contains_d42dce.result -> filter_5a9d7f.output_list\n        filter_5a9d7f.output_list -> find_6d05b0.items\n        input_0 -> characters_3e4c8f.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5a9f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3d6e7c root.Std_k98ojb.Iteration.Find {}\n        instance(x: -10, y: 70, name: \"seen\") data_object_1a2f8c = []\n        characters_5a9f8c.characters -> find_3d6e7c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_7c2f3a root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_7c2f3a.input\n            seen_1a2f8c -> contains_7c2f3a.contains\n            contains_7c2f3a.result -> bool_1eb6e9\n        } -> find_3d6e7c.predicate\n        instance(x: 0, y: -50) add_4b5f2d root.Std_k98ojb.List.Add {}\n        seen_1a2f8c -> add_4b5f2d.list\n        find_3d6e7c.item -> add_4b5f2d.item\n        add_4b5f2d.listWithItem -> seen_1a2f8c\n        input_0 -> characters_5a9f8c.input\n        find_3d6e7c.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -104, y: 89, name: \"index\") property(Int) index_1e7c6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3f9d5b root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_3f9d5b.items\n            min_3f9d5b.min -> min_1c6e0a\n\n            instance(x: -8, y: 62) ifexpression_7b2c6a root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            index_1e7c6a -> ifexpression_7b2c6a.gen_0\n            getter(x: -41, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n            setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n            getter_9cceb3.value -> min_1c6e0a\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            min_1c6e0a -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            ifexpression_7b2c6a.then -> setter_1cedb2.execute\n            elem_9f6850 -> setter_1cedb2.new_value\n            ifexpression_7b2c6a.else -> setter_37db7f.execute\n            notequal_807ffd.result -> bool_af09a7\n\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -110, y: 89, name: \"index\") property(Int) index_7c1d8a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_9e3f2b root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_9e3f2b.items\n            min_9e3f2b.min -> smallest_1d0c8f\n\n            instance(x: -14, y: 29) ifexpression_7a5b6c root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            index_7c1d8a -> ifexpression_7a5b6c.gen_0\n            getter(x: -44, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = bool\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = bool\n            setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = bool\n            getter_9cceb3.value -> bool_af09a7\n\n            instance(x: -144, y: 112) ifexpression_8e1d0b root.Std_k98ojb.Std.IfExpression {\n                expression: \"elem < smallest\"\n            }\n            elem_9f6850 -> ifexpression_8e1d0b.gen_0\n            smallest_1d0c8f -> ifexpression_8e1d0b.gen_1\n\n            instance(x: -144, y: 112) ifexpression_7a5b6c_then root.Std_k98ojb.Std.IfExpression {\n                expression: \"elem < second_smallest\"\n            }\n            elem_9f6850 -> ifexpression_7a5b6c_then.gen_0\n            second_smallest_1d0c8f -> ifexpression_7a5b6c_then.gen_1\n\n            instance(x: -144, y: 112) ifexpression_8e1d0b_else root.Std_k98ojb.Std.IfExpression {\n                expression: \"elem < second_smallest\"\n            }\n            elem_9f6850 -> ifexpression_8e1d0b_else.gen_0\n            second_smallest_1d0c8f -> ifexpression_8e1d0b_else.gen_1\n\n            instance(x: 116, y: -268) set_second_smallest root.Std_k98ojb.List.Set {\n                index: 1\n            }\n            elem_9f6850 -> set_second_smallest.value\n            list_abed4a -> set_second_smallest.list\n\n            ifexpression_7a5b6c.then -> setter_1cedb2.execute\n            ifexpression_8e1d0b.else -> setter_37db7f.execute\n            ifexpression_7a5b6c_else.then -> set_second_smallest.execute\n            ifexpression_8e1d0b.then -> ifexpression_7a5b6c_then.execute\n\n            ifexpression_7a5b6c.else -> ifexpression_8e1d0b.execute\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -1) min_2c3f6a root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_2c3f6a.items\n            min_2c3f6a.min -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: -193, name: \"list\") property(List) list_ai\n\n        out(x: 46, y: 158, name: \"second_smallest\") property(Number) second_smallest_1b7c8f\n\n        instance(x: -105, y: -110) min_9e5a4d root.Std_k98ojb.List.Min {}\n        list_ai -> min_9e5a4d.items\n        instance(x: 0, y: 0) remove_2c6d1c root.Std_k98ojb.List.Remove {}\n        min_9e5a4d.min -> remove_2c6d1c.index\n        list_ai -> remove_2c6d1c.list\n        instance(x: -105, y: -110) min_7f3f0f root.Std_k98ojb.List.Min {}\n        remove_2c6d1c.listWithoutItem -> min_7f3f0f.items\n        min_7f3f0f.min -> second_smallest_1b7c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -287, y: -0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"second_smallest\") property(Number) second_smallest_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_a89f71\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1cedb2\n\n            instance(x: 89, y: 29) min_1088d5 root.Std_k98ojb.List.Min {}\n            list_9f7759 -> min_1088d5.items\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            min_1088d5.min -> notequal_807ffd.left\n            elem_a89f71 -> notequal_807ffd.right\n            instance(x: 420, y: 45) and_3c9a1e root.Std_k98ojb.Logic.And {}\n            notequal_807ffd.result -> and_3c9a1e.left\n            instance(x: 520, y: 55) greaterthan_5d8f7a root.Std_k98ojb.Math.GreaterThan {}\n            elem_a89f71 -> greaterthan_5d8f7a.left\n            min_1088d5.min -> greaterthan_5d8f7a.right\n            greaterthan_5d8f7a.result -> and_3c9a1e.right\n            and_3c9a1e.result -> bool_1cedb2\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        find_6d05b0.item -> second_smallest_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: -42, name: \"index\") property(Int) index_1e3a8c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -9, y: -39) ifexpression_7c3f1a root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            instance(x: 91, y: -41) notequal_5e2d4a root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 313, y: -43) ifexpression_e9c7f6 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 1\"\n            }\n            instance(x: 91, y: -107) notequal_5e2d4a_2 root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 313, y: -109) ifexpression_e9c7f6_2 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            instance(x: 89, y: -173) modulo_1088d5_2 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: -171) notequal_807ffd_2 root.Std_k98ojb.Logic.NotEqual {}\n\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n\n            index_1e3a8c -> ifexpression_7c3f1a.gen_0\n            ifexpression_7c3f1a.then -> notequal_5e2d4a.execute\n            ifexpression_7c3f1a.else -> bool_af09a7\n\n            index_1e3a8c -> ifexpression_e9c7f6.gen_0\n            ifexpression_e9c7f6.then -> notequal_5e2d4a_2.execute\n            ifexpression_e9c7f6.else -> bool_af09a7\n\n            0 -> notequal_5e2d4a.right\n            elem_9f6850 -> notequal_5e2d4a.left\n            notequal_5e2d4a.result -> bool_af09a7\n\n            1 -> ifexpression_e9c7f6_2.gen_0\n            ifexpression_e9c7f6_2.then -> modulo_1088d5_2.execute\n            ifexpression_e9c7f6_2.else -> bool_af09a7\n\n            2 -> notequal_807ffd_2.right\n            modulo_1088d5_2.result -> notequal_807ffd_2.left\n            2 -> modulo_1088d5_2.divisor\n            elem_9f6850 -> modulo_1088d5_2.value\n\n            notequal_807ffd_2.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -104, y: 114, name: \"index\") property(Int) index_7e3c5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -1, y: 124) ifexpression_7e3c5a root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            instance(x: 89, y: 145) notequal_9f6850 root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_9f6850.right\n            elem_9f6850 -> notequal_9f6850.left\n            ifexpression_7e3c5a.then -> notequal_9f6850.execute\n            ifexpression_7e3c5a.else -> modulo_1088d5.execute\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            instance(x: 310, y: 166) notequal_1b4f7e root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_1b4f7e.right\n            modulo_1088d5.result -> notequal_1b4f7e.left\n            notequal_9f6850.result -> bool_af09a7\n            notequal_1b4f7e.result -> ifexpression_7e3c5a.gen_1\n            index_7e3c5a -> ifexpression_7e3c5a.gen_0\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 68, name: \"index\") property(Int) index_7c1a8e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -1, y: 99) ifexpression_7c0f3a root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            instance(x: 89, y: 129) notequal_2e8d6f root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: 145) ifexpression_7c0f3a_then root.Std_k98ojb.Std.IfExpression {\n                expression: \"elem < smallest\"\n            }\n            instance(x: -1, y: 169) ifexpression_7c0f3a_else root.Std_k98ojb.Std.IfExpression {\n                expression: \"elem > smallest\"\n            }\n\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n\n            index_7c1a8e -> ifexpression_7c0f3a.gen_0\n            0 -> ifexpression_7c0f3a.gen_1\n            ifexpression_7c0f3a.then -> notequal_2e8d6f.execute\n            smallest -> notequal_2e8d6f.left\n            elem_9f6850 -> notequal_2e8d6f.right\n            notequal_2e8d6f.result -> ifexpression_7c0f3a_else.gen_1\n\n            index_7c1a8e -> ifexpression_7c0f3a_then.gen_0\n            1 -> ifexpression_7c0f3a_then.gen_1\n            smallest -> ifexpression_7c0f3a_then.gen_2\n            elem_9f6850 -> ifexpression_7c0f3a_then.gen_3\n\n            index_7c1a8e -> ifexpression_7c0f3a_else.gen_0\n            1 -> ifexpression_7c0f3a_else.gen_1\n            smallest -> ifexpression_7c0f3a_else.gen_2\n            elem_9f6850 -> ifexpression_7c0f3a_else.gen_3\n\n            ifexpression_7c0f3a_then.then -> bool_af09a7\n            ifexpression_7c0f3a_else.else -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n\n        instance(x: 772, y: -1) min_2e8d6f root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_2e8d6f.items\n        min_2e8d6f.min -> smallest\n\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -34, y: 127) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -280, y: -193, name: \"list\") property(List) list_8f1e3a\n\n        out(x: 46, y: 158, name: \"second_smallest\") property(Number) second_smallest_7c9d0b\n\n        instance(x: -105, y: -110) find_2c4b5a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1e8f6d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3a2c7b\n\n            instance(x: 89, y: 29) min_9b4b5a root.Std_k98ojb.List.Min {}\n            list_8f1e3a -> min_9b4b5a.items\n            min_9b4b5a.min -> elem_1e8f6d\n\n            instance(x: 310, y: 35) notequal_7c9d0b root.Std_k98ojb.Logic.NotEqual {}\n            elem_1e8f6d -> notequal_7c9d0b.left\n            min_9b4b5a.min -> notequal_7c9d0b.right\n\n            notequal_7c9d0b.result -> bool_3a2c7b\n        } -> find_2c4b5a.predicate\n        list_8f1e3a -> find_2c4b5a.items\n        instance(x: 772, y: -114) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1088d5 root.Std_k98ojb.List.Min {}\n            find_2c4b5a.item -> min_1088d5.items\n            min_1088d5.min -> elem_9f6850\n\n            notequal_7c9d0b.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_8f1e3a -> find_6d05b0.items\n        find_6d05b0.item -> second_smallest_7c9d0b\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 84, name: \"index\") property(Int) index_3e8c4a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -10, y: 105) ifexpression_9e1c6a root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            instance(x: 89, y: 145) min_7f8d4a root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 135) notequal_1c9e3f root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n            ifexpression_9e1c6a.then -> min_7f8d4a.left\n            list_abed4a.firstItem -> min_7f8d4a.right\n            elem_9f6850 -> min_7f8d4a.left\n            min_7f8d4a.result -> number_3bc2ae\n            ifexpression_9e1c6a.else -> notequal_1c9e3f.execute\n            index_3e8c4a -> ifexpression_9e1c6a.gen_0\n            0 -> notequal_1c9e3f.right\n            number_3bc2ae -> notequal_1c9e3f.left\n            notequal_1c9e3f.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}"
            ]
        }
    }
]