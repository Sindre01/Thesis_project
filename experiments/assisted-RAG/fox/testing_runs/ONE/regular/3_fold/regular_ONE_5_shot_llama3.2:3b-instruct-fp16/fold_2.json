[
    {
        "experiment_name": "regular_ONE_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12639,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -468, y: 12, name: \"list1\") property(List) list_2e3f6d\n        in(x: -478, y: 49, name: \"list2\") property(List) list_a5b8a4\n\n        out(x: 1329, y: -209, name: \"output\") property(Bool) output_b0c3ac\n\n        instance(x: 245, y: 75) intersection_6e7f66 root.Std_k98ojb.Sets.Intersection {}\n        list_a5b8a4 -> intersection_6e7f66.left\n        list_2e3f6d -> intersection_6e7f66.right\n        intersection_6e7f66.intersect -> output_b0c3ac\n    }\n\n    \n\n    instance(x: -85, y: 16) has_common_element_4d5df9 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -475, y: 63, name: \"list1\") property(List) list_0a2f8d\n        in(x: -493, y: -22, name: \"list2\") property(List) list_eb9e14\n\n        out(x: 1284, y: -19, name: \"output\") property(Bool) output_7c3bf5\n\n        instance(x: 106, y: -24) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 272, y: -28) filter_6f2a85 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 445, y: -30) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        list_eb9e14 -> contains_32727d.list\n        contains_32727d.contains -> filter_6f2a85.items\n        list_eb9e14 -> map_c73e3b.list\n        0 -> map_c73e3b.index\n        map_c73e3b.itemAtIndex -> filter_6f2a85.handler\n        filter_6f2a85.output_list -> output_7c3bf5\n    }\n\n    \n\n    instance(x: -291, y: -21) has_common_element_e9d8cd root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -173, y: 20, name: \"list1\") property(List) list_0d6f3e\n        in(x: -185, y: 24, name: \"list2\") property(List) list_e8c4ad\n\n        out(x: 1227, y: 25, name: \"output\") property(Bool) output_ba5b89\n\n        instance(x: 446, y: 49) intersection_9e0d64 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -10, y: -44) length_1f6c4b root.Std_k98ojb.List.Length {}\n        instance(x: 1058, y: -35) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_e8c4ad -> intersection_9e0d64.left\n        list_e8c4ad -> intersection_9e0d64.right\n        intersection_9e0d64.intersect -> length_1f6c4b.list\n        contains_32727d.item -> output_ba5b89\n    }\n\n    \n\n    instance(x: -75, y: 28) has_common_element_3db8b root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -473, y: 33, name: \"list1\") property(List) list_0d40f1\n        in(x: -478, y: -23, name: \"list2\") property(List) list_3af6ba\n\n        out(x: 1025, y: 31, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -193, y: -34) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list_0d40f1 -> intersection_c7c7e6.left\n        list_3af6ba -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> output_8d07dc\n    }\n\n    \n\n    instance(x: -73, y: 63) has_common_element_5a4e77 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -464, y: 57, name: \"list1\") property(List) list_0a8f6d\n        in(x: -485, y: 30, name: \"list2\") property(List) list_05e56c\n\n        out(x: 1215, y: -101, name: \"output\") property(Bool) output_e1a77b\n\n        instance(x: 326, y: 49) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list_0a8f6d -> intersection_c7c7e6.left\n        list_05e56c -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> output_e1a77b\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_bf2da9 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -487, y: 14, name: \"list1\") property(List) list_0a1f64\n        in(x: -507, y: -233, name: \"list2\") property(List) list_7d95e3\n\n        out(x: 1298, y: -235, name: \"output\") property(Bool) output_a4c35b\n\n        instance(x: 761, y: 96) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list_0a1f64 -> intersection_c7c7e6.left\n        list_7d95e3 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> output_a4c35b\n    }\n\n    \n\n    instance(x: -78, y: 49) has_common_element_0f1c7a root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -475, y: 22, name: \"list1\") property(List) list_5e4f0d\n        in(x: -498, y: -193, name: \"list2\") property(List) list_b8c3a9\n\n        out(x: 1057, y: -13, name: \"output\") property(Bool) output_e63d14\n\n        instance(x: 278, y: -25) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 341, y: -16) list_not_empty_5e7a95 root.Std_k98ojb.List.NotEmpty {}\n        instance(x: 1079, y: -204) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1024, y: -15) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 439, y: -13) list_flatten_6d0c5f root.Std_k98ojb.List.Flatten {}\n        instance(x: 1209, y: -16) list_not_empty_5e7a95_2 root.Std_k98ojb.List.NotEmpty {}\n        instance(x: 1131, y: -18) has_common_element_6a0c01 root.Std_k98ojb.List.Contains {}\n\n        instance(x: 1213, y: -9) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"if (contains_32727d.is_contained && list_not_empty_5e7a95.is_empty()) then true else false\"\n        }\n        getter(x: 322, y: -17) getter_b280eb = contains_32727d.item\n        setter(x: 659, y: -22) setter_9d4f1c = contains_32727d.item\n        instance(x: 325, y: -25) list_flatten_6d0c5f.new_value <- getter_b280eb\n        instance(x: 1148, y: -18) ifexpression_875761.then -> has_common_element_6a0c01.execute\n        instance(x: 1164, y: -19) contains_32727d.itemAtIndex -> setter_9d4f1c.new_value\n        list_b8c3a9 -> filter_c91965.items\n        filter_c91965.handler -> map_c73e3b.execute\n        list_flatten_6d0c5f.flattened -> has_common_element_6a0c01.item\n        2 -> has_common_element_6a0c01.index\n        has_common_element_6a0c01.itemAtIndex -> setter_9d4f1c.new_value\n        list_b8c3a9 -> list_not_empty_5e7a95.list\n        list_not_empty_5e7a95.length -> contains_32727d.is_contained\n        2 -> has_common_element_6a0c01.index\n        map_c73e3b.output_list -> has_common_element_6a0c01.item\n    }\n\n    \n\n    instance(x: -489, y: -23) has_common_element_1a5f45 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -434, y: 44, name: \"list1\") property(List) list_0f9d28\n        in(x: -455, y: -22, name: \"list2\") property(List) list_ba6c5b\n\n        out(x: 1027, y: -27, name: \"output\") property(Bool) output_a0cd51\n\n        instance(x: 742, y: 74) intersection_3d1f9e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 277, y: -24) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 446, y: -26) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -9, y: -33, name: \"current\") property(Number) _index_170471\n            in(x: -25, y: 78, name: \"_index\") property(Number) _index_769593\n\n            out(x: 1043, y: -41, name: \"output\") property(Bool) output_f2c5d7\n\n            instance(x: 255, y: 64) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {}\n            getter(x: 121, y: 105, name: \"getter_b280eb\") getter_b280eb = previous\n            setter(x: -0, y: -137, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n            instance(x: 327, y: -30) for_d26972 root.Std_k98ojb.Std.For {}\n            setter(x: -279, y: -142, name: \"setter_9d4f1c\") setter_38e107 = previous\n            instance(x: -312, y: -34) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n            ifexpression_875761.else -> output_f2c5d7\n            ifexpression_875761.value -> not_75283f.execute\n            ifexpression_875761.then -> setter_9d4f1c.execute\n            list_ba6c5b -> for_d26972.items\n            for_d26972.item -> ifexpression_875761.gen_2\n            for_d26972.index -> ifexpression_875761.gen_0\n            getter_b280eb.value -> ifexpression_875761.gen_1\n            for_d26972.onItem -> ifexpression_875761.execute\n            for_d26972.done -> output_f2c5d7\n            for_d26972.item -> setter_9d4f1c.new_value\n            list_ba6c5b -> getat_ce2a48.list\n            0 -> getat_ce2a48.index\n            getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n            execute_90aaec -> setter_38e107.execute\n            setter_38e107.continue -> for_d26972.reset\n            setter_9d4f1c.continue -> for_d26972.next\n        } -> intersection_3d1f9e.handler\n        list_ba6c5b -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_f2c5d7\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -392, y: 49) has_common_element_3e1a9 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -446, y: 23, name: \"list1\") property(List) list_5e3a9b\n        in(x: -463, y: -13, name: \"list2\") property(List) list_a4c6f0\n\n        out(x: 1048, y: -14, name: \"output\") property(Bool) output_eb1d24\n\n        instance(x: 243, y: 65) filter_9e3bf5 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1007, y: -22) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 146, y: -26) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -44, y: -21, name: \"current\") property(Number) _index_3c8dd1\n            in(x: -34, y: 85, name: \"_index\") property(Number) _index_e0d2e5\n\n            out(x: 1079, y: 47, name: \"output\") property(Bool) output_f6f7b3\n\n            instance(x: 233, y: 60) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 446, y: 56) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            list_a4c6f0 -> filter_9e3bf5.items\n            list_a4c6f0 -> modulo_c76d2b.value\n            _index_e0d2e5 -> modulo_c76d2b.divisor\n            notequal_7836b4.result -> output_f6f7b3\n            modulo_c76d2b.result -> notequal_7836b4.left\n        } -> filter_9e3bf5.handler\n        list_a4c6f0 -> contains_32727d.list\n        _index_e0d2e5 -> contains_32727d.index\n        contains_32727d.itemAtIndex -> output_f6f7b3\n        not_75283f.result -> output_f6f7b3\n    }\n\n    \n\n    instance(x: -299, y: 8) has_common_element_9a4c41 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -445, y: 54, name: \"list1\") property(List) list_4f2a65\n        in(x: -454, y: 14, name: \"list2\") property(List) list_e6d3b9\n\n        out(x: 1147, y: -96, name: \"output\") property(Bool) output_8e4c38\n\n        instance(x: 275, y: 78) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 463, y: -82) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1021, y: -95) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -20, y: -12, name: \"current\") property(Number) _index_170471\n            in(x: -30, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_e6d3b9 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_32727d.handler\n        filter_c91965.output_list -> contains_32727d.list\n        not_75283f.input -> output_efbc78\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_2a6b9 root.main.has_common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -534, y: 29, name: \"list\") property(List) list_8d4a6e\n\n        out(x: 1153, y: -24, name: \"output\") property(Bool) output_b5d7b1\n\n        instance(x: 755, y: 97) for_loop_6f0c44 root.Std_k98ojb.Std.For {}\n        instance(x: -26, y: 101) getat_9d2a41 root.Std_k98ojb.List.GetAt {}\n        instance(x: 281, y: 106) less_than_4e8fdd root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 555, y: 105) sub_7c3c23 root.Std_k98ojb.Math.Sub {}\n        list_8d4a6e -> for_loop_6f0c44.items\n        for_loop_6f0c44.item -> getat_9d2a41.list\n        less_than_4e8fdd.left -> sub_7c3c23.first\n        1 -> sub_7c3c23.divisor\n        sub_7c3c23.result -> getat_9d2a41.index\n        for_loop_6f0c44.onItem -> less_than_4e8fdd.execute\n        for_loop_6f0c44.done -> output_b5d7b1\n    }\n\n    \n\n    instance(x: -34, y: 144) Consecutive_3ff9a root.main.Consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -509, y: 6, name: \"list\") property(List) list_5d3fdd\n\n        out(x: 1029, y: 21, name: \"output\") property(Bool) output_bdfb88\n\n        instance(x: 341, y: 22) for_loop_2e8f43 root.Std_k98ojb.Std.For {}\n        instance(x: -44, y: 28) getat_d1c5a9 root.Std_k98ojb.List.GetAt {}\n        instance(x: 108, y: 23) greaterthan_4e2d7f root.Std_k98ojb.Math.GreaterThan {}\n        list_5d3fdd -> for_loop_2e8f43.items\n        for_loop_2e8f43.item -> getat_d1c5a9.list\n        getat_d1c5a9.index -> greaterthan_4e2d7f.left\n        1 -> greaterthan_4e2d7f.right\n        greaterthan_4e2d7f.result -> output_bdfb88\n    }\n\n    \n\n    instance(x: -34, y: 87) Consecutive_f2c43a root.main.Consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -565, y: 3, name: \"list\") property(List) list_e1d8a6\n\n        out(x: 127, y: 73, name: \"output\") property(Bool) output_1c0b4e\n\n        instance(x: -288, y: 56) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -49, y: 71) ifexpression_8f3a35 root.Std_k98ojb.Std.IfExpression {\n            expression: \"previous + 1 == current\"\n        }\n        getter(x: -0, y: -121, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: -303, y: -36) setter_9d4f1c = previous\n        instance(x: 146, y: -23) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        for_d26972.item -> ifexpression_8f3a35.gen_0\n        for_d26972.index -> ifexpression_8f3a35.gen_1\n        getter_b280eb.value -> ifexpression_8f3a35.gen_2\n        for_d26972.onItem -> ifexpression_8f3a35.execute\n        for_d26972.done -> output_1c0b4e\n        setter_9d4f1c.continue -> for_d26972.reset\n    }\n\n    \n\n    instance(x: -74, y: 118) is_consecutive_7e6c43 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -555, y: 3, name: \"list\") property(List) list_2d4a9f\n\n        out(x: 1041, y: -25, name: \"output\") property(Bool) output_5d8f71\n\n        instance(x: 745, y: -23) is_consecutive_7e3f64 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 317, y: -29) getter_2a85d4 root.Std_k98ojb.List.GetAt {}\n        setter(x: -26, y: -128, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 326, y: -33) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        is_consecutive_7e3f64.then -> setter_9d4f1c.execute\n        list_2d4a9f -> for_d26972.items\n        for_d26972.item -> is_consecutive_7e3f64.gen_2\n        for_d26972.index -> is_consecutive_7e3f64.gen_0\n        getter_b280eb.value -> is_consecutive_7e3f64.gen_1\n        for_d26972.onItem -> is_consecutive_7e3f64.execute\n        for_d26972.done -> output_5d8f71.continue\n        setter_9d4f1c.continue -> for_d26972.reset\n    }\n\n    \n\n    instance(x: -70, y: 66) is_consecutive_6b0a2 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -528, y: 20, name: \"list\") property(List) list_5f2a4e\n\n        out(x: 131, y: -22, name: \"output\") property(Bool) output_58c758\n\n        instance(x: -273, y: -97) for_loop_9b3d7 root.Std_k98ojb.Std.For {}\n        instance(x: -292, y: -81) getat_5a6e89 root.Std_k98ojb.List.GetAt {}\n        instance(x: 114, y: -84) not_equal_82c8f4 root.Std_k98ojb.Logic.NotEqual {}\n        list_5f2a4e -> for_loop_9b3d7.items\n        for_loop_9b3d7.index -> getat_5a6e89.index\n        getat_5a6e89.itemAtIndex -> not_equal_82c8f4.left\n        1 -> not_equal_82c8f4.right\n        not_equal_82c8f4.result -> output_58c758\n    }\n\n    \n\n    instance(x: -41, y: 142) Consecutive_f5a3e9 root.main.Consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ae\n        out(x: 1218, y: -97, name: \"output\") property(Bool) output_6b7a42\n\n        instance(x: -92, y: -96) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -304, y: -95) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 111, y: -94) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 105, y: -92) not_75283f root.Std_k98ojb.Logic.Not {}\n        list_ae -> for_d26972.items\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> sub_852f2e.value\n        1 -> sub_852f2e.divisor\n        not_75283f.result -> output_6b7a42\n    }\n\n    \n\n    instance(x: -67, y: 59) is_consecutive_f4d0a9 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -546, y: 38, name: \"list\") property(List) list_5d8e32\n\n        out(x: 1149, y: -94, name: \"output\") property(Bool) output_ba3c0f\n\n        instance(x: 734, y: -104) for_d41b2 root.Std_k98ojb.Std.For {}\n        instance(x: -17, y: 72) getat_1e6d4 root.Std_k98ojb.List.GetAt {}\n        instance(x: -13, y: 86) sub_5f8a0c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1047, y: -91) equal_3e8e2 root.Std_k98ojb.Logic.Equal {}\n        list_5d8e32 -> for_d41b2.items\n        for_d41b2.index -> getat_1e6d4.index\n        for_d41b2.item -> sub_5f8a0c.first\n        getat_1e6d4.itemAtIndex -> sub_5f8a0c.second\n        equal_3e8e2.left -> sub_5f8a0c.result\n        1 -> equal_3e8e2.right\n        equal_3e8e2.result -> output_ba3c0f\n    }\n\n    \n\n    instance(x: -21, y: 136) is_consecutive_f6b9d7 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -555, y: 46, name: \"list\") property(List) list_5e8a4d\n\n        out(x: 123, y: 67, name: \"output\") property(Bool) output_bf9c2b\n\n        instance(x: 799, y: 72) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -294, y: -28) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: -293, y: 77) lessThanOrEqual_f0f2c4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_5e8a4d -> for_d26972.items\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> lessThanOrEqual_f0f2c4.left\n        getat_ce2a48.itemAtIndex + 1 -> lessThanOrEqual_f0f2c4.right\n        lessThanOrEqual_f0f2c4.result -> output_bf9c2b\n    }\n\n    \n\n    instance(x: -83, y: 100) is_consecutive_5d8e25 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -530, y: 17, name: \"list\") property(List) list_1a9d2e\n\n        out(x: 1128, y: -15, name: \"output\") property(Bool) output_6c87f5\n\n        instance(x: -295, y: 59, name: \"get current number\") get_current_number root.Std_k98ojb.List.GetAt {}\n        instance(x: -288, y: 69, name: \"check if next is equal to current plus one\") check_next_equal root.Std_k98bjk iteration.Map {}\n        instance(x: -281, y: 75, name: \"is not consecutive\") not_consecutive_8d45a5 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: -277, y: 83) less_than_or_equal_7e9f1c root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_1a9d2e -> get_current_number.list\n        get_current_number.index -> check_next_equal.handler\n        check_next_equal.item -> not_consecutive_8d45a5.left\n        get_current_number.value + 1 -> not_consecutive_8d45a5.right\n        less_than_or_equal_7e9f1c.left -> not_consecutive_8d45a5.result\n        1 -> less_than_or_equal_7e9f1c.right\n        not_consecutive_8d45a5.result -> output_6c87f5\n    }\n\n    \n\n    instance(x: -33, y: 144) is_consecutive_3b2aa0 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -493, y: 4, name: \"list\") property(List) list_0f8d74\n\n        out(x: 1143, y: 9, name: \"output\") property(Bool) output_5c94e7\n\n        instance(x: -278, y: 71, name: \"is_equal\") equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_0f8d74 -> is_equal.left\n        1 -> is_equal.right\n        is_equal.result -> output_5c94e7\n        instance(x: -48, y: 93) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n        instance(x: 1049, y: 95) greater_than_f6f2eb root.Std_k98ojb.Math.GreaterThan {}\n        list_0f8d74 -> sub_c76d2b.first\n        sub_c76d2b.result -> greater_than_f6f2eb.left\n        greater_than_f6f2eb.right -> sub_c76d2b.second\n        greater_than_f6f2eb.result -> output_5c94e7\n    }\n\n    \n\n    instance(x: -29, y: 149) Consecutive_9a6c34 root.main.Consecutive {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -476, y: 436, name: \"main_list\") property(List) list_2e9f8d\n        in(x: -486, y: 26, name: \"sublist_list\") property(List) list_6c89a5\n\n        out(x: 1201, y: -110, name: \"output\") property(Bool) output_bf3b47\n\n        instance(x: -292, y: -114) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -321, y: -103) filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        list_6c89a5 -> filter_f3b46d.list\n        main_list -> contains_32727d.item\n        is_sublist_7fdd11 -> output_bf3b47\n    }\n\n    \n\n    instance(x: -67, y: -43) is_sublist_c1e60d root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -247, y: 44, name: \"main_list\") property(List) list_1d4e2b\n        in(x: -242, y: -14, name: \"sublist\") property(List) list_a6a56c\n\n        out(x: 129, y: -29, name: \"output\") property(Bool) output_b3d5af\n\n        instance(x: -82, y: -28) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_a6a56c -> contains_32727d.item\n        main_list -> contains_32727d.list\n        contains_32727d.is_contained -> output_b3d5af\n    }\n\n    \n\n    instance(x: -26, y: 64) is_sublist_e9f8e2 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -493, y: 23, name: \"main_list\") property(List) list_1a8d2b\n        in(x: -490, y: 31, name: \"sublist\") property(List) list_ea6c44\n\n        out(x: 1025, y: -101, name: \"output\") property(Bool) output_b7f4e9\n\n        instance(x: -296, y: -98) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -277, y: 15, name: \"offset\") for_d26972 root.Std_k98ojb.Std.For {}\n        list_ea6c44 -> contains_32727d.item\n        list_ea6c44 -> offset.index\n        contains_32727d.is_contained -> output_b7f4e9\n    }\n\n    \n\n    instance(x: -291, y: 47) is_sublist_f0b3cd root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -565, y: 439, name: \"main_list\") property(List) list_4d9f2b\n        in(x: -576, y: -12, name: \"sub_list\") property(List) list_e6c7aa\n\n        out(x: 1208, y: -102, name: \"output\") property(Bool) output_b3a0ab\n\n        instance(x: -292, y: -108) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_e6c7aa -> contains_32727d.item\n        main_list -> contains_32727d.list\n        not_75283f -> output_b3a0ab\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -65, y: 59) is_sublist_d2c8b9 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -449, y: 43, name: \"main_list\") property(List) list_6f8d4a\n        in(x: -456, y: 45, name: \"sublist_list\") property(List) list_0b7df1\n\n        out(x: 1115, y: -92, name: \"output\") property(Bool) output_4e9c2f\n\n        instance(x: -294, y: -96) filter_3ebd8a root.Std_k98ojb.Query.Filter {\n            where: \"it == sublist_list\"\n        }\n        list_0b7df1 -> filter_3ebd8a.list\n        filter_3ebd8a.result -> output_4e9c2f\n    }\n\n    \n\n    instance(x: -59, y: 39) is_sublist_5bbbf6 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -294, y: 44, name: \"main_list\") property(List) list_9a3e34\n        in(x: -304, y: 23, name: \"sublist\") property(List) list_b2c0b1\n\n        out(x: 1054, y: -101, name: \"output\") property(Bool) output_77f5d6\n\n        instance(x: -46, y: -95) contains_c4a7af root.Std_k98ojb.List.Contains {}\n        list_b2c0b1 -> contains_c4a7af.item\n        list_9a3e34 -> contains_c4a7af.list\n        false -> output_77f5d6\n        contains_c4a7af.is_contained -> output_77f5d6\n    }\n\n    \n\n    instance(x: -45, y: 55) is_sublist_b0b2c1 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -487, y: 21, name: \"main_list\") property(List) list_2d4f0b\n        in(x: -483, y: -10, name: \"sublist\") property(List) list_1c8a6e\n\n        out(x: 1033, y: -20, name: \"output\") property(Bool) output_a7cdcc\n\n        instance(x: -316, y: -16, name: \"is_in_list\") contains_32727d root.Std_k98ojb.List.Contains {}\n        list_2d4f0b -> is_in_list.list\n        list_1c8a6e -> is_in_list.item\n        output_a7cdcc.result -> is_in_list.is_contained\n    }\n\n    \n\n    instance(x: -300, y: 65) is_sublist_8a83b3 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -255, y: 23, name: \"main_list\") property(List) list_8a4e2b\n        in(x: -264, y: -13, name: \"sub_list\") property(List) list_7c5d9f\n\n        out(x: 1093, y: -93, name: \"output\") property(Bool) output_fdf1db\n\n        instance(x: -294, y: -96) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -273, y: -25, name: \"is_equal\") Std.IfExpression {}\n        list_7c5d9f -> for_d26972.items\n        list_8a4e2b -> for_d26972.item\n        for_d26972.index -> is_equal.gen_0\n        list_7c5d9f -> is_equal.then\n        list_8a4e2b -> is_equal.else\n        is_equal.value -> output_fdf1db\n    }\n\n    \n\n    instance(x: -282, y: 13) is_sublist_b7c8ad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -509, y: 28, name: \"main_list\") property(List) list_56d9a1\n        in(x: -515, y: 5, name: \"sub_list\") property(List) list_57c7e3\n\n        out(x: 1164, y: -208, name: \"output\") property(Bool) output_b2f6ad\n\n        instance(x: -84, y: -221) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 146, y: -215) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_57c7e3 -> filter_c91965.items\n        list_56d9a1 -> filter_c91965.context\n        filter_c91965.handler -> contains_32727d.item\n    }\n\n    \n\n    instance(x: -93, y: 62) is_sublist_d5b6f2 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -255, y: 26, name: \"main_list\") property(List) list_4d1e0f\n        in(x: -246, y: -8, name: \"sublist\") property(List) list_5c85a2\n\n        out(x: 1149, y: -25, name: \"output\") property(Bool) output_60b7c6\n\n        instance(x: -63, y: -35) zip_c4d3f8 root.Std_k98ojb.Iteration.Zip {}\n        list_5c85a2 -> zip_c4d3f8.left\n        list_4d1e0f -> zip_c4d3f8.right\n        func() {\n            in(x: -251, y: 39, name: \"item\") property(Number) item_7b9c44\n\n            out(x: 1122, y: 43, name: \"is_sublist\") property(Bool) is_sublist_4e15d\n\n            instance(x: 137, y: -51) contains_f2a3f5 root.Std_k98ojb.List.Contains {}\n            list_5c85a2 -> contains_f2a3f5.item\n            list_4d1e0f -> contains_f2a3f5.list\n            is_sublist_4e15d.result -> output_60b7c6\n        } -> zip_c4d3f8.handler\n    }\n\n    \n\n    instance(x: -30, y: 18) is_sublist_d89df1 root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -272, y: 26, name: \"numbers\") property(List) numbers_8d5a55\n        out(x: 44, y: 20, name: \"missing\") property(Number) missing_5f0e45\n\n        instance(x: 35, y: 43) count_node root.Std_k98ojb.Count {}\n        instance(x: -16, y: 28) for_loop_7d4c9a root.Std_k98ojb.For {}\n        instance(x: 42, y: 50) ifexpression_b3f8ec root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 0, y: 52) add_6ad4e5 root.Std_k98ojb.Math.Add {}\n\n        numbers_8d5a55 -> count_node.items\n        count_node.on_count -> for_loop_7d4c9a.count\n        for_loop_7d4c9a.items -> ifexpression_b3f8ec.items\n        add_6ad4e5.first -> ifexpression_b3f8ec.gen_0\n        add_6ad4e5.second -> ifexpression_b3f8ec.gen_1\n        add_6ad4e5.result -> missing_5f0e45\n\n        for_loop_7d4c9a.reset -> count_node.reset\n        count_node.done -> ifexpression_b3f8ec.then\n        numbers_8d5a55[0] -> ifexpression_b3f8ec.gen_2\n        add_6ad4e5.value -> missing_5f0e45\n    }\n\n    \n\n    instance(x: -123, y: 28) find_missing_7d7f70 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -246, y: 11, name: \"list\") property(List) list_9d4e3f\n\n        out(x: 2, y: 85, name: \"smallestMissing\") property(Number) smallestMissing_eb8c45\n        instance(x: 1, y: 26) count_0a5c55 root.Std_k98ojb.Count {}\n        list_9d4e3f -> count_0a5c55.items\n        count_0a5c55.onCount -> smallestMissing_eb8c45\n        count_0a5c55.done -> smallestMissing_eb8c45\n    }\n\n    \n\n    instance(x: -44, y: 103) find_missing_4d3e33 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -304, y: 2, name: \"list\") property(List) list_abed4a\n\n        out(x: 42, y: 165, name: \"smallest_missing\") property(Number) smallest_missing_5d3f66\n        instance(x: 0, y: 0) for_loop_node root.Std_k98ojb.Std.For {\n            in(x: -106, y: 19, name: \"i\") property(Number) i_a9c8a1\n            in(x: -44, y: 65, name: \"start\") trigger() start_6d7f4e\n\n            out(x: -74, y: 31, name: \"done\") trigger() done_5a2b3c\n\n            instance(x: 0, y: 26) count_node root.Std_k98ojb.Count {\n                reset -> start_6d7f4e\n                count -> i_a9c8a1\n                onCount -> for_loop_node.interation\n                done -> for_loop_node.done\n            }\n            list_abed4a[0] -> count_node.items\n            count_node.iteration -> i_a9c8a1\n            if(i_a9c8a1 > list_abed4a.length - 1) {\n                smallest_missing_5d3f66 = i_a9c8a1 + 1\n            }\n        } -> for_loop_node.item\n\n        instance(x: -63, y: 143) min_node root.Std_k98ojb.Math.Min {}\n        list_abed4a[0] -> min_node.values\n        min_node.result -> smallest_missing_5d3f66\n    }\n\n    \n\n    instance(x: -47, y: 519) SmallestMissing_8c9e56 root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -281, y: 2, name: \"list\") property(List) list_ai\n        out(x: 46, y: 158, name: \"smallest_missing\") property(Number) smallest_missing_3b6e42\n\n        instance(x: 0, y: 0) find_smallest_7f9a5 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) count_a5c9d root.Std_k98ojb.Count {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            elem_9f6850 -> notequal_807ffd.left\n            count_a5c9d.iterations -> notequal_807ffd.count\n            list_ai[0] -> elem_9f6850\n            list_ai[1] -> elem_9f6850\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_smallest_7f9a5.predicate\n\n        instance(x: -341, y: 301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_ai[0] -> min_c3e343.items\n        list_ai[1] -> min_c3e343.items\n        min_c3e343.min -> smallest_missing_3b6e42\n\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_2c856f root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -288, y: 21, name: \"list\") property(List) list_5d9e34\n\n        out(x: 28, y: 16, name: \"missing\") property(Number) missing_0c8693\n        instance(x: 11, y: 55) for_6f1a8b root.Std_k98ojb.Std.For {\n            trigger: \"on start\"\n            reset: Std_k98ojb.Count.reset\n            count: Std_k98ojb.Count.count\n            items: list_5d9e34\n            on item: Std_k98ojb.List.FirstItem\n            done: Std_k98ojb.List.LastItem\n        }\n        for_6f1a8b.iteration -> missing_0c8693\n    }\n\n    \n\n    instance(x: -13, y: 44) find_missing_3e5d95 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -246, y: 22, name: \"list\") property(List) list_3a4b9d\n\n        out(x: 5, y: 71, name: \"smallest_missing\") property(Number) smallest_missing_a6f1d7\n        instance(x: -113, y: 31) for_loop_e8e34 root.Std_k98ojb.Std.For {\n            items: list_3a4b9d,\n            index: 0,\n            reset: Std_k98ojb.Std.Count.reset,\n            next: Std_k98ojb.Std.Count.next\n        }\n        list_3a4b9d -> for_loop_e8e34.items\n        for_loop_e8e34.index -> for_loop_e8e34.index\n        for_loop_e8e34.next -> for_loop_e8e34.next\n        1 -> for_loop_e8e34.iterations\n        for_loop_e8e34.done -> smallest_missing_a6f1d7\n    }\n\n    \n\n    instance(x: -174, y: 93) find_smallest_missing_9c758 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -304, y: 26, name: \"numbers\") property(List) numbers_4a0b1f\n        out(x: 42, y: 70, name: \"smallest_missing\") property(Number) smallest_missing_5c6f3e\n\n        instance(x: -113, y: 67) for_loop_2d35e root.Std_k98ojb.Std.For {\n            items: numbers_4a0b1f\n            reset: Std_k98ojb.Count.reset\n            next: Std_k98ojb.Count.next\n            on item: Std_k98ojb.List.FirstItem\n        }\n        instance(x: 346, y: -34, name: \"current_number\") current_number_4a0b1f root.Std_k98ojb.List.FirstItem {}\n        numbers_4a0b1f -> for_loop_2d35e.items\n        Std_k98ojb.Count.iterations -> for_loop_2d35e.iterations\n        for_loop_2d35e.on item -> current_number_4a0b1f.item\n        current_number_4a0b1f.item -> smallest_missing_5c6f3e\n    }\n\n    \n\n    instance(x: -33, y: 128) find_smallest_missing_8d9a7 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -305, y: 33, name: \"numbers\") property(List) numbers_3d1f4a\n\n        out(x: 41, y: 69, name: \"smallest_missing\") property(Number) smallest_missing_5c6d88\n        instance(x: 0, y: 0) for_loop_node root.Std_k98ojb.Std.For {\n            trigger: \"on count\"\n            reset: Std_k98ojb.Count.reset\n            count: Std_k98ojb.Count.count\n            items: numbers_3d1f4a\n        }\n        in(x: -456, y: 34, name: \"item\") property(Number) item_0e2e5c\n\n        instance(x: 69, y: 21) find_missing_node root.find_missing {}\n        item_0e2e5c -> find_missing_node.item\n        for_loop_node.iteration -> find_missing_node.interation\n        Std_k98ojb.Math.Min(numbers_3d1f4a) -> find_missing_node.min\n        if (find_missing_node.min + 1) > numbers_3d1f4a[Std_k98ojb.List.Length(numbers_3d1f4a)-1] then {\n            smallest_missing_5c6d88 = find_missing_node.min + 1\n        } else {\n            smallest_missing_5c6d88 = null\n        }\n    }\n\n    \n\n    instance(x: -174, y: 73) find_missing_9b8e0f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -292, y: 29, name: \"list\") property(List) list_8a4f5d\n\n        out(x: 44, y: 21, name: \"min\") property(Number) min_6f7c85\n        instance(x: 0, y: 0) find_missing_71e3b9 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -105, y: 39, name: \"elem\") property(Number) elem_8a4f5d\n\n            out(x: 509, y: 46, name: \"bool\") property(Bool) bool_a1e3f0\n\n            instance(x: 89, y: 35) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {}\n            getter(x: -144, y: 49, name: \"getter_9cceb3\") getter_9cceb3 = min\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n            setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n            ifexpression_e38995.expression = \"elem == elem_8a4f5d + 1\"\n        } -> find_missing_71e3b9.predicate\n        list_8a4f5d -> find_missing_71e3b9.items\n        find_missing_71e3b9.item -> min_6f7c85\n    }\n\n    \n\n    instance(x: -174, y: 529) find_smallest_missing_2c856f root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -444, y: 3, name: \"list\") property(List) list_abcd\n\n        out(x: 47, y: 114, name: \"missing\") property(Number) missing_1d5f8a\n\n        instance(x: 0, y: 0) for_loop_7c76e4 root.Std_k98ojb.Std.For {\n            items: list_abcd\n            on item: {\n                in(x: -456, y: 101, name: \"current\") property(Number) current_a5d3a1\n                in(x: -460, y: 68, name: \"expected\") property(Number) expected_9f7e28\n                in(x: -451, y: 109, name: \"next\") property(Number) next_c8bde4\n\n                instance(x: 0, y: 118) count_7c76e5 root.Std_k98ojb.Count {}\n                count_7c76e5.iterations -> expected_9f7e28\n                current_a5d3a1 -> next_c8bde4\n                list_abcd -> for_loop_7c76e4.items\n\n                if (current_a5d3a1 + 1 != expected_9f7e28) {\n                    missing_1d5f8a = current_a5d3a1 + 1\n                    return\n                }\n            }\n\n            next: {\n                for_loop_7c76e4.index -> next_c8bde4\n            }\n        } -> find_missing.on_item\n\n        instance(x: -460, y: 68, name: \"initial\") property(Number) initial_9f7e28\n        list_abcd[0] -> initial_9f7e28\n        if (initial_9f7e28 != 1) {\n            missing_1d5f8a = 1\n            return\n        }\n        for_loop_7c76e4.index -> next_c8bde4\n    }\n\n    \n\n    instance(x: -174, y: 529) find_missing_6eb2e3 root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -1408, y: 22, name: \"input\") property(String) input_9d4e6f\n\n        out(x: 550, y: -57, name: \"output\") property(String) output_2c89b5\n\n        instance(x: 91, y: 14) replace_0a7eb1 root.Std_k98ojb.Strings.Replace {}\n        input_9d4e6f -> replace_0a7eb1.input\n        \",.\" -> replace_0a7eb1.search\n        \":\" -> replace_0a7eb1.replace\n        replace_0a7eb1.output -> output_2c89b5\n    }\n\n    \n\n    instance(x: -137, y: 53) replace_with_colon_4f8d1e root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -138, y: 4, name: \"input\") property(String) input_0\n        out(x: 513, y: -60, name: \"output\") property(String) output_1\n\n        instance(x: 97, y: -86) replace_f3c7e5 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_f3c7e5.input\n        \",.\" -> replace_f3c7e5.search\n        \":\" -> replace_f3c7e5.replace\n        replace_f3c7e5.output -> output_1\n    }\n\n    \n\n    instance(x: 100, y: -44) replace_special_chars_b9f8b2 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -123, y: 10, name: \"input\") property(String) input_e1\n        out(x: 442, y: -23, name: \"output\") property(String) output_6d\n\n        instance(x: 87, y: 22) replace_7e3f4c root.Std_k98ojb.Strings.Replace {}\n        input_e1 -> replace_7e3f4c.input\n        \",.\" -> replace_7e3f4c.search\n        \":\" -> replace_7e3f4c.replace\n        replace_7e3f4c.output -> output_6d\n    }\n\n    \n\n    instance(x: -145, y: 58) replace_punctuation_e2bdf0 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -114, y: 10, name: \"input\") property(String) input_2d\n        out(x: 444, y: -49, name: \"output\") property(String) output_8b5c7a\n\n        instance(x: 81, y: 24) replace_1e9d4f root.Std_k98ojb.Strings.Replace {}\n        input_2d -> replace_1e9d4f.input\n        \",.\" -> replace_1e9d4f.search\n        \":\" -> replace_1e9d4f.replace\n        replace_1e9d4f.output -> output_8b5c7a\n    }\n\n    \n\n    instance(x: -101, y: 14) replace_special_chars_d4bfc2 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -139, y: 5, name: \"input\") property(String) input_0\n        out(x: 530, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 272, y: 15) replace_d4f5c6 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_d4f5c6.input\n        \",.\" -> replace_d4f5c6.search\n        \":\" -> replace_d4f5c6.replace\n        replace_d4f5c6.output -> output_0\n    }\n\n    \n\n    instance(x: 97, y: -31) replace_special_chars_3e8a2b root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -130, y: 24, name: \"input\") property(String) input_0\n\n        out(x: 493, y: -43, name: \"output\") property(String) output_0\n\n        instance(x: 78, y: 47) replace_2c1f6a root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_2c1f6a.input\n        \",.\" -> replace_2c1f6a.search\n        \":\" -> replace_2c1f6a.replace\n        replace_2c1f6a.output -> output_0\n    }\n\n    \n\n    instance(x: -131, y: 10) replace_punctuation_5d7b3e root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -129, y: 26, name: \"input\") property(String) input_0\n        out(x: 499, y: 14, name: \"output\") property(String) output_0\n\n        instance(x: 88, y: 5) replace_d3d9e1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_d3d9e1.input\n        \",\" -> replace_d3d9e1.search\n        \".\" -> replace_d3d9e1.replace\n        \":\" -> replace_d3d9e1.replace\n        replace_d3d9e1.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: -69) replace_special_chars_66f6a2 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -157, y: 27, name: \"input\") property(String) input_0\n\n        out(x: 512, y: -23, name: \"output\") property(String) output_1\n\n        instance(x: 106, y: 69) replace_6e9b19 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_6e9b19.input\n        \",\" -> replace_6e9b19.search\n        \".\" -> replace_6e9b19.search\n        \" \" -> replace_6e9b19.search\n        \":\" -> replace_6e9b19.replace\n        replace_6e9b19.output -> output_1\n    }\n\n    \n\n    instance(x: -144, y: 34) replace_punctuation_3f7d0c root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -146, y: 30, name: \"input\") property(String) input_5f3d9e\n\n        out(x: 446, y: -68, name: \"output\") property(String) output_b4a6ec\n\n        instance(x: 78, y: -101) replace_2c22db root.Std_k98ojb.Strings.Replace {}\n        input_5f3d9e -> replace_2c22db.input\n        \",\" -> replace_2c22db.search\n        \".\" -> replace_2c22db.search\n        \" \" -> replace_2c22db.search\n        \":\" -> replace_2c22db.replace\n        replace_2c22db.output -> output_b4a6ec\n    }\n\n    \n\n    instance(x: -69, y: 46) replace_special_chars_5e8d0b root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -1091, y: 15, name: \"input\") property(String) input_2f9d0e\n\n        out(x: 493, y: -38, name: \"output\") property(String) output_4c1a19\n\n        instance(x: 1055, y: -24) replace_64b7c6 root.Std_k98ojb.Strings.Replace {}\n        input_2f9d0e -> replace_64b7c6.input\n        \",.\" -> replace_64b7c6.search\n        \":\" -> replace_64b7c6.replace\n        replace_64b7c6.output -> output_4c1a19\n    }\n\n    \n\n    instance(x: -63, y: 78) replace_special_chars_8f5e2b root.main.replace_special_chars {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -47, y: 22, name: \"string\") property(String) string_8a2d95\n\n        out(x: 1133, y: 53, name: \"output\") property(Bool) output_b6c1e5\n\n        instance(x: -85, y: 75) tolower_4f1b9 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 246, y: 47) contains_f8a94d root.Std_k98ojb.Strings.Contains {}\n        tolower_4f1b9.result -> output_b6c1e5\n        string_8a2d95 -> tolower_4f1b9.input\n        'a' -> contains_f8a94d.contains\n        'z' -> contains_f8a94d.contains\n        contains_f8a94d.is_contained -> output_b6c1e5\n    }\n\n    \n\n    instance(x: 10, y: -167) all_same_13b7ed root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: -44, y: 24, name: \"input\") property(String) input_0d6f1e\n\n        out(x: 1338, y: -14, name: \"output\") property(Bool) output_e7a5b9\n\n        instance(x: -64, y: -29) length_4c34c2 root.Std_k98ojb.List.Length {}\n        instance(x: 186, y: 31) islower_d8d3e6 root.Std_k98ojb.Strings.IsLower {}\n        instance(x: 302, y: 33) isupper_eb0f7a root.Std_k98ojb.Strings.IsUpper {}\n        instance(x: -27, y: -13) replace_9c43a1 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -22, y: 46) contains_d41d5 root.Std_k98ojb.Strings.Contains {}\n        islower_d8d3e6.result -> output_e7a5b9\n        isupper_eb0f7a.result -> output_e7a5b9\n        replace_9c43a1.replace -> contains_d41d5.contains\n        length_4c34c2.length -> contains_d41d5.list\n        input_0d6f1e -> replace_9c43a1.search\n    }\n\n    \n\n    instance(x: 21, y: -24) is_same_char_f8a7af root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same {\n        in(x: -446, y: 47, name: \"string\") property(String) string_3e4f5b\n\n        out(x: 1341, y: -7, name: \"output\") property(Bool) output_b0d8a6\n\n        instance(x: -83, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 219, y: -34) islower_c7e3c4 root.Std_k98ojb.Strings.IsLower {}\n        instance(x: 292, y: -33) istitle_c5fdd2 root.Std_k98ojb.Strings.IsTitle {}\n        instance(x: 391, y: -32) isupper_d6d9a8 root.Std_k98ojb.Strings.IsUpper {}\n        instance(x: 465, y: 34) tolower_0e21ea root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 549, y: 36) uppercase_5f2c42 root.Std_k98ojb.Strings.ToUpper {}\n        contains_32727d.item -> islower_c7e3c4.item\n        string_3e4f5b -> contains_32727d.item\n        islower_c7e3c4.result -> is_all_characters_same.predicate\n        istitle_c5fdd2.result -> is_all_characters_same.predicate\n        isupper_d6d9a8.result -> is_all_characters_same.predicate\n        tolower_0e21ea.result -> is_all_characters_same.predicate\n        uppercase_5f2c42.result -> is_all_characters_same.predicate\n        is_all_characters_same.value -> output_b0d8a6\n    }\n\n    \n\n    instance(x: 24, y: -11) is_all_characters_same_d37b15 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") is_all_same {\n        in(x: -33, y: 64, name: \"string\") property(String) string_8d3f45\n\n        out(x: 1005, y: 10, name: \"output\") property(Bool) output_f1b2e9\n\n        instance(x: -94, y: 19) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 54) islower_a4c9d0 root.Std_k98ojb.Strings.IsLower {}\n        instance(x: 321, y: 40) tolower_77da66 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -82, y: 64) for_d26972 root.Std_k98ojb.Std.For {}\n        islower_a4c9d0.result -> output_f1b2e9\n        length_6e87f2.length -> islower_a4c9d0.right\n        string_8d3f45 -> tolower_77da66.input\n        for_d26972.item -> islower_a4c9d0.new_value\n        tolower_77da66.result -> output_f1b2e9\n        length_6e87f2.list -> for_d26972.items\n    }\n\n    \n\n    instance(x: 48, y: 10) is_all_same_5c8a99 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: -33, y: 26, name: \"input\") property(String) input_9e71d1\n\n        out(x: 1248, y: -28, name: \"output\") property(Bool) output_f3c2df\n\n        instance(x: -27, y: 24) tolower_5f3a7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -29, y: 21) characters_6d84e1 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1044, y: 17) contains_32727d root.Std_k98ojb.List.Contains {}\n        is_same_char_8a0f5c -> output_f3c2df\n    }\n\n    \n\n    instance(x: -25, y: 49) is_same_char_8a0f5 root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: -475, y: 39, name: \"string\") property(String) string_3f6e36\n\n        out(x: 1038, y: -12, name: \"output\") property(Bool) output_b9b1d7\n\n        instance(x: 251, y: 43) length_5a2c61 root.Std_k98ojb.List.Length {}\n        instance(x: 342, y: 52) tolower_8e6f15 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -26, y: 62) isnumeric_9d7d28 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 12, y: 55) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1064, y: 68) equal_8e2f0a root.Std_k98ojb.Logic.Equal {}\n        string_3f6e36 -> length_5a2c61.list\n        tolower_8e6f15.string -> contains_32727d.item\n        isnumeric_9d7d28.item -> equal_8e2f0a.left\n        0 -> equal_8e2f0a.right\n        equal_8e2f0a.result -> output_b9b1d7\n    }\n\n    \n\n    instance(x: -49, y: 24) is_same_char_5cd3d4 root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") is_same_char {\n        in(x: -33, y: 31, name: \"input\") property(String) input_58f6e5\n\n        out(x: 1111, y: 3, name: \"output\") property(Bool) output_b4b2db\n\n        instance(x: 234, y: 57) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -11, y: 44) tolower_f5c0a7 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 1009, y: 43) characters_c2b6e4 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 155, y: 47) isnumeric_8f1d23 root.Std_k98ojb.Strings.IsNumeric {}\n        contains_32727d.is_contained -> output_b4b2db\n        tolower_f5c0a7.result -> characters_c2b6e4.input\n        characters_c2b6e4.characters -> isnumeric_8f1d23.item\n        isnumeric_8f1d23.result -> output_b4b2db\n    }\n\n    \n\n    instance(x: 17, y: -146) is_same_char_0c7a45 root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -245, y: 73, name: \"input\") property(String) input_5d4a6f\n\n        out(x: 1309, y: 12, name: \"output\") property(Bool) output_b8bfb2\n\n        instance(x: 342, y: 96) length_8c1e7f root.Std_k98ojb.List.Length {}\n        instance(x: -25, y: -14) contains_f9e3a6 root.Std_k98ojb.List.Contains {}\n        function(x: 119, y: 24) is_same_5d0f6b root.Std_k98ojb.Std.If {\n            expression: \"input == input[0]\"\n        }\n        instance(x: -146, y: -16) stringstolower_d9c7e1 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 143, y: 64) characters_2f4a66 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 305, y: 17) not_e3d6ec root.Std_k98ojb.Logic.Not {}\n        function(x: -10, y: 24) strings_isnumeric_d9c7e1 root.Std_k98ojb.Strings.IsNumeric {}\n        input_5d4a6f -> is_same_.predicate\n        length_8c1e7f.length -> contains_f9e3a6.is_contained\n        input_5d4a6f -> strings_isnumeric_d9c7e1.input\n        not_e3d6ec.result -> output_b8bfb2\n    }\n\n    \n\n    instance(x: 11, y: -183) is_same_6cd3b0 root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") is_same_char {\n        in(x: -32, y: 14, name: \"input\") property(String) input_8f9d44\n\n        out(x: 1101, y: 19, name: \"output\") property(Bool) output_f6e2b3\n\n        instance(x: 151, y: 15) contains_ba4c6f root.Std_k98ojb.Strings.Contains {}\n        instance(x: -25, y: 27) tolower_1d9a43 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 215, y: 12) characters_9e5af0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 349, y: 26) isnumeric_e7f6f4 root.Std_k98ojb.Strings.IsNumeric {}\n        tolower_1d9a43.result -> contains_ba4c6f.input\n        characters_9e5af0.characters -> input_8f9d44\n        isnumeric_e7f6f4.is_contained -> contains_ba4c6f.item\n    }\n\n    \n\n    instance(x: 29, y: -176) is_same_char_c98b28 root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -24, y: 74, name: \"s\") property(String) s_0f4d95\n\n        out(x: 1239, y: 5, name: \"output\") property(Bool) output_b5c85e\n\n        instance(x: 108, y: 70) length_0a2b1f root.Std_k98ojb.List.Length {}\n        instance(x: -30, y: 51) equal_6d4cd9 root.Std_k98ojb.Logic.Equal {}\n        s_0f4d95 -> length_0a2b1f.list\n        length_0a2b1f.length -> equal_6d4cd9.left\n        s_0f4d95 -> equal_6d4cd9.right\n        equal_6d4cd9.result -> output_b5c85e\n    }\n\n    \n\n    instance(x: 47, y: -23) is_all_same_1bfc3a root.main.is_all_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"s\") property(String) s_ai\n        out(x: -424, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 85, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        s_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n    }\n\n    \n    instance(x: -43, y: -242, name: \"count_digits\") count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: -215, y: -463, name: \"split_node\") split_node root.Std_k98ojb.List.Split {}\n        input_ai -> split_node.input\n        split_node.output -> list_8a15f4\n\n        instance(x: 97, y: -127) Strings.Length {\n            input : list_8a15f4\n        }\n        list_8a15f4.length -> count_ai\n    }\n\n    \n    instance(x: -202, y: -236) floor_node root.Std_k98ojb.Math.Floor {}\n    floor_node.value -> count_ai\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -216, y: 78) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_1a3d7c\n        count_digits_1a3d7c.result -> output_ai\n    }\n\n    \n    instance(x: -213, y: 85) split_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 2, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: -85, y: -46) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n    }\n\n    \n    instance(x: -34, y: 127) std_to_string_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: -442, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 19, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n    }\n\n    \n    instance(x: -45, y: -261, name: \"count_digits\") filter_7b3b7b root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 21, y: -204, name: \"result\") property(Number) result_ai\n\n        instance(x: 30, y: -245) math_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> math_length_node.input\n        math_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 19, y: -217) replace_digits_9f3d4e root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: -430, y: 2, name: \"count\") property(Number) count_ai\n\n        instance(x: 436, y: 3) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n    }\n\n    \n    instance(x: -218, y: -471, name: \"count_digits\") count_7d2e6f root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 25, y: -444, name: \"result\") property(Number) result_ai\n\n        instance(x: 74, y: -324) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_6d0a5c\n        count_digits_6d0a5c -> result_ai\n    }\n\n    \n    instance(x: 91, y: -445) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: -394, y: 77, name: \"count\") property(Number) count_ai\n\n        instance(x: 396, y: 76) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n    }\n\n    \n    instance(x: -34, y: 127) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -233, y: 1) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_8a4f5d.result\n        count_digits_8a4f5d.result -> result_ai\n\n        instance(x: -233, y: 1) math_floor_node root.Std_k98ojb.Math.Floor {}\n        input_ai -> math_floor_node.input\n        strings_length_node.length -> math_floor_node.value\n        math_floor_node.result -> count_digits_8a4f5d.new_value\n    }\n\n    \n    instance(x: -233, y: 1) count_digits_node root.main.count_digits {}\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -304, y: 141, name: \"n\") property(Number) n_5a3d4b\n\n        out(x: 1006, y: -343, name: \"output\") property(Number) output_f2c8a1\n\n        instance(x: 68, y: -389) ifexpression_e85e38 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 414, y: -357) sum_fourth_power_6d9f2c root.main.sum_fourth_power {}\n        instance(x: 96, y: -221) pow_f1aee5 root.Std_k98ojb.Math.Pow {}\n        instance(x: 313, y: -284) mul_0e8f8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 95, y: -197) add_b2c4d6 root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -247) div_f9a1af root.Std_k98ojb.Math.Div {}\n        setter(x: -192, y: -362, name: \"setter_5f3e0b\") setter_5f3e0b = sum\n        setter(x: 874, y: -394, name: \"setter_c0a2c6\") setter_c0a2c6 = sum\n        getter(x: 902, y: -295, name: \"getter_b9d4ad\") getter_b9d4ad = sum\n        instance(x: -199, y: -270) floor_5f1e7b root.Std_k98ojb.Math.Floor {}\n        3 -> pow_f1aee5.y\n        n_5a3d4b -> pow_f1aee5.x\n        pow_f1aee5.result -> mul_0e8f8f.first\n        3 -> div_f9a1af.second\n        div_f9a1af.result -> sum_fourth_power_6d9f2c.n_5a3d4b\n        0 -> setter_5f3e0b.new_value\n        setter_5f3e0b.continue -> ifexpression_e85e38.execute\n        ifexpression_e85e38.then -> sum_fourth_power_6d9f2c.execute_cdac2a\n        execute_cdac2a -> setter_c0a2c6.execute\n        ifexpression_e85e38.else -> sum_fourth_power_6d9f2c.execute_cdac2a\n        sum_fourth_power_6d9f2c.continue_d9efd7 -> setter_c0a2c6.execute\n        sum_fourth_power_6d9f2c.output_732a8a -> add_b2c4d6.second\n        add_b2c4d6.result -> setter_c0a2c6.new_value\n        setter_c0a2c6.continue -> continue_d9efd7\n        getter_b9d4ad.value -> output_f2c8a1\n        n_5a3d4b -> floor_5f1e7b.input\n        floor_5f1e7b.output -> div_f9a1af.first\n        floor_5f1e7b.output -> pow_f1aee5.value\n        floor_5f1e7b.output -> ifexpression_e85e38.gen_0\n    }\n\n    \n\n    instance(x: -175, y: 162) sum_fourth_power_3cddfa root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -291, y: 0, name: \"n\") property(Number) n_9f8d3b\n\n        out(x: 1156, y: -1, name: \"sum\") property(Number) sum_e71e84\n\n        instance(x: 82, y: 0) ifexpression_4a95c7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 410, y: -342) pow_3d8f48 root.Std_k98ojb.Math.Pow {}\n        instance(x: 69, y: -251) sum_9e2c71 root.Std_k98ojb.Math.Sum {}\n        instance(x: 100, y: -236) add_0a8eb5 root.Std_k98ojb.Math.Add {}\n        instance(x: 97, y: -216) div_7d34f4 root.Std_k98ojb.Math.Div {}\n        setter(x: -211, y: -456, name: \"setter_2c9e38\") setter_2c9e38 = sum\n        setter(x: 876, y: -513, name: \"setter_e0db8a\") setter_e0db8a = sum\n        getter(x: 907, y: -305, name: \"getter_f1f4d5\") getter_f1f4d5 = sum\n        instance(x: -203, y: -230) floor_2b4c6e root.Std_k98ojb.Math.Floor {}\n        3 -> pow_3d8f48.power\n        3 -> div_7d34f4.second\n        pow_3d8f48.result -> add_0a8eb5.first\n        3 -> add_0a8eb5.second\n        add_0a8eb5.result -> setter_e0db8a.new_value\n        setter_e0db8a.continue -> ifexpression_4a95c7.execute\n        ifexpression_4a95c7.then -> sum_9e2c71.execute_cdac2a\n        execute_cdac2a -> setter_2c9e38.execute\n        ifexpression_4a95c7.else -> sum_9e2c71.execute_cdac2a\n        sum_9e2c71.continue_d9efd7 -> setter_e0db8a.execute_cdac2a\n        sum_9e2c71.output_732a8a -> add_0a8eb5.second\n        add_0a8eb5.result -> getter_f1f4d5.new_value\n        getter_f1f4d5.continue -> continue_d9efd7\n        floor_2b4c6e.value -> div_7d34f4.first\n        3 -> div_7d34f4.divisor\n        div_7d34f4.result -> pow_3d8f48.value\n        pow_3d8f48.result -> ifexpression_4a95c7.gen_0\n    }\n\n    \n\n    instance(x: -176, y: 173) sum_fourth_power_f56bdf root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -292, y: 165, name: \"n\") property(Number) n_0f8e2a\n\n        out(x: 1500, y: -1, name: \"output\") property(Number) output_aeb9b4\n\n        instance(x: 23, y: 14) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 395, y: -378) sum_fourth_power_8f2e1c root.main.sum_fourth_power {}\n        instance(x: 97, y: -127) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) pow_d66d3f root.Std_k98ojb.Math.Pow {}\n        instance(x: 99, y: -249) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 112, y: 80) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        data_instance(x: 394, y: -339) data_e1c7df  = [sum_fourth_power_8f2e1c, sum]\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (4*n^3+6*n^2+n)/6\"\n        }\n        instance(x: 62, y: -226, name: \"average\") div_2d44da root.Std_k98ojb.Math.Div {}\n        data_e1c7df -> output_aeb9b4\n        n_0f8e2a -> expression_634b7e.gen_0\n        expression_634b7e.result -> data_e1c7df.sum_fourth_power_8f2e1c\n        expression_634b7e.result -> div_2d44da.first\n        div_2d44da.result -> data_e1c7df.sum\n        n_0f8e2a -> div_2d44da.second\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -274, y: 0, name: \"n\") property(Number) n_1d9e5b\n\n        out(x: 2197, y: 145, name: \"sum\") property(Number) sum_f2f43c\n\n        instance(x: 28, y: 22) ifexpression_bf6c8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 58, y: -13) pow_9a54e5 root.Std_k98ojb.Math.Pow {}\n        instance(x: 65, y: -32) sum_7f8f51 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n == 0\"\n        }\n        instance(x: 67, y: 21) add_6c5d4a root.Std_k98ojb.Math.Add {}\n        instance(x: 65, y: -30) mul_3f8b8e root.Std_k98ojb.Math.Mul {}\n        instance(x: 66, y: -25) div_2eb1a7 root.Std_k98ojb.Math.Div {}\n        setter(x: -228, y: -34, name: \"setter_4d0da9\") setter_4d0da9 = sum\n        getter(x: 916, y: 15, name: \"getter_6f6c32\") getter_6f6c32 = sum\n        instance(x: -220, y: -24) floor_1d7df5 root.Std_k98ojb.Math.Floor {}\n        3 -> pow_9a54e5.y\n        pow_9a54e5.result -> add_6c5d4a.first\n        3 -> div_2eb1a7.second\n        div_2eb1a7.result -> getter_6f6c32.n_1d9e5b\n        0 -> setter_4d0da9.new_value\n        setter_4d0da9.continue -> ifexpression_bf6c8.execute\n        ifexpression_bf6c8.then -> sum_7f8f51.execute\n        execute_cdac2a -> setter_4d0da9.execute\n        ifexpression_bf6c8.else -> pow_9a54e5.execute_cdac2a\n        sum_7f8f51.continue_d9efd7 -> mul_3f8b8e.execute\n        sum_7f8f51.output_732a8a -> add_6c5d4a.second\n        add_6c5d4a.result -> setter_4d0da9.new_value\n        setter_4d0da9.continue -> continue_d9efd7\n        getter_6f6c32.value -> sum_f2f43c\n        n_1d9e5b -> floor_1d7df5.input\n        floor_1d7df5.output -> div_2eb1a7.first\n        floor_1d7df5.output -> pow_9a54e5.y\n        pow_9a54e5.result -> ifexpression_bf6c8.gen_0\n    }\n\n    \n\n    instance(x: -231, y: 143) sum_fourth_power_e4b66a root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -272, y: 165, name: \"n\") property(Number) n_4a3d0b\n\n        out(x: 720, y: -5, name: \"output\") property(Number) output_f2f3e6\n\n        instance(x: 98, y: -424) pow_8c7df9 root.Std_k98ojb.Math.Pow {}\n        instance(x: 46, y: -384) mul_1e4d33 root.Std_k98ojb.Math.Mul {}\n        instance(x: 62, y: -255) ifexpression_e2fdd6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 310, y: -334) sum_9d1e5a root.main.sum_fourth_power {}\n        instance(x: 99, y: -243) modulo_4c8f20 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -329) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 97, y: -238) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        3 -> pow_8c7df9.y\n        10 -> modulo_4c8f20.divisor\n        modulo_4c8f20.result -> add_88bb8a.first\n        10 -> div_547f34.second\n        div_547f34.result -> sum_9d1e5a.n_4a3d0b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_e2fdd6.execute\n        ifexpression_e2fdd6.then -> sum_9d1e5a.execute_cdac2a\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_e2fdd6.else -> sum_9d1e5a.execute_cdac2a\n        sum_9d1e5a.continue_d9efd7 -> setter_375321.execute\n        sum_9d1e5a.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_f2f3e6\n        n_4a3d0b -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        floor_61b38d.output -> modulo_4c8f20.value\n        floor_61b38d.output -> ifexpression_e2fdd6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_fourth_power_7e1ce0 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -286, y: 165, name: \"n\") property(Number) n_8b3a95\n\n        out(x: 3282, y: -657, name: \"output\") property(Number) output_b36d98\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        list_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_b36d98\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -273, y: 167, name: \"n\") property(Number) n_5d4a1e\n\n        out(x: 1700, y: -275, name: \"output\") property(Number) output_bf8b7c\n\n        instance(x: 69, y: -386) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 341, y: -349) data_2e0c21  = 3\n        instance(x: 62, y: -258) pow_e6d6f5 root.Std_k98ojb.Math.Pow {}\n        instance(x: 315, y: 27) div_64046c root.Std_k98ojb.Math.Div {}\n        data_2e0c21 -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        pow_e6d6f5.result -> mul_f892a4.second\n        n_5d4a1e -> mul_f892a4.first\n        n_5d4a1e -> pow_e6d6f5.gen_0\n        div_64046c.result -> output_bf8b7c\n    }\n\n    \n\n    instance(x: -82, y: 512) sum_fourth_power_9d2d36 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -285, y: 166, name: \"n\") property(Number) n_09e5f4\n\n        out(x: 7600, y: -1, name: \"sum\") property(Number) sum_2b3c6d\n\n        instance(x: 88, y: 27) pow_f7a8eb root.Std_k98ojb.Math.Pow {}\n        instance(x: 76, y: 24, name: \"first_odd_number\") find_4e0f9b root.Std_k98ojb.Iteration.Find {}\n        instance(x: -58, y: 26, name: \"sum_of_fourth_powers\") ``sum_of_fourth_powers_3a2c8d`` root.Std_k98ojb.Math.Add {}\n        list_empty_4d0e1f -> find_4e0f9b.items\n        func() {\n            in(x: -208, y: 81, name: \"current\") property(Number) current_aad0ca\n\n            out(x: 0, y: 0, name: \"bool\") property(Bool) bool_e1f6d7\n\n            instance(x: 109, y: 79) modulo_8e5a3b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 413, y: 85) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_aad0ca -> modulo_8e5a3b.value\n            2 -> modulo_8e5a3b.divisor\n            modulo_8e5a3b.result -> equal_a54bdc.left\n            1 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_e1f6d7\n        } -> find_4e0f9b.predicate\n        func() {\n            in(x: -208, y: 81, name: \"current\") property(Number) current_aad0ca\n\n            out(x: 0, y: 0, name: \"bool\") property(Bool) bool_e1f6d7\n\n            instance(x: 109, y: 79) modulo_8e5a3b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 420, y: 78) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_aad0ca -> modulo_8e5a3b.value\n            2 -> modulo_8e5a3b.divisor\n            modulo_8e5a3b.result -> notequal_a54bdc.left\n            1 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_e1f6d7\n        } -> ``first_odd_number_0c9df2``.predicate\n        list_empty_4d0e1f -> ``sum_of_fourth_powers_3a2c8d``.items\n        find_4e0f9b.item -> pow_f7a8eb.first\n        ``first_odd_number_0c9df2``.item -> pow_f7a8eb.second\n        pow_f7a8eb.result -> sum_of_fourth_powers_3a2c8d.new_value\n    }\n\n    \n\n    instance(x: -295, y: 179) sum_fourth_power_b1f6e root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_23a2b\n\n        out(x: 3280, y: 145, name: \"output\") property(Number) output_1e3d8f\n\n        instance(x: 88, y: 147) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: -39, y: 26, name: \"First odd number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"sum_of_fourth_power\") pow_6d05b0 root.Std_k98ojb.Math.Pow {}\n        instance(x: 532, y: 147) add_88bb8a root.Std_k98ojb.Math.Add {}\n        list_abed4a -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First odd number_0b1361``.predicate\n        list_abed4a -> ``First odd number_0b1361``.items\n        find_de624f.item -> mul_f892a4.first\n        ``First odd number_0b1361``.item -> mul_f892a4.second\n        pow_6d05b0.result -> add_88bb8a.first\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -438, y: 169, name: \"n\") property(Number) n_3d0b4\n\n        out(x: 1946, y: 7, name: \"sum\") property(Number) sum_1fcd8e\n\n        instance(x: 83, y: 14) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 348, y: -13) data_9d3c4e  = 5\n        instance(x: 23, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"n * (n+1)*(n+2)*(n+3)\"\n        }\n        instance(x: 305, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_9d3c4e -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3d0b4 -> mul_f892a4.first\n        n_3d0b4 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_1fcd8e\n    }\n\n    \n\n    instance(x: -81, y: 529) sum_fourth_power_f5ca35 root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -110, y: 67, name: \"side\") property(Number) side_3d8f6e\n\n        out(x: 152, y: 21, name: \"surface_area\") property(Number) surface_area_e5a7cd\n\n        instance(x: 43, y: -12) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 255, y: 112) data_1f8c6e  = 6\n        instance(x: 19, y: 121) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        data_1f8c6e -> mul_f892a4.second\n        side_3d8f6e -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> mul_f892a4.first\n        mul_f892a4.result -> surface_area_e5a7cd\n    }\n\n    \n\n    instance(x: -179, y: 144) cube_surface_area_a8b1d root.main(cube_surface_area {})\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -211, y: 19, name: \"side_length\") property(Number) side_length_9f2d4a\n\n        out(x: 216, y: 12, name: \"surface_area\") property(Number) surface_area_9bce5e\n\n        instance(x: -114, y: -215) pow_f3c63b root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -209, y: -19, name: \"side_length\") side_length_9f2d4a = 6\n        instance(x: 28, y: -214) mul_d4e5cd root.Std_k98ojb.Math.Mul {}\n        pow_f3c63b.result -> mul_d4e5cd.first\n        side_length_9f2d4a -> mul_d4e5cd.second\n        mul_d4e5cd.result -> surface_area_9bce5e\n    }\n\n    \n\n    instance(x: 207, y: -22) surface_area_6c869 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -123, y: 55, name: \"side_length\") property(Number) side_length_3a8e6d\n\n        out(x: 192, y: 9, name: \"surface_area\") property(Number) surface_area_4f0d35\n\n        instance(x: 26, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"12 * side_length^2\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        side_length_3a8e6d -> mul_f892a4.first\n        surface_area_4f0d35 -> div_64046c.result\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -222, y: 23, name: \"side_length\") property(Number) side_length_5a3f6d\n\n        out(x: 216, y: 47, name: \"surface_area\") property(Number) sa_f1c34e\n\n        instance(x: -144, y: -121) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -209, y: -194) data_e4a016  = side_length_\n        instance(x: -341, y: -302) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_e4a016 -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> mul_f892a4.first\n        side_length_5a3f6d -> mul_f892a4.second\n        mul_f892a4.result -> sa_f1c34e\n    }\n\n    \n\n    instance(x: -191, y: 49) surface_area_a6b8c2 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -281, y: 17, name: \"side\") property(Number) side_5f8d45\n\n        out(x: 216, y: -33, name: \"surface_area\") property(Number) sa_4b0d1c\n        out(x: 509, y: -128, name: \"continue\") trigger() continue_3a9e6e\n\n        instance(x: -114, y: -136) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -142, y: -210) data_cde0dc  = 6\n        instance(x: -341, y: 26) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        side_5f8d45 -> mul_f892a4.first\n        sa_4b0d1c -> div_64046c.result\n    }\n\n    \n\n    instance(x: 346, y: -56) surface_area_9fdd2e root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -105, y: 34, name: \"side\") property(Number) side_0f4a8e\n\n        out(x: 216, y: 44, name: \"surface_area\") property(Number) surface_area_f9b2c6\n        out(x: 192, y: 12, name: \"continue\") trigger() continue_a5d3df\n\n        instance(x: -92, y: 21) mul_7a0eef root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -106, y: 47) data_d9f8ec  = 6\n        instance(x: -342, y: 13) pow_fdb4ac root.Std_k98ojb.Math.Pow {}\n        side_0f4a8e -> mul_7a0eef.first\n        side_0f4a8e -> mul_7a0eef.second\n        data_d9f8ec -> pow_fdb4ac.y\n        pow_fdb4ac.result -> surface_area_f9b2c6\n    }\n\n    \n\n    instance(x: 246, y: -28) cube_surface_area_9d23e1 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -193, y: 25, name: \"side\") property(Number) side_5f6e65\n\n        out(x: 1292, y: 18, name: \"surface_area\") property(Number) surface_area_3c4b7a\n\n        instance(x: -111, y: -174) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -69, y: 128) data_b2f9cd  = 6\n        instance(x: 33, y: 130) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        data_b2f9cd -> mul_f892a4.second\n        side_5f6e65 -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> mul_f892a4.first\n        mul_f892a4.result -> surface_area_3c4b7a\n    }\n\n    \n\n    instance(x: -145, y: -29) surface_area_9f6d5e root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -201, y: 23, name: \"side_length\") property(Number) side_length_58e4b1\n\n        out(x: 192, y: 54, name: \"surface_area\") property(Number) surface_area_7c6c5f\n\n        instance(x: 15, y: -137) pow_f96c0a root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -202, y: -14, name: \"side_length\") side_length_58e4b1 = side_length_58e4b1\n        instance(x: -114, y: 43) mul_bf45c0 root.Std_k98ojb.Math.Mul {}\n        pow_f96c0a.result -> mul_bf45c0.first\n        6 -> mul_bf45c0.second\n        mul_bf45c0.result -> surface_area_7c6c5f\n    }\n\n    \n\n    instance(x: -173, y: -16) cube_surface_area_d2d1b root.main(cube_surface_area {})\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -101, y: 15, name: \"side\") property(Number) side_8e3d5f\n\n        out(x: 216, y: -26, name: \"area\") property(Number) area_b9b6df1\n        out(x: 1032, y: -13, name: \"continue\") trigger() continue_56d86a\n\n        instance(x: -76, y: -105) math_expression_f3f5e root.Std_k98ojb.Math.Expression {\n            expression: \"6 * (side^2)\"\n        }\n        side_8e3d5f -> math_expression_f3f5e.gen_0\n        math_expression_f3f5e.result -> area_b9b6df1\n    }\n\n    \n\n    instance(x: 108, y: -22) surface_area_dff4c9 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -120, y: 45, name: \"side_length\") property(Number) side_length_9a0e2f\n\n        out(x: 216, y: -19, name: \"surface_area\") property(Number) surface_area_1c85d6\n\n        instance(x: -189, y: -26, name: \"6_times_side_length\") property(Number) six_times_side_length_9bfc67\n        side_length_9a0e2f -> 6_times_side_length\n        6 -> six_times_side_length\n\n        instance(x: -101, y: 24, name: \"square_of_side_length\") property(Number) square_of_side_length_b7d5c1\n        side_length_9a0e2f -> square_of_side_length\n        square_of_side_length_b7d5c1 -> surface_area_1c85d6\n\n        instance(x: -206, y: 16, name: \"multiply\") property(Number) multiply_c8f33b\n        six_times_side_length -> multiply\n        square_of_side_length_b7d5c1 -> multiply\n        multiply.result -> surface_area_1c85d6\n    }\n\n    \n\n    instance(x: -195, y: 22) surface_area_e77a3e root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -1003, y: -504, name: \"list\") property(List) list_6f8d1e\n\n        out(x: 102, y: -502, name: \"difference\") property(Number) difference_c2b4a9\n\n        instance(x: -1127, y: -368, name: \"max_node\") Max {}\n        instance(x: -1013, y: -488, name: \"min_node\") Min {}\n        data_instance(x: 1141, y: -362) data_98d56f  = [max, min]\n        instance(x: -1065, y: -484) sub_ea9df0 root.Std_k98ojb.Math.Sub {}\n        list_6f8d1e -> max_node.items\n        list_6f8d1e -> min_node.items\n        data_98d56f -> sub_ea9df0.first\n        max_node.max -> data_98d56f.max\n        min_node.min -> data_98d56f.min\n        sub_ea9df0.result -> difference_c2b4a9\n    }\n\n    \n\n    instance(x: 100, y: -63) diff_largest_smallest_15c7e3 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -109, y: -488, name: \"list\") property(List) list_0b075e\n\n        out(x: 505, y: -438, name: \"difference\") property(Number) difference_b1d7f8\n\n        instance(x: -419, y: 178, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -1049, y: -375) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 188, y: 425) max_5e1d0a root.Std_k98ojb.Math.Max {}\n        instance(x: 188, y: 425) min_7fdd2c root.Std_k98ojb.Math.Min {}\n        list_0b075e -> filter_f3b46d.list\n        list_0b075e -> firstitem_870503.list\n        list_0b075e -> filter_4d4556.list\n        list_0b075e -> firstitem_3078c6.list\n        sub_852f2e.result -> slice_3f3ee6.slice\n        length_4b8927.length -> max_5e1d0a.right\n        0 -> max_5e1d0a.left\n        list_0b075e -> min_7fdd2c.list\n        length_4b8927.length -> sub_852f2e.first\n        slice_3f3ee6.slice -> min_7fdd2c.result\n        max_5e1d0a.result -> difference_b1d7f8\n        min_7fdd2c.result -> difference_b1d7f8\n    }\n\n    \n\n    instance(x: 101, y: -67) diff_largest_smallest_f21f44 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -113, y: 16, name: \"list\") property(List) list_85d2b4\n\n        out(x: -121, y: 23, name: \"difference\") property(Number) difference_ebf8e6\n        out(x: -114, y: 26, name: \"output\") trigger() output_5f5c43\n\n        instance(x: -143, y: -112) max_3d1a2b root.Std_k98ojb.List.Max {}\n        instance(x: -120, y: -47) min_4e8bf6 root.Std_k98ojb.List.Min {}\n        data_instance(x: 104, y: 13) data_5c0fdd  = [max, min]\n        instance(x: -124, y: -43) sub_57df23 root.Std_k98ojb.Math.Sub {}\n        list_85d2b4 -> max_3d1a2b.items\n        list_85d2b4 -> min_4e8bf6.items\n        data_5c0fdd -> sub_57df23.gen_0\n        max_3d1a2b.max -> data_5c0fdd.max\n        min_4e8bf6.min -> data_5c0fdd.min\n        sub_57df23.result -> difference_ebf8e6\n    }\n\n    \n\n    instance(x: 100, y: -64) diff_max_min_5a2b9d root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -142, y: -536, name: \"list\") property(List) list_3d4f1a\n\n        out(x: 43, y: 15, name: \"difference\") property(Number) difference_54e56b\n        out(x: -118, y: -513, name: \"output\") trigger() output_e2c9a5\n\n        instance(x: -1107, y: -442) length_3d6f8d root.Std_k98ojb.List.Length {}\n        instance(x: 200, y: 13) max_19e0d4 root.Std_k98ojb.List.Max {}\n        instance(x: -1059, y: -488) min_5c7a2a root.Std_k98ojb.List.Min {}\n        instance(x: -1013, y: -489) sub_1b0f8e root.Std_k98ojb.Math.Sub {}\n        list_3d4f1a -> length_3d6f8d.list\n        max_19e0d4.items -> min_5c7a2a.items\n        min_5c7a2a.item -> sub_1b0f8e.first\n        sub_1b0f8e.result -> difference_54e56b\n    }\n\n    \n\n    instance(x: 42, y: -67) diff_max_min_6d4f4b root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -1459, y: -546, name: \"list\") property(List) list_0b075e\n\n        out(x: 505, y: -536, name: \"output\") property(Number) output_195363\n\n        instance(x: -1049, y: -375) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -978, y: -566) max_8a4c43 root.Std_k98ojb.List.Max {}\n        instance(x: -1405, y: -438) min_9e3d63 root.Std_k98ojb.List.Min {}\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first, middle, last]\n        instance(x: -432, y: -620) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_752c60 -> max_8a4c43.items\n        list_752c60 -> min_9e3d63.items\n        max_8a4c43.max -> output_195363\n        min_9e3d63.min -> sub_f133b2.result\n    }\n\n    \n\n    instance(x: 101, y: -67) diff_largest_smallest_496e5e root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -136, y: 156, name: \"list\") property(List) list_2d9a8e\n\n        out(x: 432, y: 23, name: \"output\") property(Number) output_b0c1f4\n        out(x: 509, y: 13, name: \"continue\") trigger() continue_6b5dd3\n\n        instance(x: -102, y: -105) maxitem_8a3e34 root.Std_k98ojb.List.Max {}\n        instance(x: -103, y: -104) minitem_f4d7f1 root.Std_k98ojb.List.Min {}\n        data_instance(x: 436, y: 28) data_e71c9c  = [max, min]\n        instance(x: -74, y: 31) sub_6c5a8e root.Std_k98ojb.Math.Sub {}\n        list_2d9a8e -> maxitem_8a3e34.list\n        list_2d9a8e -> minitem_f4d7f1.list\n        data_e71c9c -> sub_6c5a8e.items\n        maxitem_8a3e34.max -> data_e71c9c.max\n        minitem_f4d7f1.min -> data_e71c9c.min\n        sub_6c5a8e.result -> output_b0c1f4\n    }\n\n    \n\n    instance(x: 47, y: -13) diff_max_min_63cd43 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -1135, y: -546, name: \"list\") property(List) list_0a6b14\n\n        out(x: 1113, y: -555, name: \"difference\") property(Number) difference_b2d8c4\n        out(x: -1149, y: -510, name: \"continue\") trigger() continue_7e6c85\n\n        instance(x: -1031, y: -546) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 1018, y: -516) max_5a2f0d root.Std_k98ojb.List.Max {}\n        instance(x: -1093, y: -510) min_6e87f2 root.Std_k98ojb.List.Min {}\n        instance(x: -1131, y: 12, name: \"output\") property(Number) output_8a0164\n        data_instance(x: -1149, y: -546) data_e0c3d7  = [length, max, min]\n        instance(x: -1031, y: -510) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_0a6b14 -> length_4b8927.list\n        list_0a6b14 -> max_5a2f0d.items\n        min_6e87f2.items -> data_e0c3d7.length\n        length_4b8927.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        list_0a6b14 -> max_5a2f0d.items\n        data_e0c3d7.max -> output_8a0164\n        min_6e87f2.result -> difference_b2d8c4\n    }\n\n    \n\n    instance(x: 103, y: -64) diff_max_min_9bfb74 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -128, y: 215, name: \"list\") property(List) list_4d9e65\n\n        out(x: 513, y: 155, name: \"difference\") property(Number) difference_a4f7b3\n        out(x: -139, y: -24, name: \"output\") trigger() output_1a2c8d\n\n        instance(x: -1009, y: 153) length_0e35b5 root.Std_k98ojb.List.Length {}\n        instance(x: 202, y: 145) max_4d7f33 root.Std_k98ojb.List.Max {}\n        instance(x: -1098, y: 156) min_1c9a6f root.Std_k98ojb.List.Min {}\n        instance(x: 195, y: 144) sub_3e87aa root.Std_k98ojb.Math.Sub {}\n        list_4d9e65 -> length_0e35b5.list\n        max_4d7f33.items -> min_1c9a6f.items\n        sub_3e87aa.first -> difference_a4f7b3\n        sub_3e87aa.second -> output_1a2c8d\n    }\n\n    \n\n    instance(x: 105, y: -25) diff_max_min_5e0df9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -1438, y: -638, name: \"list\") property(List) list_1f4d35\n\n        out(x: 444, y: 162, name: \"output\") property(Number) output_3e34b5\n\n        instance(x: -1039, y: -446) length_4a83ad root.Std_k98ojb.List.Length {}\n        instance(x: -1050, y: -499) maxitem_e7f8c1 root.Std_k98ojb.List.Max {}\n        instance(x: 198, y: 156) minitem_f3e5d2 root.Std_k98ojb.List.Min {}\n        data_instance(x: -1036, y: -475) data_4f5a57  = [max, min]\n        instance(x: -1098, y: -438) sub_7c1c43 root.Std_k98ojb.Math.Sub {}\n        list_1f4d35 -> maxitem_e7f8c1.list\n        list_1f4d35 -> minitem_f3e5d2.list\n        data_4f5a57 -> sub_7c1c43.items\n        length_4a83ad.length -> sub_7c1c43.first\n        maxitem_e7f8c1.item -> data_4f5a57.max\n        minitem_f3e5d2.item -> data_4f5a57.min\n        list_1f4d35 -> sub_7c1c43.second\n        sub_7c1c43.result -> output_3e34b5\n    }\n\n    \n\n    instance(x: 100, y: -48) diff_max_min_6f2da0 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -124, y: -546, name: \"list\") property(List) list_1b6f3d\n\n        out(x: -109, y: -620, name: \"output\") property(Number) output_6c63e4\n\n        instance(x: -105, y: -110) length_7a9d23 root.Std_k98ojb.List.Length {}\n        instance(x: 0, y: -48) maxitem_5f8ca3 root.Std_k98ojb.List.Max {}\n        instance(x: -1046, y: -510) minitem_b1c8f4 root.Std_k98ojb.List.Min {}\n        data_instance(x: -1032, y: 0) data_eba9e1  = [max, min]\n        instance(x: -1017, y: -528) sub_74a0ec root.Std_k98ojb.Math.Sub {}\n        list_1b6f3d -> maxitem_5f8ca3.list\n        list_1b6f3d -> minitem_b1c8f4.list\n        data_eba9e1 -> sub_74a0ec.items\n        maxitem_5f8ca3.item -> data_eba9e1.max\n        minitem_b1c8f4.item -> data_eba9e1.min\n        list_1b6f3d -> sub_74a0ec.list\n        1 -> sub_74a0ec.first\n        sub_74a0ec.result -> output_6c63e4\n    }\n\n    \n\n    instance(x: -101, y: -48) diff_largest_smallest_8cd9b3 root.main.diff_largest_smallest {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -32, y: 17, name: \"number\") property(Number) number_5f2e33\n\n        out(x: 1459, y: 22, name: \"output\") property(Bool) output_ebdfc1\n\n        instance(x: -194, y: 26) modulo_d8d0e4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 198, y: 21) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 1459, y: 23) tolower_59f7df root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -17, y: 28) isnumeric_2e8d74 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 200, y: 20) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n\n        number_5f2e33 -> modulo_d8d0e4.value\n        0 -> notequal_7836b4.right\n        tolower_59f7df(number_5f2e33) -> isnumeric_2e8d74\n        isnumeric_2e8d74.result -> greaterthan_cb50ae.left\n        modulo_d8d0e4.divisor -> greaterthan_cb50ae.right\n        greaterthan_cb50ae.result -> output_ebdfc1\n        notequal_7836b4.result -> output_ebdfc1\n    }\n\n    \n\n    instance(x: -34, y: 12) is_even_9d21a8 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -58, y: 23, name: \"input\") property(Number) input_5f2d74\n\n        out(x: 1948, y: -210, name: \"output\") property(Bool) output_e7e6ac\n\n        instance(x: -288, y: -204, name: \"is even\") Std.If {\n            in(x: -55, y: 76, name: \"input\") property(Number) input_9f2d14\n            out(x: -48, y: 79, name: \"then\") trigger() then\n\n            in(x: -59, y: 78, name: \"else\") trigger() else\n\n            out(x: -47, y: 80, name: \"value\") property(Number) value_6e7f0a\n        }\n        instance(x: -295, y: -203) modulo_e1b4d5 root.Std_k98ojb.Math.Modulo {}\n        input_9f2d14 -> modulo_e1b4d5.value\n        2 -> modulo_e1b4d5.divisor\n        modulo_e1b4d5.result -> value_6e7f0a\n        is_even.predicate -> output_e7e6ac\n        then -> output_e7e6ac\n        else -> output_e7e6ac\n    }\n\n    \n\n    instance(x: -47, y: 11) is_even_9b1d8c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -569, y: 438, name: \"input\") property(Number) input_85d0e8\n\n        out(x: 1731, y: -209, name: \"output\") property(Bool) output_4a0c71\n\n        instance(x: -303, y: -205, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 847, y: -207) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            0 -> modulo_c76d2b.divisor\n            input_85d0e8 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_0b075e -> map_c73e3b.items\n        map_c73e3b.output_list -> not_75283f.list\n        not_75283f.input -> output_efbc78\n    }\n\n    \n\n    instance(x: -67, y: -37) is_even_f21f44 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -55, y: 43, name: \"input\") property(Number) input_1f8d6e\n\n        out(x: 1273, y: -220, name: \"output\") property(Bool) output_e5c66a\n\n        instance(x: 198, y: -217, name: \"transform numbers to true/false\") map_5b9f0a root.Std_k98ojb.Iteration.Map {}\n        instance(x: 63, y: -222, name: \"is_even\") Std.If {\n            in(x: -23, y: 81, name: \"predicate\") property(Bool) predicate_a95e2d\n            out(x: -12, y: 79, name: \"then\") trigger() then_4c0f5b\n\n            out(x: -19, y: 84, name: \"else\") trigger() else_6a1a3c\n\n            instance(x: 108, y: 78) is_even_7dce34 root.Std_k98ojb.Logic.Equal {}\n            input_1f8d6e -> map_5b9f0a.handler\n        }\n        map_5b9f0a.output_list -> is_even.items\n        is_even.then -> output_e5c66a\n        is_even.else -> output_e5c66a\n    }\n\n    \n\n    instance(x: -64, y: 13) is_even_1df4d7 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -533, y: 438, name: \"input\") property(Number) input_5f8e9d\n\n        out(x: 1833, y: -206, name: \"output\") property(Bool) output_4b0df1\n\n        instance(x: -305, y: -208, name: \"check parity\") modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 845, y: -205, name: \"is even\") not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 1157, y: -203) expression_a0c4e1 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1238, y: -201) is_even_9a2f6d root.Std_k98ojb.Logic.Equal {}\n        modulo_c76d2b.result -> not_75283f.left\n        input_5f8e9d -> modulo_c76d2b.value\n        expression_a0c4e1.result -> is_even_9a2f6d.predicate\n        not_75283f.result -> output_4b0df1\n    }\n\n    \n\n    instance(x: -64, y: 225) is_even_f7b5ad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -513, y: 44, name: \"number\") property(Number) number_5e0f64\n\n        out(x: 1913, y: -8, name: \"output\") property(Bool) output_b7a1d4\n\n        instance(x: 187, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1039, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 1513, y: -194) isnumeric_e5f6a8 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 1997, y: -24) tolower_9d0e15 root.Std_k98ojb.Strings.ToLower {}\n        number_5e0f64 -> modulo_c76d2b.value\n        0 -> notequal_7836b4.right\n        isnumeric_e5f6a8.result -> notequal_7836b4.left\n        tolower_9d0e15.result -> notequal_7836b4.right\n        modulo_c76d2b.divisor -> number_5e0f64\n        notequal_7836b4.result -> output_b7a1d4\n    }\n\n    \n\n    instance(x: -198, y: 223) is_even_3c4a95 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -525, y: 446, name: \"number\") property(Number) num_5d0a74\n\n        out(x: 1023, y: -209, name: \"output\") property(Bool) output_b1f6c9\n\n        instance(x: 227, y: -213, name: \"is even\") filter_8b6e14 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 1084, y: -221) firstitem_1d7a95 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 175, y: -219) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -20, y: -24, name: \"current\") property(Number) _index_2d4e5\n            in(x: -23, y: 77, name: \"_index\") property(Number) _index_8c6f1\n\n            out(x: 1043, y: 49, name: \"output\") property(Bool) output_e7a0b9\n\n            instance(x: 231, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 462, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_e7a0b9\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_8c6f1 -> modulo_c76d2b.value\n        } -> filter_8b6e14.handler\n        num_5d0a74 -> filter_8b6e14.list\n        filter_8b6e14.result -> firstitem_1d7a95.list\n        firstitem_1d7a95.item -> not_75283f.input\n        not_75283f.result -> output_e7a0b9\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_34c3ca root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -39, y: 44, name: \"number\") property(Number) num_5a4f2d\n\n        out(x: 1933, y: -231, name: \"output\") property(Bool) output_a1e9c6\n\n        instance(x: 112, y: -235, name: \"is_even\") Std.If {\n            in(x: -27, y: 47, name: \"input\") property(Number) input_3f0b8a\n            out(x: -28, y: 46, name: \"then\") trigger() then\n            out(x: -29, y: 45, name: \"else\") trigger() else\n            out(x: -30, y: 44, name: \"value\") property(Number) value\n\n        }\n        instance(x: -28, y: 46, name: \"even_check\") Std.IfExpression {\n            expression: \"(n % 2 == 0)\"\n            in(x: -27, y: 47, name: \"input\") property(Number) input_3f0b8a\n            out(x: -30, y: 44, name: \"value\") property(Number) value\n\n        }\n        num_5a4f2d -> even_check.input\n        even_check.value -> is_even.value\n        is_even.then -> output_a1e9c6\n        is_even.else -> output_a1e9c6\n    }\n\n    \n\n    instance(x: -27, y: 47, name: \"execute\") Std.CallFunction {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -527, y: 438, name: \"input\") property(Number) input_f5c03d\n\n        out(x: 1748, y: -10, name: \"output\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> map_c73e3b.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_c73e3b.handler\n        map_c73e3b.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -38, y: 25, name: \"input\") property(Number) input_1a9f3d\n\n        out(x: 1795, y: -210, name: \"output\") property(Bool) output_8b2dfc\n\n        instance(x: -288, y: 19, name: \"is_even\") Std.If {\n            in(x: -23, y: 74, name: \"input\") property(Number) predicate\n            out(x: -14, y: 73, name: \"then\") trigger() then\n            out(x: -22, y: 75, name: \"else\") trigger() else\n            out(x: -19, y: 71, name: \"value\") property(Number) value\n        }\n        input_1a9f3d -> is_even.predicate\n        Std.If.then -> is_even.value\n        input_1a9f3d % 2 == 0 -> is_even.value\n    }\n\n    \n\n    instance(x: -11, y: 42) is_even_f4a8c6 root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -253, y: 167, name: \"string\") property(String) input_0\n\n        out(x: 509, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -289, y: 0, name: \"string\") property(String) input_6d4f5e\n\n        out(x: 123, y: -1, name: \"result\") property(Any) result_0\n\n        instance(x: 22, y: 40) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 246, y: 33) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_6d4f5e -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: -123, y: 168) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") find_first_repeated {\n        in(x: -343, y: 0, name: \"string\") property(String) input_8\n\n        out(x: 1043, y: -1, name: \"output\") property(Any) output_2f3e34\n\n        instance(x: 123, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 266, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 401, y: -105, name: \"map\") map_9c3a66 root.Std_k98ojb.Iteration.Map {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_8 -> tolower_2e1444.input\n        contains_d42dce.result -> map_9c3a66.predicate\n        map_9c3a66.output_list -> output_2f3e34\n    }\n\n    \n\n    instance(x: 0, y: -289) find_first_repeated_b6b1d root.main.find_first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -338, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 1012, y: -1, name: \"result\") property(Any) result_3e8c15\n\n        instance(x: 51, y: 0) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 224, y: 13) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 317, y: -117, name: \"map\") map_6f1c67 root.Std_k98ojb.Iteration.Map {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> map_6f1c67.predicate\n        map_6f1c67.item -> result_3e8c15\n    }\n\n    \n\n    instance(x: -145, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -317, y: 0, name: \"string\") property(String) input_3\n\n        out(x: 1011, y: -2, name: \"output\") property(Any) output_a87f92\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 264, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_3 -> tolower_2e1444.input\n        contains_d42dce.result -> output_a87f92\n    }\n\n    \n\n    instance(x: 82, y: 54) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") find_first_repeated_char {\n        in(x: -275, y: 201, name: \"string\") property(String) input_1\n\n        out(x: 1012, y: -4, name: \"result\") property(Any) result_0\n\n        instance(x: 42, y: 193) tolower_6c7d38 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 245, y: 201) contains_1f5e8a root.Std_k98ojb.Strings.Contains {}\n        tolower_6c7d38.output -> contains_1f5e8a.input\n        input_1 -> tolower_6c7d38.input\n        contains_1f5e8a.result -> result_0\n    }\n\n    \n\n    instance(x: 65, y: 41) find_first_repeated_char_0e3b23 root.main.find_first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -341, y: 0, name: \"string\") property(String) input_9\n\n        out(x: 1048, y: -1, name: \"output\") property(String) output_4a7c5d\n\n        instance(x: 26, y: 30) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 262, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: -21, y: 36) set_3c5a3f root.Std_k98ojb.Std.Set {}\n        instance(x: 343, y: 46) filter_a2b6db root.Std_k98ojb.Iteration.Filter {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_9 -> tolower_2e1444.input\n        set_3c5a3f.new_value -> contains_d42dce.item\n        filter_a2b6db.handler -> function(x: Any) Bool {\n            if x == null {\n                return false\n            }\n            var count = 0\n            for i in input_9 {\n                if i == x {\n                    count++\n                }\n            }\n            return count > 1\n        }\n        contains_d42dce.result -> filter_a2b6db.output_list\n        set_3c5a3f.continue -> filter_a2b6db.reset\n        input_9 -> set_3c5a3f.items\n        filter_a2b6db.item -> output_4a7c5d\n    }\n\n    \n\n    instance(x: -286, y: 162) first_repeated_char_fef7af root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") find_first_repeated_char {\n        in(x: -342, y: 143, name: \"string\") property(String) input_0\n\n        out(x: 1039, y: 38, name: \"result\") property(Any) result_2b5c4e\n\n        instance(x: 45, y: 64) tolower_7a74d1 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -141, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_7a74d1.output -> contains_d42dce.input\n        input_0 -> tolower_7a74d1.input\n        contains_d42dce.result -> result_2b5c4e\n    }\n\n    \n\n    instance(x: 64, y: 58) find_first_repeated_char_f9fba3 root.main.find_first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -342, y: 0, name: \"string\") property(String) input_8\n\n        out(x: 1125, y: -1, name: \"result\") property(Any) result_2d7b35\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 340, y: -105) count_cdf34f root.Std_k98ojb.Std.Count {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_8 -> tolower_2e1444.input\n        contains_d42dce.contains -> \"z\"\n        count_cdf34f.reset -> first_repeated_char.execute\n        count_cdf34f.count -> contains_d42dce.result\n        1 -> count_cdf34f.new_value\n        first_repeated_char.output_list -> result_2d7b35\n    }\n\n    \n\n    instance(x: -81, y: 159) first_repeated_char_f15bad root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -315, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 1004, y: -3, name: \"output\") property(Any) output_bfdd2d\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_1 -> tolower_2e1444.input\n        contains_d42dce.result -> output_bfdd2d\n        instance(x: 0, y: 2) map_c8a9b5 root.Std_k98ojb.Iteration.Map {}\n        instance(x: -39, y: 28, name: \"char\") char_1c3e3b {}\n        tolower_2e1444.output -> map_c8a9b5.items\n        map_c8a9b5.handler -> char_1c3e3b.handler\n        char_1c3e3b.item -> contains_d42dce.input\n        map_c8a9b5.output_list -> output_bfdd2d\n    }\n\n    \n\n    instance(x: -295, y: 181) first_repeated_char_f0cafa root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -100, y: 3, name: \"list\") property(List) list_4d6a45\n\n        out(x: 456, y: 68, name: \"min\") property(Number) min_3c1e28\n        out(x: 462, y: 55, name: \"second_min\") property(Number) second_min_7f0b2f\n\n        instance(x: -74, y: 22) first_smallest root.Std_k98ojb.List.Min {}\n        instance(x: -76, y: 58) second_smallest_node root.Std_k98ojb.List.Min {}\n\n        list_4d6a45 -> first_smallest.items\n        first_smallest.min -> min_3c1e28\n\n        instance(x: 0, y: 56) ifexpression_9f67df root.Std_k98ojb.Std.IfExpression {\n            expression: \"first_smallest.result != null\"\n        }\n        getter(x: -70, y: 77, name: \"getter_4d3a1c\") getter_4d3a1c = second_smallest\n        setter(x: 52, y: 45, name: \"setter_e9f8b5\") setter_e9f8b5 = second_smallest\n        ifexpression_9f67df.then -> setter_e9f8b5.execute\n        first_smallest.result -> setter_e99d25.new_value\n        list_4d6a45 -> setter_e9e31c.new_value\n        ifexpression_9f67df.else -> setter_e9f8b5.execute\n        second_smallest_node.items -> min_3c1e28\n        first_smallest.result -> second_smallest_node.min\n        first_smallest.result -> second_min_7f0b2f\n    }\n\n    \n\n    instance(x: -42, y: 101) second_smallest_6d4a23 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -542, y: 2, name: \"list\") property(List) list_a3d4f1\n\n        out(x: 336, y: 77, name: \"min\") property(Number) min_5e4f7c\n        out(x: 341, y: 83, name: \"second_min\") property(Number) second_min_8b8a24\n\n        instance(x: -123, y: 34, name: \"first_smallest\") Std_k98ojb.List.Min {}\n        list_a3d4f1 -> first_smallest.items\n        first_smallest.min -> min_5e4f7c\n        list_a3d4f1 -> second_smallest.filter\n        instance(x: 0, y: 0) second_min_node root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"min\") property(Number) min_b3d5a4\n            instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: 35) second_min_node.handler()\n            0 -> notequal_807ffd.right\n            elem_9f6850 -> notequal_807ffd.left\n            notequal_807ffd.result -> min_b3d5a4\n            ifexpression_e38995(expression: \"min_b3d5a4 < elem_9f6850\") {\n                out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n                second_min_node.handler() -> min_b3d5a4\n            } else {\n                out(x: 341, y: 83, name: \"second_min\") property(Number) second_min_8b8a24\n                second_min_node.handler() -> second_min_8b8a24\n            }\n        } -> second_smallest.filter\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_b5c9f4 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -102, y: 2, name: \"list\") property(List) list_b1f4a8\n\n        out(x: 444, y: -1, name: \"number\") property(Number) number_8c0b6e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n\n            instance(x: 310, y: 35) next_3e3c21 root.Std_k98ojb.Std.For {}\n            list_b1f4a8.length - 1 -> next_3e3c21.index\n            elem_9f6850 -> next_3e3c21.item\n            bool_af09a7 -> next_3e3c21.done\n\n            instance(x: 89, y: 29) count_5b4f77 root.Std_k98ojb.Std.Count {}\n            list_b1f4a8.length - 1 -> count_5b4f77.reset\n            elem_9f6850 -> count_5b4f77.count\n\n            instance(x: 310, y: 35) filter_7b3b7b root.Std_k98ojb.Query.Filter {}\n            where: \"it != elem_9f6850\"\n            list_b1f4a8 -> filter_7b3b7b.list\n            filter_7b3b7b.result -> number_8c0b6e\n\n        } -> find_6d05b0.predicate\n        list_b1f4a8 -> find_6d05b0.items\n        find_6d05b0.item -> number_8c0b6e\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_e9c5db root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -288, y: 2, name: \"list\") property(List) list_9a3d0f\n\n        out(x: 510, y: -1, name: \"second_min\") property(Number) second_min_8c23b6\n        instance(x: 0, y: 0) first_smallest_node root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) second_smallest_node root.Std_k98ojb.List.Min {}\n        list_9a3d0f -> first_smallest_node.items\n        list_9a3d0f -> second_smallest_node.items\n\n        Std.IfExpression {\n            expression: \"first_smallest < second_smallest\"\n        } -> first_smallest_node.then\n        first_smallest_node.min -> second_smallest_node.min\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_1d4b48 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -309, y: 2, name: \"list\") property(List) list_4d3f77\n\n        out(x: 505, y: 53, name: \"min1\") property(Number) min1_5e0f9c\n        out(x: 516, y: 27, name: \"min2\") property(Number) min2_5b8a4d\n\n        instance(x: -105, y: -104, name: \"first_min\") root.Std_k98ojb.Std.IfExpression {}\n        instance(x: -344, y: -93, name: \"second_min\") root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 0, y: 0) count_9a4f6c root.Std_k98ojb.Std.Count {}\n        list_4d3f77 -> first_min.expression\n        first_min.then -> second_min.expression\n        count_9a4f6c.reset -> first_min.then\n        list_4d3f77[0] -> first_min.gen_0\n        list_4d3f77[1] -> first_min.gen_1\n        list_4d3f77[2] -> second_min.gen_0\n        count_9a4f6c.count -> min1_5e0f9c\n        if first_min.gen_0 == min1_5e0f9c then \n            second_min.then = root.Std_k98ojb.Std.IfExpression {\n                expression: \"list[1] < list[2]\"\n            }\n            list_4d3f77[1] -> second_min.gen_1\n            list_4d3f77[2] -> second_min.gen_2\n        else \n            second_min.then = root.Std_k98ojb.Std.IfExpression {\n                expression: \"list[0] < list[1]\"\n            }\n            list_4d3f77[0] -> second_min.gen_1\n            list_4d3f77[1] -> second_min.gen_2\n        min1_5e0f9c -> min2_5b8a4d\n    }\n\n    \n\n    instance(x: -57, y: 531) second_smallest_7f1f44 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -305, y: 17, name: \"list\") property(List) list_b1a2d6\n\n        out(x: 0, y: 21, name: \"min_2b5e3f\") property(Number) min_2b5e3f\n        out(x: 0, y: -19, name: \"second_min_93c9e4\") property(Number) second_min_93c9e4\n\n        instance(x: 439, y: 16) find_smallest_7a7d8b root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -110, y: 22, name: \"elem\") property(Number) elem_5fdd3c\n\n            out(x: 0, y: 23, name: \"bool\") property(Bool) bool_d4e9d6\n\n            instance(x: 96, y: 18) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 91, y: 13, name: \"min_2b5e3f_node\") property(Number) min_2b5e3f_node\n            instance(x: 92, y: 25, name: \"second_min_93c9e4_node\") property(Number) second_min_93c9e4_node\n\n            find_smallest_7a7d8b.item -> elem_5fdd3c\n            min_2b5e3f_node.value -> find_smallest_7a7d8b.item\n            notequal_807ffd.left -> find_smallest_7a7d8b.item\n            second_min_93c9e4_node.value -> find_smallest_7a7d8b.item\n            elem_5fdd3c -> min_2b5e3f_node\n            elem_5fdd3c -> notequal_807ffd.right\n            find_smallest_7a7d8b.predicate -> bool_d4e9d6\n        } -> min_2b5e3f_node.then\n        find_smallest_7a7d8b.item -> second_min_93c9e4_node\n        notequal_807ffd.result -> bool_d4e9d6\n        find_smallest_7a7d8b.item -> min_2b5e3f_node\n        find_smallest_7a7d8b.item -> second_min_93c9e4_node\n    }\n\n    \n\n    instance(x: -52, y: 532) second_smallest_6e65b0 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -112, y: 0, name: \"list\") property(List) list_a9d3a8\n\n        out(x: 539, y: -1, name: \"number\") property(Number) number_2c6e7f\n\n        instance(x: 106, y: 27) second_4b45eb root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -120, y: 18, name: \"elem\") property(Number) elem_a3d4bb\n\n            out(x: 505, y: 40, name: \"bool\") property(Bool) bool_9a2e0c\n\n            instance(x: 86, y: 34) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 309, y: 39) min_4f8d3a root.Std_k98ojb.List.Min {}\n            1 -> notequal_807ffd.right\n            elem_a3d4bb -> notequal_807ffd.left\n            min_4f8d3a.result -> notequal_807ffd.right\n            list_a9d3a8[0] -> min_4f8d3a.items\n            min_4f8d3a.min -> elem_a3d4bb\n            elem_a3d4bb -> second_4b45eb.item\n        } -> second_4b45eb.predicate\n        list_a9d3a8 -> second_4b45eb.items\n        second_4b45eb.item -> number_2c6e7f\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_5b5a2f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -101, y: 4, name: \"list\") property(List) list_2a0f1d\n\n        out(x: 507, y: -114, name: \"min\") property(Number) min_a3c5d9\n        out(x: 503, y: -114, name: \"second_min\") property(Number) second_min_4e9b3f\n\n        instance(x: 0, y: 0) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 513, y: 56) second_smallest_node root.main.second_smallest {}\n\n        list_2a0f1d -> list_min_node.items\n        list_min_node.min -> min_a3c5d9\n\n        instance(x: -117, y: 66) ifexpression_d4e2b7 root.Std_k98ojb.Std.IfExpression {}\n        getter(x: -108, y: 104, name: \"getter_8a1f65\") getter_8a1f65 = second_min\n        setter(x: 517, y: 78, name: \"setter_9c5a15\") setter_9c5a15 = second_min\n        ifexpression_d4e2b7.expression -> \"a < b\"\n        list_2a0f1d[1] -> ifexpression_d4e2b7.gen_0\n        getter_8a1f65.value -> second_min_4e9b3f\n        ifexpression_d4e2b7.then -> setter_9c5a15.execute\n        list_2a0f1d[1] -> setter_9c5a15.new_value\n        min_a3c5d9 -> setter_9c5a15.continue\n        list_2a0f1d[0] -> second_smallest_node.items\n        ifexpression_d4e2b7.else -> second_smallest_node.execute\n    }\n\n    \n\n    instance(x: -56, y: 121) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -305, y: 0, name: \"list\") property(List) list_b2a4e5\n\n        out(x: 517, y: -1, name: \"second_min\") property(Number) second_min_8bfcf9\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) find_second_smallest_node root.Std_k98ojb.Iteration.Find {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            find_second_smallest_node.item -> notequal_807ffd.left\n            ifexpression_e38995 -> notequal_807ffd.predicate\n\n            instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n                expression: \"a < b\"\n            }\n            getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = second_min\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_min\n            setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = second_min\n\n            elem_9f6850 -> ifexpression_e38995.gen_0\n            find_second_smallest_node.item -> ifexpression_e38995.gen_1\n            getter_9cceb3.value -> second_min_8bfcf9\n            ifexpression_e38995.then -> setter_1cedb2.execute\n            elem_9f6850 -> setter_37db7f.new_value\n            find_second_smallest_node.item -> setter_37db7f.new_value\n            ifexpression_e38995.else -> setter_37db7f.execute\n            find_second_smallest_node.item -> setter_1cedb2.continue\n            elem_9f6850 -> setter_1cedb2.continue\n            ifexpression_e38995.execute -> notequal_807ffd.execute\n        } -> find_second_smallest_node.predicate\n        list_b2a4e5 -> find_6d05b0.items\n        find_6d05b0.item -> second_min_8bfcf9\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_33c1bf root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -439, y: 0, name: \"list\") property(List) list_4e4a5f\n\n        out(x: 246, y: 58, name: \"min\") property(Number) min_9b3a2d\n        out(x: 261, y: 53, name: \"second_min\") property(Number) second_min_71c0b1\n\n        instance(x: -103, y: -302, name: \"min_node\") Std_k98ojb.Std.If {\n            in(x: -113, y: 33, name: \"first\") property(Number) first_a2a8d4\n            in(x: -114, y: 39, name: \"second\") property(Number) second_1f9a5e\n\n            out(x: -112, y: 31, name: \"then\") trigger() then_b3c25b\n            out(x: -111, y: 35, name: \"else\") trigger() else_e3d4f6\n        }\n        instance(x: -278, y: -255, name: \"second_min_node\") Std_k98ojb.Std.IfExpression {\n            expression: \"first < second\"\n        }\n        list_4e4a5f -> min_node.first\n        list_4e4a5f -> min_node.second\n        min_node.then -> second_min_node.then\n        first_a2a8d4 -> second_min_node.expression.left\n        second_a2a8d4 -> second_min_node.expression.right\n        second_min_node.value -> second_min_71c0b1\n        second_min_node.then -> min_node.else\n    }\n\n    \n\n    instance(x: -55, y: 528) second_smallest_9e0f60 root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_ONE_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12639,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -468, y: 12, name: \"list1\") property(List) list_2e3f6d\n        in(x: -478, y: 49, name: \"list2\") property(List) list_a5b8a4\n\n        out(x: 1329, y: -209, name: \"output\") property(Bool) output_b0c3ac\n\n        instance(x: 245, y: 75) intersection_6e7f66 root.Std_k98ojb.Sets.Intersection {}\n        list_a5b8a4 -> intersection_6e7f66.left\n        list_2e3f6d -> intersection_6e7f66.right\n        intersection_6e7f66.intersect -> output_b0c3ac\n    }\n\n    \n\n    instance(x: -85, y: 16) has_common_element_4d5df9 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -531, y: 55, name: \"list1\") property(List) list_4f6e50\n        in(x: -541, y: 15, name: \"list2\") property(List) list_ea0c21\n\n        out(x: 1029, y: 49, name: \"output\") property(Bool) output_5b3d7c\n\n        instance(x: 244, y: 82) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -14, y: 60) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 345, y: 47) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -34, y: -21, name: \"current\") property(Number) _index_170471\n            in(x: -31, y: 63, name: \"_index\") property(Number) _index_769593\n\n            out(x: 1067, y: 19, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 342, y: 57) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 479, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> intersection_c7c7e6.handler\n        list_ea0c21 -> intersection_c7c7e6.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_32727d.handler\n        list_ea0c21 -> contains_32727d.items\n        false -> contains_32727d.item\n        not_75283f.result -> output_efbc78\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_7a4dad root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -494, y: 14, name: \"list1\") property(List) list_4f6e8d\n        in(x: -484, y: 33, name: \"list2\") property(List) list_94f9b3\n\n        out(x: 1025, y: 22, name: \"output\") property(Bool) output_7a6a0c\n\n        instance(x: 266, y: -38) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list_4f6e8d -> intersection_c7c7e6.left\n        list_94f9b3 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> output_7a6a0c\n    }\n\n    \n\n    instance(x: -286, y: 64) has_common_element_5d4a2f root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -449, y: 30, name: \"list1\") property(List) list_8a0f4d\n        in(x: -468, y: -20, name: \"list2\") property(List) list_2e6c64\n\n        out(x: 1217, y: -19, name: \"output\") property(Bool) output_94e1b5\n\n        instance(x: 736, y: 55) intersection_d4d8a3 root.Std_k98ojb.Sets.Intersection {}\n        list_8a0f4d -> intersection_d4d8a3.left\n        list_2e6c64 -> intersection_d4d8a3.right\n        intersection_d4d8a3.intersect -> output_94e1b5\n    }\n\n    \n\n    instance(x: -475, y: 93) has_common_element_7f8f55 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -513, y: 16, name: \"list1\") property(List) list_0d3e60\n        in(x: -494, y: -23, name: \"list2\") property(List) list_1c9b88\n\n        out(x: 1285, y: -21, name: \"output\") property(Bool) output_ebfef8\n\n        instance(x: 761, y: 91) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 278, y: -11) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        data_instance(x: -388, y: -25) data_b1f7a4  = [contains, list1, list2]\n        instance(x: 1159, y: -15) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        instance(x: 253, y: -19) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 1011, y: -22) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -20, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_0d3e60 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_efbc78\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_e7c9a3 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -457, y: 17, name: \"list1\") property(List) list_01f5e4\n        in(x: -484, y: 48, name: \"list2\") property(List) list_a3d6c7\n\n        out(x: 1110, y: 24, name: \"output\") property(Bool) output_9b21a1\n\n        instance(x: 720, y: 87) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list_a3d6c7 -> intersection_c7c7e6.right\n        list_01f5e4 -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersect -> output_9b21a1\n    }\n\n    \n\n    instance(x: 10, y: -178) has_common_element_8a3d41 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -505, y: 67, name: \"list1\") property(List) list_0f8d98\n        in(x: -527, y: 55, name: \"list2\") property(List) list_b5e4a3\n\n        out(x: 1199, y: -100, name: \"output\") property(Bool) output_a5b0ea\n\n        instance(x: 760, y: 92) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 273, y: -96) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1039, y: -102) filter_d7f2c6 root.Std_k98ojb.Iteration.Filter {}\n        list_0f8d98 -> contains_32727d.list\n        list_b5e4a3 -> contains_32727d.right\n        contains_32727d.item -> map_c73e3b.handler\n        1 -> map_c73e3b.input\n        map_c73e3b.output_list -> filter_d7f2c6.items\n        filter_d7f2c6.handler -> output_a5b0ea\n        list_b5e4a3 -> filter_d7f2c6.right\n        1 -> filter_d7f2c6.input\n    }\n\n    \n\n    instance(x: -275, y: -16) has_common_element_9d5c8d root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -173, y: 58, name: \"list1\") property(List) list_3d8e5b\n        in(x: -191, y: -22, name: \"list2\") property(List) list_9f4f6c\n\n        out(x: 1110, y: 29, name: \"output\") property(Bool) output_b1a88d\n\n        instance(x: 101, y: 48) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -12, y: -41) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 251, y: 49) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -23, y: 73, name: \"current\") property(Number) _index_170471\n            in(x: -24, y: 77, name: \"_index\") property(Number) _index_769593\n\n            out(x: 1045, y: 34, name: \"output\") property(Bool) output_9b2a35\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_9b2a35\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> intersection_c7c7e6.handler\n        list_3d8e5b -> intersection_c7c7e6.left\n        list_9f4f6c -> intersection_c7c7e6.right\n        contains_32727d.item -> output_9b2a35\n    }\n\n    \n\n    instance(x: 101, y: -68) has_common_element_e8f1ad root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -528, y: 38, name: \"list1\") property(List) list_6e3f9d\n        in(x: -549, y: -213, name: \"list2\") property(List) list_e48a8c\n\n        out(x: 1297, y: -215, name: \"output\") property(Bool) output_5bce1d\n\n        instance(x: 1004, y: 47) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1063, y: -205) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_e48a8c -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersect -> contains_32727d.list\n        list_6e3f9d -> intersection_c7c7e6.right\n        contains_32727d.is_contained -> output_5bce1d.input\n    }\n\n    \n\n    instance(x: -313, y: 64) has_common_element_65a95 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -527, y: -214, name: \"list1\") property(List) list_07cae4\n        in(x: -528, y: 5, name: \"list2\") property(List) list_a7f0d8\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"filter_c91965\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform_numbers_to_bool\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_a7f0d8 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_4e2c43 root.main.has_common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -534, y: 29, name: \"list\") property(List) list_8d4a6e\n\n        out(x: 1153, y: -24, name: \"output\") property(Bool) output_b5d7b1\n\n        instance(x: 755, y: 97) for_loop_6f0c44 root.Std_k98ojb.Std.For {}\n        instance(x: -26, y: 101) getat_9d2a41 root.Std_k98ojb.List.GetAt {}\n        instance(x: 281, y: 106) less_than_4e8fdd root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 555, y: 105) sub_7c3c23 root.Std_k98ojb.Math.Sub {}\n        list_8d4a6e -> for_loop_6f0c44.items\n        for_loop_6f0c44.item -> getat_9d2a41.list\n        less_than_4e8fdd.left -> sub_7c3c23.first\n        1 -> sub_7c3c23.divisor\n        sub_7c3c23.result -> getat_9d2a41.index\n        for_loop_6f0c44.onItem -> less_than_4e8fdd.execute\n        for_loop_6f0c44.done -> output_b5d7b1\n    }\n\n    \n\n    instance(x: -34, y: 144) Consecutive_3ff9a root.main.Consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -571, y: 3, name: \"list\") property(List) list_8e5d9b\n\n        out(x: 1114, y: 1, name: \"output\") property(Bool) output_7c2fdd\n\n        instance(x: -92, y: 73) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -33, y: 97) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: -46, y: 111) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n        list_8e5d9b -> for_d26972.items\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> notequal_cb8a55.left\n        1 -> notequal_cb8a55.right\n        notequal_cb8a55.result -> output_7c2fdd\n    }\n\n    \n\n    instance(x: -85, y: 145) is_consecutive_3e9d14 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -562, y: 3, name: \"list\") property(List) list_6a9e35\n\n        out(x: 1031, y: 33, name: \"output\") property(Bool) output_e2f0d4\n\n        instance(x: 1015, y: 31) for_loop_8b9c41 root.Std_k98ojb.Std.For {}\n        instance(x: -32, y: 47) getat_3e7a1a root.Std_k98ojb.List.GetAt {}\n        instance(x: -19, y: 42) is_number_97f6d4 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: -14, y: 46) sub_0d9c43 root.Std_k98ojb.Math.Sub {}\n        instance(x: 1021, y: 40) greaterthan_7d5a3e root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1018, y: 38) lessThanOrEqual_8f4c25 root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_6a9e35 -> for_loop_8b9c41.items\n        for_loop_8b9c41.index -> getat_3e7a1a.index\n        getat_3e7a1a.itemAtIndex -> is_number_97f6d4.item\n        if(is_number_97f6d4.result) {\n            sub_0d9c43.value = list_6a9e35[getat_3e7a1a.index]\n            lessThanOrEqual_8f4c25.left = sub_0d9c43.value\n            greaterthan_7d5a3e.left = sub_0d9c43.value + 1\n        }\n        if(greaterthan_7d5a3e.result) {\n            output_e2f0d4 = false\n        } else {\n            for_loop_8b9c41.onItem -> is_consecutive.execute\n        }\n    }\n\n    \n\n    instance(x: -38, y: 66) is_consecutive_c1cd22 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -536, y: 28, name: \"list\") property(List) list_5f4d2e\n\n        out(x: 1018, y: 27, name: \"output\") property(Bool) output_57c4b1\n\n        instance(x: -326, y: 48) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -292, y: 54) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 1047, y: 49) greaterthan_f6f7ec root.Std_k98ojb.Math.GreaterThan {}\n        list_5f4d2e -> for_d26972.items\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> greaterthan_f6f7ec.left\n        getat_ce2a48.itemAtIndex + 1 -> greaterthan_f6f7ec.right\n        greaterthan_f6f7ec.result -> output_57c4b1\n    }\n\n    \n\n    instance(x: -47, y: 120) is_consecutive_e8d4ab root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -567, y: 2, name: \"list\") property(List) list_3e6f8d\n\n        out(x: 445, y: -98, name: \"output\") property(Bool) output_a6a5c4\n\n        instance(x: -311, y: 46, name: \"previous_number\") getat_c9b0aa root.Std_k98ojb.List.GetAt {}\n        instance(x: -48, y: 51) sub_2f1e7d root.Std_k98ojb.Math.Sub {}\n        instance(x: 199, y: 45) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3e6f8d -> previous_number.list\n        previous_number.index -> sub_2f1e7d.index\n        sub_2f1e7d.value -> equal_f89569.left\n        list_3e6f8d[previous_number.index + 1] -> equal_f89569.right\n        equal_f89569.result -> output_a6a5c4\n    }\n\n    \n\n    instance(x: -70, y: 100) is_consecutive_7b2db root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -583, y: 2, name: \"list\") property(List) list_9d5f34\n\n        out(x: 1298, y: 13, name: \"output\") property(Bool) output_5e8a7c\n\n        instance(x: 1044, y: -97, name: \"isconsecutivesorter\") for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -78, y: -24) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n        list_9d5f34 -> for_d26972.items\n        1 -> for_d26972.next\n        for_d26972.item -> notequal_7836b4.left\n        for_d26972.index -> notequal_7836b4.right\n        notequal_7836b4.result -> output_5e8a7c\n    }\n\n    \n\n    instance(x: -25, y: 135) is_consecutive_1f9d7f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -528, y: 30, name: \"list\") property(List) list_4e2a55\n\n        out(x: 1028, y: -29, name: \"output\") property(Bool) output_a9c7b5\n\n        instance(x: 245, y: 39) ifexpression_b77d25 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == previous + 1\"\n        }\n        getter(x: -23, y: -14) getter_9f6a13 root.Std_k98ojb.List.GetAt {}\n        setter(x: -26, y: -20) setter_c8e3d4 root.Std_k98ojb.List.Setter {}\n        instance(x: 234, y: -28) for_d1d7c5 root.Std_k98ojb.Std.For {}\n        instance(x: -25, y: -15) getat_9a2f77 root.Std_k98ojb.List.GetAt {}\n        ifexpression_b77d25.value -> output_a9c7b5\n        ifexpression_b77d25.then -> setter_c8e3d4.execute\n        list_4e2a55 -> for_d1d7c5.items\n        for_d1d7c5.item -> ifexpression_b77d25.gen_2\n        for_d1d7c5.index -> ifexpression_b77d25.gen_0\n        getter_9f6a13.value -> ifexpression_b77d25.gen_1\n        for_d1d7c5.onItem -> ifexpression_b77d25.execute\n        for_d1d7c5.done -> output_a9c7b5.continue\n        setter_c8e3d4.continue -> for_d1d7c5.reset\n    }\n\n    \n\n    instance(x: -26, y: 94) Consecutive_6a56df root.main.Consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -530, y: 2, name: \"list\") property(List) list_8d3f6a\n\n        out(x: 1239, y: 55, name: \"output\") property(Bool) output_c7b4eb\n\n        instance(x: -289, y: 44) for_d25e1c root.Std_k98ojb.Std.For {}\n        instance(x: -286, y: 52) getat_8a6d96 root.Std_k98ojb.List.GetAt {}\n        instance(x: 1204, y: 49) sub_5f7f3d root.Std_k98ojb.Math.Sub {}\n        instance(x: 1219, y: -17) lessThanOrEqual_f4d23e root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_8d3f6a -> for_d25e1c.items\n        for_d25e1c.item -> getat_8a6d96.list\n        getat_8a6d96.index -> sub_5f7f3d.first\n        getat_8a6d96.value -> sub_5f7f3d.second\n        lessThanOrEqual_f4d23e.left -> for_d25e1c.item\n        1 -> lessThanOrEqual_f4d23e.right\n        lessThanOrEqual_f4d23e.result -> output_c7b4eb\n    }\n\n    \n\n    instance(x: -57, y: 120) is_consecutive_9f0c38 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -537, y: 20, name: \"list\") property(List) list_6f1a5d\n\n        out(x: 1223, y: -29, name: \"output\") property(Bool) output_7c9e2b\n\n        instance(x: -305, y: -25, name: \"is_consecutive\") for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -43, y: 70, name: \"previous\") getter_b280eb root.Std_k98ojb.List.GetAt {}\n        instance(x: -44, y: 67) next_3d4a95 root.Std_k98ojb.Std.For {}\n        instance(x: -48, y: 64) greaterthan_f1f0e2 root.Std_k98bjb.Logic.GreaterThan {}\n        list_6f1a5d -> for_d26972.items\n        for_d26972.index -> previous.new_value\n        previous.value -> next_.new_value\n        next_.index -> greaterthan_f1f0e2.left\n        1 -> greaterthan_f1f0e2.right\n        greaterthan_f1f0e2.result -> output_7c9e2b\n    }\n\n    \n\n    instance(x: -27, y: 136) is_consecutive_d63f8d root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -539, y: 11, name: \"list\") property(List) list_8f9d42\n\n        out(x: 1225, y: -18, name: \"output\") property(Bool) output_7b6e4c\n\n        instance(x: -246, y: 30) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -278, y: 52) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 111, y: 59) greater_than_f9c0f1 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 104, y: 57) lessThanOrEqual_7e34d4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_8f9d42 -> for_d26972.items\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> greater_than_f9c0f1.left\n        getat_ce2a48.itemAtIndex + 1 -> lessThanOrEqual_7e34d4.right\n        greater_than_f9c0f1.result -> output_7b6e4c\n        lessThanOrEqual_7e34d4.result -> output_7b6e4c\n    }\n\n    \n\n    instance(x: -57, y: 86) is_consecutive_8a4c44 root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -476, y: 436, name: \"main_list\") property(List) list_2e9f8d\n        in(x: -486, y: 26, name: \"sublist_list\") property(List) list_6c89a5\n\n        out(x: 1201, y: -110, name: \"output\") property(Bool) output_bf3b47\n\n        instance(x: -292, y: -114) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -321, y: -103) filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        list_6c89a5 -> filter_f3b46d.list\n        main_list -> contains_32727d.item\n        is_sublist_7fdd11 -> output_bf3b47\n    }\n\n    \n\n    instance(x: -67, y: -43) is_sublist_c1e60d root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -430, y: 20, name: \"main_list\") property(List) list_4f6a8d\n        in(x: -484, y: 25, name: \"sub_list\") property(List) list_a1c5b9\n\n        out(x: 1213, y: -208, name: \"output\") property(Bool) output_e7e3ca\n\n        instance(x: -275, y: -217) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_a1c5b9 -> contains_32727d.item\n        main_list -> contains_32727d.list\n        contains_32727d.is_contained -> output_e7e3ca\n    }\n\n    \n\n    instance(x: -304, y: 71) is_sublist_b8f4d6 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -456, y: 35, name: \"main_list\") property(List) list_4e2d21\n        in(x: -482, y: -16, name: \"sublist_list\") property(List) list_c8a7c9\n\n        out(x: 1135, y: -26, name: \"output\") property(Bool) output_b6b3f1\n\n        instance(x: -309, y: -11) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list_c8a7c9 -> zip_201051.left\n        list_4e2d21 -> zip_20151.right\n        func() {\n            in(x: -242, y: 47, name: \"item1\") property(Number) sublist_6f81d0\n            in(x: -235, y: 41, name: \"item2\") property(Number) list_4e2d21_70c8b3\n\n            out(x: 1049, y: -47, name: \"result\") property(Bool) result_8a6f0d\n\n            instance(x: -14, y: -55) contains_32727d root.Std_k98ojb.List.Contains {}\n            sublist_6f81d0 -> contains_32727d.item\n            list_4e2d21_70c8b3 -> contains_32727d.list\n            contains_32727d.is_contained -> result_8a6f0d\n        } -> zip_201051.handler\n        zip_20151.zipped -> output_b6b3f1\n    }\n\n    \n\n    instance(x: -289, y: 52) is_sublist_5c2d95 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -475, y: 41, name: \"main_list\") property(List) list_3a8f9d\n        in(x: -486, y: -25, name: \"sub_list\") property(List) list_1c3e65\n\n        out(x: 1225, y: -14, name: \"output\") property(Bool) output_a0b2ac\n\n        instance(x: -312, y: -20) filter_8f9aef root.Std_k98ojb.Query.Filter {\n            where: \"it == sub_list\"\n        }\n        instance(x: 199, y: -13) is_equal_4d3e57 root.Std_k98ojb.Logic.Equal {}\n        list_1c3e65 -> filter_8f9aef.list\n        list_3a8f9d -> filter_8f9aef.list\n        filter_8f9aef.result -> is_equal_4d3e57.left\n        sub_list -> is_equal_4d3e57.right\n        is_equal_4d3e57.result -> output_a0b2ac\n    }\n\n    \n\n    instance(x: -283, y: 7) is_sublist_e8a0e1 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -456, y: 33, name: \"main_list\") property(List) list_4a2df6\n        in(x: -482, y: 15, name: \"sub_list\") property(List) list_7e38c1\n\n        out(x: 1249, y: -212, name: \"output\") property(Bool) output_e8d6b5\n\n        instance(x: -302, y: -209) filter_4a0f3a root.Std_k98ojb.Query.Filter {\n            where: \"it in list_7e38c1\"\n        }\n        instance(x: 246, y: -215) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 361, y: -206) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_4a2df6 -> filter_4a0f3a.list\n        filter_4a0f3a.result -> contains_32727d.item\n        contains_32727d.is_contained -> equal_f89569.input\n    }\n\n    \n\n    instance(x: -58, y: 55) is_sublist_7c1e8b root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -235, y: 10, name: \"main_list\") property(List) list_5f1d2b\n        in(x: -258, y: 29, name: \"sublist\") property(List) list_3a0e9c\n\n        out(x: 123, y: -40, name: \"output\") property(Bool) output_6ffef7\n\n        instance(x: -109, y: -44) contains_c8f2d5 root.Std_k98ojb.List.Contains {}\n        list_3a0e9c -> contains_c8f2d5.item\n        list_5f1d2b -> contains_c8f2d5.list\n        contains_c8f2d5.is_contained -> output_6ffef7\n    }\n\n    \n\n    instance(x: -129, y: 46) is_sublist_9c4a98 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -449, y: 43, name: \"main_list\") property(List) list_9d5e2f\n        in(x: -467, y: -16, name: \"sub_list\") property(List) list_b4b3df\n\n        out(x: 1177, y: 55, name: \"output\") property(Bool) output_aeb97a\n\n        instance(x: -281, y: 50) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -246, y: 63) length_8166b0 root.Std_k98ojb.List.Length {}\n        list_b4b3df -> contains_32727d.item\n        list_9d5e2f -> contains_32727d.list\n        length_8166b0.length -> output_aeb97a\n    }\n\n    \n\n    instance(x: -269, y: 69) is_sublist_58ff4c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -474, y: 28, name: \"main_list\") property(List) list_4f6d8b\n        in(x: -483, y: -15, name: \"sublist\") property(List) list_ae2a1c\n\n        out(x: 1277, y: 34, name: \"output\") property(Bool) output_3ad5cd\n\n        instance(x: -318, y: 42) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_ae2a1c -> contains_32727d.item\n        main_list -> contains_32727d.list\n        contains_32727d.is_contained -> output_3ad5cd\n    }\n\n    \n\n    instance(x: -293, y: 23) is_sublist_d3f8f4 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -495, y: 4, name: \"main_list\") property(List) list_8f1a9b\n        in(x: -493, y: -12, name: \"sub_list\") property(List) list_a3d6c5\n\n        out(x: 1147, y: -13, name: \"output\") property(Bool) output_77e2d0\n\n        instance(x: -329, y: -18) contains_c8b9f1 root.Std_k98ojb.List.Contains {}\n        list_a3d6c5 -> contains_c8b9f1.item\n        list_8f1a9b -> contains_c8b9f1.list\n        contains_c8b9f1.is_contained -> output_77e2d0\n    }\n\n    \n\n    instance(x: -303, y: 59) is_sublist_96f5c7 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -292, y: 49, name: \"main_list\") property(List) list_3e4d66\n        in(x: -294, y: 46, name: \"sublist_list\") property(List) list_ba5b6c\n\n        out(x: 1231, y: -56, name: \"output\") property(Bool) output_a9f8eb\n\n        instance(x: -21, y: -71) for_7e2d22 root.Std_k98ojb.Std.For {}\n        list_ba5b6c -> for_7e2d22.items\n        list_3e4d66 -> for_7e2d22.reset\n        list_3e4d66 -> for_7e2d22.next\n        instance(x: -20, y: 55) contains_6f9b49 root.Std_k98ojb.List.Contains {}\n        for_7e2d22.item -> contains_6f9b49.item\n        list_ba5b6c -> contains_6f9b49.list\n        contains_6f9b49.is_contained -> output_a9f8eb\n    }\n\n    \n\n    instance(x: -14, y: 20) is_sublist_1d7e3d root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -272, y: 26, name: \"numbers\") property(List) numbers_8d5a55\n        out(x: 44, y: 20, name: \"missing\") property(Number) missing_5f0e45\n\n        instance(x: 35, y: 43) count_node root.Std_k98ojb.Count {}\n        instance(x: -16, y: 28) for_loop_7d4c9a root.Std_k98ojb.For {}\n        instance(x: 42, y: 50) ifexpression_b3f8ec root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 0, y: 52) add_6ad4e5 root.Std_k98ojb.Math.Add {}\n\n        numbers_8d5a55 -> count_node.items\n        count_node.on_count -> for_loop_7d4c9a.count\n        for_loop_7d4c9a.items -> ifexpression_b3f8ec.items\n        add_6ad4e5.first -> ifexpression_b3f8ec.gen_0\n        add_6ad4e5.second -> ifexpression_b3f8ec.gen_1\n        add_6ad4e5.result -> missing_5f0e45\n\n        for_loop_7d4c9a.reset -> count_node.reset\n        count_node.done -> ifexpression_b3f8ec.then\n        numbers_8d5a55[0] -> ifexpression_b3f8ec.gen_2\n        add_6ad4e5.value -> missing_5f0e45\n    }\n\n    \n\n    instance(x: -123, y: 28) find_missing_7d7f70 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_2d4e38\n\n        out(x: 5, y: 159, name: \"missing\") property(Number) missing_8c6f9b\n        instance(x: 0, y: 0) for_node root.Std_k98ojb.Std.For {\n            in(x: -246, y: 12, name: \"items\") property(List) items_f1e43a\n\n            out(x: 47, y: 27, name: \"index\") property(Number) index_2f7d0c\n            out(x: 38, y: 31, name: \"item\") property(Number) item_4b8c66\n\n            instance(x: -227, y: 29, count_node root.Std_k98ojb.Count) {\n                reset -> for_node.reset\n                count -> for_node.count\n                iterations -> for_node.iterations\n                onCount -> for_node.on_count\n                done -> for_node.done\n                interation -> for_node.interation\n            }\n            items_ai -> count_node.items\n            count_node.onCount -> for_node.item\n            for_node.item -> item_4b8c66\n            for_node.index -> index_2f7d0c\n        }\n\n        instance(x: 46, y: -14) min_9a3e6b root.Std_k98ojb.Math.Min {\n            values -> [for_node.interation + 1, list_2d4e38.length]\n        }\n        min_9a3e6b.result -> missing_8c6f9b\n    }\n\n    \n\n    instance(x: -55, y: 528) find_missing_5bb7e0 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -245, y: 4, name: \"list\") property(List) list_1f9b1d\n\n        out(x: 1, y: 88, name: \"smallest_missing\") property(Number) smallest_missing_a3a5e0\n        instance(x: 0, y: -6, name: \"count_node\") root.Std_k98ojb.Count {}\n        list_1f9b1d -> count_node.items\n        count_node.on_count -> smallest_missing_a3a5e0\n\n        instance(x: -110, y: 18, name: \"for_loop_node\") root.Std_k98ojb.For {}\n        for_loop_node.trigger -> count_node.reset\n        list_1f9b1d -> for_loop_node.items\n        for_loop_node.on_item -> smallest_missing_a3a5e0\n        for_loop_node.done -> count_node.count\n    }\n\n    \n\n    instance(x: -55, y: 121) SmallestMissing_7c6df2 root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -342, y: 19, name: \"list\") property(List) list_5f6d0a\n        out(x: 21, y: 75, name: \"missing_number\") property(Number) missing_number_2b1c87\n\n        instance(x: -44, y: 55) for_loop_9cd7e3 root.Std_k98ojb.Std.For {\n            trigger() execute\n            reset() reset_count\n            next() next_index\n            items -> list_5f6d0a\n            on item -> find_smallest_missing.item\n            done -> find_smallest_missing.done\n        }\n        for_loop_9cd7e3.iterations -> find_smallest_missing.iteration\n        for_loop_9cd7e3.interation -> find_smallest_missing.interation\n    }\n\n    \n\n    instance(x: -27, y: 135) find_smallest_missing_4a60f6 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -430, y: 0, name: \"numbers\") property(List) numbers_97f3d4\n        out(x: 23, y: 57, name: \"missing\") property(Number) missing_ae9c5b\n\n        instance(x: 43, y: 27) count_node root.Std_k98ojb.Count {}\n        instance(x: -115, y: 25) for_loop_5f8a1d root.Std_k98ojb.Std.For {\n            in(x: -114, y: 20, name: \"i\") property(Number) i_6e2c9c\n            out(x: -109, y: 31, name: \"continue\") trigger() continue_5f8a1d\n            instance(x: -108, y: 19, name: \"current_number\") property(Number) current_number_7b3c5b\n            numbers_97f3d4 -> current_number\n            i_6e2c9c -> current_number\n            count_node.iterations = i_6e2c9c + 1\n            if (count_node.count == count_node.iterations) {\n                continue_5f8a1d.continue = true\n            }\n        } -> for_loop_5f8a1d.trigger\n        numbers_97f3d4 -> find_smallest_missing.output\n        for_loop_5f8a1d.on_count -> missing_ae9c5b\n    }\n\n    \n\n    instance(x: -32, y: 101) find_smallest_missing_d7f6db root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -251, y: 25, name: \"numbers\") property(List) numbers_4d8f55\n\n        out(x: 3, y: 93, name: \"smallest_missing\") property(Number) smallest_missing_0c8a5e\n        instance(x: 96, y: -19, name: \"count_node\") root.Std_k98ojb.Count {}\n        instance(x: 317, y: 55, name: \"for_loop_node\") root.Std_k98ojb.For {}\n        instance(x: 512, y: 70, name: \"min_node\") root.Std_k98ojb.Math.Min {}\n        instance(x: -11, y: 113, name: \"first_item_node\") root.Std_k98ojb.List.FirstItem {}\n        instance(x: 342, y: 78, name: \"last_item_node\") root.Std_k98ojb.List.LastItem {}\n        numbers_4d8f55 -> count_node.items\n        for_loop_node.trigger -> first_item_node.item\n        for_loop_node.next -> last_item_node.item\n        min_node.values -> [first_item_node.item, last_item_node.item]\n        min_node.result -> smallest_missing_0c8a5e\n    }\n\n    \n\n    instance(x: 346, y: -14, SmallestMissing_4b1f66 root.main.SmallestMissing {})\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -273, y: 12, name: \"numbers\") property(List) numbers_2d1e3f\n        out(x: 26, y: 74, name: \"smallest_missing\") property(Number) smallest_missing_a9b3a8\n\n        instance(x: 0, y: -305) count_node root.Std_k98ojb.Count {}\n        in(x: -108, y: 32, name: \"reset\") trigger() reset_6d5f1c\n        in(x: -112, y: 19, name: \"count\") trigger(consumes: Std.CountContext, ) count_5cd8e0\n        numbers_2d1e3f -> count_node.items\n        count_node.on_count -> count_5cd8e0.count\n        reset_6d5f1c -> count_node.reset\n        count_5cd8e0.iteration -> smallest_missing_a9b3a8\n\n        instance(x: -246, y: 34) for_each_node root.Std_k98ojb.Iteration.ForEach {}\n        in(x: -109, y: 23, name: \"numbers\") property(List) numbers_2d1e3f\n        in(x: -113, y: 11, name: \"handler\") property(Number) handler_9a7c71\n        out(x: -114, y: 32, name: \"continue\") trigger() continue_56db8b\n\n        instance(x: 27, y: 75) min_node root.Std_k98ojb.Math.Min {}\n        in(x: -109, y: 23, name: \"numbers\") property(List) numbers_2d1e3f\n        out(x: -112, y: 19, name: \"values\") property(List) values_7a5c4c\n\n        instance(x: 0, y: -305) ifexpression_node root.Std_k98ojb.Std.IfExpression {}\n        getter(x: -144, y: 74, name: \"getter_9cceb3\") getter_9cceb3 = smallest_missing_a9b3a8\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = smallest_missing_a9b3a8\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = smallest_missing_a9b3a8\n\n        numbers_2d1e3f -> ifexpression_node.gen_0\n        numbers_2d1e3f[0] -> ifexpression_node.gen_1\n        numbers_2d1e3f[1] -> ifexpression_node.gen_2\n        numbers_2d1e3f[2] -> ifexpression_node.gen_3\n        ifexpression_node.then -> setter_1cedb2.execute\n        1 -> setter_1cedb2.new_value\n        2 -> setter_37db7f.new_value\n        ifexpression_node.else -> setter_37db7f.execute\n        numbers_2d1e3f[0] -> setter_1cedb2.new_value\n        numbers_2d1e3f[1] -> setter_37db7f.new_value\n        ifexpression_node.result -> smallest_missing_a9b3a8\n        ifexpression_node.result -> continue_56db8b.execute\n        numbers_2d1e3f[0] -> handler_9a7c71.value\n        numbers_2d1e3f[1] -> handler_9a7c71.value\n        numbers_2d1e3f[2] -> handler_9a7c71.value\n        count_node.iteration -> smallest_missing_a9b3a8\n        ifexpression_node.result -> continue_56db8b.continue\n    }\n\n    \n\n    instance(x: -175, y: 73) find_missing_b59c6f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -295, y: 3, name: \"numbers\") property(List) numbers_4d8f2a\n\n        out(x: 0, y: 64, name: \"smallest_missing\") property(Number) smallest_missing_f7e9f6\n        instance(x: -113, y: 47) count_node root.Std_k98ojb.Count {}\n        in(x: -114, y: 53, name: \"reset\") trigger() reset_5c0b2a\n        in(x: -110, y: 67, name: \"count\") trigger(consumes: Std.CountContext, ) count_9f6d3e\n        numbers_4d8f2a -> count_node.items\n        count_node.on_count -> count_9f6d3e.count\n        count_9f6d3e.iteration -> smallest_missing_f7e9f6\n        ifexpression(x: -145, y: 66, name: \"ifexpression_5c2a8b\") {\n            expression: \"numbers_4d8f2a.length == numbers_4d8f2a[0] + count_9f6d3e.iteration\"\n        }\n        ifexpression_5c2a8b.then -> smallest_missing_f7e9f6\n        numbers_4d8f2a[0] + 1 -> smallest_missing_f7e9f6\n    }\n\n    \n\n    instance(x: -36, y: 134) SmallestMissing_b9dd31 root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -445, y: 6, name: \"numbers\") property(List) numbers_1a5f0e\n        out(x: 270, y: 18, name: \"smallest_missing\") property(Number) smallest_missing_9d7c4b\n\n        instance(x: -141, y: 21) count_node root.Std_k98ojb.Count {}\n        in(x: -444, y: 14, name: \"reset\") trigger() reset_8f2e1a\n        in(x: -442, y: 13, name: \"count\") trigger(consumes: Std.CountContext, ) count_a0d5ca\n        instance(x: 335, y: 11) for_loop_node root.Std_k98ojb.For {}\n        numbers_1a5f0e -> count_node.items\n        count_node.iteration -> for_loop_node.iterations\n        for_loop_node.index -> for_loop_node.item\n        for_loop_node.item -> count_a0d5ca.count\n        for_loop_node.item -> find_smallest_missing.handler\n        reset_8f2e1a.done -> find_smallest_missing.continue\n        count_a0d5ca.on_count -> find_smallest_missing.continue\n    }\n\n    \n\n    instance(x: -19, y: 201) find_smallest_missing_9c7b20 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -306, y: 14, name: \"numbers\") property(List) numbers_4f5e33\n        out(x: 13, y: 67, name: \"smallest_missing\") property(Number) smallest_missing_4a6d1c\n\n        instance(x: -83, y: -28, name: \"count_node\") root.Std_k98ojb.Count {}\n        count_node.iterations -> numbers_4f5e33\n        numbers_4f5e33 -> count_node.on_count\n        0 -> count_node.reset\n        count_node.done -> smallest_missing_4a6d1c\n\n        instance(x: -28, y: 35) for_loop_2f8b3a root.Std_k98ojb.Std.For {\n            items: numbers_4f5e33,\n            index: Std_k98ojb.List.FirstItem(),\n            item: Std_k98ojb.List.NextItem()\n        }\n        for_loop_2f8b3a.index -> smallest_missing_4a6d1c\n        for_loop_2f8b3a.item -> numbers_4f5e33\n        for_loop_2f8b3a.done -> count_node.done\n    }\n\n    \n\n    instance(x: -83, y: 67) find_smallest_missing_9c0d28 root.main.find_smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -1408, y: 22, name: \"input\") property(String) input_9d4e6f\n\n        out(x: 550, y: -57, name: \"output\") property(String) output_2c89b5\n\n        instance(x: 91, y: 14) replace_0a7eb1 root.Std_k98ojb.Strings.Replace {}\n        input_9d4e6f -> replace_0a7eb1.input\n        \",.\" -> replace_0a7eb1.search\n        \":\" -> replace_0a7eb1.replace\n        replace_0a7eb1.output -> output_2c89b5\n    }\n\n    \n\n    instance(x: -137, y: 53) replace_with_colon_4f8d1e root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -128, y: 11, name: \"input\") property(String) input_4f5d1b\n\n        out(x: 446, y: 75, name: \"output\") property(String) output_e2c6a3\n\n        instance(x: 98, y: 65) replace_7e9df9 root.Std_k98ojb.Strings.Replace {}\n        input_4f5d1b -> replace_7e9df9.input\n        \", .\" -> replace_7e9df9.search\n        \":\" -> replace_7e9df9.replace\n        replace_7e9df9.output -> output_e2c6a3\n    }\n\n    \n\n    instance(x: -112, y: 29) replace_with_colon_d1d43f root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -150, y: 3, name: \"input\") property(String) input_1e8b20\n\n        out(x: 555, y: -42, name: \"output\") property(String) output_b5c6f4\n\n        instance(x: 1049, y: 76) replace_1a2d23 root.Std_k98ojb.Strings.Replace {}\n        input_1e8b20 -> replace_1a2d23.input\n        \",\" -> replace_1a2d23.search\n        \".\" -> replace_1a2d23.search\n        \" \" -> replace_1a2d23.search\n        \":\" -> replace_1a2d23.replace\n        replace_1a2d23.output -> output_b5c6f4\n    }\n\n    \n\n    instance(x: -120, y: 57) replace_punctuation_eb9e3b root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -142, y: 14, name: \"input\") property(String) input_0\n        out(x: 539, y: -56, name: \"output\") property(String) output_0\n\n        instance(x: 95, y: -47) replace_2d1f2a root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_2d1f2a.input\n        \",.\" -> replace_2d1f2a.search\n        \":\" -> replace_2d1f2a.replace\n        replace_2d1f2a.output -> output_0\n    }\n\n    \n\n    instance(x: -63, y: 49) replace_with_colon_a9c4e5 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -150, y: 3, name: \"input\") property(String) input_9a1b0e\n\n        out(x: 525, y: -54, name: \"output\") property(String) output_a3c7d4\n\n        instance(x: 78, y: -102) replace_6f7cd8 root.Std_k98ojb.Strings.Replace {}\n        input_9a1b0e -> replace_6f7cd8.input\n        \",.\" -> replace_6f7cd8.search\n        \":\" -> replace_6f7cd8.replace\n        replace_6f7cd8.output -> output_a3c7d4\n    }\n\n    \n\n    instance(x: -161, y: 51) replace_special_chars_1b2e45 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -1314, y: 0, name: \"input\") property(String) input_9f2e8a\n\n        out(x: 493, y: -69, name: \"output\") property(String) output_6c34eb\n\n        instance(x: 73, y: -74) replace_4d84b5 root.Std_k98ojb.Strings.Replace {}\n        input_9f2e8a -> replace_4d84b5.input\n        \",\" -> replace_4d84b5.search\n        \".\" -> replace_4d84b5.replace\n        \":\" -> replace_4d84b5.replace\n        replace_4d84b5.output -> output_6c34eb\n    }\n\n    \n\n    instance(x: -98, y: 58) replace_punctuation_9f2e8a root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -133, y: 24, name: \"input\") property(String) input_0\n\n        out(x: 538, y: -60, name: \"output\") property(String) output_0\n\n        instance(x: 222, y: 20) replace_d3e5a8 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_d3e5a8.input\n        \",.\" -> replace_d3e5a8.search\n        \":\" -> replace_d3e5a8.replace\n        replace_d3e5a8.output -> output_0\n    }\n\n    \n\n    instance(x: 109, y: -71) replace_with_colon_e9c4f2 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -137, y: 16, name: \"input\") property(String) input_4d6f1e\n\n        out(x: 531, y: -50, name: \"output\") property(String) output_e0b9a5\n\n        instance(x: 105, y: 68) replace_2c64f8 root.Std_k98ojb.Strings.Replace {}\n        input_4d6f1e -> replace_2c64f8.input\n        \", \".toString() -> replace_2c64f8.search\n        \":\" -> replace_2c64f8.replace\n        replace_2c64f8.output -> output_e0b9a5\n    }\n\n    \n\n    instance(x: -139, y: 18) replace_punctuation_b6e1c4 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -1539, y: 17, name: \"input\") property(String) input_6e8a1d\n\n        out(x: 544, y: 57, name: \"output\") property(String) output_4c5f0b\n\n        instance(x: 1033, y: -14) replace_2cbb11 root.Std_k98ojb.Strings.Replace {}\n        input_6e8a1d -> replace_2cbb11.input\n        \",.\" -> replace_2cbb11.search\n        \":\" -> replace_2cbb11.replace\n        replace_2cbb11.output -> output_4c5f0b\n    }\n\n    \n\n    instance(x: -101, y: 35) replace_special_chars_9d8e4a root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -121, y: 20, name: \"input\") property(String) input_8f9d95\n\n        out(x: 515, y: -67, name: \"output\") property(String) output_ba3d6e\n\n        instance(x: 94, y: -69) replace_2b7c5a root.Std_k98ojb.Strings.Replace {}\n        input_8f9d95 -> replace_2b7c5a.input\n        \",.\" -> replace_2b7c5a.search\n        \":\" -> replace_2b7c5a.replace\n        replace_2b7c5a.output -> output_ba3d6e\n    }\n\n    \n\n    instance(x: -89, y: 30) replace_special_chars_a1fdd0 root.main.replace_special_chars {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -47, y: 22, name: \"string\") property(String) string_8a2d95\n\n        out(x: 1133, y: 53, name: \"output\") property(Bool) output_b6c1e5\n\n        instance(x: -85, y: 75) tolower_4f1b9 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 246, y: 47) contains_f8a94d root.Std_k98ojb.Strings.Contains {}\n        tolower_4f1b9.result -> output_b6c1e5\n        string_8a2d95 -> tolower_4f1b9.input\n        'a' -> contains_f8a94d.contains\n        'z' -> contains_f8a94d.contains\n        contains_f8a94d.is_contained -> output_b6c1e5\n    }\n\n    \n\n    instance(x: 10, y: -167) all_same_13b7ed root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_all_same {\n        in(x: -33, y: 78, name: \"input\") property(String) input_9f6a1d\n\n        out(x: 1275, y: -87, name: \"output\") property(Bool) output_4e8b3c\n\n        instance(x: 114, y: -89) contains_c2cf43 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 227, y: 51) tolower_d9f1a0 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 368, y: -91) characters_7d6c4e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1048, y: -85) isnumeric_f2b41f root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 1285, y: 65) if_e19a62 root.Std_k98ojb.Std.If {}\n        getter(x: 209, y: 142, name: \"getter_7d4c9e\") getter_7d4c9e = input_9f6a1d\n        setter(x: -25, y: 138, name: \"setter_bf0b8d\") setter_bf0b8d = input_9f6a1d\n        instance(x: 292, y: -95) if_e19a62.execute {\n            expression: \"contains(input) && isnumeric(input)\"\n        }\n        getter_7d4c9e.value -> contains_c2cf43.item\n        setter_bf0b8d.value -> tolower_d9f1a0.input\n        tolower_d9f1a0.result -> characters_7d6c4e.input\n        if_e19a62.then -> is_all_same.execute\n        input_9f6a1d -> contains_c2cf43.item\n        contains_c2cf43.is_contained -> isnumeric_f2b41f.item\n        isnumeric_f2b41f.result -> output_4e8b3c\n    }\n\n    \n\n    instance(x: 44, y: -93) is_all_same_ba66d1 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -247, y: 30, name: \"string\") property(String) string_2f8a57\n\n        out(x: 1154, y: 49, name: \"output\") property(Bool) output_9b3d1e\n\n        instance(x: -74, y: 62) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 143, y: 64) tolower_f7c5a4 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 256, y: 66) characters_c5d1af root.Std_k98ojb.Strings.Characters {}\n        instance(x: -45, y: 68) contains_32727d root.Std_k98ojb.List.Contains {}\n        is_all_same_9f3a6e.output_list -> length_6e87f2.list\n        string_2f8a57 -> tolower_f7c5a4.input\n        tolower_f7c5a4.result -> characters_c5d1af.input\n        characters_c5d1af.characters -> contains_32727d.item\n        0 -> length_6e87f2.index\n        length_6e87f2.length -> is_all_same_9f3a6e.output_list\n    }\n\n    \n\n    instance(x: -56, y: 10) is_all_same_9f3a6e root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") is_same {\n        in(x: -45, y: 27, name: \"s\") property(String) s_4d3f55\n\n        out(x: 1085, y: 48, name: \"output\") property(Bool) output_0a9c4b\n\n        instance(x: -92, y: 53) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 199, y: 61) isnumeric_b1d66d root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 394, y: 70) characters_9a8c74 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -11, y: 23) tolower_e0f1df root.Std_k98ojb.Strings.ToLower {}\n        isnumeric_b1d66d.is_contained -> length_6e87f2.length\n        characters_9a8c74.list -> tolower_e0f1df.s\n        tolower_e0f1df.result -> isnumeric_b1d66d.item\n        length_6e87f2.length -> output_0a9c4b\n    }\n\n    \n\n    instance(x: 48, y: -19) is_same_a3ebaf root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -49, y: 27, name: \"s\") property(String) s_1e5f7d\n\n        out(x: 1099, y: -12, name: \"output\") property(Bool) output_ba2c48\n\n        instance(x: -13, y: 14) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 233, y: 35) tolower_4e3f47 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 451, y: 23) characters_9c2a0f root.Std_k98ojb.Strings.Characters {}\n        instance(x: -64, y: -12) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 109, y: 31) equal_4d7e5f root.Std_k98ojb.Logic.Equal {}\n    }\n\n    \n\n    instance(x: 35, y: 1) is_all_same_9c8f43 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") same_characters {\n        in(x: -246, y: 33, name: \"input\") property(String) input_4a1d5f\n\n        out(x: 1212, y: -39, name: \"output\") property(Bool) output_9c6e85\n\n        instance(x: -11, y: 48) length_0b7bf3 root.Std_k98ojb.List.Length {}\n        instance(x: 142, y: -42) contains_4a8f5d root.Std_k98ojb.List.Contains {}\n        instance(x: 335, y: -49) tolower_d39e2c root.Std_k98ojb.Strings.ToLower {}\n        same_characters_9a66a3 -> length_0b7bf3.list\n        input_4a1d5f -> length_0b7bf3.length\n        contains_4a8f5d.item -> tolower_d39e2c.input\n        tolower_d39e2c.result -> same_characters_9a66a3.value\n    }\n\n    \n\n    instance(x: 12, y: -13) same_characters_9a66a3 root.main.same_characters {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -444, y: 39, name: \"input\") property(String) input_0f6e5a\n\n        out(x: 1038, y: 41, name: \"output\") property(Bool) output_f9c3eb\n\n        instance(x: -194, y: 33) tolower_2d9b4 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 157, y: 48) characters_8fcaef root.Std_k98ojb.Strings.Characters {}\n        instance(x: 292, y: 54) contains_32727d root.Std_k98ojb.List.Contains {}\n        is_same_0c3e2a -> tolower_2d9b4.input\n        tolower_2d9b4.result -> characters_8fcaef.characters\n        characters_8fcaef.characters -> contains_32727d.item\n        contains_32727d.is_contained -> is_same_0c3e2a.value\n    }\n\n    \n\n    instance(x: 29, y: -23) is_same_0c3e2a root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_all_same {\n        in(x: -47, y: 24, name: \"input\") property(String) input_4f8d1e\n\n        out(x: 1179, y: -15, name: \"output\") property(Bool) output_a6a7c3\n\n        instance(x: -19, y: 28) is_same_c2bfe5 root.Std_k98ojb.Logic.Equal {}\n        getter(x: -76, y: 31, name: \"getter_9f8d0e\") getter_9f8d0e = input_4f8d1e\n        instance(x: -104, y: 19) lower_2a51a5 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -28, y: 16) characters_6c7dd3 root.Std_k98ojb.Strings.Characters {}\n        is_same_c2bfe5.left -> output_a6a7c3\n        input_4f8d1e -> lower_2a51a5.input\n        lower_2a51a5.output -> characters_6c7dd3\n        characters_6c7dd3.characters -> is_same_c2bfe5.right\n    }\n\n    \n\n    instance(x: 45, y: -19) is_all_same_4d8f47 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -31, y: 11, name: \"input\") property(String) input_8f3f0d\n\n        out(x: 1214, y: 7, name: \"output\") property(Bool) output_5c9f6e\n\n        instance(x: 145, y: -18) length_8b1d14 root.Std_k98ojb.List.Length {}\n        instance(x: 278, y: 17) tolower_f2a90a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 394, y: 5) characters_0f3e9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: -35, y: 30) isnumeric_4d1e24 root.Std_k98ojb.Strings.IsNumeric {}\n        all_same_58a7eb -> output_5c9f6e\n        length_8b1d14.length -> isnumeric_4d1e24.left\n        input_8f3f0d -> tolower_f2a90a.input\n        characters_0f3e9c.characters -> isnumeric_4d1e24.item\n        tolower_f2a90a.result -> all_same_58a7eb\n    }\n\n    \n\n    instance(x: 45, y: -198) all_same_58a7eb root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") all_same {\n        in(x: -21, y: 31, name: \"input\") property(String) input_3e4d41\n\n        out(x: 1039, y: -25, name: \"output\") property(Bool) output_eb7f0a\n\n        instance(x: -54, y: 34) tolower_d5a2c6 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -155, y: 46) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1061, y: -24) isnumeric_b7e9f3 root.Std_k98ojb.Strings.IsNumeric {}\n        all_same_2a8c5d.output_list -> output_eb7f0a\n    }\n\n    \n\n    instance(x: 33, y: 12) all_same_2a8c5d root.main.all_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"s\") property(String) s_ai\n        out(x: -424, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 85, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        s_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n    }\n\n    \n    instance(x: -43, y: -242, name: \"count_digits\") count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 1, y: -420, name: \"result\") property(Number) result_ai\n\n        instance(x: 80, y: -412) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_3f6d8a.result\n    }\n\n    instance(x: 96, y: -416) count_digits_3f6d8a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -205, y: -417) math_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> math_length_node.input\n        math_length_node.length -> output_ai\n    }\n\n    \n    instance(x: -173, y: 26) strings_to_int_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 45, y: -246, name: \"count\") property(Number) count_ai\n\n        instance(x: 55, y: 76) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n    }\n\n    \n    instance(x: 0, y: -48, name: \"count_digits\") count_3c7e34 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 38, y: -255, name: \"count\") property(Number) count_ai\n\n        instance(x: 43, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n    }\n\n    \n    instance(x: 92, y: -256, name: \"count_digits\") count_2c8d7a root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"s\") property(String) s_ai\n        out(x: 2, y: -245, name: \"result\") property(Number) result_ai\n\n        instance(x: 83, y: 22) length_node root.Std_k98ojb.Strings.Length {}\n        s_ai -> length_node.input\n        length_node.length -> result_ai\n    }\n\n    \n    instance(x: 0, y: -247, name: \"count_digits\") count_1a4e2d root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: -234, y: 44, name: \"count\") property(Number) count_ai\n\n        instance(x: 65, y: 27) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n    }\n\n    \n    instance(x: -219, y: 0) math_floor_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -193, y: -46) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_8d7f1a\n        count_digits_8d7f1a.result -> result_ai\n    }\n\n    \n    instance(x: 193, y: -46) strings_to_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: -450, y: -421, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_8c23f1.result\n    }\n\n    instance(x: -450, y: -421, name: \"count_digits\") Std.If {\n        input: \"input contains a digit\",\n        then: \"count_digits_8c23f1\"\n        else: List.Empty {}\n    }\n    \n    instance(x: 0, y: 0) strings_contains_node root.Std_k98ojb.Strings.Contains {}\n    input_ai -> strings_contains_node.input\n    strings_contains_node.contains -> count_digits_8c23f1.input\n    count_digits_8c23f1.result -> Std.If.then.result\n\n    instance(x: -216, y: 0) strings_replace_node root.Std_k98ojb.Strings.Replace {}\n    input_ai -> strings_replace_node.input\n    strings_contains_node.contains -> strings_replace_node.search\n    '0' -> strings_replace_node.replace\n    strings_replace_node.output -> count_digits_8c23f1.input\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: -245, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 15, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n    }\n\n    \n    instance(x: -215, y: -37) count_digits_node root.main.count_digits {}\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -304, y: 141, name: \"n\") property(Number) n_5a3d4b\n\n        out(x: 1006, y: -343, name: \"output\") property(Number) output_f2c8a1\n\n        instance(x: 68, y: -389) ifexpression_e85e38 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 414, y: -357) sum_fourth_power_6d9f2c root.main.sum_fourth_power {}\n        instance(x: 96, y: -221) pow_f1aee5 root.Std_k98ojb.Math.Pow {}\n        instance(x: 313, y: -284) mul_0e8f8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 95, y: -197) add_b2c4d6 root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -247) div_f9a1af root.Std_k98ojb.Math.Div {}\n        setter(x: -192, y: -362, name: \"setter_5f3e0b\") setter_5f3e0b = sum\n        setter(x: 874, y: -394, name: \"setter_c0a2c6\") setter_c0a2c6 = sum\n        getter(x: 902, y: -295, name: \"getter_b9d4ad\") getter_b9d4ad = sum\n        instance(x: -199, y: -270) floor_5f1e7b root.Std_k98ojb.Math.Floor {}\n        3 -> pow_f1aee5.y\n        n_5a3d4b -> pow_f1aee5.x\n        pow_f1aee5.result -> mul_0e8f8f.first\n        3 -> div_f9a1af.second\n        div_f9a1af.result -> sum_fourth_power_6d9f2c.n_5a3d4b\n        0 -> setter_5f3e0b.new_value\n        setter_5f3e0b.continue -> ifexpression_e85e38.execute\n        ifexpression_e85e38.then -> sum_fourth_power_6d9f2c.execute_cdac2a\n        execute_cdac2a -> setter_c0a2c6.execute\n        ifexpression_e85e38.else -> sum_fourth_power_6d9f2c.execute_cdac2a\n        sum_fourth_power_6d9f2c.continue_d9efd7 -> setter_c0a2c6.execute\n        sum_fourth_power_6d9f2c.output_732a8a -> add_b2c4d6.second\n        add_b2c4d6.result -> setter_c0a2c6.new_value\n        setter_c0a2c6.continue -> continue_d9efd7\n        getter_b9d4ad.value -> output_f2c8a1\n        n_5a3d4b -> floor_5f1e7b.input\n        floor_5f1e7b.output -> div_f9a1af.first\n        floor_5f1e7b.output -> pow_f1aee5.value\n        floor_5f1e7b.output -> ifexpression_e85e38.gen_0\n    }\n\n    \n\n    instance(x: -175, y: 162) sum_fourth_power_3cddfa root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -304, y: 159, name: \"n\") property(Number) n_1a2b3\n\n        out(x: 1296, y: 151, name: \"sum\") property(Number) output_ebf7c5\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        instance(x: -193, y: 85) div_2d44da root.Std_k98ojb.Math.Div {}\n        instance(x: 23, y: 82) pow_3e8f38 root.Std_k98ojb.Math.Pow {}\n        instance(x: 95, y: 80) add_88bb8a root.Std_k98ojb.Math.Add {}\n        data_instance(x: 394, y: -339) data_cde0dc  = [sum]\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (4*n^3 + 6*n^2 + n)\"\n        }\n        data_cde0dc -> output_ebf7c5\n        n_1a2b3 -> expression_634b7e.gen_0\n        expression_634b7e.result -> data_cde0dc.sum\n        div_2d44da.result -> data_cde0dc.sum\n        pow_3e8f38.result -> add_88bb8a.first\n        4 -> pow_3e8f38.power\n        n_1a2b3 -> pow_3e8f38.base\n        add_88bb8a.result -> data_cde0dc.sum\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -289, y: 174, name: \"n\") property(Number) n_1a5d2b\n\n        out(x: 19683, y: -654, name: \"output\") property(Number) output_f8c6e4\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"elem\") property(Number) elem_a3f7eb\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        list_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 170, name: \"n\") property(Number) n_2b3f1d\n\n        out(x: 8000, y: 9, name: \"output\") property(Number) output_d4a5a7\n\n        instance(x: 80, y: 0) sum_fourth_power_7c6e21 root.Std_k98ojb.Math.Sum {}\n        instance(x: -136, y: 34, name: \"i\") for_loop_85d3ab root.Std_k98ojb.Std.For {}\n        instance(x: 47, y: 28) pow_0f4a7c root.Std_k98ojb.Math.Pow {}\n        instance(x: 39, y: -1, name: \"odd_number\") find_ea2a65 root.Std_k98ojb.Iteration.Find {}\n        list_empty_1d8e5b -> for_loop_85d3ab.items\n        instance(x: 73, y: 20) modulo_8c7f47 root.Std_k98ojb.Math.Modulo {}\n        pow_0f4a7c.result -> modulo_8c7f47.first\n        pow_0f4a7c.result -> sum_fourth_power_7c6e21.gen_0\n        odd_number.item -> for_loop_85d3ab.index\n        find_ea2a65.item -> sum_fourth_power_7c6e21.n_2b3f1d\n        sum_fourth_power_7c6e21.continue_d9efd7 -> pow_0f4a7c.execute_cdac2a\n        pow_0f4a7c.then -> for_loop_85d3ab.execute_cdac2a\n        sum_fourth_power_7c6e21.output_732a8a -> odd_number.item\n    }\n\n    \n\n    instance(x: -44, y: 538) sum_fourth_power_f9cd28 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -289, y: 164, name: \"n\") property(Number) n_1f2b43\n\n        out(x: 1076, y: -273, name: \"output\") property(Number) output_ea9c8d\n\n        instance(x: 0, y: 0) find_c3e4ab root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -216, y: 67, name: \"current\") property(Number) current_57f2ca\n\n            out(x: 571, y: 43, name: \"bool\") property(Bool) bool_9d4a5e\n\n            instance(x: 88, y: 54) modulo_d8c3af root.Std_k98ojb.Math.Modulo {}\n            instance(x: 408, y: 60) equal_b2f1eb root.Std_k98ojb.Logic.Equal {}\n            current_57f2ca -> modulo_d8c3af.value\n            3 -> modulo_d8c3af.divisor\n            modulo_d8c3af.result -> equal_b2f1eb.left\n            0 -> equal_b2f1eb.right\n            equal_b2f1eb.result -> bool_9d4a5e\n        } -> find_c3e4ab.predicate\n        func() {\n            in(x: -216, y: 67, name: \"current\") property(Number) current_57f2ca\n\n            out(x: 571, y: 43, name: \"bool\") property(Bool) bool_9d4a5e\n\n            instance(x: 88, y: 54) modulo_d8c3af root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 49) notequal_1f2d28 root.Std_k98ojb.Logic.NotEqual {}\n            current_57f2ca -> modulo_d8c3af.value\n            3 -> modulo_d8c3af.divisor\n            modulo_d8c3af.result -> notequal_1f2d28.left\n            0 -> notequal_1f2d28.right\n            notequal_1f2d28.result -> bool_9d4a5e\n        } -> find_c3e4ab.predicate\n        list_09fcba -> find_c3e4ab.items\n        find_c3e4ab.item -> sum_fourth_power.n_1f2b43\n        mul_7e1ce0.root.Std_k98ojb.Math.Mul {}\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 395, y: -378) sum_fourth_power_9c8e2f root.main.sum_fourth_power {}\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        3 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> add_88bb8a.first\n        3 -> div_547f34.second\n        div_547f34.result -> sum_fourth_power.n_1f2b43\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> sum_fourth_power_9c8e2f.execute_cdac2a\n        sum_fourth_power_9c8e2f.continue_d9efd7 -> setter_375321.execute\n        sum_fourth_power_9c8e2f.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_ea9c8d\n        n_1f2b43 -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        floor_61b38d.output -> modulo_adfa16.value\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_fourth_power_f2a8c1 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -346, y: 121, name: \"n\") property(Number) n_6b655b\n\n        out(x: 4000, y: -1, name: \"sum\") property(Number) sum_4f8a88\n\n        instance(x: 67, y: 86) pow_5e7c41 root.Std_k98ojb.Math.Pow {}\n        instance(x: 304, y: 90) add_0e3d6a root.Std_k98ojb.Math.Add {}\n        instance(x: -37, y: 22, name: \"first_odd\") find_1f8df5 root.Std_k98ojb.Iteration.Find {}\n        list_4dbb9c -> find_1f8df5.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_1f8df5.predicate\n        pow_5e7c41.x -> add_0e3d6a.first\n        pow_5e7c41.y -> add_0e3d6a.second\n        find_1f8df5.item -> first_odd\n        first_odd.item -> pow_5e7c41.result\n        n_6b655b -> add_0e3d6a.n_6b655b\n        add_0e3d6a.result -> sum_4f8a88\n    }\n\n    \n\n    instance(x: -81, y: 529) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -269, y: 0, name: \"n\") property(Number) n_8d4b5e\n\n        out(x: 1947, y: -1, name: \"sum\") property(Number) sum_f9a3ea\n\n        instance(x: 41, y: 44) mul_77c25f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 304, y: 57) data_cde0dc  = 1\n        instance(x: 60, y: -16) pow_9a4e5d root.Std_k98ojb.Math.Pow {}\n        instance(x: 309, y: 50) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_77c25f.result -> div_64046c.first\n        pow_9a4e5d.result -> mul_77c25f.second\n        n_8d4b5e -> pow_9a4e5d.gen_0\n        div_64046c.result -> sum_f9a3ea\n    }\n\n    \n\n    instance(x: -57, y: 269) sum_fourth_power_e7c2a6 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -304, y: 155, name: \"n\") property(Number) n_1a5f4d\n\n        out(x: 5760, y: -341, name: \"output\") property(Number) output_b3d7b8\n\n        instance(x: 63, y: 26) sum_fourth_power_6cd9e2 root.main.sum_fourth_power {}\n        instance(x: 73, y: 34) ifexpression_d0c85a root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 94, y: -219) pow_4d6f1e root.Std_k98ojb.Math.Pow {}\n        instance(x: 95, y: -201) mul_e8a9ac root.Std_k98ojb.Math.Mul {}\n        instance(x: 101, y: -255) add_a2c7b5 root.Std_k98ojb.Math.Add {}\n        instance(x: 97, y: -231) div_3d6e30 root.Std_k98ojb.Math.Div {}\n        setter(x: -245, y: -269, name: \"setter_f9a8f4\") setter_f9a8f4 = sum\n        setter(x: 89, y: -273, name: \"setter_d1c3aa\") setter_d1c3aa = sum\n        getter(x: 91, y: -257) getter_5e2d45 sum\n        instance(x: 59, y: -253) floor_e8f5a6 root.Std_k98ojb.Math.Floor {}\n        4 -> pow_4d6f1e.y\n        pow_4d6f1e.result -> mul_e8a9ac.first\n        3 -> div_3d6e30.second\n        div_3d6e30.result -> sum_fourth_power_6cd9e2.n_1a5f4d\n        0 -> setter_f9a8f4.new_value\n        setter_f9a8f4.continue -> ifexpression_d0c85a.execute\n        ifexpression_d0c85a.then -> sum_fourth_power_6cd9e2.execute_cdac2a\n        execute_cdac2a -> setter_d1c3aa.execute\n        ifexpression_d0c85a.else -> sum_fourth_power_6cd9e2.execute_cdac2a\n        sum_fourth_power_6cd9e2.continue_d9efd7 -> setter_f9a8f4.execute\n        sum_fourth_power_6cd9e2.output_732a8a -> add_a2c7b5.second\n        add_a2c7b5.result -> setter_d1c3aa.new_value\n        setter_d1c3aa.continue -> continue_d9efd7\n        getter_5e2d45.value -> output_b3d7b8\n        n_1a5f4d -> floor_e8f5a6.input\n        floor_e8f5a6.output -> div_3d6e30.first\n        floor_e8f5a6.output -> pow_4d6f1e.value\n        floor_e8f5a6.output -> ifexpression_d0c85a.gen_0\n    }\n\n    \n\n    instance(x: -190, y: 178) sum_fourth_power_f9bfc2 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -286, y: 186, name: \"n\") property(Number) n_5a2e0d\n\n        out(x: 1368, y: 164, name: \"sum\") property(Number) sum_4c6f1b\n\n        instance(x: 23, y: 167) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_5a2e0d -> mul_f892a4.first\n        n_5a2e0d -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_4c6f1b\n    }\n\n    \n\n    instance(x: 118, y: -26) square_sum_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -287, y: 191, name: \"n\") property(Number) n_0a8f3d\n\n        out(x: 1045, y: 139, name: \"sum\") property(Number) sum_6e2b9c\n\n        instance(x: 70, y: 140) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 336, y: -1) data_cde0dc  = 3\n        instance(x: 12, y: 146) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_0a8f3d -> mul_f892a4.first\n        n_0a8f3d -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_6e2b9c\n    }\n\n    \n\n    instance(x: 117, y: -28) sum_fourth_power_9e9e56 root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -110, y: 67, name: \"side\") property(Number) side_3d8f6e\n\n        out(x: 152, y: 21, name: \"surface_area\") property(Number) surface_area_e5a7cd\n\n        instance(x: 43, y: -12) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 255, y: 112) data_1f8c6e  = 6\n        instance(x: 19, y: 121) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        data_1f8c6e -> mul_f892a4.second\n        side_3d8f6e -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> mul_f892a4.first\n        mul_f892a4.result -> surface_area_e5a7cd\n    }\n\n    \n\n    instance(x: -179, y: 144) cube_surface_area_a8b1d root.main(cube_surface_area {})\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -107, y: 55, name: \"side_length\") property(Number) side_length_1e4b3d\n\n        out(x: 216, y: 14, name: \"surface_area\") property(Number) surface_area_ea6f7c\n\n        instance(x: 11, y: -46) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 233, y: 142) data_1a9e31  = side_length_1e4b3d\n        instance(x: 114, y: 147) pow_f5c0eb root.Std_k98ojb.Math.Pow {}\n        data_1a9e31 -> pow_f5c0eb.x\n        2 -> pow_f5c0eb.y\n        pow_f5c0eb.result -> mul_f892a4.first\n        side_length_1e4b3d -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_ea6f7c\n    }\n\n    \n\n    instance(x: 233, y: -41) cube_surface_area_b2a9d0 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -124, y: 56, name: \"side_length\") property(Number) side_length_5d2e38\n\n        out(x: 352, y: 27, name: \"surface_area\") property(Number) surface_area_4b2c45\n        out(x: 213, y: -15, name: \"continue\") trigger() continue_0f1a83\n\n        instance(x: 108, y: -43) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 109, y: -48) data_e5d3c9  = side_length_5d2e38\n        instance(x: 12, y: 40) pow_f0fdd1 root.Std_k98ojb.Math.Pow {}\n        data_e5d3c9 -> mul_f892a4.first\n        pow_f0fdd1.y -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_4b2c45\n    }\n\n    \n\n    instance(x: 222, y: -21) cube_surface_area_6e8d11 root.main(cube_surface_area {})\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -114, y: 33, name: \"side_length\") property(Number) side_length_3f1a5d\n\n        out(x: 216, y: 38, name: \"surface_area\") property(Number) surface_area_8c85e0\n\n        instance(x: -63, y: -221) pow_f4b2df root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -191, y: -134) data_e7d1a5  = side_length_3f1a5d\n        instance(x: -342, y: -187) mul_8e6c41 root.Std_k98ojb.Math.Mul {}\n        data_e7d1a5 -> pow_f4b2df.x\n        6 -> pow_f4b2df.y\n        pow_f4b2df.result -> mul_8e6c41.first\n        side_length_3f1a5d -> mul_8e6c41.second\n        mul_8e6c41.result -> surface_area_8c85e0\n    }\n\n    \n\n    instance(x: 261, y: -13) cube_surface_area_eb7ff2 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -234, y: 21, name: \"side_length\") property(Number) side_length_4fbd11\n\n        out(x: 276, y: 54, name: \"surface_area\") property(Number) sa_9a0e5d\n\n        instance(x: -106, y: -186) pow_f6bdf3 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -213, y: -1) data_b2fdd7  = side_length_4fbd11\n        instance(x: -343, y: 21) mul_9c8e56 root.Std_k98ojb.Math.Mul {}\n        data_b2fdd7 -> mul_9c8e56.first\n        6 -> mul_9c8e56.second\n        mul_9c8e56.result -> sa_9a0e5d\n    }\n\n    \n\n    instance(x: -219, y: 75) surface_area_e4e5f1 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -106, y: 41, name: \"side_length\") property(Number) side_length_5d3e8a\n\n        out(x: 588, y: 11, name: \"surface_area\") property(Number) surface_area_4bdf48\n        out(x: 1110, y: -19, name: \"continue\") trigger() continue_1d7c62\n\n        instance(x: -67, y: -21) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 109, y: 133) data_b5e4f2  = side_length_5d3e8a\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"6 * (side_length_5d3e8a ^ 2)\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_b5e4f2 -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        side_length_5d3e8a -> mul_f892a4.first\n        surface_area_4bdf48 -> div_64046c.result\n    }\n\n    \n\n    instance(x: 191, y: -11) cube_surface_area_d1f0cd root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -195, y: 21, name: \"side\") property(Number) side_5f0d43\n\n        out(x: 648, y: 6, name: \"surface_area\") property(Number) surface_area_9c1a59\n        out(x: 156, y: -12, name: \"continue\") trigger() continue_2e15ea\n\n        instance(x: -155, y: -26) pow_f5f7d4 root.Std_k98ojb.Math.Pow {}\n        side_5f0d43 -> pow_f5f7d4.x\n        2 -> pow_f5f7d4.y\n        pow_f5f7d4.result -> surface_area_9c1a59\n        instance(x: -109, y: -108) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        side_5f0d43 -> mul_f892a4.first\n        6 -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_9c1a59\n    }\n\n    \n\n    instance(x: -145, y: 74) cube_surface_area_b7b2e3 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -107, y: 44, name: \"side_length\") property(Number) side_length_1e5d4f\n\n        out(x: 216, y: 7, name: \"surface_area\") property(Number) surface_area_8b9a0c\n\n        instance(x: -19, y: 29) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -105, y: 11, name: \"side_length_square\") = side_length_1e5d4f * side_length_1e5d4f\n        instance(x: -342, y: 69) add_b4554f root.Std_k98ojb.Math.Add {}\n        mul_f892a4.result -> add_b4554f.first\n        data_side_length_square -> add_b4554f.second\n        add_b4554f.result -> surface_area_8b9a0c\n    }\n\n    \n\n    instance(x: 303, y: -1) cube_surface_area_d2d5e root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -124, y: 20, name: \"side\") property(Number) side_4d2a43\n\n        out(x: 288, y: 12, name: \"area\") property(Number) area_e0f8e5\n        out(x: 104, y: 24, name: \"continue\") trigger() continue_c9c6ca\n\n        instance(x: -13, y: -26) mul_7d4aeb root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -64, y: 11) data_f5f8ea  = side\n        instance(x: -10, y: 17) pow_1e6a9 root.Std_k98ojb.Math.Pow {}\n        data_f5f8ea -> mul_7d4aeb.first\n        pow_1e6a9.x -> mul_7d4aeb.second\n        side_4d2a43 -> pow_1e6a9.y\n        6 -> pow_1e6a9.y\n        mul_7d4aeb.result -> area_e0f8e5\n    }\n\n    \n\n    instance(x: -71, y: 17) surface_area_baa38c root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -215, y: 31, name: \"side\") property(Number) side_6d8e4a\n\n        out(x: 648, y: 28, name: \"area\") property(Number) area_9b7c5f\n        out(x: 216, y: -76, name: \"continue\") trigger() continue_2c0d44\n\n        instance(x: -96, y: -193) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 174, y: 15) data_d3f1e9  = side\n        instance(x: 109, y: -167) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        data_d3f1e9 -> mul_f892a4.first\n        2 -> pow_584bfd.y\n        mul_f892a4.result -> pow_584bfd.first\n        pow_584bfd.result -> area_9b7c5f\n    }\n\n    \n\n    instance(x: -222, y: 73) surface_area_e0d8e root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -1003, y: -504, name: \"list\") property(List) list_6f8d1e\n\n        out(x: 102, y: -502, name: \"difference\") property(Number) difference_c2b4a9\n\n        instance(x: -1127, y: -368, name: \"max_node\") Max {}\n        instance(x: -1013, y: -488, name: \"min_node\") Min {}\n        data_instance(x: 1141, y: -362) data_98d56f  = [max, min]\n        instance(x: -1065, y: -484) sub_ea9df0 root.Std_k98ojb.Math.Sub {}\n        list_6f8d1e -> max_node.items\n        list_6f8d1e -> min_node.items\n        data_98d56f -> sub_ea9df0.first\n        max_node.max -> data_98d56f.max\n        min_node.min -> data_98d56f.min\n        sub_ea9df0.result -> difference_c2b4a9\n    }\n\n    \n\n    instance(x: 100, y: -63) diff_largest_smallest_15c7e3 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -133, y: 16, name: \"list\") property(List) list_5d7f8a\n\n        out(x: 544, y: -103, name: \"difference\") property(Number) difference_a3e0c9\n        out(x: 540, y: -109, name: \"continue\") trigger() continue_64bfc1\n\n        instance(x: -1017, y: -493) length_74a2f4 root.Std_k98ojb.List.Length {}\n        instance(x: 1023, y: -111) max_5c0e23 root.Std_k98ojb.List.Max {}\n        instance(x: -1031, y: -487) min_8d9f28 root.Std_k98ojb.List.Min {}\n        instance(x: -1084, y: -109) sub_1e3c6a root.Std_k98ojb.Math.Sub {}\n        list_5d7f8a -> length_74a2f4.list\n        max_5c0e23.items -> min_8d9f28.items\n        min_8d9f28.item -> sub_1e3c6a.first\n        sub_1e3c6a.result -> difference_a3e0c9\n    }\n\n    \n\n    instance(x: 1024, y: -110) diff_max_min_5b2f7e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -136, y: 155, name: \"list\") property(List) list_8a2e24\n\n        out(x: -189, y: -492, name: \"output\") property(Number) output_b7d9f4\n\n        instance(x: -103, y: -110) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) max_8a1d43 root.Std_k98ojb.List.Max {}\n        instance(x: -119, y: -492) min_9c4d97 root.Std_k98ojb.List.Min {}\n        instance(x: 201, y: 72) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_8a2e24 -> length_6e87f2.list\n        max_8a1d43.items -> length_6e87f2.length\n        min_9c4d97.items -> length_6e87f2.length\n        sub_852f2e.first -> output_b7d9f4\n        sub_852f2e.second -> output_b7d9f4\n    }\n\n    \n\n    instance(x: 101, y: -67) diff_max_min_5c8a4b root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -142, y: 436, name: \"list\") property(List) list_3d6e8a\n\n        out(x: 547, y: 85, name: \"difference\") property(Number) difference_eb0f50\n        instance(x: -1089, y: 193, name: \"max_node\") Std_k98ojb.List.Max {}\n        instance(x: -1023, y: 219, name: \"min_node\") Std_k98ojb.List.Min {}\n        instance(x: -1077, y: 105) sub_1a5f70 root.Std_k98ojb.Math.Sub {}\n        list_3d6e8a -> max_node.items\n        list_3d6e8a -> min_node.items\n        max_node.max -> diff_max_min.difference\n        min_node.min -> diff_max_min.difference\n    }\n\n    \n\n    instance(x: 101, y: -67) diff_max_min_5f0c2b root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -146, y: -520, name: \"list\") property(List) list_6a0b3d\n\n        out(x: -114, y: -621, name: \"output\") property(Number) output_b1f2e8\n        instance(x: 434, y: -306, name: \"max_node\") Std_k98ojb.List.Max {}\n        instance(x: 509, y: -486, name: \"min_node\") Std_k98ojb.List.Min {}\n        data_instance(x: -475, y: -499) data_7d4e0f  = [first, middle, last]\n        instance(x: -1039, y: -458) length_5a6c1f root.Std_k98ojb.List.Length {}\n        instance(x: -1423, y: -504) sub_8d2f21 root.Std_k98ojb.Math.Sub {}\n        list_6a0b3d -> max_node.items\n        list_6a0b3d -> min_node.items\n        max_node.max -> data_7d4e0f.last\n        min_node.min -> data_7d4e0f.first\n        sub_8d2f21.result -> output_b1f2e8\n        length_5a6c1f.length -> sub_8d2f21.first\n        1 -> sub_8d2f21.second\n    }\n\n    \n\n    instance(x: -106, y: -58) diff_max_min_4b9f66 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -1121, y: 439, name: \"list\") property(List) list_6f2a4e\n\n        out(x: 451, y: 62, name: \"difference\") property(Number) difference_1bdf3d\n        out(x: 121, y: -248, name: \"output\") trigger() output_1c5bb0\n\n        instance(x: -1049, y: -375) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -978, y: -566) max_3d4a21 root.Std_k98ojb.List.Max {}\n        instance(x: -1405, y: -438) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        list_6f2a4e -> length_6e87f2.list\n        max_3d4a21.items -> sub_f133b2.first\n        sub_f133b2.result -> greaterthan_cb50ae.left\n        greaterthan_cb50ae.right -> max_3d4a21.max\n        length_6e87f2.length -> sub_f133b2.second\n        list_6f2a4e -> sub_f133b2.list\n    }\n\n    \n\n    instance(x: 48, y: -67) diff_max_min_b5b8c9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -248, y: 15, name: \"list\") property(List) list_1d5b8a\n\n        out(x: -189, y: -624, name: \"difference\") property(Number) difference_e4e3b2\n        out(x: 432, y: -116, name: \"continue\") trigger() continue_f45c74\n\n        instance(x: -1039, y: -378) max_5f1a24 root.Std_k98ojb.List.Max {}\n        instance(x: -1048, y: -596) min_8cd3d6 root.Std_k98ojb.List.Min {}\n        data_instance(x: 105, y: -394) data_4e4c8f  = [max, min]\n        instance(x: -433, y: -620) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_1d5b8a -> max_5f1a24.items\n        list_1d5b8a -> min_8cd3d6.items\n        data_4e4c8f -> sub_f133b2.first\n        max_5f1a24.max -> sub_f133b2.second\n        min_8cd3d6.min -> difference_e4e3b2\n    }\n\n    \n\n    instance(x: 49, y: -68) diff_max_min_9d7c85 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -133, y: 11, name: \"list\") property(List) list_5d4f8a\n\n        out(x: 439, y: 63, name: \"difference\") property(Number) difference_b4c2b3\n        out(x: 516, y: -104, name: \"output\") trigger() output_c1e9ea\n\n        instance(x: -101, y: -108) max_8a4d0f root.Std_k98ojb.List.Max {}\n        instance(x: -95, y: -120) min_6c7c2f root.Std_k98ojb.List.Min {}\n        data_instance(x: 156, y: 23) data_f2db59  = [max, min]\n        instance(x: -94, y: -127) sub_9d5e34 root.Std_k98ojb.Math.Sub {}\n        list_5d4f8a -> max_8a4d0f.items\n        list_5d4f8a -> min_6c7c2f.items\n        data_f2db59 -> sub_9d5e34.first\n        max_8a4d0f.max -> data_f2db59.max\n        min_6c7c2f.min -> data_f2db59.min\n        sub_9d5e34.result -> difference_b4c2b3\n    }\n\n    \n\n    instance(x: 51, y: -68) diff_max_min_57e41a root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -194, y: -556, name: \"list\") property(List) list_5d2e34\n\n        out(x: 451, y: 33, name: \"output\") property(Number) output_4a3f7c\n\n        instance(x: -1049, y: -375) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 201, y: 62) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: -48, y: 517) list_min_node root.Std_k98ojb.List.Min {}\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first, middle, last]\n        instance(x: -432, y: -620) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 101, y: -67) diff_max_min_node root.main.diff_max_min {}\n\n        list_5d2e34 -> slice_3f3ee6.list\n        slice_3f3ee6.slice -> data_cc1b1b.middle\n        length_4b8927.length -> greaterthan_cb50ae.right\n        greaterthan_cb50ae.result -> sub_852f2e.first\n        list_max_node.items -> sub_852f2e.second\n        list_min_node.min -> output_4a3f7c\n        slice_3f3ee6.end -> length_4b8927.length\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_50d4df root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -157, y: -432, name: \"list\") property(List) list_6f4d95\n\n        out(x: -103, y: -493, name: \"difference\") property(Number) difference_ae3b9c\n        out(x: 509, y: -104, name: \"output\") trigger() output_b5a7df\n\n        instance(x: -1206, y: -361) length_1d0dd2 root.Std_k98ojb.List.Length {}\n        instance(x: -1068, y: 16, name: \"max_node\") Max {}\n        instance(x: -1023, y: -493, name: \"min_node\") Min {}\n        data_instance(x: -1117, y: -387) data_0d2c31  = [max, min]\n        instance(x: -1049, y: -368) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_6f4d95 -> max_node.items\n        list_6f4d95 -> min_node.items\n        length_1d0dd2.length -> sub_f133b2.first\n        0 -> sub_f133b2.second\n        sub_f133b2.result -> data_0d2c31.max\n        max_node.max -> data_0d2c31.max\n        list_6f4d95 -> min_node.items\n        length_1d0dd2.length -> sub_f133b2.first\n        0 -> sub_f133b2.second\n        sub_f133b2.result -> data_0d2c31.min\n        min_node.min -> data_0d2c31.min\n        max_node.max -> difference_ae3b9c\n        min_node.min -> output_b5a7df\n    }\n\n    \n\n    instance(x: 51, y: -67) diff_max_min_e4f6f8 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -32, y: 17, name: \"number\") property(Number) number_5f2e33\n\n        out(x: 1459, y: 22, name: \"output\") property(Bool) output_ebdfc1\n\n        instance(x: -194, y: 26) modulo_d8d0e4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 198, y: 21) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 1459, y: 23) tolower_59f7df root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -17, y: 28) isnumeric_2e8d74 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 200, y: 20) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n\n        number_5f2e33 -> modulo_d8d0e4.value\n        0 -> notequal_7836b4.right\n        tolower_59f7df(number_5f2e33) -> isnumeric_2e8d74\n        isnumeric_2e8d74.result -> greaterthan_cb50ae.left\n        modulo_d8d0e4.divisor -> greaterthan_cb50ae.right\n        greaterthan_cb50ae.result -> output_ebdfc1\n        notequal_7836b4.result -> output_ebdfc1\n    }\n\n    \n\n    instance(x: -34, y: 12) is_even_9d21a8 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -58, y: 2, name: \"input\") property(Number) input_9a3d6e\n\n        out(x: 1245, y: -205, name: \"output\") property(Bool) output_e0f4b1\n\n        instance(x: -26, y: -204, name: \"is_even\") Std.If {\n            in(x: 0, y: 0, name: \"input\") trigger() input\n            out(x: 0, y: 0, name: \"then\") trigger() then\n            out(x: 0, y: 0, name: \"else\") trigger() else\n            out(x: 0, y: 0, name: \"value\") property(Number) value\n\n            in(x: -53, y: -207, name: \"check\") property(Number) check_9f4c2d\n            instance(x: 194, y: -209, name: \"modulo\") Std.Math.Modulo {}\n            input_9a3d6e -> modulo.value\n            2 -> modulo.divisor\n            modulo.result -> check_9f4c2d\n        }\n\n        output_e0f4b1 <- if (input_9a3d6e % 2 == 0) then true else false\n\n    }\n\n    \n\n    instance(x: -29, y: -13) is_even_b5f3db root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -31, y: 58, name: \"input\") property(Number) input_6d2a41\n\n        out(x: 1921, y: -216, name: \"output\") property(Bool) output_e3c7f8\n\n        instance(x: 193, y: -220) modulo_6e9f0 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 184, y: -217) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 189, y: -219) tolower_7d17a8 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 104, y: -221) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 101, y: -223) isnumeric_5c6f33 root.Std_k98ojb.Strings.IsNumeric {}\n\n        input_6d2a41 -> tolower_7d17a8.input\n        modulo_6e9f0.value -> notequal_7836b4.left\n        0 -> notequal_7836b4.right\n        notequal_7836b4.result -> output_e3c7f8\n        contains_32727d.item -> isnumeric_5c6f33.input\n        input_6d2a41 -> isnumeric_5c6f33.input\n        isnumeric_5c6f33.result -> output_e3c7f8\n    }\n\n    \n\n    instance(x: -193, y: 65) is_even_4e5df9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -527, y: 439, name: \"input\") property(Number) input_5d8f1e\n\n        out(x: 1239, y: -215, name: \"output\") property(Bool) output_a3d4d0\n\n        instance(x: -304, y: -205, name: \"check even\") Std.If {\n            in(x: -23, y: 79, name: \"input\") property(Number) predicate_6e7a77\n            out(x: -30, y: 75, name: \"then\") trigger() then\n            out(x: -29, y: 76, name: \"else\") trigger() else\n            out(x: -31, y: 74, name: \"value\") property(Number) value_6e7a77\n        }\n        input_5d8f1e -> check_even.input\n        check_even.then -> output_a3d4d0\n        input_5d8f1e % 2 == 0 -> check_even.predicate\n    }\n\n    \n\n    instance(x: -67, y: -37) is_even_f21f44 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -546, y: 44, name: \"input\") property(Number) input_8a0e5d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_f0c7f4\n\n        instance(x: -303, y: -205, name: \"even number\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            0 -> modulo_c76d2b.divisor\n            true -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        input_8a0e5d -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            0 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            true -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_f0c7f4\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_8a6c2b root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -57, y: 74, name: \"input\") property(Number) input_9f1d64\n\n        out(x: 1348, y: -210, name: \"output\") property(Bool) output_0bfc94\n\n        instance(x: -294, y: -205, name: \"check parity\") modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1234, y: -207) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n        input_9f1d64 -> modulo_c76d2b.value\n        0 -> modulo_c76d2b.divisor\n        notequal_cb8a55.result -> output_0bfc94\n        modulo_c76d2b.result -> notequal_cb8a55.left\n    }\n\n    \n\n    instance(x: -27, y: -37) is_even_7f8c42 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -46, y: 43, name: \"number\") property(Number) num_5a4e45\n\n        out(x: 1848, y: 19, name: \"output\") property(Bool) output_b9c7b2\n\n        instance(x: -64, y: 34) modulo_d8b0d3 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 123, y: 39) equal_6f5e95 root.Std_k98ojb.Logic.Equal {}\n        modulo_d8b0d3.result -> output_b9c7b2\n        num_5a4e45 -> modulo_d8b0d3.value\n        0 -> equal_6f5e95.right\n        num_5a4e45 -> equal_6f5e95.left\n    }\n\n    \n\n    instance(x: -29, y: -18) is_even_e2c0ec root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -58, y: 22, name: \"input\") property(Number) input_8f6d5e\n\n        out(x: 1059, y: -15, name: \"output\") property(Bool) output_f7b4f3\n\n        instance(x: 179, y: 13) modulo_e1c0ec root.Std_k98ojb.Math.Modulo {}\n        instance(x: 191, y: 16) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: -34, y: 11) expression_a6d4a9 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % 2 == 0)\"\n        }\n        instance(x: 109, y: 19) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: -46, y: 15) then_74a9e5 root.Std_k98ojb.Std.If.then {}\n        instance(x: 193, y: 10) else_4f2d3a root.Std_k98ojb.Std.If.else {}\n\n        modulo_e1c0ec.value -> not_75283f.input\n        input_8f6d5e -> expression_a6d4a9.gen_0\n        if_07b8c7.predicate -> expression_a6d4a9.result\n        then_74a9e5 -> output_f7b4f3\n        else_4f2d3a -> output_f7b4f3\n    }\n\n    \n\n    instance(x: -35, y: 14) is_even_d0c4af root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -19, y: 32, name: \"number\") property(Number) number_6e9d2f\n\n        out(x: 1150, y: 23, name: \"output\") property(Bool) output_7c4a5b\n\n        instance(x: -69, y: 45) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 142, y: 40) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 192, y: 48) isnumeric_e4c7a1 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: -18, y: 53) equals_c2d56e root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: -14, y: 50) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 145, y: 41) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        number_6e9d2f -> modulo_c76d2b.value\n        0 -> modulo_c76d2b.divisor\n        not_75283f.result -> output_7c4a5b\n        isnumeric_e4c7a1.result -> equals_c2d56e.predicate\n        greaterthan_cb50ae.result -> output_7c4a5b\n        equals_c2d56e.result -> output_7c4a5b\n    }\n\n    \n\n    instance(x: -73, y: 15) is_even_bf8d14 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -538, y: 429, name: \"input\") property(Number) input_4d0fdd\n\n        out(x: 1621, y: 33, name: \"output\") property(Bool) output_5e9b8c\n\n        instance(x: -312, y: 39, name: \"is_even\") Std.If {\n            in(x: -19, y: 58, name: \"input\") property(Number) predicate\n            out(x: -12, y: 61, name: \"then\") trigger() then\n            out(x: -9, y: 63, name: \"else\") trigger() else\n            out(x: -6, y: 65, name: \"value\") property(Number) value\n        }\n        instance(x: -294, y: 51) modulo_0f7c42 root.Std_k98ojb.Math.Modulo {}\n        input_4d0fdd -> modulo_0f7c42.value\n        2 -> modulo_0f7c42.divisor\n        modulo_0f7c42.result -> is_even.value\n        is_even.then -> output_5e9b8c\n        is_even.else -> output_5e9b8c\n    }\n\n    \n\n    instance(x: -11, y: 21) is_even_4a2d14 root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -253, y: 167, name: \"string\") property(String) input_0\n\n        out(x: 509, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -233, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 114, y: -1, name: \"result\") property(Any) result_2\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.contains -> \"a\"\n        contains_d42dce.result -> result_2\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") find_first_repeated_char {\n        in(x: -338, y: 0, name: \"string\") property(String) input_6d5b5e\n\n        out(x: 1067, y: 0, name: \"output\") property(String) output_e9f8a4\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 340, y: 70) map_c7c9f5 root.Std_k98ojb.Iteration.Map {}\n        instance(x: -39, y: 26, name: \"char_map\") get_at_2a0e50 root.Std_k98ojb.List.GetAt {}\n        instance(x: 532, y: 147) if_7c284f root.Std_k98ojb.Std.If {}\n        instance(x: 758, y: -75) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_6d5b5e -> tolower_2e1444.input\n        map_c7c9f5.handler -> get_at_2a0e50\n        get_at_2a0e50.index -> if_7c284f\n        0 -> if_7c284f.index\n        input_6d5b5e -> map_c7c9f5.items\n        contains_d42dce.result -> equal_aabb6e.left\n        map_c7c9f5.output_list -> equal_aabb6e.right\n        get_at_2a0e50.item -> if_7c284f.item\n        if_7c284f.predicate -> equal_aabb6e.predicate\n        if_7c284f.else -> map_c7c9f5.next\n        if_7c284f.then -> get_at_2a0e50.execute\n    }\n\n    \n\n    instance(x: 81, y: 52) find_first_repeated_char_f4d2b1 root.main.find_first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -342, y: 0, name: \"string\") property(String) input_6f5d9e\n\n        out(x: 1067, y: -3, name: \"output\") property(Any) output_e2c74b\n\n        instance(x: 52, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 233, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_6f5d9e -> tolower_2e1444.input\n        contains_d42dce.result -> output_e2c74b\n        1 -> contains_d42dce.index\n    }\n\n    \n\n    instance(x: -241, y: 173) first_repeated_char_f3dca0 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -299, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_1\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_1 -> tolower_2e1444.input\n        contains_d42dce.result -> result_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") find_first_repeated {\n        in(x: -274, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 1145, y: -2, name: \"output\") property(Any) output_d3f1d7\n\n        instance(x: 394, y: 58) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> output_d3f1d7\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.find_first_repeated {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -317, y: 0, name: \"string\") property(String) input_5\n\n        out(x: 1029, y: -2, name: \"output\") property(Any) output_4e8a7c\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 340, y: -108, name: \"count\") property(Number) count_b1f6a9\n        instance(x: 532, y: 145) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_5 -> tolower_2e1444.input\n        count_b1f6a9 -> if_7c284f.count\n        contains_d42dce.result -> equal_aabb6e.left\n        1 -> equal_aabb6e.right\n        equal_aabb6e.result -> if_7c284f.predicate\n        if_7c284f.else -> count_b1f6a9.reset\n        count_b1f6a9.continue -> contains_d42dce.execute\n        input_5 -> contains_d42dce.input\n        contains_d42dce.result -> output_4e8a7c\n    }\n\n    \n\n    instance(x: 0, y: 53) first_repeated_char_f3d74b root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") find_first_repeated_char {\n        in(x: -346, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 123, y: -2, name: \"result\") property(Any) result_3d4c5f\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 532, y: -104) map_e8f5c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 112, y: 16) if_7c284f root.Std_k98ojb.Std.If {}\n        instance(x: 718, y: 36) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_1 -> tolower_2e1444.input\n        map_e8f5c9.handler -> if_7c284f.execute\n        0 -> if_7c284f.index\n        contains_d42dce.result -> equal_aabb6e.left\n        map_e8f5c9.output_list -> equal_aabb6e.right\n        input_1 -> map_e8f5c9.items\n        if_7c284f.predicate -> equal_aabb6e.predicate\n        0 -> equal_aabb6e.context\n        equal_aabb6e.result -> result_3d4c5f\n    }\n\n    \n\n    instance(x: -77, y: 177) find_first_repeated_char_1a8bf9 root.main.find_first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -334, y: 145, name: \"string\") property(String) input_0\n\n        out(x: 123, y: 33, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 104, y: 76) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -191, y: 44, name: \"map_0\") map_7d3f35 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 56, y: 73, name: \"filter_1a2e9c\") filter_1a2e9c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -191, y: 44, name: \"counter_6d0b8f\") counter_6d0b8f {}\n        tolower_2e1444.output -> map_7d3f35.expression\n        input_0 -> tolower_2e1444.input\n        map_7d3f35.output_list -> filter_1a2e9c.items\n        filter_1a2e9c.handler -> counter_6d0b8f.handler\n        counter_6d0b8f.count -> filter_1a2e9c.context\n        input_0 -> filter_1a2e9c.input\n        filter_1a2e9c.output_list -> output_ebef81\n    }\n\n    \n\n    instance(x: -91, y: 155) first_repeated_char_4d65f5 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -251, y: 0, name: \"string\") property(String) input_6d5a1e\n\n        out(x: 1164, y: -2, name: \"output\") property(Any) output_95f3c8\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 340, y: -105) count_c5a7c6 root.Std_k98ojb.Std.Count {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_6d5a1e -> tolower_2e1444.input\n        contains_d42dce.contains -> \"z\"\n        contains_d42dce.result -> count_c5a7c6.reset\n        count_c5a7c6.count -> 0\n        input_6d5a1e -> contains_d42dce.input\n        contains_d42dce.result -> first_repeated_char.output\n    }\n\n    \n\n    instance(x: -81, y: 159) first_repeated_char_2f3d11 root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -100, y: 3, name: \"list\") property(List) list_4d6a45\n\n        out(x: 456, y: 68, name: \"min\") property(Number) min_3c1e28\n        out(x: 462, y: 55, name: \"second_min\") property(Number) second_min_7f0b2f\n\n        instance(x: -74, y: 22) first_smallest root.Std_k98ojb.List.Min {}\n        instance(x: -76, y: 58) second_smallest_node root.Std_k98ojb.List.Min {}\n\n        list_4d6a45 -> first_smallest.items\n        first_smallest.min -> min_3c1e28\n\n        instance(x: 0, y: 56) ifexpression_9f67df root.Std_k98ojb.Std.IfExpression {\n            expression: \"first_smallest.result != null\"\n        }\n        getter(x: -70, y: 77, name: \"getter_4d3a1c\") getter_4d3a1c = second_smallest\n        setter(x: 52, y: 45, name: \"setter_e9f8b5\") setter_e9f8b5 = second_smallest\n        ifexpression_9f67df.then -> setter_e9f8b5.execute\n        first_smallest.result -> setter_e99d25.new_value\n        list_4d6a45 -> setter_e9e31c.new_value\n        ifexpression_9f67df.else -> setter_e9f8b5.execute\n        second_smallest_node.items -> min_3c1e28\n        first_smallest.result -> second_smallest_node.min\n        first_smallest.result -> second_min_7f0b2f\n    }\n\n    \n\n    instance(x: -42, y: 101) second_smallest_6d4a23 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"min1\") property(Number) min1_5d4c3a\n        out(x: 344, y: 53, name: \"min2\") property(Number) min2_8f9b7e\n\n        instance(x: -284, y: -0, name: \"first_min\") root.Std_k98ojb.List.Min {}\n        first_min.min -> min1_5d4c3a\n        list_ai -> first_min.items\n        first_min.reset -> root.second_smallest.first_min_reset\n        second_smallest.first_min_reset <- root.second_smallest.min2\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n            instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            find_6d05b0.predicate -> notequal_807ffd.predicate\n            elem_9f6850 -> notequal_807ffd.it\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_ai -> find_6d05b0.items\n        find_6d05b0.item -> min2_8f9b7e\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_5c2a15 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -341, y: 0, name: \"list\") property(List) list_5f4b25\n\n        out(x: 512, y: 75, name: \"second_min\") property(Number) second_min_6e9d41\n\n        instance(x: 0, y: 0) ifexpression_d2a1c8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"min < a\"\n        }\n        getter(x: -342, y: 74, name: \"getter_3f86f9\") getter_3f86f9 = second_min\n        setter(x: 515, y: 56, name: \"setter_ea60d5\") setter_ea60d5 = second_min\n        setter(x: 517, y: -1, name: \"setter_2c6d43\") setter_2c6d43 = second_min\n        list_5f4b25 -> ifexpression_d2a1c8.gen_0\n        getter_3f86f9.value -> second_min_6e9d41\n        ifexpression_d2a1c8.then -> setter_ea60d5.execute\n        list_5f4b25[1] -> setter_2c6d43.new_value\n        ifexpression_d2a1c8.else -> setter_ea60d5.execute\n    }\n\n    \n\n    instance(x: 0, y: -1) min_node root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -436, y: 1, name: \"list\") property(List) list_b9f6d4\n\n        out(x: 538, y: -8, name: \"second_min\") property(Number) second_min_5e7b15\n        instance(x: 0, y: 2) find_second_6a1c14 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n            instance(x: 89, y: 29) min_1bdc8d root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            min_1bdc8d.result -> notequal_807ffd.left\n            2 -> min_1bdc8d.items\n            elem_9f6850 -> min_1bdc8d.value\n            if bool_af09a7 == true then {\n                list_b9f6d4.GetAt(1) -> find_second_6a1c14.item\n            } else {\n                list_b9f6d4.FirstItem() -> find_second_6a1c14.item\n            }\n        } -> find_second_6a1c14.predicate\n        list_b9f6d4 -> find_second_6a1c14.items\n        find_second_6a1c14.item -> second_min_5e7b15\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -246, y: 0, name: \"list\") property(List) list_6f88b5\n\n        out(x: 509, y: -1, name: \"number\") property(Number) number_a7a2d4\n        instance(x: 0, y: 0) first_smallest_node root.Std_k98ojb.List.Min {}\n        instance(x: 321, y: 40) second_smallest_node root.Std_k98ojb.List.Min {}\n        list_6f88b5 -> first_smallest_node.items\n        first_smallest_node.min -> number_a7a2d4\n        list_6f88b5 -> second_smallest_node.items\n        second_smallest_node.min -> number_a7a2d4\n    }\n\n    \n\n    instance(x: 0, y: 522) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -454, y: 2, name: \"list\") property(List) list_4d8f68\n        out(x: 436, y: 83, name: \"min1\") property(Number) min1_b0a5c6\n        out(x: 439, y: 101, name: \"min2\") property(Number) min2_7df6b9\n\n        instance(x: -109, y: 32, name: \"list_min_node\") list_min_node root.Std_k98ojb.List.Min {}\n        list_4d8f68 -> list_min_node.items\n        list_min_node.min -> min1_b0a5c6\n        instance(x: 326, y: 88) Std.IfExpression {\n            expression: \"min1_b0a5c6 < min2_7df6b9\"\n        }\n        min1_b0a5c6 -> Std.IfExpression.left\n        min2_7df6b9 -> Std.IfExpression.right\n        Std.IfExpression.then -> min2_7df6b9\n    }\n\n    \n\n    instance(x: -21, y: 139) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -102, y: 21, name: \"list\") property(List) list_9a8e56\n\n        out(x: 515, y: 31, name: \"second_min\") property(Number) second_min_a2c7b1\n\n        instance(x: 0, y: 0) sort_node root.Std_k98ojb.List.Sort {}\n        list_9a8e56 -> sort_node.items\n        sort_node.result -> list_9a8e56\n        in(x: -108, y: 40, name: \"second_min\") property(Number) second_min_a2c7b1\n\n        instance(x: 0, y: 0) min_node root.Std_k98ojb.List.Min {}\n        sort_node.items -> min_node.items\n        min_node.result -> list_9a8e56\n        in(x: -102, y: 35, name: \"min\") property(Number) min_a2c7b1\n\n        instance(x: 0, y: 0) ifexpression_8d3fdd root.Std_k98ojb.Std.IfExpression {}\n        expression: \"min < second_min\"\n        min_node.value -> ifexpression_8d3fdd.gen_0\n        list_9a8e56[1] -> ifexpression_8d3fdd.gen_1\n        ifexpression_8d3fdd.then -> second_min_a2c7b1\n        min_node.value -> second_min_a2c7b1\n    }\n\n    \n\n    instance(x: 0, y: 0) second_smallest_9e5a47 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -444, y: 0, name: \"list\") property(List) list_4d6f2a\n\n        out(x: 513, y: -1, name: \"second_min\") property(Number) second_min_e5e3eb\n\n        instance(x: 104, y: 15) sort_list_f9c7df root.Std_k98ojb.List.Sort {}\n        list_4d6f2a -> sort_list_f9c7df.items\n        sort_list_f9c7df.result -> second_min_e5e3eb\n\n        instance(x: -55, y: 74) min_node root.Std_k98ojb.List.Min {}\n        sort_list_f9c7df.items[0] -> min_node.items\n        list_4d6f2a -> min_node.items\n        min_node.min -> second_min_e5e3eb\n\n    }\n    \n\n    instance(x: 341, y: -1) second_smallest_8b3c47 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -530, y: 3, name: \"list\") property(List) list_abed4a\n\n        out(x: 531, y: 74, name: \"min\") property(Number) min_ai\n        out(x: 537, y: 41, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: -174, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: 35) min_c3e343 root.Std_k98ojb.List.Min {}\n            0 -> notequal_807ffd.right\n            notequal_807ffd.left -> min_c3e343.items[1]\n            elem_9f6850 -> min_c3e343.items[0]\n            min_c3e343.min -> min_ai\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> second_min_ai\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -106, y: 24, name: \"list\") property(List) list_6d2e4a\n\n        out(x: 471, y: -1, name: \"second_min\") property(Number) second_min_8b7c9f\n\n        instance(x: 0, y: 0) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 410, y: 25) second_node root.Std_k98ojb.Iteration.Find {}\n        instance(x: -120, y: 36) ifexpression_6eef4c root.Std_k98ojb.Std.IfExpression {}\n\n        list_6d2e4a -> min_node.items\n        min_node.min -> second_min_8b7c9f\n\n        instance(x: 0, y: 43) get_item_3bdc76 root.Std_k98ojb.List.GetAt {}\n        get_item_3bdc76.index -> second_node.item\n        list_6d2e4a -> second_node.items\n        min_node.min -> ifexpression_6eef4c.value\n\n        instance(x: 0, y: 49) ifexpression_6eef4c else_node root.Std_k98ojb.Std.IfExpression {}\n        get_item_3bdc76.index -> second_node.item\n        list_6d2e4a -> second_node.items\n        min_node.min -> ifexpression_6eef4c.value\n\n        instance(x: 0, y: 55) count_node root.Std_k98ojb.Std.Count {}\n        list_6d2e4a -> count_node.items\n        count_node.count -> second_min_8b7c9f\n\n        min_node.min -> ifexpression_6eef4c.value\n        ifexpression_6eef4c.then -> second_node.predicate\n        list_6d2e4a -> get_item_3bdc76.items\n        get_item_3bdc76.index -> second_node.item\n        count_node.count -> second_min_8b7c9f\n\n    }\n\n    \n\n    instance(x: -44, y: 140) second_smallest_8db0d6 root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_ONE_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12639,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -468, y: 12, name: \"list1\") property(List) list_2e3f6d\n        in(x: -478, y: 49, name: \"list2\") property(List) list_a5b8a4\n\n        out(x: 1329, y: -209, name: \"output\") property(Bool) output_b0c3ac\n\n        instance(x: 245, y: 75) intersection_6e7f66 root.Std_k98ojb.Sets.Intersection {}\n        list_a5b8a4 -> intersection_6e7f66.left\n        list_2e3f6d -> intersection_6e7f66.right\n        intersection_6e7f66.intersect -> output_b0c3ac\n    }\n\n    \n\n    instance(x: -85, y: 16) has_common_element_4d5df9 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -449, y: 49, name: \"list1\") property(List) list_9f2d6a\n        in(x: -465, y: 5, name: \"list2\") property(List) list_c8c7b4\n\n        out(x: 1120, y: 51, name: \"output\") property(Bool) output_a1e3da\n\n        instance(x: 108, y: 59) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -303, y: -21) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 275, y: -25) contains_32727d root.Std_k98ojb.List.Contains {}\n        data_instance(x: -9, y: -43) data_3c85a5  = [list1_, list2_]\n        instance(x: 450, y: -44) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 114, y: -36) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 341, y: -35) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_c8c7b4 -> filter_c91965.items\n        filter_c91965.handler -> map_c73e3b.handler\n        map_c73e3b.items -> contains_32727d.list\n        0 -> contains_32727d.index\n        list_9f2d6a -> list1_\n        list_c8c7b4 -> list2_\n        map_c73e3b.output_list -> contains_32727d.item\n        contains_32727d.is_contained -> not_75283f.input\n        not_75283f.result -> output_a1e3da\n    }\n\n    \n\n    instance(x: -91, y: 13) has_common_element_f79d4 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -141, y: 25, name: \"list1\") property(List) list_2f5d4a\n        in(x: -135, y: 55, name: \"list2\") property(List) list_e6d0c7\n\n        out(x: 1249, y: -213, name: \"output\") property(Bool) output_b7b8e1\n\n        instance(x: 1095, y: 23) intersection_4f3a25 root.Std_k98ojb.Sets.Intersection {}\n        list_e6d0c7 -> intersection_4f3a25.left\n        list_2f5d4a -> intersection_4f3a25.right\n        intersection_4f3a25.intersect -> output_b7b8e1\n    }\n\n    \n\n    instance(x: -81, y: 49) has_common_element_d5c0a6 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -430, y: 58, name: \"list1\") property(List) list_94a3d0\n        in(x: -469, y: -217, name: \"list2\") property(List) list_5f8c7b\n\n        out(x: 1119, y: 4, name: \"output\") property(Bool) output_e85d43\n\n        instance(x: 1051, y: 64) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -194, y: -26) not_75283f root.Std_k98ojb.Logic.Not {}\n        list_94a3d0 -> contains_32727d.list\n        list_5f8c7b -> contains_32727d.contains\n        contains_32727d.is_contained -> not_75283f.input\n        not_75283f.result -> output_e85d43\n    }\n\n    \n\n    instance(x: -278, y: 57) has_common_element_6a5e8 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -173, y: 78, name: \"list1\") property(List) list_0d4a9b\n        in(x: -181, y: -13, name: \"list2\") property(List) list_a5f6e8\n\n        out(x: 1227, y: 49, name: \"output\") property(Bool) output_f3c1a3\n\n        instance(x: 245, y: 62) intersection_8d4bf0 root.Std_k98ojb.Sets.Intersection {}\n        list_a5f6e8 -> intersection_8d4bf0.left\n        list_0d4a9b -> intersection_8d4bf0.right\n        intersection_8d4bf0.intersect -> output_f3c1a3\n    }\n\n    \n\n    instance(x: 92, y: -70) has_common_element_c5fdd6 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -471, y: 44, name: \"list1\") property(List) list_8a5d3f\n        in(x: -481, y: -228, name: \"list2\") property(List) list_b7bfc9\n\n        out(x: 1144, y: -216, name: \"output\") property(Bool) output_f6e1c0\n\n        instance(x: 268, y: 24) filter_85a3f5 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 102, y: -215) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 341, y: -213) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -16, y: -21, name: \"current\") property(Number) _index_170471\n            in(x: -17, y: 67, name: \"_index\") property(Number) _index_769593\n\n            out(x: 1009, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 240, y: 51) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 46) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            list_b7bfc9 -> filter_85a3f5.items\n            list_8a5d3f -> filter_85a3f5.items\n            list_8a5d3f -> contains_32727d.list\n            0 -> contains_32727d.index\n            contains_32727d.itemAtIndex -> notequal_7836b4.left\n            list_b7bfc9 -> length_8166b0.list\n            1 -> length_8166b0.length\n            notequal_7836b4.result -> output_f6e1c0\n            modulo_c76d2b.result -> notequal_7836b4.right\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_85a3f5.handler\n    }\n\n    \n\n    instance(x: 104, y: -197) has_common_element_e6d5c8 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -493, y: 57, name: \"list1\") property(List) list_5e4a3d\n        in(x: -491, y: -234, name: \"list2\") property(List) list_b6f0c7\n\n        out(x: 1219, y: 51, name: \"output\") property(Bool) output_a7b8d1\n\n        instance(x: 1045, y: 97) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -1092, y: -18) filter_9f4a6c root.Std_k98ojb.Iteration.Filter {}\n        data_instance(x: -141, y: 52) data_c6e7ad  = [contains_32727d, filter_9f4a6c]\n        instance(x: 235, y: 58) map_0a87aa root.Std_k98ojb.Iteration.Map {}\n        instance(x: 436, y: -18) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -44, y: -23, name: \"current\") property(Number) _index_8e3c9a\n            in(x: -29, y: 88, name: \"_index\") property(Number) _index_2f6d4b\n\n            out(x: 1231, y: 56, name: \"output\") property(Bool) output_e5c7af\n\n            instance(x: 251, y: 64) ifexpression_0a74ab root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0 || previous == current\"\n            }\n            getter(x: -20, y: 82, name: \"getter_b1e8c5\") getter_b1e8c5 = previous\n            setter(x: 509, y: -283, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n            instance(x: 275, y: -15) for_d26972 root.Std_k98ojb.Std.For {}\n            setter(x: -0, y: -120, name: \"setter_9d4f1c\") setter_38e107 = previous\n            instance(x: -293, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n            ifexpression_0a74ab.else -> filter_9f4a6c.execute\n            ifexpression_0a74ab.value -> output_e5c7af\n            ifexpression_0a74ab.then -> setter_9d4f1c.execute\n            list_b6f0c7 -> for_d26972.items\n            for_d26972.item -> ifexpression_0a74ab.gen_2\n            for_d26972.index -> ifexpression_0a74ab.gen_0\n            getter_b1e8c5.value -> ifexpression_0a74ab.gen_1\n            for_d26972.onItem -> ifexpression_0a74ab.execute\n            for_d26972.done -> filter_9f4a6c.reset\n            for_d26972.item -> setter_9d4f1c.new_value\n            list_b6f0c7 -> getat_ce2a48.list\n            0 -> getat_ce2a48.index\n            getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n            execute_90aaec -> setter_38e107.execute\n            setter_38e107.continue -> for_d26972.reset\n            setter_9d4f1c.continue -> for_d26972.next\n        } -> contains_32727d.handler\n        list_b6f0c7 -> filter_9f4a6c.items\n        filter_9f4a6c.output_list -> map_0a87aa.list\n        map_0a87aa.input_list -> not_75283f.input\n        true -> not_75283f.right\n        false -> output_e5c7af\n    }\n\n    \n\n    instance(x: 12, y: -178) has_common_element_9bdf95 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -526, y: 25, name: \"list1\") property(List) list_2e5f4d\n        in(x: -546, y: 59, name: \"list2\") property(List) list_b6b7c3\n\n        out(x: 1278, y: -13, name: \"output\") property(Bool) output_0b66a9\n\n        instance(x: 317, y: 74) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_2e5f4d -> contains_32727d.list\n        list_b6b7c3 -> contains_32727d.contains\n        false -> output_0b66a9\n        contains_32727d.is_contained -> true -> output_0b66a9.input\n    }\n\n    \n\n    instance(x: -294, y: 64) has_common_element_4fca47 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -462, y: 67, name: \"list1\") property(List) list_77d8a5\n        in(x: -475, y: -19, name: \"list2\") property(List) list_3b4c9f\n\n        out(x: 1096, y: -21, name: \"output\") property(Bool) output_b7e2eb\n\n        instance(x: 744, y: 53) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 275, y: -18) contains_32727d root.Std_k98ojb.List.Contains {}\n        data_instance(x: -312, y: -35) data_a0e3f1  = [has_common]\n        instance(x: 135, y: -33) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1097, y: -21) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_77d8a5 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_b7e2eb\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_3c8b9 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -515, y: 30, name: \"list1\") property(List) list_0f9a2d\n        in(x: -484, y: 97, name: \"list2\") property(List) list_e8e7f5\n\n        out(x: 1143, y: 13, name: \"output\") property(Bool) output_b1b4c6\n\n        instance(x: 742, y: 44) filter_9d9a0b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -193, y: -20) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1218, y: -45) not_75283f root.Std_k98ojb.Logic.Not {}\n        list_e8e7f5 -> filter_9d9a0b.items\n        list_0f9a2d -> filter_9d9a0b.handler\n        filter_9d9a0b.output_list -> contains_32727d.list\n        1 -> contains_32727d.item\n        not_75283f.result -> output_b1b4c6\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -282, y: -141) has_common_element_7a6e35 root.main.has_common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -534, y: 29, name: \"list\") property(List) list_8d4a6e\n\n        out(x: 1153, y: -24, name: \"output\") property(Bool) output_b5d7b1\n\n        instance(x: 755, y: 97) for_loop_6f0c44 root.Std_k98ojb.Std.For {}\n        instance(x: -26, y: 101) getat_9d2a41 root.Std_k98ojb.List.GetAt {}\n        instance(x: 281, y: 106) less_than_4e8fdd root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 555, y: 105) sub_7c3c23 root.Std_k98ojb.Math.Sub {}\n        list_8d4a6e -> for_loop_6f0c44.items\n        for_loop_6f0c44.item -> getat_9d2a41.list\n        less_than_4e8fdd.left -> sub_7c3c23.first\n        1 -> sub_7c3c23.divisor\n        sub_7c3c23.result -> getat_9d2a41.index\n        for_loop_6f0c44.onItem -> less_than_4e8fdd.execute\n        for_loop_6f0c44.done -> output_b5d7b1\n    }\n\n    \n\n    instance(x: -34, y: 144) Consecutive_3ff9a root.main.Consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -538, y: 24, name: \"list\") property(List) list_5d6a0e\n\n        out(x: 1051, y: 13, name: \"output\") property(Bool) output_b2bdfc\n\n        instance(x: -28, y: 31) for_d25f55 root.Std_k98ojb.Std.For {}\n        instance(x: -12, y: 47) getat_6a1e0d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1184, y: 41) lessThanOrEqual_e8da26 root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_5d6a0e -> for_d25f55.items\n        for_d25f55.index -> getat_6a1e0d.index\n        getat_6a1e0d.itemAtIndex -> lessThanOrEqual_e8da26.left\n        getat_6a1e0d.itemAtIndex + 1 -> lessThanOrEqual_e8da26.right\n        for_d25f55.onItem -> lessThanOrEqual_e8da26.execute\n    }\n\n    \n\n    instance(x: -45, y: 93) Consecutive_3b9f60 root.main.Consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -577, y: 4, name: \"list\") property(List) list_8d5c9f\n\n        out(x: 1053, y: -29, name: \"output\") property(Bool) output_3e7b47\n\n        instance(x: -93, y: -39) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -305, y: -30) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 1038, y: -31) lessThanOrEqual_6d1f50 root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_8d5c9f -> for_d26972.items\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> lessThanOrEqual_6d1f50.left\n        getat_ce2a48.itemAtIndex + 1 -> lessThanOrEqual_6d1f50.right\n        lessThanOrEqual_6d1f50.result -> output_3e7b47\n    }\n\n    \n\n    instance(x: -26, y: 102) is_consecutive_f56a4c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -570, y: 4, name: \"list\") property(List) list_5a88d9\n\n        out(x: 1213, y: 7, name: \"output\") property(Bool) output_8e1f22\n\n        instance(x: -289, y: 49) for_loop_5c7b4a root.Std_k98ojb.Std.For {}\n        instance(x: -284, y: 56) getat_2f6d0f root.Std_k98ojb.List.GetAt {}\n        instance(x: -278, y: 63) sub_8e9e1b root.Std_k98ojb.Math.Sub {}\n        instance(x: 1093, y: 71) equal_5ebc4a root.Std_k98ojb.Logic.Equal {}\n        list_5a88d9 -> for_loop_5c7b4a.items\n        for_loop_5c7b4a.item -> getat_2f6d0f.list\n        getat_2f6d0f.index -> sub_8e9e1b.first\n        getat_2f6d0f.value -> sub_8e9e1b.second\n        sub_8e9e1b.result -> equal_5ebc4a.left\n        1 -> equal_5ebc4a.right\n        equal_5ebc4a.result -> output_8e1f22\n    }\n\n    \n\n    instance(x: -67, y: -37) is_consecutive_7b9d57 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -509, y: 2, name: \"list\") property(List) list_3f43d4\n\n        out(x: 1235, y: -95, name: \"output\") property(Bool) output_b7c6a8\n\n        instance(x: 743, y: -96) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 106, y: -101) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 355, y: -95) lessThanOrEqual_f0e2c1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 499, y: -97) isNumber_9d6f8a root.Std_k98ojb.Std.IfExpression {}\n        list_3f43d4 -> for_d26972.items\n        for_d26972.index -> getat_ce2a48.index\n        lessThanOrEqual_f0e2c1.left -> getat_ce2a48.itemAtIndex\n        getat_ce2a48.itemAtIndex - 1 -> lessThanOrEqual_f0e2c1.right\n        isNumber_9d6f8a.expression -> \"getat_ce2a48.itemAtIndex == getat_ce2a48.itemAtIndex + 1\"\n        for_d26972.onItem -> isNumber_9d6f8a.execute\n        lessThanOrEqual_f0e2c1.result -> output_b7c6a8\n    }\n\n    \n\n    instance(x: -30, y: 123) is_consecutive_5ebcf4 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -535, y: 20, name: \"list\") property(List) list_9f4d98\n\n        out(x: 1163, y: 51, name: \"output\") property(Bool) output_e2c34e\n\n        instance(x: -302, y: 63) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -26, y: 65) getat_7a1f3d root.Std_k98ojb.List.GetAt {}\n        instance(x: -25, y: 69) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 157, y: 70) lessThanOrEqual_5c8cd4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 160, y: 74) not_75283f root.Std_k98ojb.Logic.Not {}\n        list_9f4d98 -> for_d26972.items\n        for_d26972.index -> getat_7a1f3d.index\n        getat_7a1f3d.itemAtIndex -> sub_852f2e.first\n        sub_852f2e.result -> lessThanOrEqual_5c8cd4.left\n        getat_7a1f3d.itemAtIndex + 1 -> lessThanOrEqual_5c8cd4.right\n        lessThanOrEqual_5c8cd4.result -> not_75283f.input\n        for_d26972.onItem -> is_consecutive.execute\n        for_d26972.done -> output_e2c34e.continue\n    }\n\n    \n\n    instance(x: -51, y: 119) is_consecutive_b7a6d9 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -509, y: 31, name: \"list\") property(List) list_1d3d8f\n\n        out(x: 1065, y: 35, name: \"output\") property(Bool) output_0e4c57\n\n        instance(x: 755, y: 47) for_loop_9a7d84 root.Std_k98ojb.Std.For {}\n        instance(x: -26, y: 62) getat_c2bb6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1001, y: 58) less_than_e0c3df root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1154, y: 60) sub_8e6a23 root.Std_k98ojb.Math.Sub {}\n        list_1d3d8f -> for_loop_9a7d84.items\n        for_loop_9a7d84.index -> getat_c2bb6f.index\n        getat_c2bb6f.itemAtIndex -> sub_8e6a23.first\n        sub_8e6a23.result -> less_than_e0c3df.left\n        1 -> less_than_e0c3df.right\n        less_than_e0c3df.result -> output_0e4c57\n    }\n\n    \n\n    instance(x: -19, y: 107) is_consecutive_f2f8d9 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -471, y: 22, name: \"list\") property(List) list_4d1f8a\n\n        out(x: 1007, y: -93, name: \"output\") property(Bool) output_57c6e5\n\n        instance(x: -394, y: 81) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -384, y: 84) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: -375, y: 91) lessThanOrEqual_5e42f9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -366, y: 95) ifexpression_e4c1d0 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == list.length - 1 || getat_ce2a48.value + 1 != getat_ce2a48.value\"\n        }\n        instance(x: -357, y: 103) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: -348, y: 107) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_4d1f8a -> for_d26972.items\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> lessThanOrEqual_5e42f9.left\n        lessThanOrEqual_5e42f9.right -> getat_ce2a48.value + 1\n        ifexpression_e4c1d0.execute -> not_75283f.input\n        not_75283f.result -> equal_f89569.input\n        equal_f89569.result -> output_57c6e5\n    }\n\n    \n\n    instance(x: -41, y: -17) is_consecutive_a8a95b root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -521, y: 2, name: \"list\") property(List) list_8a3f1d\n\n        out(x: 1134, y: -13, name: \"output\") property(Bool) output_9b0c7e\n\n        instance(x: -294, y: 39) for_loop_8a2da root.Std_k98ojb.Std.For {}\n        instance(x: -292, y: 49) subtract_9f6d3b root.Std_k98ojb.Math.Sub {}\n        instance(x: -290, y: 50) ifexpression_7eef0 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it == 1 || it + 1 == list_[it]\"\n        }\n        instance(x: -289, y: 54) not_equal_83c8d2 root.Std_k98ojb.Logic.NotEqual {}\n        list_8a3f1d -> for_loop_8a2da.items\n        for_loop_8a2da.index -> ifexpression_7eef0.gen_0\n        subtract_9f6d3b.first -> ifexpression_7eef0.gen_1\n        subtract_9f6d3b.second -> ifexpression_7eef0.gen_2\n        ifexpression_7eef0.value -> not_equal_83c8d2.left\n        1 -> not_equal_83c8d2.right\n        not_equal_83c8d2.result -> output_9b0c7e\n    }\n\n    \n\n    instance(x: -67, y: 95) Consecutive_b9c6a3 root.main.Consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -555, y: 11, name: \"list\") property(List) list_1a2f3b\n\n        out(x: 1017, y: -109, name: \"output\") property(Bool) output_b4d6c9\n\n        instance(x: -294, y: 69) for_d2a8e5 root.Std_k98ojb.Std.For {}\n        instance(x: -26, y: 85) getat_82f3e0 root.Std_k98ojb.List.GetAt {}\n        instance(x: 124, y: 84) greaterthan_f4c1d7 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 341, y: -109, name: \"previous\") property(Number) previous_5e8a3f\n        list_1a2f3b -> for_d2a8e5.items\n        for_d2a8e5.item -> getat_82f3e0.list\n        getat_82f3e0.index -> greaterthan_f4c1d7.left\n        previous_5e8a3f -> greaterthan_f4c1d7.right\n        greaterthan_f4c1d7.result -> output_b4d6c9\n    }\n\n    \n\n    instance(x: -30, y: 129) is_consecutive_0bca23 root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -476, y: 436, name: \"main_list\") property(List) list_2e9f8d\n        in(x: -486, y: 26, name: \"sublist_list\") property(List) list_6c89a5\n\n        out(x: 1201, y: -110, name: \"output\") property(Bool) output_bf3b47\n\n        instance(x: -292, y: -114) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -321, y: -103) filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        list_6c89a5 -> filter_f3b46d.list\n        main_list -> contains_32727d.item\n        is_sublist_7fdd11 -> output_bf3b47\n    }\n\n    \n\n    instance(x: -67, y: -43) is_sublist_c1e60d root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -555, y: 19, name: \"main_list\") property(List) list_1f8d6b\n        in(x: -568, y: 45, name: \"sublist\") property(List) list_5a8e4c\n\n        out(x: 1170, y: -99, name: \"output\") property(Bool) output_b9caea\n\n        instance(x: -326, y: -104) zip_d3d1eb root.Std_k98ojb.Iteration.Zip {}\n        list_5a8e4c -> zip_d3d1eb.left\n        list_1f8d6b -> zip_d3d1eb.right\n        func() {\n            in(x: -242, y: 30, name: \"item\") property(Number) _index_9bda0d\n\n            out(x: 1044, y: -48, name: \"output\") property(Bool) output_5a2e3c\n\n            instance(x: 129, y: -53) eqv_f6d8f7 root.Std_k98ojb.Logic.Equal {}\n            list_1f8d6b -> eqv_f6d8f7.left\n            list_5a8e4c -> eqv_f6d8f7.right\n            eqv_f6d8f7.result -> output_5a2e3c\n        } -> zip_d3d1eb.handler\n        zip_d3d1eb.zipped -> output_b9caea\n    }\n\n    \n\n    instance(x: -68, y: 11) is_sublist_e0e24b root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -527, y: 15, name: \"main_list\") property(List) list_1f2d6a\n        in(x: -535, y: -16, name: \"sub_list\") property(List) list_e0c6e4\n\n        out(x: 1125, y: -209, name: \"output\") property(Bool) output_a7b8f3\n\n        instance(x: -312, y: -205, name: \"is_sublist_9d1d2\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it == sub_list\"\n        }\n        list_e0c6e4 -> is_sublist_9d1d2.list\n        is_sublist_9d1d2.result -> output_a7b8f3\n    }\n\n    \n\n    instance(x: -283, y: 74) is_sublist_ba5a5a root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -478, y: 433, name: \"main_list\") property(List) list_1f8e22\n        in(x: -486, y: 18, name: \"sub_list\") property(List) list_0d4b95\n\n        out(x: 1235, y: -97, name: \"output\") property(Bool) output_b7a6c3\n\n        instance(x: -313, y: 44) contains_c9f1e8 root.Std_k98ojb.List.Contains {}\n        list_0d4b95 -> contains_c9f1e8.item\n        main_list -> contains_c9f1e8.list\n        contains_c9f1e8.is_contained -> output_b7a6c3\n    }\n\n    \n\n    instance(x: -287, y: 58) is_sublist_5d4b21 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -464, y: 439, name: \"main_list\") property(List) list_4e6d26\n        in(x: -475, y: -23, name: \"sub_list\") property(List) list_b5c9f2\n\n        out(x: 1101, y: -103, name: \"output\") property(Bool) output_0a85b8\n\n        instance(x: -342, y: -92) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -303, y: 55, name: \"indexer_c3e6f4\") getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: -275, y: 46) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_b5c9f2 -> for_d26972.items\n        for_d26972.index -> indexer_c3e6f4.index\n        main_list -> for_d26972.items\n        for_d26972.item -> contains_32727d.item\n        contains_32727d.result -> output_0a85b8\n    }\n\n    \n\n    instance(x: -88, y: 28) is_sublist_f1c5f6 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -479, y: 446, name: \"main_list\") property(List) list_6f1d23\n        in(x: -486, y: 43, name: \"sub_list\") property(List) list_a0a4e3\n\n        out(x: 1127, y: -217, name: \"output\") property(Bool) output_9c5dcd\n\n        instance(x: -318, y: 23) filter_d2b6f1 root.Std_k98ojb.Query.Filter {\n            where: \"it in main_list\"\n        }\n        list_a0a4e3 -> filter_d2b6f1.list\n        filter_d2b6f1.result -> output_9c5dcd\n    }\n\n    \n\n    instance(x: -63, y: 11) is_sublist_7e6f33 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -482, y: 28, name: \"main_list\") property(List) list_8d0f6a\n        in(x: -494, y: 18, name: \"sub_list\") property(List) list_a5b3c4\n\n        out(x: 1031, y: -110, name: \"output\") property(Bool) output_7e2fdd\n\n        instance(x: -318, y: 36) contains_f6a8aa root.Std_k98ojb.List.Contains {}\n        list_a5b3c4 -> contains_f6a8aa.item\n        list_8d0f6a -> contains_f6a8aa.list\n        contains_f6a8aa.is_contained -> output_7e2fdd\n    }\n\n    \n\n    instance(x: -294, y: 57) is_sublist_e4c23b root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -442, y: 17, name: \"main_list\") property(List) list_3d5f0a\n        in(x: -450, y: -19, name: \"sublist_list\") property(List) list_b8c63e\n\n        out(x: 1091, y: -24, name: \"output\") property(Bool) output_a3bb4b\n\n        instance(x: -269, y: -22) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_b8c63e -> contains_32727d.item\n        list_3d5f0a -> contains_32727d.list\n        false -> output_a3bb4b\n        contains_32727d.is_contained -> output_a3bb4b\n    }\n\n    \n\n    instance(x: -241, y: 21) is_sublist_6c66e2 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 37, name: \"main_list\") property(List) list_5d2e4b\n        in(x: -287, y: -8, name: \"sub_list\") property(List) list_a6f9a1\n\n        out(x: 1047, y: -109, name: \"output\") property(Bool) output_b1c45c\n\n        instance(x: -115, y: -106) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -88, y: -108) not_equal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n        list_a6f9a1 -> contains_32727d.item\n        main_list -> contains_32727d.list\n        not_equal_7836b4.result -> output_b1c45c\n        contains_32727d.is_contained -> not_equal_7836b4.input\n    }\n\n    \n\n    instance(x: -101, y: 23) is_sublist_5df6f2 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -475, y: 23, name: \"main_list\") property(List) list_9e0f8b\n        in(x: -478, y: 13, name: \"sublist\") property(List) list_a6c5d4\n\n        out(x: 1141, y: -97, name: \"output\") property(Bool) output_e3a8df\n\n        instance(x: -219, y: -113) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_a6c5d4 -> contains_32727d.item\n        list_a6c5d4.length -> contains_32727d.count\n        list_9e0f8b -> contains_32727d.list\n        output_e3a8df.result -> contains_32727d.is_contained\n    }\n\n    \n\n    instance(x: -193, y: 43) is_sublist_d6c758 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -272, y: 26, name: \"numbers\") property(List) numbers_8d5a55\n        out(x: 44, y: 20, name: \"missing\") property(Number) missing_5f0e45\n\n        instance(x: 35, y: 43) count_node root.Std_k98ojb.Count {}\n        instance(x: -16, y: 28) for_loop_7d4c9a root.Std_k98ojb.For {}\n        instance(x: 42, y: 50) ifexpression_b3f8ec root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 0, y: 52) add_6ad4e5 root.Std_k98ojb.Math.Add {}\n\n        numbers_8d5a55 -> count_node.items\n        count_node.on_count -> for_loop_7d4c9a.count\n        for_loop_7d4c9a.items -> ifexpression_b3f8ec.items\n        add_6ad4e5.first -> ifexpression_b3f8ec.gen_0\n        add_6ad4e5.second -> ifexpression_b3f8ec.gen_1\n        add_6ad4e5.result -> missing_5f0e45\n\n        for_loop_7d4c9a.reset -> count_node.reset\n        count_node.done -> ifexpression_b3f8ec.then\n        numbers_8d5a55[0] -> ifexpression_b3f8ec.gen_2\n        add_6ad4e5.value -> missing_5f0e45\n    }\n\n    \n\n    instance(x: -123, y: 28) find_missing_7d7f70 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -444, y: 23, name: \"list\") property(List) list_5f6a0d\n\n        out(x: 46, y: 158, name: \"missing\") property(Number) missing_a7b3eb\n\n        instance(x: 0, y: 0) for_1e8bb2 root.Std_k98ojb.Std.For {\n            in(x: -118, y: 21, name: \"i\") property(Number) i_ba6c4f\n            out(x: -112, y: 24, name: \"continue\") trigger() continue_93f3d1\n\n            instance(x: 0, y: 18, count_node root.Std_k98ojb.Count {\n                reset -> continue_93f3d1\n                count -> for_1e8bb2.next\n                iterations -> list_5f6a0d.Length()\n            }\n        }\n\n        data_instance(x: -115, y: 35) data_4c8a34  = [1..list_5f6a0d.FirstItem()]\n        instance(x: 346, y: 39) min_7b6e3a root.Std_k98ojb.Math.Min {}\n        for_1e8bb2.item -> data_4c8a34\n        data_4c8a34 -> min_7b6e3a.values\n        list_5f6a0d.LastItem() + 1 -> min_7b6e3a.result\n        min_7b6e3a.result -> missing_a7b3eb\n    }\n\n    \n\n    instance(x: -13, y: 530) find_missing_4c2f9f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -336, y: 4, name: \"list\") property(List) list_9f43d5\n        out(x: 33, y: 123, name: \"smallest_missing\") property(Number) smallest_missing_e3c2ec\n\n        instance(x: 0, y: 0) for_loop_node root.Std_k98ojb.Std.For {\n            trigger(x: -109, y: 19, name: \"reset\") reset_9f4d8a\n            count_9e1a43 -> Std.Count()\n            iterations_9c8c47 -> Std.Count()\n            item_3ed2e0 -> root.find_smallest_missing.item\n            interation_6a0baf -> Std.Count()\n        }\n        list_9f43d5 -> for_loop_node.items\n        for_loop_node.interation -> smallest_missing_e3c2ec\n    }\n\n    \n\n    instance(x: -58, y: 531) find_smallest_missing_34e8d1 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -417, y: 23, name: \"list\") property(List) list_1e5f8a\n\n        out(x: 0, y: 13, name: \"missing\") property(Number) missing_b7d84c\n        instance(x: 336, y: 12) count_node root.Std_k98ojb.Count {}\n        in(x: -247, y: 19, name: \"reset\") trigger() reset_2f5a6e\n\n        out(x: 1, y: 33, name: \"on_count\") trigger(produces: Std_k98ojb.CountContext) on_count_3d4c7\n        list_1e5f8a -> count_node.items\n        count_node.on_count -> on_count_3d4c7.count\n        reset_2f5a6e -> count_node.reset\n        count_node.interation -> missing_b7d84c\n    }\n\n    \n\n    instance(x: -45, y: 53) find_missing_d0b8a1 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -336, y: 2, name: \"list\") property(List) list_6f43d4\n\n        out(x: 29, y: 57, name: \"smallest_missing\") property(Number) smallest_missing_8c5b1a\n        instance(x: 0, y: -247, name: \"count_node\") root.Std_k98ojb.Count {}\n        instance(x: 305, y: 31, name: \"min_node\") root.Std_k98ojb.List.Min {}\n        list_6f43d4 -> count_node.items\n        min_node.min -> smallest_missing_8c5b1a\n    }\n\n    \n    instance(x: -115, y: 88) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n        expression: \"it == 0\"\n    }\n    getter(x: -146, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min_node\n    setter(x: 120, y: -269, name: \"setter_1cedb2\") setter_1cedb2 = min_node\n    setter(x: 122, y: -46, name: \"setter_37db7f\") setter_37db7f = min_node\n    ifexpression_e38995.then -> setter_1cedb2.execute\n    list_6f43d4[0] -> setter_1cedb2.new_value\n    setter_1cedb2.continue -> count_node.reset\n    count_node.on_count -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_37db7f.execute\n    list_6f43d4[0] -> setter_37db7f.new_value\n    setter_37db7f.continue -> min_node.reset\n    count_node.on_count -> min_node.count\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_37db7f.execute\n    setter_37db7f.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_1cedb2.execute\n    setter_1cedb2.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_37db7f.execute\n    setter_37db7f.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_1cedb2.execute\n    setter_1cedb2.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_37db7f.execute\n    setter_37db7f.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_1cedb2.execute\n    setter_1cedb2.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_37db7f.execute\n    setter_37db7f.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_1cedb2.execute\n    setter_1cedb2.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_37db7f.execute\n    setter_37db7f.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_1cedb2.execute\n    setter_1cedb2.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_37db7f.execute\n    setter_37db7f.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_1cedb2.execute\n    setter_1cedb2.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_37db7f.execute\n    setter_37db7f.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_1cedb2.execute\n    setter_1cedb2.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_37db7f.execute\n    setter_37db7f.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_1cedb2.execute\n    setter_1cedb2.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_37db7f.execute\n    setter_37db7f.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_1cedb2.execute\n    setter_1cedb2.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_37db7f.execute\n    setter_37db7f.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_1cedb2.execute\n    setter_1cedb2.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing_8c5b1a\n    count_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.else -> setter_37db7f.execute\n    setter_37db7f.continue -> min_node.reset\n    min_node.done -> ifexpression_e38995.execute\n    ifexpression_e38995.result -> smallest_missing",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -274, y: 24, name: \"list\") property(List) list_8a2c66\n        out(x: 28, y: 109, name: \"missing\") property(Number) missing_4b5d34\n\n        instance(x: 0, y: 0) for_node root.Std_k98ojb.Std.For {\n            in(x: -112, y: 91, name: \"i\") property(Number) i_e6f3a1\n            in(x: -113, y: 68, name: \"min\") property(Number) min_8d4e34\n            in(x: -114, y: 85, name: \"next\") trigger() next_node\n            list_8a2c66 -> for_node.items\n            i_e6f3a1 -> for_node.index\n            for_node.item -> min_8d4e34\n            if (min_8d4e34 + 1) == (list_8a2c66.listGetAt(i_e6f3a1)) {\n                next_node.reset()\n                return\n            }\n        } -> find_missing.on_count\n        list_8a2c66.length -> for_node.iterations\n    }\n\n    \n\n    instance(x: -31, y: 151) find_missing_4b5d34 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 14, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"min\") property(Number) min_ai\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Count {}\n        instance(x: 426, y: 35) for_loop_2f9c5a root.Std_k98ojb.For {}\n        list_abed4a -> count_node.items\n        count_node.iteration -> for_loop_2f9c5a.iteration\n        for_loop_2f9c5a.item -> find_missing_1e3cd0\n        find_missing_1e3cd0 -> min_ai\n    }\n\n    \n    instance(x: -55, y: 529) find_missing_7bde42 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -303, y: 15, name: \"numbers\") property(List) numbers_8a4d0e\n        out(x: 451, y: 73, name: \"smallest_missing\") property(Number) smallest_missing_b9c5f1\n\n        instance(x: -27, y: 49) for_loop_node root.Std_k98ojb.Std.For {\n            trigger: \"start\"\n            reset: Std_k98ojb.Std.Count.reset\n            count: Std_k98ojb.Std.Count.count\n            items: numbers_8a4d0e\n        }\n        for_loop_node.interation -> smallest_missing_b9c5f1\n    }\n\n    \n\n    instance(x: -28, y: 114) find_smallest_missing_d3ad43 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -293, y: 8, name: \"list\") property(List) list_1a3f2d\n        out(x: 12, y: 47, name: \"min\") property(Number) min_6e4c21\n\n        instance(x: 0, y: 0) for_7a9b74 root.Std_k98ojb.Std.For {\n            items: list_1a3f2d\n            index: 0\n            continue: true\n            done: false\n        }\n        list_1a3f2d -> for_7a9b74.items\n        for_7a9b74.index -> for_7a9b74.index\n        for_7a9b74.done -> for_7a9b74.done\n        for_7a9b74.next -> for_7a9b74.next\n\n        instance(x: -144, y: 26) count_node root.Std_k98ojb.Count {}\n        list_1a3f2d -> count_node.items\n        count_node.iterations -> for_7a9b74.iteration\n        count_node.onCount -> for_7a9b74.continue\n        count_node.done -> for_7a9b74.done\n\n        instance(x: 0, y: -233) ifexpression_3d85e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index + 1 < list[iteration]\"\n        }\n        getter(x: -119, y: 18, name: \"getter_2a8c47\") getter_2a8c47 = min\n        setter(x: 95, y: -228, name: \"setter_4d5f50\") setter_4d5f50 = min\n        setter(x: 97, y: -56, name: \"setter_ebba3e\") setter_ebba3e = min\n        list_1a3f2d[0] -> ifexpression_3d85e.gen_0\n        for_7a9b74.index + 1 -> ifexpression_3d85e.gen_1\n        getter_2a8c47.value -> min_6e4c21\n        ifexpression_3d85e.then -> setter_ebba3e.execute\n        list_1a3f2d[for_7a9b74.index + 1] -> setter_4d5f50.new_value\n        for_7a9b74.next -> setter_4d5f50.execute\n        ifexpression_3d85e.else -> setter_4d5f50.execute\n    }\n\n    \n\n    instance(x: -55, y: 528) SmallestMissing_d6e930 root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -281, y: 17, name: \"numbers\") property(List) numbers_ai\n        out(x: 47, y: 157, name: \"missing_number\") property(Number) missing_number_1a4f7c\n\n        instance(x: -106, y: -114) for_loop_2d8b5 root.Std_k98ojb.Std.For {\n            items: numbers_ai\n            index: 0\n            on_item: {\n                in(x: -44, y: 112, name: \"n\") property(Number) n_6c1a95\n                next_index: Std_k98ojb.Count.reset\n                for_loop_2d8b5.index -> next_index\n                if (n_6c1a95 + 1 != Std_k98ojb.List.GetAt(numbers_ai, next_index)) {\n                    missing_number_1a4f7c -> n_6c1a95 + 1\n                }\n            }\n        }\n\n        instance(x: -59, y: 125) ifexpression_8e5d0 root.Std_k98ojb.Std.IfExpression {}\n        getter(x: -134, y: 123, name: \"getter_9f7aa4\") getter_9f7aa4 = missing_number_1a4f7c\n        setter(x: 112, y: -281, name: \"setter_2e0b4d\") setter_2e0b4d = missing_number_1a4f7c\n        ifexpression_8e5d0.expression -> \"n < Std_k98ojb.List.Length(numbers)\"\n        getter_9f7aa4.value -> missing_number_1a4f7c\n        ifexpression_8e5d0.then -> setter_2e0b4d.execute\n        numbers_ai[0] -> setter_2e0b4d.new_value\n        for_loop_2d8b5.next -> setter_2e0b4d.execute\n        ifexpression_8e5d0.else -> setter_2e0b4d.continue\n    }\n\n    \n\n    instance(x: -192, y: 168) find_smallest_missing_5c9f50 root.main.find_smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -1408, y: 22, name: \"input\") property(String) input_9d4e6f\n\n        out(x: 550, y: -57, name: \"output\") property(String) output_2c89b5\n\n        instance(x: 91, y: 14) replace_0a7eb1 root.Std_k98ojb.Strings.Replace {}\n        input_9d4e6f -> replace_0a7eb1.input\n        \",.\" -> replace_0a7eb1.search\n        \":\" -> replace_0a7eb1.replace\n        replace_0a7eb1.output -> output_2c89b5\n    }\n\n    \n\n    instance(x: -137, y: 53) replace_with_colon_4f8d1e root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -1139, y: 11, name: \"input\") property(String) input_0\n\n        out(x: 538, y: -49, name: \"output\") property(String) output_8f2d7a\n\n        instance(x: 78, y: 73) replace_3b6c9b root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3b6c9b.input\n        \",.\" -> replace_3b6c9b.search\n        \":\" -> replace_3b6c9b.replace\n        replace_3b6c9b.output -> output_8f2d7a\n    }\n\n    \n\n    instance(x: -117, y: 18) replace_with_colon_1e34c root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -1475, y: 13, name: \"input\") property(String) input_0\n\n        out(x: 439, y: 77, name: \"output\") property(String) output_0\n\n        instance(x: 1079, y: 76) replace_d3f6a4 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_d3f6a4.input\n        \",.\" -> replace_d3f6a4.search\n        \":\" -> replace_d3f6a4.replace\n        replace_d3f6a4.output -> output_0\n    }\n\n    \n\n    instance(x: -137, y: 41) replace_with_colon_6c7d2b root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -1225, y: 20, name: \"input\") property(String) input_0\n        out(x: 493, y: -57, name: \"output\") property(String) output_3d4c8b\n\n        instance(x: 81, y: -84) replace_9e5a2f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_9e5a2f.input\n        \",.\" -> replace_9e5a2f.search\n        \":\" -> replace_9e5a2f.replace\n        replace_9e5a2f.output -> output_3d4c8b\n    }\n\n    \n\n    instance(x: -103, y: 21) replace_with_colon_6b7cd0 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -140, y: 1, name: \"input\") property(String) input_5a92d4\n\n        out(x: 513, y: 79, name: \"output\") property(String) output_9c8f23\n\n        instance(x: 97, y: 66) replace_0e38b6 root.Std_k98ojb.Strings.Replace {}\n        input_5a92d4 -> replace_0e38b6.input\n        \",\" -> replace_0e38b6.search\n        \".\" -> replace_0e38b6.replace\n        \":\" -> replace_0e38b6.output\n        replace_0e38b6.result -> output_9c8f23\n    }\n\n    \n\n    instance(x: -85, y: 55) replace_punctuation_93a2d4 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -157, y: 12, name: \"input\") property(String) input_4a5d64\n\n        out(x: 507, y: -63, name: \"output\") property(String) output_0f8c67\n\n        instance(x: 104, y: -44) replace_9e2f31 root.Std_k98ojb.Strings.Replace {}\n        input_4a5d64 -> replace_9e2f31.input\n        \", .\" -> replace_9e2f31.search\n        \":\" -> replace_9e2f31.replace\n        replace_9e2f31.output -> output_0f8c67\n    }\n\n    \n\n    instance(x: -121, y: 60) replace_special_chars_eb6d4a root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -162, y: 17, name: \"input\") property(String) input_5d3a4e\n\n        out(x: 446, y: 68, name: \"output\") property(String) output_8b9f2c\n\n        instance(x: 79, y: 73) replace_1d7e0b root.Std_k98ojb.Strings.Replace {}\n        input_5d3a4e -> replace_1d7e0b.input\n        \",.\" -> replace_1d7e0b.search\n        \":\" -> replace_1d7e0b.replace\n        replace_1d7e0b.output -> output_8b9f2c\n    }\n\n    \n\n    instance(x: -156, y: 28) replace_special_chars_d5e4af root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -172, y: 9, name: \"input\") property(String) input_8d0f1e\n\n        out(x: 504, y: -58, name: \"output\") property(String) output_b7c34a\n\n        instance(x: 97, y: -71) replace_5b7ea3 root.Std_k98ojb.Strings.Replace {}\n        input_8d0f1e -> replace_5b7ea3.input\n        \",.\" -> replace_5b7ea3.search\n        \":\" -> replace_5b7ea3.replace\n        replace_5b7ea3.output -> output_b7c34a\n    }\n\n    \n\n    instance(x: -114, y: 18) replace_special_chars_4e9d2f root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -1331, y: 0, name: \"input\") property(String) input_4e8f5d\n\n        out(x: 514, y: -43, name: \"output\") property(String) output_e6c9b2\n\n        instance(x: 1033, y: 77) replace_9a74c7 root.Std_k98ojb.Strings.Replace {}\n        input_4e8f5d -> replace_9a74c7.input\n        \",.\" -> replace_9a74c7.search\n        \":\" -> replace_9a74c7.replace\n        replace_9a74c7.output -> output_e6c9b2\n    }\n\n    \n\n    instance(x: 121, y: -28) replace_punctuation_b34d98 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -142, y: 21, name: \"input\") property(String) input_5a3e0f\n\n        out(x: 538, y: -23, name: \"output\") property(String) output_ea6d2c\n\n        instance(x: 92, y: -73) replace_7b9b4d root.Std_k98ojb.Strings.Replace {}\n        input_5a3e0f -> replace_7b9b4d.input\n        \",.\" -> replace_7b9b4d.search\n        \":\" -> replace_7b9b4d.replace\n        replace_7b9b4d.output -> output_ea6d2c\n    }\n\n    \n\n    instance(x: -123, y: 31) replace_with_colon_b5f8df root.main.replace_with_colon {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -47, y: 22, name: \"string\") property(String) string_8a2d95\n\n        out(x: 1133, y: 53, name: \"output\") property(Bool) output_b6c1e5\n\n        instance(x: -85, y: 75) tolower_4f1b9 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 246, y: 47) contains_f8a94d root.Std_k98ojb.Strings.Contains {}\n        tolower_4f1b9.result -> output_b6c1e5\n        string_8a2d95 -> tolower_4f1b9.input\n        'a' -> contains_f8a94d.contains\n        'z' -> contains_f8a94d.contains\n        contains_f8a94d.is_contained -> output_b6c1e5\n    }\n\n    \n\n    instance(x: 10, y: -167) all_same_13b7ed root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: -26, y: 25, name: \"input\") property(String) input_6e5f8d\n\n        out(x: 1094, y: -33, name: \"output\") property(Bool) output_b3b7a9\n\n        instance(x: 199, y: -34) ifexpression_d2c6bf root.Std_k98ojb.Std.IfExpression {\n            expression: \"i < length\"\n        }\n        getter(x: 59, y: 100, name: \"getter_5d6f3e\") getter_5d6f3e = i\n        setter(x: -15, y: -113, name: \"setter_d2c7a9\") setter_d2c7a9 = i\n        instance(x: 194, y: 68) islower_c56dd4 root.Std_k98ojb.Strings.IsLower {}\n        ifexpression_d2c6bf.else -> output_b3b7a9\n        ifexpression_d2c6bf.value -> output_b3b7a9\n        ifexpression_d2c6bf.then -> setter_d2c7a9.execute\n        input_6e5f8d -> islower_c56dd4.input\n        0 -> islower_c56dd4.index\n        islower_c56dd4.result -> output_b3b7a9\n        islower_c56dd4.is_contained -> setter_d2c7a9.input\n        setter_5d6f3e.value -> input_6e5f8d\n    }\n\n    \n\n    instance(x: 23, y: -108) is_same_char_1b19af root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: -44, y: 18, name: \"input\") property(String) input_97d5f6\n\n        out(x: 1303, y: 31, name: \"output\") property(Bool) output_8a15c7\n\n        instance(x: -102, y: 41) length_81e4b9 root.Std_k98ojb.List.Length {}\n        instance(x: 245, y: 34) isnumeric_b0fbd1 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 513, y: 35) tolower_d7aebd root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -27, y: 46) characters_9e6c3a root.Std_k98ojb.String.Characters {}\n        instance(x: -43, y: 51) contains_f4fdd5 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 117, y: 45) if_e1d14b root.Std_k98ojb.Std.If {}\n        instance(x: 185, y: 54) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: -35, y: 44) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 224, y: 51) filter_f4c8cd root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 433, y: 55) reduce_2a5f1d root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -31, y: 59) if_e1d14b.execute\n        instance(x: -35, y: 44) map_c73e3b.handler\n        input_97d5f6 -> filter_f4c8cd.items\n        filter_f4c8cd.output_list -> reduce_2a5f1d.items\n        reduce_2a5f1d.reduce -> not_75283f.input\n        0 -> not_75283f.context\n        isnumeric_b0fbd1.result -> contains_f4fdd5.item\n        tolower_d7aebd.result -> map_c73e3b.handler\n        characters_9e6c3a.value -> map_c73e3b.output_list\n        filter_f4c8cd.output_list -> reduce_2a5f1d.input\n    }\n\n    \n\n    instance(x: 22, y: -193) all_characters_same_7d85aa root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") same_characters {\n        in(x: -432, y: 20, name: \"input\") property(String) input_2d1f3e\n\n        out(x: 1219, y: 43, name: \"output\") property(Bool) output_ba56c6\n\n        instance(x: 110, y: 51) length_8d7b47 root.Std_k98ojb.List.Length {}\n        instance(x: -294, y: 57) contains_3e5f1b root.Std_k98ojb.List.Contains {}\n        instance(x: 201, y: 63) tolower_4c9a3b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 123, y: 70) characters_87d7ec root.Std_k98ojb.Strings.Characters {}\n        same_characters_2d1f3e -> length_8d7b47.list\n    }\n\n    \n\n    instance(x: -84, y: 109) same_characters_6dfc43 root.main.same_characters {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_all_characters_same {\n        in(x: -255, y: 35, name: \"string\") property(String) string_9fbb6d\n\n        out(x: 1083, y: 23, name: \"output\") property(Bool) output_a5b7c4\n\n        instance(x: -29, y: 41) tolower_fceef root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 157, y: 47) characters_8d6a57 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 221, y: 38) contains_d7e8f1 root.Std_k98ojb.Strings.Contains {}\n        is_all_characters_same_b9c6f4 -> output_a5b7f\n\n        tolower_fceef.value -> string_9fbb6d\n        characters_8d6a57.characters -> contains_d7e8f1.item\n        contains_d7e8f1.is_contained -> is_all_characters_same_b9c6f4\n    }\n\n    \n\n    instance(x: 40, y: -27) is_all_characters_same_5b3ad2 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: -456, y: 18, name: \"string\") property(String) string_57a6f5\n\n        out(x: 1294, y: 55, name: \"output\") property(Bool) output_9b3c2d\n\n        instance(x: -165, y: 71) ifexpression_d41c8e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == string[index]\"\n        }\n        getter(x: 334, y: 148, name: \"getter_1d3f5a\") getter_1d3f5a = previous\n        setter(x: -13, y: -32, name: \"setter_7e2c4b\") setter_7e2c4b = previous\n        instance(x: 201, y: 56) characters_c6e9ab root.Std_k98ojb.Strings.Characters {}\n        ifexpression_d41c8e.else -> output_9b3c2d\n        ifexpression_d41c8e.value -> output_9b3c2d\n        ifexpression_d41c8e.then -> setter_7e2c4b.execute\n        string_57a6f5 -> characters_c6e9ab.input\n        characters_c6e9ab.characters -> getter_1d3f5a.new_value\n        getter_1d3f5a.value -> ifexpression_d41c8e.gen_1\n        string_57a6f5 -> ifexpression_d41c8e.gen_0\n        ifexpression_d41c8e.execute -> output_9b3c2d\n    }\n\n    \n\n    instance(x: 23, y: -193) is_same_char_7dd65d root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: -25, y: 34, name: \"input\") property(String) input_f2f4e5\n\n        out(x: 1043, y: -24, name: \"output\") property(Bool) output_8a0d9c\n\n        instance(x: 109, y: 20) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 269, y: -14) ifexpression_d1ed34 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 155, y: 82, name: \"getter_8a9c44\") getter_8a9c44 = previous\n        setter(x: -2, y: -98, name: \"setter_8a9c44\") setter_8a9c44 = previous\n        instance(x: 247, y: -17) contains_c6e7ca root.Std_k98ojb.List.Contains {}\n        ifexpression_d1ed34.else -> output_8a0d9c\n        ifexpression_d1ed34.value -> output_8a0d9c\n        ifexpression_d1ed34.then -> setter_8a9c44.execute\n        input_f2f4e5 -> contains_c6e7ca.item\n        length_6e87f2.length -> contains_c6e7ca.count\n    }\n\n    \n\n    instance(x: 15, y: -105) is_same_char_59d0b8 root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") all_characters_same {\n        in(x: -33, y: 28, name: \"string\") property(String) string_5f8e21\n\n        out(x: 1284, y: 3, name: \"output\") property(Bool) output_f2c9d6\n\n        instance(x: -25, y: 98) length_0b1e7a root.Std_k98ojb.List.Length {}\n        instance(x: 192, y: 60) isnumeric_d5f0aa root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 349, y: 65) tolower_b4a6d3 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -83, y: 85) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 109, y: 70) characters_8e9f22 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 255, y: 78) isnumeric_b2a3c4 root.Std_k98ojb.Strings.IsNumeric {}\n        function_7c5dca root.Std_k98ojb.Function {\n            handler: \"isnumeric\"\n        }\n        instance(x: -26, y: 72) if_e19a62 root.Std_k98ojb.Std.If {}\n        length_0b1e7a.length -> isnumeric_d5f0aa.left\n        string_5f8e21 -> isnumeric_d5f0aa.right\n        tolower_b4a6d3.result -> contains_32727d.item\n        characters_8e9f22 -> contains_32727d.item\n        isnumeric_b2a3c4.result -> function_7c5dca.input\n        if_e19a62.predicate -> output_f2c9d6\n        function_7c5dca.input -> isnumeric_d5f0aa.value\n    }\n\n    \n\n    instance(x: 14, y: -193) all_characters_same_56b5e4 root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_characters_same {\n        in(x: -269, y: 44, name: \"string\") property(String) string_0d4a30\n\n        out(x: 1201, y: 47, name: \"output\") property(Bool) output_a2f8c9\n\n        instance(x: -26, y: 51) islower_c5e21b root.Std_k98ojb.Strings.IsLower {}\n        instance(x: -35, y: 59) contains_32727d root.Std_k98ojb.Strings.Contains {}\n        instance(x: 104, y: 47) tolower_b6f2ec root.Std_k98ojb.Strings.ToLower {}\n        islower_c5e21b.result -> output_a2f8c9\n        contains_32727d.is_contained -> output_a2f8c9\n        tolower_b6f2ec.value -> output_a2f8c9\n    }\n\n    \n\n    instance(x: 19, y: -14) all_characters_same_5b0aef root.main.all_characters_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") is_same {\n        in(x: -269, y: 29, name: \"input\") property(String) input_6a8f9e\n\n        out(x: 1355, y: 14, name: \"output\") property(Bool) output_4d7b0c\n\n        instance(x: -22, y: 23) is_same_c2df56 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 151, y: 17) tolower_6e3a35 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 201, y: 26) characters_4fdd7d root.Std_k98ojb.Strings.Characters {}\n    }\n\n    \n\n    instance(x: -15, y: 123) is_same_b9d5c6 root.main.is_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"s\") property(String) s_ai\n        out(x: -424, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 85, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        s_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n    }\n\n    \n    instance(x: -43, y: -242, name: \"count_digits\") count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 2, y: -217, name: \"count\") property(Number) count_ai\n\n        instance(x: 97, y: -43) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n    }\n\n    \n    instance(x: 264, y: -464, name: \"count_digits\") count_7c0e5f root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -176, y: -46) math_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> math_length_node.input\n        math_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -204, y: 72) strings_to_ints_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"s\") property(String) s_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: -76, y: 0) length_node root.Std_k98ojb.Strings.Length {}\n        s_ai -> length_node.input\n        length_node.length -> count_ai\n    }\n\n    \n    instance(x: 0, y: 0) math_floor_node root.Std_k98ojb.Math.Floor {}\n    math_floor_node.value -> count_digits.count_ai\n    math_floor_node.result -> count_digits.count_ai\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 2, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 80, y: -417) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_58c4f5\n        count_digits_58c4f5.result -> result_ai\n    }\n\n    \n    instance(x: 85, y: -416) strings_replace_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: -114, y: 1, name: \"count\") property(Number) count_ai\n\n        instance(x: 43, y: 16) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n    }\n\n    \n    instance(x: -87, y: -54, name: \"count_digits\") count_2a9e5f root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: -446, y: -219, name: \"count\") property(Number) count_ai\n\n        instance(x: 84, y: 1) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n    }\n\n    \n    instance(x: -176, y: -43) filter_7b3b7b root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 2, y: -214, name: \"result\") property(Number) result_ai\n\n        instance(x: 15, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_3f6d57\n        count_digits_3f6d57.result -> result_ai\n    }\n\n    \n    instance(x: -44, y: 0) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"s\") property(String) s_ai\n        out(x: 2, y: -246, name: \"result\") property(Number) result_ai\n\n        instance(x: 15, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        s_ai -> strings_length_node.input\n        strings_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 83, y: -262) strings_replace_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: -326, y: -235, name: \"count\") property(Number) count_ai\n\n        instance(x: 73, y: -295) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n    }\n\n    \n    instance(x: 264, y: -304, name: \"count_digits\") count_9f8d5a root.main.count_digits {}\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -304, y: 141, name: \"n\") property(Number) n_5a3d4b\n\n        out(x: 1006, y: -343, name: \"output\") property(Number) output_f2c8a1\n\n        instance(x: 68, y: -389) ifexpression_e85e38 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 414, y: -357) sum_fourth_power_6d9f2c root.main.sum_fourth_power {}\n        instance(x: 96, y: -221) pow_f1aee5 root.Std_k98ojb.Math.Pow {}\n        instance(x: 313, y: -284) mul_0e8f8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 95, y: -197) add_b2c4d6 root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -247) div_f9a1af root.Std_k98ojb.Math.Div {}\n        setter(x: -192, y: -362, name: \"setter_5f3e0b\") setter_5f3e0b = sum\n        setter(x: 874, y: -394, name: \"setter_c0a2c6\") setter_c0a2c6 = sum\n        getter(x: 902, y: -295, name: \"getter_b9d4ad\") getter_b9d4ad = sum\n        instance(x: -199, y: -270) floor_5f1e7b root.Std_k98ojb.Math.Floor {}\n        3 -> pow_f1aee5.y\n        n_5a3d4b -> pow_f1aee5.x\n        pow_f1aee5.result -> mul_0e8f8f.first\n        3 -> div_f9a1af.second\n        div_f9a1af.result -> sum_fourth_power_6d9f2c.n_5a3d4b\n        0 -> setter_5f3e0b.new_value\n        setter_5f3e0b.continue -> ifexpression_e85e38.execute\n        ifexpression_e85e38.then -> sum_fourth_power_6d9f2c.execute_cdac2a\n        execute_cdac2a -> setter_c0a2c6.execute\n        ifexpression_e85e38.else -> sum_fourth_power_6d9f2c.execute_cdac2a\n        sum_fourth_power_6d9f2c.continue_d9efd7 -> setter_c0a2c6.execute\n        sum_fourth_power_6d9f2c.output_732a8a -> add_b2c4d6.second\n        add_b2c4d6.result -> setter_c0a2c6.new_value\n        setter_c0a2c6.continue -> continue_d9efd7\n        getter_b9d4ad.value -> output_f2c8a1\n        n_5a3d4b -> floor_5f1e7b.input\n        floor_5f1e7b.output -> div_f9a1af.first\n        floor_5f1e7b.output -> pow_f1aee5.value\n        floor_5f1e7b.output -> ifexpression_e85e38.gen_0\n    }\n\n    \n\n    instance(x: -175, y: 162) sum_fourth_power_3cddfa root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -436, y: 145, name: \"n\") property(Number) n_1d4e9b\n\n        out(x: 28561, y: -317, name: \"output\") property(Number) output_ba5c5f\n\n        instance(x: 82, y: 78) sum_fourth_power_6d86c8 root.main.sum_fourth_power {}\n    }\n\n    \n\n    instance(x: -54, y: 547) sum_fourth_power_f3bfc4 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -342, y: 144, name: \"n\") property(Number) n_9d6f1a\n\n        out(x: 1296, y: -373, name: \"output\") property(Number) output_f4c4e5\n\n        instance(x: 0, y: 0) ifexpression_2d3b3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 41, y: -241) sum_fourth_power_9f6a8c root.main.sum_fourth_power {}\n        instance(x: 97, y: -299) mul_f9d1ca root.Std_k98ojb.Math.Mul {}\n        instance(x: 68, y: -236) pow_d41c5e root.Std_k98ojb.Math.Pow {}\n        instance(x: 102, y: -274) add_4a3f48 root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -258) div_f0d9df root.Std_k98ojb.Math.Div {}\n        setter(x: -219, y: -442, name: \"setter_5e6c7f\") setter_5e6c7f = sum\n        setter(x: 874, y: -509, name: \"setter_d3d8ab\") setter_d3d8ab = sum\n        getter(x: 900, y: -305, name: \"getter_4dfcd1\") getter_4dfcd1 = sum\n        instance(x: -202, y: -238) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        3 -> pow_d41c5e.y\n        2 -> mul_f9d1ca.second\n        3 -> div_f0d9df.second\n        div_f0d9df.result -> add_4a3f48.first\n        add_4a3f48.result -> setter_5e6c7f.new_value\n        add_4a3f48.result -> setter_d3d8ab.new_value\n        add_4a3f48.result -> getter_4dfcd1.value\n        pow_d41c5e.result -> mul_f9d1ca.first\n        2 -> div_f0d9df.divisor\n        div_f0d9df.result -> sum_fourth_power_9f6a8c.n_9d6f1a\n        0 -> setter_5e6c7f.execute\n        setter_5e6c7f.continue_d9efd7 -> ifexpression_2d3b3.execute\n        ifexpression_2d3b3.then -> sum_fourth_power_9f6a8c.execute_cdac2a\n        sum_fourth_power_9f6a8c.continue_d9efd7 -> setter_d3d8ab.execute\n        sum_fourth_power_9f6a8c.output_732a8a -> add_4a3f48.second\n        add_4a3f48.result -> setter_d3d8ab.new_value\n        setter_d3d8ab.continue -> continue_d9efd7\n        getter_4dfcd1.value -> output_f4c4e5\n        n_9d6f1a -> floor_61b38d.input\n        floor_61b38d.output -> div_f0d9df.first\n        floor_61b38d.output -> pow_d41c5e.y\n        floor_61b38d.output -> ifexpression_2d3b3.gen_0\n    }\n\n    \n\n    instance(x: -176, y: 43) sum_fourth_power_6cd8a1 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -270, y: 123, name: \"n\") property(Number) n_4d8a25\n\n        out(x: 12850, y: -351, name: \"output\") property(Number) output_bf5c47\n\n        instance(x: 0, y: 0) find_c2b1a3 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -193, y: 31, name: \"current\") property(Number) current_8d3e9f\n\n            out(x: 1024, y: 22, name: \"bool\") property(Bool) bool_ba2c7b\n\n            instance(x: 112, y: 27) modulo_0b6e5d root.Std_k98ojb.Math.Modulo {}\n            instance(x: 417, y: 23) equal_e8f33a root.Std_k98ojb.Logic.Equal {}\n            current_8d3e9f -> modulo_0b6e5d.value\n            1 -> modulo_0b6e5d.divisor\n            modulo_0b6e5d.result -> equal_e8f33a.left\n            2 -> equal_e8f33a.right\n            equal_e8f33a.result -> bool_ba2c7b\n        } -> find_c2b1a3.predicate\n        func() {\n            in(x: -193, y: 31, name: \"current\") property(Number) current_8d3e9f\n\n            out(x: 1024, y: 22, name: \"bool\") property(Bool) bool_ba2c7b\n\n            instance(x: 112, y: 27) modulo_0b6e5d root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 26) notequal_e8f33a root.Std_k98ojb.Logic.NotEqual {}\n            current_8d3e9f -> modulo_0b6e5d.value\n            1 -> modulo_0b6e5d.divisor\n            modulo_0b6e5d.result -> notequal_e8f33a.left\n            2 -> notequal_e8f33a.right\n            notequal_e8f33a.result -> bool_ba2c7b\n        } -> find_c2b1a3.predicate\n        list_09fcba -> find_c2b1a3.items\n        func() {\n            in(x: -193, y: 31, name: \"current\") property(Number) current_8d3e9f\n\n            out(x: 1024, y: 22, name: \"bool\") property(Bool) bool_ba2c7b\n\n            instance(x: 112, y: 27) modulo_0b6e5d root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 26) notequal_e8f33a root.Std_k98ojb.Logic.NotEqual {}\n            current_8d3e9f -> modulo_0b6e5d.value\n            1 -> modulo_0b6e5d.divisor\n            modulo_0b6e5d.result -> notequal_e8f33a.left\n            2 -> notequal_e8f33a.right\n            notequal_e8f33a.result -> bool_ba2c7b\n        } -> find_c2b1a3.predicate\n        func() {\n            in(x: -193, y: 31, name: \"current\") property(Number) current_8d3e9f\n\n            out(x: 1024, y: 22, name: \"bool\") property(Bool) bool_ba2c7b\n\n            instance(x: 112, y: 27) modulo_0b6e5d root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 26) notequal_e8f33a root.Std_k98ojb.Logic.NotEqual {}\n            current_8d3e9f -> modulo_0b6e5d.value\n            1 -> modulo_0b6e5d.divisor\n            modulo_0b6e5d.result -> notequal_e8f33a.left\n            2 -> notequal_e8f33a.right\n            notequal_e8f33a.result -> bool_ba2c7b\n        } -> find_c2b1a3.predicate\n        sum_digits_96023e.n_6b655b -> modulo_0b6e5d.first\n        modulo_0b6e5d.result -> sum_digits_96023e.sum\n        sum_digits_96023e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> output_bf5c47\n    }\n\n    \n\n    instance(x: -243, y: 137) sum_fourth_power_96d7b9 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -299, y: 0, name: \"n\") property(Number) n_3e6a9\n\n        out(x: 1288, y: -394, name: \"output\") property(Number) output_1d4f2c\n\n        instance(x: 23, y: -395, name: \"sum_fourth_power\") expression_1e7ff0 root.Std_k98ojb.Math.Expression {\n            expression: \"sum((i*2-1)^4 for i in range(1,n+1))\"\n        }\n        instance(x: 83, y: -391) ifexpression_f5f3a8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n >= 0\"\n        }\n        instance(x: 65, y: -387) pow_4e7d6 root.Std_k98ojb.Math.Pow {}\n        instance(x: 83, y: -384) mul_f3a5c9 root.Std_k98ojb.Math.Mul {}\n        instance(x: 97, y: -375) add_e1f2aa root.Std_k98ojb.Math.Add {}\n        instance(x: 86, y: -369) div_8e7b3 root.Std_k98ojb.Math.Div {}\n        setter(x: -225, y: -373, name: \"setter_f5c9d4\") setter_f5c9d4 = sum_fourth_power\n        getter(x: 104, y: -394, name: \"getter_1e7ff0\") getter_1e7ff0 = sum_fourth_power.result\n        instance(x: 85, y: -388) floor_65b45a root.Std_k98ojb.Math.Floor {}\n        4 -> pow_4e7d6.exponent\n        pow_4e7d6.result -> mul_f3a5c9.first\n        1 -> div_8e7b3.second\n        div_8e7b3.result -> sum_fourth_power.n_3e6a9\n        0 -> setter_f5c9d4.new_value\n        ifexpression_f5f3a8.then -> sum_fourth_power.execute_cdac2a\n        sum_fourth_power.continue_d9efd7 -> setter_f5c9d4.execute\n        sum_fourth_power.output_1d4f2c -> add_e1f2aa.second\n        add_e1f2aa.result -> setter_f5c9d4.new_value\n        setter_f5c9d4.continue_d9efd7 -> sum_fourth_power.execute_cdac2a\n        getter_1e7ff0.value -> output_1d4f2c\n    }\n\n    \n\n    instance(x: -179, y: 24) sum_fourth_power_6bf8b3 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -450, y: -421, name: \"n\") property(Number) n_6b655b\n\n        out(x: 2000, y: -647, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 0, y: 0) pow_7c3f2e root.Std_k98ojb.Math.Pow {}\n        instance(x: 89, y: -326, name: \"odd_number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 94, y: 25, name: \"result\") add_88bb8a root.Std_k98ojb.Math.Add {}\n        list.Empty -> odd_number.items\n        pow_7c3f2e.result -> result.output\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -299, y: 173, name: \"n\") property(Number) n_8f3d0a\n\n        out(x: 1097, y: 121, name: \"output\") property(Number) output_b5b9c4\n\n        instance(x: 22, y: 133) sum_fourth_power_1e6f2 root.main.sum_fourth_power {}\n        instance(x: -59, y: 47, name: \"i\") ForEach {\n            trigger() execute\n            in(x: -117, y: 63, name: \"n\") property(Number) n_b5c6a4\n\n            out(x: 1079, y: 109, name: \"sum\") property(Number) sum_1b1f7e\n\n            instance(x: 59, y: 43) pow_3d2ff root.Std_k98ojb.Math.Pow {}\n            instance(x: -53, y: 67) modulo_9c9a38 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 99, y: 71) div_8e7f28 root.Std_k98ojb.Math.Div {}\n            instance(x: 97, y: 73) add_1d3e4a root.Std_k98ojb.Math.Add {}\n            instance(x: -53, y: 74) pow_3d2ff.result -> modulo_9c9a38.first\n            pow_3d2ff.input -> n_b5c6a4\n            modulo_9c9a38.divisor -> 3\n            modulo_9c9a38.result -> add_1d3e4a.first\n            div_8e7f28.result -> add_1d3e4a.second\n            sum_1b1f7e.result -> add_1d3e4a.result\n        } -> sum_fourth_power_1e6f2.items\n        sum_fourth_power_1e6f2.sum -> output_b5b9c4\n    }\n\n    \n\n    instance(x: -292, y: 179) sum_fourth_power_0a7d64 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -294, y: 134, name: \"n\") property(Number) n_0d5f3b\n\n        out(x: 1296, y: -349, name: \"sum\") property(Number) sum_e2e8a4\n\n        instance(x: 44, y: 73) mul_7e1ce0 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 390, y: 138) data_cde0dc  = 3\n        instance(x: 12, y: 139) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_7e1ce0.result -> div_64046c.first\n        expression_2d6da6.result -> mul_7e1ce0.second\n        n_0d5f3b -> mul_7e1ce0.first\n        n_0d5f3b -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_e2e8a4\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -279, y: 141, name: \"n\") property(Number) n_6b655b\n\n        out(x: 10080, y: -1, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        list_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_2f3e5a\n\n        out(x: 600, y: 7, name: \"sum\") property(Number) sum_f35c9d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_b5f4a3\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_b5f4a3 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_b5f4a3\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_b5f4a3 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        list_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_f35c9d\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -110, y: 67, name: \"side\") property(Number) side_3d8f6e\n\n        out(x: 152, y: 21, name: \"surface_area\") property(Number) surface_area_e5a7cd\n\n        instance(x: 43, y: -12) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 255, y: 112) data_1f8c6e  = 6\n        instance(x: 19, y: 121) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        data_1f8c6e -> mul_f892a4.second\n        side_3d8f6e -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> mul_f892a4.first\n        mul_f892a4.result -> surface_area_e5a7cd\n    }\n\n    \n\n    instance(x: -179, y: 144) cube_surface_area_a8b1d root.main(cube_surface_area {})\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -206, y: 57, name: \"side_length\") property(Number) side_length_5f2e9d\n\n        out(x: 324, y: 11, name: \"surface_area\") property(Number) surface_area_4c6b9a\n\n        instance(x: -194, y: -109) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -129, y: -139) data_ebb3d1  = 6\n        instance(x: 101, y: -140) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        data_ebb3d1 -> mul_f892a4.second\n        side_length_5f2e9d -> pow_584bfd.x\n        pow_584bfd.y -> surface_area_4c6b9a\n        2 -> mul_f892a4.first\n        side_length_5f2e9d -> pow_584bfd.gen_0\n        mul_f892a4.result -> surface_area_4c6b9a\n    }\n\n    \n\n    instance(x: -139, y: 109) cube_surface_area_d2f1af root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -141, y: 32, name: \"side_length\") property(Number) side_length_5f8e76\n\n        out(x: 216, y: 64, name: \"surface_area\") property(Number) surface_area_f35a3c\n        out(x: 213, y: 36, name: \"continue\") trigger() continue_a1b7d4\n\n        instance(x: -23, y: -101) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 111, y: 141) data_e5c0f8  = side_length_5f8e76\n        instance(x: -44, y: 125) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        data_e5c0f8 -> mul_2f9d09.first\n        pow_584bfd.y -> mul_2f9d09.second\n        side_length_5f8e76 -> pow_584bfd.x\n        mul_2f9d09.result -> surface_area_f35a3c\n    }\n\n    \n\n    instance(x: 111, y: -28) cube_surface_area_b9b0cd root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -204, y: 52, name: \"side_length\") property(Number) side_length_9f3b8e\n\n        out(x: 216, y: -201, name: \"surface_area\") property(Number) surface_area_5c1a2d\n\n        instance(x: -141, y: -245) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 206, y: 145) data_cde0dc  = 6\n        instance(x: 12, y: 148) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side_length^2 * data_cde0dc\"\n        }\n        instance(x: 303, y: -19) div_64046c root.Std_k98ojb.Math.Div {}\n        side_length_9f3b8e -> div_64046c.first\n        div_64046c.second -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> surface_area_5c1a2d\n    }\n\n    \n\n    instance(x: 104, y: -22) cube_surface_area_9f3b8e root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -220, y: 44, name: \"side_length\") property(Number) side_length_3e4b5d\n\n        out(x: 216, y: -186, name: \"surface_area\") property(Number) surface_area_6f2c94\n\n        instance(x: 8, y: -202) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 332, y: 115) data_e3e0aa  = 6\n        instance(x: 12, y: 121) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        instance(x: -96, y: -10) sub_1d9c43 root.Std_k98ojb.Math.Sub {}\n        data_e3e0aa -> mul_f892a4.second\n        side_length_3e4b5d -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        sub_1d9c43.result -> surface_area_6f2c94\n    }\n\n    \n\n    instance(x: -76, y: 141) cube_surface_area_0a8bb3 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -115, y: 56, name: \"side\") property(Number) side_8d3e2a\n\n        out(x: 144, y: -27, name: \"area\") property(Number) area_b5f3b9\n        out(x: 114, y: -18, name: \"continue\") trigger() continue_74c89b\n\n        instance(x: 83, y: -21) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 104, y: -59) data_8f2e6d  = side\n        instance(x: 33, y: -22) add_3c7f1d root.Std_k98ojb.Math.Add {}\n        data_8f2e6d -> mul_f892a4.first\n        6 -> mul_f892a4.second\n        mul_f892a4.result -> add_3c7f1d.first\n        side_8d3e2a -> add_3c7f1d.second\n        add_3c7f1d.result -> area_b5f3b9\n    }\n\n    \n\n    instance(x: 101, y: -24) surface_area_63dd44 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -243, y: 34, name: \"side\") property(Number) side_5e8f19\n\n        out(x: 216, y: 28, name: \"surface_area\") property(Number) surface_area_9a3d7b\n        out(x: 1056, y: -194, name: \"continue\") trigger() continue_4c0d96\n\n        instance(x: -123, y: -178) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 234, y: 58) data_9fdd3e  = 6\n        instance(x: -105, y: -192) add_b4554f root.Std_k98ojb.Math.Add {}\n        mul_f892a4.result -> add_b4554f.first\n        side_5e8f19 -> add_b4554f.second\n        add_b4554f.result -> surface_area_9a3d7b\n    }\n\n    \n\n    instance(x: 312, y: -208) surface_area_e1cdd6 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -213, y: 14, name: \"side_length\") property(Number) side_length_5f2a3d\n\n        out(x: 216, y: 21, name: \"surface_area\") property(Number) sa_4f7e1c\n\n        instance(x: 104, y: -155) Mul_f6f0e9 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -186, y: -194) data_3a71d8  = side_length_5f2a3d\n        instance(x: -137, y: 145) Pow_d87c59 root.Std_k98ojb.Math.Pow {}\n        data_3a71d8 -> Mul_f6f0e9.first\n        2 -> Pow_d87c59.y\n        Pow_d87c59.result -> Mul_f6f0e9.second\n        side_length_5f2a3d -> Mul_f6f0e9.first\n        Mul_f6f0e9.result -> sa_4f7e1c\n    }\n\n    \n\n    instance(x: 234, y: -44) surface_area_8eb2b5 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -211, y: 52, name: \"side_length\") property(Number) side_length_1e0f9d\n\n        out(x: 216, y: -33, name: \"surface_area\") property(Number) surface_area_8c4b21\n\n        instance(x: 28, y: -46) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 18, y: -151) data_d0d7c5  = 6\n        instance(x: 31, y: 26) add_9f8e33 root.Std_k98ojb.Math.Add {}\n        data_d0d7c5 -> add_9f8e33.first\n        mul_f892a4.result -> add_9f8e33.second\n        side_length_1e0f9d -> mul_f892a4.first\n        surface_area_8c4b21 -> add_9f8e33.result\n    }\n\n    \n\n    instance(x: 134, y: -49) cube_surface_area_6e5c2 root.main(cube_surface_area {})\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -101, y: 23, name: \"side_length\") property(Number) side_length_6d1a3b\n\n        out(x: 1768, y: 7, name: \"surface_area\") property(Number) surface_area_9e2f4c\n\n        instance(x: 21, y: -13) pow_f5a6df root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -191, y: 15) data_b1d3bf  = side_length_6d1a3b\n        instance(x: -123, y: 28) mul_d9e7d4 root.Std_k98ojb.Math.Mul {}\n        pow_f5a6df.result -> mul_d9e7d4.first\n        6 -> mul_d9e7d4.second\n        data_b1d3bf -> mul_d9e7d4.second\n        mul_d9e7d4.result -> surface_area_9e2f4c\n    }\n\n    \n\n    instance(x: -155, y: 46) cube_surface_area_f0b8a5 root.main(cube_surface_area {})\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -1003, y: -504, name: \"list\") property(List) list_6f8d1e\n\n        out(x: 102, y: -502, name: \"difference\") property(Number) difference_c2b4a9\n\n        instance(x: -1127, y: -368, name: \"max_node\") Max {}\n        instance(x: -1013, y: -488, name: \"min_node\") Min {}\n        data_instance(x: 1141, y: -362) data_98d56f  = [max, min]\n        instance(x: -1065, y: -484) sub_ea9df0 root.Std_k98ojb.Math.Sub {}\n        list_6f8d1e -> max_node.items\n        list_6f8d1e -> min_node.items\n        data_98d56f -> sub_ea9df0.first\n        max_node.max -> data_98d56f.max\n        min_node.min -> data_98d56f.min\n        sub_ea9df0.result -> difference_c2b4a9\n    }\n\n    \n\n    instance(x: 100, y: -63) diff_largest_smallest_15c7e3 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -119, y: 442, name: \"list\") property(List) list_0d5a2e\n\n        out(x: 513, y: 63, name: \"difference\") property(Number) difference_b4b6f9\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_c7f8af\n\n        instance(x: -101, y: -104) maxitem_2e34d3 root.Std_k98ojb.List.Max {}\n        instance(x: -96, y: -438) minitem_0c66e1 root.Std_k98ojb.List.Min {}\n        data_instance(x: 446, y: 522) data_e6f5c9  = [max, min]\n        instance(x: -432, y: -620) length_a0d5a2 root.Std_k98ojb.List.Length {}\n        instance(x: -1147, y: 155) sub_1b6e35 root.Std_k98ojb.Math.Sub {}\n        list_0d5a2e -> minitem_0c66e1.items\n        list_0d5a2e -> maxitem_2e34d3.items\n        data_e6f5c9 -> sub_1b6e35.gen_0\n        length_a0d5a2.length -> sub_1b6e35.first\n        1 -> sub_1b6e35.second\n        sub_1b6e35.result -> maxitem_2e34d3.max\n        minitem_0c66e1.item -> data_e6f5c9.min\n        length_a0d5a2.length -> diff_max_min.difference\n    }\n\n    \n\n    instance(x: 46, y: -67) diff_max_min_b64a8b root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -1019, y: 451, name: \"list\") property(List) list_6d4e84\n\n        out(x: 1031, y: -27, name: \"difference\") property(Number) difference_1f8a8c\n        instance(x: -1083, y: 15, name: \"Max\") Max_a2b5eb root.Std_k98ojb.List.Max {}\n        instance(x: -1094, y: -26, name: \"Min\") Min_d6e930 root.Std_k98ojb.List.Min {}\n        data_instance(x: -1121, y: 53) data_4a8f3c  = [Max, Min]\n        instance(x: -1005, y: 55) sub_9d74aa root.Std_k98ojb.Math.Sub {}\n        list_6d4e84 -> Max.items\n        list_6d4e84 -> Min.items\n        data_4a8f3c -> sub_9d74aa\n        Max.max -> sub_9d74aa.first\n        Min.min -> sub_9d74aa.second\n        sub_9d74aa.result -> difference_1f8a8c\n    }\n\n    \n\n    instance(x: -118, y: 13) diff_max_min_5b4e0a root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -1478, y: 246, name: \"list\") property(List) list_9d1b5f\n\n        out(x: 444, y: 64, name: \"difference\") property(Number) difference_a3a6e7\n        out(x: 508, y: -111, name: \"continue\") trigger() continue_e0c0f2\n\n        instance(x: -1049, y: -375) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -978, y: -566) maxitem_3a8d5e root.Std_k98ojb.List.Max {}\n        instance(x: -1405, y: -438) minitem_1f6c2d root.Std_k98ojb.List.Min {}\n        data_instance(x: 426, y: -620) data_7cd4bf  = [max, min]\n        instance(x: -432, y: -620) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 201, y: 62) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_9d1b5f -> maxitem_3a8d5e.list\n        list_9d1b5f -> minitem_1f6c2d.list\n        data_7cd4bf -> flatten_c31c7c.items\n        firstitem_3a8d5e.item -> data_7cd4bf.max\n        lastitem_minitem_1f6c2d.item -> data_7cd4bf.min\n        list_9d1b5f -> slice_3f3ee6.list\n        1 -> slice_3f3ee6.start\n        slice_3f3ee6.slice -> data_7cd4bf.max\n        flatten_c31c7c.flattened -> difference_a3a6e7\n        list_9d1b5f -> length_4b8927.list\n        length_4b8927.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> slice_3f3ee6.end\n    }\n\n    \n\n    instance(x: 101, y: -67) diff_max_min_15e9e5 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -176, y: 15, name: \"list\") property(List) list_9e0d47\n\n        out(x: 436, y: 64, name: \"output\") property(Number) output_e4c5f8\n\n        instance(x: -110, y: 68) maxitem_d2b4a6 root.Std_k98ojb.List.Max {}\n        instance(x: -113, y: 74) minitem_77e0d1 root.Std_k98ojb.List.Min {}\n        data_instance(x: -79, y: 93) data_f5f3d7  = [max, min]\n        instance(x: -45, y: 73) sub_9c4a8b root.Std_k98ojb.Math.Sub {}\n        list_9e0d47 -> maxitem_d2b4a6.list\n        list_9e0d47 -> minitem_77e0d1.list\n        data_f5f3d7 -> sub_9c4a8b.first\n        maxitem_d2b4a6.item -> data_f5f3d7.max\n        minitem_77e0d1.item -> data_f5f3d7.min\n        sub_9c4a8b.result -> output_e4c5f8\n    }\n\n    \n\n    instance(x: 55, y: -35) diff_max_min_5c6ec2 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -139, y: -523, name: \"list\") property(List) list_5d2a24\n\n        out(x: -115, y: -538, name: \"output\") property(Number) output_eb4c6e\n\n        instance(x: 105, y: -434) maxitem_f8c43f root.Std_k98ojb.List.Max {}\n        instance(x: -1009, y: -536) minitem_7a0161 root.Std_k98ojb.List.Min {}\n        data_instance(x: -1093, y: -538) data_e2d0e6  = [max, min]\n        instance(x: -1175, y: -434) sub_9c8f21 root.Std_k98ojb.Math.Sub {}\n        list_5d2a24 -> maxitem_f8c43f.items\n        list_5d2a24 -> minitem_7a0161.items\n        data_e2d0e6 -> sub_9c8f21\n        maxitem_f8c43f.max -> data_e2d0e6.max\n        minitem_7a0161.min -> data_e2d0e6.min\n        sub_9c8f21.result -> output_eb4c6e\n    }\n\n    \n\n    instance(x: -107, y: 11) diff_max_min_48cd3 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -1415, y: -539, name: \"list\") property(List) list_1d3b8f\n\n        out(x: -1487, y: 65, name: \"difference\") property(Number) difference_b2c9a6\n        out(x: -1014, y: -509, name: \"output\") trigger() output_5d41e5\n\n        instance(x: -1020, y: -494) maxitem_8d7f50 root.Std_k98ojb.List.Max {}\n        instance(x: 1071, y: 60, name: \"minitem\") minitem_3a4c66 root.Std_k98ojb.List.Min {}\n        instance(x: -1115, y: -493) sub_6eb0f9 root.Std_k98ojb.Math.Sub {}\n        list_1d3b8f -> maxitem_8d7f50.items\n        list_1d3b8f -> minitem_3a4c66.items\n        maxitem_8d7f50.max -> sub_6eb0f9.first\n        minitem_3a4c66.min -> sub_6eb0f9.second\n        sub_6eb0f9.result -> difference_b2c9a6\n    }\n\n    \n\n    instance(x: 109, y: -49) diff_largest_smallest_4e60d1 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -118, y: -538, name: \"list\") property(List) list_0d8f5a\n\n        out(x: 499, y: 56, name: \"difference\") property(Number) difference_c2e3c4\n\n        instance(x: -1131, y: -442, name: \"max_node\") Std_k98ojb.List.Max {}\n        instance(x: -1059, y: -493, name: \"min_node\") Std_k98ojb.List.Min {}\n        instance(x: 433, y: 57, name: \"sub_node\") Std_k98ojb.Math.Sub {}\n        data_instance(x: -1027, y: -436) data_6a9d21 = [max, min]\n        instance(x: -1191, y: -536) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        instance(x: -1053, y: 19) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -1219, y: -442) length_4b8927 root.Std_k98ojb.List.Length {}\n        list_0d8f5a -> min_node.items\n        list_0d8f5a -> max_node.items\n        data_6a9d21 -> flatten_c31c7c.items\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> difference_c2e3c4\n        length_4b8927.length -> slice_3f3ee6.start\n        1 -> slice_3f3ee6.end\n        flatten_c31c7c.flattened -> data_6a9d21.max\n        list_0d8f5a -> length_4b8927.list\n    }\n\n    \n\n    instance(x: -114, y: -69) diff_max_min_11e22e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -191, y: 114, name: \"list\") property(List) list_6f9a3d\n\n        out(x: 546, y: 62, name: \"output\") property(Number) output_b7c4b5\n\n        instance(x: -105, y: -110) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -978, y: -566) max_9a6e1d root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: -1405, y: -438) length_4b8927.length -> max_9a6e1d.from\n        list_6f9a3d -> length_4b8927.list\n        max_9a6e1d.max -> sub_f133b2.first\n        sub_f133b2.second -> output_b7c4b5\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_14a8f0 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -104, y: 115, name: \"list\") property(List) list_4a2d41\n\n        out(x: -124, y: 113, name: \"difference\") property(Number) difference_b6c9f1\n        out(x: 509, y: 108, name: \"output\") trigger() output_8b5e77\n\n        instance(x: -119, y: 104) length_5d2a31 root.Std_k98ojb.List.Length {}\n        instance(x: -1079, y: 121) max_6c1f25 root.Std_k98ojb.List.Max {}\n        instance(x: -1088, y: 109) min_3e4f51 root.Std_k98ojb.List.Min {}\n        data_instance(x: -115, y: 111) data_e63d66  = [max, min]\n        instance(x: -484, y: 113) sub_5c4a1d root.Std_k98ojb.Math.Sub {}\n        list_4a2d41 -> max_6c1f25.items\n        list_4a2d41 -> min_3e4f51.items\n        data_e63d66 -> sub_5c4a1d.first\n        max_6c1f25.result -> data_e63d66.max\n        min_3e4f51.result -> data_e63d66.min\n        sub_5c4a1d.result -> difference_b6c9f1\n    }\n\n    \n\n    instance(x: 95, y: -19) diff_max_min_f7a8b0 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -32, y: 17, name: \"number\") property(Number) number_5f2e33\n\n        out(x: 1459, y: 22, name: \"output\") property(Bool) output_ebdfc1\n\n        instance(x: -194, y: 26) modulo_d8d0e4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 198, y: 21) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 1459, y: 23) tolower_59f7df root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -17, y: 28) isnumeric_2e8d74 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 200, y: 20) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n\n        number_5f2e33 -> modulo_d8d0e4.value\n        0 -> notequal_7836b4.right\n        tolower_59f7df(number_5f2e33) -> isnumeric_2e8d74\n        isnumeric_2e8d74.result -> greaterthan_cb50ae.left\n        modulo_d8d0e4.divisor -> greaterthan_cb50ae.right\n        greaterthan_cb50ae.result -> output_ebdfc1\n        notequal_7836b4.result -> output_ebdfc1\n    }\n\n    \n\n    instance(x: -34, y: 12) is_even_9d21a8 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -51, y: 26, name: \"input\") property(Number) input_5f1d35\n\n        out(x: 1708, y: -210, name: \"output\") property(Bool) output_7bfc22\n\n        instance(x: -317, y: 38) modulo_6f9a3e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 174, y: 40) equal_c0c63d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 146, y: 39) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -32, y: -33, name: \"value\") property(Number) value_a3c1e9\n\n            out(x: 1708, y: -210, name: \"output\") property(Bool) output_7bfc22\n\n            instance(x: 163, y: 39) modulo_ebf2a5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 178, y: 41) equal_d3c6d8 root.Std_k98ojb.Logic.Equal {}\n            input_5f1d35 -> modulo_ebf2a5.value\n            0 -> equal_d3c6d8.right\n            modulo_ebf2a5.result -> equal_d3c6d8.left\n            not_75283f.result -> output_7bfc22\n        } -> is_even.execute\n    }\n\n    \n\n    instance(x: -64, y: -17) is_even_9e98a1 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -19, y: 64, name: \"input\") property(Number) input_4f5b9d\n\n        out(x: 1923, y: 74, name: \"output\") property(Bool) output_1c7a57\n\n        instance(x: -73, y: 78) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1985, y: 72) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 1949, y: 70) equal_8c6a3b root.Std_k98ojb.Logic.Equal {}\n        modulo_c76d2b.result -> output_1c7a57\n        input_4f5c0e -> not_75283f.input\n        not_75283f.result -> equal_8c6a3b.predicate\n        0 -> equal_8c6a3b.right\n        modulo_c76d2b.value -> equal_8c6a3b.left\n    }\n\n    \n\n    instance(x: -14, y: -21) is_even_f0f4ec root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -56, y: 59, name: \"input\") property(Number) input_4e15d1\n\n        out(x: 1933, y: -209, name: \"output\") property(Bool) output_bf9a8b\n\n        instance(x: -295, y: -208, name: \"is_even\") Std.If {\n            in(x: -29, y: -20, name: \"input\") property(Number) input_5d6e25\n            out(x: 1861, y: -210, name: \"then\") trigger() then\n\n            out(x: 1893, y: -211, name: \"else\") trigger() else\n\n            out(x: 1930, y: -209, name: \"value\") property(Number) value\n        }\n        input_4e15d1 -> is_even.input\n        is_even.then -> output_bf9a8b\n        is_even.else -> output_bf9a8b\n    }\n\n    \n\n    instance(x: 185, y: -26) is_even_6c87b5 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -538, y: 23, name: \"input\") property(Number) input_0e74d4\n\n        out(x: 1938, y: 17, name: \"output\") property(Bool) output_b9f1a5\n\n        instance(x: 246, y: 13) modulo_d3bfb6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 198, y: -29) equal_7c8f6e root.Std_k98ojb.Logic.Equal {}\n        is_even_b9d1ad -> output_b9f1a5\n        input_0e74d4 -> modulo_d3bfb6.value\n        2 -> modulo_d3bfb6.divisor\n        equal_7c8f6e.left -> modulo_d3bfb6.result\n        true -> equal_7c8f6e.right\n    }\n\n    \n\n    instance(x: -34, y: 19) is_even_b9d1ad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -69, y: 35, name: \"number\") property(Number) num_6d2a34\n\n        out(x: 1518, y: -204, name: \"output\") property(Bool) output_b5f6c9\n\n        instance(x: 105, y: -207) modulo_56e66b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 185, y: 47) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 194, y: 44) isnumeric_d3d0c1 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: -23, y: 71) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        modulo_56e66b.result -> not_75283f\n        num_6d2a34 -> modulo_56e66b.value\n        isnumeric_d3d0c1.is_contained -> not_75283f.input\n        if_e19a62.then -> output_b5f6c9\n        0 -> if_e19a62.predicate\n        else -> output_b5f6c9\n    }\n\n    \n\n    instance(x: -294, y: -2) is_even_57e2d3 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -49, y: 24, name: \"number\") property(Number) num_3d5d4e\n\n        out(x: 1761, y: -208, name: \"output\") property(Bool) output_e6f2c7\n\n        instance(x: 115, y: -204, name: \"is_even\") Std.If {\n            in(x: -35, y: 26, name: \"input\") property(Boolean) predicate_4b1d0a\n            out(x: 1843, y: 24, name: \"then\") trigger() then\n\n            out(x: 1987, y: 59, name: \"else\") trigger() else\n\n            out(x: 1892, y: -15, name: \"value\") property(Number) value\n        }\n        num_3d5d4e -> is_even.input\n        is_even.then -> output_e6f2c7\n        is_even.else -> output_e6f2c7\n    }\n\n    \n\n    instance(x: 192, y: -23) is_even_f1bbfa root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -526, y: 451, name: \"input\") property(Number) input_4d0f8e\n\n        out(x: 1029, y: 39, name: \"output\") property(Bool) output_77c6b3\n\n        instance(x: -292, y: 442, name: \"is_even\") Std.If {\n            in(x: -30, y: -25, name: \"predicate\") property(Number) predicate_7a31d1\n            out(x: 193, y: 20, name: \"then\") trigger() then\n            out(x: 199, y: 17, name: \"else\") trigger() else\n            out(x: 1049, y: -19, name: \"value\") property(Number) value_8d2c7e\n\n            instance(x: 224, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            input_4d0f8e -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> value_8d2c7e\n        }\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_6a4d14 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -32, y: 35, name: \"input\") property(Number) input_9e5d3f\n\n        out(x: 1180, y: 11, name: \"output\") property(Bool) output_7b6c8a\n\n        instance(x: -191, y: 19) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 121, y: 25) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 157, y: 34) equal_1a0c7e root.Std_k98ojb.Logic.Equal {}\n        modulo_c76d2b.result -> output_7b6c8a\n        input_9e5d3f -> modulo_c76d2b.value\n        not_75283f.input -> equal_1a0c7e.left\n        equal_1a0c7e.right -> modulo_c76d2b.divisor\n        equal_1a0c7e.result -> output_7b6c8a\n    }\n\n    \n\n    instance(x: -44, y: 30) is_even_bf4d3b root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -527, y: 438, name: \"number\") property(Number) number_2d4a0e\n\n        out(x: 1279, y: -209, name: \"output\") property(Bool) output_e0f5c8\n\n        instance(x: -303, y: -205, name: \"transform to even/odd\") map_7b3df6 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 847, y: -207) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            0 -> modulo_c76d2b.divisor\n            current_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.result -> output_efbc78\n        } -> map_7b3df6.handler\n        number_2d4a0e -> map_7b3df6.items\n        map_7b3df6.output_list -> not_75283f.list\n        not_75283f.input -> output_e0f5c8\n    }\n\n    \n\n    instance(x: -67, y: -37) is_even_f21f44 root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -253, y: 167, name: \"string\") property(String) input_0\n\n        out(x: 509, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -274, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 1024, y: -2, name: \"result\") property(Any) result_5b9d7e\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_1 -> tolower_2e1444.input\n        contains_d42dce.result -> result_5b9d7e\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") find_first_repeated {\n        in(x: -253, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 1003, y: -2, name: \"result\") property(Any) result_e1d5c8\n\n        instance(x: 46, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 269, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_e1d5c8\n    }\n\n    \n\n    instance(x: 85, y: 59) ContainsA_3f9b55 root.main.find_first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") find_first_repeated_char {\n        in(x: -274, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 1021, y: -4, name: \"result\") property(Any) result_e5c7d3\n\n        instance(x: 0, y: 2) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_e5c7d3\n    }\n\n    \n\n    instance(x: 82, y: 55) ContainsZ_e54b7f root.main.find_first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") find_first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_3d8b5a\n\n        out(x: 1046, y: -2, name: \"result\") property(Any) result_1f0e85\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_3d8b5a -> tolower_2e1444.input\n        contains_d42dce.result -> result_1f0e85\n    }\n\n    \n\n    instance(x: -81, y: 169) find_first_repeated_char_f15bad root.main.find_first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -272, y: 0, name: \"string\") property(String) input_3d8a6e\n\n        out(x: 734, y: -1, name: \"output\") property(Any) output_a7c4e5\n\n        instance(x: 0, y: 2) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 255, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_3d8a6e -> tolower_2e1444.input\n        contains_d42dce.contains -> \"z\"\n        contains_d42dce.result -> output_a7c4e5\n    }\n\n    \n\n    instance(x: 98, y: 65) first_repeated_char_0f3bdf root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -290, y: 0, name: \"string\") property(String) input_5\n\n        out(x: 509, y: -2, name: \"result\") property(Any) result_9\n\n        instance(x: 43, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 278, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_5 -> tolower_2e1444.input\n        contains_d42dce.result -> result_9\n    }\n\n    \n\n    instance(x: 0, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -243, y: 173, name: \"string\") property(String) input_0\n\n        out(x: 1013, y: 22, name: \"result\") property(Any) result_0\n\n        instance(x: 41, y: 189) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -26, y: 20, name: \"map_6d1a4f\") Iteration.Map {}\n        instance(x: 261, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        map_6d1a4f.handler -> contains_d42dce.handler\n        contains_d42dce.contains -> result_0\n        map_6d1a4f.output_list -> result_0\n    }\n\n    \n\n    instance(x: 43, y: 179) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") find_first_repeated_char {\n        in(x: -349, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 1119, y: -2, name: \"result\") property(Any) result_6f4a3e\n\n        instance(x: 52, y: 18) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 246, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_1 -> tolower_2e1444.input\n        contains_d42dce.result -> result_6f4a3e\n    }\n\n    \n\n    instance(x: 67, y: 50) ContainsZ_e54b7f root.main.find_first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -342, y: 0, name: \"string\") property(String) input_4\n\n        out(x: 760, y: -2, name: \"result\") property(Any) result_e6e3d1\n\n        instance(x: 51, y: 70) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 266, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: -39, y: 257, name: \"map_9f3a5c\") map_9f3a5c = [first_repeated_char]\n        instance(x: 532, y: 147) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_4 -> tolower_2e1444.input\n        contains_d42dce.result -> equal_aabb6e.left\n        map_9f3a5c.first -> equal_aabb6e.right\n        1 -> map_9f3a5c.index\n        contains_d42dce.result -> equal_aabb6e.result\n        input_4 -> map_9f3a5c.input\n        map_9f3a5c.output_list -> result_e6e3d1\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -100, y: 3, name: \"list\") property(List) list_4d6a45\n\n        out(x: 456, y: 68, name: \"min\") property(Number) min_3c1e28\n        out(x: 462, y: 55, name: \"second_min\") property(Number) second_min_7f0b2f\n\n        instance(x: -74, y: 22) first_smallest root.Std_k98ojb.List.Min {}\n        instance(x: -76, y: 58) second_smallest_node root.Std_k98ojb.List.Min {}\n\n        list_4d6a45 -> first_smallest.items\n        first_smallest.min -> min_3c1e28\n\n        instance(x: 0, y: 56) ifexpression_9f67df root.Std_k98ojb.Std.IfExpression {\n            expression: \"first_smallest.result != null\"\n        }\n        getter(x: -70, y: 77, name: \"getter_4d3a1c\") getter_4d3a1c = second_smallest\n        setter(x: 52, y: 45, name: \"setter_e9f8b5\") setter_e9f8b5 = second_smallest\n        ifexpression_9f67df.then -> setter_e9f8b5.execute\n        first_smallest.result -> setter_e99d25.new_value\n        list_4d6a45 -> setter_e9e31c.new_value\n        ifexpression_9f67df.else -> setter_e9f8b5.execute\n        second_smallest_node.items -> min_3c1e28\n        first_smallest.result -> second_smallest_node.min\n        first_smallest.result -> second_min_7f0b2f\n    }\n\n    \n\n    instance(x: -42, y: 101) second_smallest_6d4a23 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -112, y: 1, name: \"list\") property(List) list_9d3e38\n\n        out(x: 515, y: 44, name: \"min\") property(Number) min_b6a5b2\n        out(x: 522, y: 23, name: \"second_min\") property(Number) second_min_96f4c7\n\n        instance(x: -304, y: 16) ifexpression_d7e1e root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == min\"\n        }\n        getter(x: -434, y: 31, name: \"getter_0d45cd\") getter_0d45cd = second_min\n        setter(x: 303, y: 16, name: \"setter_6c2f8e\") setter_6c2f8e = min_b6a5b2\n        setter(x: 304, y: -43, name: \"setter_d7f3d9\") setter_d7f3d9 = second_min_96f4c7\n        list_9d3e38 -> ifexpression_d7e1e.gen_0\n        min_b6a5b2 -> ifexpression_d7e1e.then\n        list_9d3e38[1] -> ifexpression_d7e1e.then\n        setter_6c2f8e.continue -> setter_d7f3d9.execute\n        list_9d3e38[1] -> setter_d7f3d9.new_value\n        ifexpression_d7e1e.else -> setter_d7f3d9.execute\n        ifexpression_d7e1e.then -> setter_6c2f8e.execute\n    }\n\n    \n\n    instance(x: -53, y: 546) second_smallest_b4a95b root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -274, y: 0, name: \"list\") property(List) list_8d3b9f\n\n        out(x: 530, y: 85, name: \"min\") property(Number) min_ab2c71\n        out(x: 555, y: 93, name: \"second_min\") property(Number) second_min_b6a4e5\n\n        instance(x: -159, y: 20) first_smallest_7f8d1b root.Std_k98ojb.List.Min {}\n        instance(x: -346, y: 56) second_smallest_node root.Std_k98ojb.List.Min {}\n        list_8d3b9f -> first_smallest_7f8d1b.items\n        first_smallest_7f8d1b.min -> min_ab2c71\n        List.Slice(root.Std_k98ojb.List.Slice, 0, -1) -> second_smallest_node.items\n        second_smallest_node.min -> second_min_b6a4e5\n    }\n\n    \n\n    instance(x: 320, y: 579) second_smallest_3d2c7f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -454, y: 3, name: \"list\") property(List) list_9e15f6\n\n        out(x: 509, y: 23, name: \"min\") property(Number) min_2a8b5d\n        out(x: 515, y: 20, name: \"second_min\") property(Number) second_min_4c7dd1\n\n        instance(x: -103, y: 19) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {}\n        getter(x: -155, y: 42, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        list_9e15f6 -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> min_2a8b5d\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        list_9e15f6[1] -> setter_37db7f.new_value\n        setter_1cedb2.continue -> second_min_4c7dd1.execute\n        setter_37db7f.continue -> second_min_4c7dd1.execute\n    }\n\n    \n\n    instance(x: -174, y: 0) second_smallest_node root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -104, y: 0, name: \"list\") property(List) list_a4f71d\n\n        out(x: 446, y: -114, name: \"min\") property(Number) min_5c8b1a\n        out(x: 456, y: -92, name: \"second_min\") property(Number) second_min_5c8b1a\n\n        instance(x: -287, y: -67, name: \"list_min_node\") list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: -294, y: 26, name: \"second_min_node\") list_min_node.second_min_node second_smallest_node {}\n\n        list_a4f71d -> list_min_node.items\n        list_min_node.min -> min_5c8b1a\n        list_min_node.first_item -> second_min_node.item\n        list_min_node.second_item -> second_min_node.item\n    }\n\n    \n\n    instance(x: -105, y: 0) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -445, y: 3, name: \"list\") property(List) list_8f5e6a\n\n        out(x: 471, y: -1, name: \"second_min\") property(Number) second_min_a4d65c\n\n        instance(x: 0, y: 0) find_second_smallest_0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -305, y: 16, name: \"elem\") property(Number) elem_d8f6e5\n\n            out(x: 517, y: 26, name: \"bool\") property(Bool) bool_1d7c9b\n\n            instance(x: 92, y: 21) min_5f3a4b root.Std_k98ojb.List.Min {}\n            instance(x: 314, y: 27) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            min_5f3a4b.result -> notequal_807ffd.left\n            1 -> notequal_807ffd.divisor\n            elem_d8f6e5 -> notequal_807ffd.value\n            notequal_807ffd.result -> bool_1d7c9b\n        } -> find_second_smallest_0.predicate\n        list_8f5e6a -> find_second_smallest_0.items\n        find_second_smallest_0.item -> second_min_a4d65c\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_3d0baf root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -446, y: 2, name: \"list\") property(List) list_a1e4d8\n\n        out(x: 512, y: -106, name: \"second_min\") property(Number) second_min_6c758f\n\n        instance(x: 0, y: 0) sort_5b3a2b root.Std_k98ojb.List.Sort {}\n        instance(x: 394, y: 46, name: \"min\") property(Number) min_1d14e4\n        instance(x: 436, y: -44, name: \"second_min\") property(Number) second_min_6c758f\n\n        list_a1e4d8 -> sort_5b3a2b.items\n        sort_5b3a2b.result -> min_1d14e4\n        List.GetAt(min_1d14e4, 1) -> second_min_6c758f\n    }\n\n    \n\n    instance(x: -28, y: 536) second_smallest_f0ac7d root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -281, y: 23, name: \"list\") property(List) list_9f6a3d\n\n        out(x: 512, y: -111, name: \"min\") property(Number) min_a9c4e5\n        out(x: 514, y: -110, name: \"second_min\") property(Number) second_min_b93bfc\n\n        instance(x: -105, y: -113, name: \"first_smallest\") property(Number) first_smallest_7fdd71 = list_9f6a3d[0]\n        instance(x: 341, y: -111, name: \"second_smallest_node\") Std_k98ojb.List.Min {}\n        list_9f6a3d -> second_smallest_node.items\n        second_smallest_node.min -> second_min_b93bfc\n        first_smallest_7fdd71 -> min_a9c4e5\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -928, y: 2, name: \"list\") property(List) list_4f8a5d\n\n        out(x: 594, y: 67, name: \"second_min\") property(Number) second_min_6b7c9e\n\n        instance(x: 0, y: 0) min_3bb1d0 root.Std_k98ojb.List.Min {}\n        instance(x: -416, y: 36, name: \"second_min_node\") root.Std_k98ojb.List.Min {}\n\n        list_4f8a5d -> min_3bb1d0.items\n        min_3bb1d0.min -> second_min_6b7c9e\n\n        instance(x: -103, y: 26) ifexpression_9a83ab root.Std_k98ojb.Std.IfExpression {\n            expression: \"min_3bb1d0.value < list_4f8a5d[1]\"\n        }\n        min_3bb1d0 -> ifexpression_9a83ab.gen_0\n        list_4f8a5d[1] -> ifexpression_9a83ab.gen_1\n        second_min_node.min -> second_min_6b7c9e\n        ifexpression_9a83ab.then -> second_min_node.execute\n        min_3bb1d0.value -> second_min_node.new_value\n        list_4f8a5d[1] -> second_min_node.new_value\n        ifexpression_9a83ab.else -> second_min_node.execute\n    }\n\n    \n\n    instance(x: -54, y: 546) second_smallest_e2b3e0 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -103, y: 14, name: \"list\") property(List) list_3f8a0e\n\n        out(x: 451, y: 29, name: \"second_min\") property(Number) second_min_a4d6c9\n\n        instance(x: 0, y: 0) min_node root.Std_k98ojb.List.Min {}\n        instance(x: -209, y: 35) ifexpression_2f8e31 root.Std_k98ojb.Std.IfExpression {\n            expression: \"min_node.min == list_3f8a0e[0]\"\n        }\n        instance(x: -436, y: 30) second_min_node root.Std_k98ojb.List.Min {}\n        min_node -> list_3f8a0e.items\n        ifexpression_2f8e31.then -> second_min_node.items\n        list_3f8a0e[1] -> second_min_node.items\n        min_node.min -> second_min_a4d6c9\n    }\n\n    \n\n    instance(x: -209, y: 70) second_smallest_9b0d15 root.main.second_smallest {}\n}"
            ]
        }
    }
]