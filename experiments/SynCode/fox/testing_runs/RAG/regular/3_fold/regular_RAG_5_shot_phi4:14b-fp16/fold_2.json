[
    {
        "experiment_name": "regular_RAG_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15910,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) intersection_6a9b7e root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_6a9b7e.left\n        list2_c62075 -> intersection_6a9b7e.right\n        intersection_6a9b7e.intersect -> output_5bbcd7\n    }\n\n    \n\n    instance(x: -293, y: -5) common_element_7a4dad root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if the two lists have at least one common element.\") common_element {\n        in(x: -437, y: -226, name: \"list1\") property(List) list1_9b1e3d\n        in(x: -425, y: -18, name: \"list2\") property(List) list2_3a1f2e\n\n        out(x: 1241, y: -12, name: \"output\") property(Bool) output_6b9d8f\n\n        instance(x: 115, y: -206) contains_5c5e0e root.Std_k98ojb.List.Contains {}\n        instance(x: 680, y: -212) if_5b6d87 root.Std_k98ojb.Std.If {}\n        instance(x: 1108, y: -217) not_6c5f9f root.Std_k98ojb.Logic.Not {}\n        instance(x: 1012, y: -17) contains_6f8f6d root.Std_k98ojb.List.Contains {}\n        list1_9b1e3d -> contains_5c5e0e.list\n        list2_3a1f2e -> contains_5c5e0e.item\n        contains_5c5e0e.is_contained -> if_5b6d87.input\n        if_5b6d87.then -> not_6c5f9f.execute\n        if_5b6d87.else -> output_6b9d8f\n        not_6c5f9f.result -> output_6b9d8f\n        list2_3a1f2e -> contains_6f8f6d.list\n        list1_9b1e3d -> contains_6f8f6d.item\n        contains_6f8f6d.is_contained -> if_5b6d87.value\n    }\n\n    \n\n    instance(x: -334, y: -12) common_element_6a4b6d root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if two lists have at least one common element.\") common_element {\n        in(x: -471, y: -224, name: \"list1\") property(List) list1_9c4e5f\n        in(x: -482, y: 23, name: \"list2\") property(List) list2_4e2e9e\n\n        out(x: 1233, y: 4, name: \"output\") property(Bool) output_8c3e9e\n\n        instance(x: 763, y: 88) intersection_7f4b0a root.Std_k98ojb.Sets.Intersection {}\n        list1_9c4e5f -> intersection_7f4b0a.left\n        list2_4e2e9e -> intersection_7f4b0a.right\n        instance(x: 1028, y: 107) notempty_1d1e7d root.Std_k98ojb.List.NotEmpty {}\n        intersection_7f4b0a.intersect -> notempty_1d1e7d.list\n        notempty_1d1e7d.isEmpty -> output_8c3e9e\n    }\n\n    \n\n    instance(x: -288, y: -4) common_element_1e4f2c root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -467, y: -228, name: \"list1\") property(List) list1_5d7f5f\n        in(x: -483, y: 36, name: \"list2\") property(List) list2_4e3f48\n\n        out(x: 1229, y: 15, name: \"output\") property(Bool) output_5d9f1e\n\n        instance(x: 750, y: 103) ifexpression_4f8d7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous || current\"\n        }\n        getter(x: 332, y: 166, name: \"getter_7c4f5f\") getter_7c4f5f = previous\n        setter(x: 678, y: -312, name: \"setter_5f1e7f\") setter_5f1e7f = previous\n        instance(x: 322, y: -12) for_5e8b2f root.Std_k98ojb.Std.For {}\n        setter(x: -1, y: -119, name: \"setter_5f1e7f\") setter_9f1c1f = previous\n        instance(x: -274, y: -33) contains_7e6d5c root.Std_k98ojb.List.Contains {}\n        ifexpression_4f8d7c.else -> output_5d9f1e\n        ifexpression_4f8d7c.value -> output_5d9f1e\n        ifexpression_4f8d7c.then -> setter_5f1e7f.execute\n        list1_5d7f5f -> for_5e8b2f.items\n        for_5e8b2f.item -> ifexpression_4f8d7c.gen_2\n        for_5e8b2f.index -> ifexpression_4f8d7c.gen_0\n        getter_7c4f5f.value -> ifexpression_4f8d7c.gen_1\n        for_5e8b2f.onItem -> ifexpression_4f8d7c.execute\n        for_5e8b2f.done -> output_5d9f1e\n        for_5e8b2f.item -> setter_5f1e7f.new_value\n        list2_4e3f48 -> contains_7e6d5c.list\n        for_5e8b2f.item -> contains_7e6d5c.item\n        contains_7e6d5c.is_contained -> ifexpression_4f8d7c.gen_1\n        contains_7e6d5c.is_contained -> ifexpression_4f8d7c.gen_2\n        setter_9f1c1f.continue -> for_5e8b2f.next\n        setter_9f1c1f.execute -> for_5e8b2f.reset\n    }\n\n    \n\n    instance(x: 15, y: -175) has_common_7b5d9e root.main.has_common {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if two lists have at least one common element.\") common_element {\n        in(x: -459, y: -236, name: \"list1\") property(List) list1_7a1f6c\n        in(x: -477, y: 28, name: \"list2\") property(List) list2_6f4c6e\n\n        out(x: 1233, y: 6, name: \"output\") property(Bool) output_8e6f4d\n\n        instance(x: 768, y: 91) ifexpression_9e6c8f root.Std_k98ojb.Std.IfExpression {\n            expression: \"contains\"\n        }\n        instance(x: 320, y: -20) for_4b8d72 root.Std_k98ojb.Std.For {}\n        instance(x: 324, y: 153) if_1a7b3c root.Std_k98ojb.Std.If {}\n        instance(x: -271, y: -37) contains_5a3b6c root.Std_k98ojb.List.Contains {}\n        ifexpression_9e6c8f.value -> output_8e6f4d\n        ifexpression_9e6c8f.then -> if_1a7b3c.execute\n        ifexpression_9e6c8f.else -> output_8e6f4d\n        list1_7a1f6c -> for_4b8d72.items\n        for_4b8d72.item -> ifexpression_9e6c8f.gen_0\n        for_4b8d72.onItem -> ifexpression_9e6c8f.execute\n        for_4b8d72.done -> output_8e6f4d\n        if_1a7b3c.value -> ifexpression_9e6c8f.gen_1\n        if_1a7b3c.then -> contains_5a3b6c.execute\n        if_1a7b3c.else -> output_8e6f4d\n        list2_6f4c6e -> contains_5a3b6c.list\n        if_1a7b3c.input -> contains_5a3b6c.item\n        contains_5a3b6c.is_contained -> if_1a7b3c.predicate\n        contains_5a3b6c.continue -> for_4b8d72.next\n    }\n\n    \n\n    instance(x: 15, y: -179) common_element_8e8d3f root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -365, y: -238, name: \"list1\") property(List) list1_9b6b7e\n        in(x: -377, y: 26, name: \"list2\") property(List) list2_4d8d6c\n\n        out(x: 1215, y: 23, name: \"output\") property(Bool) output_6f8e4f\n\n        instance(x: 1015, y: 78) contains_4c8c2d root.Std_k98ojb.List.Contains {}\n        instance(x: 679, y: -11) intersection_9f5f3c root.Std_k98ojb.Sets.Intersection {}\n        list1_9b6b7e -> intersection_9f5f3c.left\n        list2_4d8d6c -> intersection_9f5f3c.right\n        intersection_9f5f3c.intersection -> contains_4c8c2d.list\n        list1_9b6b7e -> contains_4c8c2d.item\n        contains_4c8c2d.is_contained -> output_6f8e4f\n    }\n\n    \n\n    instance(x: -334, y: -67) common_element_4a1b8e root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -417, y: -209, name: \"list1\") property(List) list1_4c3e0c\n        in(x: -425, y: -2, name: \"list2\") property(List) list2_3b1d1c\n\n        out(x: 1233, y: -208, name: \"output\") property(Bool) output_7f9e76\n\n        instance(x: -158, y: -208, name: \"intersection\") intersection_7f8f2a root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1115, y: -207) notempty_7d5f0c root.Std_k98ojb.List.NotEmpty {}\n        list1_4c3e0c -> intersection_7f8f2a.left\n        list2_3b1d1c -> intersection_7f8f2a.right\n        intersection_7f8f2a.intersect -> notempty_7d5f0c.list\n        notempty_7d5f0c.isEmpty -> output_7f9e76\n    }\n\n    \n\n    instance(x: -310, y: -14) common_element_9f3e0f root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -459, y: -212, name: \"list1\") property(List) list1_8d5c3f\n        in(x: -466, y: -12, name: \"list2\") property(List) list2_6f9d4f\n\n        out(x: 1227, y: -191, name: \"output\") property(Bool) output_6a1d0f\n\n        instance(x: 761, y: -169) intersection_8e7c2e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1083, y: -171) notempty_1f8c1e root.Std_k98ojb.List.NotEmpty {}\n        list1_8d5c3f -> intersection_8e7c2e.left\n        list2_6f9d4f -> intersection_8e7c2e.right\n        intersection_8e7c2e.intersect -> notempty_1f8c1e.list\n        notempty_1f8c1e.isEmpty -> output_6a1d0f\n    }\n\n    \n\n    instance(x: -261, y: -5) common_element_3a1c9c root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if the two lists have at least one common element.\") has_common_element {\n        in(x: -488, y: -238, name: \"list1\") property(List) list1_6e2d6d\n        in(x: -498, y: 29, name: \"list2\") property(List) list2_7a4b4e\n\n        out(x: 1228, y: 5, name: \"output\") property(Bool) output_9b8b2c\n\n        instance(x: 750, y: 93) ifexpression_8d7b4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 332, y: 160, name: \"getter_6d8c1d\") getter_6d8c1d = previous\n        setter(x: 677, y: -313, name: \"setter_3e4b5c\") setter_3e4b5c = previous\n        instance(x: 319, y: -20) for_9e7d4e root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_3e4b5c\") setter_1b6c0f = previous\n        instance(x: -274, y: -35) getat_1f2b3d root.Std_k98ojb.List.GetAt {}\n        ifexpression_8d7b4c.else -> output_9b8b2c\n        ifexpression_8d7b4c.value -> output_9b8b2c\n        ifexpression_8d7b4c.then -> setter_3e4b5c.execute\n        list1_6e2d6d -> for_9e7d4e.items\n        for_9e7d4e.item -> ifexpression_8d7b4c.gen_2\n        for_9e7d4e.index -> ifexpression_8d7b4c.gen_0\n        getter_6d8c1d.value -> ifexpression_8d7b4c.gen_1\n        for_9e7d4e.onItem -> ifexpression_8d7b4c.execute\n        for_9e7d4e.done -> output_9b8b2c\n        for_9e7d4e.item -> setter_3e4b5c.new_value\n        list1_6e2d6d -> getat_1f2b3d.list\n        0 -> getat_1f2b3d.index\n        getat_1f2b3d.itemAtIndex -> setter_1b6c0f.new_value\n        list2_7a4b4e -> contains_7c2f6c.list\n        setter_1b6c0f.continue -> for_9e7d4e.reset\n        setter_3e4b5c.continue -> for_9e7d4e.next\n        contains_7c2f6c.is_contained -> ifexpression_8d7b4c.gen_3\n        for_9e7d4e.item -> contains_7c2f6c.item\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_3f9b2a root.main.has_common_element {}\n    instance(x: 334, y: -120) contains_7c2f6c root.Std_k98ojb.List.Contains {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if two lists have at least one common element.\") common_element {\n        in(x: -427, y: -213, name: \"list1\") property(List) list1_5c7f8f\n        in(x: -441, y: -12, name: \"list2\") property(List) list2_6d0b0e\n\n        out(x: 1215, y: -210, name: \"output\") property(Bool) output_6d0b0e\n\n        instance(x: -182, y: -206, name: \"intersection\") intersection_8f2d1c root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1061, y: -204) notempty_7d5d2e root.Std_k98ojb.List.NotEmpty {}\n        list1_5c7f8f -> intersection_8f2d1c.left\n        list2_6d0b0e -> intersection_8f2d1c.right\n        intersection_8f2d1c.intersect -> notempty_7d5d2e.list\n        notempty_7d5d2e.isEmpty -> output_6d0b0e\n    }\n\n    \n\n    instance(x: -313, y: -9) common_element_8f2d1c root.main.common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -523, y: -234, name: \"list\") property(List) list_7c8d8c\n\n        out(x: 1267, y: -213, name: \"output\") property(Bool) output_2e8d1e\n\n        instance(x: -303, y: -205, name: \"filter list\") filter_5b8a4d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"map numbers to true/false\") map_4e7f48 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_3e3e6e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_c2f3a5 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_3e3e6e -> sub_c2f3a5.first\n            _index_769593 -> sub_c2f3a5.second\n            sub_c2f3a5.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_5b8a4d.handler\n        list_7c8d8c -> filter_5b8a4d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) sub_5f3e4c root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) notequal_4c3e6d root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_5f3e4c.first\n            sub_5f3e4c.second -> sub_5f3e4c.first\n            sub_5f3e4c.result -> notequal_4c3e6d.left\n            1 -> notequal_4c3e6d.right\n            notequal_4c3e6d.result -> bool_4524be\n        } -> map_4e7f48.handler\n        filter_5b8a4d.output_list -> map_4e7f48.items\n        map_4e7f48.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_2e8d1e\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_numbers_8e8f8d root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -465, y: -234, name: \"list\") property(List) list_5f4f5e\n\n        out(x: 1228, y: -215, name: \"output\") property(Bool) output_1e8d3e\n\n        instance(x: 752, y: 94) ifexpression_4a4c9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current - previous == 1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_6f7e1d\") getter_6f7e1d = previous\n        setter(x: 679, y: -314, name: \"setter_8e3b4e\") setter_8e3b4e = previous\n        instance(x: 321, y: -21) for_7f1f3d root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_8e3b4e\") setter_6c8b9e = previous\n        instance(x: -275, y: -36) getat_9e2f8f root.Std_k98ojb.List.GetAt {}\n        ifexpression_4a4c9f.else -> continue_7c8c0c\n        ifexpression_4a4c9f.value -> output_1e8d3e\n        ifexpression_4a4c9f.then -> setter_8e3b4e.execute\n        list_5f4f5e -> for_7f1f3d.items\n        for_7f1f3d.item -> ifexpression_4a4c9f.gen_2\n        for_7f1f3d.index -> ifexpression_4a4c9f.gen_0\n        getter_6f7e1d.value -> ifexpression_4a4c9f.gen_1\n        for_7f1f3d.onItem -> ifexpression_4a4c9f.execute\n        for_7f1f3d.done -> continue_7c8c0c\n        for_7f1f3d.item -> setter_8e3b4e.new_value\n        list_5f4f5e -> getat_9e2f8f.list\n        0 -> getat_9e2f8f.index\n        getat_9e2f8f.itemAtIndex -> setter_6c8b9e.new_value\n        execute_6b6b4d -> setter_6c8b9e.execute\n        setter_6c8b9e.continue -> for_7f1f3d.reset\n        setter_8e3b4e.continue -> for_7f1f3d.next\n    }\n\n    \n\n    instance(x: 11, y: -177) is_consecutive_7e9b9c root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -489, y: -6, name: \"list\") property(List) list_5e9c3e\n\n        out(x: 1244, y: 3, name: \"output\") property(Bool) output_3d4e2e\n\n        instance(x: 755, y: 36) ifexpression_3e3e3e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current - previous == 1\"\n        }\n        getter(x: 334, y: 159, name: \"getter_1e2e4b\") getter_1e2e4b = previous\n        setter(x: 679, y: -314, name: \"setter_3e1c2c\") setter_3e1c2c = previous\n        instance(x: 321, y: -19) for_9a8a9a root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -120, name: \"setter_3e1c2c\") setter_7a8b2a = previous\n        instance(x: -275, y: -34) getat_8a2b9a root.Std_k98ojb.List.GetAt {}\n        ifexpression_3e3e3e.else -> setter_3e1c2c.execute\n        ifexpression_3e3e3e.value -> output_3d4e2e\n        ifexpression_3e3e3e.then -> setter_3e1c2c.execute\n        list_5e9c3e -> for_9a8a9a.items\n        for_9a8a9a.item -> ifexpression_3e3e3e.gen_2\n        for_9a8a9a.index -> ifexpression_3e3e3e.gen_0\n        getter_1e2e4b.value -> ifexpression_3e3e3e.gen_1\n        for_9a8a9a.onItem -> ifexpression_3e3e3e.execute\n        for_9a8a9a.done -> setter_3e1c2c.execute\n        for_9a8a9a.item -> setter_3e1c2c.new_value\n        list_5e9c3e -> getat_8a2b9a.list\n        0 -> getat_8a2b9a.index\n        getat_8a2b9a.itemAtIndex -> setter_7a8b2a.new_value\n        setter_7a8b2a.continue -> for_9a8a9a.reset\n        setter_3e1c2c.continue -> for_9a8a9a.next\n    }\n\n    \n\n    instance(x: 18, y: -178) is_consecutive_7e8b2a root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -535, y: -237, name: \"list\") property(List) list_5b1f0d\n\n        out(x: 1237, y: -238, name: \"output\") property(Bool) output_6d5f7e\n\n        instance(x: 764, y: -233) ifexpression_3d5c3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current - previous == 1\"\n        }\n        instance(x: 322, y: -19) for_d8d6a4 root.Std_k98ojb.Std.For {}\n        instance(x: 322, y: 156) if_4f4b3e root.Std_k98ojb.Std.If {}\n        instance(x: 679, y: -313, name: \"setter\") setter_9d4f1c root.Std_k98ojb.Setting.Setter {\n            name: \"previous\"\n        }\n        instance(x: -0, y: -121, name: \"setter\") setter_38e107 root.Std_k98ojb.Setting.Setter {\n            name: \"previous\"\n        }\n        instance(x: -275, y: -35, name: \"getter\") getter_ce2a48 root.Std_k98ojb.Setting.Getter {\n            name: \"previous\"\n        }\n        getter_ce2a48.value -> ifexpression_3d5c3c.gen_1\n        ifexpression_3d5c3c.then -> setter_9d4f1c.execute\n        ifexpression_3d5c3c.value -> output_6d5f7e\n        ifexpression_3d5c3c.else -> if_4f4b3e.execute\n        if_4f4b3e.else -> output_6d5f7e\n        list_5b1f0d -> for_d8d6a4.items\n        for_d8d6a4.item -> ifexpression_3d5c3c.gen_2\n        for_d8d6a4.index -> ifexpression_3d5c3c.gen_0\n        for_d8d6a4.onItem -> ifexpression_3d5c3c.execute\n        for_d8d6a4.done -> if_4f4b3e.input\n        for_d8d6a4.item -> setter_9d4f1c.new_value\n        list_5b1f0d -> getter_ce2a48.list\n        0 -> getter_ce2a48.index\n        getter_ce2a48.valueAtIndex -> setter_38e107.new_value\n        if_4f4b3e.then -> output_6d5f7e\n        setter_38e107.continue -> for_d8d6a4.reset\n        setter_9d4f1c.continue -> for_d8d6a4.next\n    }\n\n    \n\n    instance(x: 20, y: -180) consecutive_8b4a2d root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -459, y: -209, name: \"list\") property(List) list_7a7f2f\n\n        out(x: 1163, y: -206, name: \"output\") property(Bool) output_7c6f4c\n\n        instance(x: 0, y: -207, name: \"is_sorted\") issort_list_8e9d8e root.main.issort_list {}\n        instance(x: 723, y: -206) not_8e6e8a root.Std_k98ojb.Logic.Not {}\n        instance(x: 1018, y: -208) map_7b5c9f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1120, y: -207) reduce_4b6c1a root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"Math.Add(left, right)\"\n        }\n        instance(x: 1120, y: -107) ifexpression_6d7f4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"Math.Sub(previous, current) == 1\"\n        }\n        instance(x: 1120, y: 43) not_9a8a1a root.Std_k98ojb.Logic.Not {}\n        instance(x: 1120, y: 138) ifexpression_7a9f6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"Math.Sub(previous, current) == 1\"\n        }\n        instance(x: 1120, y: 233) not_5e8f8e root.Std_k98ojb.Logic.Not {}\n        list_7a7f2f -> issort_list_8e9d8e.list_ec88cd\n        issort_list_8e9d8e.output_5bbcd7 -> not_8e6e8a.input\n        not_8e6e8a.result -> map_7b5c9f.handler\n        list_7a7f2f -> map_7b5c9f.items\n        map_7b5c9f.output_list -> reduce_4b6c1a.items\n        0 -> reduce_4b6c1a.initial\n        reduce_4b6c1a.result -> ifexpression_6d7f4c.gen_1\n        ifexpression_6d7f4c.value -> not_9a8a1a.input\n        not_9a8a1a.result -> ifexpression_7a9f6f.gen_0\n        ifexpression_7a9f6f.value -> not_5e8f8e.input\n        not_5e8f8e.result -> ifexpression_7a9f6f.gen_1\n        map_7b5c9f.output_list -> ifexpression_7a9f6f.handler\n        ifexpression_7a9f6f.then -> ifexpression_6d7f4c.execute\n        ifexpression_7a9f6f.else -> ifexpression_6d7f4c.execute\n        ifexpression_6d7f4c.then -> reduce_4b6c1a.next\n        ifexpression_6d7f4c.else -> reduce_4b6c1a.next\n        reduce_4b6c1a.done -> not_8e6e8a.continue\n        ifexpression_6d7f4c.value -> output_7c6f4c\n    }\n\n    \n\n    instance(x: -62, y: -2) is_consecutive_1f7f4e root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"list\") property(List) list_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) consecutive_numbers_3a4f5b root.main.consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -529, y: -234, name: \"list\") property(List) list_3c9b6f\n\n        out(x: 1258, y: -239, name: \"output\") property(Bool) output_3b5e0f\n\n        instance(x: 1066, y: -242) and_5b9d6f root.Std_k98ojb.Logic.And {}\n        instance(x: 762, y: -240) for_1d3e1c root.Std_k98ojb.Std.For {}\n        instance(x: 1055, y: -243) notequal_6f3d0e root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 755, y: -238) sub_4c1d6f root.Std_k98ojb.Math.Sub {}\n        instance(x: 452, y: -239) and_3c6f6f root.Std_k98ojb.Logic.And {}\n        instance(x: 0, y: -239) getat_1c7e3f root.Std_k98ojb.List.GetAt {}\n        instance(x: -284, y: -239) getat_1f7f4f root.Std_k98ojb.List.GetAt {}\n        list_3c9b6f -> for_1d3e1c.items\n        for_1d3e1c.item -> getat_1c7e3f.list\n        1 -> getat_1c7e3f.index\n        getat_1c7e3f.itemAtIndex -> sub_4c1d6f.first\n        list_3c9b6f -> getat_1f7f4f.list\n        for_1d3e1c.index -> getat_1f7f4f.index\n        getat_1f7f4f.itemAtIndex -> sub_4c1d6f.second\n        sub_4c1d6f.result -> notequal_6f3d0e.left\n        1 -> notequal_6f3d0e.right\n        notequal_6f3d0e.result -> and_3c6f6f.left\n        and_3c6f6f.right -> for_1d3e1c.next\n        for_1d3e1c.onItem -> and_3c6f6f.execute\n        for_1d3e1c.done -> and_5b9d6f.right\n        and_3c6f6f.result -> and_5b9d6f.left\n        and_5b9d6f.result -> output_3b5e0f\n    }\n\n    \n\n    instance(x: -67, y: -7) consecutive_9c3d8f root.main.consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -493, y: -206, name: \"list\") property(List) list_9d5d97\n\n        out(x: 1208, y: -209, name: \"output\") property(Bool) output_5b5f9d\n\n        instance(x: 1012, y: -207) and_7e9e51 root.Std_k98ojb.Logic.And {}\n        instance(x: 728, y: -209) sub_3f5c3f root.Std_k98ojb.Math.Sub {}\n        instance(x: 451, y: -206) map_9c8e2e root.Std_k98ojb.Iteration.Map {}\n        instance(x: 168, y: -207) for_8f3b9d root.Std_k98ojb.Std.For {}\n        instance(x: -269, y: -203) getat_9a9c1d root.Std_k98ojb.List.GetAt {}\n        instance(x: -0, y: -120) getat_3f3b8e root.Std_k98ojb.List.GetAt {}\n        instance(x: -271, y: -64) getat_4f8c6f root.Std_k98ojb.List.GetAt {}\n        instance(x: -1, y: -77) getat_7e9b9c root.Std_k98ojb.List.GetAt {}\n        for_8f3b9d.item -> sub_3f5c3f.first\n        for_8f3b9d.item -> map_9c8e2e.current\n        getat_9a9c1d.itemAtIndex -> sub_3f5c3f.second\n        getat_3f3b8e.itemAtIndex -> map_9c8e2e.handler.result\n        for_8f3b9d.index -> getat_9a9c1d.index\n        for_8f3b9d.index -> getat_3f3b8e.index\n        getat_4f8c6f.itemAtIndex -> for_8f3b9d.items\n        getat_7e9b9c.itemAtIndex -> for_8f3b9d.reset\n        1 -> getat_4f8c6f.index\n        0 -> getat_7e9b9c.index\n        list_9d5d97 -> getat_4f8c6f.list\n        list_9d5d97 -> getat_7e9b9c.list\n        sub_3f5c3f.result -> and_7e9e51.left\n        map_9c8e2e.output_list -> and_7e9e51.right\n        1 -> and_7e9e51.right\n        and_7e9e51.result -> output_5b5f9d\n        for_8f3b9d.onItem -> map_9c8e2e.execute\n        for_8f3b9d.done -> output_5b5f9d\n    }\n\n    \n\n    instance(x: -76, y: -4) is_consecutive_7f7c2f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -505, y: -6, name: \"list\") property(List) list_6b4e2c\n\n        out(x: 1145, y: -1, name: \"output\") property(Bool) output_9b9b3c\n\n        instance(x: 1057, y: -8) all_8e1d6c root.Std_k98ojb.Query.All {\n            where: \"left + 1 == right\"\n        }\n        instance(x: 743, y: 20) zip_1b8b8c root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 346, y: -1) map_9d1e4e root.Std_k98ojb.Iteration.Map {}\n        instance(x: -15, y: -9) generateRange_9b3b1c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: -293, y: 17) filter_4a9c8f root.Std_k98ojb.Query.Filter {\n            where: \"it < length\"\n        }\n        instance(x: -288, y: -21) length_7c6a9c root.Std_k98ojb.List.Length {}\n        list_6b4e2c -> map_9d1e4e.items\n        func() {\n            in(x: -184, y: -16, name: \"current\") property(Number) current_3e1b6f\n\n            out(x: 523, y: -4, name: \"index\") property(Number) index_6f5d7c\n\n            instance(x: 223, y: -9) sub_3b4b4b root.Std_k98ojb.Math.Sub {}\n            0 -> sub_3b4b4b.second\n            current_3e1b6f -> sub_3b4b4b.first\n            sub_3b4b4b.result -> index_6f5d7c\n        } -> map_9d1e4e.handler\n        map_9d1e4e.output_list -> zip_1b8b8c.left\n        map_9d1e4e.output_list -> zip_1b8b8c.right\n        list_6b4e2c -> zip_1b8b8c.left\n        list_6b4e2c -> zip_1b8b8c.right\n        zip_1b8b8c.zipped -> all_8e1d6c.list\n        length_7c6a9c.length -> generateRange_9b3b1c.to\n        0 -> generateRange_9b3b1c.from\n        generateRange_9b3b1c.list -> filter_4a9c8f.list\n        filter_4a9c8f.result -> all_8e1d6c.list\n        all_8e1d6c.result -> output_9b9b3c\n    }\n\n    \n\n    instance(x: -64, y: -179) consecutive_numbers_8c5b8c root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -529, y: -213, name: \"list\") property(List) list_7a5c7f\n\n        out(x: 1279, y: -208, name: \"output\") property(Bool) output_8c6d0e\n\n        instance(x: -303, y: -205, name: \"filter\") filter_2b3e9f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_9a3e8f root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"map\") map_1a7d5d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_3f8d8d root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_6f4b1c\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_6d8f6f\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_8e6f5e\n\n            instance(x: 226, y: 56) sub_8d7b2a root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_8f8b5f root.Std_k98ojb.Logic.NotEqual {}\n            sub_8d7b2a.second -> sub_8d7b2a.first\n            _index_6d8f6f -> sub_8d7b2a.second\n            1 -> sub_8d7b2a.first\n            sub_8d7b2a.result -> notequal_8f8b5f.left\n            current_6f4b1c -> notequal_8f8b5f.right\n            notequal_8f8b5f.result -> output_8e6f5e\n        } -> filter_2b3e9f.handler\n        list_7a5c7f -> filter_2b3e9f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_9f2b1c\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_5f4b2e\n\n            instance(x: 74, y: -23) sub_9d7b2a root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) notequal_8f8b5f root.Std_k98ojb.Logic.NotEqual {}\n            sub_9d7b2a.second -> sub_9d7b2a.first\n            current_9f2b1c -> sub_9d7b2a.second\n            1 -> sub_9d7b2a.first\n            sub_9d7b2a.result -> notequal_8f8b5f.left\n            current_9f2b1c -> notequal_8f8b5f.right\n            notequal_8f8b5f.result -> bool_5f4b2e\n        } -> map_1a7d5d.handler\n        filter_2b3e9f.output_list -> map_1a7d5d.items\n        map_1a7d5d.output_list -> contains_9a3e8f.list\n        false -> contains_9a3e8f.item\n        not_3f8d8d.result -> output_8c6d0e\n        contains_9a3e8f.is_contained -> not_3f8d8d.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_7a4dad root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -520, y: -212, name: \"list1\") property(List) list1_3f8c7b\n        in(x: -526, y: -11, name: \"list2\") property(List) list2_2d1f5c\n\n        out(x: 1265, y: -207, name: \"output\") property(Bool) output_9b4b7d\n\n        instance(x: -291, y: -205, name: \"list1 length\") length_4a8e9d root.Std_k98ojb.List.Length {}\n        instance(x: -290, y: -10, name: \"list2 length\") length_6d1d4a root.Std_k98ojb.List.Length {}\n        instance(x: 848, y: -205) not_6c4f7e root.Std_k98ojb.Logic.Not {}\n        instance(x: 847, y: -9) greaterthan_7e3c6c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1058, y: -203) not_4c8b2f root.Std_k98ojb.Logic.Not {}\n        instance(x: 1058, y: -7) greaterthan_4c8b2f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -3, y: -204, name: \"list1 length > list2 length\") ifexpression_7c7a5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"list1Length > list2Length\"\n        }\n        instance(x: -1, y: -7, name: \"list2 length > list1 length\") ifexpression_3a5c0c root.Std_k98ojb.Std.IfExpression {\n            expression: \"list2Length > list1Length\"\n        }\n        instance(x: -275, y: -205, name: \"loop list1\") for_1a8c7e root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -7, name: \"loop list2\") for_4f1b6d root.Std_k98ojb.Std.For {}\n        instance(x: 1058, y: -203) greaterthan_6b6d5d root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1058, y: -7) lessorequal_1c9d3d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1058, y: -203) lessorequal_7e3c6c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1058, y: -7) greaterthan_4c8b2f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1058, y: -203) equal_6c4f7e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1058, y: -7) equal_4c8b2f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 246, y: -205, name: \"get list1 index\") getat_4a7d9a root.Std_k98ojb.List.GetAt {}\n        instance(x: 246, y: -7, name: \"get list2 index\") getat_7c5b6d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: -203) and_6c4f7e root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -7) and_4c8b2f root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -203) and_7e3c6c root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -7) and_1c9d3d root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -203) and_4c8b2f root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -7) and_7e3c6c root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -203) and_6b6d5d root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -7) and_1c9d3d root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -203) and_7e3c6c root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -7) and_4c8b2f root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -203) or_6c4f7e root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -7) or_4c8b2f root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -203) or_7e3c6c root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -7) or_1c9d3d root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -203) or_4c8b2f root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -7) or_7e3c6c root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -203) or_6b6d5d root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -7) or_1c9d3d root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -203) or_7e3c6c root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -7) or_4c8b2f root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -203) or_7e3c6c root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -7) or_4c8b2f root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -203) or_6b6d5d root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -7) or_1c9d3d root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -203) or_7e3c6c root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -7) or_4c8b2f root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -203) or_6c4f7e root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -7) or_4c8b2f root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -203) if_6c4f7e root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -7) if_4c8b2f root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -203) if_7e3c6c root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -7) if_1c9d3d root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -203) if_4c8b2f root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -7) if_7e3c6c root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -203) if_6b6d5d root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -7) if_1c9d3d root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 105",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -450, y: -234, name: \"list1\") property(List) list1_4f5e1d\n        in(x: -456, y: 30, name: \"list2\") property(List) list2_8e3b2f\n\n        out(x: 1228, y: 5, name: \"continue\") trigger() continue_9b5cbb\n        out(x: 1219, y: 147, name: \"output\") property(Bool) output_7d7c91\n\n        instance(x: 752, y: 93) ifexpression_6d5b6e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_9e3c2e\") getter_9e3c2e = previous\n        setter(x: 679, y: -313, name: \"setter_4c5a6f\") setter_4c5a6f = previous\n        instance(x: 321, y: -20) for_8c7a9d root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_4c5a6f\") setter_8c7a9d = previous\n        instance(x: -275, y: -35) getat_1e3c7b root.Std_k98ojb.List.GetAt {}\n        ifexpression_6d5b6e.else -> continue_9b5cbb\n        ifexpression_6d5b6e.value -> output_7d7c91\n        ifexpression_6d5b6e.then -> setter_4c5a6f.execute\n        list1_4f5e1d -> for_8c7a9d.items\n        for_8c7a9d.item -> ifexpression_6d5b6e.gen_2\n        for_8c7a9d.index -> ifexpression_6d5b6e.gen_0\n        getter_9e3c2e.value -> ifexpression_6d5b6e.gen_1\n        for_8c7a9d.onItem -> ifexpression_6d5b6e.execute\n        for_8c7a9d.done -> continue_9b5cbb\n        for_8c7a9d.item -> setter_4c5a6f.new_value\n        list1_4f5e1d -> getat_1e3c7b.list\n        0 -> getat_1e3c7b.index\n        getat_1e3c7b.itemAtIndex -> setter_8c7a9d.new_value\n        continue_9b5cbb -> list2_8e3b2f.contains.execute\n        list2_8e3b2f -> list2_8e3b2f.contains.list\n        list1_4f5e1d -> list2_8e3b2f.contains.item\n        list2_8e3b2f.contains.is_contained -> output_7d7c91\n        execute_6f7a5b -> setter_8c7a9d.execute\n        setter_8c7a9d.continue -> for_8c7a9d.reset\n        setter_4c5a6f.continue -> for_8c7a9d.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_1b8d5e root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -489, y: -224, name: \"list1\") property(List) list1_9c3e5f\n        in(x: -491, y: 23, name: \"list2\") property(List) list2_4e2e9e\n\n        out(x: 1273, y: -210, name: \"output\") property(Bool) output_8c3e9e\n\n        instance(x: -288, y: -212, name: \"generate all possible sublists\") map_1a5d7d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 847, y: -209) contains_32727d root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -27, y: -21, name: \"current\") property(Number) index_1a7d8e\n\n            out(x: 706, y: 48, name: \"output\") property(List) output_6a6f2c\n\n            instance(x: 232, y: 53) slice_7f8b5f root.Std_k98ojb.List.Slice {}\n            instance(x: 460, y: 53) generateRange_4c1e1c root.Std_k98ojb.List.GenerateRange {}\n            instance(x: 674, y: 52) concat_5b5a2f root.Std_k98ojb.List.Concat {}\n            index_1a7d8e -> generateRange_4c1e1c.from\n            0 -> generateRange_4c1e1c.to\n            generateRange_4c1e1c.list -> slice_7f8b5f.start\n            index_1a7d8e -> slice_7f8b5f.end\n            list1_9c3e5f -> slice_7f8b5f.items\n            slice_7f8b5f.slice -> concat_5b5a2f.left\n            list2_4e2e9e -> concat_5b5a2f.right\n            concat_5b5a2f.result -> output_6a6f2c\n        } -> map_1a5d7d.handler\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) _index_1e2f7c\n\n            out(x: 520, y: -27, name: \"bool\") property(Bool) bool_3a2b8e\n\n            instance(x: 73, y: -24) lessThan_5e5b8a root.Std_k98ojb.Math.LessThan {}\n            instance(x: 284, y: -26) notequal_7b6b4e root.Std_k98ojb.Logic.NotEqual {}\n            0 -> lessThan_5e5b8a.left\n            _index_1e2f7c -> lessThan_5e5b8a.right\n            lessThan_5e5b8a.result -> notequal_7b6b4e.left\n            0 -> notequal_7b6b4e.right\n            notequal_7b6b4e.result -> bool_3a2b8e\n        } -> map_1a5d7d.index\n        list1_9c3e5f -> map_1a5d7d.items\n        map_1a5d7d.output_list -> contains_32727d.list\n        list2_4e2e9e -> contains_32727d.item\n        contains_32727d.is_contained -> output_8c3e9e\n    }\n\n    \n\n    instance(x: -291, y: -1) is_sublist_5a4b3f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") sublist {\n        in(x: -435, y: -237, name: \"list1\") property(List) list1_1f846b\n        in(x: -443, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: -208, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list1_1f846b -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) sublist_7a4dad root.main.sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -440, y: -236, name: \"list1\") property(List) list1_7f2f6c\n        in(x: -438, y: 28, name: \"list2\") property(List) list2_6f4c6e\n\n        out(x: 1257, y: 10, name: \"output\") property(Bool) output_8e6f4d\n\n        instance(x: -280, y: -233, name: \"for each item in list1\") for_6d8f72 root.Std_k98ojb.Std.For {}\n        instance(x: 747, y: -231) contains_1c3b54 root.Std_k98ojb.List.Contains {}\n        instance(x: 1055, y: -227) not_1a7b3c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1058, y: -98) if_2d4c5c root.Std_k98ojb.Std.If {}\n        instance(x: 752, y: -98) for_8b8b3d root.Std_k98ojb.Std.For {}\n        instance(x: 246, y: -99, name: \"transform to true/false\") map_4a6c2d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: 48) if_1a4b0d root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -25, y: -25, name: \"current\") property(Number) current_1c8f6f\n            in(x: -16, y: 77, name: \"_index\") property(Number) _index_7a2f5c\n\n            out(x: 708, y: 49, name: \"output\") property(Bool) output_6e2f3c\n\n            instance(x: 226, y: 56) modulo_4f9e5d root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_6b7b8f root.Std_k98ojb.Logic.NotEqual {}\n            current_1c8f6f -> modulo_4f9e5d.value\n            2 -> modulo_4f9e5d.divisor\n            modulo_4f9e5d.result -> notequal_6b7b8f.left\n            0 -> notequal_6b7b8f.right\n            notequal_6b7b8f.result -> output_6e2f3c\n        } -> map_4a6c2d.handler\n        func() {\n            in(x: -190, y: -16, name: \"current\") property(Number) current_6b3b4f\n\n            out(x: 520, y: -28, name: \"bool\") property(Bool) bool_1b8f4c\n\n            instance(x: 74, y: -23) modulo_6f7b3c root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_3b7b8f root.Std_k98ojb.Logic.NotEqual {}\n            current_6b3b4f -> modulo_6f7b3c.value\n            2 -> modulo_6f7b3c.divisor\n            modulo_6f7b3c.result -> notequal_3b7b8f.left\n            0 -> notequal_3b7b8f.right\n            notequal_3b7b8f.result -> bool_1b8f4c\n        } -> for_8b8b3d.handler\n        list1_7f2f6c -> for_6d8f72.items\n        for_6d8f72.item -> contains_1c3b54.item\n        list2_6f4c6e -> contains_1c3b54.list\n        contains_1c3b54.is_contained -> not_1a7b3c.input\n        not_1a7b3c.result -> if_2d4c5c.input\n        if_2d4c5c.then -> for_8b8b3d.reset\n        if_2d4c5c.else -> for_8b8b3d.next\n        for_6d8f72.index -> for_8b8b3d.items\n        for_8b8b3d.item -> map_4a6c2d.items\n        map_4a6c2d.output_list -> for_8b8b3d.handler\n        for_8b8b3d.onItem -> if_1a4b0d.execute\n        for_8b8b3d.done -> if_1a4b0d.else\n        if_1a4b0d.then -> not_1a7b3c.continue\n        if_1a4b0d.value -> output_8e6f4d\n    }\n\n    \n\n    instance(x: -288, y: -4) is_sublist_8f3c5d root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") sublist {\n        in(x: -427, y: -224, name: \"list1\") property(List) list1_9f4d5c\n        in(x: -435, y: -114, name: \"list2\") property(List) list2_1f3a0c\n\n        out(x: 1187, y: -155, name: \"output\") property(Bool) output_3f8f8d\n\n        instance(x: -205, y: -156, name: \"iterate over list1\") for_6d5e7e root.Std_k98ojb.Std.For {}\n        instance(x: 493, y: -158) slice_6e1d3d root.Std_k98ojb.List.Slice {}\n        instance(x: 736, y: -158) contains_9d0d6e root.Std_k98ojb.List.Contains {}\n        instance(x: 1054, y: -157) notequal_4e8e9d root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 1262, y: -156) if_3f0e8e root.Std_k98ojb.Std.If {}\n        instance(x: 1457, y: -155) not_9f3c6e root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -20, y: -24, name: \"current\") property(Number) _index_4b7b5f\n            in(x: -11, y: 67, name: \"_index\") property(Number) _index_5c4e7e\n\n            out(x: 707, y: 42, name: \"output\") property(Bool) output_6f4d8f\n\n            instance(x: 220, y: 39) sub_6d5c8e root.Std_k98ojb.Math.Sub {}\n            instance(x: 456, y: 43) greaterthan_6f8c5e root.Std_k98ojb.Math.GreaterThan {}\n            _index_5c4e7e -> sub_6d5c8e.first\n            0 -> sub_6d5c8e.second\n            sub_6d5c8e.result -> greaterthan_6f8c5e.left\n            list1_9f4d5c -> greaterthan_6f8c5e.right\n            greaterthan_6f8c5e.result -> output_6f4d8f\n        } -> for_6d5e7e.handler\n        list1_9f4d5c -> for_6d5e7e.items\n        for_6d5e7e.item -> slice_6e1d3d.list\n        for_6d5e7e.index -> slice_6e1d3d.start\n        list2_1f3a0c -> slice_6e1d3d.end\n        slice_6e1d3d.slice -> contains_9d0d6e.list\n        list2_1f3a0c -> contains_9d0d6e.item\n        contains_9d0d6e.is_contained -> notequal_4e8e9d.left\n        true -> notequal_4e8e9d.right\n        notequal_4e8e9d.result -> if_3f0e8e.input\n        if_3f0e8e.then -> not_9f3c6e.execute\n        if_3f0e8e.else -> output_3f8f8d\n        not_9f3c6e.result -> output_3f8f8d\n        for_6d5e7e.onItem -> if_3f0e8e.execute\n        for_6d5e7e.done -> output_3f8f8d\n    }\n\n    \n\n    instance(x: -147, y: -8) sublist_5f8c7e root.main.sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") sublist {\n        in(x: -466, y: -234, name: \"list1\") property(List) list1_9a6f8f\n        in(x: -466, y: 25, name: \"list2\") property(List) list2_5e4f3f\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_7c5d2f\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5e6f8f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_7c5d2f\n        ifexpression_875761.value -> output_5e6f8f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_9a6f8f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_7c5d2f\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_9a6f8f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n        instance(x: -6, y: -3) filter_6f7e2e root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_6f7e2e.handler\n        list2_5e4f3f -> filter_6f7e2e.items\n        instance(x: 1029, y: -1) map_8b2e8f root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_8b2e8f.handler\n        filter_6f7e2e.output_list -> map_8b2e8f.items\n        instance(x: 1249, y: -1) contains_32727d root.Std_k98ojb.List.Contains {}\n        map_8b2e8f.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_5e6f8f\n    }\n\n    \n\n    instance(x: 10, y: -177) sublist_1d7c6e root.main.sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -493, y: -206, name: \"list1\") property(List) list1_5d4c8d\n        in(x: -497, y: 23, name: \"list2\") property(List) list2_6b9e6f\n\n        out(x: 1280, y: -207, name: \"output\") property(Bool) output_6a8d6d\n\n        instance(x: -300, y: -207, name: \"get all sublists of list1\") map_5b9c4c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 849, y: -209) contains_32727d root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -20, y: -12, name: \"current\") property(List) current_9e4c0d\n\n            out(x: 713, y: 38, name: \"output\") property(List) output_7f8b1e\n\n            instance(x: 226, y: 41) generateRange_8b5b7e root.Std_k98ojb.List.GenerateRange {}\n            instance(x: 451, y: 40) map_7b7f4f root.Std_k98ojb.Iteration.Map {}\n            instance(x: 674, y: 39) concat_6b4f0d root.Std_k98ojb.List.Concat {}\n            instance(x: 894, y: 38) slice_5c7d5d root.Std_k98ojb.List.Slice {}\n            0 -> generateRange_8b5b7e.from\n            instance(x: 0, y: 0) length_1c9d3f root.Std_k98ojb.List.Length {}\n            list1_5d4c8d -> length_1c9d3f.list\n            length_1c9d3f.length -> generateRange_8b5b7e.to\n            generateRange_8b5b7e.list -> map_7b7f4f.items\n            func() {\n                in(x: -192, y: -14, name: \"current\") property(Number) current_5f7d5c\n\n                out(x: 529, y: -24, name: \"output\") property(List) output_7f8b1e\n\n                instance(x: 74, y: -23) slice_6b4c7f root.Std_k98ojb.List.Slice {}\n                list1_5d4c8d -> slice_6b4c7f.items\n                current_5f7d5c -> slice_6b4c7f.start\n                current_5f7d5c -> slice_6b4c7f.end\n                slice_6b4c7f.slice -> output_7f8b1e\n            } -> map_7b7f4f.handler\n            map_7b7f4f.output_list -> concat_6b4f0d.left\n            instance(x: 0, y: 0) empty_1c9d3f root.Std_k98ojb.List.Empty {}\n            empty_1c9d3f.empty_list -> concat_6b4f0d.right\n            concat_6b4f0d.result -> output_7f8b1e\n        } -> map_5b9c4c.handler\n        list1_5d4c8d -> map_5b9c4c.items\n        map_5b9c4c.output_list -> contains_32727d.list\n        list2_6b9e6f -> contains_32727d.item\n        contains_32727d.is_contained -> output_6a8d6d\n    }\n\n    \n\n    instance(x: -298, y: -5) is_sublist_9f7e4b root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -445, y: -230, name: \"list1\") property(List) list1_8c6e2d\n        in(x: -455, y: -3, name: \"list2\") property(List) list2_6e7e4f\n\n        out(x: 1240, y: -110, name: \"output\") property(Bool) output_4d0b0b\n\n        instance(x: -304, y: -105, name: \"list1 length\") length_4c1b8e root.Std_k98ojb.List.Length {}\n        instance(x: -303, y: -213, name: \"list2 length\") length_4e3d0d root.Std_k98ojb.List.Length {}\n        instance(x: 850, y: -111) contains_3b1c3f root.Std_k98ojb.List.Contains {}\n        instance(x: 248, y: -112, name: \"slice list1\") map_3e5ebe root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -106) and_9a4a9e root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -203) not_8e4d0c root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -33, y: -16, name: \"current\") property(Number) index_2a6d2e\n            in(x: -23, y: 79, name: \"_index\") property(Number) index_1a9b71\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_3e8b1d\n\n            instance(x: 227, y: 56) generateRange_6d9d4f root.Std_k98ojb.List.GenerateRange {}\n            instance(x: 464, y: 51) add_8a3d9c root.Std_k98ojb.List.Add {}\n            instance(x: 702, y: 57) slice_4d4f81 root.Std_k98ojb.List.Slice {}\n            instance(x: 935, y: 56) concat_6b1b5e root.Std_k98ojb.List.Concat {}\n            generateRange_6d9d4f.from -> add_8a3d9c.list\n            index_1a9b71 -> generateRange_6d9d4f.to\n            0 -> add_8a3d9c.item\n            add_8a3d9c.listWithItem -> slice_4d4f81.items\n            index_2a6d2e -> slice_4d4f81.start\n            length_4c1b8e.length -> slice_4d4f81.end\n            slice_4d4f81.slice -> concat_6b1b5e.left\n            concat_6b1b5e.right -> output_3e8b1d\n            list1_8c6e2d -> concat_6b1b5e.left\n        } -> map_3e5ebe.handler\n        map_3e5ebe.output_list -> contains_3b1c3f.list\n        list2_6e7e4f -> contains_3b1c3f.item\n        contains_3b1c3f.is_contained -> and_9a4a9e.left\n        length_4e3d0d.length -> and_9a4a9e.right\n        and_9a4a9e.result -> not_8e4d0c.input\n        not_8e4d0c.result -> output_4d0b0b\n    }\n\n    \n\n    instance(x: -297, y: -5) is_sublist_3f1c4e root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -427, y: -213, name: \"list1\") property(List) list1_5c7f8f\n        in(x: -433, y: -33, name: \"list2\") property(List) list2_6d0b0e\n\n        out(x: 1215, y: -198, name: \"output\") property(Bool) output_6d0b0e\n\n        instance(x: -251, y: -206, name: \"list1 length\") length_7d1b1e root.Std_k98ojb.List.Length {}\n        instance(x: -250, y: -36, name: \"list2 length\") length_8d1b1e root.Std_k98ojb.List.Length {}\n        instance(x: -95, y: -201, name: \"for loop\") for_3c8c6a root.Std_k98ojb.Std.For {}\n        instance(x: 1061, y: -200) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 1098, y: -198) equal_7f7f9c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1030, y: -199) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1030, y: -28) contains_32727d_0 root.Std_k98ojb.List.Contains {}\n        instance(x: 1083, y: -199) not_75283f_1 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1083, y: -27) not_75283f_2 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1140, y: -199) and_5c5c5c root.Std_k98ojb.Logic.And {}\n        instance(x: 1140, y: -27) and_5c5c5c_0 root.Std_k98ojb.Logic.And {}\n        instance(x: 1238, y: -199) and_5c5c5c_1 root.Std_k98ojb.Logic.And {}\n        instance(x: 1238, y: -27) and_5c5c5c_2 root.Std_k98ojb.Logic.And {}\n        instance(x: 1337, y: -199) and_5c5c5c_3 root.Std_k98ojb.Logic.And {}\n        instance(x: 1337, y: -27) and_5c5c5c_4 root.Std_k98ojb.Logic.And {}\n        instance(x: 1436, y: -199) and_5c5c5c_5 root.Std_k98ojb.Logic.And {}\n        instance(x: 1436, y: -27) and_5c5c5c_6 root.Std_k98ojb.Logic.And {}\n        instance(x: 1535, y: -199) and_5c5c5c_7 root.Std_k98ojb.Logic.And {}\n        instance(x: 1535, y: -27) and_5c5c5c_8 root.Std_k98ojb.Logic.And {}\n        instance(x: 1634, y: -199) and_5c5c5c_9 root.Std_k98ojb.Logic.And {}\n        instance(x: 1634, y: -27) and_5c5c5c_10 root.Std_k98ojb.Logic.And {}\n        instance(x: 1733, y: -199) and_5c5c5c_11 root.Std_k98ojb.Logic.And {}\n        instance(x: 1733, y: -27) and_5c5c5c_12 root.Std_k98ojb.Logic.And {}\n        instance(x: 1832, y: -199) and_5c5c5c_13 root.Std_k98ojb.Logic.And {}\n        instance(x: 1832, y: -27) and_5c5c5c_14 root.Std_k98ojb.Logic.And {}\n        instance(x: 1931, y: -199) and_5c5c5c_15 root.Std_k98ojb.Logic.And {}\n        instance(x: 1931, y: -27) and_5c5c5c_16 root.Std_k98ojb.Logic.And {}\n        instance(x: 2030, y: -199) and_5c5c5c_17 root.Std_k98ojb.Logic.And {}\n        instance(x: 2030, y: -27) and_5c5c5c_18 root.Std_k98ojb.Logic.And {}\n        instance(x: 2129, y: -199) and_5c5c5c_19 root.Std_k98ojb.Logic.And {}\n        instance(x: 2129, y: -27) and_5c5c5c_20 root.Std_k98ojb.Logic.And {}\n        instance(x: 2228, y: -199) and_5c5c5c_21 root.Std_k98ojb.Logic.And {}\n        instance(x: 2228, y: -27) and_5c5c5c_22 root.Std_k98ojb.Logic.And {}\n        instance(x: 2327, y: -199) and_5c5c5c_23 root.Std_k98ojb.Logic.And {}\n        instance(x: 2327, y: -27) and_5c5c5c_24 root.Std_k98ojb.Logic.And {}\n        instance(x: 2426, y: -199) and_5c5c5c_25 root.Std_k98ojb.Logic.And {}\n        instance(x: 2426, y: -27) and_5c5c5c_26 root.Std_k98ojb.Logic.And {}\n        instance(x: 2525, y: -199) and_5c5c5c_27 root.Std_k98ojb.Logic.And {}\n        instance(x: 2525, y: -27) and_5c5c5c_28 root.Std_k98ojb.Logic.And {}\n        instance(x: 2624, y: -199) and_5c5c5c_29 root.Std_k98ojb.Logic.And {}\n        instance(x: 2624, y: -27) and_5c5c5c_30 root.Std_k98ojb.Logic.And {}\n        instance(x: 2723, y: -199) and_5c5c5c_31 root.Std_k98ojb.Logic.And {}\n        instance(x: 2723, y: -27) and_5c5c5c_32 root.Std_k98ojb.Logic.And {}\n        instance(x: 2822, y: -199) and_5c5c5c_33 root.Std_k98ojb.Logic.And {}\n        instance(x: 2822, y: -27) and_5c5c5c_34 root.Std_k98ojb.Logic.And {}\n        instance(x: 2921, y: -199) and_5c5c5c_35 root.Std_k98ojb.Logic.And {}\n        instance(x: 2921, y: -27) and_5c5c5c_36 root.Std_k98ojb.Logic.And {}\n        instance(x: 3020, y: -199) and_5c5c5c_37 root.Std_k98ojb.Logic.And {}\n        instance(x: 3020, y: -27) and_5c5c5c_38 root.Std_k98ojb.Logic.And {}\n        instance(x: 3119, y: -199) and_5c5c5c_39 root.Std_k98ojb.Logic.And {}\n        instance(x: 3119, y: -27) and_5c5c5c_40 root.Std_k98ojb.Logic.And {}\n        instance(x: 3218, y: -199) and_5c5c5c_41 root.Std_k98ojb.Logic.And {}\n        instance(x: 3218, y: -27) and_5c5c5c_42 root.Std_k98ojb.Logic.And {}\n        instance(x: 3317, y: -199) and_5c5c5c_43 root.Std_k98ojb.Logic.And {}\n        instance(x: 3317, y: -27) and_5c5c5c_44 root.Std_k98ojb.Logic.And {}\n        instance(x: 3416, y: -199) and_5c5c5c_45 root.Std_k98ojb.Logic.And {}\n        instance(x: 3416, y: -27) and_5c5c5c_46 root.Std_k98ojb.Logic.And {}\n        instance(x: 3515, y: -199) and_5c5c5c_47 root.Std_k98ojb.Logic.And {}\n        instance(x: 3515, y: -27) and_5c5c5c_48 root"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -279, y: -0, name: \"list\") property(List) list_8c8d6f\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_1d1e9c\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_7c0f1f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            sub_7c0f1f.result -> notequal_807ffd.left\n            elem_9f6850 -> sub_7c0f1f.second\n            index -> sub_7c0f1f.first\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_8c8d6f -> find_6d05b0.items\n        find_6d05b0.item -> missing_1d1e9c\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_7c0d92 root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") missing {\n        in(x: -282, y: -2, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -101, y: 39, name: \"index\") property(Number) index_8f9f6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index + 1 != elem\"\n            }\n            ifexpression_e38995.value -> bool_af09a7\n            index_8f9f6a -> ifexpression_e38995.gen_0\n            elem_9f6850 -> ifexpression_e38995.gen_1\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) missing_2c856f root.main.missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -281, y: -193, name: \"list\") property(List) list_a9c3e5\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_1b3d0e\n\n        out(x: 46, y: 158, name: \"missing\") property(Number) missing_6b3c6d\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_8f4a7f\n\n        instance(x: -105, y: -110) ifexpression_4a4d9e root.Std_k98ojb.Std.IfExpression {\n            expression: \"list.length() == 0\"\n        }\n        instance(x: -105, y: -110) ifexpression_7d8f2e root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[0] != 1\"\n        }\n        instance(x: -105, y: -110) ifexpression_7f5e7d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[i] != i + 1\"\n        }\n        instance(x: -105, y: -110) ifexpression_6f6e7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"i == list.length() - 1\"\n        }\n        instance(x: -105, y: -110) ifexpression_8f4e6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[i + 1] != i + 2\"\n        }\n        getter(x: -144, y: 112, name: \"getter_8e5b3c\") getter_8e5b3c = missing\n        setter(x: 116, y: -268, name: \"setter_3f6d8e\") setter_3f6d8e = missing\n        setter(x: 118, y: -56, name: \"setter_5f6d8e\") setter_5f6d8e = missing\n        setter(x: 118, y: -56, name: \"setter_7f6d8e\") setter_7f6d8e = missing\n        setter(x: 116, y: -268, name: \"setter_9f6d8e\") setter_9f6d8e = missing\n        list_a9c3e5 -> ifexpression_4a4d9e.gen_0\n        ifexpression_4a4d9e.then -> setter_3f6d8e.execute\n        1 -> setter_3f6d8e.new_value\n        list_a9c3e5 -> ifexpression_7d8f2e.gen_0\n        ifexpression_7d8f2e.then -> setter_5f6d8e.execute\n        list_a9c3e5 -> ifexpression_7f5e7d.gen_0\n        list_a9c3e5 -> ifexpression_7f5e7d.gen_1\n        ifexpression_7f5e7d.then -> setter_7f6d8e.execute\n        i_7f5e7d_1 -> setter_7f6d8e.new_value\n        list_a9c3e5 -> ifexpression_6f6e7c.gen_0\n        ifexpression_6f6e7c.then -> setter_9f6d8e.execute\n        list_a9c3e5 -> ifexpression_8f4e6f.gen_0\n        ifexpression_8f4e6f.then -> setter_5f6d8e.execute\n        i_8f4e6f_1 -> setter_5f6d8e.new_value\n        getter_8e5b3c.value -> missing_6b3c6d\n        ifexpression_4a4d9e.else -> ifexpression_7d8f2e.execute\n        ifexpression_7d8f2e.else -> ifexpression_7f5e7d.execute\n        ifexpression_7f5e7d.else -> ifexpression_6f6e7c.execute\n        ifexpression_6f6e7c.else -> ifexpression_8f4e6f.execute\n        ifexpression_8f4e6f.else -> ifexpression_7f5e7d.execute\n        setter_3f6d8e.continue -> continue_8f4a7f\n        setter_5f6d8e.continue -> continue_8f4a7f\n        setter_7f6d8e.continue -> continue_8f4a7f\n        setter_9f6d8e.continue -> continue_8f4a7f\n        execute_1b3d0e -> ifexpression_4a4d9e.execute\n    }\n\n    \n\n    instance(x: -174, y: -63) smallest_missing_8e5b3c root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -281, y: -194, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) expression_7b6f9f root.Std_k98ojb.Math.Expression {\n                expression: \"it != index + 1\"\n            }\n            instance(x: 310, y: 35) add_7b9b7c root.Std_k98ojb.Math.Add {}\n            elem_9f6850 -> expression_7b6f9f.it\n            add_7b9b7c.result -> expression_7b6f9f.index\n            1 -> add_7b9b7c.second\n            index -> add_7b9b7c.first\n            expression_7b6f9f.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -280, y: -223, name: \"list\") property(List) list_7a1f9c\n\n        out(x: 599, y: -1, name: \"number\") property(Number) number_7c6f4c\n\n        instance(x: 0, y: 0) find_1b0c4f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_5c6d8e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_4e8d1d\n\n            instance(x: 89, y: 29) sub_7f6f5a root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) greaterthan_5e7b9f root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: 310, y: 35) index_4c9f1d root.Std_k98ojb.Iteration.Map {}\n            func() {\n                in(x: -113, y: 34, name: \"item\") property(Number) item_4f1c2f\n\n                out(x: 515, y: 44, name: \"result\") property(Number) result_7f1b4d\n\n                instance(x: 89, y: 29) add_4e3e2f root.Std_k98ojb.Math.Add {}\n                1 -> add_4e3e2f.second\n                item_4f1c2f -> add_4e3e2f.first\n                add_4e3e2f.result -> result_7f1b4d\n            } -> index_4c9f1d.handler\n            list_7a1f9c -> index_4c9f1d.items\n            index_4c9f1d.output_list -> sub_7f6f5a.second\n            elem_5c6d8e -> sub_7f6f5a.first\n            sub_7f6f5a.result -> greaterthan_5e7b9f.left\n            0 -> greaterthan_5e7b9f.right\n            greaterthan_5e7b9f.result -> bool_4e8d1d\n        } -> find_1b0c4f.predicate\n        list_7a1f9c -> find_1b0c4f.items\n        find_1b0c4f.item -> number_7c6f4c\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_1d1f2c root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -297, y: -10, name: \"list\") property(List) list_4e5c9a\n\n        out(x: 583, y: -11, name: \"missing\") property(Number) missing_1f5f0c\n\n        instance(x: 0, y: 0) find_1e9f4c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -110, y: 35, name: \"elem\") property(Number) elem_4d5e9e\n\n            out(x: 516, y: 43, name: \"bool\") property(Bool) bool_9c6b5c\n\n            instance(x: 88, y: 29) sub_1f2c9d root.Std_k98ojb.Math.Sub {}\n            instance(x: 309, y: 36) notequal_6e6e9e root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_6e6e9e.right\n            sub_1f2c9d.result -> notequal_6e6e9e.left\n            index_9e5c9e -> sub_1f2c9d.first\n            elem_4d5e9e -> sub_1f2c9d.second\n            notequal_6e6e9e.result -> bool_9c6b5c\n        } -> find_1e9f4c.predicate\n        list_4e5c9a -> find_1e9f4c.items\n        find_1e9f4c.item -> missing_1f5f0c\n    }\n\n    \n\n    instance(x: -54, y: 530) smallest_missing_9e4b6c root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -428, y: -0, name: \"list\") property(List) list_6f8f4c\n\n        out(x: 592, y: -1, name: \"missing\") property(Number) missing_5e0f3f\n\n        instance(x: 0, y: 0) for_2a2f9c root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item_6f8f4c\n\n            out(x: 515, y: 44, name: \"continue\") trigger() continue_3e8d3e\n\n            instance(x: 89, y: 29) sub_9d3d7f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) ifexpression_6f6b4f root.Std_k98ojb.Std.IfExpression {\n                expression: \"item - index > 1\"\n            }\n            instance(x: 314, y: 76) add_6c8d1e root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 125) ifexpression_9f3e0f root.Std_k98ojb.Std.IfExpression {\n                expression: \"item - index > 0\"\n            }\n            index_2a2f9c -> sub_9d3d7f.first\n            item_6f8f4c -> sub_9d3d7f.second\n            1 -> add_6c8d1e.second\n            index_2a2f9c -> add_6c8d1e.first\n            sub_9d3d7f.result -> ifexpression_6f6b4f.gen_0\n            ifexpression_6f6b4f.then -> add_6c8d1e.execute\n            add_6c8d1e.result -> missing_5e0f3f\n            ifexpression_6f6b4f.else -> ifexpression_9f3e0f.execute\n            item_6f8f4c -> ifexpression_9f3e0f.gen_0\n            index_2a2f9c -> ifexpression_9f3e0f.gen_1\n            ifexpression_9f3e0f.then -> add_6c8d1e.execute\n            add_6c8d1e.result -> missing_5e0f3f\n            ifexpression_9f3e0f.else -> continue_3e8d3e\n            for_2a2f9c.next -> continue_3e8d3e\n        }",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) for_7b1b9f root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"continue\") trigger() continue_afa09a\n\n            instance(x: 89, y: 29) getat_10b8d5 root.Std_k98ojb.List.GetAt {}\n            instance(x: 310, y: 35) ifexpression_107ffd root.Std_k98ojb.Std.IfExpression {\n                expression: \"it != index + 1\"\n            }\n            instance(x: 89, y: 29) notequal_1088d5 root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: 35) add_807ffd root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) getat_1088d5 root.Std_k98ojb.List.GetAt {}\n            1 -> add_807ffd.second\n            index_9f6850 -> add_807ffd.first\n            add_807ffd.result -> getat_1088d5.index\n            list_abed4a -> getat_1088d5.list\n            getat_1088d5.itemAtIndex -> notequal_1088d5.right\n            getat_10b8d5.itemAtIndex -> notequal_1088d5.left\n            list_abed4a -> getat_10b8d5.list\n            index_9f6850 -> getat_10b8d5.index\n            notequal_1088d5.result -> ifexpression_107ffd.gen_0\n            ifexpression_107ffd.then -> continue_afa09a\n            getat_10b8d5.itemAtIndex -> number_3bc2ae\n        } -> for_7b1b9f.on_item\n        list_abed4a -> for_7b1b9f.items\n        for_7b1b9f.done -> continue_afa09a\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -294, y: -0, name: \"list\") property(List) list_a8c6e6\n\n        out(x: 592, y: -1, name: \"missing\") property(Number) missing_9b9b3c\n\n        instance(x: 0, y: 0) find_9c9e7f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_6e9e0c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9a6b5d\n\n            instance(x: 89, y: 29) ifexpression_4f3f0f root.Std_k98ojb.Std.IfExpression {\n                expression: \"it < 0\"\n            }\n            instance(x: 310, y: 35) ifexpression_9c8f2f root.Std_k98ojb.Std.IfExpression {\n                expression: \"it != index + 1\"\n            }\n            instance(x: 89, y: 29) if_4e3d6c root.Std_k98ojb.Std.If {}\n            instance(x: 310, y: 35) if_9c9c5f root.Std_k98ojb.Std.If {}\n            ifexpression_4f3f0f.value -> if_4e3d6c.input\n            ifexpression_9c8f2f.value -> if_9c9c5f.input\n            if_4e3d6c.then -> if_9c9c5f.input\n            if_4e3d6c.else -> if_9c9c5f.else\n            if_9c9c5f.then -> bool_9a6b5d\n            elem_6e9e0c -> ifexpression_4f3f0f.gen_0\n            if_9c9c5f.index -> ifexpression_9c8f2f.gen_1\n            if_9c9c5f.item -> ifexpression_9c8f2f.gen_0\n        } -> find_9c9e7f.predicate\n        list_a8c6e6 -> find_9c9e7f.items\n        find_9c9e7f.item -> missing_9b9b3c\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_8c6d7f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -278, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) ifexpression_6e9b76 root.Std_k98ojb.Std.IfExpression {\n                expression: \"elem != index + 1\"\n            }\n            instance(x: 310, y: 35) add_5b7d6f root.Std_k98ojb.Math.Add {}\n            index -> add_5b7d6f.first\n            1 -> add_5b7d6f.second\n            add_5b7d6f.result -> ifexpression_6e9b76.gen_1\n            elem_9f6850 -> ifexpression_6e9b76.gen_0\n            ifexpression_6e9b76.then -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -144, y: 6, name: \"input\") property(String) input_8e3f8d\n\n        out(x: 512, y: -5, name: \"output\") property(String) output_7e3e2d\n\n        instance(x: 220, y: 5) replace_1d8e3d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 220, y: -62) replace_6b6d9d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 220, y: -127) replace_3d0f5e root.Std_k98ojb.Strings.Replace {}\n        input_8e3f8d -> replace_1d8e3d.input\n        \" \" -> replace_1d8e3d.search\n        \":\" -> replace_1d8e3d.replace\n        replace_1d8e3d.output -> replace_6b6d9d.input\n        \",\" -> replace_6b6d9d.search\n        \":\" -> replace_6b6d9d.replace\n        replace_6b6d9d.output -> replace_3d0f5e.input\n        \".\" -> replace_3d0f5e.search\n        \":\" -> replace_3d0f5e.replace\n        replace_3d0f5e.output -> output_7e3e2d\n    }\n\n    \n\n    instance(x: -65, y: 23) replace_5a7f2c root.main.replace {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -500, y: 2, name: \"input\") property(String) input\n        out(x: 340, y: 77, name: \"output\") property(String) output\n\n        instance(x: 772, y: 76) replace_2f9f1e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: -28) replace_7f7d5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: -140) replace_7e7e8f root.Std_k98ojb.Strings.Replace {}\n        input -> replace_2f9f1e.input\n        \" \" -> replace_2f9f1e.search\n        \":\" -> replace_2f9f1e.replace\n        replace_2f9f1e.output -> replace_7f7d5f.input\n        \",\" -> replace_7f7d5f.search\n        \":\" -> replace_7f7d5f.replace\n        replace_7f7d5f.output -> replace_7e7e8f.input\n        \".\" -> replace_7e7e8f.search\n        \":\" -> replace_7e7e8f.replace\n        replace_7e7e8f.output -> output\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_7f9f1e root.main.replace {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -129, y: -10, name: \"input\") property(String) input_3e5f0f\n\n        out(x: 540, y: -8, name: \"output\") property(String) output_4e2e9e\n\n        instance(x: 270, y: -6) replace_9f3e78 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_3d3c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_1b6d0e root.Std_k98ojb.Strings.Replace {}\n        input_3e5f0f -> replace_9f3e78.input\n        \" \" -> replace_9f3e78.search\n        \":\" -> replace_9f3e78.replace\n        replace_9f3e78.output -> replace_3d3c8f.input\n        \",\" -> replace_3d3c8f.search\n        \":\" -> replace_3d3c8f.replace\n        replace_3d3c8f.output -> replace_1b6d0e.input\n        \".\" -> replace_1b6d0e.search\n        \":\" -> replace_1b6d0e.replace\n        replace_1b6d0e.output -> output_4e2e9e\n    }\n\n    \n\n    instance(x: 93, y: -10) replace_space_comma_dot_3e9b5f root.main.replace_space_comma_dot {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -530, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_0\n\n        instance(x: 772, y: 76) replace_1a8c4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: -1) replace_3f9a6c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: -101) replace_1a8c4c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1a8c4c.input\n        \" \" -> replace_1a8c4c.search\n        \":\" -> replace_1a8c4c.replace\n        replace_1a8c4c.output -> replace_3f9a6c.input\n        \",\" -> replace_3f9a6c.search\n        \":\" -> replace_3f9a6c.replace\n        replace_3f9a6c.output -> replace_1a8c4c.input\n        \".\" -> replace_1a8c4c.search\n        \":\" -> replace_1a8c4c.replace\n        replace_1a8c4c.output -> output_0\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_spaces_commas_dots_a1a6e9 root.main.replace_spaces_commas_dots {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -119, y: 2, name: \"input\") property(String) input_7a7a2f\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_8e7c6f\n\n        instance(x: 221, y: 9) replace_7d3b8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: -48) replace_5a3e4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: -117) replace_8c6f1e root.Std_k98ojb.Strings.Replace {}\n        input_7a7a2f -> replace_7d3b8c.input\n        \" \" -> replace_7d3b8c.search\n        \":\" -> replace_7d3b8c.replace\n        replace_7d3b8c.output -> replace_5a3e4f.input\n        \",\" -> replace_5a3e4f.search\n        \":\" -> replace_5a3e4f.replace\n        replace_5a3e4f.output -> replace_8c6f1e.input\n        \".\" -> replace_8c6f1e.search\n        \":\" -> replace_8c6f1e.replace\n        replace_8c6f1e.output -> output_8e7c6f\n    }\n\n    \n\n    instance(x: -83, y: 53) replace_4f3b9a root.main.replace {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -156, y: 9, name: \"input\") property(String) input_8c0d5f\n\n        out(x: 515, y: -14, name: \"output\") property(String) output_8b2e6f\n\n        instance(x: 272, y: -2) replace_9f9e8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 272, y: 77) replace_4f7d6c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 272, y: 157) replace_6d9d7c root.Std_k98ojb.Strings.Replace {}\n        input_8c0d5f -> replace_9f9e8c.input\n        \" \" -> replace_9f9e8c.search\n        \":\" -> replace_9f9e8c.replace\n        replace_9f9e8c.output -> replace_4f7d6c.input\n        \",\" -> replace_4f7d6c.search\n        \":\" -> replace_4f7d6c.replace\n        replace_4f7d6c.output -> replace_6d9d7c.input\n        \".\" -> replace_6d9d7c.search\n        \":\" -> replace_6d9d7c.replace\n        replace_6d9d7c.output -> output_8b2e6f\n    }\n\n    \n\n    instance(x: -90, y: 48) replace_chars_4a8b6c root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 1, name: \"input\") property(String) input_9e8f8e\n\n        out(x: 531, y: 5, name: \"output\") property(String) output_8f3d2c\n\n        instance(x: 94, y: -4) replace_9d0f2e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -101) replace_2e1c91 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -198) replace_5f8e2f root.Std_k98ojb.Strings.Replace {}\n        input_9e8f8e -> replace_9d0f2e.input\n        \" \" -> replace_9d0f2e.search\n        \":\" -> replace_9d0f2e.replace\n        replace_9d0f2e.output -> replace_2e1c91.input\n        \",\" -> replace_2e1c91.search\n        \":\" -> replace_2e1c91.replace\n        replace_2e1c91.output -> replace_5f8e2f.input\n        \".\" -> replace_5f8e2f.search\n        \":\" -> replace_5f8e2f.replace\n        replace_5f8e2f.output -> output_8f3d2c\n    }\n\n    \n\n    instance(x: -138, y: 15) replace_special_chars_5f5f9a root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -157, y: -21, name: \"input\") property(String) input_7f8d\n        out(x: 340, y: 77, name: \"output\") property(String) output_7f8d\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: -20) replace_2b3b7b root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: -120) replace_3b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_7f8d -> replace_7b3b7b.input\n        \" \" -> replace_7b3b7b.search\n        \":\" -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> replace_2b3b7b.input\n        \",\" -> replace_2b3b7b.search\n        \":\" -> replace_2b3b7b.replace\n        replace_2b3b7b.output -> replace_3b3b7b.input\n        \".\" -> replace_3b3b7b.search\n        \":\" -> replace_3b3b7b.replace\n        replace_3b3b7b.output -> output_7f8d\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_chars_59bc6e root.main.replace_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -157, y: -15, name: \"input\") property(String) input_2c8d9d\n\n        out(x: 496, y: -5, name: \"output\") property(String) output_9b3b8f\n\n        instance(x: 0, y: 1) replace_9e7f1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_2f9d8d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_1c5e8c root.Std_k98ojb.Strings.Replace {}\n        input_2c8d9d -> replace_9e7f1f.input\n        \" \" -> replace_9e7f1f.search\n        \":\" -> replace_9e7f1f.replace\n        replace_9e7f1f.output -> replace_2f9d8d.input\n        \",\" -> replace_2f9d8d.search\n        \":\" -> replace_2f9d8d.replace\n        replace_2f9d8d.output -> replace_1c5e8c.input\n        \".\" -> replace_1c5e8c.search\n        \":\" -> replace_1c5e8c.replace\n        replace_1c5e8c.output -> output_9b3b8f\n    }\n\n    \n\n    instance(x: -54, y: -18) replace_with_colon_7c8d3d root.main.replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -102, y: 2, name: \"input\") property(String) input_4e3b0f\n\n        out(x: 500, y: -5, name: \"output\") property(String) output_1e3f7c\n\n        instance(x: 260, y: -12) replace_9f7f2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 660, y: -8) replace_8c2f6e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 960, y: -5) replace_9c1f7e root.Std_k98ojb.Strings.Replace {}\n        input_4e3b0f -> replace_9f7f2f.input\n        \" \" -> replace_9f7f2f.search\n        \":\" -> replace_9f7f2f.replace\n        replace_9f7f2f.output -> replace_8c2f6e.input\n        \",\" -> replace_8c2f6e.search\n        \":\" -> replace_8c2f6e.replace\n        replace_8c2f6e.output -> replace_9c1f7e.input\n        \".\" -> replace_9c1f7e.search\n        \":\" -> replace_9c1f7e.replace\n        replace_9c1f7e.output -> output_1e3f7c\n    }\n\n    \n\n    instance(x: -72, y: 38) replace_with_colon_1e3f7c root.main.replace_with_colon {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_same {\n        in(x: -284, y: -81, name: \"string\") property(String) string_6f8e3f\n\n        out(x: 558, y: -93, name: \"output\") property(Bool) output_7b2b0d\n\n        instance(x: -91, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 145, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 359, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -276, y: -36) characters_9f6d8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 2, y: -121, name: \"set\") set_9e3b9e root.Std_k98ojb.List.Flatten {}\n        instance(x: 337, y: 160, name: \"getter_b280eb\") getter_b280eb set_9e3b9e\n        < James",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_same {\n        in(x: -278, y: -56, name: \"input\") property(String) input_1d5f4f\n\n        out(x: 1024, y: -47, name: \"output\") property(Bool) output_3a1e8d\n\n        instance(x: -105, y: -55) firstitem_3f9d4c root.Std_k98ojb.List.FirstItem {}\n        instance(x: 336, y: -54) contains_5c5e3d root.Std_k98ojb.List.Contains {}\n        instance(x: 645, y: -55) equal_2d8d8f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 929, y: -54) not_8e3b4e root.Std_k98ojb.Logic.Not {}\n        input_1d5f4f -> firstitem_3f9d4c.list\n        firstitem_3f9d4f.item -> contains_5c5e3d.item\n        input_1d5f4f -> contains_5c5e3d.list\n        contains_5c5e3d.is_contained -> equal_2d8d8f.left\n        firstitem_3f9d4f.item -> equal_2d8d8f.right\n        equal_2d8d8f.result -> not_8e3b4e.input\n        not_8e3b4e.result -> output_3a1e8d\n    }\n\n    \n\n    instance(x: 6, y: -14) all_same_6f3f9f root.main.all_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -299, y: -55, name: \"input\") property(String) input_5f9b2f\n\n        out(x: 1176, y: -60, name: \"output\") property(Bool) output_9c8c9c\n\n        instance(x: -155, y: -55) characters_3b4e4e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 449, y: -61) length_7f5d6e root.Std_k98ojb.List.Length {}\n        instance(x: 676, y: -63) greaterthan_1a1b6f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 906, y: -61) not_5f1b0f root.Std_k98ojb.Logic.Not {}\n        instance(x: 1096, y: -63) for_1d3d1f root.Std_k98ojb.Std.For {}\n        instance(x: 1346, y: -62) equal_1c4d4f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1605, y: -62) if_1c4d4f root.Std_k98ojb.Std.If {}\n        instance(x: 1865, y: -62) ifexpression_3e4e4e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        instance(x: 2096, y: -62) and_3e4e4e root.Std_k98ojb.Logic.And {}\n        instance(x: 2296, y: -62) not_3e4e4e root.Std_k98ojb.Logic.Not {}\n        instance(x: 2506, y: -62) if_3e4e4e root.Std_k98ojb.Std.If {}\n        characters_3b4e4e.characters -> for_1d3d1f.items\n        for_1d3d1f.item -> ifexpression_3e4e4e.gen_2\n        for_1d3d1f.index -> ifexpression_3e4e4e.gen_0\n        getter(x: 410, y: 14, name: \"getter_3e4e4e\") getter_3e4e4e = previous\n        setter(x: 710, y: -313, name: \"setter_3e4e4e\") setter_3e4e4e = previous\n        ifexpression_3e4e4e.else -> for_1d3d1f.next\n        ifexpression_3e4e4e.value -> if_3e4e4e.predicate\n        ifexpression_3e4e4e.then -> setter_3e4e4e.execute\n        getter_3e4e4e.value -> ifexpression_3e4e4e.gen_1\n        for_1d3d1f.onItem -> ifexpression_3e4e4e.execute\n        for_1d3d1f.done -> if_3e4e4e.execute\n        if_3e4e4e.then -> continue_3e4e4e\n        if_3e4e4e.else -> output_9c8c9c\n        for_1d3d1f.item -> setter_3e4e4e.new_value\n        input_5f9b2f -> characters_3b4e4e.input\n        length_7f5d6e.list -> characters_3b4e4e.characters\n        1 -> length_7f5d6e.list\n        greaterthan_1a1b6f.result -> not_5f1b0f.input\n        length_7f5d6e.length -> greaterthan_1a1b6f.left\n        1 -> greaterthan_1a1b6f.right\n        not_5f1b0f.result -> if_1d3d1f.predicate\n        if_1d3d1f.then -> for_1d3d1f.reset\n        if_1d3d1f.else -> continue_3e4e4e\n        execute_3e4e4e -> for_1d3d1f.reset\n        setter_3e4e4e.continue -> for_1d3d1f.next\n        ifexpression_3e4e4e.value -> equal_1c4d4f.left\n        getter_3e4e4e.value -> equal_1c4d4f.right\n        equal_1c4d4f.result -> if_1c4d4f.predicate\n        if_1c4d4f.then -> continue_3e4e4e\n        if_1c4d4f.else -> not_3e4e4e.input\n        not_3e4e4e.result -> and_3e4e4e.left\n        not_5f1b0f.result -> and_3e4e4e.right\n        and_3e4e4e.result -> if_3e4e4e.predicate\n    }\n\n    \n\n    instance(x: 36, y: 20) check_same_3e4e4e root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_characters {\n        in(x: -283, y: -71, name: \"input\") property(String) input_5b1f0d\n\n        out(x: 537, y: -82, name: \"output\") property(Bool) output_5f3b2c\n\n        instance(x: -122, y: -71) characters_9a2d5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 182, y: -81) intersection_6b9e1d root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 392, y: -80) length_8d9b3e root.Std_k98ojb.List.Length {}\n        instance(x: 540, y: -79) equal_4f1f9c root.Std_k98ojb.Logic.Equal {}\n        input_5b1f0d -> characters_9a2d5c.input\n        characters_9a2d5c.characters -> intersection_6b9e1d.left\n        characters_9a2d5c.characters -> intersection_6b9e1d.right\n        intersection_6b9e1d.intersect -> length_8d9b3e.list\n        1 -> equal_4f1f9c.right\n        length_8d9b3e.length -> equal_4f1f9c.left\n        equal_4f1f9c.result -> output_5f3b2c\n    }\n\n    \n\n    instance(x: -60, y: 53) check_characters_1e4f1f root.main.check_characters {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") check_same_char {\n        in(x: -274, y: -54, name: \"input\") property(String) input_2d7e7f\n\n        out(x: 1005, y: 4, name: \"output\") property(Bool) output_8e7c6f\n\n        instance(x: -73, y: -53) characters_7b3b8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 261, y: 0) length_0c8f9e root.Std_k98ojb.List.Length {}\n        instance(x: 481, y: 1) ifexpression_6f1e4e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == previous\"\n        }\n        getter(x: 166, y: 95, name: \"getter_7c4d2d\") getter_7c4d2d = previous\n        setter(x: 424, y: -235, name: \"setter_3a9a8f\") setter_3a9a8f = previous\n        instance(x: 143, y: -41) for_8f8c6d root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -131, name: \"setter_3a9a8f\") setter_4e8d1c = previous\n        instance(x: -281, y: -56) getat_7d1b1e root.Std_k98ojb.List.GetAt {}\n        ifexpression_6f1e4e.else -> output_8e7c6f\n        ifexpression_6f1e4e.value -> output_8e7c6f\n        ifexpression_6f1e4e.then -> setter_3a9a8f.execute\n        characters_7b3b8c.characters -> for_8f8c6d.items\n        for_8f8c6d.item -> ifexpression_6f1e4e.gen_2\n        for_8f8c6d.index -> ifexpression_6f1e4e.gen_0\n        getter_7c4d2d.value -> ifexpression_6f1e4e.gen_1\n        for_8f8c6d.onItem -> ifexpression_6f1e4e.execute\n        for_8f8c6d.done -> output_8e7c6f\n        for_8f8c6d.item -> setter_3a9a8f.new_value\n        characters_7b3b8c.characters -> getat_7d1b1e.list\n        0 -> getat_7d1b1e.index\n        getat_7d1b1e.itemAtIndex -> setter_4e8d1c.new_value\n        input_2d7e7f -> getat_7d1b1e.list\n        length_0c8f9e.list -> characters_7b3b8c.characters\n        input_2d7e7f -> length_0c8f9e.list\n        setter_4e8d1c.continue -> for_8f8c6d.reset\n        setter_3a9a8f.continue -> for_8f8c6d.next\n    }\n\n    \n\n    instance(x: 27, y: -19) check_same_char_7b1b1e root.main.check_same_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -331, y: -58, name: \"input\") property(String) input_5f9f4d\n\n        out(x: 1038, y: 20, name: \"output\") property(Bool) output_5d7f5f\n\n        instance(x: -145, y: -54) firstitem_9f9e8c root.Std_k98ojb.List.FirstItem {}\n        instance(x: 417, y: 17) lessthanorequal_6c7b6c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 720, y: 20) not_9c9c5f root.Std_k98ojb.Logic.Not {}\n        instance(x: 1051, y: 20) if_5c9b6c root.Std_k98ojb.Std.If {}\n        instance(x: 1279, y: 20) if_6e9f7c root.Std_k98ojb.Std.If {}\n        instance(x: 1507, y: 20) for_8f9c7c root.Std_k98ojb.Std.For {}\n        instance(x: 1735, y: 20) if_9f9b7c root.Std_k98ojb.Std.If {}\n        instance(x: 1963, y: 20) ifexpression_7c9f6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"i == 0 || current == first\"\n        }\n        instance(x: 2191, y: 20) ifexpression_8f9c7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"i == 0 || current == first\"\n        }\n        instance(x: 2419, y: 20) ifexpression_9f9c7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"i == 0 || current == first\"\n        }\n        instance(x: -9, y: -8, name: \"characters\") characters_f9c7f9 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 246, y: -55) not_6f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 478, y: -55) not_7f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 710, y: -55) not_8f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 942, y: -55) not_9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1174, y: -55) not_a9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1406, y: -55) not_b9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1638, y: -55) not_c9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1870, y: -55) not_d9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 2102, y: -55) not_e9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 2334, y: -55) not_f9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 2566, y: -55) not_g9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 2798, y: -55) not_h9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 3030, y: -55) not_i9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 3262, y: -55) not_j9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 3494, y: -55) not_k9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 3726, y: -55) not_l9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 3958, y: -55) not_m9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 4190, y: -55) not_n9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 4422, y: -55) not_o9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 4654, y: -55) not_p9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 4886, y: -55) not_q9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 5118, y: -55) not_r9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 5350, y: -55) not_s9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 5582, y: -55) not_t9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 5814, y: -55) not_u9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 6046, y: -55) not_v9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 6278, y: -55) not_w9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 6510, y: -55) not_x9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 6742, y: -55) not_y9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 6974, y: -55) not_z9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 7206, y: -55) not_a9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 7438, y: -55) not_b9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 7670, y: -55) not_c9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 7902, y: -55) not_d9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 8134, y: -55) not_e9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 8366, y: -55) not_f9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 8598, y: -55) not_g9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 8830, y: -55) not_h9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 9062, y: -55) not_i9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 9294, y: -55) not_j9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 9526, y: -55) not_k9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 9758, y: -55) not_l9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 9990, y: -55) not_m9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 10222, y: -55) not_n9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 10454, y: -55) not_o9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 10686, y: -55) not_p9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 10918, y: -55) not_q9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 11150, y: -55) not_r9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 11382, y: -55) not_s9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 11614, y: -55) not_t9f9c7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 11846, y: -55) not_u9",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -298, y: -63, name: \"string\") property(String) string_9e9b6f\n\n        out(x: 555, y: -7, name: \"output\") property(Bool) output_3f3f8f\n\n        instance(x: -100, y: -63) characters_4c8b9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 151, y: -55) set_3b3f9d root.Std_k98ojb.List.Set {}\n        instance(x: 347, y: -52) length_6d5f8e root.Std_k98ojb.List.Length {}\n        instance(x: 502, y: -50) greaterthan_8a7e9f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 672, y: -48) not_1a6f4d root.Std_k98ojb.Logic.Not {}\n        instance(x: 834, y: -46) contains_8f4e7d root.Std_k98ojb.List.Contains {}\n        characters_4c8b9f.characters -> set_3b3f9d.list\n        set_3b3f9d.listWithItem -> contains_8f4e7d.list\n        characters_4c8b9f.characters -> contains_8f4e7d.item\n        length_6d5f8e.length -> greaterthan_8a7e9f.right\n        1 -> greaterthan_8a7e9f.left\n        greaterthan_8a7e9f.result -> not_1a6f4d.input\n        not_1a6f4d.result -> contains_8f4e7d.is_contained\n        contains_8f4e7d.is_contained -> output_3f3f8f\n        string_9e9b6f -> characters_4c8b9f.input\n    }\n\n    \n\n    instance(x: -46, y: 62) check_same_4a7f4d root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -297, y: -16, name: \"input\") property(String) input_4d8c4f\n\n        out(x: 548, y: 22, name: \"output\") property(Bool) output_5d3e81\n\n        instance(x: -147, y: -14) firstitem_3f4d7e root.Std_k98ojb.List.FirstItem {}\n        instance(x: 0, y: 23) contains_5b3f5c root.Std_k98ojb.List.Contains {}\n        instance(x: 300, y: 21) equal_3d9c8e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 500, y: 21) not_1e2e4f root.Std_k98ojb.Logic.Not {}\n        input_4d8c4f -> firstitem_3f4d7e.list\n        firstitem_3f4d7e.item -> contains_5b3f5c.item\n        input_4d8c4f -> contains_5b3f5c.list\n        equal_3d9c8e.result -> not_1e2e4f.input\n        contains_5b3f5c.is_contained -> equal_3d9c8e.left\n        firstitem_3f4d7e.item -> equal_3d9c8e.right\n        not_1e2e4f.result -> output_5d3e81\n    }\n\n    \n\n    instance(x: -4, y: 53) check_same_1f8d0c root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") all_same {\n        in(x: -293, y: -76, name: \"string\") property(String) string_4a2d4e\n\n        out(x: 561, y: -58, name: \"output\") property(Bool) output_6f7e91\n\n        instance(x: -82, y: -75) characters_4a1f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 216, y: -57) contains_4d3d2d root.Std_k98ojb.List.Contains {}\n        instance(x: 438, y: -56) not_4b4c1c root.Std_k98ojb.Logic.Not {}\n        instance(x: 658, y: -57) equal_9c6e3d root.Std_k98ojb.Logic.Equal {}\n        characters_4a1f9c.characters -> contains_4d3d2d.list\n        string_4a2d4e -> contains_4d3d2d.item\n        contains_4d3d2d.is_contained -> not_4b4c1c.input\n        not_4b4c1c.result -> equal_9c6e3d.left\n        1 -> equal_9c6e3d.right\n        equal_9c6e3d.result -> output_6f7e91\n    }\n\n    \n\n    instance(x: 20, y: 23) all_same_8b5d2a root.main.all_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -308, y: -27, name: \"string\") property(String) string_3e3e7d\n\n        out(x: 1146, y: -10, name: \"output\") property(Bool) output_6c2d1e\n\n        instance(x: -153, y: -27) characters_6e7f9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 479, y: -27) uniquify_4d8c2f root.Std_k98ojb.List.Unique {}\n        instance(x: 833, y: -27) length_7a9c1c root.Std_k98ojb.List.Length {}\n        instance(x: 1076, y: -27) equal_8c7c8c root.Std_k98ojb.Logic.Equal {}\n        string_3e3e7d -> characters_6e7f9f.input\n        characters_6e7f9f.characters -> uniquify_4d8c2f.list\n        uniquify_4d8c2f.uniqueList -> length_7a9c1c.list\n        1 -> equal_8c7c8c.right\n        length_7a9c1c.length -> equal_8c7c8c.left\n        equal_8c7c8c.result -> output_6c2d1e\n    }\n\n    \n\n    instance(x: 17, y: -12) check_same_1f6a7e root.main.check_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) string_to_list root.Std_k98ojb.Strings.Characters {}\n        string_ai -> string_to_list.input\n        instance(x: 0, y: 0) filter_node root.Std_k98ojb.Query.Filter {\n            where: \"it.isNumeric\"\n        }\n        string_to_list.characters -> filter_node.list\n        instance(x: 0, y: 0) list_length root.Std_k98ojb.List.Length {}\n        filter_node.result -> list_length.list\n        list_length.length -> count_ai\n    }\n\n    \n    instance(x: -31, y: -37, name: \"count_digits\") count_digits_9c7f4a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {\n            iterations: 10\n        }\n        instance(x: 0, y: 0) if_expression_node root.Std_k98ojb.Std.IfExpression {\n            expression: \"it.IsNumeric()\"\n        }\n        instance(x: 0, y: 0) count_add_node root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) string_characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_add_node_2 root.Std_k98ojb.Math.Add {}\n        string_ai -> string_characters_node.input\n        string_characters_node.characters -> count_node.items\n        count_node.onCount -> if_expression_node.execute\n        if_expression_node.then -> count_add_node.execute\n        count_add_node.first ->   count_add_node_2.first\n        1 -> count_add_node.second\n        count_add_node.result -> count_add_node_2.second\n        count_add_node_2.result -> count_node.count\n        count_node.done -> count_ai\n    }\n\n    \n    instance(x: -45, y: -46, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits_2 {}\n        instance(x: 0, y: 0) count_digits_3 root.main.count_digits_3 {}\n        instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: 0) count_digits_4 root.main.count_digits_4 {}\n        instance(x: 0, y: 0) add_5 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) count_digits_6 root.main.count_digits_6 {}\n        instance(x: 0, y: 0) count_digits_7 root.main.count_digits_7 {}\n        instance(x: 0, y: 0) count_digits_8 root.main.count_digits_8 {}\n        instance(x: 0, y: 0) count_digits_9 root.main.count_digits_9 {}\n        instance(x: 0, y: 0) count_digits_10 root.main.count_digits_10 {}\n        instance(x: 0, y: 0) count_digits_11 root.main.count_digits_11 {}\n        instance(x: 0, y: 0) count_digits_12 root.main.count_digits_12 {}\n        instance(x: 0, y: 0) count_digits_13 root.main.count_digits_13 {}\n        instance(x: 0, y: 0) count_digits_14 root.main.count_digits_14 {}\n        instance(x: 0, y: 0) count_digits_15 root.main.count_digits_15 {}\n        instance(x: 0, y: 0) count_digits_16 root.main.count_digits_16 {}\n        instance(x: 0, y: 0) count_digits_17 root.main.count_digits_17 {}\n        instance(x: 0, y: 0) count_digits_18 root.main.count_digits_18 {}\n        instance(x: 0, y: 0) count_digits_19 root.main.count_digits_19 {}\n        instance(x: 0, y: 0) count_digits_20 root.main.count_digits_20 {}\n        instance(x: 0, y: 0) count_digits_21 root.main.count_digits_21 {}\n        instance(x: 0, y: 0) count_digits_22 root.main.count_digits_22 {}\n        instance(x: 0, y: 0) count_digits_23 root.main.count_digits_23 {}\n        instance(x: 0, y: 0) count_digits_24 root.main.count_digits_24 {}\n        instance(x: 0, y: 0) count_digits_25 root.main.count_digits_25 {}\n        instance(x: 0, y: 0) count_digits_26 root.main.count_digits_26 {}\n        instance(x: 0, y: 0) count_digits_27 root.main.count_digits_27 {}\n        instance(x: 0, y: 0) count_digits_28 root.main.count_digits_28 {}\n        instance(x: 0, y: 0) count_digits_29 root.main.count_digits_29 {}\n        instance(x: 0, y: 0) count_digits_30 root.main.count_digits_30 {}\n        instance(x: 0, y: 0) count_digits_31 root.main.count_digits_31 {}\n        instance(x: 0, y: 0) count_digits_32 root.main.count_digits_32 {}\n        instance(x: 0, y: 0) count_digits_33 root.main.count_digits_33 {}\n        instance(x: 0, y: 0) count_digits_34 root.main.count_digits_34 {}\n        instance(x: 0, y: 0) count_digits_35 root.main.count_digits_35 {}\n        instance(x: 0, y: 0) count_digits_36 root.main.count_digits_36 {}\n        instance(x: 0, y: 0) count_digits_37 root.main.count_digits_37 {}\n        instance(x: 0, y: 0) count_digits_38 root.main.count_digits_38 {}\n        instance(x: 0, y: 0) count_digits_39 root.main.count_digits_39 {}\n        instance(x: 0, y: 0) count_digits_40 root.main.count_digits_40 {}\n        instance(x: 0, y: 0) count_digits_41 root.main.count_digits_41 {}\n        instance(x: 0, y: 0) count_digits_42 root.main.count_digits_42 {}\n        instance(x: 0, y: 0) count_digits_43 root.main.count_digits_43 {}\n        instance(x: 0, y: 0) count_digits_44 root.main.count_digits_44 {}\n        instance(x: 0, y: 0) count_digits_45 root.main.count_digits_45 {}\n        instance(x: 0, y: 0) count_digits_46 root.main.count_digits_46 {}\n        instance(x: 0, y: 0) count_digits_47 root.main.count_digits_47 {}\n        instance(x: 0, y: 0) count_digits_48 root.main.count_digits_48 {}\n        instance(x: 0, y: 0) count_digits_49 root.main.count_digits_49 {}\n        instance(x: 0, y: 0) count_digits_50 root.main.count_digits_50 {}\n        instance(x: 0, y: 0) count_digits_51 root.main.count_digits_51 {}\n        instance(x: 0, y: 0) count_digits_52 root.main.count_digits_52 {}\n        instance(x: 0, y: 0) count_digits_53 root.main.count_digits_53 {}\n        instance(x: 0, y: 0) count_digits_54 root.main.count_digits_54 {}\n        instance(x: 0, y: 0) count_digits_55 root.main.count_digits_55 {}\n        instance(x: 0, y: 0) count_digits_56 root.main.count_digits_56 {}\n        instance(x: 0, y: 0) count_digits_57 root.main.count_digits_57 {}\n        instance(x: 0, y: 0) count_digits_58 root.main.count_digits_58 {}\n        instance(x: 0, y: 0) count_digits_59 root.main.count_digits_59 {}\n        instance(x: 0, y: 0) count_digits_60 root.main.count_digits_60 {}\n        instance(x: 0, y: 0) count_digits_61 root.main.count_digits_61 {}\n        instance(x: 0, y: 0) count_digits_62 root.main.count_digits_62 {}\n        instance(x: 0, y: 0) count_digits_63 root.main.count_digits_63 {}\n        instance(x: 0, y: 0) count_digits_64 root.main.count_digits_64 {}\n        instance(x: 0, y: 0) count_digits_65 root.main.count_digits_65 {}\n        instance(x: 0, y: 0) count_digits_66 root.main.count_digits_66 {}\n        instance(x: 0, y: 0) count_digits_67 root.main.count_digits_67 {}\n        instance(x: 0, y: 0) count_digits_68 root.main.count_digits_68 {}\n        instance(x: 0, y: 0) count_digits_69 root.main.count_digits_69 {}\n        instance(x: 0, y: 0) count_digits_70 root.main.count_digits_70 {}\n        instance(x: 0, y: 0) count_digits_71 root.main.count_digits_71 {}\n        instance(x: 0, y: 0) count_digits_72 root.main.count_digits_72 {}\n        instance(x: 0, y: 0) count_digits_73 root.main.count_digits_73 {}\n        instance(x: 0, y: 0) count_digits_74 root.main.count_digits_74 {}\n        instance(x: 0, y: 0) count_digits_75 root.main.count_digits_75 {}\n        instance(x: 0, y: 0) count_digits_76 root.main.count_digits_76 {}\n        instance(x: 0, y: 0) count_digits_77 root.main.count_digits_77 {}\n        instance(x: 0, y: 0) count_digits_78 root.main.count_digits_78 {}\n        instance(x: 0, y: 0) count_digits_79 root.main.count_digits_79 {}\n        instance(x: 0, y: 0) count_digits_80 root.main.count_digits_80 {}\n        instance(x: 0, y: 0) count_digits_81 root.main.count_digits_81 {}\n        instance(x: 0, y: 0) count_digits_82 root.main.count_digits_82 {}\n        instance(x: 0, y: 0) count_digits_83 root.main.count_digits_83 {}\n        instance(x: 0,",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) count_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: {\n                in property(String) item\n                out property(Bool) output\n\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item -> is_numeric_node.input\n                is_numeric_node.isNumeric -> output\n            }\n        }\n        input_ai -> count_digits_node.items\n        count_digits_node.output_list -> count_digits_node.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_node.output_list -> list_length_node.list\n        list_length_node.length -> result_ai\n    }\n    \n\n    instance(x: -85, y: -46, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 0) string_characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> string_characters_node.input\n        instance(x: 0, y: 0) count_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: \"it.IsNumeric()\"\n        }\n        string_characters_node.characters -> count_digits_node.items\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_node.output_list -> list_length_node.list\n        list_length_node.length -> output_ai\n    }\n    \n\n    instance(x: -44, y: -51, name: \"count_digits\") count_digits_node_1 root.main.count_digits {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"counts number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) count_digits_1 root.main.count_digits_1 {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits_2 {}\n        instance(x: 0, y: 0) count_digits_3 root.main.count_digits_3 {}\n        instance(x: 0, y: 0) count_digits_4 root.main.count_digits_4 {}\n        instance(x: 0, y: 0) count_digits_5 root.main.count_digits_5 {}\n        instance(x: 0, y: 0) count_digits_6 root.main.count_digits_6 {}\n        instance(x: 0, y: 0) count_digits_7 root.main.count_digits_7 {}\n        instance(x: 0, y: 0) count_digits_8 root.main.count_digits_8 {}\n        instance(x: 0, y: 0) count_digits_9 root.main.count_digits_9 {}\n        instance(x: 0, y: 0) count_digits_0 root.main.count_digits_0 {}\n        instance(x: 0, y: 0) count_digits_end root.main.count_digits_end {}\n        instance(x: 0, y: 0) count_digits_0_1 root.main.count_digits_0_1 {}\n        instance(x: 0, y: 0) count_digits_0_2 root.main.count_digits_0_2 {}\n        instance(x: 0, y: 0) count_digits_0_3 root.main.count_digits_0_3 {}\n        instance(x: 0, y: 0) count_digits_0_4 root.main.count_digits_0_4 {}\n        instance(x: 0, y: 0) count_digits_0_5 root.main.count_digits_0_5 {}\n        instance(x: 0, y: 0) count_digits_0_6 root.main.count_digits_0_6 {}\n        instance(x: 0, y: 0) count_digits_0_7 root.main.count_digits_0_7 {}\n        instance(x: 0, y: 0) count_digits_0_8 root.main.count_digits_0_8 {}\n        instance(x: 0, y: 0) count_digits_0_9 root.main.count_digits_0_9 {}\n        instance(x: 0, y: 0) count_digits_1_2 root.main.count_digits_1_2 {}\n        instance(x: 0, y: 0) count_digits_1_3 root.main.count_digits_1_3 {}\n        instance(x: 0, y: 0) count_digits_1_4 root.main.count_digits_1_4 {}\n        instance(x: 0, y: 0) count_digits_1_5 root.main.count_digits_1_5 {}\n        instance(x: 0, y: 0) count_digits_1_6 root.main.count_digits_1_6 {}\n        instance(x: 0, y: 0) count_digits_1_7 root.main.count_digits_1_7 {}\n        instance(x: 0, y: 0) count_digits_1_8 root.main.count_digits_1_8 {}\n        instance(x: 0, y: 0) count_digits_1_9 root.main.count_digits_1_9 {}\n        instance(x: 0, y: 0) count_digits_2_3 root.main.count_digits_2_3 {}\n        instance(x: 0, y: 0) count_digits_2_4 root.main.count_digits_2_4 {}\n        instance(x: 0, y: 0) count_digits_2_5 root.main.count_digits_2_5 {}\n        instance(x: 0, y: 0) count_digits_2_6 root.main.count_digits_2_6 {}\n        instance(x: 0, y: 0) count_digits_2_7 root.main.count_digits_2_7 {}\n        instance(x: 0, y: 0) count_digits_2_8 root.main.count_digits_2_8 {}\n        instance(x: 0, y: 0) count_digits_2_9 root.main.count_digits_2_9 {}\n        instance(x: 0, y: 0) count_digits_3_4 root.main.count_digits_3_4 {}\n        instance(x: 0, y: 0) count_digits_3_5 root.main.count_digits_3_5 {}\n        instance(x: 0, y: 0) count_digits_3_6 root.main.count_digits_3_6 {}\n        instance(x: 0, y: 0) count_digits_3_7 root.main.count_digits_3_7 {}\n        instance(x: 0, y: 0) count_digits_3_8 root.main.count_digits_3_8 {}\n        instance(x: 0, y: 0) count_digits_3_9 root.main.count_digits_3_9 {}\n        instance(x: 0, y: 0) count_digits_4_5 root.main.count_digits_4_5 {}\n        instance(x: 0, y: 0) count_digits_4_6 root.main.count_digits_4_6 {}\n        instance(x: 0, y: 0) count_digits_4_7 root.main.count_digits_4_7 {}\n        instance(x: 0, y: 0) count_digits_4_8 root.main.count_digits_4_8 {}\n        instance(x: 0, y: 0) count_digits_4_9 root.main.count_digits_4_9 {}\n        instance(x: 0, y: 0) count_digits_5_6 root.main.count_digits_5_6 {}\n        instance(x: 0, y: 0) count_digits_5_7 root.main.count_digits_5_7 {}\n        instance(x: 0, y: 0) count_digits_5_8 root.main.count_digits_5_8 {}\n        instance(x: 0, y: 0) count_digits_5_9 root.main.count_digits_5_9 {}\n        instance(x: 0, y: 0) count_digits_6_7 root.main.count_digits_6_7 {}\n        instance(x: 0, y: 0) count_digits_6_8 root.main.count_digits_6_8 {}\n        instance(x: 0, y: 0) count_digits_6_9 root.main.count_digits_6_9 {}\n        instance(x: 0, y: 0) count_digits_7_8 root.main.count_digits_7_8 {}\n        instance(x: 0, y: 0) count_digits_7_9 root.main.count_digits_7_9 {}\n        instance(x: 0, y: 0) count_digits_8_9 root.main.count_digits_8_9 {}\n        instance(x: 0, y: 0) if_1 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) if_2 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) if_3 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) if_4 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) if_5 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) if_6 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) if_7 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) if_8 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) if_9 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) if_0 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) if_end root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) add_1 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) add_2 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) add_3 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) add_4 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) add_5 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) add_6 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) add_7 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) add_8 root.Std_k98ojb",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) for_node root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) if_node root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) number_from_string_node root.Std_k98ojb.Math.NumberFromString {}\n\n        string_ai -> characters_node.input\n        characters_node.characters -> for_node.items\n        for_node.item -> is_numeric_node.input\n        is_numeric_node.isNumeric -> if_node.input\n        if_node.then -> count_node.count\n        for_node.onItem -> if_node.execute\n        for_node.reset -> count_node.reset\n        count_node.onCount -> for_node.next\n        for_node.done -> count_node.continue\n        count_node.interation -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) for_node root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: 0) if_node root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) expression_node root.Std_k98ojb.Math.Expression {\n            expression: \"count + 1\"\n        }\n        string_ai -> for_node.items\n        for_node.on_item -> is_numeric_node.execute\n        is_numeric_node.value -> if_node.input\n        1 -> count_node.iterations\n        count_node.reset -> for_node.reset\n        for_node.next -> count_node.count\n        for_node.done -> count_node.done\n        if_node.then -> expression_node.execute\n        if_node.else -> count_node.count\n        count_node.continue -> for_node.next\n        count_node.interation -> expression_node.gen_0\n        1 -> expression_node.gen_1\n        expression_node.result -> count_node.new_value\n        count_node.value -> count_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_3b1f4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_4a0b0a root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) is_numeric_1e8e8c root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: 0) ifexpression_7b5b3f root.Std_k98ojb.Std.IfExpression {}\n\n        string_ai -> characters_3b1f4c.input\n        characters_3b1f4c.characters -> count_4a0b0a.items\n        characters_3b1f4c.characters -> ifexpression_7b5b3f.gen_0\n        ifexpression_7b5b3f.gen_0 -> is_numeric_1e8e8c.input\n        is_numeric_1e8e8c.isNumeric -> ifexpression_7b5b3f.gen_1\n        ifexpression_7b5b3f.value -> count_4a0b0a.count\n        count_4a0b0a.interation -> count_4a0b0a.reset\n        count_4a0b0a.onCount -> count_4a0b0a.count\n        count_4a0b0a.done -> count_4a0b0a.reset\n        count_4a0b0a.interation -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_4a0b0a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Iteration.Filter {\n            handler: {\n                in property(String) it\n                out property(Bool) output\n\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                it -> is_numeric_node.input\n                is_numeric_node.isNumeric -> output\n            }\n        }\n        string_ai -> count_node.items\n        count_node.output_list -> result_ai\n    }\n\n    \n    instance(x: -51, y: -48, name: \"count_digits\") count_digits_8d0f8e root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -279, y: 57, name: \"n\") property(Number) n_8c8d6f\n\n        out(x: 583, y: 11, name: \"sum\") property(Number) sum_5d1e9d\n\n        instance(x: 17, y: -1) mul_2e7c5c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 322, y: 131) data_7c9f5c  = 3\n        instance(x: 13, y: 136) expression_6c3f4d root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 292, y: 2) mul_3d5a5f root.Std_k98ojb.Math.Mul {}\n        instance(x: 296, y: -2) mul_1b9c4d root.Std_k98ojb.Math.Mul {}\n        instance(x: 297, y: -10) mul_5d3a6f root.Std_k98ojb.Math.Mul {}\n        instance(x: 300, y: -18) div_4c5d4a root.Std_k98ojb.Math.Div {}\n        data_7c9f5c -> div_4c5d4a.second\n        mul_2e7c5c.result -> div_4c5d4a.first\n        mul_5d3a6f.result -> mul_1b9c4d.first\n        mul_3d5a5f.result -> mul_5d3a6f.second\n        expression_6c3f4d.result -> mul_3d5a5f.first\n        expression_6c3f4d.result -> mul_2e7c5c.second\n        n_8c8d6f -> mul_2e7c5c.first\n        n_8c8d6f -> expression_6c3f4d.gen_0\n        mul_1b9c4d.result -> mul_5d3a6f.first\n        div_4c5d4a.result -> sum_5d1e9d\n    }\n\n    \n\n    instance(x: 114, y: -24) fourth_power_sum_4a8f1e root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth {\n        in(x: -333, y: -277, name: \"n\") property(Number) n_9b1e3d\n\n        out(x: 762, y: -7, name: \"sum\") property(Number) sum_1a2c1f\n\n        instance(x: 30, y: -1) mul_4a6c9f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 338, y: 134) data_4e5c71  = 3\n        instance(x: 12, y: 136) expression_1a4d8d root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 305, y: 2) pow_7a7f2f root.Std_k98ojb.Math.Pow {}\n        instance(x: 22, y: -25) mul_7d1b1d root.Std_k98ojb.Math.Mul {}\n        instance(x: 305, y: 2) sum_fourth_2b6c2e root.main.sum_fourth {}\n        data_4e5c71 -> mul_7d1b1d.second\n        mul_4a6c9f.result -> pow_7a7f2f.first\n        pow_7a7f2f.result -> mul_7d1b1d.first\n        expression_1a4d8d.result -> mul_4a6c9f.second\n        n_9b1e3d -> mul_4a6c9f.first\n        n_9b1e3d -> expression_1a4d8d.gen_0\n        mul_7d1b1d.result -> sum_fourth_2b6c2e.n_9b1e3d\n        pow_7a7f2f.second ->   ``4``\n        sum_fourth_2b6c2e.sum_1a2c1f -> sum_1a2c1f\n        sum_fourth_2b6c2e.continue_d9efd7 -> sum_1a2c1f\n        n_9b1e3d -> sum_fourth_2b6c2e.n_9b1e3d\n        sum_fourth_2b6c2e.execute_cdac2a -> mul_7d1b1d.execute\n        mul_7d1b1d.result -> sum_fourth_2b6c2e.sum_1a2c1f\n        mul_7d1b1d.continue -> sum_fourth_2b6c2e.continue_d9efd7\n    }\n\n    \n\n    instance(x: 115, y: 158) sum_fourth_5f3f2f root.main.sum_fourth {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -345, y: -278, name: \"n\") property(Number) n_3a3116\n\n        out(x: 751, y: -5, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9c7f9f root.Std_k98ojb.Math.Pow {}\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_7d7e4c root.Std_k98ojb.Math.Add {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 1\n        instance(x: 0, y: 0) for_9a8a8a root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) count_1c3d4f root.Std_k98ojb.Std.Count {}\n        n_3a3116 -> count_1c3d4f.n\n        count_1c3d4f.count -> for_9a8a8a.items\n        for_9a8a8a.index -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9c7f9f.first\n        4 -> pow_9c7f9f.second\n        pow_9c7f9f.result -> add_7d7e4c.second\n        data_cde0dc -> add_7d7e4c.first\n        add_7d7e4c.result -> data_cde0dc\n        for_9a8a8a.on_item -> count_1c3d4f.trigger\n        count_1c3d4f.reset -> for_9a8a8a.reset\n        count_1c3d4f.reset -> data_cde0dc\n        for_9a8a8a.done -> sum_365f7b\n        data_cde0dc -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: -286, name: \"n\") property(Number) n_9e5d7f\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_7e7b73\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (2*n*n-1)\"\n        }\n        instance(x: 62, y: -226, name: \"average\") add_2d44da root.Std_k98ojb.Math.Add {}\n        data_instance(x: 394, y: -339) data_3c713b  = [sum, average]\n        data_3c713b -> output_7e7b73\n        n_9e5d7f -> pow_f892a4.gen_1\n        expression_2d6da6.result -> pow_f892a4.gen_0\n        pow_f892a4.result -> div_64046c.first\n        n_9e5d7f -> div_64046c.second\n        div_64046c.result -> add_2d44da.first\n        expression_634b7e.result -> add_2d44da.second\n        n_9e5d7f -> expression_634b7e.gen_0\n        n_9e5d7f -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth {\n        in(x: -337, y: -291, name: \"n\") property(Number) n_4e8b3c\n\n        out(x: 757, y: -385, name: \"sum\") property(Number) sum_4e2f5c\n\n        instance(x: 0, y: 0) for_4f9f8f root.Std_k98ojb.Std.For {}\n        instance(x: 16, y: -2) pow_4a9e9e root.Std_k98ojb.Math.Pow {}\n        instance(x: 13, y: -99) add_6f2b4e root.Std_k98ojb.Math.Add {}\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        for_4f9f8f.items -> pow_4a9e9e.gen_0\n        pow_4a9e9e.result -> add_6f2b4e.second\n        4 -> pow_4a9e9e.y\n        for_4f9f8f.index -> pow_4a9e9e.x\n        add_6f2b4e.result -> sum_4e2f5c\n        0 -> add_6f2b4e.first\n        for_4f9f8f.trigger -> for_4f9f8f.execute\n        n_4e8b3c -> for_4f9f8f.items\n        for_4f9f8f.done -> sum_4e2f5c\n        for_4f9f8f.reset -> sum_4e2f5c\n        n_4e8b3c -> mul_f892a4.first\n        n_4e8b3c -> expression_2d6da6.gen_0\n        div_64046c.result -> mul_f892a4.second\n        mul_f892a4.result -> expression_2d6da6.gen_0\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_1b5f4d root.main.sum_fourth {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -298, y: -5, name: \"n\") property(Number) n_5c9b6f\n\n        out(x: 713, y: -1, name: \"sum\") property(Number) sum_5a5c4f\n\n        instance(x: 20, y: -24) mul_9f8c1c root.Std_k98ojb.Math.Mul {}\n        instance(x: 10, y: 0) mul_6c4d6f root.Std_k98ojb.Math.Mul {}\n        instance(x: 340, y: 131) expression_1a6d0f root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 10, y: -24) pow_4d7c8e root.Std_k98ojb.Math.Pow {}\n        instance(x: 340, y: 2) div_2d8e6e root.Std_k98ojb.Math.Div {}\n        instance(x: 20, y: 0) add_9e8b9c root.Std_k98ojb.Math.Add {}\n        data_instance(x: 330, y: 133) data_3c713b  = 3\n        n_5c9b6f -> expression_1a6d0f.gen_0\n        expression_1a6d0f.result -> pow_4d7c8e.first\n        2 -> pow_4d7c8e.second\n        pow_4d7c8e.result -> mul_9f8c1c.second\n        mul_6c4d6f.result -> mul_9f8c1c.first\n        expression_1a6d0f.result -> mul_6c4d6f.second\n        data_3c713b -> mul_6c4d6f.first\n        div_2d8e6e.result -> add_9e8b9c.first\n        mul_9f8c1c.result -> add_9e8b9c.second\n        n_5c9b6f -> div_2d8e6e.first\n        data_3c713b -> div_2d8e6e.second\n        add_9e8b9c.result -> sum_5a5c4f\n    }\n\n    \n\n    instance(x: 116, y: -31) sum_fourth_power_2f9d1c root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -345, y: -291, name: \"n\") property(Number) n_6f8f4c\n\n        out(x: 758, y: -7, name: \"sum\") property(Number) sum_5e4f81\n\n        instance(x: 12, y: 139) expression_5b9f6f root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_7e4f8a root.Std_k98ojb.Math.Pow {}\n        instance(x: 23, y: -1) mul_3a8d3e root.Std_k98ojb.Math.Mul {}\n        instance(x: 12, y: 136) expression_6a6c1e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 330, y: 133) data_instance_5c1f6b  data_instance_5c1f6b",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth {\n        in(x: -284, y: -0, name: \"n\") property(Number) n_8f4f0d\n\n        out(x: 593, y: -1, name: \"sum\") property(Number) sum_5f1d0f\n\n        instance(x: 12, y: 136) expression_7e9b9e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a5d9c root.Std_k98ojb.Math.Pow {}\n        instance(x: 23, y: -1) mul_2d3c7e root.Std_k98ojb.Math.Mul {}\n        instance(x: 329, y: 131) expression_9f6e7c root.Std_k98ojb.Math.Expression {\n            expression: \"n * (2*n*n - 1)\"\n        }\n        n_8f4f0d -> expression_7e9b9e.gen_0\n        expression_7e9b9e.result -> pow_9a5d9c.x\n        4 -> pow_9a5d9c.y\n        pow_9a5d9c.result -> mul_2d3c7e.second\n        n_8f4f0d -> expression_9f6e7c.gen_0\n        expression_9f6e7c.result -> sum_5f1d0f\n        mul_2d3c7e.result -> expression_9f6e7c.gen_1\n        n_8f4f0d -> mul_2d3c7e.first\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_7c7f81 root.main.sum_fourth {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -340, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (2*n-1)*(2*n*n-1)/3\"\n        }\n        instance(x: 62, y: -226, name: \"sum2\") expression_6e4d1c root.Std_k98ojb.Math.Expression {\n            expression: \"n*n*(2*n+1)*(2*n*n-1)/3\"\n        }\n        data_instance(x: 394, y: -339) data_3c713b  = [sum, sum2]\n        data_3c713b -> output_ebef81\n        n_c88d35 -> expression_634b7e.gen_0\n        n_c88d35 -> expression_6e4d1c.gen_0\n        expression_634b7e.result -> data_3c713b.sum\n        expression_6e4d1c.result -> data_3c713b.sum2\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth {\n        in(x: -282, y: -288, name: \"n\") property(Number) n_4e3b0f\n\n        out(x: 745, y: -5, name: \"sum\") property(Number) sum_7e3f7c\n\n        instance(x: 17, y: -1) mul_f9f7f2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 21, y: 134) mul_8c2f6e root.Std_k98ojb.Math.Mul {}\n        instance(x: 311, y: 2) div_7f0b0e root.Std_k98ojb.Math.Div {}\n        data_instance(x: 326, y: 133) data_8f8c7f  = 3\n        instance(x: 11, y: 136) expression_6a2f5c root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 302, y: 2) pow_8e6e1e root.Std_k98ojb.Math.Pow {}\n        n_4e3b0f -> mul_f9f7f2.first\n        n_4e3b0f -> expression_6a2f5c.gen_0\n        expression_6a2f5c.result -> mul_f9f7f2.second\n        mul_f9f7f2.result -> div_7f0b0e.first\n        data_8f8c7f -> div_7f0b0e.second\n        div_7f0b0e.result -> mul_8c2f6e.first\n        div_7f0b0e.result -> pow_8e6e1e.base\n        mul_8c2f6e.result -> pow_8e6e1e.exponent\n        pow_8e6e1e.result -> sum_7e3f7c\n        div_7f0b0e.result -> mul_8c2f6e.second\n    }\n\n    \n\n    instance(x: 108, y: -26) sum_fourth_9e4a6c root.main.sum_fourth {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -100, y: 40, name: \"size\") property(Number) size_8d8c8d\n\n        out(x: 110, y: 18, name: \"area\") property(Number) area_5b1d1e\n\n        instance(x: 0, y: 0) mul_3c2d7c root.Std_k98ojb.Math.Mul {}\n        6 -> mul_3c2d7c.first\n        size_8d8c8d -> mul_3c2d7c.second\n        mul_3c2d7c.result -> area_5b1d1e\n    }\n\n    \n\n    instance(x: 119, y: -34) cube_surface_area_6c0f72 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -242, y: -81, name: \"size\") property(Number) size_5f4f5e\n\n        out(x: 650, y: -10, name: \"area\") property(Number) area_3a1e8d\n\n        instance(x: 96, y: -55) mul_4d3b5d root.Std_k98ojb.Math.Mul {}\n        instance(x: 97, y: -130) mul_6c3d4e root.Std_k98ojb.Math.Mul {}\n        instance(x: 94, y: -215) mul_2f8e8f root.Std_k98ojb.Math.Mul {}\n        size_5f4f5e -> mul_4d3b5d.first\n        size_5f4f5e -> mul_4d3b5d.second\n        mul_4d3b5d.result -> mul_6c3d4e.first\n        6 -> mul_6c3d4e.second\n        mul_6c3d4e.result -> mul_2f8e8f.first\n        size_5f4b8 -> mul_2f8e8f.second\n        mul_2f8e8f.result -> area_3a1e8d\n    }\n\n    \n\n    instance(x: -108, y: 47) surface_area_5f7e2e root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -211, y: -56, name: \"size\") property(Number) size_5e9c3e\n\n        out(x: 45, y: 7, name: \"area\") property(Number) area_9b3d0e\n\n        instance(x: -91, y: -17) mul_6c7f9f root.Std_k98ojb.Math.Mul {}\n        6 -> mul_6c7f9f.first\n        size_5e9c3e -> mul_6c7f9f.second\n        mul_6c7f9f.result -> area_9b3d0e\n    }\n\n    \n\n    instance(x: 147, y: 38) surface_area_4e5f1c root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -112, y: -51, name: \"side\") property(Number) side_5e6d7f\n\n        out(x: 656, y: -68, name: \"area\") property(Number) area_cbb7bd\n\n        instance(x: 94, y: -105) mul_8c4c0d root.Std_k98ojb.Math.Mul {}\n        side_5e6d7f -> mul_8c4c0d.first\n        6 -> mul_8c4c0d.second\n        mul_8c4c0d.result -> area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -119, y: -52, name: \"side\") property(Number) side_7a7f2f\n\n        out(x: 334, y: -20, name: \"surface area\") property(Number) surface_area_7e6f4c\n\n        instance(x: 0, y: -2) mul_3b8c4f root.Std_k98ojb.Math.Mul {}\n        instance(x: 98, y: -2) mul_8f9e9e root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -72) mul_1e4e7c root.Std_k98ojb.Math.Mul {}\n        instance(x: 96, y: -72) mul_5b4f6d root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -142) mul_6b9b6d root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -142) mul_5a2c4c root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -212) add_3c4e1c root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: -282) add_1e6f4c root.Std_k98ojb.Math.Add {}\n        side_7a7f2f -> mul_3b8c4f.first\n        6 -> mul_3b8c4f.second\n        side_7a7f2f -> mul_8f9e9e.first\n        side_7a7f2f -> mul_8f9e9e.second\n        mul_3b8c4f.result -> mul_1e4e7c.first\n        mul_8f9e9e.result -> mul_1e4e7c.second\n        mul_1e4e7c.result -> mul_5b4f6d.first\n        side_7a7f2f -> mul_5b4f6d.second\n        mul_5b4f6d.result -> mul_6b9b6d.first\n        side_7a7f2f -> mul_6b9b6d.second\n        mul_6b9b6d.result -> mul_5a2c4c.first\n        side_7a7f2f -> mul_5a2c4c.second\n        mul_5a2c4c.result -> add_3c4e1c.first\n        mul_1e4e7c.result -> add_3c4e1c.second\n        add_3c4e1c.result -> add_1e6f4c.first\n        mul_5b4f6d.result -> add_1e6f4c.second\n        add_1e6f4c.result -> surface_area_7e6f4c\n    }\n\n    \n\n    instance(x: 174, y: 41) surface_area_8e6f4c root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -104, y: -42, name: \"size\") property(Number) size_8c0d5f\n\n        out(x: 106, y: 14, name: \"surface area\") property(Number) surface_area_5e6b9c\n\n        instance(x: 7, y: -11) mul_9e8c4f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 94, y: 45) data_6c4d6f  = 6\n        instance(x: 22, y: 43) mul_6b9d7f root.Std_k98ojb.Math.Mul {}\n        data_6c4d6f -> mul_6b9d7f.first\n        size_8c0d5f -> mul_6b9d7f.second\n        mul_6b9d7f.result -> mul_9e8c4f.first\n        size_8c0d5f -> mul_9e8c4f.second\n        mul_9e8c4f.result -> surface_area_5e6b9c\n    }\n\n    \n\n    instance(x: 178, y: 75) cube_surface_area_2f9c3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -218, y: -49, name: \"size\") property(Number) size_3c6e76\n\n        out(x: 571, y: 7, name: \"area\") property(Number) area_1b5e0f\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        data_cde0dc -> mul_f892a4.first\n        expression_2d6da6.result -> mul_f892a4.second\n        size_3c6e76 -> expression_2d6da6.gen_0\n        mul_f892a4.result -> area_1b5e0f\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -219, y: 55, name: \"side\") property(Number) side_9a1d7c\n\n        out(x: 571, y: 7, name: \"surface area\") property(Number) surface_area_2d6da6\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"6*side*side\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        side_9a1d7c -> mul_f892a4.first\n        side_9a1d7c -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_2d6da6\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_9dcc3d root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -109, y: -65, name: \"size\") property(Number) size_4a2c92\n\n        out(x: 46, y: -51, name: \"surface area\") property(Number) surface_area_8d1b7e\n\n        instance(x: 22, y: -8) mul_2e1d6d root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_4a2c92 -> mul_2e1d6d.first\n        data_cde0dc -> mul_2e1d6d.second\n        mul_2e1d6d.result -> surface_area_8d1b7e\n    }\n\n    \n\n    instance(x: 322, y: 568) cube_surface_area_8d7d3e root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -1129, y: -185, name: \"size\") property(Number) size_7d4e0f\n\n        out(x: -14, y: -57, name: \"area\") property(Number) area_6d1e3f\n\n        instance(x: -678, y: -162) mul_7f9f7f root.Std_k98ojb.Math.Mul {}\n        instance(x: -478, y: -162) mul_6d7d8c root.Std_k98ojb.Math.Mul {}\n        instance(x: -378, y: -162) mul_9c1c7e root.Std_k98ojb.Math.Mul {}\n        6 -> mul_7f9f7f.first\n        size_7d4e0f -> mul_7f9f7f.second\n        size_7d4e0f -> mul_6d7d8c.first\n        size_7d4e0f -> mul_9c1c7e.first\n        mul_6d7d8c.result -> mul_9c1c7e.second\n        mul_9c1c7e.result -> mul_7f9f7f.second\n        mul_7f9f7f.result -> area_6d1e3f\n    }\n\n    \n\n    instance(x: 154, y: 85) surface_area_5a2b1f root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -286, y: -246, name: \"list\") property(List) list_8c8d6f\n\n        out(x: 436, y: -219, name: \"difference\") property(Number) difference_1d1e9d\n\n        instance(x: 426, y: -303) max_6e7c5c root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -442) min_5d7c9f root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: -303) sub_3f4d6f root.Std_k98ojb.Math.Sub {}\n        list_8c8d6f -> max_6e7c5c.items\n        list_8c8d6f -> min_5d7c9f.items\n        max_6e7c5c.max -> sub_3f4d6f.first\n        min_5d7c9f.min -> sub_3f4d6f.second\n        sub_3f4d6f.result -> difference_1d1e9d\n    }\n\n    \n\n    instance(x: 426, y: -303) diff_largest_smallest_4e7b9f root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -333, y: -236, name: \"list\") property(List) list_9b1e3a\n\n        out(x: 453, y: -217, name: \"difference\") property(Number) difference_1a2c1f\n\n        instance(x: -92, y: -236) max_5a6c9f root.Std_k98ojb.List.Max {}\n        instance(x: 183, y: -217) min_7d4b5c root.Std_k98ojb.List.Min {}\n        instance(x: 183, y: -35) sub_1b6d5d root.Std_k98ojb.Math.Sub {}\n        list_9b1e3a -> max_5a6c9f.items\n        list_9b1e3a -> min_7d4b5c.items\n        max_5a6c9f.max -> sub_1b6d5d.first\n        min_7d4b5c.min -> sub_1b6d5d.second\n        sub_1b6d5d.result -> difference_1a2c1f\n    }\n\n    \n\n    instance(x: 54, y: -15) diff_largest_smallest_8f7a6c root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -34, y: -25, name: \"list\") property(List) list_0b075e\n\n        out(x: 547, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: 194, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_7f7f5d root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -376) min_8e4d4d root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_7f7f5d.max -> sub_852f2e.first\n        min_8e4d4d.min -> sub_852f2e.second\n        list_0b075e -> max_7f7f5d.items\n        list_0b075e -> min_8e4d4d.items\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -35, y: -31, name: \"list\") property(List) list_0d9e5d\n\n        out(x: 446, y: 41, name: \"difference\") property(Number) difference_5f7e7d\n\n        instance(x: -83, y: -31) max_5d8f9c root.Std_k98ojb.List.Max {}\n        instance(x: 204, y: 41) sub_9e1d64 root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 138) min_7f6f7e root.Std_k98ojb.List.Min {}\n        list_0d9e5d -> max_5d8f9c.items\n        list_0d9e5d -> min_7f6f7e.items\n        max_5d8f9c.max -> sub_9e1d64.first\n        min_7f6f7e.min -> sub_9e1d64.second\n        sub_9e1d64.result -> difference_5f7e7d\n    }\n\n    \n\n    instance(x: 46, y: 11) diff_max_min_5a6d6f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -332, y: -240, name: \"list\") property(List) list_4e8b3c\n\n        out(x: 438, y: -220, name: \"difference\") property(Number) difference_4b1f5c\n\n        instance(x: -81, y: -305) max_4f9f8f root.Std_k98ojb.List.Max {}\n        instance(x: 207, y: -221) min_8f9e9e root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: -219) sub_6f4d4e root.Std_k98ojb.Math.Sub {}\n        list_4e8b3c -> max_4f9f8f.items\n        list_4e8b3c -> min_8f9e9e.items\n        max_4f9f8f.max -> sub_6f4d4e.first\n        min_8f9e9e.min -> sub_6f4d4e.second\n        sub_6f4d4e.result -> difference_4b1f5c\n    }\n\n    \n\n    instance(x: 48, y: -37) diff_largest_smallest_1f3f7c root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -297, y: -38, name: \"list\") property(List) list_4e5c9a\n\n        out(x: 463, y: 54, name: \"difference\") property(Number) difference_2f5a0c\n\n        instance(x: -63, y: -43) max_1e9f64 root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 54) sub_4f7c63 root.Std_k98ojb.Math.Sub {}\n        instance(x: -63, y: 115) min_4b1b2a root.Std_k98ojb.List.Min {}\n        list_4e5c9a -> max_1e9f64.items\n        list_4e5c9a -> min_4b1b2a.items\n        max_1e9f64.max -> sub_4f7c63.first\n        min_4b1b2a.min -> sub_4f7c63.second\n        sub_4f7c63.result -> difference_2f5a0c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_6c9f3c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -296, y: -247, name: \"list\") property(List) list_6e8e8e\n\n        out(x: 447, y: -237, name: \"diff\") property(Number) diff_8f3a2c\n\n        instance(x: -26, y: -306) max_9d6f2e root.Std_k98ojb.List.Max {}\n        instance(x: -27, y: -76) min_3e1c91 root.Std_k98ojb.List.Min {}\n        instance(x: 198, y: -237) sub_5f8e2f root.Std_k98ojb.Math.Sub {}\n        list_6e8e8e -> max_9d6f2e.items\n        list_6e8e8e -> min_3e1c91.items\n        max_9d6f2e.max -> sub_5f8e2f.first\n        min_3e1c91.min -> sub_5f8e2f.second\n        sub_5f8e2f.result -> diff_8f3a2c\n    }\n\n    \n\n    instance(x: 52, y: -37) diff_largest_smallest_1d6d7e root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff {\n        in(x: -30, y: -28, name: \"list\") property(List) list_8a4f8d\n\n        out(x: 554, y: 68, name: \"difference\") property(Number) difference_1c5b5f\n\n        instance(x: 176, y: 66) sub_1b9f7e root.Std_k98ojb.Math.Sub {}\n        instance(x: -42, y: 152) max_5b3f5c root.Std_k98ojb.List.Max {}\n        instance(x: -44, y: -44) min_4d9c8e root.Std_k98ojb.List.Min {}\n        list_8a4f8d -> max_5b3f5c.items\n        list_8a4f8d -> min_4d9c8e.items\n        max_5b3f5c.max -> sub_1b9f7e.first\n        min_4d9c8e.min -> sub_1b9f7e.second\n        sub_1b9f7e.result -> difference_1c5b5f\n    }\n\n    \n\n    instance(x: 47, y: 14) diff_3d9d7f root.main.diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -30, y: -30, name: \"list\") property(List) list_6c4d9d\n\n        out(x: 447, y: 44, name: \"diff\") property(Number) diff_9a3b8f\n\n        instance(x: 147, y: 44) sub_9e7f1f root.Std_k98ojb.Math.Sub {}\n        instance(x: -243, y: 155, name: \"max\") root_std_k98ojb_list_max root.Std_k98ojb.List.Max {}\n        instance(x: -243, y: -278, name: \"min\") root_std_k98ojb_list_min root.Std_k98ojb.List.Min {}\n        list_6c4d9d -> root_std_k98ojb_list_max.items\n        root_std_k98ojb_list_max.max -> sub_9e7f1f.first\n        list_6c4d9d -> root_std_k98ojb_list_min.items\n        root_std_k98ojb_list_min.min -> sub_9e7f1f.second\n        sub_9e7f1f.result -> diff_9a3b8f\n    }\n\n    \n\n    instance(x: 51, y: -1) diff_largest_smallest_9a1b9c root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -333, y: -25, name: \"list\") property(List) list_5c7f8f\n\n        out(x: 441, y: 12, name: \"difference\") property(Number) difference_5c6c0e\n\n        instance(x: -92, y: -25) max_3a6e81 root.Std_k98ojb.List.Max {}\n        instance(x: 194, y: 12) min_4d8c2f root.Std_k98ojb.List.Min {}\n        instance(x: 208, y: 12) sub_7a9c1c root.Std_k98ojb.Math.Sub {}\n        list_5c7f8f -> max_3a6e81.items\n        list_5c7f8f -> min_4d8c2f.items\n        max_3a6e81.max -> sub_7a9c1c.first\n        min_4d8c2f.min -> sub_7a9c1c.second\n        sub_7a9c1c.result -> difference_5c6c0e\n    }\n\n    \n\n    instance(x: 26, y: -2) diff_max_min_2d2b4c root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -39, y: -21, name: \"n\") property(Number) n_6f8e3f\n\n        out(x: 441, y: 10, name: \"output\") property(Bool) output_7b2b0d\n\n        instance(x: 178, y: 9) modulo_3b4c81 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 383, y: 6) equal_4f3f5d root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_3b4c81.divisor\n        n_6f8e3f -> modulo_3b4c81.value\n        0 -> equal_4f3f5d.right\n        modulo_3b4c81.result -> equal_4f3f5d.left\n        equal_4f3f5d.result -> output_7b2b0d\n    }\n\n    \n\n    instance(x: 32, y: 14) is_even_2f9a92 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -35, y: -20, name: \"n\") property(Number) n_1d5f4f\n\n        out(x: 551, y: 58, name: \"output\") property(Bool) output_9e9c1c\n\n        instance(x: 216, y: 57) modulo_7e3f4a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 454, y: 58) equal_3e5c92 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 688, y: 58) not_6b4b1d root.Std_k98ojb.Logic.Not {}\n        2 -> modulo_7e3f4a.divisor\n        n_1d5f4f -> modulo_7e3f4a.value\n        0 -> equal_3e5c92.right\n        modulo_7e3f4a.result -> equal_3e5c92.left\n        equal_3e5c92.result -> not_6b4b1d.input\n        not_6b4b1d.result -> output_9e9c1c\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_8d1b3f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -32, y: -34, name: \"n\") property(Number) n_2f5e9c\n\n        out(x: 538, y: 60, name: \"output\") property(Bool) output_9c8c9c\n\n        instance(x: 187, y: 62) modulo_2b4e4e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 428, y: 63) equal_7f5d6e root.Std_k98ojb.Logic.Equal {}\n        n_2f5e9c -> modulo_2b4e4e.value\n        2 -> modulo_2b4e4e.divisor\n        0 -> equal_7f5d6e.right\n        modulo_2b4e4e.result -> equal_7f5d6e.left\n        equal_7f5d6e.result -> output_9c8c9c\n    }\n\n    \n\n    instance(x: 43, y: 7) is_even_4d4b7f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_9e8c8d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 591, y: 74) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) choose_9a5d0c root.Std_k98ojb.Std.Choose {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        2 -> modulo_9e8c8d.divisor\n        input_f5c03d -> modulo_9e8c8d.value\n        modulo_9e8c8d.result -> lessthanorequal_f11fda.left\n        0 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        choose_9a5d0c.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> choose_9a5d0c.then\n        1 -> choose_9a5d0c.else\n        if_07b8c7.value -> choose_9a5d0c.predicate\n        0 -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        input_f5c03d -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_b720d7.gen_2\n        add_b4554f.result -> expression_9fba8c.gen_2\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        if_e19a62.value -> out_f3db9f\n        if_e19a62.else -> continue_8ba06b\n        if_07b8c7.then -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -52, y: -51, name: \"n\") property(Number) n_2d7e7f\n\n        out(x: 434, y: -55, name: \"output\") property(Bool) output_7e1f4e\n\n        instance(x: 189, y: -53) modulo_9c6b4c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 375, y: -52) equal_5a3e4a root.Std_k98ojb.Logic.Equal {}\n        equal_5a3e4a.result -> output_7e1f4e\n        n_2d7e7f -> modulo_9c6b4c.value\n        2 -> modulo_9c6b4c.divisor\n        0 -> equal_5a3e4a.right\n        modulo_9c6b4c.result -> equal_5a3e4a.left\n    }\n\n    \n\n    instance(x: 20, y: -8) is_even_5a2c4c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -31, y: -33, name: \"n\") property(Number) n_5f9f4d\n\n        out(x: 537, y: 1, name: \"output\") property(Bool) output_4e8b2e\n\n        instance(x: 200, y: 1) modulo_6b9f9e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: 1) equal_9d5b0d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 590, y: 1) not_9c1b2d root.Std_k98ojb.Logic.Not {}\n        n_5f9f4d -> modulo_6b9f9e.value\n        2 -> modulo_6b9f9e.divisor\n        0 -> equal_9d5b0d.right\n        modulo_6b9f9e.result -> equal_9d5b0d.left\n        equal_9d5b0d.result -> not_9c1b2d.input\n        not_9c1b2d.result -> output_4e8b2e\n    }\n\n    \n\n    instance(x: 50, y: -13) is_even_1f6b3c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -53, y: 8, name: \"n\") property(Number) n_9e9b99\n\n        out(x: 126, y: 5, name: \"output\") property(Bool) output_5e1b0e\n\n        instance(x: 15, y: 5) modulo_1c3d2a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 121, y: 5) equal_1e1d3a root.Std_k98ojb.Logic.Equal {}\n        equal_1e1d3a.result -> output_5e1b0e\n        0 -> equal_1e1d3a.right\n        modulo_1c3d2a.result -> equal_1e1d3a.left\n        n_9e9b99 -> modulo_1c3d2a.value\n        2 -> modulo_1c3d2a.divisor\n    }\n\n    \n\n    instance(x: -11, y: -11) is_even_4e1e9d root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -27, y: -24, name: \"input\") property(Number) input_1b9d5d\n\n        out(x: 125, y: 61, name: \"output\") property(Bool) output_1c5b5f\n\n        instance(x: 2, y: 60) modulo_1b9d7e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 103, y: 61) equal_5f9b6f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 224, y: 61) not_6b5f3f root.Std_k98ojb.Logic.Not {}\n        input_1b9d5d -> modulo_1b9d7e.value\n        2 -> modulo_1b9d7e.divisor\n        modulo_1b9d7e.result -> equal_5f9b6f.left\n        0 -> equal_5f9b6f.right\n        equal_5f9b6f.result -> not_6b5f3f.input\n        not_6b5f3f.result -> output_1c5b5f\n    }\n\n    \n\n    instance(x: 32, y: -7) is_even_1e6e6f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -57, y: -30, name: \"input\") property(Number) input_1e2e8c\n\n        out(x: 1118, y: -30, name: \"output\") property(Bool) output_7e8d74\n\n        instance(x: 634, y: -27) modulo_9e9a9e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1023, y: -27) equal_4f2f9a root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1336, y: -27) not_1b4d93 root.Std_k98ojb.Logic.Not {}\n        input_1e2e8c -> modulo_9e9a9e.value\n        2 -> modulo_9e9a9e.divisor\n        modulo_9e9a9e.result -> equal_4f2f9a.left\n        0 -> equal_4f2f9a.right\n        equal_4f2f9a.result -> not_1b4d93.input\n        not_1b4d93.result -> output_7e8d74\n    }\n\n    \n\n    instance(x: 21, y: -7) is_even_9c1e1d root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -39, y: -53, name: \"input\") property(Number) input_1a7e5c\n        in(x: 154, y: -211, name: \"execute\") trigger() execute_5b4c2d\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_3b4e9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_6e1f8f\n\n        instance(x: 352, y: -493) map_5f7c0c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_0c7c8c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_6e1d0c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_7e7b2e root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_0b6c94 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_1f4f07 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_1a9d3c root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_8e8f9e root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_8e8c74 root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_0c7c8c.from\n        input_1a7e5c -> generaterange_0c7c8c.to\n        generaterange_0c7c8c.list -> map_5f7c0c.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_3f1b4f\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_2a7d8c\n\n            instance(x: 106, y: 17) mul_3a8d2d root.Std_k98ojb.Math.Mul {}\n            element_3f1b4f -> mul_3a8d2d.first\n            element_3f1b4f -> mul_3a8d2d.second\n            mul_3a8d2d.result -> out_2a7d8c\n        } -> map_5f7c0c.handler\n        map_5f7c0c.output_list -> for_7e7b2e.items\n        for_7e7b2e.item -> lessthanorequal_6e1d0c.left\n        input_1a7e5c -> lessthanorequal_6e1d0c.right\n        lessthanorequal_6e1d0c.result -> if_1f4f07.predicate\n        for_7e7b2e.onItem -> if_1f4f07.execute\n        if_1f4f07.else -> continue_6e1f8f\n        expression_1a9d3c.result -> and_0b6c94.left\n        expression_9fba8c.result -> and_0b6c94.right\n        and_0b6c94.result -> if_8e8f9e.predicate\n        if_1f4f07.then -> if_8e8f9e.execute\n        for_7e7b2e.index -> add_8e8c74.first\n        1 -> add_8e8c74.second\n        add_8e8c74.result -> expression_1a9d3c.gen_1\n        add_8e8c74.result -> expression_9fba8c.gen_1\n        input_1a7e5c -> expression_9fba8c.gen_0\n        input_1a7e5c -> expression_1a9d3c.gen_0\n        if_1f4f07.value -> out_3b4e9f\n        if_8e8f9e.then -> continue_6e1f8f\n        for_7e7b2e.done -> continue_6e1f8f\n        execute_5b4c2d -> for_7e7b2e.reset\n        if_8e8f9e.else -> for_7e7b2e.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1f4f07 root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -270, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 520, y: -1, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) ``Find index of element_0`` root.Std_k98ojb.Iteration.Find {}\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n                current_afd5b1 -> equal_a54bdc.left\n                elem_9f6850 -> equal_a54bdc.right\n                equal_a54bdc.result -> bool_1eb6e9\n            } -> ``Find index of element_0``.predicate\n            instance(x: 0, y: 0) ``List of characters_0`` root.Std_k98ojb.Strings.Characters {}\n            ``List of characters_0``.characters -> ``Find index of element_0``.items\n            ``Find index of element_0``.item -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: 0, y: 0) ``List of characters_1`` root.Std_k98ojb.Strings.Characters {}\n        ``List of characters_1``.characters -> find_6d05b0.items\n        find_6d05b0.item -> output_0\n        input_0 -> ``List of characters_0``.input\n        input_0 -> ``List of characters_1``.input\n    }\n\n    \n\n    instance(x: 80, y: 50) first_repeated_6e6bfd root.main.first_repeated {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -282, y: 0, name: \"string\") property(String) string_0\n\n        out(x: 592, y: -1, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) for_1e4c6f root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) set_5f0f4e root.Std_k98ojb.Std.ToString {}\n        instance(x: 0, y: 0) contains_8f9b6d root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) first_5a0e6e root.Std_k98ojb.List.FirstItem {}\n        instance(x: 0, y: 0) ``if_1`` root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) ``if_2`` root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) add_2b6c8e root.Std_k98ojb.List.Add {}\n        instance(x: 0, y: 0) ``for_2`` root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) ``set_2`` root.Std_k98ojb.Std.ToString {}\n        instance(x: 0, y: 0) ``contains_2`` root.Std_k98ojb.Strings.Contains {}\n        for_1e4c6f.items -> string_0\n        for_1e4c6f.onItem -> ``for_2``.trigger\n        for_1e4c6f.index -> ``set_2``.input\n        ``set_2``.output -> add_2b6c8e.item\n        List.Empty() -> add_2b6c8e.list\n        add_2b6c8e.listWithItem -> ``for_2``.items\n        ``for_2``.onItem -> ``contains_2``.input\n        ``for_2``.item -> ``contains_2``.contains\n        ``for_2``.index -> ``set_2``.input\n        ``set_2``.output -> ``contains_2``.input\n        ``for_2``.done -> ``if_1``.execute\n        ``contains_2``.result -> ``if_1``.input\n        ``if_1``.then -> ``if_2``.execute\n        ``if_1``.else -> for_1e4c6f.next\n        ``if_2``.then -> output_0.continue\n        ``if_2``.else -> for_1e4c6f.next\n        ``if_2``.input -> ``contains_2``.result\n        ``for_2``.done -> ``if_2``.else\n        ``for_2``.index -> ``set_2``.input\n        ``set_2``.output -> ``contains_2``.input\n        ``if_1``.input -> ``contains_2``.result\n        ``if_2``.input -> ``contains_2``.result\n        for_1e4c6f.index -> ``set_2``.input\n        ``set_2``.output -> ``contains_2``.input\n        for_1e4c6f.item -> ``if_2``.input\n        ``if_2``.input -> ``contains_2``.contains\n        ``if_2``.input -> ``for_2``.item\n        ``if_2``.input -> ``if_1``.input\n        ``if_2``.input -> output_0\n        ``for_2``.items -> add_2b6c8e.listWithItem\n        ``set_2``.output -> ``contains_2``.input\n        ``for_2``.index -> ``set_2``.input\n        ``set_2``.output -> ``contains_2``.input\n        ``for_2``.item -> ``contains_2``.contains\n        ``for_2``.item -> ``if_2``.input\n        ``for_2``.item -> ``if_1``.input\n        ``for_2``.item -> output_0\n        ``if_1``.input -> ``contains_2``.result\n        ``if_2``.input -> ``contains_2``.result\n        ``if_2``.input -> ``for_2``.item\n        ``if_2``.input -> ``if_1``.input\n        ``if_2``.input -> output_0\n        ``for_2``.trigger -> ``for_2``.trigger\n        ``",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -272, y: 163, name: \"string\") property(String) input_2f1b7c\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_8c9c4c\n\n        instance(x: 0, y: 0) for_4e4a3e root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) find_3a3d0c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) characters_4d9e5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) tolower_5c6c1c root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 0, y: 0) notequal_1a5b8f root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 0, y: 0) orElse_4c4b7f root.Std_k98ojb.Std.OrElse {}\n        instance(x: 0, y: 0) set_7c9a8c root.Std_k98ojb.Std.Set {}\n        instance(x: 0, y: 0) get_1e4b7f root.Std_k98ojb.Std.Get {}\n        instance(x: 0, y: 0) concat_2e5b7f root.Std_k98ojb.List.Concat {}\n        instance(x: 0, y: 0) contains_3e4b7f root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) set_7c9a8c root.Std_k98ojb.Std.Set {}\n        input_2f1b7c -> tolower_5c6c1c.input\n        tolower_5c6c1c.output -> characters_4d9e5f.input\n        characters_4d9e5f.characters -> for_4e4a3e.items\n        for_4e4a3e.onItem -> find_3a3d0c.execute\n        for_4e4a3e.item -> find_3a3d0c.predicate\n        func() {\n            in(x: -111, y: 36, name: \"item\") property(String) item_1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 89, y: 29) get_1e4b7f root.Std_k98ojb.Std.Get {}\n            instance(x: 310, y: 35) notequal_1a5b8f root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 519, y: 44) orElse_4c4b7f root.Std_k98ojb.Std.OrElse {}\n            get_1e4b7f.value -> notequal_1a5b8f.left\n            item_1 -> notequal_1a5b8f.right\n            notequal_1a5b8f.result -> orElse_4c4b7f.first\n            concat_2e5b7f.output -> get_1e4b7f.key\n            set_7c9a8c.key -> concat_2e5b7f.left\n            item_1 -> concat_2e5b7f.right\n            set_7c9a8c.value -> orElse_4c4b7f.second\n            orElse_4c4b7f.value -> bool_2\n        }\n         -> set_7c9a8c.execute\n        item_1 -> set_7c9a8c.key\n        true -> set_7c9a8c.value\n        find_3a3d0c.item -> output_8c9c4c\n        for_4e4a3e.done -> for_4e4a3e.reset\n        for_4e4a3e.index -> get_1e4b7f.key\n        concat_2e5b7f.left -> set_7c9a8c.key\n        concat_2e5b7f.right -> set_7c9a8c.value\n        get_1e4b7f.key -> contains_3e4b7f.list\n        get_1e4b7f.value -> contains_3e4b7f.item\n        contains_3e4b7f.result -> get_1e4b7f.value\n    }\n\n    \n\n    instance(x: -281, y: 173) first_repeated_char_7c9a8c root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -272, y: 6, name: \"string\") property(String) input_0\n\n        out(x: 640, y: -4, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) characters_5a1d5e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) find_1e2b3f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``first repeated char_1d9d2d`` root.Std_k98ojb.Iteration.Find {}\n        characters_5a1d5e.input -> find_1e2b3f.items\n        func() {\n            in(x: -119, y: 35, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) ``find_1e2b3f_1`` root.Std_k98ojb.Iteration.Find {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> ``find_1e2b3f_1``.index\n            ``find_1e2b3f_1``.item -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_1e2b3f.predicate\n        characters_5a1d5e.characters -> ``first repeated char_1d9d2d``.items\n        func() {\n            in(x: -119, y: 35, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) ``first repeated char_1d9d2d_1`` root.Std_k98ojb.Iteration.Find {}\n            instance(x: 310, y: 35) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n            0 -> ``first repeated char_1d9d2d_1``.index\n            ``first repeated char_1d9d2d_1``.item -> equal_aabb6e.left\n            elem_9f6850 -> equal_aabb6e.right\n            equal_aabb6e.result -> bool_af09a7\n        } -> ``first repeated char_1d9d2d``.predicate\n        input_0 -> characters_5a1d5e.input\n        find_1e2b3f.item -> output_0\n        ``first repeated char_1d9d2d``.item -> output_0\n    }\n\n    \n\n    instance(x: -82, y: 14) FirstRepeatedChar_6c5a3d root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -274, y: 2, name: \"string\") property(String) input_2a7f2f\n\n        out(x: 800, y: -2, name: \"output\") property(String) output_8e7c6f\n\n        instance(x: 0, y: 0) find_7d3b0c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) characters_2c8f9e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) map_6f1e4e root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) contains_8b5b4f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) first_4c6b9f root.Std_k98ojb.List.FirstItem {}\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(String) item_5c7f9e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_7b5d4e root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            item_5c7f9e -> contains_7b5d4e.input\n            contains_7b5d4e.contains -> contains_7b5d4e.input\n            contains_7b5d4e.result -> notequal_148aeb.left\n            false -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> contains_8b5b4f.handler\n        characters_2c8f9e.characters -> map_6f1e4e.items\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(String) item_5c7f9e\n\n            out(x: 515, y: 44, name: \"item\") property(String) item_5c7f9e\n\n            instance(x: 112, y: 80) list_2c8f9e root.Std_k98ojb.List.Add {}\n            instance(x: 415, y: 86) ``list_2c8f9e_0b1361`` root.Std_k98ojb.List.NotEmpty {}\n            item_5c7f9e -> list_2c8f9e.item\n            list_2c8f9e.listWithItem -> ``list_2c8f9e_0b1361``.list\n            ``list_2c8f9e_0b1361``.notEmpty -> item_5c7f9e\n            item_5c7f9e -> list_2c8f9e.item\n            list_2c8f9e.listWithItem -> item_5c7f9e\n        } -> map_6f1e4e.handler\n        map_6f1e4e.output_list -> contains_8b5b4f.items\n        contains_8b5b4f.output_list -> find_7d3b0c.items\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(String) item_5c7f9e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_7b5d4e root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            item_5c7f9e -> contains_7b5d4e.input\n            input_2a7f2f -> contains_7b5d4e.contains\n            contains_7b5d4e.result -> notequal_148aeb.left\n            false -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_7d3b0c.predicate\n        first_4c6b9f.list -> input_2a7f2f\n        find_7d3b0c.item -> first_4c6b9f.item\n        first_4c6b9f.item -> output_8e7c6f\n    }\n\n    \n\n    instance(x: -290, y: 2) first_repeated_7f8e8c root.main.first_repeated {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -292, y: -13, name: \"string\") property(String) input_2\n\n        out(x: 596, y: -1, name: \"output\") property(Any) output_1\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 0, y: 0) characters_9e4c5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) filter_3b8b7c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) zip_9a8b6e root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 0, y: 0) map_8e9c7f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) concat_4f7b8c root.Std_k98ojb.List.Concat {}\n        instance(x: 0, y: 0) slice_5c6d8b root.Std_k98ojb.List.Slice {}\n        instance(x: 0, y: 0) generateRange_3b8c7d root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 0, y: 0) reduce_7f8c6d root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            concat_4f7b8c.listWithItem -> contains_d42dce.input\n            contains_d42dce.contains -> elem_9f6850\n            contains_d42dce.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        input_2 -> tolower_2e1444.input\n        tolower_2e1444.output -> characters_9e4c5c.input\n        characters_9e4c5c.characters -> filter_3b8b7c.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            zip_9a8b6e.left -> map_8e9c7f.items\n            generateRange_3b8c7d.list -> zip_9a8b6e.left\n            characters_9e4c5c.characters -> zip_9a8b6e.right\n            func() {\n                in(x: 0, y: 0, name: \"index\") property(Number) index_2\n\n                in(x: 0, y: 0, name: \"elem\") property(String) elem_3\n\n                out(x: 0, y: 0, name: \"result\") property(String) result_4\n\n                index_2 -> result_4\n            } -> map_8e9c7f.handler\n            map_8e9c7f.output_list -> zip_9a8b6e.zipped\n            zip_9a8b6e.zipped -> reduce_7f8c6d.items\n            func() {\n                in(x: 0, y: 0, name: \"acc\") property(List) acc_1\n\n                in(x: 0, y: 0, name: \"elem\") property(List) elem_2\n\n                out(x: 0, y: 0, name: \"result\") property(List) result_3\n\n                concat_4f7b8c.listWithItem -> result_3\n                acc_1 -> concat_4f7b8c.list\n                elem_2 -> concat_4f7b8c.item\n            } -> reduce_7f8c6d.handler\n            reduce_7f8c6d.output_list -> filter_3b8b7c.items\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(List) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                slice_5c6d8b.list -> contains_d42dce.input\n                contains_d42dce.contains -> elem_9f6850\n                contains_d42dce.result -> bool_af09a7\n            } -> filter_3b8b7c.handler\n            filter_3b8b7c.output_list -> find_6d05b0.items\n            1 -> generateRange_3b8c7d.from\n            characters_9e4c5c.characters.length -> generateRange_3b8c7d.to\n            1 -> slice_5c6d8b.start\n            filter_3b8b7c.output_list.length -> slice_5c6d8b.end\n            filter_3b8b7c.output_list -> slice_5c6d8b.list\n            slice_5c6d8b.slice -> concat_4f7b8c.list\n            find_6d05b0.item -> output_1\n        }",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: -3, name: \"string\") property(String) string_3c6e4e\n\n        out(x: 800, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) first_repeated_char_3f2a0f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``string_3c6e4e_0`` root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) contains_2b7e3e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``string_3c6e4e_1`` root.Std_k98ojb.Strings.Characters {}\n        ``string_3c6e4e_0``.characters -> first_repeated_char_3f2a0f.items\n        func() {\n            in(x: -110, y: 32, name: \"current\") property(String) current_1e3d1f\n\n            out(x: 516, y: 42, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 90, y: 27) ``string_3c6e4e_1`` root.Std_k98ojb.Strings.Characters {}\n            instance(x: 316, y: 33) contains_7c2f5f root.Std_k98ojb.Strings.Contains {}\n            current_1e3d1f -> contains_7c2f5f.input\n            ``string_3c6e4e_1``.characters -> contains_7c2f5f.contains\n            contains_7c2f5f.result -> bool_0\n        } -> first_repeated_char_3f2a0f.predicate\n        string_3c6e4e -> ``string_3c6e4e_0``.input\n        ``string_3c6e4e_0``.characters -> ``string_3c6e4e_1``.input\n        ``string_3c6e4e_1``.characters -> contains_2b7e3e.items\n        func() {\n            in(x: -110, y: 32, name: \"current\") property(String) current_1e3d1f\n\n            out(x: 516, y: 42, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 90, y: 27) ``string_3c6e4e_1`` root.Std_k98ojb.Strings.Characters {}\n            instance(x: 316, y: 33) contains_7c2f5f root.Std_k98ojb.Strings.Contains {}\n            current_1e3d1f -> contains_7c2f5f.input\n            ``string_3c6e4e_1``.characters -> contains_7c2f5f.contains\n            contains_7c2f5f.result -> bool_0\n        } -> contains_2b7e3e.handler\n        contains_2b7e3e.output_list -> first_repeated_char_3f2a0f.items\n        first_repeated_char_3f2a0f.item -> output_0\n    }\n\n    \n\n    instance(x: -297, y: -3) first_repeated_char_1d3d2f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -297, y: -4, name: \"string\") property(String) input_0\n\n        out(x: 584, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) find_5e1d0a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) for_0f7f6c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) contains_5c2f8a root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) list_5c5e6d root.Std_k98ojb.List {}\n        func() {\n            in(x: -129, y: 35, name: \"char\") property(String) char_0\n\n            out(x: 513, y: 36, name: \"bool\") property(Bool) bool_0\n\n            input_0 -> contains_5c5c6a.input\n            char_0 -> contains_5c5c6a.contains\n            contains_5c5c6a.result -> bool_0\n        } -> find_5e1d0a.predicate\n        list_5c5e6d.items -> contains_5c5c6a.input\n        for_0f7f6c.items -> list_5c5e6d.items\n        input_0 -> for_0f7f6c.items\n        for_0f7f6c.onItem -> list_5c5e6d.add\n        for_0f7f6c.index -> list_5c5e6d.index\n        list_5c5e6d.listWithItem -> list_5c5e6d.items\n        find_5e1d0a.items -> list_5c5e6d.items\n        for_0f7f6c.reset -> find_5e1d0a.reset\n        for_0f7f6c.trigger -> find_5e1d0a.trigger\n        for_0f7f6c.done -> output_0\n        find_5e1d0a.item -> output_0\n        for_0f7f6c.trigger -> for_0f7f6c.trigger\n    }\n\n    \n\n    instance(x: -83, y: 41) FirstRepeatedChar_0c9a4f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -274, y: 0, name: \"string\") property(String) string_2\n\n        out(x: 550, y: -1, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) characters_2d4dcb root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) find_1c3e8e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) find_5e1d8a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) index_3f5f0f root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 0, y: 0) notequal_7a4b4f root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 0, y: 0) filter_1e1c6c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) notequal_5e9c4a root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_0`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_1`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_2`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_3`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_4`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_5`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_6`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_7`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_8`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_9`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_10`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_11`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_12`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_13`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_14`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_15`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_16`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_17`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_18`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_19`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_20`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_21`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_22`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_23`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_24`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_25`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_26`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_27`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_28`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_29`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_30`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_31`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_32`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_33`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_34`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_35`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_36`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_37`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_38`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_39`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_40`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_41`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_42`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_43`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_44`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_45`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_46`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_47`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_48`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_49`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4dcb_50`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``characters_2d4d",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 2, name: \"string\") property(String) string_7b4e0f\n\n        out(x: 756, y: -5, name: \"output\") property(String) output_6f7e3f\n\n        instance(x: 0, y: 0) find_7f9f7f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) map_6b7d8c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) characters_9c1c7e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) contains_7c8c8f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) find_8c6d1d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) map_5c7c7d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) zip_4b8c8d root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 0, y: 0) range_9c8c8e root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 0, y: 0) slice_8c8c8f root.Std_k98ojb.List.Slice {}\n        instance(x: 0, y: 0) first_8c8c8e root.Std_k98ojb.List.FirstItem {}\n        instance(x: 0, y: 0) ``map_6b7d8c_1`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_1`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_2`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_2`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_3`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_3`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_4`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_4`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_5`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_5`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_6`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_6`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_7`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_7`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_8`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_8`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_9`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_9`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_10`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_10`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_11`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_11`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_12`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_12`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_13`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_13`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_14`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_14`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_15`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_15`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_16`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_16`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_17`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_17`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_18`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_18`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_19`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_19`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_20`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_20`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_21`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_21`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_22`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_22`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_23`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_5c7c7d_23`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``map_6b7d8c_24`` root.Std_k98ojb.Iteration.Map {}\n        instance(x:"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: -196, name: \"items\") property(List) items_7c8d8c\n\n        out(x: 42, y: -214, name: \"second smallest\") property(Number) second_smallest_3a2d1f\n\n        instance(x: -98, y: -299) min_8a3d2f root.Std_k98ojb.List.Min {}\n        instance(x: -108, y: -106) remove_2a9b7e root.Std_k98ojb.List.Remove {}\n        instance(x: 9, y: -111) min_8a3d2f_2 root.Std_k98ojb.List.Min {}\n        items_7c8d8c -> min_8a3d2f.items\n        min_8a3d2f.min -> remove_2a9b7e.index\n        items_7c8d8c -> remove_2a9b7e.list\n        remove_2a9b7e.listWithoutItem -> min_8a3d2f_2.items\n        min_8a3d2f_2.min -> second_smallest_3a2d1f\n    }\n\n    \n\n    instance(x: 342, y: 568) second_smallest_7c1f5f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -289, y: -207, name: \"items\") property(List) items_2f0e9f\n\n        out(x: 49, y: -214, name: \"second_smallest\") property(Number) second_smallest_1a2c1f\n\n        instance(x: -112, y: -113) list_min_node root.Std_k98ojb.List.Min {}\n        items_2f0e9f -> list_min_node.items\n        list_min_node.min -> remove_min_9e3c7f.min\n        instance(x: -111, y: 110) remove_min_9e3c7f root.Std_k98ojb.List.Remove {}\n        0 -> remove_min_9e3c7f.index\n        items_2f0e9f -> remove_min_9e3c7f.list\n        remove_min_9e3c7f.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_smallest_1a2c1f\n    }\n\n    \n\n    instance(x: -173, y: -61) second_smallest_9e1b51 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -418) list_remove_node root.Std_k98ojb.List.Remove {}\n        instance(x: 426, y: -532) list_min_node2 root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.index\n        list_min_node.min -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node2.items\n        list_min_node2.min -> second_smallest_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -296, y: -194, name: \"items\") property(List) items_2d5e6d\n\n        out(x: 51, y: -219, name: \"min\") property(Number) min_5f3b2c\n\n        instance(x: -115, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) list_remove_node root.Std_k98ojb.List.Remove {}\n        instance(x: 0, y: 0) list_min_node_2 root.Std_k98ojb.List.Min {}\n        items_2d5e6d -> list_min_node.items\n        list_min_node.min -> list_remove_node.index\n        list_min_node.items -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> min_5f3b2c\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -308, y: -194, name: \"list\") property(List) list_ai\n        out(x: 147, y: -211, name: \"min\") property(Number) min_ai\n\n        instance(x: 426, y: -303) min_0e6f9f root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) remove_1f1d1c root.Std_k98ojb.List.Remove {}\n        instance(x: 426, y: -303) min_6a8e8f root.Std_k98ojb.List.Min {}\n        list_ai -> min_0e6f9f.items\n        min_0e6f9f.min -> remove_1f1d1c.index\n        list_ai -> remove_1f1d1c.list\n        remove_1f1d1c.listWithoutItem -> min_6a8e8f.items\n        min_6a8e8f.min -> min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -296, y: -194, name: \"items\") property(List) items_6b8c0d\n\n        out(x: 52, y: -220, name: \"second_smallest\") property(Number) second_smallest_5a6b78\n\n        instance(x: -5, y: -296) find_1d9f4c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -110, y: 35, name: \"elem\") property(Number) elem_8b5e9e\n\n            out(x: 516, y: 43, name: \"bool\") property(Bool) bool_9d6c5c\n\n            instance(x: 88, y: 29) min_1f2c9d root.Std_k98ojb.List.Min {}\n            instance(x: 315, y: 34) less_than_6e6e9e root.Std_k98ojb.Math.LessThan {}\n            instance(x: 310, y: 0) notequal_8f1c93 root.Std_k98ojb.Logic.NotEqual {}\n            min_1f2c9d.min -> less_than_6e6e9e.left\n            elem_8b5e9e -> less_than_6e6e9e.right\n            less_than_6e6e9e.result -> notequal_8f1c93.left\n            elem_8b5e9e -> notequal_8f1c93.right\n            notequal_8f1c93.result -> bool_9d6c5c\n        } -> find_1d9f4c.predicate\n        items_6b8c0d -> find_1d9f4c.items\n        instance(x: 774, y: -295) find_1d9f4c_2 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -109, y: 35, name: \"elem\") property(Number) elem_7b1c6d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_6c9f9e\n\n            instance(x: 89, y: 29) min_1f2c9d_2 root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 34) less_than_6e6e9e_2 root.Std_k98ojb.Math.LessThan {}\n            instance(x: 310, y: 0) notequal_8f1c93_2 root.Std_k98ojb.Logic.NotEqual {}\n            min_1f2c9d_2.min -> less_than_6e6e9e_2.left\n            elem_7b1c6d -> less_than_6e6e9e_2.right\n            less_than_6e6e9e_2.result -> notequal_8f1c93_2.left\n            elem_7b1c6d -> notequal_8f1c93_2.right\n            notequal_8f1c93_2.result -> bool_6c9f9e\n        } -> find_1d9f4c_2.predicate\n        find_1d9f4c.item -> find_1d9f4c_2.items\n        find_1d9f4c_2.item -> second_smallest_5a6b78\n    }\n    \n\n    instance(x: -40, y: 121) second_smallest_2f1a5d root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -280, y: -190, name: \"items\") property(List) items_6b3c6e\n\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_3f3d2c\n\n        instance(x: -426, y: -303) min_1d6f2e root.Std_k98ojb.List.Min {}\n        instance(x: -105, y: -110) ifexpression_9a5e78 root.Std_k98ojb.Std.IfExpression {\n            expression: \"min == item\"\n        }\n        instance(x: -105, y: -110) ifexpression_8c3e9d root.Std_k98ojb.Std.IfExpression {\n            expression: \"min == item\"\n        }\n        instance(x: -105, y: -110) ifexpression_8b2d3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"min == item\"\n        }\n        instance(x: -105, y: -110) ifexpression_1d7f5c root.Std_k98ojb.Std.IfExpression {\n            expression: \"min == item\"\n        }\n        instance(x: -105, y: -110) ifexpression_1d6f2e root.Std_k98ojb.Std.IfExpression {\n            expression: \"min == item\"\n        }\n        instance(x: -105, y: -110) ifexpression_1d7f5c root.Std_k98ojb.Std.IfExpression {\n            expression: \"min == item\"\n        }\n        instance(x: -105, y: -110) ifexpression_8c3e9d root.Std_k98ojb.Std.IfExpression {\n            expression: \"min == item\"\n        }\n        instance(x: -105, y: -110) ifexpression_8b2d3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"min == item\"\n        }\n        instance(x: -105, y: -110) ifexpression_9a5e78 root.Std_k98ojb.Std.IfExpression {\n            expression: \"min == item\"\n        }\n        instance(x: -105, y: -110) ifexpression_1d6f2e root.Std_k98ojb.Std.IfExpression {\n            expression: \"min == item\"\n        }\n        instance(x: 426, y: -303) min_8b2d3c root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) min_8c3e9d root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) min_9a5e78 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) min_1d7f5c root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) min_1d6f2e root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) min_1d7f5c root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) min_8c3e9d root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) min_8b2d3c root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) min_9a5e78 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) min_1d6f2e root.Std_k98ojb.List.Min {}\n        items_6b3c6e -> min_1d6f2e.items\n        min_1d6f2e.min -> ifexpression_1d6f2e.gen_0\n        items_6b3c6e -> ifexpression_1d6f2e.gen_1\n        ifexpression_1d6f2e.then -> min_1d7f5c.items\n        items_6b3c6e -> min_1d7f5c.items\n        min_1d7f5c.min -> ifexpression_1d7f5c.gen_0\n        items_6b3c6e -> ifexpression_1d7f5c.gen_1\n        ifexpression_1d7f5c.then -> min_8c3e9d.items\n        items_6b3c6e -> min_8c3e9d.items\n        min_8c3e9d.min -> ifexpression_8c3e9d.gen_0\n        items_6b3c6e -> ifexpression_8c3e9d.gen_1\n        ifexpression_8c3e9d.then -> min_8b2d3c.items\n        items_6b3c6e -> min_8b2d3c.items\n        min_8b2d3c.min -> ifexpression_8b2d3c.gen_0\n        items_6b3c6e -> ifexpression_8b2d3c.gen_1\n        ifexpression_8b2d3c.then -> min_9a5e78.items\n        items_6b3c6e -> min_9a5e78.items\n        min_9a5e78.min -> ifexpression_9a5e78.gen_0\n        items_6b3c6e -> ifexpression_9a5e78.gen_1\n        ifexpression_9a5e78.then -> min_1d6f2e.items\n        items_6b3c6e -> min_1d6f2e.items\n        min_1d6f2e.min -> second_smallest_3f3d2c\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -903, y: -379, name: \"list\") property(List) list_abed4a\n\n        out(x: -78, y: -306, name: \"min\") property(Number) smallest_8713cf\n\n        instance(x: -609, y: -363) data_9a9c70  data.List\n        { list_abed4a  : [] }\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        data_9a9c70.list -> min_c3e343.items\n        min_c3e343.min -> data_9a9c70.min\n        instance(x: -50, y: -304) filter_9b1c5c root.Std_k98ojb.Query.Filter {\n            where: \"it != min\"\n        }\n        data_9a9c70.list -> filter_9b1c5c.list\n        instance(x: 593, y: -305) min_3b8f2f root.Std_k98ojb.List.Min {}\n        filter_9b1c5c.result -> min_3b8f2f.items\n        min_3b8f2f.min -> smallest_8713cf\n    }\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -903, y: -379, name: \"list\") property(List) list_abed4a\n\n        out(x: -78, y: -306, name: \"second smallest\") property(Number) second_smallest_8713cf\n\n        instance(x: -609, y: -363) min_0_8d1e8e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_2_8c1d6f root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            min_0_8d1e8e.item -> min_2_8c1d6f.items\n            elem_9f6850 -> min_2_8c1d6f.items\n            min_2_8c1d6f.min -> notequal_807ffd.left\n            min_0_8d1e8e.item -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> min_0_8d1e8e.predicate\n        list_abed4a -> min_0_8d1e8e.items\n        min_0_8d1e8e.item -> min_2_8c1d6f.items\n        min_2_8c1d6f.min -> second_smallest_8713cf\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -287, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1e5c6e root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 90, y: 0) min_4f9c80 root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_807ffd_2 root.Std_k98ojb.Logic.NotEqual {}\n            min_1e5c6e.min -> min_4f9c80.second\n            elem_9f6850 -> min_4f9c80.first\n            min_4f9c80.result -> notequal_807ffd_2.left\n            min_1e5c6e.min -> notequal_807ffd_2.right\n            notequal_807ffd_2.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_RAG_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15910,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) intersection_6a9b7e root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_6a9b7e.left\n        list2_c62075 -> intersection_6a9b7e.right\n        intersection_6a9b7e.intersect -> output_5bbcd7\n    }\n\n    \n\n    instance(x: -293, y: -5) common_element_7a4dad root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -333, y: -209, name: \"list1\") property(List) list1_7d9f9e\n        in(x: -341, y: -8, name: \"list2\") property(List) list2_7d8a3c\n\n        out(x: 1249, y: -200, name: \"output\") property(Bool) output_5d9c6e\n\n        instance(x: -98, y: -201, name: \"check if element in list2\") contains_1b3c0f root.Std_k98ojb.List.Contains {}\n        instance(x: 843, y: -200) ifexpression_6f4d1c root.Std_k98ojb.Std.IfExpression {\n            expression: \"is_contained\"\n        }\n        instance(x: 248, y: -202, name: \"get first element\") firstitem_5f1e8c root.Std_k98ojb.List.FirstItem {}\n        instance(x: 1057, y: -196) not_7e7d1e root.Std_k98ojb.Logic.Not {}\n        list1_7d9f9e -> firstitem_5f1e8c.list\n        firstitem_5f1e8c.item -> contains_1b3c0f.item\n        list2_7d8a3c -> contains_1b3c0f.list\n        contains_1b3c0f.is_contained -> ifexpression_6f4d1c.gen_0\n        ifexpression_6f4d1c.value -> output_5d9c6e\n        ifexpression_6f4d1c.then -> not_7e7d1e.execute\n        ifexpression_6f4d1c.else -> output_5d9c6e\n        not_7e7d1e.result -> output_5d9c6e\n    }\n\n    \n\n    instance(x: -293, y: -5) common_element_6f4d1c root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if two lists have at least one common element.\") common_element {\n        in(x: -434, y: -186, name: \"list1\") property(List) list1_5a1e8f\n        in(x: -438, y: 20, name: \"list2\") property(List) list2_5e4d9c\n\n        out(x: 1209, y: 14, name: \"output\") property(Bool) output_9c8c6f\n\n        instance(x: 117, y: -180) intersection_5b5e7f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 738, y: -178) notempty_1b8d0d root.Std_k98ojb.List.NotEmpty {}\n        list1_5a1e8f -> intersection_5b5e7f.left\n        list2_5e4d9c -> intersection_5b5e7f.right\n        intersection_5b5e7f.intersect -> notempty_1b8d0d.list\n        notempty_1b8d0d.isEmpty -> output_9c8c6f\n    }\n\n    \n\n    instance(x: -316, y: -4) common_element_9e4f1c root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -485, y: -212, name: \"list1\") property(List) list1_7a1d3e\n        in(x: -480, y: 33, name: \"list2\") property(List) list2_7d6d5c\n\n        out(x: 1262, y: -208, name: \"output\") property(Bool) output_7c8e2d\n\n        instance(x: 1004, y: -201) intersection_6d3c7c root.Std_k98ojb.Sets.Intersection {}\n        list1_7a1d3e -> intersection_6d3c7c.left\n        list2_7d6d5c -> intersection_6d3c7c.right\n        instance(x: 1244, y: -202) notempty_7e5e1d root.Std_k98ojb.List.NotEmpty {}\n        intersection_6d3c7c.intersect -> notempty_7e5e1d.list\n        notempty_7e5e1d.isEmpty -> output_7c8e2d\n    }\n\n    \n\n    instance(x: -292, y: -6) common_element_8f1f54 root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if two lists have at least one common element.\") common_element {\n        in(x: -435, y: -222, name: \"list1\") property(List) list1_7d6b9f\n        in(x: -435, y: -40, name: \"list2\") property(List) list2_7f1b1f\n\n        out(x: 1291, y: -218, name: \"output\") property(Bool) output_7c7b1d\n\n        instance(x: -163, y: -218) intersection_6e7b2e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1050, y: -217) notempty_8e5b1c root.Std_k98ojb.List.NotEmpty {}\n        list1_7d6b9f -> intersection_6e7b2e.left\n        list2_7f1b1f -> intersection_6e7b2e.right\n        intersection_6e7b2e.intersect -> notempty_8e5b1c.list\n        notempty_8e5b1c.isEmpty -> output_7c7b1d\n    }\n\n    \n\n    instance(x: -71, y: -25) common_element_4e8c6d root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if two lists have at least one common element.\") common_element {\n        in(x: -527, y: -214, name: \"list1\") property(List) list1_07cae4\n        in(x: -527, y: -335, name: \"list2\") property(List) list2_07cae4\n\n        out(x: 1269, y: -329, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -325, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -327) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -329, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -323) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -18, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 76, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 56, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 63) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 58) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list1_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -3, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: 15, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: 12) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: 14) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        list2_07cae4 -> contains_32727d.list\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) common_element_7a4dad root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -365, y: -230, name: \"list1\") property(List) list1_6b3f6c\n        in(x: -369, y: -9, name: \"list2\") property(List) list2_3e4c73\n\n        out(x: 1233, y: -203, name: \"output\") property(Bool) output_5c4f4e\n\n        instance(x: 115, y: -209) intersection_9a3c6c root.Std_k98ojb.Sets.Intersection {}\n        list1_6b3f6c -> intersection_9a3c6c.left\n        list2_3e4c73 -> intersection_9a3c6c.right\n        instance(x: 705, y: -205) notempty_2d2e4f root.Std_k98ojb.List.NotEmpty {}\n        intersection_9a3c6c.intersect -> notempty_2d2e4f.list\n        notempty_2d2e4f.isEmpty -> output_5c4f4e\n    }\n\n    \n\n    instance(x: -292, y: -9) common_element_6f6e9d root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -347, y: -178, name: \"list1\") property(List) list1_7d5d8d\n        in(x: -348, y: 26, name: \"list2\") property(List) list2_6c6c5e\n\n        out(x: 1261, y: -9, name: \"output\") property(Bool) output_3d2c8d\n\n        instance(x: 1016, y: 41) contains_3f0d1d root.Std_k98ojb.List.Contains {}\n        instance(x: 699, y: -156) intersection_6e9c3e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1030, y: -182) not_5e7d2e root.Std_k98ojb.Logic.Not {}\n        list1_7d5d8d -> intersection_6e9c3e.left\n        list2_6c6c5e -> intersection_6e9c3e.right\n        intersection_6e9c3e.intersection -> contains_3f0d1d.list\n        [] -> contains_3f0d1d.item\n        contains_3f0d1d.is_contained -> not_5e7d2e.input\n        not_5e7d2e.result -> output_3d2c8d\n    }\n\n    \n\n    instance(x: -305, y: -16) common_element_3a7b5c root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -389, y: -177, name: \"list1\") property(List) list1_3f8f8c\n        in(x: -402, y: 44, name: \"list2\") property(List) list2_1e7b5f\n\n        out(x: 1149, y: 17, name: \"output\") property(Bool) output_3b2c7d\n\n        instance(x: 647, y: 63) ifexpression_7e5f7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous || current\"\n        }\n        getter(x: 328, y: 176, name: \"getter_1f3f9e\") getter_1f3f9e = previous\n        setter(x: 677, y: -303, name: \"setter_e7e5b7\") setter_e7e5b7 = previous\n        instance(x: 321, y: -20) for_5d3b5f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_e7e5b7\") setter_1d8f2c = previous\n        instance(x: -278, y: -35) contains_3f4b79 root.Std_k98ojb.List.Contains {}\n        ifexpression_7e5f7f.else -> output_3b2c7d\n        ifexpression_7e5f7f.value -> output_3b2c7d\n        ifexpression_7e5f7f.then -> setter_e7e5b7.execute\n        list1_3f8f8c -> for_5d3b5f.items\n        for_5d3b5f.item -> ifexpression_7e5f7f.gen_2\n        for_5d3b5f.index -> ifexpression_7e5f7f.gen_0\n        getter_1f3f9e.value -> ifexpression_7e5f7f.gen_1\n        for_5d3b5f.onItem -> ifexpression_7e5f7f.execute\n        for_5d3b5f.done -> output_3b2c7d\n        for_5d3b5f.item -> setter_e7e5b7.new_value\n        list2_1e7b5f -> contains_3f4b79.list\n        for_5d3b5f.item -> contains_3f4b79.item\n        contains_3f4b79.is_contained -> ifexpression_7e5f7f.gen_3\n        execute -> setter_1d8f2c.execute\n        setter_1d8f2c.continue -> for_5d3b5f.reset\n        setter_e7e5b7.continue -> for_5d3b5f.next\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_7e9d3d root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -285, y: -86, name: \"list1\") property(List) list1_3af6ba\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_8f1b8a root.Std_k98ojb.List.NotEmpty {}\n        list1_3af6ba -> intersection_c7c7e6.left\n        list2_c62075 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> notempty_8f1b8a.list\n        notempty_8f1b8a.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_ac7dfb root.main.common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -523, y: -234, name: \"list\") property(List) list_7c8d8c\n\n        out(x: 1267, y: -213, name: \"output\") property(Bool) output_2e8d1e\n\n        instance(x: -303, y: -205, name: \"filter list\") filter_5b8a4d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"map numbers to true/false\") map_4e7f48 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_3e3e6e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_c2f3a5 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_3e3e6e -> sub_c2f3a5.first\n            _index_769593 -> sub_c2f3a5.second\n            sub_c2f3a5.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_5b8a4d.handler\n        list_7c8d8c -> filter_5b8a4d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) sub_5f3e4c root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) notequal_4c3e6d root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_5f3e4c.first\n            sub_5f3e4c.second -> sub_5f3e4c.first\n            sub_5f3e4c.result -> notequal_4c3e6d.left\n            1 -> notequal_4c3e6d.right\n            notequal_4c3e6d.result -> bool_4524be\n        } -> map_4e7f48.handler\n        filter_5b8a4d.output_list -> map_4e7f48.items\n        map_4e7f48.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_2e8d1e\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_numbers_8e8f8d root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -473, y: -238, name: \"list\") property(List) list_1e9c91\n\n        out(x: 1261, y: -219, name: \"output\") property(Bool) output_3e5f9c\n\n        instance(x: 757, y: -212) ifexpression_6c8c1f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current - previous == 1\"\n        }\n        getter(x: 333, y: 159, name: \"getter_6c8c5c\") getter_6c8c5c = previous\n        setter(x: 678, y: -321, name: \"setter_7f9d0e\") setter_7f9d0e = previous\n        instance(x: 321, y: -39) for_3d3f5c root.Std_k98ojb.Std.For {}\n        setter(x: -1, y: -125, name: \"setter_7f9d0e\") setter_7d1e2f = previous\n        instance(x: -275, y: -51) getat_7f6c9e root.Std_k98ojb.List.GetAt {}\n        ifexpression_6c8c1f.else -> continue_6f9f71\n        ifexpression_6c8c1f.value -> output_3e5f9c\n        ifexpression_6c8c1f.then -> setter_7f9d0e.execute\n        list_1e9c91 -> for_3d3f5c.items\n        for_3d3f5c.item -> ifexpression_6c8c1f.gen_2\n        for_3d3f5c.index -> ifexpression_6c8c1f.gen_0\n        getter_6c8c5c.value -> ifexpression_6c8c1f.gen_1\n        for_3d3f5c.onItem -> ifexpression_6c8c1f.execute\n        for_3d3f5c.done -> continue_6f9f71\n        for_3d3f5c.item -> setter_7f9d0e.new_value\n        list_1e9c91 -> getat_7f6c9e.list\n        0 -> getat_7f6c9e.index\n        getat_7f6c9e.itemAtIndex -> setter_7d1e2f.new_value\n        execute_9f6e1e -> setter_7d1e2f.execute\n        setter_7d1e2f.continue -> for_3d3f5c.reset\n        setter_7f9d0e.continue -> for_3d3f5c.next\n    }\n\n    \n\n    instance(x: 7, y: -185) consecutive_numbers_6c8c1f root.main.consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -497, y: -208, name: \"list\") property(List) list_1b3c2f\n\n        out(x: 1239, y: -211, name: \"output\") property(Bool) output_7d5c5c\n\n        instance(x: -272, y: -206) for_6f7c7a root.Std_k98ojb.Std.For {}\n        instance(x: 751, y: -210) ifexpression_9e2f0a root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 332, y: 161, name: \"getter_6e3b5a\") getter_6e3b5a = previous\n        setter(x: 678, y: -320, name: \"setter_9b8c6f\") setter_9b8c6f = previous\n        instance(x: 320, y: -24) getat_9e7a9d root.Std_k98ojb.List.GetAt {}\n        ifexpression_9e2f0a.else -> setter_9b8c6f.execute\n        ifexpression_9e2f0a.value -> output_7d5c5c\n        ifexpression_9e2f0a.then -> setter_9b8c6f.execute\n        list_1b3c2f -> for_6f7c7a.items\n        for_6f7c7a.item -> ifexpression_9e2f0a.gen_2\n        for_6f7c7a.index -> ifexpression_9e2f0a.gen_0\n        getter_6e3b5a.value -> ifexpression_9e2f0a.gen_1\n        for_6f7c7a.onItem -> ifexpression_9e2f0a.execute\n        for_6f7c7a.done -> setter_9b8c6f.execute\n        for_6f7c7a.item -> setter_9b8c6f.new_value\n        list_1b3c2f -> getat_9e7a9d.list\n        0 -> getat_9e7a9d.index\n        getat_9e7a9d.itemAtIndex -> getter_6e3b5a.value\n        setter_9b8c6f.continue -> for_6f7c7a.next\n    }\n\n    \n\n    instance(x: 8, y: -174) consecutive_7a8a6a root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -517, y: -233, name: \"list\") property(List) list_5c3f6e\n\n        out(x: 1227, y: -208, name: \"output\") property(Bool) output_7c3d1e\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_5c3f6e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_5c3f6e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) consecutive_7f7b2d root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -501, y: -213, name: \"list\") property(List) list_7e7c1e\n\n        out(x: 1179, y: -212, name: \"output\") property(Bool) output_5c6b2d\n\n        instance(x: -276, y: -210, name: \"sorted list\") sort_5c5c6f root.Std_k98ojb.List.Sort {}\n        instance(x: 679, y: -206) for_7b4d7a root.Std_k98ojb.Std.For {}\n        instance(x: 1047, y: -208) sub_8b8c5f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1259, y: -207) greaterthan_8c8f1f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1437, y: -209) and_8f9e5d root.Std_k98ojb.Logic.And {}\n        instance(x: 1608, y: -210) not_5c8a9d root.Std_k98ojb.Logic.Not {}\n        instance(x: 1766, y: -212) ifexpression_8f6b1e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous - current == 1\"\n        }\n        getter(x: 847, y: -21, name: \"getter_5f9e7d\") getter_5f9e7d = previous\n        setter(x: 1259, y: -315, name: \"setter_9e8c1d\") setter_9e8c1d = previous\n        instance(x: 1086, y: -326) getat_9d8f5d root.Std_k98ojb.List.GetAt {}\n        ifexpression_8f6b1e.else -> not_5c8a9d.input\n        not_5c8a9d.result -> output_5c6b2d\n        ifexpression_8f6b1e.then -> setter_9e8c1d.execute\n        ifexpression_8f6b1e.value -> output_5c6b2d\n        list_7e7c1e -> sort_5c5c6f.list\n        sort_5c5c6f.sortedList -> for_7b4d7a.items\n        for_7b4d7a.item -> ifexpression_8f6b1e.gen_2\n        for_7b4d7a.index -> ifexpression_8f6b1e.gen_0\n        getter_5f9e7d.value -> ifexpression_8f6b1e.gen_1\n        for_7b4d7a.onItem -> ifexpression_8f6b1e.execute\n        for_7b4d7a.done -> output_5c6b2d\n        for_7b4d7a.item -> setter_9e8c1d.new_value\n        list_7e7c1e -> getat_9d8f5d.list\n        0 -> getat_9d8f5d.index\n        getat_9d8f5d.itemAtIndex -> setter_9e8c1d.new_value\n        setter_9e8c1d.continue -> for_7b4d7a.next\n        getter_5f9e7d.value -> sub_8b8c5f.first\n        for_7b4d7a.item -> sub_8b8c5f.second\n        sub_8b8c5f.result -> greaterthan_8c8f1f.left\n        1 -> greaterthan_8c8f1f.right\n        greaterthan_8c8f1f.result -> and_8f9e5d.left\n        0 -> and_8f9e5d.right\n        and_8f9e5d.result -> ifexpression_8f6b1e.gen_3\n    }\n\n    \n\n    instance(x: -12, y: -57) consecutive_numbers_1e5d3c root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_7a4dad root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -483, y: -232, name: \"list\") property(List) list_5e6b9e\n\n        out(x: 1189, y: -227, name: \"output\") property(Bool) output_2a9d0e\n\n        instance(x: 743, y: -224) ifexpression_9c7c93 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 335, y: 149, name: \"getter_8b4c5f\") getter_8b4c5f = previous\n        setter(x: 680, y: -318, name: \"setter_5d7f0f\") setter_5d7f0f = previous\n        instance(x: 322, y: -30) for_e8d9c5 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_5d7f0f\") setter_5e9eef = previous\n        instance(x: -276, y: -45) getat_5c9d4f root.Std_k98ojb.List.GetAt {}\n        ifexpression_9c7c93.else -> continue_3d8f71\n        ifexpression_9c7c93.value -> output_2a9d0e\n        ifexpression_9c7c93.then -> setter_5d7f0f.execute\n        list_5e6b9e -> for_e8d9c5.items\n        for_e8d9c5.item -> ifexpression_9c7c93.gen_2\n        for_e8d9c5.index -> ifexpression_9c7c93.gen_0\n        getter_8b4c5f.value -> ifexpression_9c7c93.gen_1\n        for_e8d9c5.onItem -> ifexpression_9c7c93.execute\n        for_e8d9c5.done -> continue_3d8f71\n        for_e8d9c5.item -> setter_5d7f0f.new_value\n        list_5e6b9e -> getat_5c9d4f.list\n        0 -> getat_5c9d4f.index\n        getat_5c9d4f.itemAtIndex -> setter_5e9eef.new_value\n        execute_3b1c5d -> setter_5e9eef.execute\n        setter_5e9eef.continue -> for_e8d9c5.reset\n        setter_5d7f0f.continue -> for_e8d9c5.next\n    }\n\n    \n\n    instance(x: 19, y: -174) consecutive_numbers_3b1c5d root.main.consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -533, y: -235, name: \"list\") property(List) list_4e6f6c\n\n        out(x: 1215, y: -228, name: \"output\") property(Bool) output_9c3b4c\n\n        instance(x: 744, y: -218) ifexpression_6b9d4a root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current - previous == 1\"\n        }\n        getter(x: 330, y: 152, name: \"getter_7c7c7f\") getter_7c7c7f = previous\n        setter(x: 676, y: -357, name: \"setter_3f3f3f\") setter_3f3f3f = previous\n        instance(x: 320, y: -68) for_7f7f7f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -169, name: \"setter_3f3f3f\") setter_5f5f5f = previous\n        instance(x: -276, y: -83) getat_8f8f8f root.Std_k98ojb.List.GetAt {}\n        ifexpression_6b9d4a.else -> continue_2a2a2a\n        ifexpression_6b9d4a.value -> output_9c3b4c\n        ifexpression_6b9d4a.then -> setter_3f3f3f.execute\n        list_4e6f6c -> for_7f7f7f.items\n        for_7f7f7f.item -> ifexpression_6b9d4a.gen_2\n        for_7f7f7f.index -> ifexpression_6b9d4a.gen_0\n        getter_7c7c7f.value -> ifexpression_6b9d4a.gen_1\n        for_7f7f7f.onItem -> ifexpression_6b9d4a.execute\n        for_7f7f7f.done -> continue_2a2a2a\n        for_7f7f7f.item -> setter_3f3f3f.new_value\n        list_4e6f6c -> getat_8f8f8f.list\n        0 -> getat_8f8f8f.index\n        getat_8f8f8f.itemAtIndex -> setter_5f5f5f.new_value\n        execute_9d9d9d -> setter_5f5f5f.execute\n        setter_5f5f5f.continue -> for_7f7f7f.reset\n        setter_3f3f3f.continue -> for_7f7f7f.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_1c1c1c root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -533, y: -230, name: \"list\") property(List) list_3a8c7c\n\n        out(x: 1271, y: -228, name: \"output\") property(Bool) output_4b9d89\n\n        instance(x: 767, y: -231) find_6b2e3c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 1097, y: -228) notequal_8b5d5a root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 680, y: -318) getat_6f3a1d root.Std_k98ojb.List.GetAt {}\n        instance(x: 321, y: 160, name: \"getter_8d5d5a\") getter_8d5d5a previous\n        < James, who, in his book, The History of the Life and Death of John, Earl of Rochester, states that Rochester was \"a great master of raillery, and a most excellent satirist, and in both these ways he had the good fortune to be seldom or never answered.\" James also says that Rochester was \"a man of a most excellent natural wit, and a most profound judgment, and that in his conversation he was the most agreeable person that could be imagined.\" James was also Rochester's cousin, and the two were very close. Rochester died in 1680, and James published his book in 1680. James was a friend of John Dryden, who wrote a poem in memory of Rochester, and Dryden was also a friend of Rochester. Dryden's poem, \"A Song for St. Cecilia's Day,\" was published in 1687, and it includes a reference to Rochester. Dryden also wrote a poem, \"To the Memory of an Unfortunate Lady,\" which is believed to be about Rochester's mistress, Elizabeth Malet. Dryden and Rochester were both members of the Kit-Cat Club, a group of writers and artists. Dryden was a member of the club from 1682 to 1700, and Rochester was a member from 1679 to 1680. The Kit-Cat Club was founded in 1662, and it was named after the Cat and Kit tavern in London. The club was a place for writers and artists to meet and discuss their work. The club was also a place for political discussion, and it was a place where members could meet with politicians. The club was dissolved in 1718. Rochester was a member of the Whig party, and he was a supporter of the Glorious Revolution. He was also a supporter of the Exclusion Bill, which would have excluded James, Duke of York, from the throne. Rochester was a friend of the Earl of Shaftesbury, who was a leader of the Whig party. Shaftesbury was also a friend of John Locke, who was a philosopher and political theorist. Locke was a member of the Whig party, and he was a supporter of the Glorious Revolution. Locke was also a supporter of the Exclusion Bill. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a member of the Kit-Cat Club, and he was a member from 1682 to 1700. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the Earl of Shaftesbury, and he was a friend of John Dryden. Locke was also a friend of the Earl of Rochester. Locke was a friend of the",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -459, y: -232, name: \"list\") property(List) list_5b3e3d\n\n        out(x: 1217, y: -229, name: \"output\") property(Bool) output_2b4d6e\n\n        instance(x: 756, y: -18) ifexpression_3e6b5e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current - previous == 1\"\n        }\n        getter(x: 333, y: 152, name: \"getter_8e5f5f\") getter_8e5f5f = previous\n        setter(x: 678, y: -322, name: \"setter_4b1f9c\") setter_4b1f9c = previous\n        instance(x: 320, y: -52) for_3c3e0c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -141, name: \"setter_4b1f9c\") setter_3e8d0f = previous\n        instance(x: -276, y: -67) getat_8e8a94 root.Std_k98ojb.List.GetAt {}\n        ifexpression_3e6b5e.else -> setter_4b1f9c.execute\n        ifexpression_3e6b5e.value -> output_2b4d6e\n        ifexpression_3e6b5e.then -> setter_4b1f9c.execute\n        list_5b3e3d -> for_3c3e0c.items\n        for_3c3e0c.item -> ifexpression_3e6b5e.gen_2\n        for_3c3e0c.index -> ifexpression_3e6b5e.gen_0\n        getter_8e5f5f.value -> ifexpression_3e6b5e.gen_1\n        for_3c3e0c.onItem -> ifexpression_3e6b5e.execute\n        for_3c3e0c.done -> setter_4b1f9c.execute\n        for_3c3e0c.item -> setter_4b1f9c.new_value\n        list_5b3e3d -> getat_8e8a94.list\n        0 -> getat_8e8a94.index\n        getat_8e8a94.itemAtIndex -> setter_3e8d0f.new_value\n        setter_3e8d0f.continue -> for_3c3e0c.reset\n        setter_4b1f9c.continue -> for_3c3e0c.next\n    }\n\n    \n\n    instance(x: 11, y: -186) consecutive_numbers_1d4f8c root.main.consecutive_numbers {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -520, y: -212, name: \"list1\") property(List) list1_3f8c7b\n        in(x: -526, y: -11, name: \"list2\") property(List) list2_2d1f5c\n\n        out(x: 1265, y: -207, name: \"output\") property(Bool) output_9b4b7d\n\n        instance(x: -291, y: -205, name: \"list1 length\") length_4a8e9d root.Std_k98ojb.List.Length {}\n        instance(x: -290, y: -10, name: \"list2 length\") length_6d1d4a root.Std_k98ojb.List.Length {}\n        instance(x: 848, y: -205) not_6c4f7e root.Std_k98ojb.Logic.Not {}\n        instance(x: 847, y: -9) greaterthan_7e3c6c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1058, y: -203) not_4c8b2f root.Std_k98ojb.Logic.Not {}\n        instance(x: 1058, y: -7) greaterthan_4c8b2f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -3, y: -204, name: \"list1 length > list2 length\") ifexpression_7c7a5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"list1Length > list2Length\"\n        }\n        instance(x: -1, y: -7, name: \"list2 length > list1 length\") ifexpression_3a5c0c root.Std_k98ojb.Std.IfExpression {\n            expression: \"list2Length > list1Length\"\n        }\n        instance(x: -275, y: -205, name: \"loop list1\") for_1a8c7e root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -7, name: \"loop list2\") for_4f1b6d root.Std_k98ojb.Std.For {}\n        instance(x: 1058, y: -203) greaterthan_6b6d5d root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1058, y: -7) lessorequal_1c9d3d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1058, y: -203) lessorequal_7e3c6c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1058, y: -7) greaterthan_4c8b2f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1058, y: -203) equal_6c4f7e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1058, y: -7) equal_4c8b2f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 246, y: -205, name: \"get list1 index\") getat_4a7d9a root.Std_k98ojb.List.GetAt {}\n        instance(x: 246, y: -7, name: \"get list2 index\") getat_7c5b6d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: -203) and_6c4f7e root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -7) and_4c8b2f root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -203) and_7e3c6c root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -7) and_1c9d3d root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -203) and_4c8b2f root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -7) and_7e3c6c root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -203) and_6b6d5d root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -7) and_1c9d3d root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -203) and_7e3c6c root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -7) and_4c8b2f root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -203) or_6c4f7e root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -7) or_4c8b2f root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -203) or_7e3c6c root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -7) or_1c9d3d root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -203) or_4c8b2f root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -7) or_7e3c6c root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -203) or_6b6d5d root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -7) or_1c9d3d root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -203) or_7e3c6c root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -7) or_4c8b2f root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -203) or_7e3c6c root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -7) or_4c8b2f root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -203) or_6b6d5d root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -7) or_1c9d3d root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -203) or_7e3c6c root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -7) or_4c8b2f root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -203) or_6c4f7e root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -7) or_4c8b2f root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -203) if_6c4f7e root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -7) if_4c8b2f root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -203) if_7e3c6c root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -7) if_1c9d3d root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -203) if_4c8b2f root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -7) if_7e3c6c root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -203) if_6b6d5d root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -7) if_1c9d3d root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 105",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") sublist {\n        in(x: -473, y: -214, name: \"list1\") property(List) list1_7f9b3c\n        in(x: -483, y: 30, name: \"list2\") property(List) list2_5f9c2f\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_7f9b3c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_7f9b3c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) sublist_9a9b3f root.main.sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") sublist {\n        in(x: -570, y: -213, name: \"list1\") property(List) list1_5c2f1e\n        in(x: -568, y: -41, name: \"list2\") property(List) list2_5c2f1e\n\n        out(x: 1230, y: -213, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -303, y: -205, name: \"all pairs\") zip_5c2f1e root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 847, y: -207) contains_5c2f1e root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform pairs to true/false\") map_5c2f1e root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_5c2f1e root.Std_k98ojb.Logic.Not {}\n        list1_5c2f1e -> zip_5c2f1e.left\n        list2_5c2f1e -> zip_5c2f1e.right\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(List) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_5c2f1e root.Std_k98ojb.List.Contains {}\n            instance(x: 463, y: 51) notequal_5c2f1e root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_5c2f1e.right\n            contains_5c2f1e.is_contained -> notequal_5c2f1e.left\n            _index_769593 -> contains_5c2f1e.list\n            _index_170471 -> contains_5c2f1e.item\n            notequal_5c2f1e.result -> output_efbc78\n        } -> map_5c2f1e.handler\n        zip_5c2f1e.zipped -> map_5c2f1e.items\n        map_5c2f1e.output_list -> contains_5c2f1e.list\n        false -> contains_5c2f1e.item\n        contains_5c2f1e.is_contained -> not_5c2f1e.input\n        not_5c2f1e.result -> output_5bbcd7\n    }\n\n    \n\n    instance(x: -293, y: -5) sublist_5c2f1e root.main.sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: -86, name: \"list1\") property(List) list1_3af6ba\n        in(x: -285, y: 56, name: \"list2\") property(List) list2_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list1_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list2_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        list2_3af6ba -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -385, y: -160, name: \"list1\") property(List) list1_7d6b9f\n        in(x: -392, y: 0, name: \"list2\") property(List) list2_7f1b92\n\n        out(x: 1170, y: -147, name: \"output\") property(Bool) output_6d6c8d\n\n        instance(x: -148, y: -151, name: \"list1 length\") length_6f6f9f root.Std_k98ojb.List.Length {}\n        instance(x: -148, y: -8, name: \"list2 length\") length_8c6f4d root.Std_k98ojb.List.Length {}\n        instance(x: 1069, y: -147) contains_6b8a6c root.Std_k98ojb.List.Contains {}\n        instance(x: 1059, y: -40) not_8c8b3d root.Std_k98ojb.Logic.Not {}\n        instance(x: -153, y: 51, name: \"slice\") slice_5a8d5f root.Std_k98ojb.List.Slice {}\n        instance(x: -152, y: 167, name: \"for\") for_6f8b6d root.Std_k98ojb.Std.For {}\n        instance(x: 1073, y: -40) if_1b8c6f root.Std_k98ojb.Std.If {}\n        instance(x: 1058, y: 71, name: \"getat\") getat_7c6d8b root.Std_k98ojb.List.GetAt {}\n        instance(x: 1073, y: 135) if_4c8c6d root.Std_k98ojb.Std.If {}\n        instance(x: 1058, y: 194, name: \"getat\") getat_8c6b5d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 256, name: \"getat\") getat_6b8c6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 318, name: \"getat\") getat_8c6b6d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 379, name: \"getat\") getat_7c8c6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 441, name: \"getat\") getat_6c8b6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 502, name: \"getat\") getat_6c8b8d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 564, name: \"getat\") getat_7c8c6d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 625, name: \"getat\") getat_6c8c6d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 687, name: \"getat\") getat_6c8b8f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 748, name: \"getat\") getat_7c8c8f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 810, name: \"getat\") getat_6c8c8d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 871, name: \"getat\") getat_6c8c8f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 933, name: \"getat\") getat_7c8c8d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 994, name: \"getat\") getat_6c8f6d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 1056, name: \"getat\") getat_7c8c6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 1117, name: \"getat\") getat_6c8c6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 1179, name: \"getat\") getat_7c8c8f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 1240, name: \"getat\") getat_6c8c8d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 1302, name: \"getat\") getat_7c8c8d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 1363, name: \"getat\") getat_6c8f8d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 1425, name: \"getat\") getat_7c8f8d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 1486, name: \"getat\") getat_6c8f8f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 1548, name: \"getat\") getat_7c8f8f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 1610, name: \"getat\") getat_6c8f6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 1671, name: \"getat\") getat_7c8f6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 1733, name: \"getat\") getat_6c8f8f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 1794, name: \"getat\") getat_7c8f8f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 1856, name: \"getat\") getat_6c8f6d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 1917, name: \"getat\") getat_7c8f6d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 1979, name: \"getat\") getat_6c8f8d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 2040, name: \"getat\") getat_7c8f8d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 2102, name: \"getat\") getat_6c8f8f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 2163, name: \"getat\") getat_7c8f8f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 2225, name: \"getat\") getat_6c8f6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 2286, name: \"getat\") getat_7c8f6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 2348, name: \"getat\") getat_6c8f8f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 2410, name: \"getat\") getat_7c8f8f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 2471, name: \"getat\") getat_6c8f6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 2533, name: \"getat\") getat_7c8f6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 2594, name: \"getat\") getat_6c8f8f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 2656, name: \"getat\") getat_7c",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -527, y: -214, name: \"list1\") property(List) list1_07cae4\n        in(x: -527, y: -12, name: \"list2\") property(List) list2_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list1_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -480, y: -224, name: \"list1\") property(List) list1_1f846b\n        in(x: -490, y: 27, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1229, y: -198, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -311, y: -195, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 843, y: -197) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 244, y: -199, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1056, y: -193) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list1_1f846b -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: -235, name: \"list1\") property(List) list1_3f6a7d\n        in(x: -317, y: -9, name: \"list2\") property(List) list2_7b4c6c\n\n        out(x: 1197, y: -120, name: \"output\") property(Bool) output_9c4f3d\n\n        instance(x: -147, y: -224, name: \"find first index\") findindex_3d9d3c root.Std_k98ojb.Iteration.Find {}\n        instance(x: -147, y: -6, name: \"find last index\") findindex_8e7e88 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 1055, y: -219) greaterthan_9b5b8c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1055, y: -98) lessthan_1e6d3f root.Std_k98ojb.Math.LessThan {}\n        instance(x: 1055, y: -3) and_8f4b6c root.Std_k98ojb.Logic.And {}\n        instance(x: 1055, y: 101) greaterthan_9f8b7f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1055, y: 184) lessthan_9f9d2f root.Std_k98ojb.Math.LessThan {}\n        instance(x: 1055, y: 253) and_7b4c8f root.Std_k98ojb.Logic.And {}\n        instance(x: 1055, y: 320) and_7f4d6c root.Std_k98ojb.Logic.And {}\n        func() {\n            in(x: -38, y: -31, name: \"current\") property(Number) current_9f8d8c\n            in(x: -23, y: 74, name: \"_index\") property(Number) _index_4e6d4f\n\n            out(x: 708, y: 43, name: \"output\") property(Bool) output_7c4f7c\n\n            instance(x: 217, y: 50) equal_3c4f5c root.Std_k98ojb.Logic.Equal {}\n            current_9f8d8c -> equal_3c4f5c.left\n            0 -> equal_3c4f5c.right\n            equal_3c4f5c.result -> output_7c4f7c\n        } -> findindex_3d9d3c.predicate\n        list1_3f6a7d -> findindex_3d9d3c.items\n        func() {\n            in(x: -34, y: -30, name: \"current\") property(Number) current_4f6d7c\n            in(x: -22, y: 74, name: \"_index\") property(Number) _index_8e6d7c\n\n            out(x: 705, y: 43, name: \"output\") property(Bool) output_7c4f7d\n\n            instance(x: 215, y: 50) equal_3c4f5d root.Std_k98ojb.Logic.Equal {}\n            current_4f6d7c -> equal_3c4f5d.left\n            0 -> equal_3c4f5d.right\n            equal_3c4f5d.result -> output_7c4f7d\n        } -> findindex_8e7e88.predicate\n        list1_3f6a7d -> findindex_8e7e88.items\n        findindex_3d9d3c.index -> greaterthan_9b5b8c.left\n        findindex_8e7e88.index -> greaterthan_9b5b8c.right\n        greaterthan_9b5b8c.result -> lessthan_1e6d3f.left\n        findindex_3d9d3c.index -> lessthan_1e6d3f.right\n        and_8f4b6c.left -> greaterthan_9b5b8c.result\n        and_8f4b6c.right -> lessthan_1e6d3f.result\n        and_8f4b6c.result -> findindex_3d9d3c.index\n        findindex_3d9d3c.index -> greaterthan_9f8b7f.left\n        findindex_8e7e88.index -> greaterthan_9f8b7f.right\n        greaterthan_9f8b7f.result -> lessthan_9f9d2f.left\n        findindex_3d9d3c.index -> lessthan_9f9d2f.right\n        and_7b4c8f.left -> greaterthan_9f8b7f.result\n        and_7b4c8f.right -> lessthan_9f9d2f.result\n        and_7b4c8f.result -> findindex_8e7e88.index\n        and_7f4d6c.left -> and_8f4b6c.result\n        and_7f4d6c.right -> and_7b4c8f.result\n        and_7f4d6c.result -> output_9c4f3d\n        list2_7b4c6c -> list1_3f6a7d\n    }\n\n    \n\n    instance(x: -71, y: -22) is_sublist_8c4f3d root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -450, y: -230, name: \"list1\") property(List) list1_7b5e3d\n        in(x: -450, y: -40, name: \"list2\") property(List) list2_9e6d1c\n\n        out(x: 1267, y: -125, name: \"output\") property(Bool) output_7b5b97\n\n        instance(x: -276, y: -220, name: \"generate list of lists\") generate_5f7b9c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: -1, y: -222) map_9e7d6a root.Std_k98ojb.Iteration.Map {}\n        instance(x: 318, y: -218) contains_6e7d6a root.Std_k98ojb.List.Contains {}\n        instance(x: 717, y: -220) filter_8f7d6a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1055, y: -221) any_6f7d6a root.Std_k98ojb.List.NotEmpty {}\n        func() {\n            in(x: -29, y: -16, name: \"current\") property(Number) current_9e6d1c\n\n            out(x: 702, y: 50, name: \"output\") property(List) output_8e6d1c\n\n            instance(x: 224, y: 57) slice_7f7d6a root.Std_k98ojb.List.Slice {}\n            instance(x: 455, y: 54) concat_9f7d6a root.Std_k98ojb.List.Concat {}\n            current_9e6d1c -> slice_7f7d6a.start\n            current_9e6d1c -> slice_7f7d6a.end\n            list1_7b5e3d -> slice_7f7d6a.items\n            concat_9f7d6a.left -> slice_7f7d6a.slice\n            list2_9e6d1c -> concat_9f7d6a.right\n            concat_9f7d6a.result -> output_8e6d1c\n        } -> map_9e7d6a.handler\n        generate_5f7b9c.to -> map_9e7d6a.items\n        0 -> generate_5f7b9c.from\n        list1_7b5e3d -> generate_5f7b9c.list\n        map_9e7d6a.output_list -> contains_6e7d6a.list\n        list2_9e6d1c -> contains_6e7d6a.item\n        contains_6e7d6a.is_contained -> filter_8f7d6a.handler\n        map_9e7d6a.output_list -> filter_8f7d6a.items\n        filter_8f7d6a.output_list -> any_6f7d6a.list\n        any_6f7d6a.is_empty -> output_7b5b97\n    }\n\n    \n\n    instance(x: -62, y: -5) is_sublist_7e6d1c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -515, y: -211, name: \"list1\") property(List) list1_2f3d9e\n        in(x: -518, y: 24, name: \"list2\") property(List) list2_3f3c7e\n\n        out(x: 1253, y: -204, name: \"output\") property(Bool) output_5e9b8d\n\n        instance(x: -296, y: -208, name: \"only equal items\") filter_5e5e0c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 849, y: -202) contains_9d3b1d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -204, name: \"transform numbers to true/false\") map_7f6f8e root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1059, y: -198) not_3c7f8f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -29, y: -24, name: \"current\") property(Number) _index_1e8a8d\n            in(x: -21, y: 80, name: \"_index\") property(Number) _index_1a7c1d\n\n            out(x: 709, y: 50, name: \"output\") property(Bool) output_9e4b6c\n\n            instance(x: 225, y: 57) modulo_7a7e7f root.Std_k98ojb.Math.Modulo {}\n            instance(x: 462, y: 52) notequal_5f3f2f root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_7a7e7f.divisor\n            0 -> notequal_5f3f2f.right\n            notequal_5f3f2f.result -> output_9e4b6c\n            modulo_7a7e7f.result -> notequal_5f3f2f.left\n            _index_1a7c1d -> modulo_7a7e7f.value\n        } -> filter_5e5e0c.handler\n        list1_2f3d9e -> filter_5e5e0c.items\n        func() {\n            in(x: -190, y: -15, name: \"current\") property(Number) current_2e1b9c\n\n            out(x: 523, y: -27, name: \"bool\") property(Bool) bool_9a3f1d\n\n            instance(x: 73, y: -24) modulo_3b7c1d root.Std_k98ojb.Math.Modulo {}\n            instance(x: 284, y: -26) notequal_8c7b9d root.Std_k98ojb.Logic.NotEqual {}\n            current_2e1b9c -> modulo_3b7c1d.value\n            2 -> modulo_3b7c1d.divisor\n            modulo_3b7c1d.result -> notequal_8c7b9d.left\n            0 -> notequal_8c7b9d.right\n            notequal_8c7b9d.result -> bool_9a3f1d\n        } -> map_7f6f8e.handler\n        filter_5e5e0c.output_list -> map_7f6f8e.items\n        map_7f6f8e.output_list -> contains_9d3b1d.list\n        list2_3f3c7e -> contains_9d3b1d.item\n        not_3c7f8f.result -> output_5e9b8d\n        contains_9d3b1d.is_contained -> not_3c7f8f.input\n    }\n\n    \n\n    instance(x: -288, y: -8) is_sublist_1a9f8f root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -279, y: -0, name: \"list\") property(List) list_8c8d6f\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_1d1e9c\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_7c0f1f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            sub_7c0f1f.result -> notequal_807ffd.left\n            elem_9f6850 -> sub_7c0f1f.second\n            index -> sub_7c0f1f.first\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_8c8d6f -> find_6d05b0.items\n        find_6d05b0.item -> missing_1d1e9c\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_7c0d92 root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: -3, name: \"list\") property(List) list_ai\n\n        out(x: 566, y: 21, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) not_2b3a8c root.Std_k98ojb.Logic.Not {}\n            instance(x: 305, y: 35) equal_8d3f6c root.Std_k98ojb.Logic.Equal {}\n            instance(x: 310, y: 35) sub_7d3e4e root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) add_4a2c0c root.Std_k98ojb.Math.Add {}\n            1 -> add_4a2c0c.second\n            elem_9f6850 -> add_4a2c0c.first\n            add_4a2c0c.result -> sub_7d3e4e.first\n            0 -> sub_7d3e4e.second\n            sub_7d3e4e.result -> equal_8d3f6c.right\n            index -> equal_8d3f6c.left\n            equal_8d3f6c.result -> not_2b3a8c.input\n            not_2b3a8c.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_ai -> find_6d05b0.items\n        find_6d05b0.item -> missing_ai\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -426, y: -248, name: \"list\") property(List) list_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) for_2c8a0f root.Std_k98ojb.Std.For {}\n        instance(x: 426, y: -303) ifexpression_7b4d1f root.Std_k98ojb.Std.IfExpression {\n            expression: \"i + 1 != list[i + 1]\"\n        }\n        instance(x: 426, y: -303) return_1c8d0e root.Std_k98ojb.Std.Return {}\n        instance(x: 426, y: -303) return_7e6b9c root.Std_k98ojb.Std.Return {}\n        instance(x: 426, y: -303) return_7b9c8f root.Std_k98ojb.Std.Return {}\n        instance(x: 426, y: -303) add_2f6a5e root.Std_k98ojb.Math.Add {}\n        instance(x: 426, y: -303) getat_2d5e0d root.Std_k98ojb.List.GetAt {}\n        instance(x: 426, y: -303) getat_2b9c6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 426, y: -303) if_1d5e9c root.Std_k98ojb.Std.If {}\n        instance(x: 426, y: -303) if_1b8d8c root.Std_k98ojb.Std.If {}\n        instance(x: 426, y: -303) if_1b9c7e root.Std_k98ojb.Std.If {}\n        instance(x: 426, y: -303) count_1c8d0e root.Std_k98ojb.Std.Count {}\n        instance(x: 426, y: -303) count_7e6b9c root.Std_k98ojb.Std.Count {}\n        instance(x: 426, y: -303) count_7b9c8f root.Std_k98ojb.Std.Count {}\n        list_ai -> for_2c8a0f.items\n        0 -> count_1c8d0e.value\n        0 -> count_7e6b9c.value\n        0 -> count_7b9c8f.value\n        count_1c8d0e.count -> for_2c8a0f.next\n        count_7e6b9c.count -> for_2c8a0f.next\n        count_7b9c8f.count -> for_2c8a0f.next\n        for_2c8a0f.item -> getat_2b9c6f.list\n        getat_2b9c6f.index -> getat_2b9c6f.index\n        for_2c8a0f.index -> getat_2d5e0d.index\n        getat_2b9c6f.itemAtIndex -> if_1b8d8c.input\n        if_1b8d8c.then -> getat_2d5e0d.execute\n        getat_2b9c6f.itemAtIndex -> if_1b9c7e.input\n        if_1b9c7e.then -> return_7b9c8f.execute\n        if_1b9c7e.else -> count_7b9c8f.reset\n        if_1b8d8c.else -> count_7e6b9c.reset\n        getat_2d5e0d.itemAtIndex -> ifexpression_7b4d1f.gen_1\n        for_2c8a0f.index -> ifexpression_7b4d1f.gen_0\n        ifexpression_7b4d1f.then -> return_1c8d0e.execute\n        ifexpression_7b4d1f.else -> add_2f6a5e.execute\n        for_2c8a0f.index -> add_2f6a5e.first\n        1 -> add_2f6a5e.second\n        add_2f6a5e.result -> return_7e6b9c.value\n        return_1c8d0e.value -> missing_ai\n        return_7b9c8f.value -> missing_ai\n        return_7e6b9c.value -> missing_ai\n        for_2c8a0f.trigger -> for_2c8a0f.reset\n        for_2c8a0f.done -> for_2c8a0f.trigger\n    }\n\n    \n\n    instance(x: 322, y: 568) smallest_missing_3a5c8e root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -281, y: -0, name: \"list\") property(List) list_9e7f7a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) expression_4a7c7c root.Std_k98ojb.Math.Expression {\n                expression: \"elem != index + 1\"\n            }\n            expression_4a7c7c.index -> index_2d1c2e\n            elem_9f6850 -> expression_4a7c7c.gen_0\n            expression_4a7c7c.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9e7f7a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -302, y: -8, name: \"list\") property(List) list_ae1e4e\n\n        out(x: 591, y: -2, name: \"missing\") property(Number) missing_5c1b2d\n\n        instance(x: 0, y: 0) for_a8c7b8 root.Std_k98ojb.Std.For {\n            items: \"list\"\n        }\n        func() {\n            in(x: -124, y: 30, name: \"index\") property(Number) index_1c7d0f\n            in(x: -124, y: 83, name: \"item\") property(Number) item_1e4b0e\n\n            out(x: 511, y: 83, name: \"missing\") property(Number) missing_7b8d3c\n\n            instance(x: 90, y: 65) ifexpression_8f9e5c root.Std_k98ojb.Std.IfExpression {\n                expression: \"item - index != 0\"\n            }\n            instance(x: 310, y: 65) sub_6d7e7c root.Std_k98ojb.Math.Sub {}\n            index_1c7d0f -> sub_6d7e7c.first\n            item_1e4b0e -> sub_6d7e7c.second\n            sub_6d7e7c.result -> ifexpression_8f9e5c.gen_0\n            0 -> ifexpression_8f9e5c.gen_1\n            ifexpression_8f9e5c.then -> missing_7b8d3c\n            ifexpression_8f9e5c.else -> for_a8c7b8.next\n        } -> for_a8c7b8.on_item\n        list_ae1e4e -> for_a8c7b8.items\n        for_a8c7b8.done -> missing_5c1b2d\n        missing_7b8d3c -> missing_5c1b2d\n    }\n\n    \n\n    instance(x: -61, y: 530) smallest_missing_7e5c0e root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -282, y: -193, name: \"list\") property(List) list_1d7f0a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_5a4d9e\n\n        instance(x: 0, y: 0) for_9b1e8d root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item_8c6f7a\n            in(x: -107, y: -34, name: \"index\") property(Number) index_1e4f3d\n\n            out(x: 515, y: 44, name: \"continue\") trigger() continue_7e4c0c\n\n            instance(x: 89, y: 29) ifexpression_9c3e1d root.Std_k98ojb.Std.IfExpression {\n                expression: \"item - index != 0\"\n            }\n            instance(x: 310, y: 35) sub_1e2f4f root.Std_k98ojb.Math.Sub {}\n            instance(x: 309, y: -41) notequal_2e9c3f root.Std_k98ojb.Logic.NotEqual {}\n            index_1e4f3d -> sub_1e2f4f.first\n            item_8c6f7a -> sub_1e2f4f.second\n            sub_1e2f4f.result -> notequal_2e9c3f.left\n            0 -> notequal_2e9c3f.right\n            notequal_2e9c3f.result -> ifexpression_9c3e1d.gen_0\n            ifexpression_9c3e1d.then -> continue_7e4c0c\n            item_8c6f7a -> missing_5a4d9e\n        } -> for_9b1e8d.on_item\n        list_1d7f0a -> for_9b1e8d.items\n        for_9b1e8d.done -> missing_5a4d9e\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_9e3e7c root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -281, y: -187, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_2c8e5c root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) ifexpression_8c4b0f root.Std_k98ojb.Std.IfExpression {\n                expression: \"index > 0\"\n            }\n            instance(x: 310, y: 35) ifexpression_7b1b0e root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            instance(x: 310, y: 35) ifexpression_6c4b0f root.Std_k98ojb.Std.IfExpression {\n                expression: \"index > 0\"\n            }\n            instance(x: 310, y: 35) ifexpression_5c4b0f root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            instance(x: 310, y: 35) ifexpression_4c4b0f root.Std_k98ojb.Std.IfExpression {\n                expression: \"index > 0\"\n            }\n            instance(x: 310, y: 35) ifexpression_3c4b0f root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            instance(x: 310, y: 35) ifexpression_2c4b0f root.Std_k98ojb.Std.IfExpression {\n                expression: \"index > 0\"\n            }\n            instance(x: 310, y: 35) ifexpression_1c4b0f root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            1 -> ifexpression_1c4b0f.gen_1\n            0 -> ifexpression_1c4b0f.gen_0\n            ifexpression_1c4b0f.then -> ifexpression_2c4b0f.execute\n            ifexpression_1c4b0f.else -> ifexpression_3c4b0f.execute\n            ifexpression_2c4b0f.then -> ifexpression_4c4b0f.execute\n            ifexpression_2c4b0f.else -> ifexpression_5c4b0f.execute\n            ifexpression_3c4b0f.then -> ifexpression_6c4b0f.execute\n            ifexpression_3c4b0f.else -> ifexpression_7b1b0e.execute\n            ifexpression_4c4b0f.then -> ifexpression_8c4b0f.execute\n            ifexpression_4c4b0f.else -> ifexpression_7b1b0e.execute\n            ifexpression_5c4b0f.then -> ifexpression_8c4b0f.execute\n            ifexpression_5c4b0f.else -> ifexpression_7b1b0e.execute\n            ifexpression_6c4b0f.then -> ifexpression_8c4b0f.execute\n            ifexpression_6c4b0f.else -> ifexpression_7b1b0e.execute\n            ifexpression_7b1b0e.then -> sub_2c8e5c.execute\n            ifexpression_7b1b0e.else -> sub_2c8e5c.execute\n            ifexpression_8c4b0f.then -> sub_2c8e5c.first\n            ifexpression_8c4b0f.else -> sub_2c8e5c.first\n            ifexpression_1c4b0f.value -> ifexpression_2c4b0f.gen_0\n            ifexpression_2c4b0f.value -> ifexpression_3c4b0f.gen_0\n            ifexpression_3c4b0f.value -> ifexpression_4c4b0f.gen_0\n            ifexpression_4c4b0f.value -> ifexpression_5c4b0f.gen_0\n            ifexpression_5c4b0f.value -> ifexpression_6c4b0f.gen_0\n            ifexpression_6c4b0f.value -> ifexpression_7b1b0e.gen_0\n            ifexpression_7b1b0e.value -> sub_2c8e5c.second\n            sub_2c8e5c.result -> bool_af09a7\n            sub_2c8e5c.first -> find_6d05b0.index\n            elem_9f6850 -> sub_2c8e5c.second\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -297, y: -1, name: \"list\") property(List) list_ae5d3e\n\n        out(x: 578, y: -1, name: \"number\") property(Number) number_9e2b8c\n\n        instance(x: 0, y: 0) find_2d6b9a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1b9d3c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9e9c0c\n\n            instance(x: 89, y: 29) ifexpression_1d7f4c root.Std_k98ojb.Std.IfExpression {\n                expression: \"it != index\"\n            }\n            instance(x: 310, y: 35) notequal_5a5d6e root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_5a5d6e.right\n            ifexpression_1d7f4c.gen_0 -> notequal_5a5d6e.left\n            notequal_5a5d6e.result -> bool_9e9c0c\n            instance(x: 310, y: 35) sub_7e3c2e root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) ifexpression_5c8b1f root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            instance(x: 310, y: 35) add_5a3d8c root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) sub_1f2b0d root.Std_k98ojb.Math.Sub {}\n            1 -> add_5a3d8c.second\n            ifexpression_5c8b1f.gen_0 -> add_5a3d8c.first\n            0 -> ifexpression_5c8b1f.gen_1\n            add_5a3d8c.result -> sub_1f2b0d.second\n            elem_1b9d3c -> sub_1f2b0d.first\n            sub_1f2b0d.result -> ifexpression_1d7f4c.gen_1\n            ifexpression_5c8b1f.then -> sub_7e3c2e.second\n            1 -> sub_7e3c2e.first\n            ifexpression_5c8b1f.else -> sub_7e3c2e.second\n            0 -> sub_7e3c2e.first\n            sub_7e3c2e.result -> ifexpression_1d7f4c.index\n        } -> find_2d6b9a.predicate\n        list_ae5d3e -> find_2d6b9a.items\n        find_2d6b9a.item -> number_9e2b8c\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_1e7d7e root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -290, y: -6, name: \"list\") property(List) list_7b5e3f\n\n        out(x: 597, y: -7, name: \"number\") property(Number) number_9a9f6d\n\n        instance(x: 0, y: 0) find_7c0e9c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -110, y: 36, name: \"elem\") property(Number) elem_7b9c5f\n\n            out(x: 516, y: 46, name: \"bool\") property(Bool) bool_7a6d6d\n\n            instance(x: 91, y: 30) sub_5b9b7f root.Std_k98ojb.Math.Sub {}\n            instance(x: 320, y: 36) not_5c7a8e root.Std_k98ojb.Logic.Not {}\n            instance(x: 321, y: 68) greaterthan_5f5f5f root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: 320, y: 99) equal_8c8c8c root.Std_k98ojb.Logic.Equal {}\n            sub_5b9b7f.first -> greaterthan_5f5f5f.left\n            sub_5b9b7f.second -> greaterthan_5f5f5f.right\n            index_8b8b8b -> sub_5b9b7f.first\n            elem_7b9c5f -> sub_5b9b7f.second\n            greaterthan_5f5f5f.result -> not_5c7a8e.input\n            not_5c7a8e.result -> equal_8c8c8c.left\n            0 -> equal_8c8c8c.right\n            equal_8c8c8c.result -> bool_7a6d6d\n        } -> find_7c0e9c.predicate\n        list_7b5e3f -> find_7c0e9c.items\n        find_7c0e9c.item -> number_9a9f6d\n    }\n\n    \n\n    instance(x: -58, y: 522) smallest_missing_8b8b8b root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -296, y: -10, name: \"list\") property(List) list_ae3b6f\n\n        out(x: 573, y: -1, name: \"missing\") property(Number) missing_6b4d6e\n\n        instance(x: 0, y: 0) find_4a7d8c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -110, y: 39, name: \"elem\") property(Number) elem_5c3e2a\n\n            out(x: 512, y: 44, name: \"bool\") property(Bool) bool_5e3c1b\n\n            instance(x: 84, y: 30) ifexpression_4a2b3c root.Std_k98ojb.Std.IfExpression {\n                expression: \"elem != index + 1\"\n            }\n            instance(x: 309, y: 36) add_7f5d3e root.Std_k98ojb.Math.Add {}\n            instance(x: 315, y: 28) notequal_3d5b2a root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 316, y: 12) numberfromstring_1a2b3c root.Std_k98ojb.Math.NumberFromString {}\n            1 -> add_7f5d3e.second\n            index -> add_7f5d3e.first\n            add_7f5d3e.result -> numberfromstring_1a2b3c.string\n            numberfromstring_1a2b3c.result -> notequal_3d5b2a.right\n            elem_5c3e2a -> notequal_3d5b2a.left\n            notequal_3d5b2a.result -> ifexpression_4a2b3c.value\n            ifexpression_4a2b3c.then -> bool_5e3c1b\n            ifexpression_4a2b3c.else -> bool_5e3c1b\n        } -> find_4a7d8c.predicate\n        list_ae3b6f -> find_4a7d8c.items\n        find_4a7d8c.item -> missing_6b4d6e\n    }\n\n    \n\n    instance(x: -52, y: 525) smallest_missing_3b4c2d root.main.smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -144, y: 6, name: \"input\") property(String) input_8e3f8d\n\n        out(x: 512, y: -5, name: \"output\") property(String) output_7e3e2d\n\n        instance(x: 220, y: 5) replace_1d8e3d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 220, y: -62) replace_6b6d9d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 220, y: -127) replace_3d0f5e root.Std_k98ojb.Strings.Replace {}\n        input_8e3f8d -> replace_1d8e3d.input\n        \" \" -> replace_1d8e3d.search\n        \":\" -> replace_1d8e3d.replace\n        replace_1d8e3d.output -> replace_6b6d9d.input\n        \",\" -> replace_6b6d9d.search\n        \":\" -> replace_6b6d9d.replace\n        replace_6b6d9d.output -> replace_3d0f5e.input\n        \".\" -> replace_3d0f5e.search\n        \":\" -> replace_3d0f5e.replace\n        replace_3d0f5e.output -> output_7e3e2d\n    }\n\n    \n\n    instance(x: -65, y: 23) replace_5a7f2c root.main.replace {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -123, y: 0, name: \"input\") property(String) input_9a7d2f\n\n        out(x: 520, y: -2, name: \"output\") property(String) output_9f0b0d\n\n        instance(x: 0, y: 1) replace_1d7c0d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5b9c6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_9e1d6e root.Std_k98ojb.Strings.Replace {}\n        input_9a7d2f -> replace_1d7c0d.input\n        \" \" -> replace_1d7c0d.search\n        \":\" -> replace_1d7c0d.replace\n        replace_1d7c0d.output -> replace_5b9c6f.input\n        \",\" -> replace_5b9c6f.search\n        \":\" -> replace_5b9c6f.replace\n        replace_5b9c6f.output -> replace_9e1d6e.input\n        \".\" -> replace_9e1d6e.search\n        \":\" -> replace_9e1d6e.replace\n        replace_9e1d6e.output -> output_9f0b0d\n    }\n\n    \n\n    instance(x: 82, y: 52) replace_space_comma_dot_4e2f9c root.main.replace_space_comma_dot {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special {\n        in(x: -155, y: -2, name: \"input\") property(String) input_9d6f9c\n\n        out(x: 513, y: -2, name: \"output\") property(String) output_9f4f1d\n\n        instance(x: 0, y: 0) replace_2b2b4a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_2b2b4a_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_2b2b4a_3 root.Std_k98ojb.Strings.Replace {}\n        input_9d6f9c -> replace_2b2b4a.input\n        \" \" -> replace_2b2b4a.search\n        \":\" -> replace_2b2b4a.replace\n        replace_2b2b4a.output -> replace_2b2b4a_2.input\n        \",\" -> replace_2b2b4a_2.search\n        \":\" -> replace_2b2b4a_2.replace\n        replace_2b2b4a_2.output -> replace_2b2b4a_3.input\n        \".\" -> replace_2b2b4a_3.search\n        \":\" -> replace_2b2b4a_3.replace\n        replace_2b2b4a_3.output -> output_9f4f1d\n    }\n\n    \n\n    instance(x: 56, y: -3) replace_special_7a1f9f root.main.replace_special {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_5c8c6c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3e2d2e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_3f2b7f root.Std_k98ojb.Strings.Replace {}\n        replace_5c8c6c.input -> replace_3e2d2e.input\n        replace_3e2d2e.input -> replace_3f2b7f.input\n        input_0 -> replace_5c8c6c.input\n        \" \" -> replace_5c8c6c.search\n        \":\" -> replace_5c8c6c.replace\n        \",\" -> replace_3e2d2e.search\n        \":\" -> replace_3e2d2e.replace\n        \".\" -> replace_3f2b7f.search\n        \":\" -> replace_3f2b7f.replace\n        replace_3f2b7f.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_chars_9f7b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -148, y: 11, name: \"input\") property(String) input_0\n\n        out(x: 528, y: -4, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_1f1d0d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_0c4c7e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_3c7d0f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1f1d0d.input\n        \" \" -> replace_1f1d0d.search\n        \":\" -> replace_1f1d0d.replace\n        replace_1f1d0d.output -> replace_0c4c7e.input\n        \",\" -> replace_0c4c7e.search\n        \":\" -> replace_0c4c7e.replace\n        replace_0c4c7e.output -> replace_3c7d0f.input\n        \".\" -> replace_3c7d0f.search\n        \":\" -> replace_3c7d0f.replace\n        replace_3c7d0f.output -> output_0\n    }\n\n    \n\n    instance(x: 87, y: 53) replace_1d7e9e root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -146, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 526, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_3f1f7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_1a6e6c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1b7e5d root.Std_k98ojb.Strings.Replace {}\n        replace_3f1f7f.output -> replace_1a6e6c.input\n        replace_1a6e6c.output -> replace_1b7e5d.input\n        input_0 -> replace_3f1f7f.input\n        \" \" -> replace_3f1f7f.search\n        \":\" -> replace_3f1f7f.replace\n        \",\" -> replace_1a6e6c.search\n        \":\" -> replace_1a6e6c.replace\n        \".\" -> replace_1b7e5d.search\n        \":\" -> replace_1b7e5d.replace\n        replace_1b7e5d.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_6c3d1f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -128, y: 0, name: \"input\") property(String) input_1b7a7c\n\n        out(x: 532, y: -2, name: \"output\") property(String) output_1e5e9e\n\n        instance(x: 0, y: 1) replace_4a7c7c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4a7c7c_1 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_4a7c7c_2 root.Std_k98ojb.Strings.Replace {}\n        input_1b7a7c -> replace_4a7c7c.input\n        \" \" -> replace_4a7c7c.search\n        \":\" -> replace_4a7c7c.replace\n        replace_4a7c7c.output -> replace_4a7c7c_1.input\n        \",\" -> replace_4a7c7c_1.search\n        \":\" -> replace_4a7c7c_1.replace\n        replace_4a7c7c_1.output -> replace_4a7c7c_2.input\n        \".\" -> replace_4a7c7c_2.search\n        \":\" -> replace_4a7c7c_2.replace\n        replace_4a7c7c_2.output -> output_1e5e9e\n    }\n\n    \n\n    instance(x: 101, y: 52) replace_spaces_commas_dots_2c3d4f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -135, y: 0, name: \"input\") property(String) input_7e4d8c\n\n        out(x: 540, y: -2, name: \"output\") property(String) output_4c6c6c\n\n        instance(x: 0, y: 1) replace_4a8f3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_2e5bdc root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_7b7d1f root.Std_k98ojb.Strings.Replace {}\n        input_7e4d8c -> replace_4a8f3c.input\n        \" \" -> replace_4a8f3c.search\n        \":\" -> replace_4a8f3c.replace\n        replace_4a8f3c.output -> replace_2e5bdc.input\n        \",\" -> replace_2e5bdc.search\n        \":\" -> replace_2e5bdc.replace\n        replace_2e5bdc.output -> replace_7b7d1f.input\n        \".\" -> replace_7b7d1f.search\n        \":\" -> replace_7b7d1f.replace\n        replace_7b7d1f.output -> output_4c6c6c\n    }\n\n    \n\n    instance(x: 76, y: 40) replace_spaces_commas_dots_5c8b1f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -146, y: 6, name: \"input\") property(String) input_7a5a3f\n\n        out(x: 504, y: 7, name: \"output\") property(String) output_9d9e6d\n\n        instance(x: 106, y: -8) replace_7c2e9c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 109, y: 57) replace_8b5d5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 106, y: 112) replace_1d6c0f root.Std_k98ojb.Strings.Replace {}\n        input_7a5a3f -> replace_7c2e9c.input\n        \" \" -> replace_7c2e9c.search\n        \":\" -> replace_7c2e9c.replace\n        replace_7c2e9c.output -> replace_8b5d5c.input\n        \",\" -> replace_8b5d5c.search\n        \":\" -> replace_8b5d5c.replace\n        replace_8b5d5c.output -> replace_1d6c0f.input\n        \".\" -> replace_1d6c0f.search\n        \":\" -> replace_1d6c0f.replace\n        replace_1d6c0f.output -> output_9d9e6d\n    }\n\n    \n\n    instance(x: -135, y: 43) replace_chars_7f8f5c root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -145, y: 3, name: \"input\") property(String) input_3c9e3f\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_3c9e3f\n\n        instance(x: 0, y: 1) replace_1b3e2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_2e3f9e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1b8a4f root.Std_k98ojb.Strings.Replace {}\n        input_3c9e3f -> replace_1b3e2d.input\n        \" \" -> replace_1b3e2d.search\n        \":\" -> replace_1b3e2d.replace\n        replace_1b3e2d.output -> replace_2e3f9e.input\n        \",\" -> replace_2e3f9e.search\n        \":\" -> replace_2e3f9e.replace\n        replace_2e3f9e.output -> replace_1b8a4f.input\n        \".\" -> replace_1b8a4f.search\n        \":\" -> replace_1b8a4f.replace\n        replace_1b8a4f.output -> output_3c9e3f\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_space_comma_dot_7e6c8f root.main.replace_space_comma_dot {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_same {\n        in(x: -284, y: -81, name: \"string\") property(String) string_6f8e3f\n\n        out(x: 558, y: -93, name: \"output\") property(Bool) output_7b2b0d\n\n        instance(x: -91, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 145, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 359, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -276, y: -36) characters_9f6d8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 2, y: -121, name: \"set\") set_9e3b9e root.Std_k98ojb.List.Flatten {}\n        instance(x: 337, y: 160, name: \"getter_b280eb\") getter_b280eb set_9e3b9e\n        < James",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -293, y: -91, name: \"input\") property(String) input_3a1e4c\n\n        out(x: 559, y: -94, name: \"output\") property(Bool) output_9c3e5f\n\n        instance(x: -91, y: -91) characters_4b7f92 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 143, y: -93) map_3d5f0f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 359, y: -92) uniquelist_5e8f9e root.Std_k98ojb.List.Unique {}\n        instance(x: 547, y: -92) length_7f9d0e root.Std_k98ojb.List.Length {}\n        instance(x: 702, y: -93) equal_f7c4e4 root.Std_k98ojb.Logic.Equal {}\n        input_3a1e4c -> characters_4b7f92.input\n        characters_4b7f92.characters -> map_3d5f0f.items\n        func() {\n            in(x: -25, y: -27, name: \"element\") property(String) element_3c2f6f\n\n            out(x: 353, y: -15, name: \"output\") property(String) output_1c8d8d\n\n            instance(x: 146, y: -22) tolower_6d6e4c root.Std_k98ojb.Strings.ToLower {}\n            element_3c2f6f -> tolower_6d6e4c.input\n            tolower_6d6e4c.output -> output_1c8d8d\n        } -> map_3d5f0f.handler\n        map_3d5f0f.output_list -> uniquelist_5e8f9e.list\n        uniquelist_5e8f9e.unique_list -> length_7f9d0e.list\n        1 -> equal_f7c4e4.right\n        length_7f9d0e.length -> equal_f7c4e4.left\n        equal_f7c4e4.result -> output_9c3e5f\n    }\n\n    \n\n    instance(x: -87, y: 43) check_same_5b8d6f root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") same_characters {\n        in(x: -334, y: -41, name: \"input\") property(String) input_8d3c9d\n\n        out(x: 1090, y: -35, name: \"output\") property(Bool) output_1f9f4f\n\n        instance(x: -183, y: -41) characters_9a2b2d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 292, y: -35) set_7e5b3a root.Std_k98ojb.List.Set {}\n        instance(x: 596, y: -34) contains_5d3e9d root.Std_k98ojb.List.Contains {}\n        instance(x: 894, y: -35) not_7d3d9f root.Std_k98ojb.Logic.Not {}\n        characters_9a2b2d.characters -> set_7e5b3a.list\n        set_7e5b3a.item -> contains_5d3e9d.item\n        characters_9a2b2d.characters -> contains_5d3e9d.list\n        not_7d3d9f.result -> output_1f9f4f\n        contains_5d3e9d.is_contained -> not_7d3d9f.input\n    }\n\n    \n\n    instance(x: 42, y: 14) same_characters_7f4c0f root.main.same_characters {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") same_char {\n        in(x: -299, y: -19, name: \"string\") property(String) string_2f2b2c\n\n        out(x: 1143, y: -18, name: \"output\") property(Bool) output_7d3e2f\n\n        instance(x: -132, y: -20) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 380, y: -20) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == previous\"\n        }\n        getter(x: 168, y: 43, name: \"getter_9c1e53\") getter_9c1e53 = previous\n        setter(x: 494, y: -169, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 122, y: -101) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -211, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -295, y: -126) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> setter_9d4f1c.execute\n        ifexpression_875761.value -> output_7d3e2f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        string_2f2b2c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_9c1e53.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> setter_9d4f1c.execute\n        for_d26972.item -> setter_9d4f1c.new_value\n        string_2f2b2c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        length_6e87f2.list -> string_2f2b2c\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 32, y: -85) same_char_6a2b4c root.main.same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_same {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"input\") property(String) input_8d7e1f\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) characters_5e7c0f root.Std_k98ojb.Strings.Characters {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        characters_5e7c0f.characters -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_8d7e1f -> characters_5e7c0f.input\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) all_same_6a1f7f root.main.all_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -331, y: -14, name: \"input\") property(String) input_6f2c8c\n\n        out(x: 1047, y: 23, name: \"output\") property(Bool) output_4e5c1e\n\n        instance(x: -177, y: -14) characters_7f6d23 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 263, y: 24) map_6c8d6e root.Std_k98ojb.Iteration.Map {}\n        instance(x: 648, y: 24) set_7a8e3f root.Std_k98ojb.List.Set {}\n        instance(x: 923, y: 24) length_5e4c9f root.Std_k98ojb.List.Length {}\n        instance(x: 1089, y: 24) equal_3a7d6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1269, y: 23) not_8f7b6f root.Std_k98ojb.Logic.Not {}\n        characters_7f6d23.characters -> map_6c8d6e.items\n        func() {\n            in(x: -30, y: 47, name: \"current\") property(String) current_6e2b7e\n\n            out(x: 681, y: 67, name: \"output\") property(String) output_5f2c8d\n\n            instance(x: 224, y: 64) tolower_7c2d6e root.Std_k98ojb.Strings.ToLower {}\n            tolower_7c2d6e.output -> output_5f2c8d\n            current_6e2b7e -> tolower_7c2d6e.input\n        } -> map_6c8d6e.handler\n        map_6c8d6e.output_list -> set_7a8e3f.list\n        length_5e4c9f.length -> equal_3a7d6e.left\n        1 -> equal_3a7d6e.right\n        not_8f7b6f.result -> output_4e5c1e\n        set_7a8e3f.set -> length_5e4c9f.list\n        equal_3a7d6e.result -> not_8f7b6f.input\n        input_6f2c8c -> characters_7f6d23.input\n    }\n\n    \n\n    instance(x: 10, y: -10) check_same_9f7b6f root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") check_chars {\n        in(x: -331, y: -51, name: \"input\") property(String) input_5a5e6f\n\n        out(x: 1146, y: -46, name: \"output\") property(Bool) output_5e1b0d\n\n        instance(x: -179, y: -51) characters_3e8b7d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 321, y: -50) uniquelist_5e1d93 root.Std_k98ojb.List.Uniq {}\n        instance(x: 652, y: -48) length_1c3c0e root.Std_k98ojb.List.Length {}\n        instance(x: 890, y: -49) equal_5c1b2c root.Std_k98ojb.Logic.Equal {}\n        characters_3e8b7d.characters -> uniquelist_5e1d93.list\n        uniquelist_5e1d93.uniqueList -> length_1c3c0e.list\n        1 -> equal_5c1b2c.right\n        length_1c3c0e.length -> equal_5c1b2c.left\n        equal_5c1b2c.result -> output_5e1b0d\n        input_5a5e6f -> characters_3e8b7d.input\n    }\n\n    \n\n    instance(x: -17, y: 47) check_chars_4b1b8e root.main.check_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_characters {\n        in(x: -298, y: -211, name: \"string\") property(String) string_8e4e6f\n\n        out(x: 1179, y: -214, name: \"output\") property(Bool) output_5e9c3d\n\n        instance(x: -107, y: -211) characters_1a3f3c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 347, y: -214) uniqued_6e3f2e root.Std_k98ojb.List.Unique {}\n        instance(x: 698, y: -213) length_8d4f7d root.Std_k98ojb.List.Length {}\n        instance(x: 1021, y: -212) equal_6f4c3c root.Std_k98ojb.Logic.Equal {}\n        characters_1a3f3c.characters -> uniqued_6e3f2e.list\n        uniqued_6e3f2e.unique_list -> length_8d4f7d.list\n        1 -> equal_6f4c3c.right\n        length_8d4f7d.length -> equal_6f4c3c.left\n        equal_6f4c3c.result -> output_5e9c3d\n    }\n\n    \n\n    instance(x: -55, y: 22) check_characters_5f1c7e root.main.check_characters {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_same {\n        in(x: -280, y: -35, name: \"string\") property(String) string_3c8c7c\n\n        out(x: 1014, y: -31, name: \"output\") property(Bool) output_4b9d9e\n\n        instance(x: -129, y: -35) length_1f7c0e root.Std_k98ojb.Strings.Length {}\n        instance(x: 312, y: -32) ifexpression_5b8e5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 104, y: 56, name: \"getter_6a6c4f\") getter_6a6c4f = previous\n        setter(x: 349, y: -216, name: \"setter_4f9e8e\") setter_4f9e8e = previous\n        instance(x: 211, y: -123) for_9f2f1f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -243, name: \"setter_4f9e8e\") setter_9f2f0e = previous\n        instance(x: -279, y: -157) getat_3d9b7d root.Std_k98ojb.Strings.GetAt {}\n        ifexpression_5b8e5a.else -> output_4b9d9e\n        ifexpression_5b8e5a.value -> output_4b9d9e\n        ifexpression_5b8e5a.then -> setter_4f9e8e.execute\n        string_3c8c7c -> for_9f2f1f.items\n        for_9f2f1f.item -> ifexpression_5b8e5a.gen_2\n        for_9f2f1f.index -> ifexpression_5b8e5a.gen_0\n        getter_6a6c4f.value -> ifexpression_5b8e5a.gen_1\n        for_9f2f1f.onItem -> ifexpression_5b8e5a.execute\n        for_9f2f1f.done -> output_4b9d9e\n        for_9f2f1f.item -> setter_4f9e8e.new_value\n        string_3c8c7c -> getat_3d9b7d.input\n        0 -> getat_3d9b7d.index\n        getat_3d9b7d.character -> setter_9f2f0e.new_value\n        length_1f7c0e.length -> for_9f2f1f.itemsLength\n        setter_9f2f0e.continue -> for_9f2f1f.reset\n        setter_4f9e8e.continue -> for_9f2f1f.next\n    }\n\n    \n\n    instance(x: 37, y: -148) all_same_3c0d0e root.main.all_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -285, y: -84, name: \"string\") property(String) string_9b5b3e\n\n        out(x: 562, y: -95, name: \"output\") property(Bool) output_1a7c3e\n\n        instance(x: -96, y: -95) intersection_1d3d3e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -94) length_1e9d1e root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -93) equal_2c8c1e root.Std_k98ojb.Logic.Equal {}\n        instance(x: -284, y: 34, name: \"get characters\") characters_8d9c1e root.Std_k98ojb.Strings.Characters {}\n        characters_8d9c1e.characters -> intersection_1d3d3e.left\n        string_9b5b3e -> intersection_1d3d3e.right\n        length_1e9d1e.length -> equal_2c8c1e.left\n        1 -> equal_2c8c1e.right\n        intersection_1d3d3e.intersection -> length_1e9d1e.list\n        equal_2c8c1e.result -> output_1a7c3e\n        string_9b5b3e -> characters_8d9c1e.input\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_7a4dad root.main.check_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) string_to_list root.Std_k98ojb.Strings.Characters {}\n        string_ai -> string_to_list.input\n        instance(x: 0, y: 0) filter_node root.Std_k98ojb.Query.Filter {\n            where: \"it.isNumeric\"\n        }\n        string_to_list.characters -> filter_node.list\n        instance(x: 0, y: 0) list_length root.Std_k98ojb.List.Length {}\n        filter_node.result -> list_length.list\n        list_length.length -> count_ai\n    }\n\n    \n    instance(x: -31, y: -37, name: \"count_digits\") count_digits_9c7f4a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Iteration.Filter {\n            handler: {\n                in property(String) item\n                out property(Bool) output\n\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item -> is_numeric_node.input\n                is_numeric_node.isNumeric -> output\n            }\n        }\n        instance(x: 0, y: 0) length_node root.Std_k98ojb.List.Length {}\n        input_ai -> count_node.items\n        count_node.output_list -> length_node.list\n        length_node.length -> output_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 0) characters_1c0a0f root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_1c0a0f.input\n        instance(x: 0, y: 0) filter_6b9e0f root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_1c0a0f.characters -> filter_6b9e0f.list\n        instance(x: 0, y: 0) length_3f7c8c root.Std_k98ojb.List.Length {}\n        filter_6b9e0f.result -> length_3f7c8c.list\n        length_3f7c8c.length -> output_ai\n    }\n    \n\n    instance(x: -33, y: -45, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) count_2e1f8f root.Std_k98ojb.Std.Count {\n            iterations: 10\n        }\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        instance(x: 0, y: 0) reduce_4c4b6c root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"acc + it\"\n        }\n        instance(x: 0, y: 0) map_3b7b4a root.Std_k98ojb.Iteration.Map {\n            handler: \"it\"\n        }\n        instance(x: 0, y: 0) split_2f8b4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"acc + it\"\n        }\n        instance(x: 0, y: 0) std_call_func_node root.Std_k98ojb.Std.CallFunction {}\n        instance(x: 0, y: 0) std_call_func_node_2 root.Std_k98ojb.Std.CallFunction {}\n        instance(x: 0, y: 0) std_call_func_node_3 root.Std_k98ojb.Std.CallFunction {}\n        instance(x: 0, y: 0) std_call_func_node_4 root.Std_k98ojb.Std.CallFunction {}\n        input_ai -> split_2f8b4f.input\n        split_2f8b4f.characters -> map_3b7b4a.items\n        map_3b7b4a.output_list -> filter_7b3b7b.list\n        filter_7b3b7b.result -> reduce_4c4b6c.item\n        reduce_4c4b6c.acc -> math_expr_node.gen_0\n        reduce_4c4b6c.it -> math_expr_node.gen_1\n        math_expr_node.result -> reduce_4c4b6c.accumulated\n        reduce_4c4b6c.index -> std_call_func_node.inputs\n        std_call_func_node.handler -> reduce_4c4b6c.handler\n        std_call_func_node.inputs -> std_call_func_node_2.handler\n        std_call_func_node.outputs -> std_call_func_node_2.inputs\n        std_call_func_node_2.outputs -> std_call_func_node_3.inputs\n        std_call_func_node_3.outputs -> std_call_func_node_4.inputs\n        std_call_func_node_4.outputs -> reduce_4c4b6c.outputs\n        reduce_4c4b6c.output -> count_2e1f8f.iterations\n        count_2e1f8f.onCount -> std_call_func_node.execute\n        count_2e1f8f.done -> std_call_func_node_4.execute\n        reduce_4c4b6c.output -> result_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) string_to_list_node root.Std_k98ojb.Strings.Characters {}\n        string_ai -> string_to_list_node.input\n        instance(x: 0, y: 0) count_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: {\n                in property(Any) it\n                out property(Bool) output\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                it -> is_numeric_node.input\n                is_numeric_node.isNumeric -> output\n            }\n        }\n        string_to_list_node.characters -> count_digits_node.items\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_node.output_list -> list_length_node.list\n        list_length_node.length -> result_ai\n    }\n    \n\n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"value\") property(String) value_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) string_chars_node root.Std_k98ojb.Strings.Characters {}\n        value_ai -> string_chars_node.input\n        instance(x: 0, y: 0) count_5e1d1f root.Std_k98ojb.Std.Count {}\n        string_chars_node.characters -> count_5e1d1f.items\n        instance(x: 0, y: 0) is_numeric_5f3f3c root.Std_k98ojb.Strings.IsNumeric {}\n        count_5e1d1f.items -> is_numeric_5f3f3c.input\n        is_numeric_5f3f3c.isNumeric -> count_5e1d1f.onCount\n        count_5e1d1f.iteration -> result_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 0) string_to_array root.Std_k98ojb.Strings.Characters {}\n        input_ai -> string_to_array.input\n        instance(x: 0, y: 0) count_digits_filter root.Std_k98ojb.Query.Filter {\n            where: \"it.isNumeric\"\n        }\n        string_to_array.characters -> count_digits_filter.list\n        instance(x: 0, y: 0) count_digits_count root.Std_k98ojb.List.Length {}\n        count_digits_filter.result -> count_digits_count.list\n        count_digits_count.length -> output_ai\n    }\n\n    \n    instance(x: -28, y: -38, name: \"count_digits\") count_digits_2_7e3b2 root.main.count_digits {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) characters_1f6c6a root.Std_k98ojb.Strings.Characters {}\n        string_ai -> characters_1f6c6a.input\n        instance(x: 0, y: 0) count_1f6c6a root.Std_k98ojb.Std.Count {}\n        characters_1f6c6a.characters -> count_1f6c6a.items\n        instance(x: 0, y: 0) is_numeric_1f6c6a root.Std_k98ojb.Strings.IsNumeric {}\n        count_1f6c6a.on_count -> is_numeric_1f6c6a.execute\n        is_numeric_1f6c6a.output -> count_1f6c6a.count\n        count_1f6c6a.iteration -> count_1f6c6a.reset\n        count_1f6c6a.iteration -> count_1f6c6a.interation\n        count_1f6c6a.done -> count_1f6c6a.reset\n        count_1f6c6a.iteration -> count_1f6c6a.reset\n        count_1f6c6a.iteration -> count_1f6c6a.interation\n        count_1f6c6a.done -> count_1f6c6a.reset\n        count_1f6c6a.iteration -> count_1f6c6a.reset\n        count_1f6c6a.iteration -> count_1f6c6a.interation\n        count_1f6c6a.done -> count_1f6c6a.reset\n        count_1f6c6a.interation -> result_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_1f6c6a root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_node root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_node.list\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Count {}\n        filter_node.result -> count_node.items\n        count_node.onCount -> count_node.count\n        count_node.iteration -> count_node.reset\n        count_node.onCount -> count_node.done\n        count_node.iteration -> count_node.iterations\n        count_node.done -> count_node.continue\n        count_node.iteration -> output_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_8e3e1c root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 0) string_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> string_length_node.input\n        instance(x: 0, y: 0) string_split_node root.Std_k98ojb.Strings.Split {\n            separator: \" \"\n        }\n        string_length_node.length -> string_split_node.input\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {\n            iterations: \"length\"\n        }\n        string_split_node.list -> count_node.items\n        instance(x: 0, y: 0) if_expression_node root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != ''\"\n        }\n        string_split_node.list -> if_expression_node.list\n        instance(x: 0, y: 0) reduce_node root.Std_k98ojb.Iteration.Reduce {\n            handler: \"count\"\n        }\n        if_expression_node.value -> reduce_node.list\n        count_node.onCount -> reduce_node.handler_execute\n        count_node.done -> reduce_node.handler_continue\n        count_node.iteration -> reduce_node.handler_index\n        reduce_node.output -> output_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n    \n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -279, y: 57, name: \"n\") property(Number) n_8c8d6f\n\n        out(x: 583, y: 11, name: \"sum\") property(Number) sum_5d1e9d\n\n        instance(x: 17, y: -1) mul_2e7c5c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 322, y: 131) data_7c9f5c  = 3\n        instance(x: 13, y: 136) expression_6c3f4d root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 292, y: 2) mul_3d5a5f root.Std_k98ojb.Math.Mul {}\n        instance(x: 296, y: -2) mul_1b9c4d root.Std_k98ojb.Math.Mul {}\n        instance(x: 297, y: -10) mul_5d3a6f root.Std_k98ojb.Math.Mul {}\n        instance(x: 300, y: -18) div_4c5d4a root.Std_k98ojb.Math.Div {}\n        data_7c9f5c -> div_4c5d4a.second\n        mul_2e7c5c.result -> div_4c5d4a.first\n        mul_5d3a6f.result -> mul_1b9c4d.first\n        mul_3d5a5f.result -> mul_5d3a6f.second\n        expression_6c3f4d.result -> mul_3d5a5f.first\n        expression_6c3f4d.result -> mul_2e7c5c.second\n        n_8c8d6f -> mul_2e7c5c.first\n        n_8c8d6f -> expression_6c3f4d.gen_0\n        mul_1b9c4d.result -> mul_5d3a6f.first\n        div_4c5d4a.result -> sum_5d1e9d\n    }\n\n    \n\n    instance(x: 114, y: -24) fourth_power_sum_4a8f1e root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth {\n        in(x: -282, y: 58, name: \"n\") property(Number) n_4a8b8f\n\n        out(x: 577, y: -6, name: \"sum\") property(Number) sum_5e5a8e\n\n        instance(x: 19, y: 4) pow_8c1f3e root.Std_k98ojb.Math.Pow {}\n        instance(x: 18, y: 121) expression_5e6c3e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 304, y: 2) add_8c8c0f root.Std_k98ojb.Math.Add {}\n        instance(x: 19, y: -110) mul_8f2c0e root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 331, y: 133) data_6c7d1e  = 1\n        n_4a8b8f -> pow_8c1f3e.gen_1\n        pow_8c1f3e.result -> mul_8f2c0e.second\n        expression_5e6c3e.result -> pow_8c1f3e.gen_0\n        n_4a8b8f -> expression_5e6c3e.gen_0\n        mul_8f2c0e.result -> add_8c8c0f.second\n        data_6c7d1e -> add_8c8c0f.first\n        add_8c8c0f.result -> sum_5e5a8e\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_6d7a7d root.main.sum_fourth {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -337, y: -280, name: \"n\") property(Number) n_1a8f0f\n\n        out(x: 764, y: -365, name: \"output\") property(Number) output_5c4b9c\n\n        instance(x: 21, y: -6) mul_7a1e2d root.Std_k98ojb.Math.Mul {}\n        instance(x: 24, y: 133) expression_3a5f8e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 297, y: 2) pow_9b2b3a root.Std_k98ojb.Math.Pow {}\n        instance(x: 24, y: -82) mul_2a1e1e root.Std_k98ojb.Math.Mul {}\n        instance(x: 23, y: 134) expression_3a5f8e_2 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: -85) pow_9b2b3a_2 root.Std_k98ojb.Math.Pow {}\n        instance(x: 296, y: -167) add_7f3d6c root.Std_k98ojb.Math.Add {}\n        data_instance(x: 389, y: -339) data_3c713b  = [sum]\n        n_1a8f0f -> mul_7a1e2d.first\n        n_1a8f0f -> expression_3a5f8e.gen_0\n        mul_7a1e2d.result -> pow_9b2b3a.first\n        expression_3a5f8e.result -> pow_9b2b3a.second\n        pow_9b2b3a.result -> add_7f3d6c.first\n        n_1a8f0f -> mul_2a1e1e.first\n        n_1a8f0f -> expression_3a5f8e_2.gen_0\n        mul_2a1e1e.result -> pow_9b2b3a_2.first\n        expression_3a5f8e_2.result -> pow_9b2b3a_2.second\n        pow_9b2b3a_2.result -> add_7f3d6c.second\n        add_7f3d6c.result -> data_3c713b.sum\n        data_3c713b -> output_5c4b9c\n    }\n\n    \n\n    instance(x: -117, y: 157) sum_fourth_power_1f3d0f root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -270, y: 46, name: \"n\") property(Number) n_7f7b0d\n\n        out(x: 573, y: 0, name: \"sum\") property(Number) sum_1b9b77\n\n        instance(x: 16, y: 6) pow_6f5d0f root.Std_k98ojb.Math.Pow {}\n        instance(x: 20, y: 139) expression_1f4e9f root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        instance(x: 23, y: -1) add_4e6b7e root.Std_k98ojb.Math.Add {}\n        data_instance(x: 330, y: 133) data_9c1d0c  = 1\n        instance(x: 12, y: 136) expression_5f8e9e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 0, y: 0) for_1f9f9c root.Std_k98ojb.Std.For {}\n        instance(x: 23, y: -1) mul_5c8d5d root.Std_k98ojb.Math.Mul {}\n        data_9c1d0c -> div_64046c.second\n        mul_5c8d5d.result -> pow_6f5d0f.second\n        expression_1f4e9f.result -> mul_5c8d5d.second\n        expression_1f4e9f.result -> div_64046c.first\n        expression_1f4e9f.result -> expression_5f8e9e.gen_0\n        n_7f7b0d -> expression_1f4e9f.gen_0\n        n_7f7b0d -> for_1f9f9c.trigger\n        pow_6f5d0f.result -> add_4e6b7e.second\n        div_64046c.result -> pow_6f5d0f.first\n        add_4e6b7e.result -> sum_1b9b77\n        add_4e6b7e.result -> data_9c1d0c\n        4 -> pow_6f5d0f.first\n        for_1f9f9c.items -> List_k98ojb.List.GenerateRange {\n            from: 1\n            to: n_7f7b0d\n        }\n        for_1f9f9c.index -> expression_5f8e9e.gen_1\n        for_1f9f9c.item -> n_7f7b0d\n        for_1f9f9c.done -> add_4e6b7e.execute\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_3c6c1e root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = [sum]\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (2*n*n-1) * (2*n*n-1)\"\n        }\n        instance(x: 62, y: -226, name: \"average\") div_2d44da root.Std_k98ojb.Math.Div {}\n        data_3c713b -> output_ebef81\n        n_c88d35 -> expression_634b7e.gen_0\n        expression_634b7e.result -> data_3c713b.sum\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_f15bad root.main.sum_fourth {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -298, y: -284, name: \"n\") property(Number) n_7f6d9e\n\n        out(x: 762, y: -375, name: \"sum\") property(Number) sum_4d9e7f\n\n        instance(x: 19, y: -381, name: \"sum\") expression_4e9e8e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (2*n-1) * (2*n*n-1) / 3\"\n        }\n        instance(x: 23, y: -123, name: \"n * n * n * n\") mul_1c3f7c root.Std_k98ojb.Math.Mul {}\n        instance(x: 13, y: -245, name: \"n * n\") mul_7b6f4f root.Std_k98ojb.Math.Mul {}\n        instance(x: 12, y: -57, name: \"n * n * n\") mul_6a9e9e root.Std_k98ojb.Math.Mul {}\n        instance(x: 10, y: -11, name: \"n * n * n * n\") mul_3a6c0f root.Std_k98ojb.Math.Mul {}\n        n_7f6d9e -> mul_7b6f4f.first\n        n_7f6d9e -> mul_7b6f4f.second\n        mul_7b6f4f.result -> mul_6a9e9e.first\n        n_7f6d9e -> mul_6a9e9e.second\n        mul_6a9e9e.result -> mul_3a6c0f.first\n        mul_7b6f4f.result -> mul_3a6c0f.second\n        mul_6a9e9e.result -> mul_1c3f7c.first\n        mul_3a6c0f.result -> mul_1c3f7c.second\n        expression_4e9e8e.result -> sum_4d9e7f\n        n_7f6d9e -> expression_4e9e8e.gen_0\n    }\n\n    \n\n    instance(x: -105, y: 161) sum_fourth_power_5e9b2d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -351, y: -279, name: \"n\") property(Number) n_7f4c0a\n\n        out(x: 759, y: -367, name: \"output\") property(Number) output_4e7c3f\n\n        instance(x: 28, y: -384, name: \"sum\") expression_7c7c7e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (2*n-1) * (2*n*n-1) / 3\"\n        }\n        instance(x: 20, y: -124, name: \"first\") expression_5e5e1c root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: -2, name: \"div\") div_2e4f3c root.Std_k98ojb.Math.Div {}\n        instance(x: 12, y: 137, name: \"mul\") mul_4d7c0f root.Std_k98ojb.Math.Mul {}\n        instance(x: 330, y: 132, name: \"fourth\") mul_4b5f2d root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 394, y: -339) data_5f7d4d  = [sum, first, fourth]\n        data_5f7d4d -> output_4e7c3f\n        n_7f4c0a -> expression_7c7c7e.gen_0\n        n_7f4c0a -> expression_5e5e1c.gen_0\n        expression_5e5e1c.result -> fourth.mul_4b5f2d.first\n        expression_5e5e1c.result -> mul_4d7c0f.second\n        mul_4b5f2d.result -> data_5f7d4d.fourth\n        expression_7c7c7e.result -> div_2e4f3c.first\n        div_2e4f3c.result -> data_5f7d4d.sum\n        n_7f4c0a -> mul_4b5f2d.second\n        mul_4d7c0f.result -> div_2e4f3c.second\n        fourth.mul_4b5f2d.result -> data_5f7d4d.first\n    }\n\n    \n\n    instance(x: -87, y: 158) sum_fourth_power_6c4d8c root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -267, y: 1, name: \"n\") property(Number) n_6b655b\n\n        out(x: 595, y: -1, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_1a3f3c root.Std_k98ojb.Math.Mul {}\n        instance(x: 23, y: 134) mul_7b6d3e root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_3c713b  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_3c713b -> div_64046c.second\n        mul_1a3f3c.result -> div_64046c.first\n        expression_2d6da6.result -> mul_1a3f3c.second\n        n_6b655b -> mul_1a3f3c.first\n        n_6b655b -> expression_2d6da6.gen_0\n        div_64046c.result -> mul_7b6d3e.first\n        div_64046c.result -> sum_365f7b\n        mul_7b6d3e.result -> sum_365f7b\n        div_64046c.result -> mul_7b6d3e.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_8c6d9f root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth {\n        in(x: -277, y: -287, name: \"n\") property(Number) n_5e8c93\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_9d9e6d\n\n        instance(x: 0, y: 0) for_7c0e9c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) pow_8d5d5c root.Std_k98ojb.Math.Pow {}\n        instance(x: 0, y: 0) add_1d6c0f root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) expression_3a1d8f root.Std_k98ojb.Math.Expression {\n            expression: \"4*i*i-1\"\n        }\n        instance(x: 0, y: 0) data_instance_1f3b8e data_instance = 0\n        instance(x: 0, y: 0) setter_1b7e6c setter = sum\n        setter_1b7e6c.new_value -> add_1d6c0f.second\n        pow_8d5d5c.y -> pow_8d5d5c.x\n        expression_3a1d8f.result -> pow_8d5d5c.x\n        pow_8d5d5c.result -> add_1d6c0f.first\n        data_instance_1f3b8e -> add_1d6c0f.second\n        add_1d6c0f.result -> setter_1b7e6c.new_value\n        setter_1b7e6c.continue -> for_7c0e9c.next\n        setter_1b7e6c.execute -> for_7c0e9c.trigger\n        for_7c0e9c.index -> expression_3a1d8f.gen_0\n        n_5e8c93 -> for_7c0e9c.items\n        0 -> setter_1b7e6c.new_value\n        setter_1b7e6c.value -> output_9d9e6d\n    }\n\n    \n\n    instance(x: -55, y: 529) sum_fourth_6f5f8f root.main.sum_fourth {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power {\n        in(x: -296, y: -280, name: \"n\") property(Number) n_8f3d9e\n\n        out(x: 722, y: -1, name: \"sum\") property(Number) sum_3e3f3c\n\n        instance(x: 24, y: -232) mul_3e6b5e root.Std_k98ojb.Math.Mul {}\n        instance(x: 23, y: -101) mul_1e7c8d root.Std_k98ojb.Math.Mul {}\n        instance(x: 12, y: 136) expression_6b8b4f root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_3f7e1d root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_1f3f0e  = 3\n        data_instance(x: 396, y: -99) data_1c3e0d  = 1\n        instance(x: 393, y: -234) add_1a6c8c root.Std_k98ojb.Math.Add {}\n        instance(x: 393, y: -360) pow_1a6c8c root.Std_k98ojb.Math.Pow {}\n        mul_3e6b5e.result -> pow_1a6c8c.first\n        div_3f7e1d.result -> mul_1e7c8d.first\n        expression_6b8b4f.result -> mul_3e6b5e.second\n        n_8f3d9e -> mul_3e6b5e.first\n        n_8f3d9e -> expression_6b8b4f.gen_0\n        div_3f7e1d.result -> mul_3e6b5e.first\n        data_1f3f0e -> div_3f7e1d.second\n        mul_1e7c8d.second -> pow_1a6c8c.second\n        data_1c3e0d -> mul_1e7c8d.second\n        pow_1a6c8c.result -> add_1a6c8c.first\n        add_1a6c8c.result -> sum_3e3f3c\n        n_8f3d9e -> div_3f7e1d.first\n        n_8f3d9e -> mul_1e7c8d.first\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_1c3c7c root.main.fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -100, y: 40, name: \"size\") property(Number) size_8d8c8d\n\n        out(x: 110, y: 18, name: \"area\") property(Number) area_5b1d1e\n\n        instance(x: 0, y: 0) mul_3c2d7c root.Std_k98ojb.Math.Mul {}\n        6 -> mul_3c2d7c.first\n        size_8d8c8d -> mul_3c2d7c.second\n        mul_3c2d7c.result -> area_5b1d1e\n    }\n\n    \n\n    instance(x: 119, y: -34) cube_surface_area_6c0f72 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -126, y: -53, name: \"side\") property(Number) side_7f9b99\n\n        out(x: 114, y: -13, name: \"surface area\") property(Number) surface_area_8f5e5c\n\n        instance(x: 6, y: -41) mul_6d8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 6, y: -88) mul_6f0b9c root.Std_k98ojb.Math.Mul {}\n        6 -> mul_6d8c1f.first\n        side_7f9b99 -> mul_6d8c1f.second\n        6 -> mul_6f0b9c.first\n        mul_6d8c1f.result -> mul_6f0b9c.second\n        mul_6f0b9c.result -> surface_area_8f5e5c\n    }\n\n    \n\n    instance(x: 93, y: 32) surface_area_1d2e7e root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -1000, y: -150, name: \"side\") property(Number) side_9d6f9c\n\n        out(x: 0, y: 0, name: \"area\") property(Number) area_9f9f1d\n\n        instance(x: -650, y: -25) mul_f2b2b4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -420, y: 30) data_5a3c5c  = 6\n        side_9d6f9c -> mul_f2b2b4.first\n        data_5a3c5c -> mul_f2b2b4.second\n        mul_f2b2b4.result -> area_9f9f1d\n    }\n\n    \n\n    instance(x: -250, y: 30) surface_area_4c1c3c root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -1009, y: -105, name: \"side\") property(Number) side_1c8d9d\n\n        out(x: -34, y: -5, name: \"area\") property(Number) area_3e2f2e\n\n        instance(x: -619, y: -127) mul_3b3f0d root.Std_k98ojb.Math.Mul {}\n        instance(x: -618, y: 15) mul_5b4e3c root.Std_k98ojb.Math.Mul {}\n        instance(x: -617, y: 135) mul_6f4a3c root.Std_k98ojb.Math.Mul {}\n        side_1c8d9d -> mul_3b3f0d.first\n        side_1c8d9d -> mul_3b3f0d.second\n        6 -> mul_5b4e3c.first\n        mul_3b3b0d.result -> mul_5b4e3c.second\n        mul_5b4e3c.result -> mul_6f4a3c.first\n        side_1c8d9d -> mul_6f4a3c.second\n        mul_6f4a3c.result -> area_3e2f2e\n    }\n\n    \n\n    instance(x: 110, y: 41) surface_area_1b9f2e root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -119, y: -50, name: \"side\") property(Number) side_6c7d6d\n\n        out(x: 119, y: -3, name: \"area\") property(Number) area_1b9f2f\n\n        instance(x: 19, y: -28) mul_f0a6a1 root.Std_k98ojb.Math.Mul {}\n        6 -> mul_f0a6a1.first\n        side_6c7d6d -> mul_f0a6a1.second\n        instance(x: 68, y: -7) mul_9b5c7c root.Std_k98ojb.Math.Mul {}\n        mul_f0a6a1.result -> mul_9b5c7c.first\n        side_6c7d6d -> mul_9b5c7c.second\n        mul_9b5c7c.result -> area_1b9f2f\n    }\n\n    \n\n    instance(x: 138, y: 35) surface_area_5b8f5c root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -1013, y: -185, name: \"size\") property(Number) size_8d7d73\n\n        out(x: -62, y: -306, name: \"surface area\") property(Number) surface_area_5d4d8e\n\n        instance(x: -601, y: -358) mul_3b1e8d root.Std_k98ojb.Math.Mul {}\n        instance(x: -341, y: -301) mul_6e1f48 root.Std_k98ojb.Math.Mul {}\n        instance(x: -241, y: -158) mul_3f3f2f root.Std_k98ojb.Math.Mul {}\n        instance(x: -109, y: -110) mul_7e4e7e root.Std_k98ojb.Math.Mul {}\n        size_8d7d73 -> mul_3b1e8d.first\n        6 -> mul_3b1e8d.second\n        mul_3b1e8d.result -> mul_6e1f48.first\n        size_8d7d73 -> mul_6e1f48.second\n        mul_6e1f48.result -> mul_3f3f2f.first\n        size_8d7d73 -> mul_3f3f2f.second\n        mul_3f3f2f.result -> mul_7e4e7e.first\n        size_8d7d73 -> mul_7e4e7e.second\n        mul_7e4e7e.result -> surface_area_5d4d8e\n    }\n\n    \n\n    instance(x: 322, y: 568) surface_area_7a9f2e root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -108, y: -54, name: \"size\") property(Number) size_6b3e1e\n\n        out(x: 105, y: 7, name: \"area\") property(Number) area_8b0d0e\n\n        instance(x: 20, y: -6) mul_8b7d4f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 322, y: 139) data_1d4c8f  = 6\n        instance(x: 8, y: 136) mul_2f1c3c root.Std_k98ojb.Math.Mul {}\n        data_1d4c8f -> mul_2f1c3c.first\n        size_6b3e1e -> mul_2f1c3c.second\n        mul_2f1c3c.result -> mul_8b7d4f.first\n        size_6b3e1e -> mul_8b7d4f.second\n        mul_8b7d4f.result -> area_8b0d0e\n    }\n\n    \n\n    instance(x: 112, y: -30) cube_surface_area_9d4b7e root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -186, y: 42, name: \"size\") property(Number) size_6d5d3e\n\n        out(x: 578, y: 16, name: \"surface area\") property(Number) surface_area_8a8c5c\n\n        instance(x: 23, y: -12) mul_6b9d4d root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 327, y: 128) data_3e9a5f  = 6\n        instance(x: 12, y: 133) expression_6d6b7f root.Std_k98ojb.Math.Expression {\n            expression: \"size*6\"\n        }\n        instance(x: 305, y: 3) div_6e9d7c root.Std_k98ojb.Math.Div {}\n        data_3e9a5f -> div_6e9d7c.second\n        mul_6b9d4d.result -> div_6e9d7c.first\n        expression_6d6b7f.result -> mul_6b9d4d.second\n        size_6d5d3e -> mul_6b9d4d.first\n        size_6d5d3e -> expression_6d6b7f.gen_0\n        div_6e9d7c.result -> surface_area_8a8c5c\n    }\n\n    \n\n    instance(x: 122, y: -29) cube_surface_area_5c8b72 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -126, y: -79, name: \"size\") property(Number) size_8c7b5e\n\n        out(x: 1024, y: -10, name: \"area\") property(Number) area_4b9e4f\n\n        instance(x: 22, y: -22) mul_2e3c1d root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_2e3c1d.result -> div_64046c.first\n        expression_2d6da6.result -> mul_2e3c1d.second\n        size_8c7b5e -> mul_2e3c1d.first\n        size_8c7b5e -> expression_2d6da6.gen_0\n        div_64046c.result -> area_4b9e4f\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_9dcc3d root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -119, y: 43, name: \"size\") property(Number) size_3e3bdc\n\n        out(x: 1027, y: 15, name: \"surface area\") property(Number) surface_area_4d6e6c\n\n        instance(x: 25, y: -18) mul_7d8d3c root.Std_k98ojb.Math.Mul {}\n        instance(x: 317, y: 11) mul_1e3f9e root.Std_k98ojb.Math.Mul {}\n        instance(x: 561, y: 1) mul_9c7f9d root.Std_k98ojb.Math.Mul {}\n        size_3e3bdc -> mul_7d8d3c.first\n        6 -> mul_7d8d3c.second\n        mul_7d8d3c.result -> mul_1e3f9e.first\n        size_3e3bdc -> mul_1e3f9e.second\n        mul_1e3f9e.result -> mul_9c7f9d.first\n        size_3e3bdc -> mul_9c7f9d.second\n        mul_9c7f9d.result -> surface_area_4d6e6c\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -286, y: -246, name: \"list\") property(List) list_8c8d6f\n\n        out(x: 436, y: -219, name: \"difference\") property(Number) difference_1d1e9d\n\n        instance(x: 426, y: -303) max_6e7c5c root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -442) min_5d7c9f root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: -303) sub_3f4d6f root.Std_k98ojb.Math.Sub {}\n        list_8c8d6f -> max_6e7c5c.items\n        list_8c8d6f -> min_5d7c9f.items\n        max_6e7c5c.max -> sub_3f4d6f.first\n        min_5d7c9f.min -> sub_3f4d6f.second\n        sub_3f4d6f.result -> difference_1d1e9d\n    }\n\n    \n\n    instance(x: 426, y: -303) diff_largest_smallest_4e7b9f root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_4a2c0f\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_3f5e5c\n\n        instance(x: 188, y: 425) sub_6c8c1f root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_3d5e6c root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -376) min_4e6b74 root.Std_k98ojb.List.Min {}\n        max_3d5e6c.items -> list_4a2c0f\n        min_4e6b74.items -> list_4a2c0f\n        max_3d5e6c.max -> sub_6c8c1f.first\n        min_4e6b74.min -> sub_6c8c1f.second\n        sub_6c8c1f.result -> output_3f5e5c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_4a2c0f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff {\n        in(x: -332, y: -244, name: \"list\") property(List) list_0c9d6f\n\n        out(x: 449, y: -219, name: \"difference\") property(Number) difference_1f9f85\n\n        instance(x: 426, y: -303) max_3f6f7c root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -418) min_3e7e5c root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: -289) sub_1e5d3e root.Std_k98ojb.Math.Sub {}\n        list_0c9d6f -> max_3f6f7c.items\n        list_0c9d6f -> min_3e7e5c.items\n        max_3f6f7c.max -> sub_1e5d3e.first\n        min_3e7e5c.min -> sub_1e5d3e.second\n        sub_1e5d3e.result -> difference_1f9f85\n    }\n\n    \n\n    instance(x: 426, y: -303) diff_4f1c7f root.main.diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -31, y: -27, name: \"list\") property(List) list_1c8d9d\n\n        out(x: 545, y: 60, name: \"output\") property(Number) output_3e2f2e\n\n        instance(x: 194, y: 60) sub_3b3f0d root.Std_k98ojb.Math.Sub {}\n        instance(x: -84, y: 154) max_2b1f4e root.Std_k98ojb.List.Max {}\n        instance(x: -83, y: -696) min_6e6f4c root.Std_k98ojb.List.Min {}\n        list_1c8d9d -> max_2b1f4e.items\n        list_1c8d9d -> min_6e6f4c.items\n        max_2b1f4e.max -> sub_3b3f0d.first\n        min_6e6f4c.min -> sub_3b3f0d.second\n        sub_3b3f0d.result -> output_3e2f2e\n    }\n\n    \n\n    instance(x: 50, y: 13) diff_max_min_1d9f9c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -42, y: -23, name: \"list\") property(List) list_7d6b9f\n\n        out(x: 446, y: 40, name: \"difference\") property(Number) difference_7f2f1f\n\n        instance(x: -192, y: -13) max_5a3c6d root.Std_k98ojb.List.Max {}\n        instance(x: -192, y: -142) min_5a3c6d root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 39) sub_7e6e4e root.Std_k98ojb.Math.Sub {}\n        list_7d6b9f -> max_5a3c6d.items\n        list_7d6b9f -> min_5a3c6d.items\n        max_5a3c6d.max -> sub_7e6e4e.first\n        min_5a3c6d.min -> sub_7e6e4e.second\n        sub_7e6e4e.result -> difference_7f2f1f\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_1e7e4c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff {\n        in(x: -26, y: -29, name: \"list\") property(List) list_2c8c7d\n\n        out(x: 545, y: 61, name: \"difference\") property(Number) difference_4e5c1e\n\n        instance(x: 198, y: 62) sub_7f6d9d root.Std_k98ojb.Math.Sub {}\n        instance(x: -86, y: 155) max_3f8d6e root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: 154) min_5c7d93 root.Std_k98ojb.List.Min {}\n        max_3f8d6e.items -> list_2c8c7d\n        min_5c7d93.items -> list_2c8c7d\n        max_3f8d6e.max -> sub_7f6d9d.first\n        min_5c7d93.min -> sub_7f6d9d.second\n        sub_7f6d9d.result -> difference_4e5c1e\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_3a9a8e root.main.diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -326, y: -236, name: \"list\") property(List) list_9e8e7a\n\n        out(x: 451, y: -225, name: \"difference\") property(Number) difference_9c1e5e\n\n        instance(x: -76, y: -235) max_7d4b7c root.Std_k98ojb.List.Max {}\n        instance(x: 192, y: -223) min_1d4c8f root.Std_k98ojb.List.Min {}\n        instance(x: 446, y: -226) sub_3c7e5f root.Std_k98ojb.Math.Sub {}\n        list_9e8e7a -> max_7d4b7c.items\n        list_9e8e7a -> min_1d4c8f.items\n        max_7d4b7c.max -> sub_3c7e5f.first\n        min_1d4c8f.min -> sub_3c7e5f.second\n        sub_3c7e5f.result -> difference_9c1e5e\n    }\n\n    \n\n    instance(x: 18, y: -29) diff_largest_smallest_7d6a9f root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -297, y: -21, name: \"list\") property(List) list_6f6b7e\n\n        out(x: 445, y: 26, name: \"difference\") property(Number) difference_3a3b4c\n\n        instance(x: -48, y: -16) max_3f3b4c root.Std_k98ojb.List.Max {}\n        instance(x: -48, y: 157) min_6f6b7e root.Std_k98ojb.List.Min {}\n        instance(x: 200, y: 26) sub_3a3b4c root.Std_k98ojb.Math.Sub {}\n        list_6f6b7e -> max_3f3b4c.items\n        list_6f6b7e -> min_6f6b7e.items\n        max_3f3b4c.max -> sub_3a3b4c.first\n        min_6f6b7e.min -> sub_3a3b4c.second\n        sub_3a3b4c.result -> difference_3a3b4c\n    }\n\n    \n\n    instance(x: 54, y: -3) diff_max_min_5f7b6e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) max_9d1f0c root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_4b1e8d root.Std_k98ojb.List.Min {}\n        instance(x: 187, y: 63) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_0b075e -> max_9d1f0c.items\n        list_0b075e -> min_4b1e8d.items\n        max_9d1f0c.max -> sub_852f2e.first\n        min_4b1e8d.min -> sub_852f2e.second\n        sub_852f2e.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_15f9e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff {\n        in(x: -35, y: -22, name: \"list\") property(List) list_5b3e3a\n\n        out(x: 438, y: 57, name: \"diff\") property(Number) diff_7b2b4f\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 201, y: 262) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: -522) list_min_node root.Std_k98ojb.List.Min {}\n        list_5b3e3a -> list_max_node.items\n        list_5b3e3a -> list_min_node.items\n        list_max_node.max -> greaterthan_cb50ae.left\n        list_min_node.min -> greaterthan_cb50ae.right\n        greaterthan_cb50ae.result -> sub_852f2e.first\n        list_min_node.min -> sub_852f2e.second\n        sub_852f2e.result -> diff_7b2b4f\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_15f9e9 root.main.diff {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -39, y: -21, name: \"n\") property(Number) n_6f8e3f\n\n        out(x: 441, y: 10, name: \"output\") property(Bool) output_7b2b0d\n\n        instance(x: 178, y: 9) modulo_3b4c81 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 383, y: 6) equal_4f3f5d root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_3b4c81.divisor\n        n_6f8e3f -> modulo_3b4c81.value\n        0 -> equal_4f3f5d.right\n        modulo_3b4c81.result -> equal_4f3f5d.left\n        equal_4f3f5d.result -> output_7b2b0d\n    }\n\n    \n\n    instance(x: 32, y: 14) is_even_2f9a92 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -29, y: -28, name: \"n\") property(Number) n_4a7f9f\n\n        out(x: 548, y: 62, name: \"output\") property(Bool) output_3b8f5e\n\n        instance(x: 210, y: 61) modulo_4d6c8c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 438, y: 62) equal_5f2f0f root.Std_k98ojb.Logic.Equal {}\n        n_4a7f9f -> modulo_4d6c8c.value\n        2 -> modulo_4d6c8c.divisor\n        modulo_4d6c8c.result -> equal_5f2f0f.left\n        0 -> equal_5f2f0f.right\n        equal_5f2f0f.result -> output_3b8f5e\n    }\n\n    \n\n    instance(x: 36, y: 11) is_even_3a7d2e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -527, y: -214, name: \"input\") property(Number) input_1b5c2f\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7d5c5c\n\n        instance(x: -303, y: -205, name: \"modulo 2\") modulo_8f2b6c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 847, y: -207) equal_5e7f2e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        2 -> modulo_8f2b6c.divisor\n        input_1b5c2f -> modulo_8f2b6c.value\n        0 -> equal_5e7f2e.right\n        modulo_8f2b6c.result -> equal_5e7f2e.left\n        equal_5e7f2e.result -> not_75283f.input\n        not_75283f.result -> output_7d5c5c\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_6e3b1e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -30, y: -28, name: \"n\") property(Number) n_6d3f6e\n\n        out(x: 543, y: 63, name: \"output\") property(Bool) output_7d3e2f\n\n        instance(x: 205, y: 62) modulo_6a3b3f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 435, y: 62) equal_1b5b4e root.Std_k98ojb.Logic.Equal {}\n        equal_1b5b4e.result -> output_7d3e2f\n        0 -> equal_1b5b4e.right\n        modulo_6a3b3f.result -> equal_1b5b4e.left\n        n_6d3f6e -> modulo_6a3b3f.value\n        2 -> modulo_6a3b3f.divisor\n    }\n\n    \n\n    instance(x: 42, y: 7) is_even_7e5f49 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_5f6c7d\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_3b5c1c\n\n        instance(x: 201, y: 62) modulo_9b8c7a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 437, y: 64) equal_4b5e7d root.Std_k98ojb.Logic.Equal {}\n        n_5f6c7d -> modulo_9b8c7a.value\n        2 -> modulo_9b8c7a.divisor\n        modulo_9b8c7a.result -> equal_4b5e7d.left\n        0 -> equal_4b5e7d.right\n        equal_4b5e7d.result -> output_3b5c1c\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_8d7b5d root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -30, y: -26, name: \"input\") property(Number) input_6c6c1d\n        in(x: -294, y: 155, name: \"execute\") trigger() execute_8f5e0c\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_8d8b9c\n        out(x: 546, y: 205, name: \"continue\") trigger() continue_1f7b9f\n\n        instance(x: 201, y: 62) modulo_7e5d50 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 185) equal_6c9a6d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 546, y: 126) if_9a5d3d root.Std_k98ojb.Std.If {}\n        instance(x: 546, y: 288) or_6e5b9e root.Std_k98ojb.Logic.Or {}\n        2 -> modulo_7e5d50.divisor\n        input_6c6c1d -> modulo_7e5d50.value\n        modulo_7e5d50.result -> equal_6c9a6d.left\n        0 -> equal_6c9a6d.right\n        equal_6c9a6d.result -> if_9a5d3d.predicate\n        execute_8f5e0c -> if_9a5d3d.execute\n        if_9a5d3d.else -> continue_1f7b9f\n        if_9a5d3d.then -> or_6e5b9e.execute\n        or_6e5b9e.left -> continue_1f7b9f\n        equal_6c9a6d.result -> or_6e5b9e.right\n        true -> or_6e5b9e.left\n        or_6e5b9e.result -> output_8d8b9c\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_8f9f3f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -28, y: -33, name: \"input\") property(Number) input_9f9e1f\n        in(x: -296, y: 157, name: \"execute\") trigger() execute_9c5e1e\n\n        out(x: 547, y: 55, name: \"output\") property(Bool) output_3e3c05\n        out(x: 690, y: 163, name: \"continue\") trigger() continue_9f5e2d\n\n        instance(x: 210, y: 54) modulo_1c5f1d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 440, y: 56) equal_3c5e1e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 665, y: 57) if_5e5f1e root.Std_k98ojb.Std.If {}\n        modulo_1c5f1d.result -> equal_3c5e1e.left\n        0 -> equal_3c5e1e.right\n        equal_3c5e1e.result -> if_5e5f1e.predicate\n        execute_9c5e1e -> if_5e5f1e.execute\n        if_5e5f1e.else -> continue_9f5e2d\n        if_5e5f1e.then -> continue_9f5e2d\n        input_9f9e1f -> modulo_1c5f1d.value\n        equal_3c5e1e.result -> output_3e3c05\n    }\n\n    \n\n    instance(x: -37, y: -17) is_even_8f5e1e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -529, y: 42, name: \"input\") property(Number) input_8e4e6f\n\n        out(x: 1269, y: 49, name: \"output\") property(Bool) output_5e9c7d\n\n        instance(x: 1078, y: 52) modulo_7d6b9d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1497, y: 46) equal_6d3e51 root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_7d6b9d.divisor\n        input_8e4e6f -> modulo_7d6b9d.value\n        0 -> equal_6d3e51.right\n        modulo_7d6b9d.result -> equal_6d3e51.left\n        equal_6d3e51.result -> output_5e9c7d\n    }\n\n    \n\n    instance(x: -62, y: -1) is_even_5e9c7d root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -533, y: 2, name: \"input\") property(Number) input_3a8c7d\n\n        out(x: 1724, y: -10, name: \"output\") property(Bool) output_4b9d9e\n\n        instance(x: 1428, y: -309, name: \"modulo\") modulo_9c6f5f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1786, y: 119, name: \"equal to 0\") equal_9f9e1e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 2135, y: -356, name: \"if\") if_1e4b4e root.Std_k98ojb.Std.If {}\n        input_3a8c7d -> modulo_9c6f5f.value\n        2 -> modulo_9c6f5f.divisor\n        modulo_9c6f5f.result -> equal_9f9e1e.left\n        0 -> equal_9f9e1e.right\n        equal_9f9e1e.result -> if_1e4b4e.predicate\n        if_1e4b4e.then -> output_4b9d9e\n        if_1e4b4e.else -> output_4b9d9e\n        true -> if_1e4b4e.value\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_5c8b6e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -57, y: -29, name: \"input\") property(Number) input_6e5c8f\n\n        out(x: 340, y: -1, name: \"output\") property(Bool) output_7f2b4d\n\n        instance(x: 178, y: -22) modulo_1e4a7a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 345, y: -3) equal_1e9d2e root.Std_k98ojb.Logic.Equal {}\n        input_6e5c8f -> modulo_1e4a7a.value\n        2 -> modulo_1e4a7a.divisor\n        modulo_1e4a7a.result -> equal_1e9d2e.left\n        0 -> equal_1e9d2e.right\n        equal_1e9d2e.result -> output_7f2b4d\n    }\n\n    \n\n    instance(x: 15, y: 12) is_even_3e3f2c root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -270, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 520, y: -1, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) ``Find index of element_0`` root.Std_k98ojb.Iteration.Find {}\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n                current_afd5b1 -> equal_a54bdc.left\n                elem_9f6850 -> equal_a54bdc.right\n                equal_a54bdc.result -> bool_1eb6e9\n            } -> ``Find index of element_0``.predicate\n            instance(x: 0, y: 0) ``List of characters_0`` root.Std_k98ojb.Strings.Characters {}\n            ``List of characters_0``.characters -> ``Find index of element_0``.items\n            ``Find index of element_0``.item -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: 0, y: 0) ``List of characters_1`` root.Std_k98ojb.Strings.Characters {}\n        ``List of characters_1``.characters -> find_6d05b0.items\n        find_6d05b0.item -> output_0\n        input_0 -> ``List of characters_0``.input\n        input_0 -> ``List of characters_1``.input\n    }\n\n    \n\n    instance(x: 80, y: 50) first_repeated_6e6bfd root.main.first_repeated {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -275, y: 0, name: \"string\") property(String) string_9c2c0f\n\n        out(x: 630, y: -1, name: \"output\") property(Any) output_5f9c2f\n\n        instance(x: 0, y: 0) for_8f4d7c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) characters_2f5b9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) find_2b8b5f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) notequal_5e3e8a root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 0, y: 0) tolower_5c0f5f root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 0, y: 0) tolower_3f3e3d root.Std_k98ojb.Strings.ToLower {}\n        characters_2f5b9c.input -> for_8f4d7c.items\n        string_9c2c0f -> characters_2f5b9c.input\n        for_8f4d7c.onItem -> find_2b8b5f.items\n        func() {\n            in(x: -117, y: 34, name: \"current\") property(String) current_9a4b2f\n\n            out(x: 514, y: 44, name: \"bool\") property(Bool) bool_1c9d2e\n\n            instance(x: 88, y: 29) contains_6a3f6d root.Std_k98ojb.Strings.Contains {}\n            instance(x: 306, y: 35) notequal_2b1f8c root.Std_k98ojb.Logic.NotEqual {}\n            contains_6a3f6d.input -> notequal_2b1f8c.left\n            tolower_5c0f5f.output -> contains_6a3f6d.input\n            for_8f4d7c.items -> contains_6a3f6d.list\n            current_9a4b2f -> tolower_5c0f5f.input\n            notequal_2b1f8c.right -> contains_6a3f6d.contains\n            notequal_2b1f8c.result -> bool_1c9d2e\n        } -> find_2b8b5f.predicate\n        for_8f4d7c.onItem -> tolower_3f3e3d.input\n        find_2b8b5f.item -> output_5f9c2f\n        tolower_3f3e3d.output -> notequal_5e3e8a.left\n        tolower_5c0f5f.output -> notequal_5e3e8a.right\n        notequal_5e3e8a.result -> find_2b8b5f.predicate\n        for_8f4d7c.reset -> find_2b8b5f.reset\n        for_8f4d7c.trigger -> for_8f4d7c.trigger\n    }\n\n    \n\n    instance(x: -275, y: 0) first_repeated_char_8f3a9f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: -2, name: \"string\") property(String) string_9d6f9c\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_9f9f1d\n\n        instance(x: 0, y: 0) find_2f2b4a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) characters_5a3c5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) contains_7f5b7e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) map_9f9bdc root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) find_6f2f8e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) zip_6e6c2f root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 0, y: 0) list_0a6b2d root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 0, y: 0) not_1f6b6a root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) indexof_2c9b8a root.Std_k98ojb.Strings.IndexOf {}\n        instance(x: 0, y: 0) greaterthan_0a7a1f root.Std_k98ojb.Math.GreaterThan {}\n        func() {\n            in(x: -117, y: 34, name: \"item\") property(String) item_0\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1\n\n            instance(x: 89, y: 29) indexof_1e7f7c root.Std_k98ojb.Strings.IndexOf {}\n            instance(x: 310, y: 35) greaterthan_7e5f4f root.Std_k98ojb.Math.GreaterThan {}\n            item_0 -> indexof_1e7f7c.input\n            item_0 -> indexof_1e7f7c.contains\n            indexof_1e7f7c.result -> greaterthan_7e5f4f.left\n            0 -> greaterthan_7e5f4f.right\n            greaterthan_7e5f4f.result -> bool_1\n        } -> find_2f2b4a.predicate\n        map_9f9bdc.output_list -> find_2f2b4a.items\n        characters_5a3c5c.characters -> contains_7f5b7e.items\n        func() {\n            in(x: -117, y: 34, name: \"item\") property(String) item_0\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1\n\n            instance(x: 89, y: 29) indexof_1e7f7c root.Std_k98ojb.Strings.IndexOf {}\n            instance(x: 310, y: 35) greaterthan_7e5f4f root.Std_k98ojb.Math.GreaterThan {}\n            item_0 -> indexof_1e7f7c.input\n            item_0 -> indexof_1e7f7c.contains\n            indexof_1e7f7c.result -> greaterthan_7e5f4f.left\n            0 -> greaterthan_7e5f4f.right\n            greaterthan_7e5f4f.result -> bool_1\n        } -> contains_7f5b7e.handler\n        find_2f2b4a.item -> char_9f9f1d\n        string_9d6f9c -> characters_5a3c5c.input\n        characters_5a3c5c.characters -> map_9f9bdc.items\n        func() {\n            in(x: -117, y: 34, name: \"item\") property(String) item_0\n\n            out(x: 515, y: 44, name: \"item\") property(String) item_1\n\n            instance(x: 89, y: 29) indexof_1e7f7c root.Std_k98ojb.Strings.IndexOf {}\n            item_0 -> indexof_1e7f7c.input\n            item_0 -> indexof_1e7f7c.contains\n            indexof_1e7f7c.result -> item_1\n        } -> map_9f9bdc.handler\n        func() {\n            in(x: -117, y: 34, name: \"item\") property(String) item_0\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1\n\n            instance(x: 89, y: 29) indexof_1e7f7c root.Std_k98ojb.Strings.IndexOf {}\n            instance(x: 310, y: 35) greaterthan_7e5f4f root.Std_k98ojb.Math.GreaterThan {}\n            item_0 -> indexof_1e7f7c.input\n            item_0 -> indexof_1e7f7c.contains\n            indexof_1e7f7c.result -> greaterthan_7e5f4f.left\n            0 -> greaterthan_7e5f4f.right\n            greaterthan_7e5f4f.result -> bool_1\n        } -> find_6f2f8e.predicate\n        contains_7f5b7e.output_list -> find_6f2f8e.items\n        find_6f2f8e.item -> zip_6e6c2f.left\n        list_0a6b2d -> zip_6e6c2f.right\n        func() {\n            in(x: -117, y: 34, name: \"left\") property(String) left_0\n\n            in(x: -117, y: 34, name: \"right\") property(Number) right_0\n\n            out(x: 515, y: 44, name: \"item\") property(String) item_1\n\n            instance(x: 89, y: 29) not_2a9c3f root.Std_k98ojb.Logic.Not {}\n            instance(x: 310, y: 35) equal_6f8a2f root.Std_k98ojb.Logic.Equal {}\n            left_0 -> equal_6f8a2f.left\n            right_0 -> equal_6f8a2f.right\n            equal_6f8a2f.result -> not_2a9c3f.input\n            not_2a9c3f.result -> item_1\n        } -> zip_6e6c2f.handler\n        func() {\n            in(x: -117, y: 34, name: \"item\") property(String) item_0\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1\n\n            instance(x: 89, y: 29) indexof_1e7f7c root.Std_k98ojb.Strings.IndexOf {}\n            instance(x: 310, y: 35) greaterthan_7e5f4f root.Std_k98ojb.Math.GreaterThan {}\n            item_0 -> indexof_1e7f7c.input\n            item_0 -> indexof_1e7f7c.contains\n            indexof_1e7f7c.result -> greaterthan_7e5f4f.left\n            0 -> greaterthan_7e5f4f.right\n            greaterthan_7e5f4f.result -> bool_1\n        } -> map_9f9bdc.handler\n        0 -> list_0a6b2d.from\n        map_9f9bdc.output_list.Length -> list_0a6b2d.to\n        string_9d6f9c -> indexof_2c9b8a.input\n        zip_6e6c2f.zipped -> indexof_2c9b8a.contains\n        indexof_2c9b8a.result -> not_1f6b6a.input\n        not_1f6b6a.result -> greaterthan_0a7a1f.left\n        0 -> greaterthan_0a7a1f.right\n        greaterthan_0a7a1f.result -> find_6f2f8e.predicate\n    }\n\n    \n\n    instance(x: -290, y: -1) first_repeated_char_5a9b9d root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_1c8d9d\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_3f1b9e\n\n        instance(x: 532, y: 147) ``string_1c8d9d_0`` root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"Find\") find_2f7b3f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Filter\") filter_7e1ce0 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0, name: \"Contains\") contains_3c713b root.Std_k98ojb.Strings.Contains {}\n        ``string_1c8d9d_0``.characters -> find_2f7b3f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Any) current_8a2c2f\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``current_8a2c2f_0`` root.Std_k98ojb.Iteration.Find {}\n            ``current_8a2c2f_0``.items -> contains_3c713b.input\n            current_8a2c2f -> ``current_8a2c2f_0``.items\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(Any) current_8a2c2f\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                current_8a2c2f -> contains_3c713b.contains\n                contains_3c713b.result -> bool_1eb6e9\n            } -> ``current_8a2c2f_0``.predicate\n            ``current_8a2c2f_0``.item -> contains_3c713b.contains\n            contains_3c713b.result -> bool_1eb6e9\n        } -> find_2f7b3f.predicate\n        ``string_1c8d9d_0``.characters -> filter_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Any) current_8a2c2f\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``current_8a2c2f_1`` root.Std_k98ojb.Iteration.Find {}\n            ``current_8a2c2f_1``.items -> contains_3c713b.input\n            current_8a2c2f -> ``current_8a2c2f_1``.items\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(Any) current_8a2c2f\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                current_8a2c2f -> contains_3c713b.contains\n                contains_3c713b.result -> bool_1eb6e9\n            } -> ``current_8a2c2f_1``.predicate\n            ``current_8a2c2f_1``.item -> contains_3c713b.contains\n            contains_3c713b.result -> bool_1eb6e9\n        } -> filter_7e1ce0.handler\n        find_2f7b3f.item -> output_3f1b9e\n        string_1c8d9d -> ``string_1c8d9d_0``.input\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_7e1ce0 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -287, y: 1, name: \"string\") property(String) input_0\n\n        out(x: 527, y: -1, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 0) characters_4b5e8a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) find_5a7e4a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_5a7e4a_0`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) contains_3e7b8f root.Std_k98ojb.Strings.Contains {}\n        characters_4b5e8a.characters -> find_5a7e4a.items\n        func() {\n            in(x: -128, y: 34, name: \"elem\") property(String) elem_0\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 89, y: 29) ``find_5a7e4a_0`` root.Std_k98ojb.Iteration.Find {}\n            instance(x: 310, y: 35) ``contains_3e7b8f_0`` root.Std_k98ojb.Strings.Contains {}\n            elem_0 -> ``contains_3e7b8f_0``.input\n            ``find_5a7e4a_0``.item -> ``contains_3e7b8f_0``.contains\n            ``find_5a7e4a_0``.items -> ``contains_3e7b8f_0``.list\n            ``contains_3e7b8f_0``.result -> bool_0\n        } -> find_5a7e4a.predicate\n        find_5a7e4a.item -> result_0\n        input_0 -> characters_4b5e8a.input\n        find_5a7e4a.items -> ``find_5a7e4a_0``.items\n        func() {\n            in(x: -128, y: 34, name: \"elem\") property(String) elem_0\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 89, y: 29) contains_3e7b8f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_1f3d2d root.Std_k98ojb.Logic.NotEqual {}\n            elem_0 -> contains_3e7b8f.input\n            contains_3e7b8f.list -> contains_3e7b8f.contains\n            contains_3e7b8f.result -> notequal_1f3d2d.left\n            0 -> notequal_1f3d2d.right\n            notequal_1f3d2d.result -> bool_0\n        } -> ``find_5a7e4a_0``.predicate\n        characters_4b5e8a.characters -> contains_3e7b8f.list\n    }\n\n    \n\n    instance(x: -77, y: 58) first_repeated_char_0 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -269, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 590, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 0) find_5a0b6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) for_3b5c92 root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) contains_4f3c1c root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) characters_2e4f4c root.Std_k98ojb.Strings.Characters {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) tolist_2f4f7d root.Std_k98ojb.List.To {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            characters_2e4f4c.characters -> tolist_2f4f7d.input\n            elem_9f6850 -> contains_4f3c1c.input\n            tolist_2f4f7d.list -> contains_4f3c1c.list\n            contains_4f3c1c.result -> notequal_807ffd.left\n            true -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_5a0b6f.predicate\n        for_3b5c92.items -> characters_2e4f4c.input\n        input_0 -> for_3b5c92.items\n        find_5a0b6f.items -> for_3b5c92.items\n        for_3b5c92.onItem -> find_5a0b6f.items\n        for_3b5c92.item -> find_5a0b6f.predicate.elem\n        find_5a0b6f.item -> result_0\n    }\n\n    \n\n    instance(x: 76, y: 53) first_repeated_char_1d5d0f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -273, y: -6, name: \"string\") property(String) input_0\n\n        out(x: 597, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) first_1a7e6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``characters_0`` root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) ``map_0`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``filter_0`` root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``set_0`` root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 0, y: 0) ``length_0`` root.Std_k98ojb.List.Length {}\n        instance(x: 0, y: 0) ``index_0`` root.Std_k98ojb.Iteration.Find {}\n        ``characters_0``.characters -> ``map_0``.items\n        func() {\n            in(x: 0, y: 0, name: \"char\") property(String) char_0\n\n            out(x: 0, y: 0, name: \"output\") property(List) output_0\n\n            instance(x: 0, y: 0) ``length_1`` root.Std_k98ojb.List.Length {}\n            instance(x: 0, y: 0) ``filter_1`` root.Std_k98ojb.Iteration.Filter {}\n            instance(x: 0, y: 0) ``set_1`` root.Std_k98ojb.Iteration.Zip {}\n            ``length_1``.list -> ``filter_1``.items\n            func() {\n                in(x: 0, y: 0, name: \"item\") property(Number) item_0\n\n                out(x: 0, y: 0, name: \"bool\") property(Bool) bool_0\n\n                instance(x: 0, y: 0) ``equal_0`` root.Std_k98ojb.Logic.Equal {}\n                ``equal_0``.left -> ``set_1``.left\n                ``equal_0``.right -> ``set_1``.right\n                ``set_1``.zipped -> ``equal_0``.left\n                ``set_1``.zipped -> ``equal_0``.right\n                ``equal_0``.result -> bool_0\n            } -> ``filter_1``.handler\n            instance(x: 0, y: 0) ``list_0`` root.Std_k98ojb.List.GenerateRange {}\n            ``list_0``.from -> ``filter_1``.context\n            0 -> ``list_0``.from\n            ``length_1``.length -> ``list_0``.to\n            ``filter_1``.output_list -> output_0\n        } -> ``map_0``.handler\n        ``map_0``.output_list -> ``filter_0``.items\n        func() {\n            in(x: 0, y: 0, name: \"item\") property(List) item_0\n\n            out(x: 0, y: 0, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 0, y: 0) ``length_2`` root.Std_k98ojb.List.Length {}\n            instance(x: 0, y: 0) ``greaterThan_0`` root.Std_k98ojb.Math.GreaterThan {}\n            ``length_2``.list -> ``greaterThan_0``.left\n            1 -> ``greaterThan_0``.right\n            ``greaterThan_0``.result -> bool_0\n        } -> ``filter_0``.handler\n        ``filter_0``.output_list -> ``set_0``.left\n        ``characters_0``.characters -> ``set_0``.right\n        ``set_0``.zipped -> first_1a7e6f.items\n        func() {\n            in(x: 0, y: 0, name: \"item\") property(List) item_0\n\n            out(x: 0, y: 0, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 0, y: 0) ``index_1`` root.Std_k98ojb.Iteration.Find {}\n            instance(x: 0, y: 0) ``equal_1`` root.Std_k98ojb.Logic.Equal {}\n            ``index_1``.items -> ``equal_1``.left\n            ``index_1``.item -> ``equal_1``.right\n            func() {\n                in(x: 0, y: 0, name: \"elem\") property(String) elem_0\n\n                out(x: 0, y: 0, name: \"bool\") property(Bool) bool_1\n\n                instance(x: 0, y: 0) ``equal_2`` root.Std_k98ojb.Logic.Equal {}\n                ``equal_2``.left -> elem_0\n                ``equal_2``.right -> ``set_0``.zipped\n                ``equal_2``.result -> bool_1\n            } -> ``index_1``.predicate\n            ``equal_1``.result -> bool_0\n        } -> first_1a7e6f.predicate\n        first_1a7e6f.item -> output_0\n        input_0 -> ``characters_0``.input\n    }\n\n    \n\n    instance(x: -271, y: -6) first_repeated_char_5f4b0f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 510, y: -1, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) characters_7a8d5a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) set_6d5d5c root.Std_k98ojb.Std.Set {}\n        instance(x: 0, y: 0) if_7c284f root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) orElse_7c2a3a root.Std_k98ojb.Std.OrElse {}\n        characters_7a8d5a.input -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_3e6b1f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            set_6d5d5c.value -> contains_3e6b1f.input\n            elem_9f6850 -> contains_3e6b1f.contains\n            contains_3e6b1f.result -> notequal_807ffd.left\n            true -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        find_6d05b0.item -> if_7c284f.predicate\n        find_6d05b0.item -> orElse_7c2a3a.first\n        set_6d5d5c.continue -> if_7c284f.then\n        if_7c284f.else -> set_6d5d5c.execute\n        set_6d5d5c.value -> orElse_7c2a3a.second\n        input_0 -> characters_7a8d5a.input\n        orElse_7c2a3a.value -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeated_0f3a3c root.main.first_repeated {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -296, y: -12, name: \"string\") property(String) string_8c7b5e\n\n        out(x: 719, y: -17, name: \"character\") property(String) character_0\n\n        instance(x: 0, y: 0) find_4e1f6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``string_8c7b5e_0`` root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) ``string_8c7b5e_1`` root.Std_k98ojb.Iteration.Filter {}\n        ``string_8c7b5e_0``.characters -> ``string_8c7b5e_1``.items\n        func() {\n            in(x: -159, y: 38, name: \"current\") property(String) current_1c1d9e\n\n            out(x: 605, y: 39, name: \"bool\") property(Bool) bool_6e3e1c\n\n            instance(x: 89, y: 29) ``string_8c7b5e_2`` root.Std_k98ojb.Iteration.Find {}\n            instance(x: 310, y: 35) ``string_8c7b5e_3`` root.Std_k98ojb.Iteration.Filter {}\n            ``string_8c7b5e_2``.items -> ``string_8c7b5e_3``.items\n            ``string_8c7b5e_3``.handler -> ``string_8c7b5e_2``.predicate\n            ``string_8c7b5e_3``.output_list -> ``string_8c7b5e_2``.items\n            func() {\n                in(x: -104, y: 74, name: \"current\") property(String) current_7a3f3e\n\n                out(x: 500, y: 75, name: \"bool\") property(Bool) bool_8f3a7d\n\n                instance(x: 89, y: 69) equal_6e7f9c root.Std_k98ojb.Logic.Equal {}\n                current_7a3f3e -> equal_6e7f9c.left\n                current_1c1d9e -> equal_6e7f9c.right\n                equal_6e7f9c.result -> bool_8f3a7d\n            } -> ``string_8c7b5e_3``.handler\n            ``string_8c7b5e_2``.item -> bool_6e3e1c\n        } -> ``string_8c7b5e_1``.handler\n        ``string_8c7b5e_1``.output_list -> find_4e1f6f.items\n        func() {\n            in(x: -159, y: 38, name: \"current\") property(String) current_1c1d9e\n\n            out(x: 605, y: 39, name: \"bool\") property(Bool) bool_6e3e1c\n\n            instance(x: 89, y: 29) ``string_8c7b5e_4`` root.Std_k98ojb.Iteration.Find {}\n            instance(x: 310, y: 35) ``string_8c7b5e_5`` root.Std_k98ojb.Iteration.Filter {}\n            ``string_8c7b5e_4``.items -> ``string_8c7b5e_5``.items\n            ``string_8c7b5e_5``.handler -> ``string_8c7b5e_4``.predicate\n            ``string_8c7b5e_5``.output_list -> ``string_8c7b5e_4``.items\n            func() {\n                in(x: -104, y: 74, name: \"current\") property(String) current_7a3f3e\n\n                out(x: 500, y: 75, name: \"bool\") property(Bool) bool_8f3a7d\n\n                instance(x: 89, y: 69) notequal_2a5f9f root.Std_k98ojb.Logic.NotEqual {}\n                current_7a3f3e -> notequal_2a5f9f.left\n                current_1c1d9e -> notequal_2a5f9f.right\n                notequal_2a5f9f.result -> bool_8f3a7d\n            } -> ``string_8c7b5e_5``.handler\n            ``string_8c7b5e_4``.item -> bool_6e3e1c\n        } -> find_4e1f6f.predicate\n        string_8c7b5e -> ``string_8c7b5e_0``.input\n        find_4e1f6f.item -> character_0\n    }\n\n    \n\n    instance(x: -293, y: -17) first_repeated_6c1a1c root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -286, y: 3, name: \"string\") property(String) input_0\n\n        out(x: 594, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) find_1d8a9e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) characters_5b3f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) map_2c3b4e root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) filter_2e5c9e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) contains_7f6f8e root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) indexof_5a3f8c root.Std_k98ojb.List.IndexOf {}\n        instance(x: 0, y: 0) substring_3e5c9e root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) tolower_7f6f8e root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 0, y: 0) ``first item_5a3f8c`` root.Std_k98ojb.List.FirstItem {}\n        input_0 -> characters_5b3f8c.input\n        characters_5b3f8c.characters -> map_2c3b4e.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"output\") property(String) output_1e3f6c\n\n            instance(x: 89, y: 29) indexof_2e3f6c root.Std_k98ojb.List.IndexOf {}\n            instance(x: 310, y: 35) tolower_2e3f6c root.Std_k98ojb.Strings.ToLower {}\n            tolower_2e3f6c.output -> indexof_2e3f6c.list\n            elem_9f6850 -> tolower_2e3f6c.input\n            indexof_2e3f6c.result -> output_1e3f6c\n        } -> map_2c3b4e.handler\n        map_2c3b4e.output_list -> filter_2e5c9e.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1e3f6c\n\n            instance(x: 89, y: 29) greaterthan_2e3f6c root.Std_k98ojb.Math.GreaterThan {}\n            0 -> greaterthan_2e3f6c.left\n            elem_9f6850 -> greaterthan_2e3f6c.right\n            greaterthan_2e3f6c.result -> bool_1e3f6c\n        } -> filter_2e5c9e.handler\n        filter_2e5c9e.output_list -> contains_7f6f8e.list\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"output\") property(String) output_1e3f6c\n\n            instance(x: 89, y: 29) tolower_2e3f6c root.Std_k98ojb.Strings.ToLower {}\n            tolower_2e3f6c.output -> output_1e3f6c\n            elem_9f6850 -> tolower_2e3f6c.input\n        } -> contains_7f6f8e.handler\n        characters_5b3f8c.characters -> contains_7f6f8e.list\n        contains_7f6f8e.result -> find_1d8a9e.predicate\n        filter_2e5c9e.index -> indexof_5a3f8c.index\n        filter_2e5c9e.items -> indexof_5a3f8c.list\n        indexof_5a3f8c.result -> substring_3e5c9e.start\n        1 -> substring_3e5c9e.end\n        input_0 -> substring_3e5c9e.input\n        substring_3e5c9e.substring -> ``first item_5a3f8c``.list\n        ``first item_5a3f8c``.item -> output_0\n    }\n\n    \n\n    instance(x: -281, y: 4) first_repeated_3f5c9e root.main.first_repeated {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: -196, name: \"items\") property(List) items_7c8d8c\n\n        out(x: 42, y: -214, name: \"second smallest\") property(Number) second_smallest_3a2d1f\n\n        instance(x: -98, y: -299) min_8a3d2f root.Std_k98ojb.List.Min {}\n        instance(x: -108, y: -106) remove_2a9b7e root.Std_k98ojb.List.Remove {}\n        instance(x: 9, y: -111) min_8a3d2f_2 root.Std_k98ojb.List.Min {}\n        items_7c8d8c -> min_8a3d2f.items\n        min_8a3d2f.min -> remove_2a9b7e.index\n        items_7c8d8c -> remove_2a9b7e.list\n        remove_2a9b7e.listWithoutItem -> min_8a3d2f_2.items\n        min_8a3d2f_2.min -> second_smallest_3a2d1f\n    }\n\n    \n\n    instance(x: 342, y: 568) second_smallest_7c1f5f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -285, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) min_1c6f2a root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) remove_5c8b3d root.Std_k98ojb.List.Remove {}\n        instance(x: 0, y: 0) min_6c8c5c root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_1c6f2a.items\n        min_1c6f2a.min -> remove_5c8b3d.index\n        list_abed4a -> remove_5c8b3d.list\n        remove_5c8b3d.listWithoutItem -> min_6c8c5c.items\n        min_6c8c5c.min -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_1c7f6f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -903, y: -379, name: \"items\") property(List) items_ai\n\n        out(x: -78, y: -306, name: \"min\") property(Number) min_7b1f8a\n\n        data_instance(x: -609, y: -363) data_9a9c70  = [items]\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        data_9a9c70 -> min_c3e343.items\n        min_c3e343.min -> min_7b1f8a\n        instance(x: -341, y: -301) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        data_9a9c70 -> min_c3e343_2.items\n        instance(x: -341, y: -301) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it > min\"\n        }\n        min_7b1f8a -> filter_7b3b7b.min\n        data_9a9c70 -> filter_7b3b7b.list\n        filter_7b3b7b.result -> min_c3e343_2.items\n        min_c3e343_2.min -> min_7b1f8a\n    }\n    \n\n    instance(x: 322, y: 568) second_smallest_6d5e9c root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: -197, name: \"items\") property(List) items_ai\n        out(x: 160, y: -220, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -439) list_min_node_1 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -575) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.index\n        list_min_node.min -> list_min_node_1.items\n        list_remove_node.listWithoutItem -> list_min_node_1.items\n        list_min_node_1.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -301, y: -198, name: \"items\") property(List) items_9e7c1e\n\n        out(x: 161, y: -207, name: \"second_smallest\") property(Number) second_smallest_1b2b7c\n\n        instance(x: -5, y: -299) min_7b8b77 root.Std_k98ojb.List.Min {}\n        instance(x: 292, y: -298) get_at_8b1a7b root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) remove_6b9c8b root.Std_k98ojb.List.Remove {}\n        instance(x: 0, y: 0) min_2c5c7b root.Std_k98ojb.List.Min {}\n        items_9e7c1e -> min_7b8b77.items\n        min_7b8b77.min -> get_at_8b1a7b.index\n        0 -> get_at_8b1a7b.index\n        items_9e7c1e -> get_at_8b1a7b.list\n        get_at_8b1a7b.itemAtIndex -> remove_6b9c8b.index\n        items_9e7c1e -> remove_6b9c8b.list\n        remove_6b9c8b.listWithoutItem -> min_2c5c7b.items\n        min_2c5c7b.min -> second_smallest_1b2b7c\n    }\n\n    \n\n    instance(x: 292, y: 0) second_smallest_9d6b7c root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -285, y: -0, name: \"items\") property(List) items_2c8c7a\n\n        out(x: 590, y: -1, name: \"min\") property(Number) min_5e5c1e\n\n        instance(x: 0, y: 0) find_7f6d9e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -111, y: 34, name: \"elem\") property(Number) elem_6a8c6f\n\n            out(x: 514, y: 44, name: \"bool\") property(Bool) bool_6f5c1c\n\n            instance(x: 89, y: 29) min_3f9e4c root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_9c3e1d root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: 0) min_9e1b9d root.Std_k98ojb.Math.Min {}\n            instance(x: 89, y: 29) min_7f5e9a root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_4e8d1f root.Std_k98ojb.Logic.NotEqual {}\n            min_3f9e4c.min -> notequal_9c3e1d.right\n            elem_6a8c6f -> min_3f9e4c.right\n            min_7f5e9a.min -> notequal_4e8d1f.right\n            min_9e1b9d.min -> min_7f5e9a.right\n            min_9e1b9d.right -> min_7f5e9a.left\n            find_7f6d9e.item -> min_9e1b9d.left\n            notequal_9c3e1d.result -> min_9e1b9d.left\n            notequal_4e8d1f.result -> bool_6f5c1c\n        } -> find_7f6d9e.predicate\n        items_2c8c7a -> find_7f6d9e.items\n        find_7f6d9e.item -> min_5e5c1e\n    }\n\n    \n\n    instance(x: -53, y: 527) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -285, y: -0, name: \"list\") property(List) list_5e6f9e\n\n        out(x: 591, y: -1, name: \"second smallest\") property(Number) second_smallest_4e7c3f\n\n        instance(x: 0, y: 0) find_9a7c3e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_5e8f8e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_6a7f9f\n\n            instance(x: 89, y: 29) min_3e9b5e root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_5a8f7e root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: 0) list_1e7f9e root.Std_k98ojb.List.Filter {}\n            instance(x: 0, y: 0) list_3e7f9e root.Std_k98ojb.List.Filter {}\n            instance(x: 0, y: 0) list_5e7f9e root.Std_k98ojb.List.Filter {}\n            list_5e6f9e -> list_1e7f9e.list\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_7e8f8e\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_8a7f9f\n\n                instance(x: 89, y: 29) notequal_9a8f7e root.Std_k98ojb.Logic.NotEqual {}\n                elem_5e8f9e -> notequal_9a8f7e.left\n                elem_7e8f8e -> notequal_9a8f7e.right\n                notequal_9a8f7e.result -> bool_8a7f9f\n            } -> list_1e7f9e.predicate\n            list_1e7f9e.result -> list_3e7f9e.list\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9e8f8e\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_aa7f9f\n\n                instance(x: 89, y: 29) notequal_be8f7e root.Std_k98ojb.Logic.NotEqual {}\n                elem_5e8f9e -> notequal_be8f7e.left\n                elem_9e8f8e -> notequal_be8f7e.right\n                notequal_be8f7e.result -> bool_aa7f9f\n            } -> list_3e7f9e.predicate\n            list_3e7f9e.result -> list_5e7f9e.list\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_be8f8e\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_ca7f9f\n\n                instance(x: 89, y: 29) notequal_de8f7e root.Std_k98ojb.Logic.NotEqual {}\n                elem_5e8f9e -> notequal_de8f7e.left\n                elem_be8f8e -> notequal_de8f7e.right\n                notequal_de8f7e.result -> bool_ca7f9f\n            } -> list_5e7f9e.predicate\n            list_5e7f9e.result -> min_3e9b5e.items\n            min_3e9b5e.min -> second_smallest_4e7c3f\n            min_3e9b5e.min -> notequal_5a8f7e.left\n            elem_5e8f9e -> notequal_5a8f7e.right\n            notequal_5a8f7e.result -> bool_6a7f9f\n        } -> find_9a7c3e.predicate\n        list_5e6f9e -> find_9a7c3e.items\n        find_9a7c3e.item -> second_smallest_4e7c3f\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_3e7f9e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) min_5a7f0f root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) remove_7a7d2e root.Std_k98ojb.List.Remove {}\n        instance(x: 0, y: 0) min_7f7c7c root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_5a7f0f.items\n        min_5a7f0f.min -> remove_7a7d2e.index\n        list_abed4a -> remove_7a7d2e.list\n        remove_7a7d2e.listWithoutItem -> min_7f7c7c.items\n        min_7f7c7c.min -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -285, y: -188, name: \"items\") property(List) items_9e7c5e\n\n        out(x: 154, y: -216, name: \"min\") property(Number) min_4c4b9e\n\n        instance(x: -103, y: -110) min_9b2e3c root.Std_k98ojb.List.Min {}\n        instance(x: -103, y: -220) remove_1a2b8e root.Std_k98ojb.List.Remove {}\n        instance(x: -103, y: -325) min_6f6e8c root.Std_k98ojb.List.Min {}\n        items_9e7c5e -> min_9b2e3c.items\n        min_9b2e3c.min -> remove_1a2b8e.index\n        items_9e7c5e -> remove_1a2b8e.list\n        remove_1a2b8e.listWithoutItem -> min_6f6e8c.items\n        min_6f6e8c.min -> min_4c4b9e\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -279, y: -199, name: \"items\") property(List) items_5b3e3a\n\n        out(x: 59, y: -220, name: \"min\") property(Number) min_7f2b4d\n\n        instance(x: -106, y: -106) find_2c2e7a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -111, y: 111, name: \"elem\") property(Number) elem_6e5c3e\n\n            out(x: 519, y: 116, name: \"bool\") property(Bool) bool_5c5d3c\n\n            instance(x: 89, y: 29) min_9c6a4d root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_3e7b6e root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: 35) min_3e3f2c root.Std_k98ojb.Math.Min {}\n            min_9c6a4d.result -> notequal_3e7b6e.right\n            elem_6e5c3e -> min_9c6a4d.right\n            min_2c2e7a.item -> min_9c6a4d.left\n            min_3e3f2c.result -> min_2c2e7a.item\n            min_2c2e7a.item -> min_3e3f2c.left\n            elem_6e5c3e -> min_3e3f2c.right\n            notequal_3e7b6e.result -> bool_5c5d3c\n        } -> find_2c2e7a.predicate\n        items_5b3e3a -> find_2c2e7a.items\n        find_2c2e7a.item -> min_7f2b4d\n    }\n\n    \n\n    instance(x: -172, y: -58) second_smallest_5a9c7e root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_RAG_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15910,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) intersection_6a9b7e root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_6a9b7e.left\n        list2_c62075 -> intersection_6a9b7e.right\n        intersection_6a9b7e.intersect -> output_5bbcd7\n    }\n\n    \n\n    instance(x: -293, y: -5) common_element_7a4dad root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -398, y: -208, name: \"list1\") property(List) list1_8b8d0e\n        in(x: -386, y: 34, name: \"list2\") property(List) list2_9b4b9f\n\n        out(x: 1283, y: 5, name: \"output\") property(Bool) output_7a1b6d\n\n        instance(x: 1058, y: 93) intersection_4f7b0f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 750, y: -11) notempty_4f2f4e root.Std_k98ojb.List.NotEmpty {}\n        list1_8b8d0e -> intersection_4f7b0f.left\n        list2_9b4b9f -> intersection_4f7b0f.right\n        intersection_4f7b0f.intersect -> notempty_4f2f4e.list\n        notempty_4f2f4e.isEmpty -> output_7a1b6d\n    }\n\n    \n\n    instance(x: -292, y: -5) has_common_3b5e7d root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -476, y: -239, name: \"list1\") property(List) list1_4d5e9d\n        in(x: -473, y: 33, name: \"list2\") property(List) list2_8d9d50\n\n        out(x: 1254, y: 4, name: \"output\") property(Bool) output_1c6f0d\n\n        instance(x: 757, y: 96) intersection_8d7d3a root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1153, y: 146) notempty_9f0d2c root.Std_k98ojb.List.NotEmpty {}\n        list1_4d5e9d -> intersection_8d7d3a.left\n        list2_8d9d50 -> intersection_8d7d3a.right\n        intersection_8d7d3a.intersect -> notempty_9f0d2c.list\n        notempty_9f0d2c.isEmpty -> output_1c6d0d\n    }\n\n    \n\n    instance(x: -296, y: -11) common_element_6a0c6d root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if two lists have at least one common element.\") common_element {\n        in(x: -365, y: -226, name: \"list1\") property(List) list1_8a3e9c\n        in(x: -375, y: 26, name: \"list2\") property(List) list2_6d1c4d\n\n        out(x: 1269, y: 1, name: \"output\") property(Bool) output_4b8f9d\n\n        instance(x: 1020, y: 82) intersection_6e4c6d root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1069, y: -207) not_75283f root.Std_k98ojb.Logic.Not {}\n        list1_8a3e9c -> intersection_6e4c6d.left\n        list2_6d1c4d -> intersection_6e4c6d.right\n        intersection_6e4c6d.intersect -> not_75283f.input\n        not_75283f.result -> output_4b8f9d\n    }\n\n    \n\n    instance(x: -334, y: -9) common_element_9e7f7c root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -349, y: -208, name: \"list1\") property(List) list1_4f9c0d\n        in(x: -367, y: -5, name: \"list2\") property(List) list2_3f2c8d\n\n        out(x: 1149, y: -204, name: \"output\") property(Bool) output_9a5c8f\n\n        instance(x: -117, y: -206, name: \"intersection\") intersection_1c4c7e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 846, y: -205) notempty_8c1c1d root.Std_k98ojb.List.NotEmpty {}\n        list1_4f9c0d -> intersection_1c4c7e.left\n        list2_3f2c8d -> intersection_1c4c7e.right\n        notempty_8c1c1d.list -> intersection_1c4c7e.intersection\n        notempty_8c1c1d.isEmpty -> output_9a5c8f\n    }\n\n    \n\n    instance(x: -285, y: -11) common_element_e5f7b8 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -290, y: -165, name: \"list1\") property(List) list1_7d9d9f\n        in(x: -304, y: -1, name: \"list2\") property(List) list2_7d7d6e\n\n        out(x: 1064, y: -153, name: \"output\") property(Bool) output_9e6d3c\n\n        instance(x: -98, y: -154) intersection_9e9b3a root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 526, y: -156) notempty_7c5d4a root.Std_k98ojb.List.NotEmpty {}\n        list1_7d9d9f -> intersection_9e9b3a.left\n        list2_7d7d6e -> intersection_9e9b3a.right\n        intersection_9e9b3a.intersect -> notempty_7c5d4a.list\n        notempty_7c5d4a.isEmpty -> output_9e6d3c\n    }\n\n    \n\n    instance(x: -55, y: -11) common_element_eb7b9d root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -464, y: -217, name: \"list1\") property(List) list1_1b6c5e\n        in(x: -473, y: 18, name: \"list2\") property(List) list2_6a1f1c\n\n        out(x: 1226, y: 7, name: \"output\") property(Bool) output_8d7e61\n\n        instance(x: 751, y: 92) intersection_7e2f5e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1189, y: 148) notempty_3f6e0a root.Std_k98ojb.List.NotEmpty {}\n        list1_1b6c5e -> intersection_7e2f5e.left\n        list2_6a1f1c -> intersection_7e2f5e.right\n        intersection_7e2f5e.intersect -> notempty_3f6e0a.list\n        notempty_3f6e0a.isEmpty -> output_8d7e61\n    }\n\n    \n\n    instance(x: -284, y: -3) common_element_4a5f8c root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -369, y: -217, name: \"list1\") property(List) list1_6c1c2f\n        in(x: -378, y: 25, name: \"list2\") property(List) list2_1f8b6e\n\n        out(x: 1188, y: 40, name: \"output\") property(Bool) output_5f8f9e\n\n        instance(x: 1033, y: 71) intersection_4c2c8c root.Std_k98ojb.Sets.Intersection {}\n        list1_6c1c2f -> intersection_4c2c8c.left\n        list2_1f8b6e -> intersection_4c2c8c.right\n        instance(x: 1013, y: -186) notempty_8d8c2c root.Std_k98ojb.List.NotEmpty {}\n        intersection_4c2c8c.intersect -> notempty_8d8c2c.list\n        notempty_8d8c2c.isEmpty -> output_5f8f9e\n    }\n\n    \n\n    instance(x: -333, y: -5) common_element_9d0e7c root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if two lists have at least one common element.\") has_common_element {\n        in(x: -325, y: -167, name: \"list1\") property(List) list1_5e7d61\n        in(x: -334, y: 55, name: \"list2\") property(List) list2_8c5d0c\n\n        out(x: 1239, y: 38, name: \"output\") property(Bool) output_8c3c8d\n\n        instance(x: 1047, y: 42) ifexpression_3e8b2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"list1 contains item\"\n        }\n        instance(x: 1054, y: -156) contains_7e3f8d root.Std_k98ojb.List.Contains {}\n        instance(x: 1048, y: -168) if_3a1f0d root.Std_k98ojb.Std.If {}\n        ifexpression_3e8b2c.then -> if_3a1f0d.then\n        ifexpression_3e8b2c.else -> if_3a1f0d.else\n        if_3a1f0d.value -> output_8c3c8d\n        if_3a1f0d.input -> ifexpression_3e8b2c.execute\n        list1_5e7d61 -> contains_7e3f8d.list\n        list2_8c5d0c -> ifexpression_3e8b2c.gen_0\n        contains_7e3f8d.item -> ifexpression_3e8b2c.gen_1\n        contains_7e3f8d.is_contained -> ifexpression_3e8b2c.input\n        if_3a1f0d.then -> output_8c3c8d\n        true -> if_3a1f0d.then\n        false -> if_3a1f0d.else\n    }\n\n    \n\n    instance(x: -279, y: -16) has_common_element_9a3f3c root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if two lists have at least one common element.\") common_element {\n        in(x: -427, y: -222, name: \"list1\") property(List) list1_9c8c5c\n        in(x: -431, y: -19, name: \"list2\") property(List) list2_8c8c60\n\n        out(x: 1239, y: -202, name: \"output\") property(Bool) output_5e8c2d\n\n        instance(x: -184, y: -197, name: \"intersection\") intersection_9f6e1e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1014, y: -204) notempty_4d9e8c root.Std_k98ojb.List.NotEmpty {}\n        list1_9c8c5c -> intersection_9f6e1e.left\n        list2_8c8c60 -> intersection_9f6e1e.right\n        intersection_9f6e1e.intersect -> notempty_4d9e8c.list\n        notempty_4d9e8c.isEmpty -> output_5e8c2d\n    }\n\n    \n\n    instance(x: -288, y: -14) common_element_4c9c1f root.main.common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -523, y: -234, name: \"list\") property(List) list_7c8d8c\n\n        out(x: 1267, y: -213, name: \"output\") property(Bool) output_2e8d1e\n\n        instance(x: -303, y: -205, name: \"filter list\") filter_5b8a4d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"map numbers to true/false\") map_4e7f48 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_3e3e6e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_c2f3a5 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_3e3e6e -> sub_c2f3a5.first\n            _index_769593 -> sub_c2f3a5.second\n            sub_c2f3a5.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_5b8a4d.handler\n        list_7c8d8c -> filter_5b8a4d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) sub_5f3e4c root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) notequal_4c3e6d root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_5f3e4c.first\n            sub_5f3e4c.second -> sub_5f3e4c.first\n            sub_5f3e4c.result -> notequal_4c3e6d.left\n            1 -> notequal_4c3e6d.right\n            notequal_4c3e6d.result -> bool_4524be\n        } -> map_4e7f48.handler\n        filter_5b8a4d.output_list -> map_4e7f48.items\n        map_4e7f48.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_2e8d1e\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_numbers_8e8f8d root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -535, y: -225, name: \"list\") property(List) list_0e9c2d\n\n        out(x: 1237, y: -213, name: \"output\") property(Bool) output_3b4e5d\n\n        instance(x: 767, y: -216) reduce_8c4b9e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 1115, y: -212) not_1f7f5d root.Std_k98ojb.Logic.Not {}\n        instance(x: 338, y: -222) map_3e7c1f root.Std_k98ojb.Iteration.Map {}\n        instance(x: -105, y: -212) getat_4c3c6f root.Std_k98ojb.List.GetAt {}\n        instance(x: -3, y: -212) getat_7c3c6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 338, y: -215) sub_8f4b9e root.Std_k98ojb.Math.Sub {}\n        instance(x: 1115, y: -219) equal_1f7f5d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 767, y: -217) and_8c4b9e root.Std_k98ojb.Logic.And {}\n        instance(x: 338, y: -218) greaterthan_3e7c1f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 767, y: -220) choose_8c4b9e root.Std_k98ojb.Std.Choose {}\n        instance(x: 767, y: -221) or_8c4b9e root.Std_k98ojb.Std.OrElse {}\n        list_0e9c2d -> map_3e7c1f.items\n        map_3e7c1f.output_list -> reduce_8c4b9e.items\n        func() {\n            in(x: -26, y: -19, name: \"current\") property(Number) current_1a7b7f\n\n            out(x: 513, y: -36, name: \"output\") property(Bool) output_5a7b7f\n\n            instance(x: 142, y: -31) greaterthan_7c3c6f root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: 289, y: -33) sub_4c3c6f root.Std_k98ojb.Math.Sub {}\n            instance(x: 438, y: -35) equal_7c3c6f root.Std_k98ojb.Logic.Equal {}\n            instance(x: 585, y: -37) and_7c3c6f root.Std_k98ojb.Logic.And {}\n            current_1a7b7f -> greaterthan_7c3c6f.right\n            1 -> greaterthan_7c3c6f.left\n            greaterthan_7c3c6f.result -> sub_4c3c6f.first\n            current_1a7b7f -> sub_4c3c6f.second\n            sub_4c3c6f.result -> getat_4c3c6f.index\n            list_0e9c2d -> getat_4c3c6f.list\n            getat_4c3c6f.itemAtIndex -> greaterthan_7c3c6f.left\n            current_1a7b7f -> equal_7c3c6f.right\n            getat_4c3c6f.itemAtIndex -> equal_7c3c6f.left\n            equal_7c3c6f.result -> and_7c3c6f.right\n            greaterthan_7c3c6f.result -> and_7c3c6f.left\n            and_7c3c6f.result -> output_5a7b7f\n        } -> reduce_8c4b9e.handler\n        func() {\n            in(x: -28, y: -16, name: \"previous\") property(Bool) previous_9c7b7f\n            in(x: -18, y: 80, name: \"current\") property(Bool) current_9c7b7f\n\n            out(x: 711, y: 55, name: \"output\") property(Bool) output_7c7b7f\n\n            instance(x: 212, y: 60) and_9c7b7f root.Std_k98ojb.Logic.And {}\n            instance(x: 355, y: 62) choose_9c7b7f root.Std_k98ojb.Std.Choose {}\n            instance(x: 499, y: 64) or_9c7b7f root.Std_k98ojb.Std.OrElse {}\n            previous_9c7b7f -> and_9c7b7f.left\n            current_9c7b7f -> and_9c7b7f.right\n            and_9c7b7f.result -> choose_9c7b7f.predicate\n            true -> choose_9c7b7f.then\n            previous_9c7b7f -> choose_9c7b7f.else\n            choose_9c7b7f.value -> or_9c7b7f.first\n            true -> or_9c7b7f.second\n            or_9c7b7f.result -> output_7c7b7f\n        } -> reduce_8c4b9e.reducer\n        0 -> reduce_8c4b9e.initial\n        reduce_8c4b9e.result -> not_1f7f5d.input\n        not_1f7f5d.result -> output_3b4e5d\n    }\n\n    \n\n    instance(x: -59, y: -12) consecutive_6b5c8f root.main.consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -481, y: -225, name: \"list\") property(List) list_3c3c85\n\n        out(x: 1217, y: -220, name: \"output\") property(Bool) output_6d7f2f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3c3c85 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3c3c85 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_f21f44 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -519, y: -230, name: \"list\") property(List) list_1e7d5f\n\n        out(x: 1216, y: -223, name: \"output\") property(Bool) output_1a3e2f\n\n        instance(x: 741, y: -206) ifexpression_1b2b9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 159, name: \"getter_3b8f9d\") getter_3b8f9d = previous\n        setter(x: 679, y: -325, name: \"setter_4f7d1c\") setter_4f7d1c = previous\n        instance(x: 321, y: -29) for_4e8b2d root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -120, name: \"setter_4f7d1c\") setter_3f9a5f = previous\n        instance(x: -275, y: -35) getat_5c7b8c root.Std_k98ojb.List.GetAt {}\n        ifexpression_1b2b9f.else -> continue_5a7d9d\n        ifexpression_1b2b9f.value -> output_1a3e2f\n        ifexpression_1b2b9f.then -> setter_4f7d1c.execute\n        list_1e7d5f -> for_4e8b2d.items\n        for_4e8b2d.item -> ifexpression_1b2b9f.gen_2\n        for_4e8b2d.index -> ifexpression_1b2b9f.gen_0\n        getter_3b8f9d.value -> ifexpression_1b2b9f.gen_1\n        for_4e8b2d.onItem -> ifexpression_1b2b9f.execute\n        for_4e8b2d.done -> continue_5a7d9d\n        for_4e8b2d.item -> setter_4f7d1c.new_value\n        list_1e7d5f -> getat_5c7b8c.list\n        0 -> getat_5c7b8c.index\n        getat_5c7b8c.itemAtIndex -> setter_3f9a5f.new_value\n        execute_2e7a9d -> setter_3f9a5f.execute\n        setter_3f9a5f.continue -> for_4e8b2d.reset\n        setter_4f7d1c.continue -> for_4e8b2d.next\n    }\n\n    \n\n    instance(x: 12, y: -179) consecutive_numbers_9f5e6c root.main.consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -493, y: -214, name: \"list\") property(List) list_5f7a0e\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_5f7a0e -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_5a4dad root.main.consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -505, y: -216, name: \"list\") property(List) list_0f7a2e\n\n        out(x: 1281, y: -215, name: \"output\") property(Bool) output_5b7e8e\n\n        instance(x: -248, y: -208, name: \"filter list\") filter_3e5d8a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 842, y: -206) contains_4d7f5e root.Std_k98ojb.List.Contains {}\n        instance(x: 250, y: -208, name: \"map list\") map_7c5d4a root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -202) not_7d6f7a root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -27, name: \"current\") property(Number) current_9b6c3f\n            in(x: -23, y: 83, name: \"_current\") property(Number) _current_7c9c6c\n\n            out(x: 705, y: 57, name: \"output\") property(Bool) output_3a9b5f\n\n            instance(x: 226, y: 64) sub_5a3b4c root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 59) greaterthan_5f6b5d root.Std_k98ojb.Math.GreaterThan {}\n            current_9b6c3f -> sub_5a3b4c.first\n            _current_7c9c6c -> sub_5a3b4c.second\n            sub_5a3b4c.result -> greaterthan_5f6b5d.left\n            1 -> greaterthan_5f6b5d.right\n            greaterthan_5f6b5d.result -> output_3a9b5f\n        } -> filter_3e5d8a.handler\n        list_0f7a2e -> filter_3e5d8a.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_9b6c3f\n\n            out(x: 521, y: -28, name: \"output\") property(Number) output_3a9b5f\n\n            instance(x: 74, y: -23) add_5a3b4c root.Std_k98ojb.Math.Add {}\n            current_9b6c3f -> add_5a3b4c.first\n            1 -> add_5a3b4c.second\n            add_5a3b4c.result -> output_3a9b5f\n        } -> map_7c5d4a.handler\n        filter_3e5d8a.output_list -> map_7c5d4a.items\n        map_7c5d4a.output_list -> contains_4d7f5e.list\n        list_0f7a2e -> contains_4d7f5e.list\n        false -> contains_4d7f5e.item\n        not_7d6f7a.result -> output_5b7e8e\n        contains_4d7f5e.is_contained -> not_7d6f7a.input\n    }\n\n    \n\n    instance(x: -289, y: -5) consecutive_8f6d5a root.main.consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -569, y: -2, name: \"list\") property(List) list_5b0b7c\n\n        out(x: 442, y: 8, name: \"output\") property(Bool) output_5c6f82\n\n        instance(x: -312, y: 47, name: \"filter\") filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -48, y: 53) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -312, y: 202, name: \"filter1\") filter_1b6b5e root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 208) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 6) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 186, y: 155) sub_3f3f1c root.Std_k98ojb.Math.Sub {}\n        instance(x: 387, y: 152) equal_1c6e8c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 389, y: 4) equal_8b8b16 root.Std_k98ojb.Logic.Equal {}\n        list_5b0b7c -> filter_7b3b7b.list\n        filter_7b3b7b.result -> firstitem_870503.list\n        list_5b0b7c -> filter_1b6b5e.list\n        filter_1b6b5e.result -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        firstitem_3078c6.item -> sub_3f3f1c.first\n        firstitem_870503.item -> sub_3f3f1c.second\n        sub_852f2e.result -> equal_1c6e8c.left\n        1 -> equal_1c6e8c.right\n        sub_3f3f1c.result -> equal_8b8b16.left\n        1 -> equal_8b8b16.right\n        equal_1c6e8c.result -> output_5c6f82\n        equal_8b8b16.result -> output_5c6f82\n    }\n\n    \n\n    instance(x: -74, y: -40) consecutive_numbers_9a5a1e root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -535, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_numbers_7a4dad root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -545, y: -216, name: \"list\") property(List) list_7e3d5e\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_7e3d5e -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_numbers_7a4dad root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -501, y: -232, name: \"list\") property(List) list_4d4b9c\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_4d4b9c -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_numbers_7a4dad root.main.consecutive_numbers {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -520, y: -212, name: \"list1\") property(List) list1_3f8c7b\n        in(x: -526, y: -11, name: \"list2\") property(List) list2_2d1f5c\n\n        out(x: 1265, y: -207, name: \"output\") property(Bool) output_9b4b7d\n\n        instance(x: -291, y: -205, name: \"list1 length\") length_4a8e9d root.Std_k98ojb.List.Length {}\n        instance(x: -290, y: -10, name: \"list2 length\") length_6d1d4a root.Std_k98ojb.List.Length {}\n        instance(x: 848, y: -205) not_6c4f7e root.Std_k98ojb.Logic.Not {}\n        instance(x: 847, y: -9) greaterthan_7e3c6c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1058, y: -203) not_4c8b2f root.Std_k98ojb.Logic.Not {}\n        instance(x: 1058, y: -7) greaterthan_4c8b2f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -3, y: -204, name: \"list1 length > list2 length\") ifexpression_7c7a5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"list1Length > list2Length\"\n        }\n        instance(x: -1, y: -7, name: \"list2 length > list1 length\") ifexpression_3a5c0c root.Std_k98ojb.Std.IfExpression {\n            expression: \"list2Length > list1Length\"\n        }\n        instance(x: -275, y: -205, name: \"loop list1\") for_1a8c7e root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -7, name: \"loop list2\") for_4f1b6d root.Std_k98ojb.Std.For {}\n        instance(x: 1058, y: -203) greaterthan_6b6d5d root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1058, y: -7) lessorequal_1c9d3d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1058, y: -203) lessorequal_7e3c6c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1058, y: -7) greaterthan_4c8b2f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1058, y: -203) equal_6c4f7e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1058, y: -7) equal_4c8b2f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 246, y: -205, name: \"get list1 index\") getat_4a7d9a root.Std_k98ojb.List.GetAt {}\n        instance(x: 246, y: -7, name: \"get list2 index\") getat_7c5b6d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: -203) and_6c4f7e root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -7) and_4c8b2f root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -203) and_7e3c6c root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -7) and_1c9d3d root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -203) and_4c8b2f root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -7) and_7e3c6c root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -203) and_6b6d5d root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -7) and_1c9d3d root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -203) and_7e3c6c root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -7) and_4c8b2f root.Std_k98ojb.Logic.And {}\n        instance(x: 1058, y: -203) or_6c4f7e root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -7) or_4c8b2f root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -203) or_7e3c6c root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -7) or_1c9d3d root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -203) or_4c8b2f root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -7) or_7e3c6c root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -203) or_6b6d5d root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -7) or_1c9d3d root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -203) or_7e3c6c root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -7) or_4c8b2f root.Std_k98ojb.Logic.Or {}\n        instance(x: 1058, y: -203) or_7e3c6c root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -7) or_4c8b2f root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -203) or_6b6d5d root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -7) or_1c9d3d root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -203) or_7e3c6c root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -7) or_4c8b2f root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -203) or_6c4f7e root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -7) or_4c8b2f root.Std_k98ojb.Std.If {\n            then: \"true\"\n        }\n        instance(x: 1058, y: -203) if_6c4f7e root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -7) if_4c8b2f root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -203) if_7e3c6c root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -7) if_1c9d3d root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -203) if_4c8b2f root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -7) if_7e3c6c root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -203) if_6b6d5d root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 1058, y: -7) if_1c9d3d root.Std_k98ojb.Std.If {\n            then: \"false\"\n        }\n        instance(x: 105",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: -115, name: \"list1\") property(List) list1_1d9b98\n        in(x: -307, y: 24, name: \"list2\") property(List) list2_1d1f8e\n\n        out(x: 1077, y: -94, name: \"output\") property(Bool) output_5e7c3e\n\n        instance(x: -163, y: -105, name: \"filter\") filter_1b6c85 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 459, y: -99) contains_4f3e4c root.Std_k98ojb.List.Contains {}\n        instance(x: 1064, y: -94) notequal_6d1d4c root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 1248, y: -94) if_2a6b0e root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -38, y: -25, name: \"current\") property(List) current_1e4e8f\n            in(x: -26, y: 49, name: \"_index\") property(Number) _index_1b6d2e\n\n            out(x: 706, y: 44, name: \"output\") property(Bool) output_5e7c3e\n\n            instance(x: 233, y: 51) contains_1e9c7e root.Std_k98ojb.List.Contains {}\n            instance(x: 446, y: 44) notequal_5f5d6c root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 628, y: 44) not_4c9e4e root.Std_k98ojb.Logic.Not {}\n            list2_1d1f8e -> contains_1e9c7e.list\n            current_1e4e8f -> contains_1e9c7e.item\n            contains_1e9c7e.is_contained -> notequal_5f5d6c.left\n            true -> notequal_5f5d6c.right\n            notequal_5f5d6c.result -> not_4c9e4e.input\n            not_4c9e4e.result -> output_5e7c3e\n        } -> filter_1b6c85.handler\n        list1_1d9b98 -> filter_1b6c85.items\n        filter_1b6c85.output_list -> contains_4f3e4c.list\n        list2_1d1f8e -> contains_4f3e4c.item\n        contains_4f3e4c.is_contained -> notequal_6d1d4c.left\n        true -> notequal_6d1d4c.right\n        notequal_6d1d4c.result -> if_2a6b0e.predicate\n        if_2a6b0e.then -> filter_1b6c85.reset\n        if_2a6b0e.else -> output_5e7c3e\n        true -> output_5e7c3e\n    }\n\n    \n\n    instance(x: -69, y: -1) is_sublist_1b5b8d root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -425, y: -225, name: \"list1\") property(List) list1_3c4c4d\n        in(x: -425, y: -93, name: \"list2\") property(List) list2_7f2f8d\n\n        out(x: 1164, y: -175, name: \"output\") property(Bool) output_1d3b4c\n\n        instance(x: -251, y: -205, name: \"length1\") length_1f3b9e root.Std_k98ojb.List.Length {}\n        instance(x: -252, y: -75, name: \"length2\") length_8b8e0e root.Std_k98ojb.List.Length {}\n        instance(x: 102, y: -205, name: \"is list2 longer than list1\") greaterthan_4c1b6a root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 100, y: -75, name: \"is list1 longer than list2\") greaterthan_6e1e1f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 728, y: -205, name: \"is list2 equal or shorter than list1\") lessthanorequal_4b4d1c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 728, y: -75, name: \"is list1 equal or shorter than list2\") lessthanorequal_3c1f6d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1048, y: -205, name: \"list2 is shorter than list1\") lessthan_7a8f4d root.Std_k98ojb.Math.LessThan {}\n        instance(x: 1048, y: -75, name: \"list1 is shorter than list2\") lessthan_7f6f6d root.Std_k98ojb.Math.LessThan {}\n        instance(x: 1012, y: -205, name: \"list1 is equal to list2\") equal_7a9f4d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1012, y: -75, name: \"list2 is equal to list1\") equal_7f6f6d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1296, y: -205, name: \"is list2 longer or equal to list1\") greaterthanorequal_4b4d1c root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        instance(x: 1296, y: -75, name: \"is list1 longer or equal to list2\") greaterthanorequal_3c1f6d root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        instance(x: 1500, y: -205, name: \"list1 is longer than list2\") greaterthan_6e1e1f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1500, y: -75, name: \"list2 is longer than list1\") greaterthan_4c1b6a root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1712, y: -205, name: \"list1 is longer or equal to list2\") greaterthanorequal_3c1f6d root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        instance(x: 1712, y: -75, name: \"list2 is longer or equal to list1\") greaterthanorequal_4b4d1c root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        instance(x: 1888, y: -205, name: \"list1 is equal to list2 or list1 is sublist of list2\") or_2a6d7c root.Std_k98ojb.Logic.Or {}\n        instance(x: 1888, y: -75, name: \"list2 is equal to list1 or list2 is sublist of list1\") or_2a6d7c root.Std_k98ojb.Logic.Or {}\n        instance(x: 2036, y: -205, name: \"list1 is equal to list2 or list1 is shorter than list2\") or_2a6d7c root.Std_k98ojb.Logic.Or {}\n        instance(x: 2036, y: -75, name: \"list2 is equal to list1 or list2 is shorter than list1\") or_2a6d7c root.Std_k98ojb.Logic.Or {}\n        instance(x: 2212, y: -205, name: \"list1 is equal to list2 or list1 is shorter or equal to list2\") or_2a6d7c root.Std_k98ojb.Logic.Or {}\n        instance(x: 2212, y: -75, name: \"list2 is equal to list1 or list2 is shorter or equal to list1\") or_2a6d7c root.Std_k98ojb.Logic.Or {}\n        instance(x: 2416, y: -205, name: \"list1 is equal to list2 or list1 is shorter or equal to list2 or list1 is sublist of list2\") or_2a6d7c root.Std_k98ojb.Logic.Or {}\n        instance(x: 2416, y: -75, name: \"list2 is equal to list1 or list2 is shorter or equal to list1 or list2 is sublist of list1\") or_2a6d7c root.Std_k98ojb.Logic.Or {}\n        instance(x: 2588, y: -205, name: \"list1 is equal to list2 or list1 is shorter or equal to list2 or list1 is longer than list2 and list1 is sublist of list2\") or_2a6d7c root.Std_k98ojb.Logic.Or {}\n        instance(x: 2588, y: -75, name: \"list2 is equal to list1 or list2 is shorter or equal to list1 or list2 is longer than list1 and list2 is sublist of list1\") or_2a6d7c root.Std_k98ojb.Logic.Or {}\n        instance(x: 2772, y: -205, name: \"list1 is equal to list2 or list1 is shorter or equal to list2 or list1 is longer than list2 and list1 is sublist of list2 or list1 is longer or equal to list2 and list1 is sublist of list2\") or_2a6d7c root.Std_k98ojb.Logic.Or {}\n        instance(x: 2772, y: -75, name: \"list2 is equal to list1 or list2 is shorter or equal to list1 or list2 is longer than list1 and list2 is sublist of list1 or list2 is longer or equal to list1 and list2 is sublist of list1\") or_2a6d7c root.Std_k98ojb.Logic.Or {}\n        instance(x: 2996, y: -205, name: \"list1 is equal to list2 or list1 is shorter or equal to list2 or list1 is longer than list2 and list1 is sublist of list2 or list1 is longer or equal to list2 and list1 is sublist of list2 or list1 is longer than list2 and list2 is longer or equal to list1 and list1 is sublist of list2\") or_2a6d7c root.Std_k98ojb.Logic.Or {}\n        instance(x: 2996, y: -75, name: \"list2 is equal to list1 or list2 is shorter or equal to list1 or list2 is longer than list1 and list2 is sublist of list1 or list2 is longer or equal to list1 and list2 is sublist of list1 or list2 is longer than list1 and list1 is longer or equal to list2 and list2 is sublist of list1\") or_2a6d7c root.Std_k98ojb.Logic.Or {}\n        instance(x: 3236, y: -205, name: \"list1 is equal to list2 or list1 is shorter or equal to list2 or list1 is longer than list2 and list1 is sublist of list2 or list1 is longer or equal to list2 and list1 is sublist of list2 or list1 is longer than list2 and list2 is longer or equal to list1 and list1 is sublist of list2 or list1 is longer or equal to list2 and list2 is longer or equal to list1 and list1 is sublist of list2\") or_2a6d7c root.Std_k98ojb.Logic.Or {}\n        instance(x: 3236, y: -75, name: \"list2 is equal to list1 or list2 is shorter or equal to list1 or list2 is longer than list1 and list2 is sublist of list1 or list2 is longer or equal to list1 and list2 is sublist of list1 or list2 is longer than list1 and list",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -463, y: -223, name: \"list1\") property(List) list1_8e3e9c\n        in(x: -472, y: -43, name: \"list2\") property(List) list2_6d1c4d\n\n        out(x: 1269, y: -208, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -302, y: -205, name: \"list1 length\") length_6b1c9c root.Std_k98ojb.List.Length {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"generate range\") generate_range_7e6c1c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"slice list1\") slice_8a3b4a root.Std_k98ojb.List.Slice {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"generate range\") generate_range_7e6c1c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> generate_range_7e6c1c.handler\n        length_6b1c9c.length -> generate_range_7e6c1c.to\n        0 -> generate_range_7e6c1c.from\n        generate_range_7e6c1c.result -> slice_8a3b4a.start\n        _index_170471 -> slice_8a3b4a.end\n        list1_8e3e9c -> slice_8a3b4a.items\n        slice_8a3b4a.slice -> contains_32727d.list\n        list2_6d1c4d -> contains_32727d.item\n        contains_32727d.is_contained -> not_75283f.input\n        not_75283f.result -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") sublist {\n        in(x: -493, y: -227, name: \"list1\") property(List) list1_7a2e0f\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_3e2e7f\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_6c8f60\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_4b9f1c\n\n        instance(x: 752, y: 93) ifexpression_6b7b9c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_9e3e1f\") getter_9e3e1f = previous\n        setter(x: 679, y: -313, name: \"setter_6c8d1e\") setter_6c8d1e = previous\n        instance(x: 321, y: -20) for_8b3e5c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_6c8d1e\") setter_5c8d1e = previous\n        instance(x: -275, y: -35) getat_1e8e3e root.Std_k98ojb.List.GetAt {}\n        ifexpression_6b7b9c.else -> continue_6c8f60\n        ifexpression_6b7b9c.value -> output_4b9f1c\n        ifexpression_6b7b9c.then -> setter_6c8d1e.execute\n        list1_7a2e0f -> for_8b3e5c.items\n        for_8b3e5c.item -> ifexpression_6b7b9c.gen_2\n        for_8b3e5c.index -> ifexpression_6b7b9c.gen_0\n        getter_9e3e1f.value -> ifexpression_6b7b9c.gen_1\n        for_8b3e5c.onItem -> ifexpression_6b7b9c.execute\n        for_8b3e5c.done -> continue_6c8f60\n        for_8b3e5c.item -> setter_6c8d1e.new_value\n        list1_7a2e0f -> getat_1e8e3e.list\n        0 -> getat_1e8e3e.index\n        getat_1e8e3e.itemAtIndex -> setter_5c8d1e.new_value\n        execute_8e6a0f -> setter_5c8d1e.execute\n        setter_5c8d1e.continue -> for_8b3e5c.reset\n        setter_6c8d1e.continue -> for_8b3e5c.next\n    }\n\n    \n\n    instance(x: 10, y: -177) sublist_3b2c0f root.main.sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -435, y: -213, name: \"list1\") property(List) list1_2e3c74\n        in(x: -443, y: -72, name: \"list2\") property(List) list2_3f9c5d\n\n        out(x: 1187, y: -205, name: \"output\") property(Bool) output_8c4e5f\n\n        instance(x: -293, y: -206, name: \"only sublist\") filter_5e9b6f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 846, y: -204) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -206, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -200) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_5e9b6f.handler\n        list1_2e3c74 -> filter_5e9b6f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_5e9b6f.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        list2_3f9c5d -> contains_32727d.list\n        contains_32727d.item -> contains_32727d.item\n        not_75283f.result -> output_8c4e5f\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_7a4dad root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: -216, name: \"list1\") property(List) list1_3c2e1d\n        in(x: -313, y: -24, name: \"list2\") property(List) list2_1f3f6c\n\n        out(x: 1263, y: -199, name: \"output\") property(Bool) output_3c9b8d\n\n        instance(x: -145, y: -209, name: \"find index\") findindex_5d5b3c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 745, y: -206) not_1d5b7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1015, y: -205) length_6c3c8e root.Std_k98ojb.List.Length {}\n        instance(x: 1075, y: -205) greaterthan_4f8b6f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1230, y: -204) sub_9e5b6f root.Std_k98ojb.List.Slice {}\n        instance(x: 1218, y: -205) length_8d4e3f root.Std_k98ojb.List.Length {}\n        instance(x: 1178, y: -205) equal_8b7d3f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1050, y: -205) not_9d4e3f root.Std_k98ojb.Logic.Not {}\n        instance(x: 847, y: -205) contains_6f8b7f root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -207, name: \"transform numbers to true/false\") map_3c8d4f root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> map_3c8d4f.handler\n        findindex_5d5b3c.items -> map_3c8d4f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_3c8d4f.handler\n        findindex_5d5b3c.predicate -> map_3c8d4f.handler\n        map_3c8d4f.output_list -> findindex_5d5b3c.items\n        list1_3c2e1d -> findindex_5d5b3c.items\n        findindex_5d5b3c.item -> sub_9e5b6f.list\n        findindex_5d5b3c.item -> length_6c3c8e.list\n        list2_1f3f6c -> sub_9e5b6f.list\n        length_6c3c8e.length -> sub_9e5b6f.start\n        0 -> sub_9e5b6f.end\n        sub_9e5b6f.slice -> length_8d4e3f.list\n        list2_1f3f6c -> length_8d4e3f.list\n        length_6c3c8e.length -> greaterthan_4f8b6f.left\n        length_8d4e3f.length -> greaterthan_4f8b6f.right\n        greaterthan_4f8b6f.result -> not_9d4e3f.input\n        not_9d4e3f.result -> contains_6f8b7f.is_contained\n        list2_1f3f6c -> contains_6f8b7f.list\n        length_8d4e3f.length -> sub_9e5b6f.end\n        sub_9e5b6f.slice -> equal_8b7d3f.left\n        list2_1f3f6c -> equal_8b7d3f.right\n        equal_8b7d3f.result -> not_1d5b7c.input\n        not_1d5b7c.result -> output_3c9b8d\n        findindex_5d5b3c.item -> not_1d5b7c.input\n    }\n\n    \n\n    instance(x: -92, y: -5) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") sublist {\n        in(x: -285, y: -93, name: \"list1\") property(List) list1_2c9b3e\n        in(x: -283, y: 59, name: \"list2\") property(List) list2_3b2c1c\n\n        out(x: 557, y: -88, name: \"output\") property(Bool) output_4f7c1f\n\n        instance(x: -92, y: -87) contains_2b1e6c root.Std_k98ojb.List.Contains {}\n        instance(x: 146, y: -86) length_9a7c5e root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -85) greaterthan_1b4c2f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 574, y: -84) and_4b9f0e root.Std_k98ojb.Logic.And {}\n        list1_2c9b3e -> contains_2b1e6c.list\n        list2_3b2c1c -> contains_2b1e6c.item\n        list2_3b2c1c -> length_9a7c5e.list\n        length_9a7c5e.length -> greaterthan_1b4c2f.left\n        0 -> greaterthan_1b4c2f.right\n        contains_2b1e6c.is_contained -> and_4b9f0e.left\n        greaterthan_1b4c2f.result -> and_4b9f0e.right\n        and_4b9f0e.result -> output_4f7c1f\n    }\n\n    \n\n    instance(x: -84, y: 59) sublist_1c7c4b root.main.sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -493, y: -227, name: \"list1\") property(List) list1_6a5c2e\n        in(x: -481, y: 29, name: \"list2\") property(List) list2_8c5d50\n\n        out(x: 1237, y: 5, name: \"continue\") trigger() continue_7b3c8c\n        out(x: 1228, y: 147, name: \"output\") property(Bool) output_9b7b7e\n\n        instance(x: 754, y: 93) ifexpression_1a7f8a root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 336, y: 160, name: \"getter_1e2b8d\") getter_1e2b8d = previous\n        setter(x: 681, y: -313, name: \"setter_2d7a2d\") setter_2d7a2d = previous\n        instance(x: 319, y: -20) for_2a3e1f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_2d7a2d\") setter_1b5c4c = previous\n        instance(x: -275, y: -35) getat_9d2b8a root.Std_k98ojb.List.GetAt {}\n        ifexpression_1a7f8a.else -> continue_7b3c8c\n        ifexpression_1a7f8a.value -> output_9b7b7e\n        ifexpression_1a7f8a.then -> setter_2d7a2d.execute\n        list1_6a5c2e -> for_2a3e1f.items\n        for_2a3e1f.item -> ifexpression_1a7f8a.gen_2\n        for_2a3e1f.index -> ifexpression_1a7f8a.gen_0\n        getter_1e2b8d.value -> ifexpression_1a7f8a.gen_1\n        for_2a3e1f.onItem -> ifexpression_1a7f8a.execute\n        for_2a3e1f.done -> continue_7b3c8c\n        for_2a3e1f.item -> setter_2d7a2d.new_value\n        list1_6a5c2e -> getat_9d2b8a.list\n        0 -> getat_9d2b8a.index\n        getat_9d2b8a.itemAtIndex -> setter_1b5c4c.new_value\n        execute_7b3c8c -> setter_1b5c4c.execute\n        setter_1b5c4c.continue -> for_2a3e1f.reset\n        setter_2d7a2d.continue -> for_2a3e1f.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_7a9d6e root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -427, y: -238, name: \"list1\") property(List) list1_9c0b5c\n        in(x: -431, y: 19, name: \"list2\") property(List) list2_8c4c5d\n\n        out(x: 1216, y: -209, name: \"output\") property(Bool) output_5a5c8d\n\n        instance(x: -266, y: -211, name: \"generate range\") generateRange_9c2e5f root.Std_k98ojb.List.GenerateRange {}\n        instance(x: -10, y: -208) for_4d9e8a root.Std_k98ojb.Std.For {}\n        instance(x: 474, y: -210) slice_5f9c5f root.Std_k98ojb.List.Slice {}\n        instance(x: 1069, y: -207) equal_4c9d9c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1104, y: -12) not_5d7b5c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1197, y: -13) contains_4c9c7f root.Std_k98ojb.List.Contains {}\n        0 -> generateRange_9c2e5f.from\n        length_list1_9c0b5c -> generateRange_9c2e5f.to\n        generateRange_9c2e5f.list -> for_4d9e8a.items\n        for_4d9e8a.item -> slice_5f9c5f.start\n        list1_9c0b5c -> slice_5f9c5f.items\n        length_list2_8c4c5d -> slice_5f9c5f.end\n        slice_5f9c5f.slice -> equal_4c9d9c.left\n        list2_8c4c5d -> equal_4c9d9c.right\n        equal_4c9d9c.result -> contains_4c9c7f.item\n        list1_9c0b5c -> contains_4c9c7f.list\n        not_5d7b5c.result -> output_5a5c8d\n        contains_4c9c7f.is_contained -> not_5d7b5c.input\n        for_4d9e8a.onItem -> equal_4c9d9c.execute\n        for_4d9e8a.done -> contains_4c9c7f.execute\n    }\n\n    \n\n    instance(x: -297, y: -11) is_sublist_8b7d5c root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -279, y: -0, name: \"list\") property(List) list_8c8d6f\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_1d1e9c\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_7c0f1f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            sub_7c0f1f.result -> notequal_807ffd.left\n            elem_9f6850 -> sub_7c0f1f.second\n            index -> sub_7c0f1f.first\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_8c8d6f -> find_6d05b0.items\n        find_6d05b0.item -> missing_1d1e9c\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_7c0d92 root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") missing_number {\n        in(x: -305, y: -0, name: \"list\") property(List) list_2b9b8d\n\n        out(x: 579, y: -1, name: \"number\") property(Number) number_4e5b0d\n\n        instance(x: 0, y: 0) find_4b9e1e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n            in(x: -107, y: 29, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_4b9e1e.predicate\n        list_2b9b8d -> find_4b9e1e.items\n        find_4b9e1e.index -> number_4e5b0d\n    }\n\n    \n\n    instance(x: -55, y: 529) missing_number_2c856f root.main.missing_number {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -285, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) minus_7d8d5 root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            minus_7d8d5.result -> notequal_807ffd.left\n            elem_9f6850 -> minus_7d8d5.second\n            index -> minus_7d8d5.first\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -299, y: -0, name: \"list\") property(List) list_8a3e9f\n\n        out(x: 599, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) for_2f3d72 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -0, y: 0, name: \"item\") property(Number) item_6b1c9c\n            in(x: -0, y: 0, name: \"index\") property(Number) index_8a5e0e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            1 -> modulo_1088d5.divisor\n            index_8a5e0e -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_2f3d72.on_item\n        list_8a3e9f -> for_2f3d72.items\n        instance(x: 0, y: 0) ifexpression_5f5d5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index + 1 != item\"\n        }\n        instance(x: -105, y: 112, name: \"getter_9cceb3\") getter_9cceb3 get_1st_item_in_list_2f3d72 {\n            property: item\n        }\n        instance(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 set_1st_item_in_list_2f3d72 {\n            property: number\n        }\n        instance(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f set_1st_item_in_list_2f3d72 {\n            property: number\n        }\n        for_2f3d72.index -> ifexpression_5f5d5f.gen_0\n        for_2f3d72.item -> ifexpression_5f5d5f.gen_1\n        getter_9cceb3.value -> number_3bc2ae\n        ifexpression_5f5d7f.then -> setter_1cedb2.execute\n        for_2f3d72.index -> setter_1cedb2.new_value\n        ifexpression_5f5d7f.else -> setter_37db7f.execute\n        for_2f3d72.item -> setter_37db7f.new_value\n        for_2f3d72.trigger -> for_2f3d72.reset\n        for_2f3d72.trigger -> ifexpression_5f5d7f.execute\n        setter_1cedb2.continue -> for_2f3d72.next\n        setter_37db7f.continue -> for_2f3d72.next\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -292, y: -7, name: \"list\") property(List) list_ai\n        out(x: 526, y: 23, name: \"min\") property(Number) min_ai\n\n        instance(x: 0, y: 0) for_8b3b1b root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -112, y: 27, name: \"index\") property(Number) index_ai\n            in(x: -116, y: 113, name: \"item\") property(Number) item_ai\n            in(x: -112, y: 203, name: \"execute\") trigger() execute_5e9d7e\n            out(x: 526, y: 203, name: \"continue\") trigger() continue_5f3d3f\n\n            instance(x: -28, y: 126) ifexpression_4e6e9e root.Std_k98ojb.Std.IfExpression {\n                expression: \"item - index != 1\"\n            }\n            instance(x: -67, y: 206) return_5c8d7c root.Std_k98ojb.Std.Return {}\n            instance(x: -59, y: 284) add_8e4b4c root.Std_k98ojb.Math.Add {}\n            instance(x: -61, y: 364) if_9b5f1d root.Std_k98ojb.Std.If {}\n            getter(x: -98, y: 273, name: \"getter_6b5d1c\") getter_6b5d1c = index\n            getter(x: -99, y: 359, name: \"getter_1e8d6f\") getter_1e8d6f = index\n            getter(x: -94, y: 445, name: \"getter_8e8d8f\") getter_8e8d8f = index\n            getter(x: -94, y: 531, name: \"getter_2d8d9f\") getter_2d8d9f = index\n            index_ai -> getter_6b5d1c.value\n            index_ai -> getter_1e8d6f.value\n            index_ai -> getter_8e8d8f.value\n            index_ai -> getter_2d8d9f.value\n            ifexpression_4e6e9e.value -> if_9b5f1d.input\n            if_9b5f1d.then -> return_5c8d7c.execute\n            getter_6b5d1c.value -> return_5c8d7c.value\n            add_8e4b4c.result -> getter_8e8d8f.value\n            getter_1e8d6f.value -> add_8e4b4c.first\n            1 -> add_8e4b4c.second\n            getter_8e8d8f.value -> getter_2d8d9f.value\n            getter_2d8d9f.value -> if_9b5f1d.else\n            if_9b5f1d.continue -> continue_5f3d3f\n            return_5c8d7c.result -> min_ai\n            execute_5e9d7e -> for_8b3b1b.trigger\n            for_8b3b1b.item -> item_ai\n            for_8b3b1b.index -> index_ai\n            list_ai -> for_8b3b1b.items\n        }\n    }\n\n    \n\n    instance(x: -29, y: 125) smallest_missing_node root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") missing_number {\n        in(x: -294, y: -0, name: \"list\") property(List) list_2b3c7a\n\n        out(x: 594, y: -1, name: \"number\") property(Number) number_7e8e1d\n\n        instance(x: 0, y: 0) find_8e7b3e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_6f6c1e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3a4b9f\n\n            instance(x: 89, y: 29) sub_9b4c1a root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) greaterthan_8e5a5c root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: 313, y: 3) index_7c1d1a root.Std_k98ojb.Iteration.Map {}\n            func() {\n                in(x: -118, y: 34, name: \"elem\") property(Number) elem_8f3e5f\n\n                out(x: 514, y: 44, name: \"result\") property(Number) result_7c8f8a\n\n                instance(x: 89, y: 29) sub_6c5b9a root.Std_k98ojb.Math.Sub {}\n                1 -> sub_6c5b9a.second\n                elem_8f3e5f -> sub_6c5b9a.first\n                sub_6c5b9a.result -> result_7c8f8a\n            } -> index_7c1d1a.handler\n            list_2b3c7a -> index_7c1d1a.items\n            index_7c1d1a.output_list -> index_7c1d1a.output_list\n            index_7c1d1a.output_list -> sub_9b4c1a.second\n            elem_6f685e -> sub_9b4c1a.first\n            sub_9b4c1a.result -> greaterthan_8e5a5c.left\n            index_7c1d1a.output_list -> greaterthan_8e5a5c.right\n            greaterthan_8e5a5c.result -> bool_3a4b9f\n        } -> find_8e7b3e.predicate\n        list_2b3c7a -> find_8e7b3e.items\n        find_8e7b3e.item -> number_7e8e1d\n    }\n\n    \n\n    instance(x: -55, y: 529) missing_number_9f8e7e root.main.missing_number {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -280, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_5e8d16 root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            sub_5e8d16.result -> notequal_807ffd.left\n            1 -> sub_5e8d16.second\n            elem_9f6850 -> sub_5e8d16.first\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -289, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -112, y: 33, name: \"index\") property(Number) index_5e2e8c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) ifexpression_8b1c0c root.Std_k98ojb.Std.IfExpression {\n                expression: \"index + 1 != elem\"\n            }\n            index_5e2e8c -> ifexpression_8b1c0c.gen_1\n            elem_9f6850 -> ifexpression_8b1c0c.gen_0\n            ifexpression_8b1c0c.value -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") missing_number {\n        in(x: -298, y: -12, name: \"list\") property(List) list_6a2c2e\n\n        out(x: 586, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_2b4c1d root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            sub_2b4c1d.result -> notequal_807ffd.left\n            index -> sub_2b4c1d.first\n            elem_9f6850 -> sub_2b4c1d.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_6a2c2e -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) missing_number_2c856f root.main.missing_number {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -281, y: -0, name: \"list\") property(List) list_9c8b5c\n\n        out(x: 596, y: -1, name: \"number\") property(Number) number_1c8c4c\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0 || it - prev != 1\"\n            }\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: 0) add_5b7d5a root.Std_k98ojb.Math.Add {}\n            instance(x: 0, y: 0) sub_4f8f5a root.Std_k98ojb.Math.Sub {}\n            instance(x: 0, y: 0) notequal_807ffd_1 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> add_5b7d5a.second\n            sub_4f8f5a.second -> add_5b7d5a.first\n            elem_9f6850 -> sub_4f8f5a.first\n            prev -> sub_4f8f5a.second\n            add_5b7d5a.result -> ifexpression_e38995.gen_1\n            ifexpression_e38995.gen_0 -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            ifexpression_e38995.result -> notequal_807ffd_1.left\n            true -> notequal_807ffd_1.right\n            notequal_807ffd.result -> ifexpression_e38995.gen_0\n            notequal_807ffd_1.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9c8b5c -> find_6d05b0.items\n        find_6d05b0.item -> number_1c8c4c\n        find_6d05b0.index -> index_9b7d5a\n        find_6d05b0.prev -> prev_9b7d5a\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -144, y: 6, name: \"input\") property(String) input_8e3f8d\n\n        out(x: 512, y: -5, name: \"output\") property(String) output_7e3e2d\n\n        instance(x: 220, y: 5) replace_1d8e3d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 220, y: -62) replace_6b6d9d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 220, y: -127) replace_3d0f5e root.Std_k98ojb.Strings.Replace {}\n        input_8e3f8d -> replace_1d8e3d.input\n        \" \" -> replace_1d8e3d.search\n        \":\" -> replace_1d8e3d.replace\n        replace_1d8e3d.output -> replace_6b6d9d.input\n        \",\" -> replace_6b6d9d.search\n        \":\" -> replace_6b6d9d.replace\n        replace_6b6d9d.output -> replace_3d0f5e.input\n        \".\" -> replace_3d0f5e.search\n        \":\" -> replace_3d0f5e.replace\n        replace_3d0f5e.output -> output_7e3e2d\n    }\n\n    \n\n    instance(x: -65, y: 23) replace_5a7f2c root.main.replace {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -155, y: 22, name: \"input\") property(String) input_0\n        out(x: 535, y: 1, name: \"output\") property(String) output_0\n\n        instance(x: 110, y: 3) replace_4d9f7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 109, y: -54) replace_9e5b8e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 108, y: -109) replace_3b8d1c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4d9f7f.input\n        \" \" -> replace_4d9f7f.search\n        \":\" -> replace_4d9f7f.replace\n        replace_4d9f7f.output -> replace_9e5b8e.input\n        \",\" -> replace_9e5b8e.search\n        \":\" -> replace_9e5b8e.replace\n        replace_9e5b8e.output -> replace_3b8d1c.input\n        \".\" -> replace_3b8d1c.search\n        \":\" -> replace_3b8d1c.replace\n        replace_3b8d1c.output -> output_0\n    }\n\n    \n\n    instance(x: -125, y: 53) replace_chars_9a8f7f root.main.replace_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -128, y: -10, name: \"input\") property(String) input_4c1e9d\n\n        out(x: 555, y: -5, name: \"output\") property(String) output_7f8d9d\n\n        instance(x: 210, y: -19) replace_2b7e7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 420, y: -10) replace_7d1f1e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 639, y: -1) replace_8c3d5f root.Std_k98ojb.Strings.Replace {}\n        input_4c1e9d -> replace_2b7e7f.input\n        \" \" -> replace_2b7e7f.search\n        \":\" -> replace_2b7e7f.replace\n        replace_2b7e7f.output -> replace_7d1f1e.input\n        \",\" -> replace_7d1f1e.search\n        \":\" -> replace_7d1f1e.replace\n        replace_7d1f1e.output -> replace_8c3d5f.input\n        \".\" -> replace_8c3d5f.search\n        \":\" -> replace_8c3d5f.replace\n        replace_8c3d5f.output -> output_7f8d9d\n    }\n\n    \n\n    instance(x: -99, y: 21) replace_spaces_commas_dots_2e7c3e root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -123, y: -8, name: \"input\") property(String) input_8a3c0d\n\n        out(x: 528, y: -20, name: \"output\") property(String) output_6f7e2d\n\n        instance(x: 221, y: -24) replace_4c6f5d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_5c6e4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_3f5f7d root.Std_k98ojb.Strings.Replace {}\n        input_8a3c0d -> replace_4c6f5d.input\n        \" \" -> replace_4c6f5d.search\n        \":\" -> replace_4c6f5d.replace\n        replace_4c6f5d.output -> replace_5c6e4c.input\n        \",\" -> replace_5c6e4c.search\n        \":\" -> replace_5c6e4c.replace\n        replace_5c6e4c.output -> replace_3f5f7d.input\n        \".\" -> replace_3f5f7d.search\n        \":\" -> replace_3f5f7d.replace\n        replace_3f5f7d.output -> output_6f7e2d\n    }\n\n    \n\n    instance(x: -1, y: 24) replace_spaces_commas_dots_9c6d5f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -150, y: 18, name: \"input\") property(String) input_7a5a5a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_9e8f7a\n\n        instance(x: 0, y: 1) replace_7f2c0e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_1f9c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_8f1e7a root.Std_k98ojb.Strings.Replace {}\n        input_7a5a5a -> replace_7f2c0e.input\n        \" \" -> replace_7f2c0e.search\n        \":\" -> replace_7f2c0e.replace\n        replace_7f2c0e.output -> replace_1f9c8f.input\n        \",\" -> replace_1f9c8f.search\n        \":\" -> replace_1f9c8f.replace\n        replace_1f9c8f.output -> replace_8f1e7a.input\n        \".\" -> replace_8f1e7a.search\n        \":\" -> replace_8f1e7a.replace\n        replace_8f1e7a.output -> output_9e8f7a\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_4a6e3f root.main.replace {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -530, y: 0, name: \"input\") property(String) input_2b2a7a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_7e8e1d\n\n        instance(x: 772, y: 76) replace_5e7b3e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: -72) replace_7c8f9d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: -148) replace_9e6d4e root.Std_k98ojb.Strings.Replace {}\n        input_2b2a7a -> replace_5e7b3e.input\n        \" \" -> replace_5e7b3e.search\n        \":\" -> replace_5e7b3e.replace\n        replace_5e7b3e.output -> replace_7c8f9d.input\n        \",\" -> replace_7c8f9d.search\n        \":\" -> replace_7c8f9d.replace\n        replace_7c8f9d.output -> replace_9e6d4e.input\n        \".\" -> replace_9e6d4e.search\n        \":\" -> replace_9e6d4e.replace\n        replace_9e6d4e.output -> output_7e8e1d\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_chars_5f4d5d root.main.replace_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_1f1b4a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: 76) replace_7d7e2a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: 76) replace_9c7d3f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_1f1b4a.input\n        \" \" -> replace_1f1b4a.search\n        \":\" -> replace_1f1b4a.replace\n        replace_1f1b4a.output -> replace_7d7e2a.input\n        \",\" -> replace_7d7e2a.search\n        \":\" -> replace_7d7e2a.replace\n        replace_7d7e2a.output -> replace_9c7d3f.input\n        \".\" -> replace_9c7d3f.search\n        \":\" -> replace_9c7d3f.replace\n        replace_9c7d3f.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_3d6f5e root.main.replace {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -132, y: 4, name: \"input\") property(String) input_1c1c2f\n\n        out(x: 533, y: 7, name: \"output\") property(String) output_1c1c2f\n\n        instance(x: 0, y: 0, name: \"replace\") replace_3e1c1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0, name: \"replace\") replace_9e1c1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0, name: \"replace\") replace_bf1c1f root.Std_k98ojb.Strings.Replace {}\n        input_1c1c2f -> replace_3e1c1f.input\n        \" \" -> replace_3e1c1f.search\n        \":\" -> replace_3e1c1f.replace\n        replace_3e1c1f.output -> replace_9e1c1f.input\n        \",\" -> replace_9e1c1f.search\n        \":\" -> replace_9e1c1f.replace\n        replace_9e1c1f.output -> replace_bf1c1f.input\n        \".\" -> replace_bf1c1f.search\n        \":\" -> replace_bf1c1f.replace\n        replace_bf1c1f.output -> output_1c1c2f\n    }\n\n    \n\n    instance(x: -74, y: 36) replace_spaces_commas_dots_5e2b9e root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -119, y: -20, name: \"input\") property(String) input_9d5e7f\n\n        out(x: 472, y: -30, name: \"output\") property(String) output_7e7c92\n\n        instance(x: 220, y: -47) replace_9e8d0c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 217, y: 14) replace_5b9c7e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 214, y: 87) replace_8f2d0f root.Std_k98ojb.Strings.Replace {}\n        input_9d5e7f -> replace_9e8d0c.input\n        \" \" -> replace_9e8d0c.search\n        \":\" -> replace_9e8d0c.replace\n        replace_9e8d0c.output -> replace_5b9c7e.input\n        \",\" -> replace_5b9c7e.search\n        \":\" -> replace_5b9c7e.replace\n        replace_5b9c7e.output -> replace_8f2d0f.input\n        \".\" -> replace_8f2d0f.search\n        \":\" -> replace_8f2d0f.replace\n        replace_8f2d0f.output -> output_7e7c92\n    }\n\n    \n\n    instance(x: -90, y: -13) replace_2a5c73 root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -128, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_0d5b1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5e6c7e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_7d8c2e root.Std_k98ojb.Strings.Replace {}\n        replace_0d5b1f.input -> replace_5e6c7e.input\n        replace_5e6c7e.input -> replace_7d8c2e.input\n        input_0 -> replace_0d5b1f.input\n        \" \" -> replace_0d5b1f.search\n        \":\" -> replace_0d5b1f.replace\n        \",\" -> replace_5e6c7e.search\n        \":\" -> replace_5e6c7e.replace\n        \".\" -> replace_7d8c2e.search\n        \":\" -> replace_7d8c2e.replace\n        replace_7d8c2e.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceAll_8b7c6f root.main.replace {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_same {\n        in(x: -284, y: -81, name: \"string\") property(String) string_6f8e3f\n\n        out(x: 558, y: -93, name: \"output\") property(Bool) output_7b2b0d\n\n        instance(x: -91, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 145, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 359, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -276, y: -36) characters_9f6d8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 2, y: -121, name: \"set\") set_9e3b9e root.Std_k98ojb.List.Flatten {}\n        instance(x: 337, y: 160, name: \"getter_b280eb\") getter_b280eb set_9e3b9e\n        < James",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") same_character {\n        in(x: -316, y: -67, name: \"string\") property(String) string_0d9c2d\n\n        out(x: 1128, y: -67, name: \"output\") property(Bool) output_3b4e5d\n\n        instance(x: -137, y: -68) characters_8c4b9e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 364, y: -68) firstitem_1e1e3a root.Std_k98ojb.List.FirstItem {}\n        instance(x: 679, y: -68) equal_2e7c1f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1001, y: -67) filter_3d8c71 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1375, y: -67) not_8b7c3a root.Std_k98ojb.Logic.Not {}\n        characters_8c4b9e.characters -> filter_3d8c71.items\n        func() {\n            in(x: -36, y: -12, name: \"current\") property(String) current_3f5d6f\n\n            out(x: 733, y: 14, name: \"output\") property(Bool) output_9b6c3f\n\n            instance(x: 218, y: 11) equal_4b6c3c root.Std_k98ojb.Logic.Equal {}\n            firstitem_1e1e3a.item -> equal_4b6c3c.left\n            current_3f5d6f -> equal_4b6c3c.right\n            equal_4b6c3c.result -> output_9b6c3f\n        } -> filter_3d8c71.handler\n        filter_3d8c71.output_list -> not_8b7c3a.input\n        not_8b7c3a.result -> output_3b4e5d\n        string_0d9c2d -> characters_8c4b9e.input\n    }\n\n    \n\n    instance(x: -26, y: 82) same_character_1a1e4b root.main.same_character {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_characters {\n        in(x: -278, y: -74, name: \"input\") property(String) input_8c3c3d\n\n        out(x: 1080, y: -72, name: \"output\") property(Bool) output_6b4c2f\n\n        instance(x: -127, y: -74) characters_6f4c4d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 374, y: -73) map_7c5a7c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 692, y: -72) all_9b1a8c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1004, y: -72) equal_8c8c9d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1321, y: -72) firstitem_7c9c7c root.Std_k98ojb.List.FirstItem {}\n        characters_6f4c4d.characters -> map_7c5a7c.items\n        func() {\n            in(x: 24, y: 37, name: \"element\") property(String) element_1b6a6f\n\n            out(x: 645, y: 42, name: \"output\") property(String) output_2c6c6d\n\n            instance(x: 248, y: 39) tolowercase_1c6c6c root.Std_k98ojb.Strings.ToLower {}\n            element_1b6a6f -> tolowercase_1c6c6c.input\n            tolowercase_1c6c6c.output -> output_2c6c6d\n        } -> map_7c5a7c.handler\n        map_7c5a7c.output_list -> all_9b1a8c.items\n        func() {\n            in(x: 32, y: 62, name: \"current\") property(String) current_5c6c6d\n\n            out(x: 785, y: 64, name: \"output\") property(Bool) output_6c6c6d\n\n            instance(x: 248, y: 66) equal_7c6c6c root.Std_k98ojb.Logic.Equal {}\n            current_5c6c6d -> equal_7c6c6c.left\n            firstitem_7c9c7c.item -> equal_7c6c6c.right\n            equal_7c6c6c.result -> output_6c6c6d\n        } -> all_9b1a8c.handler\n        all_9b1a8c.output_list -> equal_8c8c9d.left\n        1 -> equal_8c8c9d.right\n        equal_8c8c9d.result -> output_6b4c2f\n        map_7c5a7c.output_list -> firstitem_7c9c7c.list\n    }\n\n    \n\n    instance(x: -57, y: 11) check_characters_3c6c6d root.main.check_characters {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") check_same_char {\n        in(x: -297, y: -86, name: \"execute\") trigger() execute_9c1e0d\n        in(x: -292, y: 52, name: \"string\") property(String) string_4c3a1e\n\n        out(x: 1176, y: 47, name: \"continue\") trigger() continue_4c6f5d\n        out(x: 1170, y: -10, name: \"output\") property(Bool) output_6e1c6d\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_4c6f5d\n        ifexpression_875761.value -> output_6e1c6d\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        string_4c3a1e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_4c6f5d\n        for_d26972.item -> setter_9d4f1c.new_value\n        string_4c3a1e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_9c1e0d -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) check_same_char_7c5c2c root.main.check_same_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_characters_same {\n        in(x: -282, y: -79, name: \"input\") property(String) input_4f7b5d\n\n        out(x: 555, y: -95, name: \"output\") property(Bool) output_7c3b1e\n\n        instance(x: -111, y: -80) firstitem_7f2c0e root.Std_k98ojb.List.FirstItem {}\n        instance(x: 140, y: -94) contains_8f8c3f root.Std_k98ojb.List.Contains {}\n        instance(x: 353, y: -93) length_8e6b7c root.Std_k98ojb.List.Length {}\n        instance(x: 475, y: -93) equal_1b5d4c root.Std_k98ojb.Logic.Equal {}\n        input_4f7b5d -> firstitem_7f2c0e.list\n        firstitem_7f2c0e.item -> contains_8f8c3f.item\n        input_4f7b5d -> contains_8f8c3f.list\n        input_4f7b5d -> length_8e6b7c.list\n        length_8e6b7c.length -> equal_1b5d4c.left\n        1 -> equal_1b5d4c.right\n        contains_8f8c3f.is_contained -> equal_1b5d4c.right\n        equal_1b5d4c.result -> output_7c3b1e\n    }\n\n    \n\n    instance(x: -74, y: 60) all_characters_same_5d6c73 root.main.all_characters_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_all_same {\n        in(x: -286, y: -92, name: \"string\") property(String) string_8c6c2d\n\n        out(x: 538, y: -99, name: \"output\") property(Bool) output_5c7e85\n\n        instance(x: -94, y: -99) intersection_3d4f1e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 147, y: -98) length_7e5b0c root.Std_k98ojb.List.Length {}\n        instance(x: 362, y: -97) equal_1d8d92 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -284, y: -5) characters_9c4f8c root.Std_k98ojb.Strings.Characters {}\n        string_8c6c2d -> characters_9c4f8c.input\n        characters_9c4f8c.characters -> intersection_3d4f1e.left\n        characters_9c4f8c.characters -> intersection_3d4f1e.right\n        length_7e5b0c.length -> equal_1d8d92.left\n        1 -> equal_1d8d92.right\n        length_7e5b0c.list -> intersection_3d4f1e.left\n        intersection_3d4f1e.intersection -> length_7e5b0c.list\n        equal_1d8d92.result -> output_5c7e85\n    }\n\n    \n\n    instance(x: -82, y: 57) check_all_same_5d0f6d root.main.check_all_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") same_char {\n        in(x: -292, y: -26, name: \"input\") property(String) input_1c9c3c\n\n        out(x: 550, y: 63, name: \"output\") property(Bool) output_9c9b7d\n\n        instance(x: -92, y: -24) characters_5b0b9a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 142, y: 62) intersection_5d9e5d root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 366, y: 63) length_3b8f71 root.Std_k98ojb.List.Length {}\n        instance(x: 536, y: 63) equal_9f5d7f root.Std_k98ojb.Logic.Equal {}\n        characters_5b0b9a.characters -> intersection_5d9e5d.left\n        characters_5b0b9a.characters -> intersection_5d9e5d.right\n        intersection_5d9e5d.intersection -> length_3b8f71.list\n        1 -> equal_9f5d9f.right\n        length_3b8f71.length -> equal_9f5d9f.left\n        equal_9f5d9f.result -> output_9c9b7d\n    }\n\n    \n\n    instance(x: -83, y: 59) same_char_8b8b5f root.main.same_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -278, y: -93, name: \"input\") property(String) input_3b2c9d\n\n        out(x: 1037, y: -87, name: \"output\") property(Bool) output_6d3b93\n\n        instance(x: -115, y: -93) length_0e7d2f root.Std_k98ojb.Strings.Length {}\n        instance(x: 298, y: -89) contains_1c7d2d root.Std_k98ojb.Strings.Contains {}\n        instance(x: 592, y: -90) equal_1c1b9f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 876, y: -91) not_9e3d8c root.Std_k98ojb.Logic.Not {}\n        input_3b2c9d -> length_0e7d2f.input\n        input_3b2c9d -> contains_1c7d2d.input\n        length_0e7d2f.length -> contains_1c7d2d.contains\n        input_3b2c9d -> contains_1c7d2d.contains\n        contains_1c7d2d.result -> equal_1c1b9f.left\n        1 -> equal_1c1b9f.right\n        equal_1c1b9f.result -> not_9e3d8c.input\n        not_9e3d8c.result -> output_6d3b93\n    }\n\n    \n\n    instance(x: 8, y: 55) check_same_8c8b7f root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_same {\n        in(x: -288, y: -87, name: \"input\") property(String) input_2e2b6e\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -275, y: -35) characters_4f9f5e root.Std_k98ojb.Strings.Characters {}\n        instance(x: -278, y: 23) list_9b6b8e root.Std_k98ojb.List.FirstItem {}\n        instance(x: -277, y: 99) list_9b6b8e_1 root.Std_k98ojb.List.FirstItem {}\n        input_2e2b6e -> characters_4f9f5e.input\n        characters_4f9f5e.characters -> list_9b6b8e.list\n        characters_4f9f5e.characters -> intersection_c7c7e6.left\n        list_9b6b8e.item -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_9b6b8e_1.list -> characters_4f9f5e.input\n        list_9b6b8e_1.item -> equal_f89569.left\n        1 -> equal_f89569.right\n        length_8166b0.length -> equal_f89569.left\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) all_same_9c4a0f root.main.all_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -275, y: -35, name: \"execute\") trigger() execute_3e6d0d\n        in(x: -273, y: 42, name: \"input\") property(String) input_4d5c2f\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_9c3d1e\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5b8b9f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_9c3d1e\n        ifexpression_875761.value -> output_5b8b9f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        input_4d5c2f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_9c3d1e\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_4d5c2f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_3e6d0d -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) check_same_7f9c6d root.main.check_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) string_to_list root.Std_k98ojb.Strings.Characters {}\n        string_ai -> string_to_list.input\n        instance(x: 0, y: 0) filter_node root.Std_k98ojb.Query.Filter {\n            where: \"it.isNumeric\"\n        }\n        string_to_list.characters -> filter_node.list\n        instance(x: 0, y: 0) list_length root.Std_k98ojb.List.Length {}\n        filter_node.result -> list_length.list\n        list_length.length -> count_ai\n    }\n\n    \n    instance(x: -31, y: -37, name: \"count_digits\") count_digits_9c7f4a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) string_to_chars root.Std_k98ojb.Strings.Characters {}\n        string_ai -> string_to_chars.input\n        instance(x: 0, y: 0) count_1 root.Std_k98ojb.Std.Count {\n            iterations: 0\n        }\n        instance(x: 0, y: 0) if_expression root.Std_k98ojb.Std.IfExpression {\n            expression: \"it.isNumeric()\"\n        }\n        string_to_chars.characters -> count_1.reset\n        string_to_chars.characters -> count_1.count\n        string_to_chars.characters -> if_expression.gen_0\n        if_expression.value -> count_1.iteration\n        if_expression.value -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.onCount -> count_1.onCount\n        count_1.done -> count_1.done\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_1.iteration\n        count_1.iteration -> count_",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 0) string_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> string_length_node.input\n        instance(x: 0, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n        std_count_node.iterations -> string_length_node.length\n        std_count_node.onCount -> std_count_node.count\n        std_count_node.done -> std_count_node.reset\n        std_count_node.iteration -> output_ai\n    }\n    \n\n    instance(x: -43, y: -40, name: \"count_digits\") count_digits_2e5a0a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) string_chars_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> string_chars_node.input\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) std_if_expression_node root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 0, y: 0) string_is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        string_chars_node.characters -> count_node.items\n        count_node.onCount -> std_if_node.input\n        std_if_node.then -> count_node.count\n        std_if_node.else -> std_if_node.execute\n        std_if_expression_node.expression -> string_is_numeric_node.input\n        string_chars_node.characters -> std_if_expression_node.gen_0\n        std_if_expression_node.value -> std_if_node.gen_0\n        count_node.iteration -> std_if_expression_node.gen_1\n        count_node.iteration -> string_is_numeric_node.input\n        count_node.iteration -> std_if_node.gen_1\n        count_node.iterations -> count_node.reset\n        0 -> count_node.iterations\n        count_node.interation -> std_if_expression_node.gen_2\n        count_node.interation -> std_if_node.gen_2\n        count_node.done -> std_if_node.execute\n        count_node.interation -> result_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"counts number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) count_node_1 root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) filter_node root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: 0) map_node root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) math_add_node root.Std_k98ojb.Math.Add {}\n\n        input_ai -> characters_node.input\n        characters_node.characters -> map_node.items\n        map_node.output_list -> filter_node.items\n        filter_node.output_list -> count_node_1.items\n        count_node_1.onCount -> count_node.execute\n        count_node_1.iteration -> math_add_node.first\n        1 -> math_add_node.second\n        math_add_node.result -> count_node.new_value\n        count_node.continue -> count_node_1.count\n        filter_node.handler -> is_numeric_node\n        is_numeric_node.isNumeric -> filter_node.predicate\n        count_node_1.done -> count_node_1.reset\n        count_node.done -> count_node.reset\n        count_node.result -> result_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) string_characters_node root.Std_k98ojb.Strings.Characters {}\n        string_ai -> string_characters_node.input\n        instance(x: 0, y: 0) std_for_node root.Std_k98ojb.Std.For {}\n        string_characters_node.characters -> std_for_node.items\n        instance(x: 0, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n        std_for_node.item -> std_if_node.input\n        std_if_node.then -> std_for_node.next\n        std_if_node.else -> std_for_node.next\n        instance(x: 0, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n        std_if_node.input -> std_if_node.gen_0\n        std_count_node.iterations -> count_ai\n        std_count_node.reset -> std_for_node.reset\n        std_count_node.count -> std_if_node.then\n        std_for_node.done -> std_count_node.done\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) string_characters_node root.Std_k98ojb.Strings.Characters {}\n        string_ai -> string_characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        string_characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {\n            iterations: \"Std_k98ojb.List.Length(filter_7b3b7b.result)\"\n        }\n        filter_7b3b7b.result -> count_node.items\n        count_node.onCount -> count_ai\n    }\n\n    \n    instance(x: -51, y: -30, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 0) string_chars_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> string_chars_node.input\n        instance(x: 0, y: 0) filter_2a9e7f root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        string_chars_node.characters -> filter_2a9e7f.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_2a9e7f.result -> list_length_node.list\n        list_length_node.length -> output_ai\n    }\n    \n\n    instance(x: -44, y: -48, name: \"count_digits\") count_digits_7f6a6f root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) count_digits_0 root.main.count_digits_0 {}\n        instance(x: 0, y: 0) count_digits_1 root.main.count_digits_1 {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits_2 {}\n        instance(x: 0, y: 0) count_digits_3 root.main.count_digits_3 {}\n        instance(x: 0, y: 0) count_digits_4 root.main.count_digits_4 {}\n        instance(x: 0, y: 0) count_digits_5 root.main.count_digits_5 {}\n        instance(x: 0, y: 0) count_digits_6 root.main.count_digits_6 {}\n        instance(x: 0, y: 0) count_digits_7 root.main.count_digits_7 {}\n        instance(x: 0, y: 0) count_digits_8 root.main.count_digits_8 {}\n        instance(x: 0, y: 0) count_digits_9 root.main.count_digits_9 {}\n        instance(x: 0, y: 0) count_digits_10 root.main.count_digits_10 {}\n        instance(x: 0, y: 0) count_digits_11 root.main.count_digits_11 {}\n        instance(x: 0, y: 0) count_digits_12 root.main.count_digits_12 {}\n        instance(x: 0, y: 0) count_digits_13 root.main.count_digits_13 {}\n        instance(x: 0, y: 0) count_digits_14 root.main.count_digits_14 {}\n        instance(x: 0, y: 0) count_digits_15 root.main.count_digits_15 {}\n        instance(x: 0, y: 0) count_digits_16 root.main.count_digits_16 {}\n        instance(x: 0, y: 0) count_digits_17 root.main.count_digits_17 {}\n        instance(x: 0, y: 0) count_digits_18 root.main.count_digits_18 {}\n        instance(x: 0, y: 0) count_digits_19 root.main.count_digits_19 {}\n        instance(x: 0, y: 0) count_digits_20 root.main.count_digits_20 {}\n        instance(x: 0, y: 0) count_digits_21 root.main.count_digits_21 {}\n        instance(x: 0, y: 0) count_digits_22 root.main.count_digits_22 {}\n        instance(x: 0, y: 0) count_digits_23 root.main.count_digits_23 {}\n        instance(x: 0, y: 0) count_digits_24 root.main.count_digits_24 {}\n        instance(x: 0, y: 0) count_digits_25 root.main.count_digits_25 {}\n        instance(x: 0, y: 0) count_digits_26 root.main.count_digits_26 {}\n        instance(x: 0, y: 0) count_digits_27 root.main.count_digits_27 {}\n        instance(x: 0, y: 0) count_digits_28 root.main.count_digits_28 {}\n        instance(x: 0, y: 0) count_digits_29 root.main.count_digits_29 {}\n        instance(x: 0, y: 0) count_digits_30 root.main.count_digits_30 {}\n        instance(x: 0, y: 0) count_digits_31 root.main.count_digits_31 {}\n        instance(x: 0, y: 0) count_digits_32 root.main.count_digits_32 {}\n        instance(x: 0, y: 0) count_digits_33 root.main.count_digits_33 {}\n        instance(x: 0, y: 0) count_digits_34 root.main.count_digits_34 {}\n        instance(x: 0, y: 0) count_digits_35 root.main.count_digits_35 {}\n        instance(x: 0, y: 0) count_digits_36 root.main.count_digits_36 {}\n        instance(x: 0, y: 0) count_digits_37 root.main.count_digits_37 {}\n        instance(x: 0, y: 0) count_digits_38 root.main.count_digits_38 {}\n        instance(x: 0, y: 0) count_digits_39 root.main.count_digits_39 {}\n        instance(x: 0, y: 0) count_digits_40 root.main.count_digits_40 {}\n        instance(x: 0, y: 0) count_digits_41 root.main.count_digits_41 {}\n        instance(x: 0, y: 0) count_digits_42 root.main.count_digits_42 {}\n        instance(x: 0, y: 0) count_digits_43 root.main.count_digits_43 {}\n        instance(x: 0, y: 0) count_digits_44 root.main.count_digits_44 {}\n        instance(x: 0, y: 0) count_digits_45 root.main.count_digits_45 {}\n        instance(x: 0, y: 0) count_digits_46 root.main.count_digits_46 {}\n        instance(x: 0, y: 0) count_digits_47 root.main.count_digits_47 {}\n        instance(x: 0, y: 0) count_digits_48 root.main.count_digits_48 {}\n        instance(x: 0, y: 0) count_digits_49 root.main.count_digits_49 {}\n        instance(x: 0, y: 0) count_digits_50 root.main.count_digits_50 {}\n        instance(x: 0, y: 0) count_digits_51 root.main.count_digits_51 {}\n        instance(x: 0, y: 0) count_digits_52 root.main.count_digits_52 {}\n        instance(x: 0, y: 0) count_digits_53 root.main.count_digits_53 {}\n        instance(x: 0, y: 0) count_digits_54 root.main.count_digits_54 {}\n        instance(x: 0, y: 0) count_digits_55 root.main.count_digits_55 {}\n        instance(x: 0, y: 0) count_digits_56 root.main.count_digits_56 {}\n        instance(x: 0, y: 0) count_digits_57 root.main.count_digits_57 {}\n        instance(x: 0, y: 0) count_digits_58 root.main.count_digits_58 {}\n        instance(x: 0, y: 0) count_digits_59 root.main.count_digits_59 {}\n        instance(x: 0, y: 0) count_digits_60 root.main.count_digits_60 {}\n        instance(x: 0, y: 0) count_digits_61 root.main.count_digits_61 {}\n        instance(x: 0, y: 0) count_digits_62 root.main.count_digits_62 {}\n        instance(x: 0, y: 0) count_digits_63 root.main.count_digits_63 {}\n        instance(x: 0, y: 0) count_digits_64 root.main.count_digits_64 {}\n        instance(x: 0, y: 0) count_digits_65 root.main.count_digits_65 {}\n        instance(x: 0, y: 0) count_digits_66 root.main.count_digits_66 {}\n        instance(x: 0, y: 0) count_digits_67 root.main.count_digits_67 {}\n        instance(x: 0, y: 0) count_digits_68 root.main.count_digits_68 {}\n        instance(x: 0, y: 0) count_digits_69 root.main.count_digits_69 {}\n        instance(x: 0, y: 0) count_digits_70 root.main.count_digits_70 {}\n        instance(x: 0, y: 0) count_digits_71 root.main.count_digits_71 {}\n        instance(x: 0, y: 0) count_digits_72 root.main.count_digits_72 {}\n        instance(x: 0, y: 0) count_digits_73 root.main.count_digits_73 {}\n        instance(x: 0, y: 0) count_digits_74 root.main.count_digits_74 {}\n        instance(x: 0, y: 0) count_digits_75 root.main.count_digits_75 {}\n        instance(x: 0, y: 0) count_digits_76 root.main.count_digits_76 {}\n        instance(x: 0, y: 0) count_digits_77 root.main.count_digits_77 {}\n        instance(x: 0, y: 0) count_digits_78 root.main.count_digits_78 {}\n        instance(x: 0, y: 0) count_digits_79 root.main.count_digits_79 {}\n        instance(x: 0, y: 0) count_digits_80 root.main.count_digits_80 {}\n        instance(x: 0, y: 0) count_digits_81 root.main.count_digits_81 {}\n        instance(x: 0, y: 0) count_digits_82 root.main.count_digits_82 {}\n        instance(x: 0, y",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"value\") property(String) value_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) string_to_list_node root.Std_k98ojb.Strings.Characters {}\n        value_ai -> string_to_list_node.input\n        instance(x: 0, y: 0) count_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: {\n                in property(String) it\n                out property(Bool) output\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                it -> is_numeric_node.input\n                is_numeric_node.isNumeric -> output\n            }\n        }\n        string_to_list_node.characters -> count_digits_node.items\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_node.output_list -> list_length_node.list\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n    \n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -279, y: 57, name: \"n\") property(Number) n_8c8d6f\n\n        out(x: 583, y: 11, name: \"sum\") property(Number) sum_5d1e9d\n\n        instance(x: 17, y: -1) mul_2e7c5c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 322, y: 131) data_7c9f5c  = 3\n        instance(x: 13, y: 136) expression_6c3f4d root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 292, y: 2) mul_3d5a5f root.Std_k98ojb.Math.Mul {}\n        instance(x: 296, y: -2) mul_1b9c4d root.Std_k98ojb.Math.Mul {}\n        instance(x: 297, y: -10) mul_5d3a6f root.Std_k98ojb.Math.Mul {}\n        instance(x: 300, y: -18) div_4c5d4a root.Std_k98ojb.Math.Div {}\n        data_7c9f5c -> div_4c5d4a.second\n        mul_2e7c5c.result -> div_4c5d4a.first\n        mul_5d3a6f.result -> mul_1b9c4d.first\n        mul_3d5a5f.result -> mul_5d3a6f.second\n        expression_6c3f4d.result -> mul_3d5a5f.first\n        expression_6c3f4d.result -> mul_2e7c5c.second\n        n_8c8d6f -> mul_2e7c5c.first\n        n_8c8d6f -> expression_6c3f4d.gen_0\n        mul_1b9c4d.result -> mul_5d3a6f.first\n        div_4c5d4a.result -> sum_5d1e9d\n    }\n\n    \n\n    instance(x: 114, y: -24) fourth_power_sum_4a8f1e root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth {\n        in(x: -285, y: -287, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_1e1b6c root.Std_k98ojb.Math.Pow {}\n        instance(x: 0, y: 0) sum_5e4f3e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -113, y: 34, name: \"accum\") property(Number) accum_9f6850\n\n            in(x: -113, y: 34, name: \"current\") property(Number) current_9f6850\n\n            out(x: 515, y: 44, name: \"result\") property(Number) result_af09a7\n\n            instance(x: 310, y: 35) add_1f8f3f root.Std_k98ojb.Math.Add {}\n            add_1f8f3f.first -> result_af09a7\n            accum_9f6850 -> add_1f8f3f.first\n            pow_1e1b6c.result -> add_1f8f3f.second\n        } -> sum_5e4f3e.handler\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_1e1b6c.x\n        4 -> pow_1e1b6c.y\n        0 -> sum_5e4f3e.initial\n        List.GenerateRange.from_4d6d4f -> sum_5e5e7f.items\n        List.GenerateRange.to_4d6d4f -> sum_5e5e7f.items\n        n_3a3116 -> List.GenerateRange.from_4d6d4f\n        n_3a3116 -> List.GenerateRange.to_4d6d4f\n        sum_5e5e7f.output -> sum_5e4f3e.items\n        sum_5e4f3e.result -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_f15bad root.main.sum_fourth {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power {\n        in(x: -281, y: 49, name: \"n\") property(Number) n_3d5c4d\n\n        out(x: 585, y: 0, name: \"sum\") property(Number) sum_4a2f2f\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        instance(x: 13, y: 0) mul_3b2e7c root.Std_k98ojb.Math.Mul {}\n        instance(x: 15, y: 135) mul_2f9d4a root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3d5c4d -> mul_f892a4.first\n        n_3d5c4d -> expression_2d6da6.gen_0\n        div_64046c.result -> mul_3b2e7c.first\n        div_64046c.result -> mul_2f9d4a.first\n        mul_3b2e7c.result -> mul_2f9d4a.second\n        mul_2f9d4a.result -> sum_4a2f2f\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_4e4c3d root.main.fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -285, y: -285, name: \"n\") property(Number) n_5d8c61\n\n        out(x: 723, y: -299, name: \"sum\") property(Number) sum_4f6b1c\n\n        instance(x: 16, y: -329) pow_1d2b9f root.Std_k98ojb.Math.Pow {}\n        instance(x: 12, y: 140) expression_3e9a9f root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 296, y: 2) add_1b2e9d root.Std_k98ojb.Math.Add {}\n        instance(x: 12, y: -26) mul_3f1c80 root.Std_k98ojb.Math.Mul {}\n        instance(x: 326, y: -10) count_9b6b3c root.Std_k98ojb.Std.Count {}\n        instance(x: 303, y: -5) for_5f3f9c root.Std_k98ojb.Std.For {}\n        instance(x: 328, y: -1) sum_4f6b1c_1b2e9d root.Std_k98ojb.Std.IfExpression {\n            expression: \"sum_4f6b1c == null\"\n        }\n        data_instance(x: 330, y: 133) data_2a1b5d  = 3\n        data_instance(x: 397, y: -1) data_3b7f7d  = 0\n        n_5d8c61 -> count_9b6b3c.gen_0\n        count_9b6b3c.count -> for_5f3f9c.items\n        for_5f3f9c.index -> expression_3e9a9f.gen_0\n        expression_3e9a9f.result -> pow_1d2b9f.first\n        4 -> pow_1d2b9f.second\n        pow_1d2b9f.result -> add_1b2e9d.second\n        sum_4f6b1c -> sum_4f6b1c_1b2f9d.gen_0\n        sum_4f6b1c_1b2f9d.then -> mul_3f1c80.first\n        sum_4f6b1c_1b2f9d.else -> mul_3f1c80.second\n        data_3b7f7d -> sum_4f6b1c_1b2f9d.then\n        data_2a1b5d -> mul_3f1c80.second\n        mul_3f1c80.result -> add_1b2e9d.first\n        add_1b2e9d.result -> sum_4f6b1c\n        for_5f3f9c.next -> for_5f3f9c.next\n        for_5f3f9c.reset -> count_9b6b3c.reset\n        count_9b6b3c.count -> for_5f3f9c.trigger\n    }\n\n    \n\n    instance(x: -78, y: 159) fourth_power_sum_1b2e9d root.main.fourth_power_sum {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -218, y: 53, name: \"n\") property(Number) n_2f5f9c\n\n        out(x: 570, y: 7, name: \"sum\") property(Number) sum_1e7f3f\n\n        instance(x: 12, y: 136) expression_4b2b1d root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) pow_6d7f9c root.Std_k98ojb.Math.Pow {}\n        instance(x: 303, y: 2) add_4f8c99 root.Std_k98ojb.Math.Add {}\n        instance(x: 330, y: 133) data_instance_5f5d2c  data_instance_5f5d2c",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -290, y: -276, name: \"n\") property(Number) n_3a3116\n\n        out(x: 752, y: -5, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 330, y: 133) data_instance_cde0dc  data_instance_cde0dc",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -292, y: 46, name: \"n\") property(Number) n_7c8b9c\n\n        out(x: 750, y: 4, name: \"sum\") property(Number) sum_7d9f7f\n\n        instance(x: 12, y: 148, name: \"fourth power\") expression_5d1e3c root.Std_k98ojb.Math.Expression {\n            expression: \"((2*n)-1) * ((2*n)-1) * ((2*n)-1) * ((2*n)-1)\"\n        }\n        instance(x: 17, y: 7) mul_1a5b7c root.Std_k98ojb.Math.Mul {}\n        instance(x: 305, y: 1) div_6c7c8e root.Std_k98ojb.Math.Div {}\n        instance(x: 26, y: 132) expression_5c3f0c root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_7c8b9c -> expression_5c3f0c.gen_0\n        expression_5c3f0c.result -> mul_1a5b7c.first\n        mul_1a5b7c.result -> div_6c7c8e.first\n        expression_5d1e3c.result -> mul_1a5b7c.second\n        n_7c8b9c -> expression_5d1e3c.gen_0\n        div_6c7c8e.result -> sum_7d9f7f\n        n_7c8b9c -> div_6c7c8e.second\n    }\n\n    \n\n    instance(x: 117, y: -19) fourth_power_sum_8a8d1e root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power {\n        in(x: -289, y: -283, name: \"n\") property(Number) n_9b3e2c\n\n        out(x: 742, y: -6, name: \"sum\") property(Number) sum_3b2c1c\n\n        instance(x: 15, y: -281) pow_6f8c6c root.Std_k98ojb.Math.Pow {}\n        instance(x: 9, y: -4) mul_3c3d8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 15, y: 125) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 394, y: -339) data_3c713b  array_4f5f2b",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: -0, name: \"n\") property(Number) n_2c2e51\n\n        out(x: 756, y: -1, name: \"output\") property(Number) output_7c5f81\n\n        instance(x: 0, y: 0) for_8d9c9c root.Std_k98ojb.Std.For {}\n        instance(x: 62, y: -226, name: \"sum\") data_instance_3c713b  data_instance_3c713b",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -280, y: 45, name: \"n\") property(Number) n_8b5c6f\n\n        out(x: 580, y: -8, name: \"sum\") property(Number) sum_3c4c5d\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) pow_2e5a7d root.Std_k98ojb.Math.Pow {}\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        instance(x: 330, y: 133) data_instance_7c9d1f  nstanceID\n\t\t{ get: { return   \t: 0 } },"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -100, y: 40, name: \"size\") property(Number) size_8d8c8d\n\n        out(x: 110, y: 18, name: \"area\") property(Number) area_5b1d1e\n\n        instance(x: 0, y: 0) mul_3c2d7c root.Std_k98ojb.Math.Mul {}\n        6 -> mul_3c2d7c.first\n        size_8d8c8d -> mul_3c2d7c.second\n        mul_3c2d7c.result -> area_5b1d1e\n    }\n\n    \n\n    instance(x: 119, y: -34) cube_surface_area_6c0f72 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -118, y: -61, name: \"size\") property(Number) size_9c9d9f\n\n        out(x: 109, y: -34, name: \"area\") property(Number) area_3b4e5d\n\n        instance(x: 27, y: -1) mul_8c2b9e root.Std_k98ojb.Math.Mul {}\n        instance(x: 30, y: 14) mul_6d1f93 root.Std_k98ojb.Math.Mul {}\n        instance(x: 16, y: 48) mul_9c1cfc root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 305, y: 124) data_4f6e8c  = 6\n        data_instance(x: 321, y: 42) data_3d4e4f  = 2\n        size_9c9d9f -> mul_8c2b9e.first\n        size_9c9d9f -> mul_6d1f93.first\n        size_9c9d9f -> mul_9c1cfc.first\n        data_4f6e8c -> mul_8c2b9e.second\n        data_3d4e4f -> mul_6d1f93.second\n        mul_6d1f93.result -> mul_9c1cfc.second\n        mul_8c2b9e.result -> mul_9c1cfc.first\n        mul_9c1cfc.result -> area_3b4e5d\n    }\n\n    \n\n    instance(x: 110, y: -10) surface_area_7d6c1c root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -223, y: -41, name: \"size\") property(Number) size_3c3d85\n\n        out(x: 569, y: -7, name: \"area\") property(Number) area_1b6d91\n\n        instance(x: 28, y: -22) mul_1b6f4c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 332, y: 133) data_1d6f3c  = 6\n        instance(x: 10, y: 137) expression_8b6e1d root.Std_k98ojb.Math.Expression {\n            expression: \"size*2\"\n        }\n        data_1d6f3c -> mul_1b6f4c.first\n        expression_8b6e1d.result -> mul_1b6f4c.second\n        size_3c3d85 -> expression_8b6e1d.gen_0\n        mul_1b6f4c.result -> area_1b6d91\n    }\n\n    \n\n    instance(x: 124, y: -23) surface_area_8b7f2e root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -113, y: -83, name: \"size\") property(Number) size_7d5d8c\n\n        out(x: 118, y: -63, name: \"surface area\") property(Number) surface_area_9a2f7e\n\n        instance(x: 21, y: -28) mul_9d5c6f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 333, y: 131) data_5a6e4c  = 6\n        instance(x: 9, y: 139) mul_9e7b0f root.Std_k98ojb.Math.Mul {}\n        data_5a6e4c -> mul_9e7b0f.first\n        size_7d5d8c -> mul_9e7b0f.second\n        mul_9e7b0f.result -> mul_9d5c6f.first\n        size_7d5d8c -> mul_9d5c6f.second\n        mul_9d5c6f.result -> surface_area_9a2f7e\n    }\n\n    \n\n    instance(x: 132, y: 48) cube_surface_area_4a7c79 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -115, y: -31, name: \"size\") property(Number) size_7a5d50\n\n        out(x: 107, y: 12, name: \"area\") property(Number) area_7c3b1e\n\n        instance(x: 10, y: -12) mul_8c7f0e root.Std_k98ojb.Math.Mul {}\n        6 -> mul_8c7f0e.first\n        size_7a5d50 -> mul_8c7f0e.second\n        instance(x: 14, y: -47) mul_9a1d92 root.Std_k98ojb.Math.Mul {}\n        mul_8c7f0e.result -> mul_9a1d92.first\n        size_7a5d50 -> mul_9a1d92.second\n        mul_9a1d92.result -> area_7c3b1e\n    }\n\n    \n\n    instance(x: 129, y: 41) cube_surface_area_7e9b7f root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -103, y: -93, name: \"size\") property(Number) size_6c2d2e\n\n        out(x: 100, y: -10, name: \"surface area\") property(Number) surface_area_3f9c5d\n\n        instance(x: 0, y: -27) mul_1e3c5c root.Std_k98ojb.Math.Mul {}\n        6 -> mul_1e3c5c.first\n        size_6c2d2e -> mul_1e3c5c.second\n        instance(x: 0, y: 25) mul_7c0d7c root.Std_k98ojb.Math.Mul {}\n        mul_1e3c5c.result -> mul_7c0d7c.first\n        size_6c2d2e -> mul_7c0d7c.second\n        mul_7c0d7c.result -> surface_area_3f9c5d\n    }\n\n    \n\n    instance(x: 104, y: 56) cube_surface_area_6c3eac root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -1013, y: -103, name: \"side\") property(Number) side_9b7c8f\n\n        out(x: -18, y: -53, name: \"area\") property(Number) area_9e7d9f\n\n        instance(x: -662, y: -153) mul_1b9f7e root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -441, y: -110) data_9a9c70  = 6\n        instance(x: -312, y: -17) mul_2e5d3c root.Std_k98ojb.Math.Mul {}\n        side_9b7c8f -> mul_1b9f7e.first\n        side_9b7c8f -> mul_2e5d3c.first\n        data_9a9c70 -> mul_1b9f7e.second\n        mul_1b9f7e.result -> mul_2e5d3c.second\n        mul_2e5d3c.result -> area_9e7d9f\n    }\n\n    \n\n    instance(x: 213, y: 56) surface_area_8d5f8c root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -103, y: -42, name: \"side\") property(Number) side_6c9b3e\n\n        out(x: 109, y: -2, name: \"surface area\") property(Number) surface_area_3b2c1c\n\n        instance(x: 15, y: -19) mul_6d1c6c root.Std_k98ojb.Math.Mul {}\n        instance(x: 85, y: 1) mul_7b1e6d root.Std_k98ojb.Math.Mul {}\n        instance(x: 153, y: 0) mul_6d1c6c_1 root.Std_k98ojb.Math.Mul {}\n        side_6c9b3e -> mul_6d1c6c.first\n        side_6c9b3e -> mul_6d1c6c.second\n        mul_6d1c6c.result -> mul_7b1e6d.first\n        6 -> mul_7b1e6d.second\n        mul_7b1e6d.result -> mul_6d1c6c_1.first\n        side_6c9b3e -> mul_6d1c6c_1.second\n        mul_6d1c6c_1.result -> surface_area_3b2c1c\n    }\n\n    \n\n    instance(x: 187, y: 34) surface_area_3a9f0f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -119, y: -79, name: \"size\") property(Number) size_3d5e7d\n\n        out(x: 556, y: -68, name: \"surface area\") property(Number) surface_area_7c5f81\n\n        instance(x: 94, y: -105) mul_1d9c9c root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_8c7e6e root.Std_k98ojb.Math.Mul {}\n        size_3d5e7d -> mul_1d9c9c.first\n        6 -> mul_1d9c9c.second\n        mul_1d9c9c.result -> mul_8c7e6e.first\n        size_3d5e7d -> mul_8c7e6e.second\n        mul_8c7e6e.result -> surface_area_7c5f81\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_9e7b2f root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -112, y: -52, name: \"side\") property(Number) side_3d9c0c\n\n        out(x: 666, y: -19, name: \"area\") property(Number) area_1f9c8c\n\n        instance(x: 104, y: -32) mul_6d7a9d root.Std_k98ojb.Math.Mul {}\n        instance(x: 104, y: -118) mul_5f3c9e root.Std_k98ojb.Math.Mul {}\n        instance(x: 104, y: -202) mul_5c9f8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 104, y: -286) mul_4f0c9e root.Std_k98ojb.Math.Mul {}\n        instance(x: 104, y: -370) mul_7f9f9e root.Std_k98ojb.Math.Mul {}\n        instance(x: 104, y: -454) mul_8e0c9e root.Std_k98ojb.Math.Mul {}\n        instance(x: 104, y: -538) add_4e3c9e root.Std_k98ojb.Math.Add {}\n        side_3d9c0c -> mul_6d7a9d.first\n        side_3d9c0c -> mul_6d7a9d.second\n        mul_6d7a9d.result -> mul_5f3c9e.first\n        mul_6d7a9d.result -> mul_5f3c9e.second\n        mul_5f3c9e.result -> mul_5c9f8f.first\n        mul_5f3c9e.result -> mul_5c9f8f.second\n        mul_5c9f8f.result -> mul_4f0c9e.first\n        mul_5c9f8f.result -> mul_4f0c9e.second\n        mul_4f0c9e.result -> mul_7f9f9e.first\n        mul_4f0c9e.result -> mul_7f9f9e.second\n        mul_7f9f9e.result -> mul_8e0c9e.first\n        mul_7f9f9e.result -> mul_8e0c9e.second\n        mul_8e0c9e.result -> add_4e3c9e.first\n        mul_8e0c9e.result -> add_4e3c9e.second\n        add_4e3c9e.result -> area_1f9c8c\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_5e9f8e root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -286, y: -246, name: \"list\") property(List) list_8c8d6f\n\n        out(x: 436, y: -219, name: \"difference\") property(Number) difference_1d1e9d\n\n        instance(x: 426, y: -303) max_6e7c5c root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -442) min_5d7c9f root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: -303) sub_3f4d6f root.Std_k98ojb.Math.Sub {}\n        list_8c8d6f -> max_6e7c5c.items\n        list_8c8d6f -> min_5d7c9f.items\n        max_6e7c5c.max -> sub_3f4d6f.first\n        min_5d7c9f.min -> sub_3f4d6f.second\n        sub_3f4d6f.result -> difference_1d1e9d\n    }\n\n    \n\n    instance(x: 426, y: -303) diff_largest_smallest_4e7b9f root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -331, y: -22, name: \"list\") property(List) list_1d9b8d\n\n        out(x: 446, y: 7, name: \"difference\") property(Number) difference_4e5b0d\n\n        instance(x: -91, y: -22) max_4b9e1e root.Std_k98ojb.List.Max {}\n        instance(x: -88, y: 163) min_1e1e3e root.Std_k98ojb.List.Min {}\n        instance(x: 186, y: 7) sub_9f1b6e root.Std_k98ojb.Math.Sub {}\n        list_1d9b8d -> max_4b9e1e.items\n        list_1d9b8d -> min_1e1e3e.items\n        max_4b9e1e.max -> sub_9f1b6e.first\n        min_1e1e3e.min -> sub_9f1b6e.second\n        sub_9f1b6e.result -> difference_4e5b0d\n    }\n\n    \n\n    instance(x: 26, y: -16) diff_max_min_7b9c8c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -31, y: -34, name: \"list\") property(List) list_4d5c4d\n\n        out(x: 446, y: 55, name: \"difference\") property(Number) difference_4a2f2f\n\n        instance(x: -280, y: -27) max_4c4b2d root.Std_k98ojb.List.Max {}\n        instance(x: -274, y: -225) min_1f3a91 root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 55) sub_1b4c9f root.Std_k98ojb.Math.Sub {}\n        list_4d5c4d -> max_4c4b2d.items\n        list_4d5c4d -> min_1f3a91.items\n        max_4c4b2d.max -> sub_1b4c9f.first\n        min_1f3a91.min -> sub_1b4c9f.second\n        sub_1b4c9f.result -> difference_4a2f2f\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_1d3d9f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -298, y: -18, name: \"list\") property(List) list_5d8c61\n\n        out(x: 434, y: 43, name: \"difference\") property(Number) difference_4f6b1c\n\n        instance(x: -98, y: -18) max_3d2b9f root.Std_k98ojb.List.Max {}\n        instance(x: 182, y: 43) min_3e9e9f root.Std_k98ojb.List.Min {}\n        instance(x: 180, y: 121) sub_5e2c2e root.Std_k98ojb.Math.Sub {}\n        list_5d8c61 -> max_3d2b9f.items\n        list_5d8c61 -> min_3e9e9f.items\n        max_3d2b9f.max -> sub_5e2c2e.first\n        min_3e9e9f.min -> sub_5e2c2e.second\n        sub_5e2c2e.result -> difference_4f6b1c\n    }\n\n    \n\n    instance(x: -57, y: -11) diff_largest_smallest_4a7c7d root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -37, y: -24, name: \"list\") property(List) list_7a2e0f\n\n        out(x: 442, y: 49, name: \"difference\") property(Number) difference_7c3b1e\n\n        instance(x: 166, y: 47) sub_8c7f0e root.Std_k98ojb.Math.Sub {}\n        instance(x: -305, y: 129) max_5d8f8c root.Std_k98ojb.List.Max {}\n        instance(x: -306, y: -175) min_7d8e6f root.Std_k98ojb.List.Min {}\n        list_7a2e0f -> max_5d8f8c.items\n        list_7a2e0f -> min_7d8e6f.items\n        max_5d8f8c.max -> sub_8c7f0e.first\n        min_7d8e6f.min -> sub_8c7f0e.second\n        sub_8c7f0e.result -> difference_7c3b1e\n    }\n\n    \n\n    instance(x: 49, y: -11) diff_1e5f4d root.main.diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff {\n        in(x: -286, y: -236, name: \"list\") property(List) list_8b6c2d\n\n        out(x: 440, y: -223, name: \"difference\") property(Number) difference_5f7f0f\n\n        instance(x: 26, y: -234) max_3d4f1e root.Std_k98ojb.List.Max {}\n        instance(x: 26, y: -457) min_7d7e1f root.Std_k98ojb.List.Min {}\n        instance(x: 201, y: -217) sub_1c1d2d root.Std_k98ojb.Math.Sub {}\n        list_8b6c2d -> max_3d4f1e.items\n        list_8b6c2d -> min_7d7e1f.items\n        max_3d4f1e.max -> sub_1c1d2d.first\n        min_7d7e1f.min -> sub_1c1d2d.second\n        sub_1c1d2d.result -> difference_5f7f0f\n    }\n\n    \n\n    instance(x: 40, y: -63) diff_4d1f7c root.main.diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -293, y: -228, name: \"list\") property(List) list_9c3c2e\n\n        out(x: 428, y: -216, name: \"difference\") property(Number) difference_5d6f82\n\n        instance(x: -43, y: -225) max_5b1b9f root.Std_k98ojb.List.Max {}\n        instance(x: 203, y: -215) min_3c7f0f root.Std_k98ojb.List.Min {}\n        instance(x: 187, y: -39) sub_4e1d9d root.Std_k98ojb.Math.Sub {}\n        list_9c3c2e -> max_5b1b9f.items\n        list_9c3c2e -> min_3c7f0f.items\n        max_5b1b9f.max -> sub_4e1d9d.first\n        min_3c7f0f.min -> sub_4e1d9d.second\n        sub_4e1d9d.result -> difference_5d6f82\n    }\n\n    \n\n    instance(x: -19, y: -8) diff_4d5f8c root.main.diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff {\n        in(x: -287, y: -241, name: \"list\") property(List) list_9e8f1e\n\n        out(x: 458, y: -212, name: \"diff\") property(Number) diff_1c1c5f\n\n        instance(x: -78, y: -241) max_7e7d2f root.Std_k98ojb.List.Max {}\n        instance(x: 185, y: -212) min_1b7d2d root.Std_k98ojb.List.Min {}\n        instance(x: 446, y: -212) sub_6c1b9f root.Std_k98ojb.Math.Sub {}\n        list_9e8f1e -> max_7e7d2f.items\n        list_9e8f1e -> min_1b7d2d.items\n        max_7e7d2f.max -> sub_6c1b9f.first\n        min_1b7d2d.min -> sub_6c1b9f.second\n        sub_6c1b9f.result -> diff_1c1c5f\n    }\n\n    \n\n    instance(x: 33, y: -17) diff_7c3d0e root.main.diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -298, y: -19, name: \"list\") property(List) list_6a2c2e\n\n        out(x: 448, y: 21, name: \"difference\") property(Number) difference_3e2c5d\n\n        instance(x: -18, y: 10) max_1d0c9c root.Std_k98ojb.List.Max {}\n        instance(x: -19, y: -211) min_5c7b7e root.Std_k98ojb.List.Min {}\n        instance(x: 192, y: 20) sub_3d8f2e root.Std_k98ojb.Math.Sub {}\n        list_6a2c2e -> max_1d0c9c.items\n        list_6a2c2e -> min_5c7b7e.items\n        max_1d0c9c.max -> sub_3d8f2e.first\n        min_5c7b7e.min -> sub_3d8f2e.second\n        sub_3d8f2e.result -> difference_3e2c5d\n    }\n\n    \n\n    instance(x: 62, y: -3) diff_max_min_1f6d51 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) max_5d4d1c root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_8f9f5f root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_0b075e -> max_5d4d1c.items\n        list_0b075e -> min_8f9f5f.items\n        max_5d4d1c.max -> sub_852f2e.first\n        min_8f9f5f.min -> sub_852f2e.second\n        sub_852f2e.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_15f9e9 root.main.diff {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -39, y: -21, name: \"n\") property(Number) n_6f8e3f\n\n        out(x: 441, y: 10, name: \"output\") property(Bool) output_7b2b0d\n\n        instance(x: 178, y: 9) modulo_3b4c81 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 383, y: 6) equal_4f3f5d root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_3b4c81.divisor\n        n_6f8e3f -> modulo_3b4c81.value\n        0 -> equal_4f3f5d.right\n        modulo_3b4c81.result -> equal_4f3f5d.left\n        equal_4f3f5d.result -> output_7b2b0d\n    }\n\n    \n\n    instance(x: 32, y: 14) is_even_2f9a92 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_1e9c73\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7c3b79\n\n        instance(x: 201, y: 62) modulo_8e5b1c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_6b2e2e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 201, y: 62) not_6b6f9f root.Std_k98ojb.Logic.Not {}\n        modulo_8e5b1c.result -> equal_6b2e2e.left\n        0 -> equal_6b2e2e.right\n        equal_6b2e2e.result -> not_6b6f9f.input\n        n_1e9c73 -> modulo_8e5b1c.value\n        2 -> modulo_8e5b1c.divisor\n        not_6b6f9f.result -> output_7c3b79\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_9c8b0d root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -26, y: -13, name: \"input\") property(Number) input_8b3c3d\n\n        out(x: 1084, y: -7, name: \"output\") property(Bool) output_6b4c2f\n\n        instance(x: 1006, y: -11) modulo_9a9c6c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1338, y: -10) equal_5b7c5f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1567, y: -7) or_1a8c3d root.Std_k98ojb.Logic.Or {}\n        input_8b3c3d -> modulo_9a9c6c.value\n        2 -> modulo_9a9c6c.divisor\n        modulo_9a9c6c.result -> equal_5b7c5f.left\n        0 -> equal_5b7c5f.right\n        equal_5b7c5f.result -> or_1a8c3d.left\n        0 -> or_1a8c3d.right\n        or_1a8c3d.result -> output_6b4c2f\n    }\n\n    \n\n    instance(x: 13, y: -5) is_even_4f6b7f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -28, y: -26, name: \"n\") property(Number) n_8b4d73\n\n        out(x: 122, y: 52, name: \"output\") property(Bool) output_5d9e4f\n\n        instance(x: 6, y: 55, name: \"check if n is even\") modulo_6f5d6f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 176, y: 51) equal_3d3f5f root.Std_k98ojb.Logic.Equal {}\n        n_8b4d73 -> modulo_6f5d6f.value\n        2 -> modulo_6f5d6f.divisor\n        modulo_6f5d6f.result -> equal_3d3f5f.left\n        0 -> equal_3d3f5f.right\n        equal_3d3f5f.result -> output_5d9e4f\n    }\n\n    \n\n    instance(x: 7, y: 8) is_even_2f3f4c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -52, y: -42, name: \"n\") property(Number) n_9f7d0e\n\n        out(x: 436, y: -33, name: \"output\") property(Bool) output_5c3e8f\n\n        instance(x: 182, y: -31) modulo_3d7f2c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 375, y: -31) equal_5d8f8c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 543, y: -32) not_8a8e6f root.Std_k98ojb.Logic.Not {}\n        n_9f7d0e -> modulo_3d7f2c.value\n        2 -> modulo_3d7f2c.divisor\n        modulo_3d7f2c.result -> equal_5d8f8c.left\n        0 -> equal_5d8f8c.right\n        equal_5d8f8c.result -> not_8a8e6f.input\n        not_8a8e6f.result -> output_5c3e8f\n    }\n\n    \n\n    instance(x: 31, y: -7) is_even_4d3f5d root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -36, y: -27, name: \"input\") property(Number) input_7f1c2e\n\n        out(x: 1286, y: -30, name: \"output\") property(Bool) output_5c7e8e\n\n        instance(x: 1124, y: -29) modulo_4f2e3c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1514, y: -28) equal_1b8c4e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1759, y: -28) not_6a4e2f root.Std_k98ojb.Logic.Not {}\n        2 -> modulo_4f2e3c.divisor\n        input_7f1c2e -> modulo_4f2e3c.value\n        0 -> equal_1b8c4e.right\n        modulo_4f2e3c.result -> equal_1b8c4e.left\n        equal_1b8c4e.result -> not_6a4e2f.input\n        not_6a4e2f.result -> output_5c7e8e\n    }\n\n    \n\n    instance(x: 44, y: 3) is_even_2c9f1f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"input\") property(Number) input_a6cea7\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1058, y: -203) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") not_75283f root.Std_k98ojb.Logic.Not {}\n        input_a6cea7 -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> equal_7836b4.left\n        0 -> equal_7836b4.right\n        equal_7836b4.result -> not_75283f.input\n        not_75283f.result -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -25, y: -18, name: \"input\") property(Number) input_9e2c9d\n\n        out(x: 1037, y: -19, name: \"output\") property(Bool) output_6d3b2c\n\n        instance(x: 571, y: -17) modulo_8c6d1c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 876, y: -19) equal_7d2b92 root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_8c6d1c.divisor\n        input_9e2c9d -> modulo_8c6d1c.value\n        0 -> equal_7d2b92.right\n        modulo_8c6d1c.result -> equal_7d2b92.left\n        equal_7d2b92.result -> output_6d3b2c\n    }\n\n    \n\n    instance(x: 6, y: 6) is_even_9e5e6f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -35, y: -40, name: \"input\") property(Number) input_7e2b6e\n\n        out(x: 1229, y: -46, name: \"output\") property(Bool) output_9f3e2c\n\n        instance(x: 114, y: -47) modulo_9b8d0c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 471, y: -47) equal_6d8c7e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 834, y: -47) not_5d5d3c root.Std_k98ojb.Logic.Not {}\n        2 -> modulo_9b8d0c.divisor\n        input_7e2b6e -> modulo_9b8d0c.value\n        0 -> equal_6d8c7e.right\n        modulo_9b8d0c.result -> equal_6d8c7e.left\n        equal_6d8c7e.result -> not_5d5d3c.input\n        not_5d5d3c.result -> output_9f3e2c\n    }\n\n    \n\n    instance(x: 62, y: -6) is_even_1e6c6d root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -42, y: -25, name: \"input\") property(Number) input_6d3d9c\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_3d9b5d\n\n        instance(x: 201, y: 62) modulo_a5d1c6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 63) equal_9d5f3c root.Std_k98ojb.Logic.Equal {}\n        equal_9d5f3c.result -> output_3d9b5d\n        modulo_a5d1c6.result -> equal_9d5f3c.left\n        0 -> equal_9d5f3c.right\n        input_6d3d9c -> modulo_a5d1c6.value\n        2 -> modulo_a5d1c6.divisor\n    }\n\n    \n\n    instance(x: 39, y: 10) is_even_9d8e4c root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -270, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 520, y: -1, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) ``Find index of element_0`` root.Std_k98ojb.Iteration.Find {}\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n                current_afd5b1 -> equal_a54bdc.left\n                elem_9f6850 -> equal_a54bdc.right\n                equal_a54bdc.result -> bool_1eb6e9\n            } -> ``Find index of element_0``.predicate\n            instance(x: 0, y: 0) ``List of characters_0`` root.Std_k98ojb.Strings.Characters {}\n            ``List of characters_0``.characters -> ``Find index of element_0``.items\n            ``Find index of element_0``.item -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: 0, y: 0) ``List of characters_1`` root.Std_k98ojb.Strings.Characters {}\n        ``List of characters_1``.characters -> find_6d05b0.items\n        find_6d05b0.item -> output_0\n        input_0 -> ``List of characters_0``.input\n        input_0 -> ``List of characters_1``.input\n    }\n\n    \n\n    instance(x: 80, y: 50) first_repeated_6e6bfd root.main.first_repeated {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -274, y: -0, name: \"string\") property(String) string_9c1d9f\n\n        out(x: 593, y: -1, name: \"character\") property(String) character_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1c2b4f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            contains_1c2b4f.input -> notequal_807ffd.left\n            string_9c1d9f -> contains_1c2b4f.input\n            elem_9f6850 -> contains_1c2b4f.contains\n            notequal_807ffd.right -> contains_1c2b4f.contains\n            contains_1c2b4f.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: -1, y: 0) characters_7c1d9f root.Std_k98ojb.Strings.Characters {}\n        characters_7c1d9f.characters -> find_6d05b0.items\n        string_9c1d9f -> characters_7c1d9f.input\n        find_6d05b0.item -> character_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: -1, name: \"string\") property(String) input_1\n\n        out(x: 599, y: -1, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 0) characters_1d3c7e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) contains_9e5b8f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) first_7e3f4f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) map_7f7f0e root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) not_1f9d87 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) list_1f9d87 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 0, y: 0) getat_1f9d87 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) concat_1f9d87 root.Std_k98ojb.List.Concat {}\n        instance(x: 0, y: 0) zip_1f9d87 root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 0, y: 0) for_1f9d87 root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) add_1f9d87 root.Std_k98ojb.List.Add {}\n        instance(x: 0, y: 0) notempty_1f9d87 root.Std_k98ojb.List.NotEmpty {}\n        instance(x: 0, y: 0) set_1f9d87 root.Std_k98ojb.Std.Set {}\n        instance(x: 0, y: 0) or_1f9d87 root.Std_k98ojb.Logic.Or {}\n        instance(x: 0, y: 0) and_1f9d87 root.Std_k98ojb.Logic.And {}\n        instance(x: 0, y: 0) if_1f9d87 root.Std_k98ojb.Std.If {}\n        input_1 -> characters_1d3c7e.input\n        characters_1d3c7e.characters -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2b1b6c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_2b1b6c root.Std_k98ojb.Logic.Not {}\n            instance(x: 310, y: 35) map_2b1b6c root.Std_k98ojb.Iteration.Map {}\n            instance(x: 310, y: 35) list_2b1b6c root.Std_k98ojb.List.GenerateRange {}\n            instance(x: 310, y: 35) getat_2b1b6c root.Std_k98ojb.List.GetAt {}\n            instance(x: 310, y: 35) concat_2b1b6c root.Std_k98ojb.List.Concat {}\n            instance(x: 310, y: 35) zip_2b1b6c root.Std_k98ojb.Iteration.Zip {}\n            instance(x: 310, y: 35) for_2b1b6c root.Std_k98ojb.Std.For {}\n            instance(x: 310, y: 35) add_2b1b6c root.Std_k98ojb.List.Add {}\n            instance(x: 310, y: 35) notempty_2b1b6c root.Std_k98ojb.List.NotEmpty {}\n            instance(x: 310, y: 35) set_2b1b6c root.Std_k98ojb.Std.Set {}\n            instance(x: 310, y: 35) or_2b1b6c root.Std_k98ojb.Logic.Or {}\n            instance(x: 310, y: 35) and_2b1b6c root.Std_k98ojb.Logic.And {}\n            instance(x: 310, y: 35) if_2b1b6c root.Std_k98ojb.Std.If {}\n            elem_9f6850 -> contains_2b1b6c.input\n            characters_1d3c7e.characters -> contains_2b1b6c.contains\n            contains_2b1b6c.result -> not_2b1b6c.input\n            not_2b1b6c.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        find_6d05b0.item -> result_0\n        characters_1d3c7e.characters -> contains_9e5b8f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2b1b6c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_2b1b6c root.Std_k98ojb.Logic.Not {}\n            instance(x: 310, y: 35) map_2b1b6c root.Std_k98ojb.Iteration.Map {}\n            instance(x: 310, y: 35) list_2b1b6c root.Std_k98ojb.List.GenerateRange {}\n            instance(x: 310, y: 35) getat_2b1b6c root.Std_k98ojb.List.GetAt {}\n            instance(x: 310, y: 35) concat_2b1b6c root.Std_k98ojb.List.Concat {}\n            instance(x: 310, y: 35) zip_2b1b6c root.Std_k98ojb.Iteration.Zip {}\n            instance(x: 310, y: 35) for_2b1b6c root.Std_k98ojb.Std.For {}\n            instance(x: 310, y: 35) add_2b1b6c root.Std_k98ojb.List.Add {}\n            instance(x: 310, y: 35) notempty_2b1b6c root.Std_k98ojb.List.NotEmpty {}\n            instance(x: 310, y: 35) set_2b1b6c root.Std_k98ojb.Std.Set {}\n            instance(x: 310, y: 35) or_2b1b6c root.Std_k98ojb.Logic.Or {}\n            instance(x: 310, y: 35) and_2b1b6c root.Std_k98ojb.Logic.And {}\n            instance(x: 310, y: 35) if_2b1b6c root.Std_k98ojb.Std.If {}\n            elem_9f6850 -> contains_2b1b6c.input\n            find_6d05b0.item -> contains_2b1b6c.contains\n            contains_2b1b6c.result -> not_2b1b6c.input\n            not_2b1b6c.result -> bool_af09a7\n        } -> contains_9e5b8f.handler\n        contains_9e5b8f.output_list -> first_7e3f4f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"string\") property(String) string_9b1e1f\n\n            elem_9f6850 -> string_9b1e1f\n        } -> map_7f7f0e.handler\n        characters_1d3c7e.characters -> map_7f7f0e.items\n        map_7f7f0e.output_list -> not_1f9d87.input\n        not_1f9d87.result -> find_6d05b0.predicate\n        list_1f9d87.from -> list_1f9d87.to\n        list_1f9d87.from -> getat_1f9d87.index\n        getat_1f9d87.list -> concat_1f9d87.left",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -281, y: 176, name: \"string\") property(String) string_0\n\n        out(x: 803, y: 148, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) characters_5a1f64 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) find_5a5c2e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Finds the first repeated character in a given string_2e2c2e`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Finds the first repeated character in a given string_0f2c3c`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Finds the first repeated character in a given string_2f2c4e`` root.Std_k98ojb.Iteration.Find {}\n        characters_5a1f64.output -> find_5a5c2e.items\n        string_0 -> characters_5a1f64.input\n        func() {\n            in(x: -191, y: 82, name: \"current\") property(String) current_0\n\n            out(x: 697, y: 84, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 111, y: 79) ``Finds the first repeated character in a given string_2e2c2e`` root.Std_k98ojb.Iteration.Find {}\n            instance(x: 419, y: 80) ``Finds the first repeated character in a given string_0f2c3c`` root.Std_k98ojb.Iteration.Find {}\n            instance(x: 735, y: 81) ``Finds the first repeated character in a given string_2f2c4e`` root.Std_k98ojb.Iteration.Find {}\n            current_0 -> ``Finds the first repeated character in a given string_2e2c2e``.items\n            func() {\n                in(x: -191, y: 82, name: \"current\") property(String) current_0\n\n                out(x: 697, y: 84, name: \"bool\") property(Bool) bool_0\n\n                instance(x: 111, y: 79) ``Finds the first repeated character in a given string_0f2c3c`` root.Std_k98ojb.Iteration.Find {}\n                instance(x: 735, y: 81) ``Finds the first repeated character in a given string_2f2c4e`` root.Std_k98ojb.Iteration.Find {}\n                current_0 -> ``Finds the first repeated character in a given string_0f2c3c``.items\n                func() {\n                    in(x: -191, y: 82, name: \"current\") property(String) current_0\n\n                    out(x: 697, y: 84, name: \"bool\") property(Bool) bool_0\n\n                    instance(x: 735, y: 81) ``Finds the first repeated character in a given string_2f2c4e`` root.Std_k98ojb.Iteration.Find {}\n                    current_0 -> ``Finds the first repeated character in a given string_2f2c4e``.items\n                    func() {\n                        in(x: -191, y: 82, name: \"current\") property(String) current_0\n\n                        out(x: 697, y: 84, name: \"bool\") property(Bool) bool_0\n\n                        instance(x: 735, y: 81) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n                        current_0 -> equal_a54bdc.left\n                        ``Finds the first repeated character in a given string_2f2c4e``.item -> equal_a54bdc.right\n                        equal_a54bdc.result -> bool_0\n                    } -> ``Finds the first repeated character in a given string_2f2c4e``.predicate\n                    ``Finds the first repeated character in a given string_2f2c4e``.item -> ``Finds the first repeated character in a given string_0f2c3c``.predicate\n                } -> ``Finds the first repeated character in a given string_0f2c3c``.predicate\n                ``Finds the first repeated character in a given string_0f2c3c``.item -> ``Finds the first repeated character in a given string_2e2c2e``.predicate\n            } -> ``Finds the first repeated character in a given string_2e2c2e``.predicate\n            ``Finds the first repeated character in a given string_2e2c2e``.item -> bool_0\n        } -> find_5a5c2e.predicate\n        find_5a5c2e.item -> output_0\n    }\n\n    \n\n    instance(x: -288, y: 175) first_repeated_char_3c3d5e root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -282, y: -0, name: \"string\") property(String) string_7b5d5e\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_3bc2ae\n\n        instance(x: 0, y: 0) first_2d7f2c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) characters_5d8f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) contains_8f1e9f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) find_1a5d4c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``contains_8f1e9f_0`` root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) ``contains_8f1e9f_0`` root.Std_k98ojb.Iteration.Filter {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            ``contains_8f1e9f_0``.output_list -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> contains_8f1e9f.handler\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_5d6f73 root.Std_k98ojb.Strings.Contains {}\n            contains_5d6f73.input -> contains_5d6f73.contains\n            string_7b5d5e -> contains_5d6f73.input\n            char_9f6850 -> contains_5d6f73.contains\n            contains_5d6f73.result -> bool_af09a7\n        } -> ``contains_8f1e9f_0``.handler\n        characters_5d8f8c.characters -> ``contains_8f1e9f_0``.items\n        ``contains_8f1e9f_0``.output_list -> contains_8f1e9f.items\n        characters_5d8f8c.characters -> contains_8f1e9f.items\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_5d6f73 root.Std_k98ojb.Strings.Contains {}\n            contains_5d6f73.input -> contains_5d6f73.contains\n            string_7b5d5e -> contains_5d6f73.input\n            char_9f6850 -> contains_5d6f73.contains\n            contains_5d6f73.result -> bool_af09a7\n        } -> find_1a5d4c.predicate\n        contains_8f1e9f.output_list -> find_1a5d4c.items\n        find_1a5d4c.item -> first_2d7f2c.predicate\n        find_1a5d4c.item -> char_3bc2ae\n        first_2d7f2c.items -> characters_5d8f8c.input\n        string_7b5d5e -> characters_5d8f8c.input\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) string_1c2b3a\n\n        out(x: 593, y: -1, name: \"character\") property(String) character_5c7e8e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"character\") property(String) character_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_9c4a8c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            string_1c2b3a -> contains_9c4a8c.input\n            character_9f6850 -> contains_9c4a8c.contains\n            contains_9c4a8c.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: 0, y: 0) characters_1f7c8a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) list_1e2d7a root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 0, y: 0) slice_2e7f8b root.Std_k98ojb.List.Slice {}\n        instance(x: 0, y: 0) concat_7c5d4c root.Std_k98ojb.List.Concat {}\n        list_1e2d7a.from -> slice_2e7f8b.start\n        list_1e2d7a.to -> slice_2e7f8b.end\n        characters_1f7c8a.characters -> list_1e2d7a.to\n        characters_1f7c8a.characters -> concat_7c5d4c.left\n        slice_2e7f8b.list -> concat_7c5d4c.right\n        concat_7c5d4c.listWithItem -> find_6d05b0.items\n        find_6d05b0.item -> character_5c7e8e\n        characters_1f7c8a.input -> characters_1f7c8a.input\n        string_1c2b3a -> characters_1f7c8a.input\n        0 -> list_1e2d7a.from\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 15, name: \"string\") property(String) input_0\n\n        out(x: 599, y: -3, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 0, y: 0) characters_7d3f1f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) map_1c5e81 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) filter_5c6f0c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) count_8e5d4d root.Std_k98ojb.Iteration.Count {}\n        instance(x: 0, y: 0) filter_0f7e2f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) contains_8c9e0a root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) contains_0d8e2f root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) notequal_8c7e2f root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 0, y: 0) ``first index``_1f7e2f_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b1361_0b",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -287, y: -1, name: \"string\") property(String) string_8f1e7e\n\n        out(x: 800, y: -1, name: \"output\") property(String) output_1c6f6f\n\n        instance(x: 0, y: 0) characters_7a2f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) find_8c3d8f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) contains_9a7c5e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) first_1d4c2a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``first repeated char_1`` root.Std_k98ojb.Std.IfExpression {}\n        characters_7a2f8c.output -> find_8c3d8f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_9a7c5e root.Std_k98ojb.Iteration.Filter {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            contains_9a7c5e.output_list -> notequal_807ffd.right\n            elem_9f6850 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_8c3d8f.predicate\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_9a7c5e root.Std_k98ojb.Iteration.Filter {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            contains_9a7c5e.output_list -> notequal_807ffd.right\n            elem_9f6850 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> contains_9a5c5e.handler\n        find_8c3d8f.item -> contains_9a7c5e.items\n        characters_7a2f8c.output -> contains_9a7c5e.items\n        contains_9a7c5e.output_list -> first_1d4c2a.items\n        first_1d4c2a.item -> ``first repeated char_1``.then\n        find_8c3d8f.item -> ``first repeated char_1``.gen_0\n        ``first repeated char_1``.else -> output_1c6f6f\n        string_8f1e7e -> characters_7a2f8c.input\n    }\n\n    \n\n    instance(x: -291, y: 1) first_repeated_char_8e8c6e root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 167, name: \"string\") property(String) input_3d5e7f\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_3e2c5d\n\n        instance(x: 0, y: 0) characters_0d9c9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) find_7c7e6e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_0`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_1`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_2`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_3`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_4`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_5`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_6`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_7`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_8`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_9`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_10`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_11`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_12`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_13`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_14`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_15`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_16`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_17`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_18`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_19`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_20`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_21`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_22`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_23`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_24`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_25`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_26`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_27`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_28`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_29`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_30`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_31`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_32`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_33`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_34`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_35`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_36`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_37`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_38`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_39`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_40`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_41`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_42`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_43`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_44`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_45`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_46`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_47`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_48`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_49`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_50`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_51`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_52`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_53`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_54`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_55`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_56`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_57`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_58`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_59`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_60`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_61`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_62`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_63`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_64`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_65`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_66`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Find_67`` root.Std_k98ojb.Iteration.Find {}\n        instance(x:",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 0) for_0e4c5f root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) contains_0e7c4e root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) set_0e9a4c root.Std_k98ojb.List.Set {}\n        instance(x: 0, y: 0) ``return_0eb7d2`` root.Std_k98ojb.Std.Return {}\n        instance(x: 0, y: 0) list_0ecb0e root.Std_k98ojb.List.Empty {}\n        instance(x: 0, y: 0) if_0eeb5e root.Std_k98ojb.Std.If {}\n        for_0e4c5f.items -> list_0ecb0e\n        list_0ecb0e.listWithItem -> contains_0e7c4e.list\n        for_0e4c5f.onItem -> contains_0e7c4e.input\n        contains_0e7c4e.result -> if_0eeb5e.predicate\n        for_0e4c5f.index -> set_0e9a4c.index\n        for_0e4c5f.item -> set_0e9a4c.item\n        list_0ecb0e.listWithItem -> set_0e9a4c.list\n        if_0eeb5e.then -> ``return_0eb7d2``.execute\n        for_0e4c5f.item -> ``return_0eb7d2``.value\n        if_0eeb5e.else -> for_0e4c5f.next\n        input_0 -> for_0e4c5f.items\n        ``return_0eb7d2``.result -> result_0\n        for_0e4c5f.reset -> ``return_0eb7d2``.reset\n        for_0e4c5f.done -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_3f3a1d root.main.first_repeated {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: -196, name: \"items\") property(List) items_7c8d8c\n\n        out(x: 42, y: -214, name: \"second smallest\") property(Number) second_smallest_3a2d1f\n\n        instance(x: -98, y: -299) min_8a3d2f root.Std_k98ojb.List.Min {}\n        instance(x: -108, y: -106) remove_2a9b7e root.Std_k98ojb.List.Remove {}\n        instance(x: 9, y: -111) min_8a3d2f_2 root.Std_k98ojb.List.Min {}\n        items_7c8d8c -> min_8a3d2f.items\n        min_8a3d2f.min -> remove_2a9b7e.index\n        items_7c8d8c -> remove_2a9b7e.list\n        remove_2a9b7e.listWithoutItem -> min_8a3d2f_2.items\n        min_8a3d2f_2.min -> second_smallest_3a2d1f\n    }\n\n    \n\n    instance(x: 342, y: 568) second_smallest_7c1f5f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1c8f1c root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: 35) min_2b5f6c root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_1c8f1c.items\n            min_1c8f1c.min -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            instance(x: 310, y: 35) list_remove_7c2b0f root.Std_k98ojb.List.Remove {}\n            list_abed4a -> list_remove_7c2b0f.list\n            min_1c8f1c.index -> list_remove_7c2b0f.index\n            list_remove_7c2b0f.listWithoutItem -> min_2b5f6c.items\n            min_2b5f6c.min -> bool_af09a7\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_7a7f9c root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: -194, name: \"items\") property(List) items_5f1c6d\n\n        out(x: 49, y: -211, name: \"min\") property(Number) min_1b6d91\n\n        instance(x: -105, y: -110) ifexpression_5c9e9c root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_3d5a2f\") getter_3d5a2f = min\n        setter(x: 116, y: -268, name: \"setter_1c1c8c\") setter_1c1c8c = min\n        setter(x: 118, y: -56, name: \"setter_1f0e2d\") setter_1f0e2d = min\n        a_1b1b9f -> ifexpression_5c9e9c.gen_0\n        b_3b4a6e -> ifexpression_5c9e9c.gen_1\n        getter_3d5a2f.value -> min_1b6d91\n        ifexpression_5c9e9c.then -> setter_1c1c8c.execute\n        a_1b1b9f -> setter_1c1c8c.new_value\n        b_3b4a6e -> setter_1f0e2d.new_value\n        ifexpression_5c9e9c.else -> setter_1f0e2d.execute\n        execute_4f6f7f -> ifexpression_5c9e9c.execute\n        setter_1c1c8c.continue -> continue_1b6c2e\n        setter_1f0e2d.continue -> continue_1b6c2e\n\n        instance(x: -450, y: -114) list_min_node root.Std_k98ojb.List.Min {}\n        items_5f1c6d -> list_min_node.items\n        list_min_node.min -> a_1b1b9f\n\n        instance(x: -450, y: -114) list_min_node_2 root.Std_k98ojb.List.Min {}\n        instance(x: -426, y: -248) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_5f1c6d -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> b_3b4a6e\n\n        instance(x: -105, y: -110) ifexpression_1e6c9e root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_2e6c8e\") getter_2e6c8e = min\n        setter(x: 116, y: -268, name: \"setter_3e6c9e\") setter_3e6c9e = min\n        setter(x: 118, y: -56, name: \"setter_4e6c9e\") setter_4e6c9e = min\n        a_1b1b9f -> ifexpression_1e6c9e.gen_0\n        b_3b4a6e -> ifexpression_1e6c9e.gen_1\n        getter_2e6c8e.value -> min_1b6d91\n        ifexpression_1e6c9e.then -> setter_3e6c9e.execute\n        a_1b1b9f -> setter_3e6c9e.new_value\n        b_3b4a6e -> setter_4e6c9e.new_value\n        ifexpression_1e6c9e.else -> setter_4e6c9e.execute\n        execute_4f6f7f -> ifexpression_1e6c9e.execute\n        setter_3e6c9e.continue -> continue_1b6c2e\n        setter_4e6c9e.continue -> continue_1b6c2e\n    }\n\n    \n\n    instance(x: -174, y: -63) second_smallest_7f8b4f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -286, y: -189, name: \"items\") property(List) items_ai\n\n        out(x: 151, y: -217, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> remove_min_node.min\n        instance(x: 426, y: -303) remove_min_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> remove_min_node.index\n        items_ai -> remove_min_node.list\n        remove_min_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: -0, name: \"list\") property(List) list_7a7b5a\n\n        out(x: 592, y: -1, name: \"number\") property(Number) number_5c3e8f\n\n        instance(x: 0, y: 0) min_2d7f2c root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) remove_4e8d9c root.Std_k98ojb.List.Remove {}\n        instance(x: 0, y: 0) find_4d8f1e root.Std_k98ojb.Iteration.Find {}\n        list_7a7b5a -> min_2d7f2c.items\n        min_2d7f2c.min -> remove_4e8d9c.index\n        list_7a7b5a -> remove_4e8d9c.list\n        remove_4e8d9c.listWithoutItem -> find_4d8f1e.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_6e8f9e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_6e8f9e\n\n            instance(x: 89, y: 29) min_6c8d8f root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_5e8f9e root.Std_k98ojb.Logic.NotEqual {}\n            elem_6e8f9e -> min_6c8d8f.second\n            min_2d7f2c.min -> min_6c8d8f.first\n            min_6c8d8f.result -> notequal_5e8f9e.left\n            elem_6e8f9e -> notequal_5e8f9e.right\n            notequal_5e8f9e.result -> bool_6e8f9e\n        } -> find_4d8f1e.predicate\n        find_4d8f1e.item -> number_5c3e8f\n    }\n\n    \n\n    instance(x: -56, y: 529) second_smallest_2e8f9e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -301, y: -191, name: \"items\") property(List) items_8b6c71\n\n        out(x: 59, y: -216, name: \"min\") property(Number) min_5f0c7e\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> min_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n\n        instance(x: -105, y: -110) ifexpression_e38995_2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3_2\") getter_9cceb3_2 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2_2\") setter_1cedb2_2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f_2\") setter_37db7f_2 = min\n        a_9f7759_2 -> ifexpression_e38995_2.gen_0\n        b_f9110a_2 -> ifexpression_e38995_2.gen_1\n        getter_9cceb3_2.value -> min_b2508f_2\n        ifexpression_e38995_2.then -> setter_1cedb2_2.execute\n        a_9f7759_2 -> setter_1cedb2_2.new_value\n        b_f9110a_2 -> setter_37db7f_2.new_value\n        ifexpression_e38995_2.else -> setter_37db7f_2.execute\n        execute_12bf99_2 -> ifexpression_e38995_2.execute\n        setter_1cedb2_2.continue -> continue_685c8f_2\n        setter_37db7f_2.continue -> continue_685c8f_2\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_3 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_4 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_5 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_6 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_7 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_8 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_9 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_10 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_11 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_12 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_13 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_14 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_15 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_16 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_17 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_18 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_19 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_20 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_21 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_22 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_23 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_24 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_25 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_26 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_27 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_28 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_29 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_30 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_31 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_32 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_33 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_34 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_35 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_36 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_37 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_38 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_39 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_40 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_41 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_42 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_43 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_44 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_45 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_46 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_47 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_48 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_49 root.Std_k98",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) min_6d05b0 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_6d05b0.items\n        instance(x: 0, y: 0) remove_1088d5 root.Std_k98ojb.List.Remove {}\n        min_6d05b0.min -> remove_1088d5.index\n        list_abed4a -> remove_1088d5.list\n        instance(x: 0, y: 0) min_807ffd root.Std_k98ojb.List.Min {}\n        remove_1088d5.listWithoutItem -> min_807ffd.items\n        min_807ffd.min -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: -189, name: \"list\") property(List) list_9e8f93\n\n        out(x: 460, y: -180, name: \"second smallest\") property(Number) second_smallest_1c5f6f\n\n        instance(x: 0, y: 0) min_7a2f8c root.Std_k98ojb.List.Min {}\n        list_9e8f93 -> min_7a2f8c.items\n        instance(x: 0, y: 0) remove_4b2f0e root.Std_k98ojb.List.Remove {}\n        min_7a2f8c.min -> remove_4b2f0e.index\n        list_9e8f93 -> remove_4b2f0e.list\n        instance(x: 0, y: 0) min_4b9d4c root.Std_k98ojb.List.Min {}\n        remove_4b2f0e.listWithoutItem -> min_4b9d4c.items\n        min_4b9d4c.min -> second_smallest_1c5f6f\n    }\n\n    \n\n    instance(x: 317, y: 569) second_smallest_7c9b2c root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3a8d72 root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 496, y: 44) min2_7d7f7c root.Std_k98ojb.Math.Min2 {}\n            list_abed4a -> min_3a8d72.items\n            min_3a8d72.min -> min2_7d7f7c.left\n            elem_9f6850 -> min2_7d7f7c.right\n            min2_7d7f7c.min -> notequal_807ffd.left\n            min_3a8d72.min -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -298, y: -197, name: \"list\") property(List) list_4b8b9c\n\n        out(x: 159, y: -219, name: \"min\") property(Number) min_8b1b5a\n\n        instance(x: -105, y: -110) ifexpression_6e7a9d root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1e6d7f\") getter_1e6d7f = min\n        setter(x: 116, y: -268, name: \"setter_1f8b1d\") setter_1f8b1d = min\n        setter(x: 118, y: -56, name: \"setter_3c5b3f\") setter_3c5b3f = min\n        a -> ifexpression_6e7a9d.gen_0\n        b -> ifexpression_6e7a9d.gen_1\n        getter_1e6d7f.value -> min_8b1b5a\n        ifexpression_6e7a9d.then -> setter_1f8b1d.execute\n        a -> setter_1f8b1d.new_value\n        b -> setter_3c5b3f.new_value\n        ifexpression_6e7a9d.else -> setter_3c5b3f.execute\n        execute -> ifexpression_6e7a9d.execute\n        setter_1f8b1d.continue -> continue\n        setter_3c5b3f.continue -> continue\n\n        instance(x: -451, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        list_4b8b9c -> list_min_node.items\n        list_min_node.min -> a\n\n        instance(x: -451, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_4b8b9c -> list_min_node_2.items\n        list_min_node_2.min -> b\n\n        instance(x: -451, y: -303) list_min_node_3 root.Std_k98ojb.List.Min {}\n        instance(x: -345, y: -311) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_4b8b9c -> list_remove_node.list\n        list_min_node.min -> list_remove_node.index\n        list_remove_node.listWithoutItem -> list_min_node_3.items\n        list_min_node_3.min -> min_8b1b5a\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}"
            ]
        }
    }
]