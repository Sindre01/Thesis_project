[
    {
        "experiment_name": "regular_RAG_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15910,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if the two lists have at least one common element.\") common_element {\n        in(x: -437, y: -226, name: \"list1\") property(List) list1_9c1e3d\n        in(x: -425, y: -18, name: \"list2\") property(List) list2_3c1f2e\n\n        out(x: 1244, y: -12, name: \"output\") property(Bool) output_3b9d8f\n\n        instance(x: 115, y: -206) intersection_5c5e0e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1094, y: -212) notempty_7e5b9f root.Std_k98ojb.List.NotEmpty {}\n        list1_9c1e3d -> intersection_5c5e0e.left\n        list2_3c1f2e -> intersection_5c5e0e.right\n        intersection_5c5e0e.intersect -> notempty_7e5b9f.list\n        notempty_7e5b9f.isEmpty -> output_3b9d8f\n    }\n\n    \n\n    instance(x: -290, y: -9) common_element_4f5b3f root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if two lists have at least one common element.\") common_element {\n        in(x: -471, y: -224, name: \"list1\") property(List) list1_9c4e5f\n        in(x: -482, y: 23, name: \"list2\") property(List) list2_4e2e9e\n\n        out(x: 1233, y: 4, name: \"output\") property(Bool) output_8c3e9e\n\n        instance(x: 778, y: 88) intersection_1f4d0a root.Std_k98ojb.Sets.Intersection {}\n        list1_9c4e5f -> intersection_1f4d0a.left\n        list2_4e2e9e -> intersection_1f4d0a.right\n        instance(x: 1118, y: 107) notempty_1d1e7d root.Std_k98ojb.List.NotEmpty {}\n        intersection_1f4d0a.intersect -> notempty_1d1e7d.list\n        notempty_1d1e7d.isEmpty -> output_8c3e9e\n    }\n\n    \n\n    instance(x: -288, y: -4) common_element_1e4f2c root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -467, y: -228, name: \"list1\") property(List) list1_5e7f74\n        in(x: -479, y: 35, name: \"list2\") property(List) list2_1b6e5f\n\n        out(x: 1229, y: 15, name: \"output\") property(Bool) output_5d9f1e\n\n        instance(x: 750, y: 103) ifexpression_4f8c7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"contains\"\n        }\n        instance(x: 322, y: -12) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -279, y: -26) contains_5b6b3c root.Std_k98ojb.List.Contains {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_4f8c7c.then -> output_5d9f1e\n        ifexpression_4f8c7c.else -> ifexpression_875761.execute\n        ifexpression_875761.else -> contains_5b6b3c.execute\n        ifexpression_875761.value -> output_5d9f1e\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_5e7f74 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> contains_5b6b3c.list\n        for_d26972.item -> setter_9d4f1c.new_value\n        contains_5b6b3c.is_contained -> ifexpression_4f8c7c.gen_0\n        contains_5b6b3c.result -> ifexpression_4f8c7c.value\n        list2_1b6e5f -> contains_5b6b3c.list\n        for_d26972.done -> output_5d9f1e\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_5e7f74 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        contains_5b6b3c.list -> for_d26972.items\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> contains_5b6b3c.list\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_5e7f74 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> contains_5b6b3c.list\n        for_d26972.item -> setter_9d4f1c.new_value\n        contains_5b6b3c.is_contained -> ifexpression_4f8c7c.gen_0\n        contains_5b6b3c.result -> ifexpression_4f8c7c.value\n        list2_1b6e5f -> contains_5b6b3c.list\n        for_d26972.done -> output_5d9f1e\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_5e7f74 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        ifexpression_875761.value -> output_5d9f1e\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        ifexpression_875761.else -> contains_5b6b3c.execute\n        contains_5b6b3c.is_contained -> ifexpression_4f8c7c.gen_0\n        contains_5b6b3c.result -> ifexpression_4f8c7c.value\n        list2_1b6e5f -> contains_5b6b3c.list\n        for_d26972.done -> output_5d9f1e\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_5e7f74 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        ifexpression_875761.else -> contains_5b6b3c.execute\n        contains_5b6b3c.list -> for_d26972.items\n        contains_5b6b3c.execute -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n        setter_38e107.continue -> for_d26972.reset\n    }\n\n    \n\n    instance(x: 11, y: -178) has_common_8c9d2d root.main.has_common {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if two lists have at least one common element.\") common_element {\n        in(x: -459, y: -236, name: \"list1\") property(List) list1_7a2f9c\n        in(x: -477, y: 28, name: \"list2\") property(List) list2_6f1c6e\n\n        out(x: 1233, y: 6, name: \"output\") property(Bool) output_8e6f94\n\n        instance(x: 748, y: 92) ifexpression_8a8e6e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 330, y: 159, name: \"getter_9f2d1f\") getter_9f2d1f = previous\n        setter(x: 675, y: -313, name: \"setter_8e4c6e\") setter_8e4c6e = previous\n        instance(x: 318, y: -20) for_7f5a2c root.Std_k98ojb.Std.For {}\n        setter(x: -1, y: -121, name: \"setter_8e4c6e\") setter_9d8b1c = previous\n        instance(x: -275, y: -35) getat_4e2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_8a8e6e.else -> continue_a96db6\n        ifexpression_8a8e6e.value -> output_5bbcd7\n        ifexpression_8a8e6e.then -> setter_8e4c6e.execute\n        list1_7a2f9c -> for_7f5a2c.items\n        for_7f5a2c.item -> ifexpression_8a8e6e.gen_2\n        for_7f5a2c.index -> ifexpression_8a8e6e.gen_0\n        getter_9f2d1f.value -> ifexpression_8a8e6e.gen_1\n        for_7f5a2c.onItem -> ifexpression_8a8e6e.execute\n        for_7f5a2c.done -> continue_a96db6\n        for_7f5a2c.item -> setter_8e4c6e.new_value\n        list1_7a2f9c -> getat_4e2a48.list\n        0 -> getat_4e2a48.index\n        getat_4e2a48.itemAtIndex -> setter_9d8b1c.new_value\n        execute_90aaec -> setter_9d8b1c.execute\n        setter_9d8b1c.continue -> for_7f5a2c.reset\n        setter_8e4c6e.continue -> for_7f5a2c.next\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list2_6f1c6e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_6f1c6e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n        instance(x: 1248, y: 92) intersection_4b9d8c root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1268, y: -20) not_9f7f7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1248, y: -36) isempty_8a8c1c root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 1280, y: 160) contains_7a8d6c root.Std_k98ojb.List.Contains {}\n        intersection_4b9d8c.intersect -> contains_7a8d6c.list\n        list1_7a2f9c -> intersection_4b9d8c.left\n        list2_6f1c6e -> intersection_4b9d8c.right\n        not_9f7f7c.result -> output_5bbcd7\n        contains_7a8d6c.is_contained -> not_9f7f7c.input\n        intersection_4b9d8c.intersect -> isempty_8a8c1c.list\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_3c79d5 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -365, y: -216, name: \"list1\") property(List) list1_9b6b91\n        in(x: -362, y: 32, name: \"list2\") property(List) list2_9b9d8f\n\n        out(x: 1272, y: 41, name: \"output\") property(Bool) output_7c8b9e\n\n        instance(x: 1120, y: 76) contains_6b6d5d root.Std_k98ojb.List.Contains {}\n        instance(x: 695, y: 53) intersection_3f3e1d root.Std_k98ojb.Sets.Intersection {}\n        list1_9b6b91 -> intersection_3f3e1d.left\n        list2_9b9d8f -> intersection_3f3e1d.right\n        intersection_3f3e1d.intersect -> contains_6b6d5d.list\n        1 -> contains_6b6d5d.item\n        contains_6b6d5d.is_contained -> output_7c8b9e\n    }\n\n    \n\n    instance(x: -337, y: -13) common_element_1f6b3c root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -417, y: -209, name: \"list1\") property(List) list1_4f3e0c\n        in(x: -430, y: -2, name: \"list2\") property(List) list2_3b1d1c\n\n        out(x: 1233, y: -208, name: \"output\") property(Bool) output_7f9e76\n\n        instance(x: -158, y: -208, name: \"find common element\") find_8f2f01 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 1117, y: -207) not_3e9f1f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -22, y: -15, name: \"current\") property(Any) current_8f1f6f\n            in(x: -13, y: 70, name: \"list2\") property(List) list2_7f4c1e\n\n            out(x: 714, y: 49, name: \"output\") property(Bool) output_6a3f9f\n\n            instance(x: 241, y: 51) contains_9a9d6f root.Std_k98ojb.List.Contains {}\n            current_8f1f6f -> contains_9a9d6f.item\n            list2_7f4c1e -> contains_9a9d6f.list\n            contains_9a9d6f.is_contained -> output_6a3f9f\n        } -> find_8f2f01.predicate\n        list1_4f3e0c -> find_8f2f01.items\n        list2_3b1d1c -> find_8f2f01.handler\n        not_3e9f1f.result -> output_7f9e76\n        find_8f2f01.item -> not_3e9f1f.input\n    }\n\n    \n\n    instance(x: -334, y: -3) common_element_5b9d2f root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -459, y: -205, name: \"list1\") property(List) list1_8d5c3f\n        in(x: -466, y: 26, name: \"list2\") property(List) list2_6f9d4f\n\n        out(x: 1224, y: 10, name: \"output\") property(Bool) output_6d1d0f\n\n        instance(x: 761, y: 84) intersection_8b7c2a root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1030, y: 74) notempty_1f8c1e root.Std_k98ojb.List.NotEmpty {}\n        list1_8d5c3f -> intersection_8b7c2a.left\n        list2_6f9d4f -> intersection_8b7c2a.right\n        intersection_8b7c2a.intersect -> notempty_1f8c1e.list\n        notempty_1f8c1e.isEmpty -> output_6d1d0f\n    }\n\n    \n\n    instance(x: -291, y: -5) common_element_3b1c9c root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if the two lists have at least one common element.\") has_common_element {\n        in(x: -488, y: -238, name: \"list1\") property(List) list1_6e2d6d\n        in(x: -498, y: 29, name: \"list2\") property(List) list2_7a4b4e\n\n        out(x: 1228, y: 5, name: \"output\") property(Bool) output_9b8b2c\n\n        instance(x: 750, y: 93) ifexpression_8d7b4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 332, y: 160, name: \"getter_6d8c1d\") getter_6d8c1d = previous\n        setter(x: 677, y: -313, name: \"setter_3e4b5c\") setter_3e4b5c = previous\n        instance(x: 319, y: -20) for_9d7f4e root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_3e4b5c\") setter_1b6c0f = previous\n        instance(x: -274, y: -35) getat_1f3a3d root.Std_k98ojb.List.GetAt {}\n        ifexpression_8d7b4c.else -> output_9b8b2c\n        ifexpression_8d7b4c.value -> output_9b8b2c\n        ifexpression_8d7b4c.then -> setter_3e4b5c.execute\n        list1_6e2d6d -> for_9d7f4e.items\n        for_9d7f4e.item -> ifexpression_8d7b4c.gen_2\n        for_9d7f4e.index -> ifexpression_8d7b4c.gen_0\n        getter_6d8c1d.value -> ifexpression_8d7b4c.gen_1\n        for_9d7f4e.onItem -> ifexpression_8d7b4c.execute\n        for_9d7f4e.done -> output_9b8b2c\n        for_9d7f4e.item -> setter_3e4b5c.new_value\n        list1_6e2d6d -> getat_1f3a3d.list\n        0 -> getat_1f3a3d.index\n        getat_1f3a3d.itemAtIndex -> setter_1b6c0f.new_value\n        list2_7a4b4e -> contains_7c2f6c.list\n        setter_1b6c0f.continue -> for_9d7f4e.reset\n        setter_3e4b5c.continue -> for_9d7f4e.next\n        instance(x: 1017, y: 146) contains_7c2f6c root.Std_k98ojb.List.Contains {}\n        contains_7c2f6c.is_contained -> ifexpression_8d7b4c.gen_2\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_9c8b2f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if two lists have at least one common element.\") common_element {\n        in(x: -386, y: -213, name: \"list1\") property(List) list1_5c7f8f\n        in(x: -399, y: -12, name: \"list2\") property(List) list2_6d5b0e\n\n        out(x: 1215, y: -210, name: \"output\") property(Bool) output_6d0e3e\n\n        instance(x: -154, y: -206) intersection_8b4e0e root.Std_k98ojb.Sets.Intersection {}\n        list1_5c7f8f -> intersection_8b4e0e.left\n        list2_6d5b0e -> intersection_8b4e0e.right\n        instance(x: 1072, y: -205) notempty_9b2b3e root.Std_k98ojb.List.NotEmpty {}\n        intersection_8b4e0e.intersect -> notempty_9b2b3e.list\n        notempty_9b2b3e.isEmpty -> output_6d0e3e\n    }\n\n    \n\n    instance(x: -74, y: -13) common_element_9c3c0c root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -389, y: -208, name: \"list1\") property(List) list1_8e6f8d\n        in(x: -391, y: 37, name: \"list2\") property(List) list2_9e9b1e\n\n        out(x: 1263, y: 3, name: \"output\") property(Bool) output_9c7e5f\n\n        instance(x: 1064, y: 66) ifexpression_5e9b6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == true\"\n        }\n        instance(x: 752, y: -20) for_7b8b64 root.Std_k98ojb.Std.For {}\n        instance(x: 331, y: -115) contains_3f6c6e root.Std_k98ojb.List.Contains {}\n        instance(x: 337, y: 140) not_1d0c92 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1057, y: 83) orelse_5b7f8d root.Std_k98ojb.Std.OrElse {}\n        list1_8e6f8d -> for_7b8b64.items\n        for_7b8b64.item -> contains_3f6c6e.item\n        list2_9e9b1e -> contains_3f6c6e.list\n        contains_3f6c6e.is_contained -> orelse_5b7f8d.first\n        true -> orelse_5b7f8d.second\n        orelse_5b7f8d.value -> ifexpression_5e9b6c.gen_2\n        for_7b8b64.index -> ifexpression_5e9b6c.gen_0\n        not_1d0c92.result -> ifexpression_5e9b6c.gen_1\n        for_7b8b64.onItem -> ifexpression_5e9b6c.execute\n        ifexpression_5e9b6c.value -> output_9c7e5f\n        ifexpression_5e9b6c.then -> not_1d0c92.execute\n        ifexpression_5e9b6c.else -> output_9c7e5f\n        for_7b8b64.done -> output_9c7e5f\n        not_1d0c92.input -> ifexpression_5e9b6c.value\n        for_7b8b64.reset -> output_9c7e5f\n    }\n\n    \n\n    instance(x: -4, y: -163) common_element_3c1c4d root.main.common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -465, y: -234, name: \"list\") property(List) list_5f9f5e\n\n        out(x: 1228, y: -215, name: \"output\") property(Bool) output_9e8d0e\n\n        instance(x: 752, y: 94) ifexpression_4e4c9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_6f7e1d\") getter_6f7e1d = previous\n        setter(x: 679, y: -313, name: \"setter_8e3b4e\") setter_8e3b4e = previous\n        instance(x: 321, y: -20) for_7f1a3e root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_8e3b4e\") setter_1c8b9e = previous\n        instance(x: -275, y: -35) getat_9d0f8f root.Std_k98ojb.List.GetAt {}\n        ifexpression_4e4c9f.else -> continue_7c8c0d\n        ifexpression_4e4c9f.value -> output_9e8d0e\n        ifexpression_4e4c9f.then -> setter_8e3b4e.execute\n        list_5f9f5e -> for_7f1a3e.items\n        for_7f1a3e.item -> ifexpression_4e4c9f.gen_2\n        for_7f1a3e.index -> ifexpression_4e4c9f.gen_0\n        getter_6f7e1d.value -> ifexpression_4e4c9f.gen_1\n        for_7f1a3e.onItem -> ifexpression_4e4c9f.execute\n        for_7f1a3e.done -> continue_7c8c0d\n        for_7f1a3e.item -> setter_8e3b4e.new_value\n        list_5f9f5e -> getat_9d0f8f.list\n        0 -> getat_9d0f8f.index\n        getat_9d0f8f.itemAtIndex -> setter_1c8b9e.new_value\n        setter_1c8b9e.continue -> for_7f1a3e.reset\n        setter_8e3b4e.continue -> for_7f1a3e.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_6a7a3f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -489, y: -6, name: \"list\") property(List) list_5e9c3e\n\n        out(x: 1248, y: 3, name: \"output\") property(Bool) output_3d4e54\n\n        instance(x: 760, y: 29) ifexpression_7f9f3e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current - previous == 1\"\n        }\n        instance(x: 321, y: -18) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 321, y: 160, name: \"getter_5f6d9e\") getter_5f6d9e = previous\n        instance(x: 679, y: -311, name: \"setter_7f7d7e\") setter_7f7d7e = previous\n        instance(x: -0, y: -120, name: \"setter_7f7d7e\") setter_5f7c7f = previous\n        instance(x: -276, y: -35) getat_4f4a9d root.Std_k98ojb.List.GetAt {}\n        ifexpression_7f9f3e.else -> setter_7f7d7e.execute\n        ifexpression_7f9f3e.value -> output_3d4e54\n        ifexpression_7f9f3e.then -> setter_5f7c7f.execute\n        list_5e9c3e -> for_d26972.items\n        for_d26972.item -> ifexpression_7f9f3e.gen_2\n        for_d26972.index -> ifexpression_7f9f3e.gen_0\n        getter_5f6d9e.value -> ifexpression_7f9f3e.gen_1\n        for_d26972.onItem -> ifexpression_7f9f3e.execute\n        for_d26972.done -> setter_7f7d7e.execute\n        for_d26972.item -> setter_5f7c7f.new_value\n        list_5e9c3e -> getat_4f4a9d.list\n        0 -> getat_4f4a9d.index\n        getat_4f4a9d.itemAtIndex -> setter_7f7d7e.new_value\n        setter_5f7c7f.continue -> for_d26972.next\n        setter_7f7d7e.continue -> for_d26972.reset\n    }\n\n    \n\n    instance(x: 4, y: -178) is_consecutive_9f6a8e root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -535, y: -237, name: \"list\") property(List) list_5b0f0d\n\n        out(x: 1237, y: -238, name: \"output\") property(Bool) output_6e5f79\n\n        instance(x: 754, y: -232) ifexpression_4c5d8f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 335, y: -5, name: \"getter_6a4e7c\") getter_6a4e7c = previous\n        setter(x: 679, y: -318, name: \"setter_6f9b4f\") setter_6f9b4f = previous\n        instance(x: 321, y: -134) for_5f2c5f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -236, name: \"setter_6f9b4f\") setter_7f3e5d = previous\n        instance(x: -275, y: -150) getat_4e7f3c root.Std_k98ojb.List.GetAt {}\n        ifexpression_4c5d8f.else -> setter_7f3e5d.continue\n        ifexpression_4c5d8f.value -> output_6e5f79\n        ifexpression_4c5d8f.then -> setter_6f9b4f.execute\n        list_5b0f0d -> for_5f2c5f.items\n        for_5f2c5f.item -> ifexpression_4c5d8f.gen_2\n        for_5f2c5f.index -> ifexpression_4c5d8f.gen_0\n        getter_6a4e7c.value -> ifexpression_4c5d8f.gen_1\n        for_5f2c5f.onItem -> ifexpression_4c5d8f.execute\n        for_5f2c5f.done -> setter_7f3e5d.continue\n        for_5f2c5f.item -> setter_6f9b4f.new_value\n        list_5b0f0d -> getat_4e7f3c.list\n        0 -> getat_4e7f3c.index\n        getat_4e7f3c.itemAtIndex -> setter_7f3e5d.new_value\n        setter_7f3e5d.continue -> for_5f2c5f.reset\n        setter_6f9b4f.continue -> for_5f2c5f.next\n    }\n\n    \n\n    instance(x: 11, y: -375) consecutive_2f4e0c root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -459, y: -209, name: \"list\") property(List) list_7a7f1f\n\n        out(x: 1163, y: -206, name: \"output\") property(Bool) output_7c6f4c\n\n        instance(x: 0, y: -207, name: \"is_sorted\") issort_list_8d9e8e root.main.issort_list {}\n        instance(x: 723, y: -206) not_8e6e8a root.Std_k98ojb.Logic.Not {}\n        instance(x: 1018, y: -208) map_7b5c9f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1120, y: -207) reduce_4b6c1a root.Std_k98ojb.Iteration.Reduce {\n            func() {\n                in(x: -35, y: -25, name: \"current\") property(Number) current_6f3c9c\n                in(x: -23, y: 79, name: \"acc\") property(Number) acc_3e5e8c\n\n                out(x: 705, y: 49, name: \"output\") property(Number) output_1c3f7c\n\n                instance(x: 226, y: 56) sub_3b7f9f root.Std_k98ojb.Math.Sub {}\n                instance(x: 463, y: 51) greaterthan_3e8f2f root.Std_k98ojb.Math.GreaterThan {}\n                sub_3b7f9f.second -> greaterthan_3e8f2f.right\n                current_6f3c9c -> sub_3b7f9f.first\n                acc_3e5e8c -> sub_3b7f9f.second\n                sub_3b7f9f.result -> greaterthan_3e8f2f.left\n                greaterthan_3e8f2f.result -> output_1c3f7c\n            }\n        }\n        instance(x: 1266, y: -207) and_7c1d7f root.Std_k98ojb.Logic.And {}\n        issort_list_8d9e8e.output -> and_7c1d7f.left\n        map_7b5c9f.output_list -> reduce_4b6c1a.items\n        reduce_4b6c1a.result -> and_7c1d7f.right\n        not_8e6e8a.result -> output_7c6f4c\n        and_7c1d7f.result -> not_8e6e8a.input\n        list_7a7f1f -> issort_list_8d9e8e.list_ec88cd\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_9c8b5e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4a8a3b\n\n            instance(x: 74, y: -23) sub_7c9f6e root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) greaterthan_4c3b8f root.Std_k98ojb.Math.GreaterThan {}\n            current_9c8b5e -> sub_7c9f6e.first\n            1 -> sub_7c9f6e.second\n            sub_7c9f6e.result -> greaterthan_4c3b8f.left\n            current_9c8b5e -> greaterthan_4c3b8f.right\n            greaterthan_4c3b8f.result -> bool_4a8a3b\n        } -> map_7b5c9f.handler\n    }\n\n    \n\n    instance(x: -67, y: -37) is_consecutive_9e4f1c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"list\") property(List) list_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) consecutive_numbers_3a4f5b root.main.consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -529, y: -234, name: \"list\") property(List) list_9c9b6f\n\n        out(x: 1258, y: -239, name: \"output\") property(Bool) output_3b5e0f\n\n        instance(x: 1067, y: -207) and_5b9d6a root.Std_k98ojb.Logic.And {}\n        instance(x: 1068, y: -65) or_3f9d5e root.Std_k98ojb.Logic.Or {}\n        instance(x: 1069, y: 84) not_6f3d0e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1070, y: 221) and_9a7d6f root.Std_k98ojb.Logic.And {}\n        instance(x: 0, y: -225) for_3c6f9d root.Std_k98ojb.Std.For {}\n        instance(x: 1056, y: -220) sub_1e7d9e root.Std_k98ojb.Math.Sub {}\n        instance(x: 1056, y: -85) greaterthan_7e3d8f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1056, y: 59) notequal_8f3d9f root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 1056, y: 196) greaterthan_9e3d9f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1056, y: 334) lessorequal_1f3d9f root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_9c9b6f -> for_3c6f9d.items\n        for_3c6f9d.index -> sub_1e7d9e.second\n        for_3c6f9d.item -> sub_1e7d9e.first\n        sub_1e7d9e.result -> greaterthan_7e3d8f.left\n        1 -> greaterthan_7e3d8f.right\n        greaterthan_7e3d8f.result -> notequal_8f3d9f.left\n        0 -> notequal_8f3d9f.right\n        notequal_8f3d9f.result -> or_3f9d5e.left\n        for_3c6f9d.index -> greaterthan_9e3d9f.left\n        for_3c6f9d.item -> greaterthan_9e3d9f.right\n        greaterthan_9e3d9f.result -> lessorequal_1f3d9f.left\n        1 -> lessorequal_1f3d9f.right\n        lessorequal_1f3d9f.result -> or_3f9d5e.right\n        or_3f9d5e.result -> and_5b9d6a.left\n        for_3c6f9d.index -> and_5b9d6a.right\n        0 -> and_5b9d6a.right\n        and_5b9d6a.result -> not_6f3d0e.input\n        not_6f3d0e.result -> and_9a7d6f.left\n        for_3c6f9d.index -> and_9a7d6f.right\n        list_9c9b6f.length - 1 -> and_9a7d6f.right\n        and_9a7d6f.result -> output_3b5e0f\n        for_3c6f9d.onItem -> sub_1e7d9e.execute\n        for_3c6f9d.done -> output_3b5e0f\n    }\n\n    \n\n    instance(x: -60, y: -16) consecutive_8a9d7f root.main.consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -493, y: -206, name: \"list\") property(List) list_9a5d7c\n\n        out(x: 1277, y: -209, name: \"output\") property(Bool) output_2a6b9e\n\n        instance(x: 767, y: -207) and_7e9e51 root.Std_k98ojb.Logic.And {}\n        instance(x: 1026, y: -208) or_9b6f4f root.Std_k98ojb.Logic.Or {}\n        instance(x: 1057, y: -207) not_8e2b0e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1039, y: -207) not_5b9d1c root.Std_k98ojb.Logic.Not {}\n        instance(x: -309, y: -207) filter_7f5b6c root.Std_k98ojb.Query.Filter {\n            where: \"index != 0 && index != length - 1\"\n        }\n        instance(x: -301, y: -207) map_5b7b4e root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1059, y: -208) lessThan_8f6f2a root.Std_k98ojb.Math.LessThan {}\n        instance(x: 1059, y: -207) greaterThan_7b5d1f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1058, y: -207) add_8f9b4f root.Std_k98ojb.Math.Add {}\n        instance(x: 1058, y: -208) sub_9b4e1f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1058, y: -207) sub_7e6f2a root.Std_k98ojb.Math.Sub {}\n        instance(x: 1059, y: -207) add_9b5d1f root.Std_k98ojb.Math.Add {}\n        instance(x: 1058, y: -207) lessThanOrEqual_8f6f2a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1058, y: -208) greaterThanOrEqual_7b5d1f root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        list_9a5d7c -> filter_7f5b6c.list\n        filter_7f5b6c.result -> map_5b7b4e.items\n        func() {\n            in(x: -36, y: -22, name: \"current\") property(Number) current_1f3f8e\n            in(x: -22, y: 82, name: \"_index\") property(Number) _index_7e9f3e\n\n            out(x: 698, y: 51, name: \"output\") property(Bool) output_1f3f8e\n\n            instance(x: 236, y: 57) add_1f3f8e root.Std_k98ojb.Math.Add {}\n            instance(x: 473, y: 54) lessThanOrEqual_7e9f3e root.Std_k98ojb.Math.LessThanOrEqual {}\n            instance(x: 236, y: 53) sub_7e9f3e root.Std_k98ojb.Math.Sub {}\n            instance(x: 473, y: 52) greaterThanOrEqual_1f3f8e root.Std_k98ojb.Math.GreaterThanOrEqual {}\n            1 -> add_1f3f8e.second\n            current_1f3f8e -> add_1f3f8e.first\n            1 -> sub_7e9f3e.second\n            current_1f3f8e -> sub_7e9f3e.first\n            add_1f3f8e.result -> lessThanOrEqual_7e9f3e.left\n            sub_7e9f3e.result -> lessThanOrEqual_7e9f3e.right\n            add_1f3f8e.result -> greaterThanOrEqual_1f3f8e.left\n            sub_7e9f3e.result -> greaterThanOrEqual_1f3f8e.right\n            lessThanOrEqual_7e9f3e.result -> output_1f3f8e\n            greaterThanOrEqual_1f3f8e.result -> and_7e9e51.left\n            lessThanOrEqual_7e9f3e.result -> and_7e9e51.right\n            _index_7e9f3e -> map_5b7b4e.index\n        } -> map_5b7b4e.handler\n        map_5b7b4e.output_list -> lessThan_8f6f2a.left\n        map_5b7b4e.output_list -> greaterThan_7b5d1f.left\n        map_5b7b4e.output_list -> add_8f9b4f.left\n        map_5b7b4e.output_list -> sub_9b4e1f.left\n        map_5b7b4e.output_list -> sub_7e6f2a.left\n        map_5b7b4e.output_list -> add_9b5d1f.left\n        list_9a5d7c -> lessThan_8f6f2a.right\n        list_9a5d7c -> greaterThan_7b5d1f.right\n        list_9a5d7c -> add_8f9b4f.right\n        list_9a5d7c -> sub_9b4e1f.right\n        list_9a5d7c -> sub_7e6f2a.right\n        list_9a5d7c -> add_9b5d1f.right\n        1 -> sub_9b4e1f.second\n        1 -> sub_7e6f2a.second\n        1 -> add_8f9b4f.second\n        1 -> add_9b5d1f.second\n        lessThan_8f6f2a.result -> or_9b6f4f.left\n        greaterThan_7b5d1f.result -> or_9b6f4f.right\n        add_8f9b4f.result -> lessThanOrEqual_8f6f2a.left\n        sub_9b4e1f.result -> lessThanOrEqual_8f6f2a.right\n        sub_7e6f2a.result -> greaterThanOrEqual_7b5d1f.left\n        add_9b5d1f.result -> greaterThanOrEqual_7b5d1f.right\n        lessThanOrEqual_8f6f2a.result -> and_7e9e51.right\n        greaterThanOrEqual_7b5d1f.result -> not_5b9d1c.input\n        or_9b6f4f.result -> not_8e2b0e.input\n        not_5b9d1c.result -> and_7e9e51.left\n        not_8e2b0e.result -> output_2a6b9e\n    }\n\n    \n\n    instance(x: -86, y: -4) is_consecutive_3b7c9d root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -505, y: -6, name: \"list\") property(List) list_6b4e2c\n\n        out(x: 1145, y: -1, name: \"output\") property(Bool) output_9b9b3b\n\n        instance(x: 1052, y: -8) all_8e1d6c root.Std_k98ojb.Query.All {\n            where: \"left + 1 == right\"\n        }\n        instance(x: 743, y: 29) zip_5b8b8c root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 346, y: -1) map_9d1e4e root.Std_k98ojb.Iteration.Map {}\n        instance(x: -15, y: -9) generateRange_9b3b1c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: -293, y: 33) filter_4a9c8f root.Std_k98ojb.Query.Filter {\n            where: \"it < length\"\n        }\n        instance(x: -288, y: -21) length_7c6a9c root.Std_k98ojb.List.Length {}\n        list_6b4e2c -> map_9d1e4e.items\n        func() {\n            in(x: -184, y: -16, name: \"current\") property(Number) current_3e2b6f\n\n            out(x: 523, y: -4, name: \"output\") property(Number) output_6f2a7c\n\n            instance(x: 223, y: -7) sub_3b4b4b root.Std_k98ojb.Math.Sub {}\n            0 -> sub_3b4b4b.second\n            current_3e2b6f -> sub_3b4b4b.first\n            sub_3b4b4b.result -> output_6f2a7c\n        } -> map_9d1e4e.handler\n        map_9d1e4e.output_list -> zip_5b8b8c.left\n        map_9d1e4e.output_list -> zip_5b8b8c.right\n        list_6b4e2c -> zip_5b8b8c.left\n        list_6b4e2c -> zip_5b8b8c.right\n        zip_5b8b8c.zipped -> all_8e1d6c.list\n        length_7c6a9c.length -> generateRange_9b3b1c.to\n        0 -> generateRange_9b3b1c.from\n        generateRange_9b3b1c.list -> filter_4a9c8f.list\n        all_8e1d6c.result -> output_9b9b3b\n    }\n\n    \n\n    instance(x: -62, y: -157) consecutive_numbers_3f8d4f root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -529, y: -213, name: \"list\") property(List) list_7a5c7f\n\n        out(x: 1279, y: -208, name: \"output\") property(Bool) output_8c6d0e\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_3e9b8c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_3e8f0c root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_4e8c1d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_4e9a0f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_7c9d2f\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_5a7b4c\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_3b9e6f\n\n            instance(x: 226, y: 56) modulo_5a9b2f root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_9a8f5f root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_5a9b2f.divisor\n            0 -> notequal_9a8f5f.right\n            notequal_9a8f5f.result -> output_3b9e6f\n            modulo_5a9b2f.result -> notequal_9a8f5f.left\n            _index_5a7b4c -> modulo_5a9b2f.value\n        } -> filter_3e9b8c.handler\n        list_7a5c7f -> filter_3e9b8c.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_7c8f9f\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_5a9f8e\n\n            instance(x: 74, y: -23) modulo_5a9f8e root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_7c9b2f root.Std_k98ojb.Logic.NotEqual {}\n            current_7c8f9f -> modulo_5a9f8e.value\n            2 -> modulo_5a9f8e.divisor\n            modulo_5a9f8e.result -> notequal_7c9b2f.left\n            0 -> notequal_7c9b2f.right\n            notequal_7c9b2f.result -> bool_5a9f8e\n        } -> map_4e8c1d.handler\n        filter_3e9b8c.output_list -> map_4e8c1d.items\n        map_4e8c1d.output_list -> contains_3e8f0c.list\n        false -> contains_3e8f0c.item\n        not_4e9a0f.result -> output_8c6d0e\n        contains_3e8f0c.is_contained -> not_4e9a0f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_5a8f2f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -533, y: -232, name: \"list\") property(List) list_4f1b4e\n\n        out(x: 1241, y: -211, name: \"output\") property(Bool) output_7e2f9e\n\n        instance(x: 1004, y: -210) and_5f3f1a root.Std_k98ojb.Logic.And {}\n        instance(x: 1048, y: -195) not_3e7c9f root.Std_k98ojb.Logic.Not {}\n        instance(x: 752, y: -214) ifexpression_3a5b2e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current - previous == 1\"\n        }\n        instance(x: 323, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -276, y: -35) getat_1e6f2e root.Std_k98ojb.List.GetAt {}\n        instance(x: -0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        ifexpression_3a5b2e.else -> not_3e7c9f.input\n        ifexpression_3a5b2e.value -> and_5f3f1a.right\n        not_3e7c9f.result -> output_7e2f9e\n        and_5f3f1a.left -> ifexpression_3a5b2e.value\n        list_4f1b4e -> for_d26972.items\n        for_d26972.item -> ifexpression_3a5b2e.gen_2\n        for_d26972.index -> ifexpression_3a5b2e.gen_0\n        getter_b280eb.value -> ifexpression_3a5b2e.gen_1\n        for_d26972.onItem -> ifexpression_3a5b2e.execute\n        for_d26972.done -> output_7e2f9e\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_4f1b4e -> getat_1e6f2e.list\n        0 -> getat_1e6f2e.index\n        getat_1e6f2e.itemAtIndex -> setter_9d4f1c.new_value\n        setter_9d4f1c.continue -> for_d26972.reset\n        ifexpression_3a5b2e.then -> setter_9d4f1c.execute\n        for_d26972.next -> setter_9d4f1c.continue\n    }\n\n    \n\n    instance(x: -78, y: 59) is_consecutive_5c2a49 root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -450, y: -234, name: \"list1\") property(List) list1_4f5e1d\n        in(x: -456, y: 30, name: \"list2\") property(List) list2_8d3b77\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_6f2f6f\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_7d7e9c\n\n        instance(x: 752, y: 93) ifexpression_8f9f6a root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_7a3e6d\") getter_7a3e6d = previous\n        setter(x: 679, y: -313, name: \"setter_8d1f1e\") setter_8d1f1e = previous\n        instance(x: 321, y: -20) for_8f5e7d root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_8d1f1e\") setter_5b2f7f = previous\n        instance(x: -275, y: -35) getat_9f6b4d root.Std_k98ojb.List.GetAt {}\n        ifexpression_8f9f6a.else -> continue_6f2f6f\n        ifexpression_8f9f6a.value -> output_7d7e9c\n        ifexpression_8f9f6a.then -> setter_8d1f1e.execute\n        list1_4f5e1d -> for_8f5e7d.items\n        for_8f5e7d.item -> ifexpression_8f9f6a.gen_2\n        for_8f5e7d.index -> ifexpression_8f9f6a.gen_0\n        getter_7a3e6d.value -> ifexpression_8f9f6a.gen_1\n        for_8f5e7d.onItem -> ifexpression_8f9f6a.execute\n        for_8f5e7d.done -> continue_6f2f6f\n        for_8f5e7d.item -> setter_8d1f1e.new_value\n        list1_4f5e1d -> getat_9f6b4d.list\n        0 -> getat_9f6b4d.index\n        getat_9f6b4d.itemAtIndex -> setter_5b2f7f.new_value\n        execute_6e7e3f -> setter_5b2f7f.execute\n        setter_5b2f7f.continue -> for_8f5e7d.reset\n        setter_8d1f1e.continue -> for_8f5e7d.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_8f7d5e root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -476, y: -224, name: \"list1\") property(List) list1_9c3e5f\n        in(x: -482, y: 23, name: \"list2\") property(List) list2_4e2e9e\n\n        out(x: 1270, y: -210, name: \"output\") property(Bool) output_8c3e9e\n\n        instance(x: -296, y: -209, name: \"only odd indexes\") filter_9f7c0d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 848, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_9f7c0d.handler\n        list1_9c3e5f -> filter_9f7c0d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_9f7c0d.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8c3e9e\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") sublist {\n        in(x: -435, y: -185, name: \"list1\") property(List) list1_1f846b\n        in(x: -443, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1199, y: -170, name: \"output\") property(Bool) output_9b8f1f\n\n        instance(x: -294, y: -174, name: \"iterate list1\") for_5d4c2f root.Std_k98ojb.Std.For {}\n        instance(x: 844, y: -174) contains_7e7e5c root.Std_k98ojb.List.Contains {}\n        instance(x: 245, y: -172, name: \"iterate list2\") for_6e3c71 root.Std_k98ojb.Std.For {}\n        instance(x: 1059, y: -166) not_9b7d1e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1058, y: -48) and_5f7c8f root.Std_k98ojb.Logic.And {}\n        instance(x: 1057, y: 66) contains_3c5b8c root.Std_k98ojb.List.Contains {}\n        instance(x: 1056, y: 169) greaterthan_5f6b3f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1055, y: 272) sub_9e9b8d root.Std_k98ojb.Math.Sub {}\n        func() {\n            in(x: -29, y: -24, name: \"current\") property(Number) _index_170471\n            in(x: -22, y: 78, name: \"_index\") property(Number) _index_769593\n\n            out(x: 706, y: 48, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 227, y: 55) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 464, y: 50) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> for_5d4c2f.handler\n        list1_1f846b -> for_5d4c2f.items\n        for_5d4c2f.item -> contains_7e7e5c.list\n        for_5d4c2f.index -> contains_7e7e5c.item\n        list2_c62075 -> contains_7e7e5c.item\n        contains_7e7e5c.is_contained -> for_6e3c71.trigger\n        for_5d4c2f.onItem -> for_6e3c71.items\n        for_6e3c71.item -> contains_3c5b8c.list\n        for_5d4c2f.index -> contains_3c5b8c.item\n        list2_c62075 -> contains_3c5b8c.item\n        contains_3c5b8c.is_contained -> greaterthan_5f6b3f.left\n        for_6e3c71.index -> greaterthan_5f6b3f.right\n        greaterthan_5f6b3f.result -> and_5f7c8f.left\n        for_6e3c71.index -> sub_9e9b8d.first\n        for_5d4c2f.index -> sub_9e9b8d.second\n        sub_9e9b8d.result -> and_5f7c8f.right\n        and_5f7c8f.result -> not_9b7d1e.input\n        for_6e3c71.done -> for_5d4c2f.next\n        not_9b7d1e.result -> output_9b8f1f\n        for_5d4c2f.done -> contains_7e7e5c.trigger\n    }\n\n    \n\n    instance(x: -83, y: 53) sublist_5b9b1f root.main.sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -459, y: -236, name: \"list1\") property(List) list1_7f1f6c\n        in(x: -477, y: 28, name: \"list2\") property(List) list2_6f4c6e\n\n        out(x: 1232, y: 6, name: \"output\") property(Bool) output_8e6f4d\n\n        instance(x: 768, y: 84) find_8f8e6e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 1215, y: 140) not_7c8e5e root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: -0, name: \"iterate over list1\") for_5c5a0f root.Std_k98ojb.Std.For {}\n        instance(x: -279, y: -24, name: \"iterate over list2\") for_6e8f6c root.Std_k98ojb.Std.For {}\n        instance(x: 1058, y: -204) not_3e5e8e root.Std_k98ojb.Logic.Not {}\n        instance(x: 246, y: -206, name: \"compare lists\") map_8e8f6c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 847, y: -208) contains_3e5e8e root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -23, name: \"current\") property(Number) _index_8e5e8e\n            in(x: -22, y: 79, name: \"_index\") property(Number) _index_5e8f6c\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_5e8f6c\n\n            instance(x: 226, y: 56) modulo_8e5e8e root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_8e5e8e root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_8e5e8e.divisor\n            0 -> notequal_8e5e8e.right\n            notequal_8e5e8e.result -> output_5e8f6c\n            modulo_8e5e8e.result -> notequal_8e5e8e.left\n            _index_5e8f6c -> modulo_8e5e8e.value\n        } -> for_5c5a0f.handler\n        list1_7f1f6c -> for_5c5a0f.items\n        for_5c5a0f.item -> find_8f8e6e.predicate\n        for_5c5a0f.index -> find_8f8e6e.index\n        func() {\n            in(x: -194, y: -12, name: \"current\") property(Number) current_5e8f6c\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_8e5e8e\n\n            instance(x: 74, y: -23) modulo_5e8f6c root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_5e8f6c root.Std_k98ojb.Logic.NotEqual {}\n            current_5e8f6c -> modulo_5e8f6c.value\n            2 -> modulo_5e8f6c.divisor\n            modulo_5e8f6c.result -> notequal_5e8f6c.left\n            0 -> notequal_5e8f6c.right\n            notequal_5e8f6c.result -> bool_8e5e8e\n        } -> for_6e8f6c.handler\n        list2_6f4c6e -> for_6e8f6c.items\n        for_6e8f6c.item -> map_8e8f6c.handler\n        for_6e8f6c.index -> map_8e8f6c.index\n        for_6e8f6c.item -> map_8e8f6c.new_value\n        map_8e8f6c.output_list -> contains_3e5e8e.list\n        find_8f8e6e.item -> contains_3e5e8e.item\n        contains_3e5e8e.is_contained -> not_3e5e8e.input\n        not_3e5e8e.result -> for_5c5a0f.continue\n        find_8f8e6e.done -> not_7c8e5e.input\n        not_7c8e5e.result -> output_8e6f4d\n    }\n\n    \n\n    instance(x: -288, y: -6) is_sublist_5e8f6c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") sublist {\n        in(x: -427, y: -224, name: \"list1\") property(List) list1_9f4d5c\n        in(x: -435, y: -72, name: \"list2\") property(List) list2_1f5f0c\n\n        out(x: 1107, y: -137, name: \"output\") property(Bool) output_8f8f8f\n\n        instance(x: -273, y: -192, name: \"iterate over list1\") for_6d5d7e root.Std_k98ojb.Std.For {}\n        instance(x: 347, y: -186) slice_3e1d3d root.Std_k98ojb.List.Slice {}\n        instance(x: 640, y: -188) contains_9b6d6d root.Std_k98ojb.List.Contains {}\n        instance(x: 937, y: -187) greaterthan_9e9c7e root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1030, y: -185) ifexpression_1b8e2c root.Std_k98ojb.Std.IfExpression {}\n        func() {\n            in(x: -23, y: -30, name: \"current\") property(Number) index_2c3c8d\n            in(x: -16, y: 54, name: \"index\") property(Number) index_8b7b5b\n\n            out(x: 665, y: 34, name: \"output\") property(Bool) output_5c4e7e\n\n            instance(x: 229, y: 41) add_5c3d7e root.Std_k98ojb.List.Add {}\n            instance(x: 455, y: 39) length_5e7c3d root.Std_k98ojb.List.Length {}\n            instance(x: 666, y: 40) lessthan_9c8d7e root.Std_k98ojb.Math.LessThan {}\n            instance(x: 761, y: 38) and_3c8d7e root.Std_k98ojb.Logic.And {}\n            index_8b7b5b -> add_5c3d7e.new_value\n            list1_9f4d5c -> add_5c3d7e.list\n            add_5c3d7e.listWithItem -> slice_3e1d3d.list\n            index_2c3c8d -> slice_3e1d3d.start\n            length_5e7c3d.list -> greaterthan_9e9c7e.right\n            index_2c3c8d -> length_5e7c3d.list\n            0 -> greaterthan_9e9c7e.left\n            greaterthan_9e9c7e.result -> lessthan_9c8d7e.right\n            length_5e7c3d.length -> lessthan_9c8d7e.left\n            0 -> lessthan_9c8d7e.right\n            lessthan_9c8d7e.result -> and_3c8d7e.left\n            contains_9b6d6d.is_contained -> and_3c8d7e.right\n            and_3c8d7e.result -> output_5c4e7e\n            slice_3e1d3d.slice -> contains_9b6d6d.list\n            list2_1f5f0c -> contains_9b6d6d.item\n        } -> ifexpression_1b8e2c.handler\n        list1_9f4d5c -> for_6d5d7e.items\n        for_6d5d7e.item -> ifexpression_1b8e2c.gen_1\n        for_6d5d7e.index -> ifexpression_1b8e2c.gen_0\n        ifexpression_1b8e2c.result -> output_8f8f8f\n        for_6d5d7e.onItem -> ifexpression_1b8e2c.execute\n        for_6d5d7e.done -> output_8f8f8f\n    }\n\n    \n\n    instance(x: -147, y: -109) sublist_3f7f8f root.main.sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") sublist {\n        in(x: -305, y: -234, name: \"list1\") property(List) list1_9b6f8f\n        in(x: -309, y: -46, name: \"list2\") property(List) list2_5e4f3f\n\n        out(x: 1115, y: -111, name: \"output\") property(Bool) output_5b2f5d\n\n        instance(x: -165, y: -210, name: \"is empty\") notempty_1a8e4f root.Std_k98ojb.List.NotEmpty {}\n        instance(x: -163, y: -49, name: \"is empty\") notempty_9f1d7c root.Std_k98ojb.List.NotEmpty {}\n        instance(x: -161, y: -137, name: \"list1 length\") length_8b2d3c root.Std_k98ojb.List.Length {}\n        instance(x: -161, y: -50, name: \"list2 length\") length_4e1e3d root.Std_k98ojb.List.Length {}\n        instance(x: -155, y: -5, name: \"for\") for_5d9f1e root.Std_k98ojb.Std.For {}\n        instance(x: 1028, y: -117) equal_6d4e92 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1057, y: -119) and_9a9f3d root.Std_k98ojb.Logic.And {}\n        instance(x: 1069, y: -121) if_8f3f2d root.Std_k98ojb.Std.If {}\n        instance(x: 1099, y: -123) contains_6b2f1d root.Std_k98ojb.List.Contains {}\n        instance(x: 1127, y: -125) if_1a8e4f root.Std_k98ojb.Std.If {}\n        instance(x: 1157, y: -127) getat_9f1d7c root.Std_k98ojb.List.GetAt {}\n        instance(x: 1185, y: -129) slice_8b2d3c root.Std_k98ojb.List.Slice {}\n        instance(x: 1213, y: -131) contains_4e1e3d root.Std_k98ojb.List.Contains {}\n        list1_9b6f8f -> notempty_1a8e4f.list\n        list2_5e4f3f -> notempty_9f1d7c.list\n        list1_9b6f8f -> length_8b2d3c.list\n        list2_5e4f3f -> length_4e1e3d.list\n        for_5d9f1e.items -> list1_9b6f8f\n        0 -> for_5d9f1e.trigger\n        and_9a9f3d.left -> equal_6d4e92.result\n        contains_6b2f1d.is_contained -> and_9a9f3d.right\n        contains_6b2f1d.item -> list2_5e4f3f\n        contains_6b2f1d.list -> slice_8b2d3c.slice\n        for_5d9f1e.index -> getat_9f1d7c.index\n        list1_9b6f8f -> getat_9f1d7c.list\n        getat_9f1d7c.itemAtIndex -> slice_8b2d3c.start\n        length_8b2d3c.length -> slice_8b2d3c.end\n        list2_5e4f3f -> contains_4e1e3d.list\n        slice_8b2d3c.slice -> contains_4e1e3d.item\n        and_9a9f3d.result -> if_8f3f2d.predicate\n        for_5d9f1e.onItem -> if_8f3f2d.execute\n        if_8f3f2d.then -> for_5d9f1e.next\n        if_8f3f2d.else -> if_1a8e4f.execute\n        if_8f3f2d.value -> if_1a8e4f.predicate\n        contains_4e1e3d.is_contained -> if_1a8e4f.then\n        if_1a8e4f.else -> contains_4e1e3d.execute\n        if_1a8e4f.value -> equal_6d4e92.left\n        1 -> equal_6d4e92.right\n        notempty_1a8e4f.isEmpty -> if_1a8e4f.predicate\n        if_1a8e4f.then -> contains_4e1e3d.execute\n        if_1a8e4f.value -> contains_4e1e3d.is_contained\n        contains_4e1e3d.is_contained -> equal_6d4e92.left\n        if_1a8e4f.value -> output_5b2f5d\n        if_1a8e4f.else -> output_5b2f5d\n        for_5d9f1e.done -> if_1a8e4f.else\n        notempty_9f1d7c.isEmpty -> if_1a8e4f.predicate\n        if_1a8e4f.value -> output_5b2f5d\n    }\n\n    \n\n    instance(x: -117, y: -18) sublist_1a8e4f root.main.sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -493, y: -206, name: \"list1\") property(List) list1_5d4c8e\n        in(x: -497, y: 23, name: \"list2\") property(List) list2_6b9e6f\n\n        out(x: 1280, y: -207, name: \"output\") property(Bool) output_6a8d6d\n\n        instance(x: -300, y: -207, name: \"get all sublists of list1\") map_5b9c4c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 849, y: -209) contains_1e5b5c root.Std_k98ojb.List.Contains {}\n        instance(x: 1035, y: -207) not_1c2b8f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -33, y: -25, name: \"current\") property(Number) _index_1e3f3e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_1e5c6c\n\n            out(x: 704, y: 49, name: \"output\") property(List) output_5b8b5c\n\n            instance(x: 223, y: 56) slice_4c2c7c root.Std_k98ojb.List.Slice {}\n            instance(x: 460, y: 51) add_4a1c5c root.Std_k98ojb.List.Add {}\n            instance(x: 680, y: 55) generateRange_3b2b7c root.Std_k98ojb.List.GenerateRange {}\n            _index_1e5c6c -> slice_4c2c7c.start\n            _index_1e5c6c -> generateRange_3b2b7c.from\n            generateRange_3b2b7c.list -> add_4a1c5c.list\n            1 -> add_4a1c5c.item\n            list1_5d4c8e -> slice_4c2c7c.list\n            add_4a1c5c.listWithItem -> output_5b8b5c\n            _index_1e5c6c -> generateRange_3b2b7c.to\n            0 -> slice_4c2c7c.end\n        } -> map_5b9c4c.handler\n        list1_5d4c8e -> map_5b9c4c.items\n        map_5b9c4c.output_list -> contains_1e5b5c.list\n        list2_6b9e6f -> contains_1e5b5c.item\n        not_1c2b8f.result -> output_6a8d6d\n        contains_1e5b5c.is_contained -> not_1c2b8f.input\n    }\n\n    \n\n    instance(x: -283, y: -10) is_sublist_1c5b8f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -445, y: -230, name: \"list1\") property(List) list1_8c6e2d\n        in(x: -455, y: -5, name: \"list2\") property(List) list2_1b7e4f\n\n        out(x: 1240, y: -110, name: \"output\") property(Bool) output_4d0b0b\n\n        instance(x: -304, y: -105, name: \"list1 length\") length_1c1b8e root.Std_k98ojb.List.Length {}\n        instance(x: -303, y: -213, name: \"list2 length\") length_4e3d0d root.Std_k98ojb.List.Length {}\n        instance(x: 849, y: -107) contains_3b1c3f root.Std_k98ojb.List.Contains {}\n        instance(x: 248, y: -108, name: \"slice list1\") map_3e5e8d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -102) and_7c6b9c root.Std_k98ojb.Logic.And {}\n        instance(x: 248, y: -212, name: \"slice list1\") map_9a1b9c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -207) greaterthan_9c3d6d root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 248, y: -32, name: \"index\") count_5a3b3a root.Std_k98ojb.Std.Count {}\n        instance(x: 1058, y: -27) sub_1f6a7f root.Std_k98ojb.Math.Sub {}\n        func() {\n            in(x: -27, y: -22, name: \"current\") property(Number) index_9b9d2e\n\n            out(x: 705, y: 51, name: \"output\") property(List) output_6f9a4d\n\n            instance(x: 226, y: 56) slice_1e6b1e root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 50) add_1b7e9d root.Std_k98ojb.List.Add {}\n            instance(x: 679, y: -13) getat_3c7d0e root.Std_k98ojb.List.GetAt {}\n            instance(x: 679, y: -114) add_1c5a4f root.Std_k98ojb.List.Add {}\n            instance(x: 679, y: -214) getat_1f6c7e root.Std_k98ojb.List.GetAt {}\n            instance(x: 679, y: -314) add_7f1b4f root.Std_k98ojb.List.Add {}\n            instance(x: 679, y: -414) getat_4f9e6e root.Std_k98ojb.List.GetAt {}\n            instance(x: 679, y: -514) add_6f7e9e root.Std_k98ojb.List.Add {}\n            instance(x: 679, y: -614) getat_9c1b7e root.Std_k98ojb.List.GetAt {}\n            instance(x: 679, y: -714) add_1e6b1e root.Std_k98ojb.List.Add {}\n            instance(x: 679, y: -814) getat_1f6c7e root.Std_k98ojb.List.GetAt {}\n            0 -> getat_3c7d0e.index\n            list1_8c6e2d -> getat_3c7d0e.list\n            getat_3c7d0e.itemAtIndex -> add_1b7e9d.item\n            add_1b7e9d.listWithItem -> slice_1e6b1e.list\n            index_9b9d2e -> slice_1e6b1e.end\n            0 -> slice_1e6b1e.start\n            list1_8c6e2d -> slice_1e6b1e.items\n            slice_1e6b1e.slice -> output_6f9a4d\n            index_9b9d2e -> getat_1c5a4f.index\n            list1_8c6e2d -> getat_1c5a4f.list\n            getat_1c5a4f.itemAtIndex -> add_7f1b4f.item\n            add_7f1b4f.listWithItem -> slice_1e6b1e.list\n            index_9b9d2e -> slice_1e6b1e.end\n            1 -> slice_1e6b1e.start\n            list1_8c6e2d -> slice_1e6b1e.items\n            slice_1e6b1e.slice -> output_6f9a4d\n            index_9b9d2e -> getat_4f9e6e.index\n            list1_8c6e2d -> getat_4f9e6e.list\n            getat_4f9e6e.itemAtIndex -> add_6f7e9e.item\n            add_6f7e9e.listWithItem -> slice_1e6b1e.list\n            index_9b9d2e -> slice_1e6b1e.end\n            2 -> slice_1e6b1e.start\n            list1_8c6e2d -> slice_1e6b1e.items\n            slice_1e6b1e.slice -> output_6f9a4d\n            index_9b9d2e -> getat_9c1b7e.index\n            list1_8c6e2d -> getat_9c1b7e.list\n            getat_9c1b7e.itemAtIndex -> add_1e6b1e.item\n            add_1e6b1e.listWithItem -> slice_1e6b1e.list\n            index_9b9d2e -> slice_1e6b1e.end\n            3 -> slice_1e6b1e.start\n            list1_8c6e2d -> slice_1e6b1e.items\n            slice_1e6b1e.slice -> output_6f9a4d\n            index_9b9d2e -> getat_1f6c7e.index\n            list1_8c6e2d -> getat_1f6c7e.list\n            getat_1f6c7e.itemAtIndex -> add_1c5a4f.item\n            add_1c5a4f.listWithItem -> slice_1e6b1e.list\n            index_9b9d2e -> slice_1e6b1e.end\n            4 -> slice_1e6b1e.start\n            list1_8c6e2d -> slice_1e6b1e.items\n            slice_1e6b1e.slice -> output_6f9a4d\n        } -> map_3e5e8d.handler\n        func() {\n            in(x: -27, y: -22, name: \"current\") property(Number) index_7c6b9c\n\n            out(x: 705, y: 51, name: \"output\") property(List) output_6f9a4d\n\n            instance(x: 226, y: 56) slice_1e6b1e root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 50) add_1b7e9d root.Std_k98ojb.List.Add {}\n            instance(x: 679, y: -13) getat_3c7d0e root.Std_k98ojb.List.GetAt {}\n            instance(x: 679, y: -114) add_1c5a4f root.Std_k98ojb.List.Add {}\n            instance(x: 679, y: -214) getat_1f6c7e root.Std_k98ojb.List.GetAt {}\n            instance(x: 679, y: -314) add_7f1b4f root.Std_k98ojb.List.Add {}\n            instance(x: 679, y: -414) getat_4f9e6e root.Std_k98ojb.List.GetAt {}\n            instance(x: 679, y: -514) add_6f7e9e root.Std_k98ojb.List.Add {}\n            instance(x: 679, y: -614) getat_9c1b7e root.Std_k98ojb.List.GetAt {}\n            instance(x: 679, y: -714) add_1e6",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -427, y: -213, name: \"list1\") property(List) list1_5c7f1f\n        in(x: -433, y: -33, name: \"list2\") property(List) list2_6d0b0e\n\n        out(x: 1215, y: -198, name: \"output\") property(Bool) output_6d0b0e\n\n        instance(x: -260, y: -206, name: \"list1 length\") length_7f1b1e root.Std_k98ojb.List.Length {}\n        instance(x: -262, y: -36, name: \"list2 length\") length_8d6f6f root.Std_k98ojb.List.Length {}\n        instance(x: -88, y: -201, name: \"find sublist\") find_1d8c6c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 1057, y: -197) not_2c1e5e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1058, y: -77) greaterthan_8f6e8e root.Std_k98ojb.Math.GreaterThan {}\n        func() {\n            in(x: -22, y: -23, name: \"current\") property(List) current_5c7f1f\n\n            out(x: 695, y: -8, name: \"output\") property(Bool) output_8f6e8e\n\n            instance(x: 226, y: -3) greaterthan_8f6e8e_1 root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: 464, y: -5) notequal_8d6f6f root.Std_k98ojb.Logic.NotEqual {}\n            length_8d6f6f.length -> greaterthan_8f6e8e_1.left\n            current_5c7f1f -> greaterthan_8f6e8e_1.right\n            greaterthan_8f6e8e_1.result -> notequal_8d6f6f.left\n            0 -> notequal_8d6f6f.right\n            notequal_8d6f6f.result -> output_8f6e8e\n        } -> find_1d8c6c.predicate\n        list1_5c7f1f -> find_1d8c6c.items\n        func() {\n            in(x: -193, y: -18, name: \"current\") property(List) current_6d0b0e\n\n            out(x: 522, y: -30, name: \"output\") property(Bool) output_1d8c6c\n\n            instance(x: 74, y: -27) contains_6d0b0e root.Std_k98ojb.List.Contains {}\n            instance(x: 285, y: -29) and_8f6e8e root.Std_k98ojb.Logic.And {}\n            instance(x: 494, y: -31) greaterthan_7f1b1e root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: 720, y: -33) greaterthan_8f6e8e_2 root.Std_k98ojb.Math.GreaterThan {}\n            greaterthan_7f1b1e.left -> greaterthan_8f6e8e_2.left\n            current_6d0b0e -> greaterthan_7f1b1e.right\n            length_7f1b1e.length -> greaterthan_7f1b1e.left\n            greaterthan_8f6e8e_2.left -> greaterthan_8f6e8e_2.right\n            greaterthan_8f6e8e_2.result -> and_8f6e8e.right\n            contains_6d0b0e.list -> and_8f6e8e.left\n            list2_6d0b0e -> contains_6d0b0e.item\n            and_8f6e8e.result -> output_1d8c6c\n        } -> find_1d8c6c.handler\n        find_1d8c6c.item -> greaterthan_8f6e8e.left\n        list1_5c7f1f -> greaterthan_8f6e8e.right\n        greaterthan_8f6e8e.result -> not_2c1e5e.input\n        not_2c1e5e.result -> output_6d0b0e\n    }\n\n    \n\n    instance(x: -82, y: -2) is_sublist_7f1b1e root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -570, y: -232, name: \"list1\") property(List) list1_1f846b\n        in(x: -570, y: -38, name: \"list2\") property(List) list2_c62075\n\n        out(x: 557, y: -157, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -320, y: -196, name: \"list1 length\") length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: -319, y: -97, name: \"list2 length\") length_9f9c63 root.Std_k98ojb.List.Length {}\n        instance(x: -320, y: -4, name: \"sublist length\") length_9c3d8e root.Std_k98ojb.List.Length {}\n        instance(x: -319, y: 93, name: \"difference\") sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -320, y: 200, name: \"generate range\") generateRange_9b7f5f root.Std_k98ojb.List.GenerateRange {}\n        instance(x: -318, y: 300, name: \"slice\") slice_1f7a8f root.Std_k98ojb.List.Slice {}\n        instance(x: -49, y: -157, name: \"contains\") contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -49, y: -52, name: \"contains2\") contains_6e7f0d root.Std_k98ojb.List.Contains {}\n        list1_1f846b -> length_8166b0.list\n        list2_c62075 -> length_9f9c63.list\n        list2_c62075 -> length_9c3d8e.list\n        length_8166b0.length -> sub_852f2e.first\n        length_9f9c63.length -> sub_852f2e.second\n        sub_852f2e.result -> generateRange_9b7f5f.from\n        0 -> generateRange_9b7f5f.to\n        generateRange_9b7f5f.list -> slice_1f7a8f.list\n        generateRange_9b7f5f.list -> contains_32727d.list\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_efbc78\n\n            instance(x: 226, y: 56) add_1a9c0f root.Std_k98ojb.List.Add {}\n            instance(x: 463, y: 51) add_7f5b67 root.Std_k98ojb.List.Add {}\n            instance(x: 700, y: 55) slice_5f2d1c root.Std_k98ojb.List.Slice {}\n            _index_170471 -> add_1a9c0f.new_value\n            list1_1f846b -> add_1a9c0f.list\n            add_1a9c0f.listWithItem -> add_7f5b67.list\n            _index_170471 -> slice_5f2d1c.start\n            length_9c3d8e.length -> slice_5f2d1c.end\n            add_7f5b67.listWithItem -> slice_5f2d1c.list\n            slice_5f2d1c.slice -> output_efbc78\n        } -> slice_1f7a8f.handler\n        slice_1f7a8f.slice -> contains_32727d.item\n        list2_c62075 -> contains_6e7f0d.list\n        contains_32727d.is_contained -> output_c7097f\n        slice_1f7a8f.slice -> contains_6e7f0d.item\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_9e8b6a root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") missing {\n        in(x: -282, y: -2, name: \"list\") property(List) list_ae4f5e\n\n        out(x: 589, y: -1, name: \"number\") property(Number) number_3a0e8e\n\n        instance(x: 0, y: 0) find_4e2b5d root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -109, y: 38, name: \"elem\") property(Number) elem_9d7e9d\n\n            out(x: 517, y: 46, name: \"bool\") property(Bool) bool_ae9c0e\n\n            instance(x: 88, y: 30) sub_10e6c5 root.Std_k98ojb.Math.Sub {}\n            instance(x: 309, y: 36) greaterthan_7f1f3d root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: 310, y: 94) notequal_8c0c0c root.Std_k98ojb.Logic.NotEqual {}\n            1 -> sub_10e6c5.second\n            index -> sub_10e6c5.first\n            sub_10e6c5.result -> greaterthan_7f1f3d.left\n            elem_9d7e9d -> greaterthan_7f1f3d.right\n            greaterthan_7f1f3d.result -> notequal_8c0c0c.left\n            0 -> notequal_8c0c0c.right\n            notequal_8c0c0c.result -> bool_ae9c0e\n        } -> find_4e2b5d.predicate\n        list_ae4f5e -> find_4e2b5d.items\n        find_4e2b5d.item -> number_3a0e8e\n    }\n\n    \n\n    instance(x: -56, y: 529) missing_2c8e3d root.main.missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -281, y: -193, name: \"list\") property(List) list_ai\n\n        out(x: 46, y: 158, name: \"min\") property(Number) min_ai\n\n        instance(x: -105, y: -110) ifexpression_9b9e8e root.Std_k98ojb.Std.IfExpression {\n            expression: \"len == 0\"\n        }\n        instance(x: -105, y: -110) ifexpression_6e1f4d root.Std_k98ojb.Std.IfExpression {\n            expression: \"len == 1\"\n        }\n        instance(x: -105, y: -110) ifexpression_5c1b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"first + 1 != second\"\n        }\n        instance(x: -105, y: -110) ifexpression_3a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"first + 1 != len\"\n        }\n        instance(x: -105, y: -110) ifexpression_4a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[first + 1] != second\"\n        }\n        instance(x: -105, y: -110) ifexpression_5a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"first + 2 != len\"\n        }\n        instance(x: -105, y: -110) ifexpression_6a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[first + 2] != second + 1\"\n        }\n        instance(x: -105, y: -110) ifexpression_7a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"first + 3 != len\"\n        }\n        instance(x: -105, y: -110) ifexpression_8a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[first + 3] != second + 2\"\n        }\n        instance(x: -105, y: -110) ifexpression_9a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"first + 4 != len\"\n        }\n        instance(x: -105, y: -110) ifexpression_10a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[first + 4] != second + 3\"\n        }\n        instance(x: -105, y: -110) ifexpression_11a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"first + 5 != len\"\n        }\n        instance(x: -105, y: -110) ifexpression_12a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[first + 5] != second + 4\"\n        }\n        instance(x: -105, y: -110) ifexpression_13a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"first + 6 != len\"\n        }\n        instance(x: -105, y: -110) ifexpression_14a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[first + 6] != second + 5\"\n        }\n        instance(x: -105, y: -110) ifexpression_15a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"first + 7 != len\"\n        }\n        instance(x: -105, y: -110) ifexpression_16a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[first + 7] != second + 6\"\n        }\n        instance(x: -105, y: -110) ifexpression_17a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"first + 8 != len\"\n        }\n        instance(x: -105, y: -110) ifexpression_18a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[first + 8] != second + 7\"\n        }\n        instance(x: -105, y: -110) ifexpression_19a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"first + 9 != len\"\n        }\n        instance(x: -105, y: -110) ifexpression_20a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[first + 9] != second + 8\"\n        }\n        instance(x: -105, y: -110) ifexpression_21a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"first + 10 != len\"\n        }\n        instance(x: -105, y: -110) ifexpression_22a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[first + 10] != second + 9\"\n        }\n        instance(x: -105, y: -110) ifexpression_23a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"first + 11 != len\"\n        }\n        instance(x: -105, y: -110) ifexpression_24a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[first + 11] != second + 10\"\n        }\n        instance(x: -105, y: -110) ifexpression_25a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"first + 12 != len\"\n        }\n        instance(x: -105, y: -110) ifexpression_26a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[first + 12] != second + 11\"\n        }\n        instance(x: -105, y: -110) ifexpression_27a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"first + 13 != len\"\n        }\n        instance(x: -105, y: -110) ifexpression_28a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[first + 13] != second + 12\"\n        }\n        instance(x: -105, y: -110) ifexpression_29a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"first + 14 != len\"\n        }\n        instance(x: -105, y: -110) ifexpression_30a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[first + 14] != second + 13\"\n        }\n        instance(x: -105, y: -110) ifexpression_31a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"first + 15 != len\"\n        }\n        instance(x: -105, y: -110) ifexpression_32a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[first + 15] != second + 14\"\n        }\n        instance(x: -105, y: -110) ifexpression_33a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"first + 16 != len\"\n        }\n        instance(x: -105, y: -110) ifexpression_34a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[first + 16] != second + 15\"\n        }\n        instance(x: -105, y: -110) ifexpression_35a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"first + 17 != len\"\n        }\n        instance(x: -105, y: -110) ifexpression_36a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[first + 17] != second + 16\"\n        }\n        instance(x: -105, y: -110) ifexpression_37a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"first + 18 != len\"\n        }\n        instance(x: -105, y: -110) ifexpression_38a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[first + 18] != second + 17\"\n        }\n        instance(x: -105, y: -110) ifexpression_39a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"first + 19 != len\"\n        }\n        instance(x: -105, y: -110) ifexpression_40a9b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[first + 19] != second + 18\"\n        }\n        instance(x: -105, y: -110) ifexpression_41a9b5d",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -281, y: -194, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) expression_7b6f48 root.Std_k98ojb.Math.Expression {\n                expression: \"it - index != 1\"\n            }\n            instance(x: 310, y: 35) sub_2c1d7e root.Std_k98ojb.Math.Sub {}\n            index -> sub_2c1d7e.first\n            elem_9f6850 -> sub_2c1d7e.second\n            sub_2c1d7e.result -> expression_7b6f48.gen_0\n            expression_7b6f48.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -280, y: -223, name: \"list\") property(List) list_7f1f9f\n\n        out(x: 599, y: -1, name: \"number\") property(Number) number_7c6f4e\n\n        instance(x: 0, y: 0) find_1e8c4f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_5c6d8e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_4b8d72\n\n            instance(x: 89, y: 29) sub_4f6d2a root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_6b6d1f root.Std_k98ojb.Logic.NotEqual {}\n            1 -> sub_4f6d2a.second\n            elem_5c6d8e -> sub_4f6d2a.first\n            sub_4f6d2a.result -> notequal_6b6d1f.left\n            elem_5c6d8e -> notequal_6b6d1f.right\n            notequal_6b6d1f.result -> bool_4b8d72\n        } -> find_1e8c4f.predicate\n        list_7f1f9f -> find_1e8c4f.items\n        find_1e8c4f.item -> number_7c6f4e\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_3b5d5f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -297, y: -10, name: \"list\") property(List) list_4e5c9a\n\n        out(x: 583, y: -11, name: \"missing\") property(Number) missing_1f5f0c\n\n        instance(x: 0, y: 0) find_1e9f4c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -110, y: 35, name: \"elem\") property(Number) elem_4d5e9e\n\n            out(x: 516, y: 43, name: \"bool\") property(Bool) bool_3d6c5c\n\n            instance(x: 88, y: 29) sub_1f2c9d root.Std_k98ojb.Math.Sub {}\n            instance(x: 309, y: 34) notequal_1e6e9e root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_1e6e9e.right\n            sub_1f2c9d.result -> notequal_1e6e9e.left\n            index_1e9f4c -> sub_1f2c9d.first\n            elem_4d5e9e -> sub_1f2c9d.second\n            notequal_1e6e9e.result -> bool_3d6c5c\n        } -> find_1e9f4c.predicate\n        list_4e5c9a -> find_1e9f4c.items\n        find_1e9f4c.item -> missing_1f5f0c\n    }\n\n    \n\n    instance(x: -54, y: 530) smallest_missing_1e4a6c root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -428, y: -0, name: \"list\") property(List) list_6f8f4c\n\n        out(x: 592, y: -1, name: \"missing\") property(Number) missing_5e4f3f\n\n        instance(x: 0, y: 0) for_2a2f72 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item_8e4f8d\n            in(x: -106, y: 49, name: \"index\") property(Number) index_3a8d3e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_6a6c1e\n\n            instance(x: 89, y: 29) add_6f6b4a root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_7e3d5f root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 89, y: 29) sub_1f5d0f root.Std_k98ojb.Math.Sub {}\n            1 -> add_6f6b4a.second\n            index_3a8d3e -> add_6f6b4a.first\n            0 -> sub_1f5d0f.second\n            index_3a8d3e -> sub_1f5d0f.first\n            add_6f6b4a.result -> notequal_7e3d5f.right\n            item_8e4f8d -> notequal_7e3d5f.left\n            sub_1f5d0f.result -> bool_6a6c1e\n        } -> for_2a2f72.on_item\n        list_6f8f4c -> for_2a2f72.items\n        for_2a2f72.index -> index_3a8d3e\n        for_2a2f72.item -> item_8e4f8d\n        bool_6a6c1e -> for_2a2f72.break_trigger\n        add_6f6b4a.result -> missing_5e4f3f\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_5c5d8d root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) for_7b1b9f root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"continue\") trigger() continue_6a9a7\n            out(x: 515, y: 44, name: \"done\") trigger() done_5b9a7\n\n            instance(x: 89, y: 29) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index + 1 != list[index + 1]\"\n            }\n            getter(x: 116, y: -268, name: \"getter_1cedb2\") getter_1cedb2 = number\n            setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = number\n            instance(x: 310, y: 35) add_1088d5 root.Std_k98ojb.Math.Add {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> ifexpression_e38995.gen_1\n            list[index_9f6850] -> ifexpression_e38995.gen_0\n            getter_1cedb2.value -> number_3bc2ae\n            ifexpression_e38995.then -> setter_1cedb2.execute\n            add_1088d5.result -> setter_1cedb2.new_value\n            ifexpression_e38995.else -> setter_37db7f.execute\n            index_9f6850 -> setter_37db7f.new_value\n            setter_1cedb2.continue -> continue_6a9a7\n            setter_37db7f.continue -> continue_6a9a7\n            done_5b9a7 -> for_7b1b9f.done\n        } -> for_7b1b9f.on_item\n        list_abed4a -> for_7b1b9f.items\n        for_7b1b9f.reset -> for_7b1b9f.reset\n        for_7b1b9f.trigger -> for_7b1b9f.trigger\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -294, y: -248, name: \"list\") property(List) list_a8c6e6\n\n        out(x: 592, y: -218, name: \"missing\") property(Number) missing_9d9b3c\n\n        instance(x: 0, y: 0) find_9a9e7f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_6e9e0a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9a6b5d\n\n            instance(x: 89, y: 29) ifexpression_4f3f0f root.Std_k98ojb.Std.IfExpression {\n                expression: \"it < 0\"\n            }\n            instance(x: 310, y: 35) ifexpression_9c8f2f root.Std_k98ojb.Std.IfExpression {\n                expression: \"it != index\"\n            }\n            instance(x: 310, y: 35) add_9e1e4d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) sub_4c4b2f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) ifexpression_8b5d2d root.Std_k98ojb.Std.IfExpression {\n                expression: \"it != index\"\n            }\n            0 -> ifexpression_4f3f0f.gen_0\n            elem_6e9e0a -> ifexpression_4f3f0f.gen_1\n            ifexpression_4f3f0f.then -> sub_4c4b2f.first\n            index -> sub_4c4b2f.second\n            ifexpression_4f3f0f.else -> add_9e1e4d.first\n            index -> add_9e1e4d.second\n            ifexpression_9c8f2f.gen_0 -> ifexpression_8b5d2d.gen_0\n            ifexpression_9c8f2f.gen_1 -> ifexpression_8b5d2d.gen_1\n            ifexpression_8b5d2d.then -> sub_4c4b2f.first\n            index -> sub_4c4b2f.second\n            ifexpression_8b5d2d.else -> add_9e1e4d.first\n            index -> add_9e1e4d.second\n            sub_4c4b2f.result -> bool_9a6b5d\n            add_9e1e4d.result -> missing_9d9b3c\n            ifexpression_9c8f2f.result -> ifexpression_8b5d2d.execute\n            list_a8c6e6 -> find_9a9e7f.items\n            find_9a9e7f.index -> index\n            ifexpression_8b5d2d.result -> bool_9a6b5d\n        } -> find_9a9e7f.predicate\n        list_a8c6e6 -> find_9a9e7f.items\n        find_9a9e7f.item -> missing_9d9b3c\n    }\n\n    \n\n    instance(x: -59, y: 520) smallest_missing_8f2b3f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -278, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 29, name: \"index\") property(Number) index_7e2d4e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_3d8c6c root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7e2d4e -> add_3d8c6c.first\n            1 -> add_3d8c6c.second\n            add_3d8c6c.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -287, y: -192, name: \"list\") property(List) list_1d4e0e\n\n        out(x: 590, y: -192, name: \"number\") property(Number) number_3e2f9e\n\n        instance(x: 0, y: 0) find_5f8c80 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_1f6e1c root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) greaterthan_9f7c9f root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_1f6e1c.result -> notequal_807ffd.left\n            0 -> sub_1f6e1c.second\n            index -> sub_1f6e1c.first\n            notequal_807ffd.result -> greaterthan_9f7c9f.left\n            elem_9f6850 -> greaterthan_9f7c9f.right\n            greaterthan_9f7c9f.result -> bool_af09a7\n        } -> find_5f8c80.predicate\n        list_1d4e0e -> find_5f8c80.items\n        find_5f8c80.item -> number_3e2f9e\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -500, y: 2, name: \"input\") property(String) input\n        out(x: 340, y: 77, name: \"output\") property(String) output\n\n        instance(x: 772, y: 76) replace_2f9f1e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: -28) replace_7f7dcb root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: -142) replace_7e9bdf root.Std_k98ojb.Strings.Replace {}\n        input -> replace_2f9f1e.input\n        \" \" -> replace_2f9f1e.search\n        \":\" -> replace_2f9f1e.replace\n        replace_2f9f1e.output -> replace_7f7dcb.input\n        \",\" -> replace_7f7dcb.search\n        \":\" -> replace_7f7dcb.replace\n        replace_7f7dcb.output -> replace_7e9bdf.input\n        \".\" -> replace_7e9bdf.search\n        \":\" -> replace_7e9bdf.replace\n        replace_7e9bdf.output -> output\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_9e1d9c root.main.replace {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_9e1e3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: -56) replace_1e5f9c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: -166) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9e1e3c.input\n        \" \" -> replace_9e1e3c.search\n        \":\" -> replace_9e1e3c.replace\n        replace_9e1e3c.output -> replace_1e5f9c.input\n        \",\" -> replace_1e5f9c.search\n        \":\" -> replace_1e5f9c.replace\n        replace_1e5f9c.output -> replace_7b3b7b.input\n        \".\" -> replace_7b3b7b.search\n        \":\" -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_space_comma_dot_5c1c2f root.main.replace_space_comma_dot {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -530, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_0\n\n        instance(x: 772, y: 76) replace_1a8c4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: -1) replace_3f9a6c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: -101) replace_8a9d2d root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1a8c4c.input\n        \" \" -> replace_1a8c4c.search\n        \":\" -> replace_1a8c4c.replace\n        replace_1a8c4c.output -> replace_3f9a6c.input\n        \",\" -> replace_3f9a6c.search\n        \":\" -> replace_3f9a6c.replace\n        replace_3f9a6c.output -> replace_8a9d2d.input\n        \".\" -> replace_8a9d2d.search\n        \":\" -> replace_8a9d2d.replace\n        replace_8a9d2d.output -> output_0\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_spaces_commas_dots_1a6d9f root.main.replace_spaces_commas_dots {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -119, y: 2, name: \"input\") property(String) input_7a7a2f\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_8e7c6f\n\n        instance(x: 221, y: 2) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: -52) replace_7b3b7b_0 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: -104) replace_7b3b7b_1 root.Std_k98ojb.Strings.Replace {}\n        input_7a7a2f -> replace_7b3b7b.input\n        \" \" -> replace_7b3b7b.search\n        \":\" -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> replace_7b3b7b_0.input\n        \",\" -> replace_7b3b7b_0.search\n        \":\" -> replace_7b3b7b_0.replace\n        replace_7b3b7b_0.output -> replace_7b3b7b_1.input\n        \".\" -> replace_7b3b7b_1.search\n        \":\" -> replace_7b3b7b_1.replace\n        replace_7b3b7b_1.output -> output_8e7c6f\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_8d3d1f root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -156, y: 9, name: \"input\") property(String) input_8c0d5f\n\n        out(x: 515, y: -14, name: \"output\") property(String) output_8b2a6f\n\n        instance(x: 272, y: -2) replace_9f9e8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 272, y: 77) replace_4f7d64 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 272, y: 155) replace_9b1b2a root.Std_k98ojb.Strings.Replace {}\n        input_8c0d5f -> replace_9f9e8c.input\n        \" \" -> replace_9f9e8c.search\n        \":\" -> replace_9f9e8c.replace\n        replace_9f9e8c.output -> replace_4f7d64.input\n        \",\" -> replace_4f7d64.search\n        \":\" -> replace_4f7d64.replace\n        replace_4f7d64.output -> replace_9b1b2a.input\n        \".\" -> replace_9b1b2a.search\n        \":\" -> replace_9b1b2a.replace\n        replace_9b1b2a.output -> output_8b2a6f\n    }\n\n    \n\n    instance(x: -139, y: 48) replace_chars_4a8b5d root.main.replace_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 1, name: \"input\") property(String) input_9e8f8e\n\n        out(x: 531, y: 5, name: \"output\") property(String) output_8f3d2c\n\n        instance(x: 94, y: -4) replace_9d6f2e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -41) replace_2e1c0e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -78) replace_6f3d0e root.Std_k98ojb.Strings.Replace {}\n        input_9e8f8e -> replace_9d6f2e.input\n        \" \" -> replace_9d6f2e.search\n        \":\" -> replace_9d6f2e.replace\n        replace_9d6f2e.output -> replace_2e1c0e.input\n        \",\" -> replace_2e1c0e.search\n        \":\" -> replace_2e1c0e.replace\n        replace_2e1c0e.output -> replace_6f3d0e.input\n        \".\" -> replace_6f3d0e.search\n        \":\" -> replace_6f3d0e.replace\n        replace_6f3d0e.output -> output_8f3d2c\n    }\n\n    \n\n    instance(x: -92, y: 42) replace_special_chars_6e3b4c root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -157, y: 4, name: \"input\") property(String) input_7f8d\n        out(x: 340, y: 77, name: \"output\") property(String) output_7f8d\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: 76) replace_2b3b7b root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: 76) replace_3b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_7f8d -> replace_7b3b7b.input\n        \" \" -> replace_7b3b7b.search\n        \":\" -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> replace_2b3b7b.input\n        \",\" -> replace_2b3b7b.search\n        \":\" -> replace_2b3b7b.replace\n        replace_2b3b7b.output -> replace_3b3b7b.input\n        \".\" -> replace_3b3b7b.search\n        \":\" -> replace_3b3b7b.replace\n        replace_3b3b7b.output -> output_7f8d\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_chars_59bc6e root.main.replace_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -157, y: -15, name: \"input\") property(String) input_2c4d9d\n\n        out(x: 507, y: -5, name: \"output\") property(String) output_9b3b8f\n\n        instance(x: 0, y: 1) replace_9e7f1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_2f9d8d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_1c5e8c root.Std_k98ojb.Strings.Replace {}\n        input_2c4d9d -> replace_9e7f1f.input\n        \" \" -> replace_9e7f1f.search\n        \":\" -> replace_9e7f1f.replace\n        replace_9e7f1f.output -> replace_2f9d8d.input\n        \",\" -> replace_2f9d8d.search\n        \":\" -> replace_2f9d8d.replace\n        replace_2f9d8d.output -> replace_1c5e8c.input\n        \".\" -> replace_1c5e8c.search\n        \":\" -> replace_1c5e8c.replace\n        replace_1c5e8c.output -> output_9b3b8f\n    }\n\n    \n\n    instance(x: -54, y: -9) replace_with_colon_9c8d3d root.main.replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -156, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 532, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_9b9a6a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_0a9b2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_2f2a8a root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_9b9a6a.input\n        \" \" -> replace_9b9a6a.search\n        \":\" -> replace_9b9a6a.replace\n        replace_9b9a6a.output -> replace_0a9b2f.input\n        \",\" -> replace_0a9b2f.search\n        \":\" -> replace_0a9b2f.replace\n        replace_0a9b2f.output -> replace_2f2a8a.input\n        \".\" -> replace_2f2a8a.search\n        \":\" -> replace_2f2a8a.replace\n        replace_2f2a8a.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_with_colon_1a6f8e root.main.replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -126, y: 10, name: \"input\") property(String) input_2f1d4e\n\n        out(x: 508, y: -4, name: \"output\") property(String) output_6d3e2f\n\n        instance(x: 262, y: 4) replace_3a2fcb root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 4) replace_6d9e3e root.Std_k98ojb.Strings.Replace {}\n        instance(x: -129, y: 4) replace_5d1e3c root.Std_k98ojb.Strings.Replace {}\n        input_2f1d4e -> replace_3a2fcb.input\n        \" \" -> replace_3a2fcb.search\n        \":\" -> replace_3a2fcb.replace\n        input_2f1d4e -> replace_6d9e3e.input\n        \",\" -> replace_6d9e3e.search\n        \":\" -> replace_6d9e3e.replace\n        input_2f1d4e -> replace_5d1e3c.input\n        \".\" -> replace_5d1e3c.search\n        \":\" -> replace_5d1e3c.replace\n        replace_5d1e3c.output -> replace_6d9e3e.input\n        replace_6d9e3e.output -> replace_3a2fcb.input\n        replace_3a2fcb.output -> output_6d3e2f\n    }\n\n    \n\n    instance(x: 85, y: 26) replace_9b9c5f root.main.replace {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_same {\n        in(x: -278, y: -56, name: \"input\") property(String) input_1d5f4f\n\n        out(x: 1024, y: -47, name: \"output\") property(Bool) output_3a1e8d\n\n        instance(x: -105, y: -55) firstitem_3f4d4c root.Std_k98ojb.List.FirstItem {}\n        instance(x: 336, y: -54) contains_5c5e3d root.Std_k98ojb.List.Contains {}\n        instance(x: 645, y: -55) equal_4d8d8f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 929, y: -54) not_8e3b4e root.Std_k98ojb.Logic.Not {}\n        input_1d5f4f -> firstitem_3f4d4c.list\n        firstitem_3f4d4f.item -> contains_5c5e3d.item\n        input_1d5f4f -> contains_5c5e3d.list\n        contains_5c5e3d.is_contained -> equal_4d8d8f.left\n        firstitem_3f4d4f.item -> equal_4d8d8f.right\n        equal_4d8d8f.result -> not_8e3b4e.input\n        not_8e3b4e.result -> output_3a1e8d\n    }\n\n    \n\n    instance(x: 6, y: -18) all_same_6f3f9f root.main.all_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -299, y: -55, name: \"input\") property(String) input_5f9b2f\n\n        out(x: 1176, y: -60, name: \"output\") property(Bool) output_9c8c9c\n\n        instance(x: -155, y: -55) characters_3b4e4e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 467, y: -61) length_7f5a6e root.Std_k98ojb.List.Length {}\n        instance(x: 717, y: -62) greaterthan_1c1b6f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1069, y: -60) ifexpression_1b8f3d root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        instance(x: 1041, y: -160) getat_8a6b6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 345, y: -161) for_7a8e9c root.Std_k98ojb.Std.For {}\n        instance(x: 1019, y: -250) not_2f8c6d root.Std_k98ojb.Logic.Not {}\n        instance(x: 1002, y: -353) if_7f9f4f root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: -457) getat_8e4c4e root.Std_k98ojb.List.GetAt {}\n        instance(x: 1002, y: -557) not_2d4e4e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1002, y: -657) if_0a9b4e root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: -761) getat_1e9c4e root.Std_k98ojb.List.GetAt {}\n        instance(x: 1002, y: -861) not_9b4e4e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1002, y: -961) if_9b4e4e root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: -1065) getat_9b4e4e root.Std_k98ojb.List.GetAt {}\n        instance(x: 1002, y: -1165) not_9b4e4e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1002, y: -1265) if_9b4e4e root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: -1369) getat_9b4e4e root.Std_k98ojb.List.GetAt {}\n        instance(x: 1002, y: -1469) not_9b4e4e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1002, y: -1569) if_9b4e4e root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: -1673) getat_9b4e4e root.Std_k98ojb.List.GetAt {}\n        instance(x: 1002, y: -1773) not_9b4e4e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1002, y: -1873) if_9b4e4e root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: -1977) getat_9b4e4e root.Std_k98ojb.List.GetAt {}\n        instance(x: 1002, y: -2077) not_9b4e4e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1002, y: -2177) if_9b4e4e root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: -2277) getat_9b4e4e root.Std_k98ojb.List.GetAt {}\n        instance(x: 1002, y: -2377) not_9b4e4e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1002, y: -2477) if_9b4e4e root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: -2577) getat_9b4e4e root.Std_k98ojb.List.GetAt {}\n        instance(x: 1002, y: -2677) not_9b4e4e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1002, y: -2777) if_9b4e4e root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: -2877) getat_9b4e4e root.Std_k98ojb.List.GetAt {}\n        instance(x: 1002, y: -2977) not_9b4e4e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1002, y: -3077) if_9b4e4e root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: -3177) getat_9b4e4e root.Std_k98ojb.List.GetAt {}\n        instance(x: 1002, y: -3277) not_9b4e4e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1002, y: -3377) if_9b4e4e root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: -3477) getat_9b4e4e root.Std_k98ojb.List.GetAt {}\n        instance(x: 1002, y: -3577) not_9b4e4e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1002, y: -3677) if_9b4e4e root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: -3777) getat_9b4e4e root.Std_k98ojb.List.GetAt {}\n        instance(x: 1002, y: -3877) not_9b4e4e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1002, y: -3977) if_9b4e4e root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: -4077) getat_9b4e4e root.Std_k98ojb.List.GetAt {}\n        instance(x: 1002, y: -4177) not_9b4e4e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1002, y: -4277) if_9b4e4e root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: -4377) getat_9b4e4e root.Std_k98ojb.List.GetAt {}\n        instance(x: 1002, y: -4477) not_9b4e4e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1002, y: -4577) if_9b4e4e root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: -4677) getat_9b4e4e root.Std_k98ojb.List.GetAt {}\n        instance(x: 1002, y: -4777) not_9b4e4e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1002, y: -4877) if_9b4e4e root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: -4977) getat_9b4e4e root.Std_k98ojb.List.GetAt {}\n        instance(x: 1002, y: -5077) not_9b4e4e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1002, y: -5177) if_9b4e4e root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: -5277) getat_9b4e4e root.Std_k98ojb.List.GetAt {}\n        instance(x: 1002, y: -5377) not_9b4e4e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1002, y: -5477) if_9b4e4e root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: -5577) getat_9b4e4e root.Std_k98ojb.List.GetAt {}\n        instance(x",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_characters {\n        in(x: -283, y: -71, name: \"input\") property(String) input_5b1f0d\n\n        out(x: 537, y: -61, name: \"output\") property(Bool) output_5f3b2c\n\n        instance(x: -122, y: -71) characters_9a2d5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 182, y: -61) intersection_6a9e1d root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 392, y: -61) length_8d9b3d root.Std_k98ojb.List.Length {}\n        instance(x: 517, y: -60) equal_4f5f9c root.Std_k98ojb.Logic.Equal {}\n        input_5b1f0d -> characters_9a2d5c.input\n        characters_9a2d5c.characters -> intersection_6a9e1d.left\n        characters_9a2d5c.characters -> intersection_6a9e1d.right\n        length_8d9b3d.length -> equal_4f5f9c.left\n        intersection_6a9e1d.intersection -> length_8d9b3d.list\n        1 -> equal_4f5f9c.right\n        equal_4f5f9c.result -> output_5f3b2c\n    }\n\n    \n\n    instance(x: -68, y: 42) check_characters_7e2d6c root.main.check_characters {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -296, y: -18, name: \"input\") property(String) input_1a7c9d\n\n        out(x: 1107, y: -15, name: \"output\") property(Bool) output_7e1f4e\n\n        instance(x: -150, y: -19, name: \"characters\") characters_8c4f1c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 282, y: -16) length_9e9e6c root.Std_k98ojb.List.Length {}\n        instance(x: 518, y: -16) ifexpression_4e7c8e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == previous\"\n        }\n        getter(x: 229, y: 75, name: \"getter_1d5b8e\") getter_1d5b8e = previous\n        setter(x: 479, y: -182, name: \"setter_8b9a1d\") setter_8b9a1d = previous\n        instance(x: 206, y: -92) for_6a2ebe root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -63, name: \"setter_8b9a1d\") setter_4b9c99 = previous\n        instance(x: -282, y: -78) getat_1b1e5c root.Std_k98ojb.List.GetAt {}\n        ifexpression_4e7c8e.else -> output_7e1f4e\n        ifexpression_4e7c8e.value -> output_7e1f4e\n        ifexpression_4e7c8e.then -> setter_8b9a1d.execute\n        characters_8c4f1c.characters -> for_6a2ebe.items\n        for_6a2ebe.item -> ifexpression_4e7c8e.gen_2\n        for_6a2ebe.index -> ifexpression_4e7c8e.gen_0\n        getter_1d5b8e.value -> ifexpression_4e7c8e.gen_1\n        for_6a2ebe.onItem -> ifexpression_4e7c8e.execute\n        for_6a2ebe.done -> output_7e1f4e\n        for_6a2ebe.item -> setter_8b9a1d.new_value\n        characters_8c4f1c.characters -> getat_1b1e5c.list\n        0 -> getat_1b1e5c.index\n        getat_1b1e5c.itemAtIndex -> setter_4b9c99.new_value\n        input_1a7c9d -> length_9e9e6c.list\n        length_9e9e6c.length -> for_6a2ebe.itemsLength\n        setter_4b9c99.continue -> for_6a2ebe.reset\n        setter_8b9a1d.continue -> for_6a2ebe.next\n    }\n\n    \n\n    instance(x: 36, y: -8) check_same_9a6c1c root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -331, y: -58, name: \"input\") property(String) input_5a9f4d\n\n        out(x: 1030, y: 20, name: \"output\") property(Bool) output_5d1f48\n\n        instance(x: -186, y: -58) characters_6b9f9e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 187, y: 18) contains_9d5b0a root.Std_k98ojb.List.Contains {}\n        instance(x: 532, y: 16) not_9c1b2a root.Std_k98ojb.Logic.Not {}\n        instance(x: 789, y: 17) lessthanorequal_4a6d1f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 958, y: 17) not_3d3e6e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1099, y: 16) map_4f1b8a root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1438, y: 17) reduce_7f1e0e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 1769, y: 17) if_7e6e6c root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -22, y: -11, name: \"current\") property(String) current_6c6b1e\n\n            out(x: 586, y: 1, name: \"output\") property(String) output_3a7e8f\n\n            instance(x: 227, y: -8) length_6b1c8e root.Std_k98ojb.Strings.Length {}\n            instance(x: 424, y: -8) expression_7f1b5c root.Std_k98ojb.Math.Expression {\n                expression: \"current * (length - index)\"\n            }\n            instance(x: 642, y: -7) add_7c7c1e root.Std_k98ojb.Math.Add {}\n            instance(x: 844, y: -8) substr_1e6b1e root.Std_k98ojb.Strings.Substring {}\n            instance(x: 1060, y: -8) expression_1e1c8e root.Std_k98ojb.Math.Expression {\n                expression: \"index + 1\"\n            }\n            current_6c6b1e -> substr_1e6b1e.input\n            expression_1e1c8e.result -> substr_1e6b1e.start\n            expression_1e1c8e.result -> add_7c7c1e.second\n            1 -> add_7c7c1e.first\n            add_7c7c1e.result -> substr_1e6b1e.end\n            length_6b1c8e.length -> expression_7f1b5c.gen_1\n            current_6c6b1e -> expression_7f1b5c.gen_0\n            expression_7f1b5c.result -> output_3a7e8f\n        } -> map_4f1b8a.handler\n        characters_6b9f9e.characters -> map_4f1b8a.items\n        func() {\n            in(x: -18, y: -16, name: \"accumulated\") property(String) accumulated_7c6b1e\n            in(x: -11, y: 56, name: \"current\") property(String) current_5c6b1e\n\n            out(x: 1126, y: 39, name: \"output\") property(String) output_6a7e8f\n\n            instance(x: 226, y: 44) expression_3e1c8e root.Std_k98ojb.Math.Expression {\n                expression: \"accumulated + current\"\n            }\n            expression_3e1c8e.result -> output_6a7e8f\n            accumulated_7c6b1e -> expression_3e1c8e.gen_0\n            current_5c6b1e -> expression_3e1c8e.gen_1\n        } -> reduce_7f1e0e.handler\n        map_4f1b8a.output_list -> reduce_7f1e0e.items\n        reduce_7f1e0e.output -> if_7e6e6c.value\n        if_7e6e6c.then -> output_5d1f48\n        if_7e6e6c.else -> not_3d3e6e.input\n        contains_9d5b0a.is_contained -> not_9c1b2a.input\n        characters_6b9f9e.characters -> contains_9d5b0a.list\n        characters_6b9f9e.characters -> lessthanorequal_4a6d1f.left\n        1 -> lessthanorequal_4a6d1f.right\n        lessthanorequal_4a6d1f.result -> if_7e6e6c.predicate\n        not_3d3e6e.result -> if_7e6e6c.else\n    }\n\n    \n\n    instance(x: -60, y: 7) check_same_3e1c8e root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -298, y: -63, name: \"string\") property(String) string_9e9b99\n\n        out(x: 1043, y: -50, name: \"output\") property(Bool) output_3f3b8f\n\n        instance(x: -100, y: -63) characters_4c8b91 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 344, y: -56) contains_1e9d3e root.Std_k98ojb.List.Contains {}\n        instance(x: 647, y: -57) lessthanorequal_6f3d0e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 899, y: -59) if_1d6f6d root.Std_k98ojb.Std.If {}\n        instance(x: 1063, y: -62) length_4d7f2d root.Std_k98ojb.List.Length {}\n        instance(x: 1280, y: -61) and_8e3d7f root.Std_k98ojb.Logic.And {}\n        instance(x: 1523, y: -62) not_1f8f7e root.Std_k98ojb.Logic.Not {}\n        string_9e9b99 -> characters_4c8b91.input\n        characters_4c8b91.characters -> contains_1e9d3e.list\n        characters_4c8b91.characters -> length_4d7f2d.list\n        characters_4c8b91.characters -> lessthanorequal_6f3d0e.right\n        lessthanorequal_6f3d0e.left -> length_4d7f2d.length\n        contains_1e9d3e.item -> if_1d6f6d.predicate\n        if_1d6f6d.then -> continue_9d4d4c\n        if_1d6f6d.else -> not_1f8f7e.input\n        not_1f8f7e.result -> and_8e3d7f.left\n        length_4d7f2d.length -> and_8e3d7f.right\n        and_8e3d7f.result -> output_3f3b8f\n    }\n\n    \n\n    instance(x: -34, y: 22) check_same_9f3e8f root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -297, y: -16, name: \"input\") property(String) input_8d8c4f\n\n        out(x: 548, y: 22, name: \"output\") property(Bool) output_5d3e81\n\n        instance(x: -148, y: -16) characters_7b5b9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 142, y: 24) intersection_1b5f9e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 348, y: 22) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 481, y: 21) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        characters_7b5b9f.characters -> intersection_1b5f9e.left\n        characters_7b5b9f.characters -> intersection_1b5f9e.right\n        length_6e87f2.length -> equal_f89569.left\n        intersection_1b5f9e.intersection -> length_6e87f2.list\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_5d3e81\n        input_8d8c4f -> characters_7b5b9f.input\n    }\n\n    \n\n    instance(x: 17, y: 51) check_same_3c9d9e root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") all_same {\n        in(x: -293, y: -76, name: \"string\") property(String) string_4a2d4e\n\n        out(x: 561, y: -58, name: \"output\") property(Bool) output_6f7e8d\n\n        instance(x: -97, y: -76) characters_8d1e8e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 151, y: -76) firstitem_3d2b5a root.Std_k98ojb.List.FirstItem {}\n        instance(x: 350, y: -76) contains_8d1c5f root.Std_k98ojb.List.Contains {}\n        instance(x: 521, y: -76) not_8c1d5f root.Std_k98ojb.Logic.Not {}\n        characters_8d1e8e.characters -> contains_8d1c5f.list\n        characters_8d1e8e.characters -> firstitem_3d2b5a.list\n        firstitem_3d2b5a.item -> contains_8d1c5f.item\n        not_8c1d5f.result -> output_6f7e8d\n        contains_8d1c5f.is_contained -> not_8c1d5f.input\n        string_4a2d4e -> characters_8d1e8e.input\n    }\n\n    \n\n    instance(x: -86, y: 51) all_same_7e1f4d root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -308, y: -52, name: \"string\") property(String) string_3e3e7d\n\n        out(x: 1146, y: -42, name: \"output\") property(Bool) output_6a2d1e\n\n        instance(x: -153, y: -52) characters_6e7f9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 338, y: -49) uniquify_4d8a2f root.Std_k98ojb.List.Uniquify {}\n        instance(x: 677, y: -49) length_9a7c7e root.Std_k98ojb.List.Length {}\n        instance(x: 929, y: -49) equal_9c8f8a root.Std_k98ojb.Logic.Equal {}\n        characters_6e7f9f.characters -> uniquify_4d8a2f.list\n        uniquify_4d8a2f.list -> length_9a7c7e.list\n        1 -> equal_9c8f8a.right\n        length_9a7c7e.length -> equal_9c8f8a.left\n        equal_9c8f8a.result -> output_6a2d1e\n        string_3e3e7d -> characters_6e7f9f.input\n    }\n\n    \n\n    instance(x: 17, y: 12) check_same_1f6a7e root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") same_char {\n        in(x: -308, y: -50, name: \"input\") property(String) input_9c7f2f\n\n        out(x: 1138, y: -42, name: \"output\") property(Bool) output_6c6d2e\n\n        instance(x: -161, y: -52) characters_4d9d93 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 357, y: -50) set_6d1e51 root.Std_k98ojb.List.Set {}\n        instance(x: 686, y: -50) filter_5b2c5c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1047, y: -51) length_3e2f6e root.Std_k98ojb.List.Length {}\n        instance(x: 1097, y: -49) equal_5c9f7c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1225, y: -50) not_5c9b5e root.Std_k98ojb.Logic.Not {}\n        input_9c7f2f -> characters_4d9d93.input\n        characters_4d9d93.characters -> set_6d1e51.list\n        0 -> set_6d1e51.index\n        characters_4d9d93.characters -> filter_5b2c5c.items\n        func() {\n            in(x: -29, y: 47, name: \"current\") property(String) current_1a1b2f\n\n            out(x: 706, y: 50, name: \"output\") property(Bool) output_5c1b7d\n\n            instance(x: 229, y: 52) equal_7b7e8a root.Std_k98ojb.Logic.Equal {}\n            current_1a1b2f -> equal_7b7e8a.left\n            set_6d1e51.item -> equal_7b7e8a.right\n            equal_7b7e8a.result -> output_5c1b7d\n        } -> filter_5b2c5c.handler\n        filter_5b2c5c.output_list -> length_3e2f6e.list\n        length_3e2f6e.length -> equal_5c9f7c.left\n        1 -> equal_5c9f7c.right\n        equal_5c9f7c.result -> not_5c9b5e.input\n        not_5c9b5e.result -> output_6c6d2e\n    }\n\n    \n\n    instance(x: -84, y: 59) same_char_1d3a9c root.main.same_char {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {\n            iterations: \"string.length\"\n        }\n        instance(x: 0, y: 0) string_characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: 0) add_node root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) if_node root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) if_node_2 root.Std_k98ojb.Std.If {}\n        string_ai -> string_characters_node.input\n        string_characters_node.characters -> if_node.gen_0\n        if_node.then -> add_node.execute\n        if_node.else -> count_node.count\n        is_numeric_node.input -> if_node_2.gen_0\n        if_node_2.then -> add_node.first\n        if_node_2.else -> add_node.second\n        1 -> add_node.second\n        0 -> add_node.first\n        count_node.onCount -> if_node.execute\n        count_node.onCount -> if_node_2.execute\n        add_node.result -> count_node.iteration\n        count_node.done -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_5e6a8f root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits_2 {}\n        instance(x: 0, y: 0) count_digits_3 root.main.count_digits_3 {}\n        instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: 0) count_digits_4 root.main.count_digits_4 {}\n        instance(x: 0, y: 0) relay_5 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) count_digits_6 root.main.count_digits_6 {}\n        instance(x: 0, y: 0) relay_7 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_8 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_9 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_10 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_11 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_12 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_13 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_14 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_15 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_16 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_17 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_18 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_19 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_20 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_21 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_22 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_23 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_24 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_25 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_26 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_27 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_28 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_29 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_30 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_31 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_32 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_33 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_34 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_35 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_36 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_37 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_38 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_39 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_40 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_41 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_42 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_43 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_44 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_45 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_46 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_47 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_48 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_49 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_50 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_51 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_52 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_53 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_54 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_55 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_56 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_57 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_58 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_59 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_60 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_61 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_62 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_63 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_64 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_65 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_66 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_67 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_68 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_69 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_70 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_71 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_72 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_73 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_74 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_75 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_76 root.Std_k98ojb.Std.Relay {}\n        instance(x: 0, y: 0) relay_77 root.Std_k98ojb.Std.Relay {}\n        instance",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) count_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(doc: \"counts the number of digits in a given string.\") handler {\n                in(x: 0, y: 0, name: \"it\") property(String) it_ai\n                out(x: 0, y: 0, name: \"result\") property(Bool) result_ai\n\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                it_ai -> is_numeric_node.input\n                is_numeric_node.isNumeric -> result_ai\n            }\n        }\n        instance(x: 0, y: 0) count_digits_node_1 root.Std_k98ojb.Iteration.Count {}\n        input_ai -> count_digits_node.items\n        count_digits_node.output_list -> count_digits_node_1.items\n        count_digits_node_1.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: 0) count_digits_node_2 root.main.count_digits {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 0) string_characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> string_characters_node.input\n        instance(x: 0, y: 0) count_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(doc: \"handler\") handler_2 {\n                in(x: 0, y: 0, name: \"item\") property(String) item_4\n                out(x: 0, y: 0, name: \"output\") property(Bool) output_4\n\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item_4 -> is_numeric_node.input\n                is_numeric_node.isNumeric -> output_4\n            }\n        }\n        string_characters_node.characters -> count_digits_node.items\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_node.output_list -> list_length_node.list\n        list_length_node.length -> output_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"counts number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) is_numeric_9c9d8f root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: 0) characters_8f0f8e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_5e9e4c root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) ifexpression_6b5b4f root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 0, y: 0) add_8b7b6b root.Std_k98ojb.Math.Add {}\n\n        string_ai -> characters_8f0f8e.input\n        characters_8f0f8e.characters -> count_5e9e4c.items\n        count_5e9e4c.onCount -> ifexpression_6b5b4f.execute\n        count_5e9e4c.iteration -> ifexpression_6b5b4f.gen_0\n        characters_8f0f8e.characters -> is_numeric_9c9d8f.input\n        is_numeric_9c9d8f.isNumeric -> ifexpression_6b5b4f.gen_1\n        1 -> add_8b7b6b.first\n        count_5e9e4c.interation -> add_8b7b6b.second\n        ifexpression_6b5b4f.then -> add_8b7b6b.execute\n        ifexpression_6b5b4f.else -> count_5e9e4c.reset\n        add_8b7b6b.result -> count_5e9e4c.count\n        count_5e9e4c.done -> result_ai\n    }\n\n    \n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_2c4e2f root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) for_node root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) if_node root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) number_from_string_node root.Std_k98ojb.Math.NumberFromString {}\n\n        string_ai -> characters_node.input\n        characters_node.characters -> for_node.items\n        for_node.item -> is_numeric_node.input\n        is_numeric_node.isNumeric -> if_node.input\n        if_node.then -> count_node.count\n        for_node.onItem -> if_node.execute\n        for_node.reset -> count_node.reset\n        count_node.onCount -> for_node.next\n        for_node.done -> count_node.continue\n        count_node.interation -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) if_expression_node root.Std_k98ojb.Std.IfExpression {\n            expression: \"it.isNumeric()\"\n        }\n        instance(x: 0, y: 0) strings_characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) add_node root.Std_k98ojb.Math.Add {}\n        strings_characters_node.characters -> if_expression_node.gen_0\n        if_expression_node.then -> count_node.count\n        count_node.onCount -> add_node.first\n        1 -> add_node.second\n        add_node.result -> count_node.iteration\n        count_node.done -> count_ai\n    }\n\n    \n    instance(x: -42, y: -48, name: \"count_digits\") count_digits_5a5f4a root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_3c1f4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_4a0b0a root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) is_numeric_1e8e8c root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: 0) ifexpression_7b5b3f root.Std_k98ojb.Std.IfExpression {}\n\n        string_ai -> characters_3c1f4c.input\n        characters_3c1f4c.characters -> count_4a0b0a.items\n        characters_3c1f4c.characters -> ifexpression_7b5b3f.gen_0\n        ifexpression_7b5b3f.expression: \"it.IsNumeric\"\n        count_4a0b0a.onCount -> ifexpression_7b5b3f.execute\n        ifexpression_7b5b3f.then -> count_4a0b0a.count\n        count_4a0b0a.interation -> count_4a0b0a.reset\n        count_4a0b0a.done -> count_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_2a7c1a root.main.count_digits {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in property(String) it\n                out property(Bool) output\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                it -> is_numeric_node.input\n                is_numeric_node.isNumeric -> output\n            }\n        }\n        string_ai -> count_node.items\n        count_node.output_list -> result_ai\n    }\n    \n\n    instance(x: -52, y: -40, name: \"count_digits\") count_digits_1f2a9e root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Iteration.Filter {\n            handler: {\n                in(x: 0, y: 0, name: \"it\") property(String) it_ai\n                out(x: 0, y: 0, name: \"result\") property(Bool) result_ai\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                it_ai -> is_numeric_node.input\n                is_numeric_node.is_numeric -> result_ai\n            }\n        }\n        instance(x: 0, y: 0) length_node root.Std_k98ojb.List.Length {}\n        input_ai -> count_node.items\n        count_node.output_list -> length_node.list\n        length_node.length -> output_ai\n    }\n\n    \n    instance(x: -51, y: -42, name: \"count_digits\") count_digits_1_9b7f9 root.main.count_digits {}\n\n    \n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth {\n        in(x: -333, y: -277, name: \"n\") property(Number) n_9c1e3d\n\n        out(x: 762, y: -7, name: \"sum\") property(Number) sum_1b2c1f\n\n        instance(x: 10, y: -2) mul_4a4c9f root.Std_k98ojb.Math.Mul {}\n        instance(x: 10, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9f0e54 root.Std_k98ojb.Math.Pow {}\n        instance(x: 12, y: 136) expression_7f1f2c root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_8f3b4c root.Std_k98ojb.Math.Pow {}\n        instance(x: 23, y: -1) mul_3e5e6e root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_7f1f2c root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_8f3b4c root.Std_k98ojb.Math.Pow {}\n        instance(x: 23, y: -1) mul_3e5e6e root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        expression_2d6da6.result -> mul_4a4c9f.second\n        n_9c1e3d -> mul_4a4c9f.first\n        mul_4a4c9f.result -> pow_9f0e54.first\n        pow_9f0e54.result -> sum_1b2c1f\n        pow_9f0e54.second -> 4\n        expression_7f1f2c.result -> mul_3e5e6e.second\n        n_9c1e3d -> mul_3e5e6e.first\n        mul_3e5e6e.result -> pow_8f3b4c.first\n        pow_8f3b4c.result -> sum_1b2c1f\n        pow_8f3b4c.second -> 4\n        n_9c1e3d -> expression_2d6da6.gen_0\n        n_9c1e3d -> expression_7f1f2c.gen_0\n        data_cde0dc -> pow_9f0e54.second\n        data_cde0dc -> pow_8f3b4c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_9dcc3d root.main.sum_fourth {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -345, y: -278, name: \"n\") property(Number) n_3a3116\n\n        out(x: 751, y: -5, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9c7f9f root.Std_k98ojb.Math.Pow {}\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_7d7e4d root.Std_k98ojb.Math.Add {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        data_instance(x: 0, y: 0) data_3d1f2b  = 0\n        instance(x: 0, y: 0) count_7f5e54 root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) if_2d1d0c root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) for_7e9e1f root.Std_k98ojb.Std.For {}\n        pow_9c7f9f.result -> add_7d7e4d.first\n        data_3d1f2b -> add_7d7e4d.second\n        expression_2d6da6.result -> pow_9c7f9f.first\n        4 -> pow_9c7f9f.second\n        add_7d7e4d.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n        count_7f5e54.reset -> for_7e9e1f.reset\n        for_7e9e1f.next -> count_7f5e54.count\n        for_7e9e1f.items -> count_7f5e54.items\n        for_7e9e1f.items -> if_2d1d0c.input\n        count_7f5e54.count -> if_2d1d0c.then\n        if_2d1d0c.else -> for_7e9e1f.done\n        if_2d1d0c.then -> add_7d7e4d.execute\n        if_2d1d0c.then -> for_7e9e1f.next\n        for_7e9e1f.trigger -> count_7f5e54.trigger\n        for_7e9e1f.trigger -> if_2d1d0c.execute\n        data_cde0dc -> count_7f5e54.items\n        data_cde0dc -> for_7e9e1f.items\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power {\n        in(x: -279, y: 61, name: \"n\") property(Number) n_7d9a5e\n\n        out(x: 570, y: -1, name: \"sum\") property(Number) sum_5f7e7d\n\n        instance(x: 27, y: -1) pow_3d8f49 root.Std_k98ojb.Math.Pow {}\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) sum_1b7d74 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 1\n        data_instance(x: 330, y: 133) data_9b7f9c  = 0\n        n_7d9a5e -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_3d8f49.x\n        4 -> pow_3d8f49.y\n        pow_3d8f49.result -> mul_f892a4.second\n        n_7d9a5e -> mul_f892a4.first\n        mul_f892a4.result -> sum_1b7d74.items\n        sum_1b7d74.reducer {\n            in(x: -115, y: 30, name: \"current\") property(Number) current_5d0f9d\n\n            in(x: -112, y: 31, name: \"accumulator\") property(Number) accumulator_3f9d82\n\n            out(x: 513, y: 34, name: \"accumulator\") property(Number) accumulator_9a2f92\n\n            instance(x: 85, y: 32) add_9d9b6c root.Std_k98ojb.Math.Add {}\n            add_9d9b6c.first -> accumulator_9a2f92\n            current_5d0f9d -> add_9d9b6c.second\n            accumulator_3f9d82 -> add_9d9b6c.first\n            add_9d9b6c.result -> accumulator_9a2f92\n        }\n        data_9b7f9c -> sum_1b7d74.initial\n        sum_1b7d74.result -> sum_5f7e7d\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_8c0f7c root.main.fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the sum of fourth power of first n odd natural numbers.\") sum_fourth {\n        in(x: -280, y: -278, name: \"n\") property(Number) n_7a2f6c\n\n        out(x: 754, y: -371, name: \"output\") property(Number) output_7c6f4c\n\n        data_instance(x: 394, y: -339) data_4c9f8f  = [sum]\n        instance(x: 46, y: -383, name: \"sum\") expression_4f0f8e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (2*n-1) * (2*n*n-1) / 3\"\n        }\n        instance(x: 62, y: -226, name: \"sum\") mul_5a6d6f root.Std_k98ojb.Math.Mul {}\n        data_4c9f8f -> output_7c6f4c\n        n_7a2f6c -> expression_4f0f8e.gen_0\n        expression_4f0f8e.result -> data_4c9f8f.sum\n        n_7a2f6c -> mul_5a6d6f.first\n        mul_5a6d6f.result -> expression_4f0f8e.gen_1\n        mul_5a6d6f.result -> data_4c9f8f.sum\n        n_7a2f6c -> mul_5a6d6f.second\n        mul_5a6d6f.result -> expression_4f0f8e.gen_2\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_6e7f1c root.main.sum_fourth {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        instance(x: 46, y: -383, name: \"fourth_power\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"pow(4*n*n-1, 4)\"\n        }\n        instance(x: 62, y: -226, name: \"sum\") expression_2d44da root.Std_k98ojb.Math.Expression {\n            expression: \"n * (n+1)*(2*n+1)*(3*n*n+3*n-1)/3\"\n        }\n        n_c88d35 -> expression_634b7e.gen_0\n        n_c88d35 -> expression_2d4ada.gen_0\n        expression_634b7e.result -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -285, y: -285, name: \"n\") property(Number) n_6e8e8e\n\n        out(x: 600, y: -5, name: \"sum\") property(Number) sum_8f3d2b\n\n        instance(x: 12, y: -256) mul_9f6a2e root.Std_k98ojb.Math.Mul {}\n        instance(x: 9, y: -135) mul_9d5e0f root.Std_k98ojb.Math.Mul {}\n        instance(x: 6, y: 9) expression_3d4b4f root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 288, y: -4) div_2a6a54 root.Std_k98ojb.Math.Div {}\n        instance(x: 23, y: -133) expression_6c2b9d root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 309, y: -1) div_1f9d2f root.Std_k98ojb.Math.Div {}\n        n_6e8e8e -> expression_3d4b4f.gen_0\n        expression_3d4b4f.result -> mul_9f6a2e.second\n        n_6e8e8e -> mul_9f6a2e.first\n        mul_9f6a2e.result -> div_2a6a54.first\n        n_6e8e8e -> div_2a6a54.second\n        div_2a6a54.result -> mul_9d5e0f.first\n        div_2a6a54.result -> mul_9d5e0f.second\n        n_6e8e8e -> expression_6c2b9d.gen_0\n        expression_6c2b9d.result -> div_1f9d2f.first\n        n_6e8e8e -> div_1f9d2f.second\n        div_1f9d2f.result -> mul_9d5e0f.first\n        mul_9d5e0f.result -> sum_8f3d2b\n    }\n\n    \n\n    instance(x: -57, y: 156) sum_fourth_power_2f6c0d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth {\n        in(x: -284, y: -0, name: \"n\") property(Number) n_8d4f0d\n\n        out(x: 593, y: -1, name: \"sum\") property(Number) sum_5f1d0f\n\n        instance(x: 0, y: 0) for_7b9b9e root.Std_k98ojb.Std.For {}\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (n+1)/2\"\n        }\n        instance(x: 62, y: -226, name: \"average\") div_2d44da root.Std_k98ojb.Math.Div {}\n        instance(x: 12, y: 136, name: \"power\") expression_4c8b7f root.Std_k98ojb.Math.Expression {\n            expression: \"n*n*n*n\"\n        }\n        data_instance(x: 394, y: -339) data_3c713b  = [sum, average]\n        instance(x: 23, y: -1) add_8c8f0c root.Std_k98ojb.Math.Add {}\n        data_3c713b -> sum_fourth.sum_5f1d0f\n        n_8d4f0d -> for_7b9b9e.items\n        expression_634b7e.result -> data_3c713b.sum\n        expression_634b7e.result -> div_2d44da.first\n        div_2d44da.result -> data_3c713b.average\n        n_8d4f0d -> expression_634b7e.gen_0\n        n_8d4f0d -> div_2d44da.second\n        for_7b9b9e.index -> expression_4c8b7f.gen_0\n        expression_4c8b7f.result -> add_8c8f0c.second\n        add_8c8f0c.result -> data_3c713b.sum\n        data_3c713b.sum -> add_8c8f0c.first\n        for_7b9b9e.next -> for_7b9b9e.trigger\n        for_7b9b9e.reset -> for_7b9b9e.trigger\n        for_7b9b9e.done -> sum_fourth.sum_5f1d0f\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_2f2d0d root.main.sum_fourth {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -340, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (2*n-1)*(2*n*n-1)/3\"\n        }\n        instance(x: 62, y: -226, name: \"average\") div_2d44da root.Std_k98ojb.Math.Div {}\n        data_instance(x: 394, y: -339) data_3c713b  = [sum]\n        data_3c713b -> output_ebef81\n        n_c88d35 -> expression_634b7e.gen_0\n        expression_634b7e.result -> data_3c713b.sum\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth {\n        in(x: -282, y: -288, name: \"n\") property(Number) n_9e3b0f\n\n        out(x: 745, y: -5, name: \"sum\") property(Number) sum_7e3f7c\n\n        instance(x: 17, y: -1) mul_f9f7f2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 21, y: 134) mul_8a2f6e root.Std_k98ojb.Math.Mul {}\n        instance(x: 311, y: 2) div_7d4b0e root.Std_k98ojb.Math.Div {}\n        data_instance(x: 326, y: 133) data_8f8c7f  = 3\n        instance(x: 12, y: 136) expression_6a1f5c root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 302, y: 2) pow_8e6e1e root.Std_k98ojb.Math.Pow {}\n        n_9e3b0f -> mul_f9f7f2.first\n        n_9e3b0f -> expression_6a1f5c.gen_0\n        expression_6a1f5c.result -> mul_f9f7f2.second\n        mul_f9f7f2.result -> div_7d4b0e.first\n        data_8f8c7f -> div_7d4b0e.second\n        div_7d4b0e.result -> mul_8a2f6e.first\n        mul_f9f7f2.result -> mul_8a2f6e.second\n        mul_8a2f6e.result -> pow_8e6e1e.first\n        4 -> pow_8e6e1e.second\n        pow_8e6e1e.result -> sum_7e3f7c\n    }\n\n    \n\n    instance(x: 120, y: -26) sum_fourth_9f6a2d root.main.sum_fourth {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -280, y: -290, name: \"n\") property(Number) n_4e8e1f\n\n        out(x: 591, y: -7, name: \"sum\") property(Number) sum_2f9b9e\n\n        instance(x: 23, y: -1) mul_8c9d49 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_6e8d0f  = 3\n        instance(x: 12, y: 136) expression_1a3c2a root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_8a7c2f root.Std_k98ojb.Math.Pow {}\n        data_6e8d0f -> mul_8e8f1c.second\n        mul_8c9d49.result -> pow_8a7c2f.first\n        expression_1a3c2a.result -> mul_8c9d49.second\n        n_4e8e1f -> mul_8c9d49.first\n        n_4e8e1f -> expression_1a3c2a.gen_0\n        pow_8a7c2f.result -> sum_2f9b9e\n        4 -> pow_8a7c2f.y\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_6e7f0c root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -242, y: -81, name: \"size\") property(Number) size_5f4f5e\n\n        out(x: 650, y: -10, name: \"area\") property(Number) area_3a1e8d\n\n        instance(x: 96, y: -55) mul_4d3b5d root.Std_k98ojb.Math.Mul {}\n        instance(x: 97, y: -130) mul_6c3d87 root.Std_k98ojb.Math.Mul {}\n        6 -> mul_4d3b5d.first\n        size_5f4f5e -> mul_4d3b5d.second\n        mul_4d3b5d.result -> mul_6c3d87.first\n        size_5f4f5e -> mul_6c3d87.second\n        mul_6c3d87.result -> area_3a1e8d\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_4c0b1f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -211, y: -56, name: \"size\") property(Number) size_5e9c3e\n\n        out(x: 45, y: 7, name: \"area\") property(Number) area_9b3d07\n\n        instance(x: -93, y: -25) mul_3b4e4e root.Std_k98ojb.Math.Mul {}\n        instance(x: -15, y: -6) mul_7f5d6e root.Std_k98ojb.Math.Mul {}\n        instance(x: 41, y: -16) mul_1a8b6d root.Std_k98ojb.Math.Mul {}\n        instance(x: 87, y: -21) mul_9a5c0c root.Std_k98ojb.Math.Mul {}\n        instance(x: 134, y: -11) add_9a9b5f root.Std_k98ojb.Math.Add {}\n        instance(x: 186, y: -11) add_7d1c4d root.Std_k98ojb.Math.Add {}\n        size_5e9c3e -> mul_3b4e4e.first\n        size_5e9c3e -> mul_3b4e4e.second\n        mul_3b4e4e.result -> mul_7f5d6e.first\n        6 -> mul_7f5d6e.second\n        mul_7f5d6e.result -> mul_1a8b6d.first\n        size_5e9c3e -> mul_1a8b6d.second\n        mul_1a8b6d.result -> mul_9a5c0c.first\n        mul_3b4e4e.result -> mul_9a5c0c.second\n        mul_9a5c0c.result -> add_9a9b5f.first\n        add_9a9b5f.result -> add_7d1c4d.first\n        add_7d1c4d.result -> area_9b3d07\n    }\n\n    \n\n    instance(x: 108, y: 37) surface_area_1b3c6e root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -112, y: -51, name: \"side\") property(Number) side_5e6d7f\n\n        out(x: 656, y: -68, name: \"area\") property(Number) area_cbb7bd\n\n        instance(x: 94, y: -105) mul_1a4c0d root.Std_k98ojb.Math.Mul {}\n        side_5e6d7f -> mul_1a4c0d.first\n        6 -> mul_1a4c0d.second\n        mul_1a4c0d.result -> area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -119, y: -52, name: \"side\") property(Number) side_7a7f2f\n\n        out(x: 334, y: -20, name: \"surface area\") property(Number) surface_area_7e6f4c\n\n        instance(x: 0, y: -2) mul_3e8c4f root.Std_k98ojb.Math.Mul {}\n        instance(x: 98, y: -32) mul_8a9e9e root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -72) mul_6e4e7c root.Std_k98ojb.Math.Mul {}\n        instance(x: 96, y: -112) add_5b4f6d root.Std_k98ojb.Math.Add {}\n        instance(x: 96, y: -161) add_4e8b3e root.Std_k98ojb.Math.Add {}\n        6 -> mul_3e8c4f.first\n        side_7a7f2f -> mul_3e8c4f.second\n        mul_3e8c4f.result -> mul_8a9e9e.first\n        side_7a7f2f -> mul_8a9e9e.second\n        mul_8a9e9e.result -> mul_6e4e7c.first\n        side_7a7f2f -> mul_6e4e7c.second\n        mul_6e4e7c.result -> add_5b4f6d.first\n        mul_3e8c4f.result -> add_5b4f6d.second\n        add_5b4f6d.result -> add_4e8b3e.first\n        mul_3e8c4f.result -> add_4e8b3e.second\n        add_4e8b3e.result -> surface_area_7e6f4c\n    }\n\n    \n\n    instance(x: 177, y: 49) surface_area_5f9c7e root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -104, y: -42, name: \"size\") property(Number) size_8c0d5f\n\n        out(x: 106, y: 14, name: \"surface area\") property(Number) surface_area_5e6b78\n\n        instance(x: 5, y: -4) mul_1e9f4c root.Std_k98ojb.Math.Mul {}\n        instance(x: 8, y: 26) mul_7d6c4d root.Std_k98ojb.Math.Mul {}\n        6 -> mul_1e9f4c.first\n        size_8c0d5f -> mul_1e9f4c.second\n        2 -> mul_7d6c4d.first\n        size_8c0d5f -> mul_7d6c4d.second\n        mul_1e9f4c.result -> surface_area_5e6b78\n        mul_7d6c4d.result -> mul_1e9f4c.first\n    }\n\n    \n\n    instance(x: 138, y: 56) cube_surface_area_1d0d0c root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -218, y: -49, name: \"size\") property(Number) size_3c6e8f\n\n        out(x: 568, y: -15, name: \"area\") property(Number) area_3b8f3d\n\n        instance(x: 12, y: -12) mul_5b9d6f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 320, y: 134) data_3e1c91  = 6\n        instance(x: 11, y: 136) expression_8d6d5f root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        instance(x: 302, y: 2) div_2e7b6c root.Std_k98ojb.Math.Div {}\n        data_3e1c91 -> div_2e7b6c.second\n        mul_5b9d6f.result -> div_2e7b6c.first\n        expression_8d6d5f.result -> mul_5b9d6f.second\n        size_3c6e8f -> mul_5b9d6f.first\n        size_3c6e8f -> expression_8d6d5f.gen_0\n        div_2e7b6c.result -> area_3b8f3d\n    }\n\n    \n\n    instance(x: 122, y: -26) cube_surface_area_5f5f9d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -219, y: 55, name: \"side\") property(Number) side_9a5d97\n\n        out(x: 571, y: 7, name: \"area\") property(Number) area_1c0b5f\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side*side\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        side_9a5d97 -> mul_f892a4.first\n        side_9a5d97 -> expression_2d6da6.gen_0\n        div_64046c.result -> area_1c0b5f\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_9dcc3d root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -109, y: -65, name: \"size\") property(Number) size_4a2c4d\n\n        out(x: 49, y: -11, name: \"area\") property(Number) area_9d9b3c\n\n        instance(x: 23, y: -11) mul_9a9e7f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_3f9d8d  = 6\n        instance(x: 12, y: 136) expression_6e4d1c root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        instance(x: 303, y: 2) div_6d9d9e root.Std_k98ojb.Math.Div {}\n        data_3f9d8d -> div_6d9d9e.second\n        mul_9a9e7f.result -> div_6d9d9e.first\n        expression_6e4d1c.result -> mul_9a9e7f.second\n        size_4a2c4d -> mul_9a9e7f.first\n        size_4a2c4d -> expression_6e4d1c.gen_0\n        div_6d9d9e.result -> area_9d9b3c\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_7d3b8d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -1129, y: -185, name: \"size\") property(Number) size_7b4e0f\n\n        out(x: -14, y: -57, name: \"area\") property(Number) area_2f7e3f\n\n        instance(x: -678, y: -143) mul_7f9f7f root.Std_k98ojb.Math.Mul {}\n        instance(x: -481, y: -56) mul_6b7d8c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -311, y: -143) data_7d4b0e  = 6\n        size_7b4e0f -> mul_7f9f9f.first\n        size_7b4e0f -> mul_6b7d8c.first\n        data_7d4b0e -> mul_7f9f9f.second\n        mul_7f9f9f.result -> mul_6b7d8c.second\n        mul_6b7d8c.result -> area_2f7e3f\n    }\n\n    \n\n    instance(x: 146, y: 54) surface_area_8c7e7f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -101, y: -68, name: \"size\") property(Number) size_2f1d4e\n\n        out(x: 110, y: -1, name: \"area\") property(Number) area_6d3e2f\n\n        instance(x: 17, y: -42) mul_6f5f8c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 316, y: 117) data_4e3e74  = 6\n        instance(x: 7, y: 125) mul_7c2d1e root.Std_k98ojb.Math.Mul {}\n        size_2f1d4e -> mul_6f5f8c.first\n        size_2f1d4e -> mul_7c2d1e.first\n        data_4e3e74 -> mul_6f5f8c.second\n        mul_6f5f8c.result -> mul_7c2d1e.second\n        mul_7c2d1e.result -> area_6d3e2f\n    }\n\n    \n\n    instance(x: 125, y: 219) surface_area_7c2f0f root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -333, y: -236, name: \"list\") property(List) list_9b1e3a\n\n        out(x: 453, y: -217, name: \"difference\") property(Number) difference_1a2c1f\n\n        instance(x: -92, y: -236) max_4a4c9f root.Std_k98ojb.List.Max {}\n        instance(x: 183, y: -217) min_7f4b5c root.Std_k98ojb.List.Min {}\n        instance(x: 183, y: -48) sub_1b6eae root.Std_k98ojb.Math.Sub {}\n        list_9b1e3a -> max_4a4c9f.items\n        list_9b1e3a -> min_7f4b5c.items\n        max_4a4c9f.max -> sub_1b6eae.first\n        min_7f4b5c.min -> sub_1b6eae.second\n        sub_1b6eae.result -> difference_1a2c1f\n    }\n\n    \n\n    instance(x: 45, y: -32) diff_largest_smallest_9a3d8f root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -34, y: -25, name: \"list\") property(List) list_0b075e\n\n        out(x: 547, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: 194, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_7f7f5d root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -376) min_8e4d4d root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_7f7f5d.max -> sub_852f2e.first\n        min_8e4d4d.min -> sub_852f2e.second\n        list_0b075e -> max_7f7f5d.items\n        list_0b075e -> min_8e4d4d.items\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -35, y: -31, name: \"list\") property(List) list_0d9e5e\n\n        out(x: 446, y: 41, name: \"difference\") property(Number) difference_5f7e7d\n\n        instance(x: -83, y: -31) max_5d8f9c root.Std_k98ojb.List.Max {}\n        instance(x: 204, y: 41) sub_9e1d64 root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 138) min_7f6f7e root.Std_k98ojb.List.Min {}\n        list_0d9e5e -> max_5d8f9c.items\n        list_0d9e5e -> min_7f6f7e.items\n        max_5d8f9c.max -> sub_9e1d64.first\n        min_7f6f7e.min -> sub_9e1d64.second\n        sub_9e1d64.result -> difference_5f7e7d\n    }\n\n    \n\n    instance(x: 46, y: 11) diff_max_min_5a6d6f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -269, y: -41, name: \"list\") property(List) list_9b7e8f\n\n        out(x: 438, y: -11, name: \"diff\") property(Number) diff_1f4b1f\n\n        instance(x: -31, y: -38) max_f6b4c9 root.Std_k98ojb.List.Max {}\n        instance(x: -29, y: 160) min_5a3e4f root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 57) sub_8c6f1e root.Std_k98ojb.Math.Sub {}\n        list_9b7e8f -> max_f6b4c9.items\n        list_9b7e8f -> min_5a3e4f.items\n        max_f6b4c9.max -> sub_8c6f1e.first\n        min_5a3e4f.min -> sub_8c6f1e.second\n        sub_8c6f1e.result -> diff_1f4b1f\n    }\n\n    \n\n    instance(x: 50, y: -1) diff_max_min_1b1d6f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -297, y: -38, name: \"list\") property(List) list_4e5c9d\n\n        out(x: 463, y: 54, name: \"difference\") property(Number) difference_2f5f0c\n\n        instance(x: -63, y: -43) max_1e9f64 root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 54) sub_4f7d64 root.Std_k98ojb.Math.Sub {}\n        instance(x: -63, y: 115) min_4b1b2d root.Std_k98ojb.List.Min {}\n        list_4e5c9d -> max_1e9f64.items\n        list_4e5c9d -> min_4b1b2d.items\n        max_1e9f64.max -> sub_4f7d64.first\n        min_4b1b2d.min -> sub_4f7d64.second\n        sub_4f7d64.result -> difference_2f5f0c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_6b9f3c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -296, y: -240, name: \"list\") property(List) list_6e8e8e\n\n        out(x: 447, y: -240, name: \"diff\") property(Number) diff_3f3d2c\n\n        instance(x: -26, y: -240) max_9d6f2e root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -240) min_3e1c91 root.Std_k98ojb.List.Min {}\n        instance(x: 198, y: -240) sub_5f8e2f root.Std_k98ojb.Math.Sub {}\n        list_6e8e8e -> max_9d6f2e.items\n        list_6e8e8e -> min_3e1c91.items\n        max_9d6f2e.max -> sub_5f8e2f.first\n        min_3e1c91.min -> sub_5f8e2f.second\n        sub_5f8e2f.result -> diff_3f3d2c\n    }\n\n    \n\n    instance(x: 12, y: -37) diff_largest_smallest_1d6d7e root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff {\n        in(x: -30, y: -28, name: \"list\") property(List) list_8a7f8d\n\n        out(x: 440, y: 40, name: \"difference\") property(Number) difference_1b5a5f\n\n        instance(x: 176, y: 33) sub_1b9f7e root.Std_k98ojb.Math.Sub {}\n        instance(x: 174, y: -163) max_5b3f64 root.Std_k98ojb.List.Max {}\n        instance(x: 175, y: -361) min_4c6b5f root.Std_k98ojb.List.Min {}\n        max_5b3f64.max -> sub_1b9f7e.first\n        min_4c6b5f.min -> sub_1b9f7e.second\n        sub_1b9f7e.result -> difference_1b5a5f\n        list_8a7f8d -> max_5b3f64.items\n        list_8a7f8d -> min_4c6b5f.items\n    }\n\n    \n\n    instance(x: 52, y: -8) diff_7f3c2f root.main.diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -30, y: -30, name: \"list\") property(List) list_6c4c9d\n\n        out(x: 447, y: -23, name: \"diff\") property(Number) diff_9a3b8f\n\n        instance(x: 147, y: -17) sub_9e7f1f root.Std_k98ojb.Math.Sub {}\n        instance(x: -243, y: 34) max_2f9a8d root.Std_k98ojb.List.Max {}\n        instance(x: -244, y: -106) min_1c5e8c root.Std_k98ojb.List.Min {}\n        list_6c4c9d -> max_2f9a8d.items\n        list_6c4c9d -> min_1c5e8c.items\n        max_2f9a8d.max -> sub_9e7f1f.first\n        min_1c5e8c.min -> sub_9e7f1f.second\n        sub_9e7f1f.result -> diff_9a3b8f\n    }\n\n    \n\n    instance(x: 57, y: -9) diff_largest_smallest_8f6c8e root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -333, y: -25, name: \"list\") property(List) list_5c7f8f\n\n        out(x: 441, y: 12, name: \"difference\") property(Number) difference_5c6d0e\n\n        instance(x: -92, y: -20) max_3a6e81 root.Std_k98ojb.List.Max {}\n        instance(x: 194, y: 12) min_4c8c2f root.Std_k98ojb.List.Min {}\n        instance(x: 198, y: 47) sub_7a9c1c root.Std_k98ojb.Math.Sub {}\n        list_5c7f8f -> max_3a6e81.items\n        list_5c7f8f -> min_4c8c2f.items\n        max_3a6e81.max -> sub_7a9c1c.first\n        min_4c8c2f.min -> sub_7a9c1c.second\n        sub_7a9c1c.result -> difference_5c6d0e\n    }\n\n    \n\n    instance(x: 26, y: -2) diff_max_min_2d8b4c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) max_1e4e6a root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_2f7b2a root.Std_k98ojb.List.Min {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_0b075e -> max_1e4e6a.items\n        list_0b075e -> min_2f7b2a.items\n        max_1e4e6a.max -> sub_852f2e.first\n        min_2f7b2a.min -> sub_852f2e.second\n        sub_852f2e.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_15f9e9 root.main.diff {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -35, y: -20, name: \"n\") property(Number) n_5d5f4f\n\n        out(x: 551, y: 58, name: \"output\") property(Bool) output_9e9c1c\n\n        instance(x: 216, y: 57) modulo_7e3f4a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 454, y: 58) equal_3e5c92 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 688, y: 58) not_6b4b1a root.Std_k98ojb.Logic.Not {}\n        2 -> modulo_7e3f4a.divisor\n        n_5d5f4f -> modulo_7e3f4a.value\n        0 -> equal_3e5c92.right\n        modulo_7e3f4a.result -> equal_3e5c92.left\n        equal_3e5c92.result -> not_6b4b1a.input\n        not_6b4b1a.result -> output_9e9c1c\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_8d1b3f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -32, y: -34, name: \"n\") property(Number) n_8f5e9c\n\n        out(x: 538, y: 60, name: \"output\") property(Bool) output_9c8c9c\n\n        instance(x: 187, y: 62) modulo_2b4e4a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 415, y: 63) equal_7f5d6e root.Std_k98ojb.Logic.Equal {}\n        n_8f5e9c -> modulo_2b4e4a.value\n        2 -> modulo_2b4e4a.divisor\n        0 -> equal_7f5d6e.right\n        modulo_2b4e4a.result -> equal_7f5d6e.left\n        equal_7f5d6e.result -> output_9c8c9c\n    }\n\n    \n\n    instance(x: 43, y: 7) is_even_4d4d7f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_9a8c8d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 591, y: 74) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) choose_9e5d0c root.Std_k98ojb.Std.Choose {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        2 -> modulo_9a8c8d.divisor\n        input_f5c03d -> modulo_9a8c8d.value\n        modulo_9a8c8d.result -> lessthanorequal_f11fda.left\n        0 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        choose_9e5d0c.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> choose_9e5d0c.then\n        1 -> choose_9e5d0c.else\n        if_e19a62.else -> if_e19a62.value\n        0 -> if_e19a62.then\n        1 -> if_e19a62.else\n        1 -> add_b4554f.first\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_07b8c7.value -> if_e19a62.value\n        if_07b8c7.value -> choose_9e5d0c.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> choose_9e5d0c.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> choose_9e5d0c.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> choose_9e5d0c.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b8c7.value -> if_e19a62.then\n        if_07b8c7.value -> if_e19a62.else\n        if_07b",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -52, y: -51, name: \"n\") property(Number) n_5d7a7f\n\n        out(x: 434, y: -55, name: \"output\") property(Bool) output_7e1f4e\n\n        instance(x: 189, y: -53) modulo_9c6b4c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 375, y: -52) equal_5a3e4f root.Std_k98ojb.Logic.Equal {}\n        equal_5a3e4f.result -> output_7e1f4e\n        n_5d7a7f -> modulo_9c6b4c.value\n        2 -> modulo_9c6b4c.divisor\n        0 -> equal_5a3e4f.right\n        modulo_9c6b4c.result -> equal_5a3e4f.left\n    }\n\n    \n\n    instance(x: 20, y: -8) is_even_5d9c4c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -31, y: -33, name: \"n\") property(Number) n_5f9f4d\n\n        out(x: 537, y: 1, name: \"output\") property(Bool) output_4e8b2e\n\n        instance(x: 200, y: 1) modulo_6b9f9e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: 1) equal_9a5b0d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 590, y: 1) not_9b1b2d root.Std_k98ojb.Logic.Not {}\n        n_5f9f4d -> modulo_6b9f9e.value\n        2 -> modulo_6b9f9e.divisor\n        0 -> equal_9a5b0d.right\n        modulo_6b9f9e.result -> equal_9a5b0d.left\n        equal_9a5b0d.result -> not_9b1b2d.input\n        not_9b1b2d.result -> output_4e8b2e\n    }\n\n    \n\n    instance(x: 37, y: -13) is_even_1f6b3c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -53, y: -50, name: \"n\") property(Number) n_9c9b99\n\n        out(x: 126, y: -5, name: \"output\") property(Bool) output_5e1b0e\n\n        instance(x: 15, y: -26) modulo_8b3d2a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 121, y: -9) equal_1e1d3e root.Std_k98ojb.Logic.Equal {}\n        equal_1e1d3e.result -> output_5e1b0e\n        0 -> equal_1e1d3e.right\n        modulo_8b3d2a.result -> equal_1e1d3e.left\n        n_9c9b99 -> modulo_8b3d2a.value\n        2 -> modulo_8b3d2a.divisor\n    }\n\n    \n\n    instance(x: 11, y: 11) is_even_1e1d3e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -27, y: -24, name: \"input\") property(Number) input_1b9d5d\n\n        out(x: 125, y: 61, name: \"output\") property(Bool) output_1c5b5f\n\n        instance(x: 2, y: 60) modulo_1b9d7e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 103, y: 61) equal_5f9b6f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 224, y: 61) not_9a5f3f root.Std_k98ojb.Logic.Not {}\n        input_1b9d5d -> modulo_1b9d7e.value\n        2 -> modulo_1b9d7e.divisor\n        modulo_1b9d7e.result -> equal_5f9b6f.left\n        0 -> equal_5f9b6f.right\n        equal_5f9b6f.result -> not_9a5f3f.input\n        not_9a5f3f.result -> output_1c5b5f\n    }\n\n    \n\n    instance(x: 32, y: -7) is_even_1e6e6f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -57, y: -30, name: \"input\") property(Number) input_1e2e8c\n        in(x: -292, y: 155, name: \"execute\") trigger() execute_2c4f9d\n\n        out(x: 544, y: 63, name: \"output\") property(Bool) output_6c5b0c\n        out(x: 686, y: 123, name: \"continue\") trigger() continue_9a8d2d\n\n        instance(x: 201, y: 62) modulo_1e6e81 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 434, y: 47) equal_3d2d8c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 201, y: 153) or_else_9f5a3c root.Std_k98ojb.Std.OrElse {}\n        instance(x: 434, y: 147) if_5c4e1f root.Std_k98ojb.Std.If {}\n        2 -> modulo_1e6e81.divisor\n        input_1e2e8c -> modulo_1e6e81.value\n        0 -> equal_3d2d8c.right\n        modulo_1e6e81.result -> equal_3d2d8c.left\n        equal_3d2d8c.result -> if_5c4e1f.predicate\n        execute_2c4f9d -> if_5c4e1f.execute\n        if_5c4e1f.then -> continue_9a8d2d\n        if_5c4e1f.else -> continue_9a8d2d\n        equal_3d2d8c.result -> or_else_9f5a3c.first\n        true -> or_else_9f5a3c.second\n        or_else_9f5a3c.value -> output_6c5b0c\n    }\n\n    \n\n    instance(x: 51, y: 11) is_even_7e8f9e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -39, y: -53, name: \"input\") property(Number) input_1a7e5c\n        in(x: 154, y: -211, name: \"execute\") trigger() execute_5b6c2d\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_3b4e9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_6e1f8f\n\n        instance(x: 352, y: -493) map_2f7c0c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_0c7c8c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_6e1d0c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_7e7a2e root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_0b6c94 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_1f6f07 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_1a9d3c root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_8e8f9e root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_8e8b7f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_0c7c8c.from\n        input_1a7e5c -> generaterange_0c7c8c.to\n        generaterange_0c7c8c.list -> map_2f7c0c.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_2f7c0c.handler\n        map_2f7c0c.output_list -> for_7e7a2e.items\n        for_7e7a2e.item -> lessthanorequal_6e1d0c.left\n        input_1a7e5c -> lessthanorequal_6e1d0c.right\n        lessthanorequal_6e1d0c.result -> if_1f6f07.predicate\n        for_7e7a2e.onItem -> if_1f6f07.execute\n        if_1f6f07.else -> continue_6e1f8f\n        expression_1a9d3c.result -> and_0b6c94.left\n        expression_9fba8c.result -> and_0b6c94.right\n        and_0b6c94.result -> if_8e8f9e.predicate\n        if_1f6f07.then -> if_8e8f9e.execute\n        for_7e7a2e.index -> add_8e8b7f.first\n        1 -> add_8e8b7f.second\n        add_8e8b7f.result -> expression_1a9d3c.gen_1\n        add_8e8b7f.result -> expression_9fba8c.gen_1\n        input_1a7e5c -> expression_9fba8c.gen_0\n        input_1a7e5c -> expression_1a9d3c.gen_0\n        if_1f6f07.value -> out_3b4e9f\n        if_8e8f9e.then -> continue_6e1f8f\n        for_7e7a2e.done -> continue_6e1f8f\n        execute_5b6c2d -> for_7e7a2e.reset\n        if_8e8f9e.else -> for_7e7a2e.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5e4a9d root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_a6cea7\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: 62) modulo_7a1d4c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 433, y: 49) equal_8f7b2d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 201, y: 62) notequal_7c2d1e root.Std_k98ojb.Logic.NotEqual {}\n        n_a6cea7 -> modulo_7a1d4c.value\n        2 -> modulo_7a1d4c.divisor\n        0 -> equal_8f7b2d.right\n        modulo_7a1d4c.result -> equal_8f7b2d.left\n        equal_8f7b2d.result -> output_b1d7f8\n        0 -> notequal_7c2d1e.right\n        modulo_7a1d4c.result -> notequal_7c2d1e.left\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_1f5d3f root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -282, y: 0, name: \"string\") property(String) string_0\n\n        out(x: 531, y: -1, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) for_1e4c6f root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) set_5f5f4e root.Std_k98ojb.Std.Set {}\n        instance(x: 0, y: 0) get_8f9b6d root.Std_k98ojb.Std.Get {}\n        instance(x: 0, y: 0) not_5c2c6e root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) if_2d6f2e root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) ``first repeated char_2d6f2e`` root.Std_k98ojb.Iteration.Find {}\n        string_0 -> for_1e4c6f.items\n        for_1e4c6f.onItem -> get_8f9b6d.execute\n        for_1e4c6f.item -> get_8f9b6d.key\n        get_8f9b6d.result -> not_5c2c6e.input\n        not_5c2c6e.result -> if_2d6f2e.predicate\n        if_2d6f2e.then -> set_5f5f4e.execute\n        if_2d6f2e.else -> for_1e4c6f.next\n        for_1e4c6f.item -> set_5f5f4e.key\n        for_1e4c6f.item -> ``first repeated char_2d6f2e``.items\n        func() {\n            in(x: -182, y: 41, name: \"elem\") property(String) elem_0\n\n            out(x: 698, y: 42, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 112, y: 37) equal_7c9c6e root.Std_k98ojb.Logic.Equal {}\n            elem_0 -> equal_7c9c6e.left\n            for_1e4c6f.item -> equal_7c9c6e.right\n            equal_7c9c6e.result -> bool_0\n        } -> ``first repeated char_2d6f2e``.predicate\n        set_5f5f4e.continue -> for_1e4c6f.next\n        for_1e4c6f.done -> output_0.isEmpty\n        ``first repeated char_2d6f2e``.item -> output_0\n    }\n\n    \n\n    instance(x: -71, y: 49) FirstRepeatedChar_2d6f2e root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -272, y: 163, name: \"string\") property(String) input_2f0b99\n\n        out(x: 796, y: 141, name: \"output\") property(Any) output_8c9c4c\n\n        instance(x: 0, y: 0) for_8e4e3e root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) for_0a3d0c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) contains_0a8b6d root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) if_1e5f1c root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) tolist_5f4d3c root.Std_k98ojb.Strings.Characters {}\n        tolist_5f4d3c.input -> for_8e4e3e.items\n        input_2f0b99 -> tolist_5f4d3c.input\n        for_8e4e3e.onItem -> for_0a3d0c.items\n        for_0a3d0c.onItem -> contains_0a8b6d.input\n        for_0a3d0c.item -> contains_0a8b6d.contains\n        for_8e4e3e.item -> contains_0a8b6d.input\n        for_8e4e3e.index -> contains_0a8b6d.index\n        contains_0a8b6d.result -> if_1e5f1c.predicate\n        if_1e5f1c.then -> output_8c9c4c\n        for_8e4e3e.next -> for_0a3d0c.next\n        if_1e5f1c.else -> for_0a3d0c.next\n        for_8e4e3e.next -> for_8e4e3e.next\n    }\n\n    \n\n    instance(x: -272, y: 163) first_repeated_char_9e2d6e root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -272, y: 6, name: \"string\") property(String) input_0\n\n        out(x: 640, y: -4, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) characters_5a9d5e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) find_1e2b3f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_1`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_2`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_3`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_4`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_5`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_6`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_7`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_8`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_9`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_10`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_11`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_12`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_13`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_14`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_15`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_16`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_17`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_18`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_19`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_20`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_21`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_22`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_23`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_24`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_25`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_26`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_27`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_28`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_29`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_30`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_31`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_32`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_33`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_34`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_35`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_36`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_37`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_38`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_39`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_40`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_41`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_42`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_43`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_44`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_45`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_46`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_47`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_48`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_49`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_50`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_51`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_52`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_53`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1e2b3f_54`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_1",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -274, y: 2, name: \"string\") property(String) input_2a7f2f\n\n        out(x: 800, y: -2, name: \"output\") property(String) output_2e7c6f\n\n        instance(x: 0, y: 0) ``First repeated character_4c9f94`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``First repeated character_4c9f94``.predicate.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler.handler",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 9, name: \"string\") property(String) input_0\n\n        out(x: 531, y: -1, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) to_chars_9a8d4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) filter_6b2b4a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) find_6d05b0_1 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) contains_5e3c4e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) map_2e9d0f root.Std_k98ojb.Iteration.Map {}\n        to_chars_9a8d4f.characters -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 310, y: 35) contains_5e3c4e_1 root.Std_k98ojb.Iteration.Contains {}\n            instance(x: 89, y: 29) list_9f2c9c root.Std_k98ojb.List.Slice {}\n            instance(x: 89, y: 29) list_9f2c9c_1 root.Std_k98ojb.List.Slice {}\n            contains_5e3c4e_1.items -> list_9f2c9c.list\n            list_9f2c9c.start -> list_9f2c9c_1.start\n            list_9f2c9c_1.end -> list_9f2c9c.end\n            0 -> list_9f2c9c.start\n            -1 -> list_9f2c9c_1.end\n            list_9f2c9c.result -> contains_5e3c4e_1.items\n            elem_9f6850 -> contains_5e3c4e_1.item\n            contains_5e3c4e_1.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        find_6d05b0.item -> output_0\n        to_chars_9a8d4f.input -> input_0\n        find_6d05b0.items -> filter_6b2b4a.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 310, y: 35) list_9f2c9c_2 root.Std_k98ojb.List.Contains {}\n            instance(x: 89, y: 29) list_9f2c9c_3 root.Std_k98ojb.List.Slice {}\n            list_9f2c9c_2.list -> list_9f2c9c_3.list\n            list_9f2c9c_3.start -> list_9f2c9c_2.index\n            list_9f2c9c_3.end -> list_9f2c9c_2.index\n            0 -> list_9f2c9c_3.start\n            -1 -> list_9f2c9c_3.end\n            list_9f2c9c_3.result -> list_9f2c9c_2.list\n            elem_9f6850 -> list_9f2c9c_2.item\n            list_9f2c9c_2.result -> bool_af09a7\n        } -> filter_6b2b4a.predicate\n        filter_6b2b4a.output_list -> find_6d05b0_1.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 310, y: 35) contains_5e3c4e_2 root.Std_k98ojb.Iteration.Contains {}\n            instance(x: 89, y: 29) list_9f2c9c_4 root.Std_k98ojb.List.Slice {}\n            instance(x: 89, y: 29) list_9f2c9c_5 root.Std_k98ojb.List.Slice {}\n            contains_5e3c4e_2.items -> list_9f2c9c_4.list\n            list_9f2c9c_4.start -> list_9f2c9c_5.start\n            list_9f2c9c_5.end -> list_9f2c9c_4.end\n            0 -> list_9f2c9c_4.start\n            -1 -> list_9f2c9c_5.end\n            list_9f2c9c_4.result -> contains_5e3c4e_2.items\n            elem_9f6850 -> contains_5e3c4e_2.item\n            contains_5e3c4e_2.result -> bool_af09a7\n        } -> find_6d05b0_1.predicate\n        find_6d05b0_1.item -> output_0\n        filter_6b2b4a.output_list -> map_2e9d0f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"output\") property(String) output_9f6850\n\n            instance(x: 310, y: 35) list_9f2c9c_6 root.Std_k98ojb.List.Slice {}\n            instance(x: 89, y: 29) list_9f2c9c_7 root.Std_k98ojb.List.Slice {}\n            list_9f2c9c_6.list -> list_9f2c9c_7.list\n            list_9f2c9c_7.start -> list_9f2c9c_6.start\n            list_9f2c9c_6.end -> list_9f2c9c_7.end\n            0 -> list_9f2c9c_6.start\n            -1 -> list_9f2c9c_7.end\n            list_9f2c9c_7.result -> list_9f2c9c_6.list\n            list_9f2c9c_6.result -> output_9f6850\n        } -> map_2e9d0f.handler\n        map_2e9d0f.output_list -> contains_5e3c4e.items\n        contains_5e3c4e.item -> contains_5e3c4e_2.item\n        contains_5e3c4e.items -> contains_5e3c4e_2.items\n    }\n\n    \n\n    instance(x: -283, y: 9) first_repeated_char_8a5c2f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: -3, name: \"string\") property(String) string_3c6e8e\n\n        out(x: 800, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) first_repeated_char_3d9a2f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``string_3c6e8e_0`` root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) contains_2b7e3e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``string_3c6e8e_1`` root.Std_k98ojb.Strings.Characters {}\n        ``string_3c6e8e_0``.characters -> first_repeated_char_3d9a2f.items\n        func() {\n            in(x: -110, y: 32, name: \"current\") property(String) current_1e2d1f\n\n            out(x: 516, y: 42, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 90, y: 27) ``string_3c6e8e_1`` root.Std_k98ojb.Strings.Characters {}\n            instance(x: 316, y: 33) contains_2b7e3e root.Std_k98ojb.Iteration.Filter {}\n            ``string_3c6e8e_1``.characters -> contains_2b7e3e.items\n            current_1e2d1f -> ``string_3c6e8e_1``.input\n            func() {\n                in(x: -110, y: 32, name: \"current\") property(String) current_1e2d1f\n\n                out(x: 516, y: 42, name: \"bool\") property(Bool) bool_0\n\n                instance(x: 90, y: 27) equal_0e4b5f root.Std_k98ojb.Logic.Equal {}\n                current_1e2d1f -> equal_0e4b5f.left\n                current_1e2d1f -> equal_0e4b5f.right\n                equal_0e4b5f.result -> bool_0\n            } -> contains_2b7e3e.predicate\n            contains_2b7e3e.output_list -> bool_0\n        } -> first_repeated_char_3d9a2f.predicate\n        first_repeated_char_3d9a2f.item -> output_0\n        string_3c6e8e -> ``string_3c6e8e_0``.input\n        string_3c6e8e -> ``string_3c6e8e_1``.input\n    }\n\n    \n\n    instance(x: -289, y: -5) first_repeated_char_1e4c9d root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -297, y: -4, name: \"string\") property(String) input_0\n\n        out(x: 584, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) find_5e1d0f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) for_0f7f6c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) contains_5c2f8a root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) list_5c5a6e root.Std_k98ojb.List {}\n        func() {\n            in(x: -129, y: 35, name: \"char\") property(String) char_0\n\n            out(x: 513, y: 36, name: \"bool\") property(Bool) bool_0\n\n            input_0 -> contains_5c5c6a.input\n            char_0 -> contains_5c5c6a.contains\n            contains_5c5c6a.result -> bool_0\n        } -> find_5e1d0f.predicate\n        list_5c5a6e.items -> contains_5c5c6a.input\n        for_0f7f6c.items -> list_5c5a6e.items\n        input_0 -> for_0f7f6c.items\n        for_0f7f6c.onItem -> contains_5c5c6a.input\n        for_0f7f6c.onItem -> find_5e1d0f.items\n        for_0f7f6c.onItem -> list_5c5a6e.add\n        find_5e1d0f.item -> output_0\n    }\n\n    \n\n    instance(x: -282, y: -5) first_repeated_char_1d0b2d root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -274, y: 0, name: \"string\") property(String) string_2\n\n        out(x: 550, y: -1, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) characters_2d5d6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) find_2c5e5e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_2c5e5e_0`` root.Std_k98ojb.Iteration.Find {}\n        characters_2d5d6f.characters -> find_2c5e5e.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_6f2e5d root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            characters_2d5d6f.characters -> contains_6f2e5d.input\n            elem_9f6850 -> contains_6f2e5d.contains\n            contains_6f2e5d.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_2c5e5e.predicate\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_6f2e5d root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            find_2c5e5e.item -> contains_6f2e5d.contains\n            characters_2d5d6f.characters -> contains_6f2e5d.input\n            elem_9f6850 -> contains_6f2e5d.contains\n            contains_6f2e5d.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> ``find_2c5e5e_0``.predicate\n        characters_2d5d6f.characters -> ``find_2c5e5e_0``.items\n        find_2c5e5e.item -> output_0\n        string_2 -> characters_2d5d6f.input\n    }\n\n    \n\n    instance(x: -291, y: 0) first_repeated_7e9a3c root.main.first_repeated {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 2, name: \"string\") property(String) string_7b4e0f\n\n        out(x: 756, y: -5, name: \"output\") property(String) output_6d1e3f\n\n        instance(x: 0, y: 0) first_repeated_9f7f2f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``list_2f6e1f`` root.Std_k98ojb.List.Empty {}\n        instance(x: 0, y: 0) ``first repeated_0b0b2f`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``list_9c2f3f`` root.Std_k98ojb.List.Empty {}\n        instance(x: 0, y: 0) ``characters_7b4e0f`` root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) ``contains_7b4e0f`` root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) ``add_7b4e0f`` root.Std_k98ojb.List.Add {}\n        instance(x: 0, y: 0) ``getAt_7b4e0f`` root.Std_k98ojb.List.GetAt {}\n        string_7b4e0f -> ``characters_7b4e0f``.input\n        ``characters_7b4e0f``.characters -> ``getAt_7b4e0f``.list\n        ``getAt_7b4e0f``.index -> ``getAt_7b4e0f``.index\n        ``getAt_7b4e0f``.item -> ``contains_7b4e0f``.input\n        ``list_9c2f3f``.listWithItem -> ``add_7b4e0f``.list\n        ``getAt_7b4e0f``.item -> ``add_7b4e0f``.item\n        ``add_7b4e0f``.listWithItem -> ``list_9c2f3f``.listWithItem\n        ``list_9c2f3f``.list -> ``contains_7b4e0f``.list\n        ``contains_7b4e0f``.result -> ``first repeated_0b0b2f``.predicate\n        ``characters_7b4e0f``.characters -> ``first repeated_0b0b2f``.items\n        ``first repeated_0b0b2f``.item -> ``first_repeated_9f7f2f``.predicate\n        ``first_repeated_9f7f2f``.items -> ``list_2f6e1f``.listWithItem\n        ``first_repeated_9f7f2f``.item -> output_6d1e3f\n    }\n\n    \n\n    instance(x: -288, y: 0) first_repeated_char_8c5f4f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -274, y: 162, name: \"string\") property(String) string_2f9f7d\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_6d9e0d\n\n        instance(x: 0, y: 0) characters_9a5b4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) find_8e3e7c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) filter_3c3b5c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) set_9e1c0f root.Std_k98ojb.Std.Set {}\n        instance(x: 0, y: 0) map_9c6c8d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) filter_2c4a9d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) map_8e3e4e root.Std_k98ojb.Iteration.Map {}\n        string_2f9f7d -> characters_9a5b4f.input\n        characters_9a5b4f.characters -> map_9c6c8d.items\n        func() {\n            in(x: -133, y: 34, name: \"item\") property(String) item_5f1f2e\n\n            out(x: 515, y: 44, name: \"output\") property(String) output_6c0b8e\n\n            instance(x: 89, y: 29) count_8c7c4e root.Std_k98ojb.Iteration.Count {}\n            instance(x: 310, y: 35) set_2f6c7f root.Std_k98ojb.Std.Set {}\n            instance(x: 0, y: 0) set_3f3b7d root.Std_k98ojb.Std.Set {}\n            instance(x: 0, y: 0) set_3c4b5f root.Std_k98ojb.Std.Set {}\n            item_5f1f2e -> count_8c7c4e.items\n            count_8c7c4e.count -> set_2f6c7f.count\n            count_8c7c4e.reset -> set_2f6c7f.reset\n            count_8c7c4e.continue -> set_2f6c7f.continue\n            set_2f6c7f.set -> set_3f3b7d.input\n            set_2f6c7f.continue -> set_3f3b7d.continue\n            set_3f3b7d.set -> set_3c4b5f.input\n            set_3f3b7d.continue -> set_3c4b5f.continue\n            set_3c4b5f.set -> output_6c0b8e\n            set_3c4b5f.continue -> output_6c0b8e\n        } -> map_9c6c8d.handler\n        map_9c6c8d.output_list -> filter_3c3b5c.items\n        func() {\n            in(x: -133, y: 34, name: \"item\") property(String) item_5f1f2e\n\n            out(x: 515, y: 44, name: \"output\") property(Bool) output_6c0b8e\n\n            instance(x: 89, y: 29) contains_3b7c4e root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) count_8c7c4e root.Std_k98ojb.Iteration.Count {}\n            instance(x: 0, y: 0) set_2f6c7f root.Std_k98ojb.Std.Set {}\n            instance(x: 0, y: 0) set_3f3b7d root.Std_k98ojb.Std.Set {}\n            instance(x: 0, y: 0) set_3c4b5f root.Std_k98ojb.Std.Set {}\n            item_5f1f2e -> count_8c7c4e.items\n            count_8c7c4e.count -> set_2f6c7f.count\n            count_8c7c4e.reset -> set_2f6c7f.reset\n            count_8c7c4e.continue -> set_2f6c7f.continue\n            set_2f6c7f.set -> set_3f3b7d.input\n            set_2f6c7f.continue -> set_3f3b7d.continue\n            set_3f3b7d.set -> set_3c4b5f.input\n            set_3f3b7d.continue -> set_3c4b5f.continue\n            set_3c4b5f.set -> contains_3b7c4e.list\n            contains_3b7c4e.contains -> contains_3b7c4e.input\n            contains_3b7c4e.result -> output_6c0b8e\n        } -> filter_3c3b5c.handler\n        filter_3c3b5c.output_list -> set_9e1c0f.items\n        set_9e1c0f.set -> find_8e3e7c.items\n        func() {\n            in(x: -133, y: 34, name: \"item\") property(String) item_5f1f2e\n\n            out(x: 515, y: 44, name: \"output\") property(String) output_6c0b8e\n\n            instance(x: 89, y: 29) set_2f6c7f root.Std_k98ojb.Std.Set {}\n            instance(x: 310, y: 35) count_8c7c4e root.Std_k98ojb.Iteration.Count {}\n            instance(x: 0, y: 0) set_3f3b7d root.Std_k98ojb.Std.Set {}\n            instance(x: 0, y: 0) set_3c4b5f root.Std_k98ojb.Std.Set {}\n            item_5f1f2e -> count_8c7c4e.items\n            count_8c7c4e.count -> set_2f6c7f.count\n            count_8c7c4e.reset -> set_2f6c7f.reset\n            count_8c7c4e.continue -> set_2f6c7f.continue\n            set_2f6c7f.set -> set_3f3b7d.input\n            set_2f6c7f.continue -> set_3f3b7d.continue\n            set_3f3b7d.set -> set_3c4b5f.input\n            set_3f3b7d.continue -> set_3c4b5f.continue\n            set_3c4b5f.set -> output_6c0b8e\n            set_3c4b5f.continue -> output_6c0b8e\n        } -> map_8e3e4e.handler\n        map_8e3e4e.output_list -> filter_2c4a9d.items\n        func() {\n            in(x: -133, y: 34, name: \"item\") property(String) item_5f1f2e\n\n            out(x: 515, y: 44, name: \"output\") property(Bool) output_6c0b8e\n\n            instance(x: 89, y: 29) contains_3b7c4e root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) count_8c7c4e root.Std_k98ojb.Iteration.Count {}\n            instance(x: 0, y: 0) set_2f6c7f root.Std_k98ojb.Std.Set {}\n            instance(x: 0, y: 0) set_3f3b7d root.Std_k98ojb.Std.Set {}\n            instance(x: 0, y: 0) set_3c4b5f root.Std_k98ojb.Std.Set {}\n            item_5f1f2e -> count_8c7c4e.items\n            count_8c7c4e.count -> set_2f6c7f.count\n            count_8c7c4e.reset -> set_2f6c7f.reset\n            count_8c7c4e.continue -> set_2f6c7f.continue\n            set"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -289, y: -178, name: \"items\") property(List) items_2f0e9c\n\n        out(x: 54, y: -167, name: \"second_smallest\") property(Number) second_smallest_1a2c1f\n\n        instance(x: -60, y: -188) list_min_node root.Std_k98ojb.List.Min {}\n        items_2f0e9c -> list_min_node.items\n        list_min_node.min -> remove_min_1.input_0\n        instance(x: -61, y: -60) remove_min_1 root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> remove_min_1.index\n        items_2f0e9c -> remove_min_1.list\n        remove_min_1.listWithoutItem -> list_min_node_2.items\n        instance(x: -60, y: -60) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_min_node_2.min -> second_smallest_1a2c1f\n    }\n\n    \n\n    instance(x: -55, y: 519) second_smallest_3e6d8f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -418) list_remove_node root.Std_k98ojb.List.Remove {}\n        instance(x: 426, y: -532) list_min_node2 root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.index\n        list_min_node.min -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node2.items\n        list_min_node2.min -> second_smallest_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -296, y: -194, name: \"items\") property(List) items_2a5e6d\n\n        out(x: 51, y: -219, name: \"min\") property(Number) min_5f3b2c\n\n        instance(x: -115, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) list_remove_node root.Std_k98ojb.List.Remove {}\n        instance(x: 0, y: 0) list_min_node_2 root.Std_k98ojb.List.Min {}\n        items_2a5e6d -> list_min_node.items\n        list_min_node.min -> list_remove_node.index\n        items_2a5e6d -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> min_5f3b2c\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -308, y: -194, name: \"list\") property(List) list_ai\n        out(x: 162, y: -211, name: \"min\") property(Number) min_ai\n\n        instance(x: 426, y: -303) min_0e6f9f root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) remove_1f1d1c root.Std_k98ojb.List.Remove {}\n        instance(x: 426, y: -303) min_6a8e8f root.Std_k98ojb.List.Min {}\n        list_ai -> min_0e6f9f.items\n        min_0e6f9f.min -> remove_1f1d1c.index\n        list_ai -> remove_1f1d1c.list\n        remove_1f1d1c.listWithoutItem -> min_6a8e8f.items\n        min_6a8e8f.min -> min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -296, y: -194, name: \"items\") property(List) items_5b8c0f\n\n        out(x: 52, y: -220, name: \"second_smallest\") property(Number) second_smallest_5e6b9c\n\n        instance(x: -109, y: -109) get_at_ae8c4f root.Std_k98ojb.List.GetAt {}\n        instance(x: -106, y: -299) sort_2a3c7b root.Std_k98ojb.List.Sort {}\n        instance(x: -105, y: -110) get_at_7f1d9c root.Std_k98ojb.List.GetAt {}\n        items_5b8c0f -> sort_2a3c7b.list\n        sort_2a3c7b.sorted_list -> get_at_ae8c4f.list\n        1 -> get_at_ae8c4f.index\n        get_at_ae8c4f.itemAtIndex -> second_smallest_5e6b9c\n    }\n\n    \n\n    instance(x: 420, y: 0) second_smallest_5f1d0e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -280, y: -190, name: \"items\") property(List) items_6b3c6e\n\n        out(x: 51, y: -205, name: \"second_smallest\") property(Number) second_smallest_3f3d2c\n\n        instance(x: -103, y: -111) ifexpression_9f9c3a root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        instance(x: -106, y: -109) ifexpression_8f2f2e root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < c\"\n        }\n        instance(x: -105, y: -110) ifexpression_6b8d7e root.Std_k98ojb.Std.IfExpression {\n            expression: \"b < c\"\n        }\n        instance(x: -102, y: -108) ifexpression_8b2b8f root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        instance(x: -104, y: -109) ifexpression_5e8e6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < c\"\n        }\n        instance(x: -103, y: -110) ifexpression_9c2c2e root.Std_k98ojb.Std.IfExpression {\n            expression: \"b < c\"\n        }\n        instance(x: -102, y: -108) ifexpression_9c8c7d root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        instance(x: -104, y: -109) ifexpression_8e8f7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < c\"\n        }\n        instance(x: -105, y: -110) ifexpression_6f8f8f root.Std_k98ojb.Std.IfExpression {\n            expression: \"b < c\"\n        }\n        instance(x: -103, y: -111) ifexpression_9c2c8f root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        instance(x: -104, y: -109) ifexpression_5e8e8e root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < c\"\n        }\n        instance(x: -105, y: -110) ifexpression_9c2c9e root.Std_k98ojb.Std.IfExpression {\n            expression: \"b < c\"\n        }\n        instance(x: -101, y: -107) ifexpression_8b2b7e root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        instance(x: -104, y: -109) ifexpression_5e8e7e root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < c\"\n        }\n        instance(x: -105, y: -110) ifexpression_9c2c7e root.Std_k98ojb.Std.IfExpression {\n            expression: \"b < c\"\n        }\n        instance(x: -101, y: -107) ifexpression_8b2b6e root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        instance(x: -104, y: -109) ifexpression_5e8e6e root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < c\"\n        }\n        instance(x: -105, y: -110) ifexpression_9c2c6e root.Std_k98ojb.Std.IfExpression {\n            expression: \"b < c\"\n        }\n        instance(x: -102, y: -108) list_min_node_9e9e9e root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_1 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_2 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_3 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_4 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_5 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_6 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_7 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_8 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_9 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_10 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_11 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_12 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_13 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_14 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_15 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_16 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_17 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_18 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_19 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_20 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_21 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_22 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_23 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_24 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_25 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_26 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_27 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_28 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_29 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_30 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_31 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_32 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_33 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -108) list_min_node_9e9e9e_34 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y:",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -903, y: -379, name: \"list\") property(List) list_abed4a\n\n        out(x: -78, y: -306, name: \"min\") property(Number) smallest_8713cf\n\n        instance(x: -609, y: -363) data_9a9c70 = list_abed4a\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        data_9a9c70 -> min_c3e343.items\n        min_c3e343.min -> data_9a9c70.min\n        instance(x: -341, y: -301) remove_5a5c51 root.Std_k98ojb.List.Remove {}\n        data_9a9c70.min -> remove_5a5c51.index\n        data_9a9c70 -> remove_5a9c51.list\n        remove_5a9c51.listWithoutItem -> data_9a9c70\n        instance(x: -341, y: -301) min_c3e343_1 root.Std_k98ojb.List.Min {}\n        data_9a9c70 -> min_c3e343_1.items\n        min_c3e343_1.min -> smallest_8713cf\n    }\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -903, y: -379, name: \"list\") property(List) list_abed4a\n\n        out(x: -78, y: -306, name: \"second smallest\") property(Number) second_smallest_8713cf\n\n        instance(x: -609, y: -363) min_0_8d1e8e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_2_3c7d6f root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 489, y: 36) min_1_4e1b3e root.Std_k98ojb.List.Min {}\n            min_1_4e1b3e.items -> min_2_3c7d6f.items\n            elem_9f6850 -> min_1_4e1b3e.items\n            min_2_3c7d6f.min -> notequal_807ffd.left\n            min_0_8d1e8e.item -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> min_0_8d1e8e.predicate\n        list_abed4a -> min_0_8d1e8e.items\n        instance(x: -341, y: -301) min_1_4e1b3e_2 root.Std_k98ojb.List.Min {}\n        min_0_8d1e8e.item -> min_1_4e1b3e_2.items\n        min_1_4e1b3e_2.min -> second_smallest_8713cf\n    }\n    \n\n    instance(x: 322, y: 568) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -287, y: -0, name: \"items\") property(List) items_ai\n\n        out(x: 597, y: -1, name: \"min\") property(Number) min_ai\n\n        data_instance(x: -599, y: -361) data_9a9c70  = [a, b, c]\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        a -> data_9a9c70.a\n        b -> data_9a9c70.b\n        c -> data_9a9c70.c\n        data_9a9c70 -> min_c3e343.items\n        min_c3e343.min -> smallest_8713cf\n        instance(x: -61, y: -307) list_remove_7d0a3d root.Std_k98ojb.List.Remove {}\n        smallest_8713cf -> list_remove_7d0a3d.index\n        items_ai -> list_remove_7d0a3d.list\n        list_remove_7d0a3d.listWithoutItem -> items_ai\n        instance(x: -55, y: -61) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        items_ai -> min_c3e343_2.items\n        min_c3e343_2.min -> min_ai\n    }\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -293, y: -186, name: \"list\") property(List) list_7f8f2a\n\n        out(x: 462, y: -187, name: \"second smallest\") property(Number) second_smallest_3e2f9a\n\n        instance(x: 0, y: 0) min_5f8c80 root.Std_k98ojb.List.Min {}\n        list_7f8f2a -> min_5f8c80.items\n        min_5f8c80.min -> second_smallest_3e2f9a\n        instance(x: 0, y: 0) filter_6e3d0c root.Std_k98ojb.Query.Filter {\n            where: \"it != min_5f8c80.min\"\n        }\n        list_7f8f2a -> filter_6e3d0c.list\n        instance(x: 0, y: 0) min_6a4f2d root.Std_k98ojb.List.Min {}\n        filter_6e3d0c.result -> min_6a4f2d.items\n        min_6a4f2d.min -> second_smallest_3e2f9a\n    }\n\n    \n\n    instance(x: 296, y: 536) second_smallest_1c6c0e root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_RAG_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15910,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -347, y: -234, name: \"list1\") property(List) list1_7d0f9e\n        in(x: -341, y: 36, name: \"list2\") property(List) list2_7a0a3c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_8c5d9c\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_7f1b3c\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"list2.contains(current)\"\n        }\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        ifexpression_875761.then -> continue_8c5d9c\n        ifexpression_875761.value -> output_7f1b3c\n        list1_7d0f9e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_8c5d9c\n        list2_7a0a3c -> ifexpression_875761.gen_0\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_1d3c4b root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if two lists have at least one common element.\") common_element {\n        in(x: -452, y: -229, name: \"list1\") property(List) list1_5a1e8f\n        in(x: -472, y: 20, name: \"list2\") property(List) list2_5c9d9c\n\n        out(x: 1219, y: 14, name: \"output\") property(Bool) output_9b8c6f\n\n        instance(x: 751, y: 98) ifexpression_5f8e5c root.Std_k98ojb.Std.IfExpression {\n            expression: \"contains\"\n        }\n        instance(x: 320, y: -10) for_6c4b5c root.Std_k98ojb.Std.For {}\n        instance(x: -273, y: -23) contains_1d9f8e root.Std_k98ojb.List.Contains {}\n        instance(x: -0, y: -123) getat_4b7f2c root.Std_k98ojb.List.GetAt {}\n        list1_5a1e8f -> for_6c4b5c.items\n        for_6c4b5c.item -> contains_1d9f8e.item\n        list2_5c9d9c -> contains_1d9f8e.list\n        contains_1d9f8e.is_contained -> ifexpression_5f8e5c.gen_0\n        for_6c4c6c.onItem -> ifexpression_5f8e5c.execute\n        for_6c4b5c.done -> ifexpression_5f8e5c.else\n        list1_5a1e8f -> getat_4b7f2c.list\n        0 -> getat_4b7f2c.index\n        getat_4b7f2c.itemAtIndex -> for_6c4b5c.reset\n        ifexpression_5f8e5c.value -> output_9b8c6f\n        ifexpression_5f8e5c.then -> for_6c4b5c.next\n    }\n\n    \n\n    instance(x: 12, y: -174) common_element_5b7b4c root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -485, y: -212, name: \"list1\") property(List) list1_7a1d3e\n        in(x: -480, y: 33, name: \"list2\") property(List) list2_7d6d5c\n\n        out(x: 1262, y: -208, name: \"output\") property(Bool) output_7d3e2d\n\n        instance(x: 1007, y: -201) contains_6d3c7c root.Std_k98ojb.List.Contains {}\n        instance(x: 325, y: -203) intersection_1b3c92 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 742, y: -209) not_4e6b7e root.Std_k98ojb.Logic.Not {}\n        list1_7a1d3e -> intersection_1b3c92.left\n        list2_7d6d5c -> intersection_1b3c92.right\n        intersection_1b3c92.intersect -> contains_6d3c7c.list\n        1 -> contains_6d3c7c.item\n        contains_6d3c7c.is_contained -> not_4e6b7e.input\n        not_4e6b7e.result -> output_7d3e2d\n    }\n\n    \n\n    instance(x: -288, y: -5) common_element_3b5f8f root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if two lists have at least one common element.\") common_element {\n        in(x: -333, y: -177, name: \"list1\") property(List) list1_7d6b9f\n        in(x: -339, y: 32, name: \"list2\") property(List) list2_7f1b92\n\n        out(x: 1170, y: 23, name: \"output\") property(Bool) output_6b6c8d\n\n        instance(x: 666, y: 59) intersection_5e7b4e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1047, y: 57) notempty_6f5c5e root.Std_k98ojb.List.NotEmpty {}\n        list1_7d6b9f -> intersection_5e7b4e.left\n        list2_7f1b92 -> intersection_5e7b4e.right\n        intersection_5e7b4e.intersect -> notempty_6f5c5e.list\n        notempty_6f5c5e.isEmpty -> output_6b6c8d\n    }\n\n    \n\n    instance(x: -299, y: -3) common_element_5d4e0f root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if two lists have at least one common element.\") common_element {\n        in(x: -527, y: -214, name: \"list1\") property(List) list1_07cae4\n        in(x: -527, y: -92, name: \"list2\") property(List) list2_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list1_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        list2_07cae4 -> contains_32727d.list\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) common_element_7a4dad root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -365, y: -230, name: \"list1\") property(List) list1_6b3f6c\n        in(x: -369, y: -9, name: \"list2\") property(List) list2_1e4c8d\n\n        out(x: 1218, y: -4, name: \"output\") property(Bool) output_9f9e1b\n\n        instance(x: 117, y: -222) intersection_1e6d4f root.Std_k98ojb.Sets.Intersection {}\n        list1_6b3f6c -> intersection_1e6d4f.left\n        list2_1e4c8d -> intersection_1e6d4f.right\n        instance(x: 753, y: -221) notempty_7e4f3c root.Std_k98ojb.List.NotEmpty {}\n        intersection_1e6d4f.intersect -> notempty_7e4f3c.list\n        notempty_7e4f3c.isEmpty -> output_9f9e1b\n    }\n\n    \n\n    instance(x: -300, y: -4) common_element_6e9d0f root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -347, y: -178, name: \"list1\") property(List) list1_7d4d8d\n        in(x: -348, y: 26, name: \"list2\") property(List) list2_6c6c5e\n\n        out(x: 1261, y: -9, name: \"output\") property(Bool) output_3c2c8d\n\n        instance(x: 1016, y: 41) contains_3f6d1d root.Std_k98ojb.List.Contains {}\n        instance(x: 699, y: -156) intersection_6e1c3e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1030, y: -182) not_5e7a2e root.Std_k98ojb.Logic.Not {}\n        list1_7d4d8d -> intersection_6e1c3e.left\n        list2_6c6c5e -> intersection_6e1c3e.right\n        intersection_6e1c3e.intersection -> contains_3f6d1d.list\n        list1_7d4d8d -> contains_3f6d1d.item\n        contains_3f6d1d.is_contained -> not_5e7a2e.input\n        not_5e7a2e.result -> output_3c2c8d\n    }\n\n    \n\n    instance(x: -332, y: -11) common_element_1f5b9f root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -389, y: -177, name: \"list1\") property(List) list1_3f8f8c\n        in(x: -381, y: 39, name: \"list2\") property(List) list2_1e7b5f\n\n        out(x: 1141, y: 17, name: \"output\") property(Bool) output_9b2c7d\n\n        instance(x: 645, y: 63) ifexpression_7e5f7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous || current\"\n        }\n        getter(x: 277, y: 190, name: \"getter_1f3f9e\") getter_1f3f9e = previous\n        setter(x: 622, y: -303, name: \"setter_e7e5b7\") setter_e7e5b7 = previous\n        instance(x: 300, y: -20) for_5d3b5e root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_e7e5b7\") setter_4d8f2c = previous\n        instance(x: -265, y: -35) contains_3f4b5f root.Std_k98ojb.List.Contains {}\n        ifexpression_7e5f7f.else -> setter_e7e5b7.execute\n        ifexpression_7e5f7f.value -> output_9b2c7d\n        ifexpression_7e5f7f.then -> setter_e7e5b7.execute\n        list1_3f8f8c -> for_5d3b5e.items\n        for_5d3b5e.item -> ifexpression_7e5f7f.gen_2\n        for_5d3b5e.index -> ifexpression_7e5f7f.gen_0\n        getter_1f3f9e.value -> ifexpression_7e5f7f.gen_1\n        for_5d3b5e.onItem -> ifexpression_7e5f7f.execute\n        for_5d3b5e.done -> setter_e7e5b7.execute\n        for_5d3b5e.item -> setter_e7e5b7.new_value\n        list2_1e7b5f -> contains_3f4b5f.list\n        for_5d3b5e.item -> contains_3f4b5f.item\n        contains_3f4b5f.is_contained -> ifexpression_7e5f7f.gen_3\n        setter_4d8f2c.continue -> for_5d3b5e.reset\n        setter_e7e5b7.continue -> for_5d3b5e.next\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_9e2e9f root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -285, y: -86, name: \"list1\") property(List) list1_3af6ba\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_8f1b8e root.Std_k98ojb.List.NotEmpty {}\n        list1_3af6ba -> intersection_c7c7e6.left\n        list2_c62075 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> notempty_8f1b8e.list\n        notempty_8f1b8e.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_ac7dfb root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -316, y: -178, name: \"list1\") property(List) list1_9c2d8d\n        in(x: -323, y: 47, name: \"list2\") property(List) list2_9c4b3f\n\n        out(x: 1207, y: 33, name: \"output\") property(Bool) output_8c1d4e\n\n        instance(x: 1053, y: 54) contains_7e2b2f root.Std_k98ojb.List.Contains {}\n        instance(x: 696, y: -163) intersection_7d3e7c root.Std_k98ojb.Sets.Intersection {}\n        list1_9c2d8d -> intersection_7d3e7c.left\n        list2_9c4b3f -> intersection_7d3e7c.right\n        intersection_7d3e7c.intersection -> contains_7e2b2f.list\n        0 -> contains_7e2b2f.item\n        contains_7e2b2f.is_contained -> output_8c1d4e\n    }\n\n    \n\n    instance(x: -290, y: -18) common_element_9a1d6d root.main.common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -473, y: -238, name: \"list\") property(List) list_1e4c2c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_3c8f5e\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_9b9c4e\n\n        instance(x: 752, y: 93) ifexpression_6f6b9c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_9e3d6f\") getter_9e3d6f = previous\n        setter(x: 679, y: -313, name: \"setter_3c1d3f\") setter_3c1d3f = previous\n        instance(x: 321, y: -20) for_7d5d4f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_3c1d3f\") setter_9f4d2c = previous\n        instance(x: -275, y: -35) getat_1f6b53 root.Std_k98ojb.List.GetAt {}\n        ifexpression_6f6b9c.else -> continue_3c8f5e\n        ifexpression_6f6b9c.value -> output_9b9c4e\n        ifexpression_6f6b9c.then -> setter_3c1d3f.execute\n        list_1e4c2c -> for_7d5d4f.items\n        for_7d5d4f.item -> ifexpression_6f6b9c.gen_2\n        for_7d5d4f.index -> ifexpression_6f6b9c.gen_0\n        getter_9e3d6f.value -> ifexpression_6f6b9c.gen_1\n        for_7d5d4f.onItem -> ifexpression_6f6b9c.execute\n        for_7d5d4f.done -> continue_3c8f5e\n        for_7d5d4f.item -> setter_3c1d3f.new_value\n        list_1e4c2c -> getat_1f6b53.list\n        0 -> getat_1f6b53.index\n        getat_1f6b53.itemAtIndex -> setter_9f4d2c.new_value\n        execute_90aaec -> setter_9f4d2c.execute\n        setter_9f4d2c.continue -> for_7d5d4f.reset\n        setter_3c1d3f.continue -> for_7d5d4f.next\n    }\n\n    \n\n    instance(x: 10, y: -177) consecutive_numbers_5a7a6d root.main.consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -497, y: -208, name: \"list\") property(List) list_1b5c2f\n\n        out(x: 1239, y: -211, name: \"output\") property(Bool) output_7d5c5c\n\n        instance(x: -272, y: -206) for_6f7c7e root.Std_k98ojb.Std.For {}\n        instance(x: 751, y: -210) ifexpression_9e2f0a root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 332, y: 161, name: \"getter_6e3b5e\") getter_6e3b5e = previous\n        setter(x: 678, y: -320, name: \"setter_9b8c6f\") setter_9b8c6f = previous\n        instance(x: 320, y: -24) getat_9e7f9f root.Std_k98ojb.List.GetAt {}\n        ifexpression_9e2f0a.else -> setter_9b8c6f.execute\n        ifexpression_9e2f0a.value -> output_7d5c5c\n        ifexpression_9e2f0a.then -> setter_9b8c6f.execute\n        list_1b5c2f -> for_6f7c7e.items\n        for_6f7c7e.item -> ifexpression_9e2f0a.gen_2\n        for_6f7c7e.index -> ifexpression_9e2f0a.gen_0\n        getter_6e3b5e.value -> ifexpression_9e2f0a.gen_1\n        for_6f7c7e.onItem -> ifexpression_9e2f0a.execute\n        for_6f7c7e.done -> setter_9b8c6f.execute\n        for_6f7c7e.item -> setter_9b8c6f.new_value\n        list_1b5c2f -> getat_9e7f9f.list\n        0 -> getat_9e7f9f.index\n        getat_9e7f9f.itemAtIndex -> getter_6e3b5e.value\n        setter_9b8c6f.continue -> for_6f7c7e.next\n    }\n\n    \n\n    instance(x: 8, y: -174) consecutive_7a8a6a root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -517, y: -233, name: \"list\") property(List) list_5d3f58\n\n        out(x: 1183, y: -229, name: \"output\") property(Bool) output_7d3e2f\n\n        instance(x: 764, y: -223) ifexpression_5c6e64 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 346, y: -46, name: \"getter_9e5f9e\") getter_9e5f9e = previous\n        setter(x: 681, y: -313, name: \"setter_6c4a7c\") setter_6c4a7c = previous\n        instance(x: 319, y: -138) for_5a1d7d root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -239, name: \"setter_6c4a7c\") setter_9b8d92 = previous\n        instance(x: -275, y: -153) getat_9c7c4c root.Std_k98ojb.List.GetAt {}\n        ifexpression_5c6e64.else -> setter_6c4a7c.execute\n        ifexpression_5c6e64.value -> output_7d3e2f\n        ifexpression_5c6e64.then -> setter_6c4a7c.execute\n        list_5d3f58 -> for_5a1d7d.items\n        for_5a1d7d.item -> ifexpression_5c6e64.gen_2\n        for_5a1d7d.index -> ifexpression_5c6e64.gen_0\n        getter_9e5f9e.value -> ifexpression_5c6e64.gen_1\n        for_5a1d7d.onItem -> ifexpression_5c6e64.execute\n        for_5a1d7d.done -> setter_6c4a7c.execute\n        for_5a1d7d.item -> setter_6c4a7c.new_value\n        list_5d3f58 -> getat_9c7c4c.list\n        0 -> getat_9c7c4c.index\n        getat_9c7c4c.itemAtIndex -> setter_9b8d92.new_value\n        setter_9b8d92.continue -> for_5a1d7d.reset\n        setter_6c4a7c.continue -> for_5a1d7d.next\n    }\n\n    \n\n    instance(x: 12, y: -179) consecutive_7c7c2d root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -501, y: -213, name: \"list\") property(List) list_9e7e1e\n\n        out(x: 1179, y: -212, name: \"output\") property(Bool) output_5c1b2d\n\n        instance(x: -276, y: -210, name: \"sorted list\") sort_5d5c6f root.Std_k98ojb.List.Sort {}\n        instance(x: 850, y: -207) for_7b4d7e root.Std_k98ojb.Std.For {}\n        instance(x: 1047, y: -208) sub_8b8c5f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1252, y: -207) greaterthan_8c8d1f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1347, y: -209) and_8f9e5d root.Std_k98ojb.Logic.And {}\n        instance(x: 1468, y: -207) not_5c8c9d root.Std_k98ojb.Logic.Not {}\n        instance(x: 1587, y: -207) ifexpression_8c8d1f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous - current == 1\"\n        }\n        getter(x: 730, y: 153, name: \"getter_5e9e7d\") getter_5e9e7d = previous\n        setter(x: 1089, y: -324, name: \"setter_9e8c1d\") setter_9e8c1d = previous\n        instance(x: 1086, y: -121) getat_9c8e5f root.Std_k98ojb.List.GetAt {}\n        ifexpression_8c8d1f.else -> not_5c8c9d.input\n        not_5c8c9d.result -> output_5c1b2d\n        ifexpression_8c8d1f.then -> setter_9e8c1d.execute\n        ifexpression_8c8d1f.value -> and_8f9e5d.right\n        greaterthan_8c8d1f.result -> and_8f9e5d.left\n        sub_8b8c5f.result -> greaterthan_8c8d1f.left\n        for_7b4d7e.item -> sub_8b8c5f.second\n        getter_5e9e7d.value -> sub_8b8c5f.first\n        for_7b4d7e.index -> ifexpression_8c8d1f.gen_0\n        for_7b4d7e.item -> ifexpression_8c8d1f.gen_2\n        getter_5e9e7d.value -> ifexpression_8c8d1f.gen_1\n        for_7b4d7e.onItem -> ifexpression_8c8d1f.execute\n        for_7b4d7e.done -> not_5c8c9d.execute\n        list_9e7e1e -> sort_5d5c6f.list\n        sort_5d5c6f.sorted -> for_7b4d7e.items\n        list_9e7e1e -> getat_9c8e5f.list\n        0 -> getat_9c8e5f.index\n        getat_9c8e5f.itemAtIndex -> setter_9e8c1d.new_value\n        setter_9e8c1d.continue -> for_7b4d7e.next\n        setter_9e8c1d.new_value -> for_7b4d7e.previous\n    }\n\n    \n\n    instance(x: -59, y: -19) consecutive_numbers_3c8e7d root.main.consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_7a4dad root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -483, y: -232, name: \"list\") property(List) list_5e6b9e\n\n        out(x: 1189, y: -227, name: \"output\") property(Bool) output_2a9d0e\n\n        instance(x: 743, y: -208) ifexpression_9a7c93 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 335, y: 161, name: \"getter_8b4c5f\") getter_8b4c5f = previous\n        setter(x: 680, y: -318, name: \"setter_5d7f0f\") setter_5d7f0f = previous\n        instance(x: 322, y: -31) for_e8d9c5 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -122, name: \"setter_5d7f0f\") setter_4e9e1e = previous\n        instance(x: -276, y: -46) getat_4b5f2a root.Std_k98ojb.List.GetAt {}\n        ifexpression_9a7c93.else -> setter_5d7f0f.execute\n        ifexpression_9a7c93.value -> output_2a9d0e\n        ifexpression_9a7c93.then -> setter_5d7f0f.execute\n        list_5e6b9e -> for_e8d9c5.items\n        for_e8d9c5.item -> ifexpression_9a7c93.gen_2\n        for_e8d9c5.index -> ifexpression_9a7c93.gen_0\n        getter_8b4c5f.value -> ifexpression_9a7c93.gen_1\n        for_e8d9c5.onItem -> ifexpression_9a7c93.execute\n        for_e8d9c5.done -> setter_5d7f0f.execute\n        for_e8d9c5.item -> setter_5d7f0f.new_value\n        list_5e6b9e -> getat_4b5f2a.list\n        0 -> getat_4b5f2a.index\n        getat_4b5f2a.itemAtIndex -> setter_4e9e1e.new_value\n        setter_4e9e1e.continue -> for_e8d9c5.reset\n        setter_5d7f0f.continue -> for_e8d9c5.next\n    }\n\n    \n\n    instance(x: 15, y: -179) consecutive_numbers_3f3a6c root.main.consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -533, y: -235, name: \"list\") property(List) list_4e6f6c\n\n        out(x: 1215, y: -228, name: \"output\") property(Bool) output_9a3b4c\n\n        instance(x: 744, y: -218) ifexpression_6b9d4a root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current - previous == 1\"\n        }\n        getter(x: 330, y: 152, name: \"getter_7c7c7f\") getter_7c7c7f = previous\n        setter(x: 676, y: -357, name: \"setter_3f3f3f\") setter_3f3f3f = previous\n        instance(x: 322, y: -68) for_7f7f7f root.Std_k98ojb.Std.For {}\n        setter(x: -2, y: -169, name: \"setter_3f3f3f\") setter_5f5f5f = previous\n        instance(x: -280, y: -83) getat_8f8f8f root.Std_k98ojb.List.GetAt {}\n        ifexpression_6b9d4a.else -> continue_2a2a2a\n        ifexpression_6b9d4a.value -> output_9a3b4c\n        ifexpression_6b9d4a.then -> setter_3f3f3f.execute\n        list_4e6f6c -> for_7f7f7f.items\n        for_7f7f7f.item -> ifexpression_6b9d4a.gen_2\n        for_7f7f7f.index -> ifexpression_6b9d4a.gen_0\n        getter_7c7c7f.value -> ifexpression_6b9d4a.gen_1\n        for_7f7f7f.onItem -> ifexpression_6b9d4a.execute\n        for_7f7f7f.done -> continue_2a2a2a\n        for_7f7f7f.item -> setter_3f3f3f.new_value\n        list_4e6f6c -> getat_8f8f8f.list\n        0 -> getat_8f8f8f.index\n        getat_8f8f8f.itemAtIndex -> setter_5f5f5f.new_value\n        execute_9a9a9a -> setter_5f5f5f.execute\n        setter_5f5f5f.continue -> for_7f7f7f.reset\n        setter_3f3f3f.continue -> for_7f7f7f.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_5c5c5c root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -533, y: -233, name: \"list\") property(List) list_3a8c7a\n\n        out(x: 1271, y: -228, name: \"output\") property(Bool) output_4b9d9e\n\n        instance(x: -286, y: -206, name: \"zip\") zip_5f3b7f root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 749, y: -207) and_5a9a0c root.Std_k98ojb.Logic.And {}\n        instance(x: 1072, y: -206) all_8d4d4e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) sub_5d9b7f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1058, y: -205) equals_5b7f8e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1271, y: -206) not_4a9f7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 246, y: -208, name: \"generate range\") generateRange_e9d4d8 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 847, y: -208) len_5a8b7c root.Std_k98ojb.List.Length {}\n        instance(x: 1058, y: -207) sub_5d9b7f_1 root.Std_k98ojb.Math.Sub {}\n        instance(x: 1271, y: -207) equals_5b7f8e_1 root.Std_k98ojb.Logic.Equal {}\n        list_3a8c7a -> generateRange_e9d4d8.from\n        len_5a8b7c.list -> generateRange_e9d4d8.to\n        list_3a8c7a -> zip_5f3b7f.left\n        generateRange_e9d4d8.list -> zip_5f3b7f.right\n        zip_5f3b7f.zipped -> all_8d4d4e.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Any) current_4b8d7c\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_7a8d7c\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_5b8d7c\n\n            instance(x: 226, y: 56) sub_5d9b7f_2 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equals_5b7f8e_2 root.Std_k98ojb.Logic.Equal {}\n            sub_5d9b7f_2.second -> equals_5b7f8e_2.right\n            1 -> sub_5d9b7f_2.second\n            _index_7a8d7c -> sub_5d9b7f_2.first\n            current_4b8d7c -> sub_5d9b7f_2.first\n            equals_5b7f8e_2.result -> output_5b8d7c\n        } -> all_8d4d4e.handler\n        all_8d4d4e.output_list -> not_4a9f7c.input\n        not_4a9f7c.result -> output_4b9d9e\n        zip_5f3b7f.zipped -> sub_5d9b7f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Any) current_8b9d7c\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_7b9d7c\n\n            instance(x: 74, y: -23) sub_5d9b7f_3 root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) equals_5b7f8e_3 root.Std_k98ojb.Logic.Equal {}\n            current_8b9d7c -> sub_5d9b7f_3.first\n            1 -> sub_5d9b7f_3.second\n            sub_5d9b7f_3.result -> equals_5b7f8e_3.left\n            0 -> equals_5b7f8e_3.right\n            equals_5b7f8e_3.result -> bool_7b9d7c\n        } -> equals_5b7f8e.handler\n        equals_5b7f8e.result -> and_5a9a0c.right\n        sub_5d9b7f.result -> equals_5b7f8e.left\n        and_5a9a0c.result -> all_8d4d4e.handler\n        len_5a8b7c.length -> sub_5d9b7f_1.first\n        1 -> sub_5d9b7f_1.second\n        sub_5d9b7f_1.result -> equals_5b7f8e_1.left\n        0 -> equals_5b7f8e_1.right\n        equals_5b7f8e_1.result -> and_5a9a0c.left\n    }\n\n    \n\n    instance(x: -287, y: -6) consecutive_3b9d7c root.main.consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -459, y: -232, name: \"list\") property(List) list_5b3e3d\n\n        out(x: 1217, y: -229, name: \"output\") property(Bool) output_6b4f6e\n\n        instance(x: 756, y: -18) ifexpression_3e6b5e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current - previous == 1\"\n        }\n        getter(x: 333, y: 152, name: \"getter_8e5f5f\") getter_8e5f5f = previous\n        setter(x: 678, y: -313, name: \"setter_5b7f9c\") setter_5b7f9c = previous\n        instance(x: 320, y: -19) for_3c3e7c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_5b7f9c\") setter_3e8d3f = previous\n        instance(x: -274, y: -35) getat_8e8d7d root.Std_k98ojb.List.GetAt {}\n        ifexpression_3e6b5e.else -> continue_8b4c3c\n        ifexpression_3e6b5e.value -> output_6b4f6e\n        ifexpression_3e6b5e.then -> setter_5b7f9c.execute\n        list_5b3e3d -> for_3c3e7c.items\n        for_3c3e7c.item -> ifexpression_3e6b5e.gen_2\n        for_3c3e7c.index -> ifexpression_3e6b5e.gen_0\n        getter_8e5f5f.value -> ifexpression_3e6b5e.gen_1\n        for_3c3e7c.onItem -> ifexpression_3e6b5e.execute\n        for_3c3e7c.done -> continue_8b4c3c\n        for_3c3e7c.item -> setter_5b7f9c.new_value\n        list_5b3e3d -> getat_8e8d7d.list\n        0 -> getat_8e8d7d.index\n        getat_8e8d7d.itemAtIndex -> setter_3e8d3f.new_value\n        setter_3e8d3f.continue -> for_3c3e7c.reset\n        setter_5b7f9c.continue -> for_3c3e7c.next\n    }\n\n    \n\n    instance(x: 19, y: -171) consecutive_numbers_1f8c4d root.main.consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -483, y: -238, name: \"list\") property(List) list_7e6d5e\n\n        out(x: 1228, y: -239, name: \"output\") property(Bool) output_9d3c4d\n\n        instance(x: 746, y: -238) ifexpression_1a7d6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current - previous == 1\"\n        }\n        instance(x: 319, y: -26) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -51) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 679, y: -311) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 321, y: -14) getter_b280eb root.Std_k98ojb.List.FirstItem {}\n        instance(x: -0, y: -121) setter_9d4f1c root.Std_k98ojb.List.LastItem {}\n        ifexpression_1a7d6f.else -> not_75283f.input\n        ifexpression_1a7d6f.value -> output_9d3c4d\n        ifexpression_1a7d6f.then -> setter_9d4f1c.execute\n        list_7e6d5e -> for_d26972.items\n        for_d26972.item -> ifexpression_1a7d6f.gen_2\n        for_d26972.index -> ifexpression_1a7d6f.gen_0\n        getter_b280eb.item -> ifexpression_1a7d6f.gen_1\n        for_d26972.onItem -> ifexpression_1a7d6f.execute\n        for_d26972.done -> not_75283f.execute\n        for_d26972.item -> setter_9d4f1c.list\n        list_7e6d5e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        not_75283f.result -> output_9d3c4d\n    }\n\n    \n\n    instance(x: 10, y: -177) consecutive_c9c9a1 root.main.consecutive {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") sublist {\n        in(x: -473, y: -245, name: \"list1\") property(List) list1_7f9b3c\n        in(x: -483, y: 0, name: \"list2\") property(List) list2_5f9c2f\n\n        out(x: 1223, y: -20, name: \"output\") property(Bool) output_3c4b8c\n\n        instance(x: 755, y: 53, name: \"find the first index of the first item of list2 in list1\") finditem_9c8c6c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 758, y: -203, name: \"get the sublist from list1\") slice_5a3e8d root.Std_k98ojb.List.Slice {}\n        instance(x: 757, y: -95, name: \"check if the sublist is equal to list2\") equal_8d3f6c root.Std_k98ojb.Logic.Equal {}\n        instance(x: -310, y: -208, name: \"find the first index of the first item of list2 in list1\") finditem_1f7f6c root.Std_k98ojb.Iteration.Find {}\n        instance(x: -311, y: -97, name: \"check if the sublist is equal to list2\") equal_7b3f9c root.Std_k98ojb.Logic.Equal {}\n        instance(x: -309, y: -4, name: \"get the sublist from list1\") slice_8d3c6c root.Std_k98ojb.List.Slice {}\n        func() {\n            in(x: -40, y: -18, name: \"current\") property(Number) _index_9c7b3c\n            in(x: -31, y: 73, name: \"_index\") property(Number) _index_1f7b3c\n\n            out(x: 720, y: 42, name: \"output\") property(Bool) output_5f9c2f\n\n            instance(x: 221, y: 49) equal_1f7c6c root.Std_k98ojb.Logic.Equal {}\n            list2_5f9c2f -> equal_1f7c6c.right\n            _index_1f7b3c -> equal_1f7c6c.left\n            equal_1f7c6c.result -> output_5f9c2f\n        } -> finditem_9c8c6c.predicate\n        list1_7f9b3c -> finditem_9c8c6c.items\n        finditem_9c8c6c.index -> slice_5a3e8d.start\n        list2_5f9c2f -> slice_5a3e8d.end\n        list1_7f9b3c -> slice_5a3e8d.items\n        slice_5a3e8d.slice -> equal_8d3f6c.left\n        list2_5f9c2f -> equal_8d3f6c.right\n        equal_8d3f6c.result -> output_3c4b8c\n        func() {\n            in(x: -40, y: -18, name: \"current\") property(Number) _index_9c7b3c\n            in(x: -31, y: 73, name: \"_index\") property(Number) _index_1f7b3c\n\n            out(x: 720, y: 42, name: \"output\") property(Bool) output_5f9c2f\n\n            instance(x: 221, y: 49) equal_1f7c6c root.Std_k98ojb.Logic.Equal {}\n            list2_5f9c2f -> equal_1f7c6c.right\n            _index_1f7b3c -> equal_1f7c6c.left\n            equal_1f7c6c.result -> output_5f9c2f\n        } -> finditem_1f7f6c.predicate\n        list1_7f9b3c -> finditem_1f7f6c.items\n        finditem_1f7f6c.index -> slice_8d3c6c.start\n        list2_5f9c2f -> slice_8d3c6c.end\n        list1_7f9b3c -> slice_8d3c6c.items\n        slice_8d3c6c.slice -> equal_7b3f9c.left\n        list2_5f9c2f -> equal_7b3f9c.right\n    }\n\n    \n\n    instance(x: 10, y: -177) sublist_f7c3b6 root.main.sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") sublist {\n        in(x: -570, y: -213, name: \"list1\") property(List) list1_5c2a1e\n        in(x: -568, y: -41, name: \"list2\") property(List) list2_5c2a1e\n\n        out(x: 1230, y: -213, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -303, y: -205, name: \"all pairs\") zip_5c2a1e root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 847, y: -207) contains_5c2a1e root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform pairs to true/false\") map_5c2a1e root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_5c2a1e root.Std_k98ojb.Logic.Not {}\n        instance(x: -300, y: -20) for_5c2a1e root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_5c2a1e root.Std_k98ojb.List.GetAt {}\n        instance(x: 847, y: -207) contains_5c2a1e root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform pairs to true/false\") map_5c2a1e root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_5c2a1e root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_5c2a1e root.Std_k98ojb.List.Contains {}\n            contains_5c2a1e.list -> current_170471\n            contains_5c2a1e.item -> getat_5c2a1e.itemAtIndex\n            contains_5c2a1e.is_contained -> output_efbc78\n        } -> map_5c2a1e.handler\n        zip_5c2a1e.zipped -> map_5c2a1e.items\n        list1_5c2a1e -> zip_5c2a1e.left\n        list2_5c2a1e -> zip_5c2a1e.right\n        map_5c2a1e.output_list -> contains_5c2a1e.list\n        false -> contains_5c2a1e.item\n        contains_5c2a1e.is_contained -> not_5c2a1e.input\n        not_5c2a1e.result -> output_5bbcd7\n        for_5c2a1e.items -> list2_5c2a1e\n        for_5c2a1e.onItem -> getat_5c2a1e.execute\n        0 -> getat_5c2a1e.index\n        list2_5c2a1e -> getat_5c2a1e.list\n        for_5c2a1e.index -> _index_769593\n        for_5c2a1e.item -> current_170471\n        for_5c2a1e.done -> not_5c2a1e.execute\n    }\n\n    \n\n    instance(x: -293, y: -5) sublist_5c2a1e root.main.sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: -86, name: \"list1\") property(List) list1_3af6ba\n        in(x: -285, y: 56, name: \"list2\") property(List) list2_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list1_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list2_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        list2_3af6ba -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -435, y: -215, name: \"list1\") property(List) list1_7d6b9f\n        in(x: -435, y: -3, name: \"list2\") property(List) list2_7f1b1f\n\n        out(x: 1171, y: -210, name: \"output\") property(Bool) output_7c0b93\n\n        instance(x: -294, y: -208, name: \"list1 length\") length_6f4f9f root.Std_k98ojb.List.Length {}\n        instance(x: -294, y: -83, name: \"list2 length\") length_8c6f67 root.Std_k98ojb.List.Length {}\n        instance(x: -295, y: -10) contains_8f6b8a root.Std_k98ojb.List.Contains {}\n        instance(x: 849, y: -208) ifexpression_6d3c0e root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 849, y: -81) ifexpression_4b9f9a root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 849, y: 35) ifexpression_7e7b1e root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 849, y: 156) ifexpression_5e4f1d root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 849, y: 277) ifexpression_5c8f8c root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 849, y: 398) ifexpression_7c9b3f root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 849, y: 519) ifexpression_4f6f8e root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 849, y: 640) ifexpression_8b9b4d root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 849, y: 761) ifexpression_6f4f8f root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 849, y: 882) ifexpression_8c6f7a root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 849, y: 1003) ifexpression_8f6b8c root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 849, y: 1124) ifexpression_8b9b4e root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 849, y: 1245) ifexpression_7c9b40 root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 849, y: 1366) ifexpression_7e7b1f root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 849, y: 1487) ifexpression_5e4f1e root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 849, y: 1608) ifexpression_4b9f9b root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 849, y: 1729) ifexpression_6d3c0f root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 849, y: 1850) ifexpression_5c8f8d root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 849, y: 1971) ifexpression_7f1b20 root.Std_k98ojb.Std.IfExpression {}\n        list1_7d6b9f -> length_6f4f9f.list\n        list2_7f1b1f -> length_8c6f67.list\n        list1_7d6b9f -> contains_8f6b8a.list\n        list2_7f1b1f -> contains_8f6b8a.item\n        0 -> length_6f4f9f.index\n        0 -> length_8c6f67.index\n        0 -> ifexpression_6d3c0e.gen_0\n        0 -> ifexpression_4b9f9a.gen_0\n        0 -> ifexpression_7e7b1e.gen_0\n        0 -> ifexpression_5e4f1d.gen_0\n        0 -> ifexpression_5c8f8c.gen_0\n        0 -> ifexpression_7c9b3f.gen_0\n        0 -> ifexpression_4f6f8e.gen_0\n        0 -> ifexpression_8b9b4d.gen_0\n        0 -> ifexpression_6f4f8f.gen_0\n        0 -> ifexpression_8c6f7a.gen_0\n        0 -> ifexpression_8f6b8c.gen_0\n        0 -> ifexpression_8b9b4e.gen_0\n        0 -> ifexpression_7c9b40.gen_0\n        0 -> ifexpression_7e7b1f.gen_0\n        0 -> ifexpression_5e4f1e.gen_0\n        0 -> ifexpression_4b9f9b.gen_0\n        0 -> ifexpression_6d3c0f.gen_0\n        0 -> ifexpression_5c8f8d.gen_0\n        0 -> ifexpression_7f1b20.gen_0\n        length_6f4f9f.length -> ifexpression_6d3c0e.gen_1\n        length_8c6f67.length -> ifexpression_4b9f9a.gen_1\n        ifexpression_6d3c0e.gen_2 -> ifexpression_4b9f9a.gen_2\n        ifexpression_4b9f9a.gen_2 -> ifexpression_7e7b1e.gen_2\n        ifexpression_7e7b1e.gen_2 -> ifexpression_5e4f1d.gen_2\n        ifexpression_5e4f1d.gen_2 -> ifexpression_5c8f8c.gen_2\n        ifexpression_5c8f8c.gen_2 -> ifexpression_7c9b3f.gen_2\n        ifexpression_7c9b3f.gen_2 -> ifexpression_4f6f8e.gen_2\n        ifexpression_4f6f8e.gen_2 -> ifexpression_8b9b4d.gen_2\n        ifexpression_8b9b4d.gen_2 -> ifexpression_6f4f8f.gen_2\n        ifexpression_6f4f8f.gen_2 -> ifexpression_8c6f7a.gen_2\n        ifexpression_8c6f7a.gen_2 -> ifexpression_8f6b8c.gen_2\n        ifexpression_8f6b8c.gen_2 -> ifexpression_8b9b4e.gen_2\n        ifexpression_8b9b4e.gen_2 -> ifexpression_7c9b40.gen_2\n        ifexpression_7c9b40.gen_2 -> ifexpression_7e7b1f.gen_2\n        ifexpression_7e7b1f.gen_2 -> ifexpression_5e4f1e.gen_2\n        ifexpression_5e4f1e.gen_2 -> ifexpression_4b9f9b.gen_2\n        ifexpression_4b9f9b.gen_2 -> ifexpression_6d3c0f.gen_2\n        ifexpression_6d3c0f.gen_2 -> ifexpression_5c8f8d.gen_2\n        ifexpression_5c8f8d.gen_2 -> ifexpression_7f1b20.gen_2\n        ifexpression_6d3c0e.value -> ifexpression_6d3c0e.then.execute\n        ifexpression_6d3c0e.value -> ifexpression_6d3c0e.then.value\n        ifexpression_6d3c0e.value -> ifexpression_6d3c0e.else.value\n        ifexpression_6d3c0e.then -> ifexpression_4b9f9a.execute\n        ifexpression_6d3c0e.else -> ifexpression_7f1b20.execute\n        ifexpression_4b9f9a.value -> ifexpression_4b9f9a.then.execute\n        ifexpression_4b9f9a.value -> ifexpression_4b9f9a.then.value\n        ifexpression_4b9f9a.value -> ifexpression_4b9f9a.else.value\n        ifexpression_4b9f9a.then -> ifexpression_7e7b1",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -527, y: -214, name: \"list1\") property(List) list1_07cae4\n        in(x: -527, y: -12, name: \"list2\") property(List) list2_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list1_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -480, y: -224, name: \"list1\") property(List) list1_1f846b\n        in(x: -490, y: 27, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1229, y: -198, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -311, y: -202, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 843, y: -204) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 244, y: -206, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1056, y: -200) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list1_1f846b -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -420, y: -235, name: \"list1\") property(List) list1_6f6b7d\n        in(x: -417, y: 40, name: \"list2\") property(List) list2_7b4c6c\n\n        out(x: 1197, y: -215, name: \"output\") property(Bool) output_9c4f3d\n\n        instance(x: -254, y: -221, name: \"find first index\") findindex_3d9d3c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 753, y: -219) not_5e9c0c root.Std_k98ojb.Logic.Not {}\n        instance(x: 852, y: -208) greaterthan_7a2e1f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1050, y: -215) count_5b3f6a root.Std_k98ojb.Std.Count {}\n        instance(x: 1189, y: -218) lessorequal_3a3f64 root.Std_k98ojb.Math.LessThanOrEqual {}\n        func() {\n            in(x: -34, y: -24, name: \"current\") property(Number) current_4b6b3e\n            in(x: -23, y: 78, name: \"_index\") property(Number) _index_5f7e1d\n\n            out(x: 705, y: 50, name: \"output\") property(Bool) output_8b8b9f\n\n            instance(x: 226, y: 55) equal_7b4f6d root.Std_k98ojb.Logic.Equal {}\n            list2_7b4c6c -> equal_7b4f6d.right\n            current_4b6b3e -> equal_7b4f6d.left\n            equal_7b4f6d.result -> output_8b8b9f\n        } -> findindex_3d9d3c.predicate\n        list1_6f6b7d -> findindex_3d9d3c.items\n        not_5e9c0c.result -> output_9c4f3d\n        findindex_3d9d3c.item -> greaterthan_7a2e1f.left\n        0 -> greaterthan_7a2e1f.right\n        greaterthan_7a2e1f.result -> count_5b3f6a.reset\n        list1_6f6b7d -> count_5b3f6a.items\n        count_5b3f6a.count -> lessorequal_3a3f64.left\n        findindex_3d9d3c.item -> lessorequal_3a3f64.right\n        lessorequal_3a3f64.result -> not_5e9c0c.input\n    }\n\n    \n\n    instance(x: -80, y: -15) is_sublist_9f7e4f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -450, y: -230, name: \"list1\") property(List) list1_2a5e3d\n        in(x: -450, y: -40, name: \"list2\") property(List) list2_9e6d1c\n\n        out(x: 1267, y: -125, name: \"output\") property(Bool) output_7b5b3e\n\n        instance(x: -303, y: -122, name: \"slice\") for_1e5f7f root.Std_k98ojb.Std.For {}\n        instance(x: 849, y: -124) contains_4d1f4c root.Std_k98ojb.List.Contains {}\n        instance(x: 1058, y: -120) not_7f0b7f root.Std_k98ojb.Logic.Not {}\n        instance(x: 246, y: -122, name: \"map\") map_1b8e4f root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -28, y: -19, name: \"current\") property(List) current_9b9b1e\n\n            out(x: 710, y: 53, name: \"output\") property(Bool) output_1a5d3e\n\n            instance(x: 226, y: 60) equal_6c4e6f root.Std_k98ojb.Logic.Equal {}\n            current_9b9b1e -> equal_6c4e6f.left\n            list2_9e6d1c -> equal_6c4e6f.right\n            equal_6c4e6f.result -> output_1a5d3e\n        } -> map_1b8e4f.handler\n        for_1e5f7f.items -> map_1b8e4f.items\n        func() {\n            in(x: -196, y: -6, name: \"current\") property(Number) current_5b1e4e\n\n            out(x: 530, y: -18, name: \"slice\") property(List) slice_8f5d3e\n\n            instance(x: 74, y: -15) slice_6c7f4e root.Std_k98ojb.List.Slice {}\n            current_5b1e4e -> slice_6c7f4e.start\n            list1_2a5e3d -> slice_6c7f4e.items\n            -1 -> slice_6c7f4e.end\n            slice_6c7f4e.slice -> slice_8f5d3e\n        } -> for_1e5f7f.handler\n        list1_2a5e3d -> for_1e5f7f.items\n        map_1b8e4f.output_list -> contains_4d1f4c.list\n        list2_9e6d1c -> contains_4d1f4c.item\n        not_7f0b7f.result -> output_7b5b3e\n        contains_4d1f4c.is_contained -> not_7f0b7f.input\n    }\n\n    \n\n    instance(x: -292, y: -5) is_sublist_9f5e4f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -515, y: -211, name: \"list1\") property(List) list1_2f3d9e\n        in(x: -518, y: 24, name: \"list2\") property(List) list2_3f3c7e\n\n        out(x: 1253, y: -204, name: \"output\") property(Bool) output_5e9b8d\n\n        instance(x: -296, y: -208, name: \"only equal items\") filter_5e5e0c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 849, y: -205) contains_9d3b1d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -207, name: \"transform numbers to true/false\") map_7f6f8e root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1059, y: -201) not_3c7f8f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -29, y: -24, name: \"current\") property(Number) _index_1e8e8d\n            in(x: -21, y: 80, name: \"_index\") property(Number) _index_1a7c1d\n\n            out(x: 709, y: 50, name: \"output\") property(Bool) output_9e4b6c\n\n            instance(x: 225, y: 57) modulo_7a7e7f root.Std_k98ojb.Math.Modulo {}\n            instance(x: 462, y: 52) notequal_5f3f2f root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_7a7e7f.divisor\n            0 -> notequal_5f3f2f.right\n            notequal_5f3f2f.result -> output_9e4b6c\n            modulo_7a7e7f.result -> notequal_5f3f2f.left\n            _index_1a7c1d -> modulo_7a7e7f.value\n        } -> filter_5e5e0c.handler\n        list1_2f3d9e -> filter_5e5e0c.items\n        func() {\n            in(x: -190, y: -16, name: \"current\") property(Number) current_2e1d9c\n\n            out(x: 523, y: -28, name: \"bool\") property(Bool) bool_9a3f1d\n\n            instance(x: 73, y: -23) modulo_3b7c1d root.Std_k98ojb.Math.Modulo {}\n            instance(x: 284, y: -25) notequal_8c7b9d root.Std_k98ojb.Logic.NotEqual {}\n            current_2e1d9c -> modulo_3b7c1d.value\n            2 -> modulo_3b7c1d.divisor\n            modulo_3b7c1d.result -> notequal_8c7b9d.left\n            0 -> notequal_8c7b9d.right\n            notequal_8c7b9d.result -> bool_9a3f1d\n        } -> map_7f6f8e.handler\n        filter_5e5e0c.output_list -> map_7f6f8e.items\n        map_7f6f8e.output_list -> contains_9d3b1d.list\n        list2_3f3c7e -> contains_9d3b1d.item\n        not_3c7f8f.result -> output_5e9b8d\n        contains_9d3b1d.is_contained -> not_3c7f8f.input\n    }\n\n    \n\n    instance(x: -288, y: -8) is_sublist_1f9f8e root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_90aaec\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_90aaec -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) sublist_fc79d5 root.main.sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: -3, name: \"list\") property(List) list_ai\n\n        out(x: 566, y: 21, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) not_2b3e8c root.Std_k98ojb.Logic.Not {}\n            instance(x: 305, y: 35) equal_8d3f6c root.Std_k98ojb.Logic.Equal {}\n            instance(x: 310, y: 35) sub_7d3e4f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) add_4d3e4f root.Std_k98ojb.Math.Add {}\n            1 -> add_4d3e4f.second\n            elem_9f6850 -> add_4d3e4f.first\n            add_4d3e4f.result -> sub_7d3e4f.first\n            0 -> sub_7d3e4f.second\n            sub_7d3e4f.result -> equal_8d3f6c.left\n            index -> equal_8d3f6c.right\n            equal_8d3f6c.result -> not_2b3e8c.input\n            not_2b3e8c.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_ai -> find_6d05b0.items\n        find_6d05b0.item -> missing_ai\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -426, y: -248, name: \"list\") property(List) list_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) for_2c8a0f root.Std_k98ojb.Std.For {}\n        instance(x: 426, y: -303) ifexpression_7b4d1f root.Std_k98ojb.Std.IfExpression {\n            expression: \"i + 1 != list[i + 1]\"\n        }\n        instance(x: 426, y: -303) if_1c8d0d root.Std_k98ojb.Std.If {}\n        instance(x: 426, y: -303) setvar_1c7b0e root.Std_k98ojb.Std.SetVar {}\n        instance(x: 426, y: -303) setvar_3c7b0e root.Std_k98ojb.Std.SetVar {}\n        instance(x: 426, y: -303) add_5c7b0e root.Std_k98ojb.Math.Add {}\n        instance(x: 426, y: -303) setvar_6c7b0e root.Std_k98ojb.Std.SetVar {}\n        instance(x: 426, y: 0) getat_6c7b0e root.Std_k98ojb.List.GetAt {}\n        instance(x: 426, y: 0) getat_7c7b0e root.Std_k98ojb.List.GetAt {}\n        instance(x: 426, y: 0) getat_8c7b0e root.Std_k98ojb.List.GetAt {}\n        instance(x: 426, y: 0) getat_9c7b0e root.Std_k98ojb.List.GetAt {}\n        list_ai -> for_2c8a0f.items\n        for_2c8a0f.item -> getat_6c7b0e.list\n        getat_6c7b0e.index -> for_2c8a0f.index\n        getat_6c7b0e.itemAtIndex -> ifexpression_7b4d1f.gen_0\n        getat_7c7b0e.index -> for_2c8a0f.index\n        getat_7c7b0e.list -> for_2c8a0f.items\n        getat_7c7b0e.itemAtIndex -> ifexpression_7b4d1f.gen_1\n        getat_8c7b0e.index -> for_2c8a0f.index\n        getat_8c7b0e.list -> for_2c8a0f.items\n        getat_8c7b0e.itemAtIndex -> add_5c7b0e.first\n        getat_9c7b0e.index -> for_2c8a0f.index\n        getat_9c7b0e.list -> for_2c8a0f.items\n        getat_9c7b0e.itemAtIndex -> add_5c7b0e.second\n        1 -> add_5c7b0e.second\n        add_5c7b0e.result -> setvar_6c7b0e.new_value\n        for_2c8a0f.index -> setvar_6c7b0e.name\n        ifexpression_7b4d1f.result -> if_1c8d0d.input\n        if_1c8d0d.then -> setvar_1c7b0e.execute\n        add_5c7b0e.result -> setvar_1c7b0e.new_value\n        setvar_1c7b0e.name -> missing_ai\n        if_1c8d0d.else -> setvar_3c7b0e.execute\n        getat_6c7b0e.itemAtIndex -> setvar_3c7b0e.new_value\n        setvar_3c7b0e.name -> missing_ai\n        for_2c8a0f.next -> for_2c8a0f.next\n        for_2c8a0f.trigger -> for_2c8a0f.trigger\n    }\n\n    \n\n    instance(x: 322, y: 568) smallest_missing_9c7b0e root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -281, y: -0, name: \"list\") property(List) list_6e7f7a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) ifexpression_3f9b4f root.Std_k98ojb.Std.IfExpression {\n                expression: \"it != index\"\n            }\n            instance(x: 310, y: 35) equal_2d4c2c root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_2d4c2c.right\n            index -> equal_2d4c2c.left\n            equal_2d4c2c.result -> ifexpression_3f9b4f.gen_0\n            index -> ifexpression_3f9b4f.gen_1\n            ifexpression_3f9b4f.then -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_6e7f7a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        instance(x: 0, y: 0) for_2f5b5f root.Std_k98ojb.Std.For {}\n        list_6e7f7a -> for_2f5b5f.items\n        for_2f5b5f.item -> index\n        for_2f5b5f.index -> index\n        for_2f5b5f.on_item -> find_6d05b0.execute\n        for_2f5b5f.done -> find_6d05b0.reset\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -302, y: -8, name: \"list\") property(List) list_ae1e4e\n\n        out(x: 591, y: -2, name: \"missing\") property(Number) missing_5c1b2d\n\n        instance(x: 0, y: 0) for_a8c7b8 root.Std_k98ojb.Std.For {\n            items: \"list\"\n        }\n        func() {\n            in(x: -124, y: 30, name: \"index\") property(Number) index_1c7d0f\n            in(x: -124, y: 83, name: \"item\") property(Number) item_1e4b0e\n\n            out(x: 511, y: 83, name: \"missing\") property(Number) missing_6b8d3c\n\n            instance(x: 90, y: 65) ifexpression_8f9e5c root.Std_k98ojb.Std.IfExpression {\n                expression: \"item - index != 0\"\n            }\n            instance(x: 310, y: 65) sub_9d8e7c root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 65) notequal_3d1c7e root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 89, y: 65) if_1c8e9d root.Std_k98ojb.Std.If {}\n            getter(x: -144, y: 117, name: \"getter_9e9b6c\") getter_9e9b6c = missing\n            setter(x: 116, y: -268, name: \"setter_9f6c9c\") setter_9f6c9c = missing\n            setter(x: 118, y: -56, name: \"setter_3d8b9d\") setter_3d8b9d = missing\n            index_1c7d0f -> sub_9d8e7c.first\n            item_1e4b0e -> sub_9d8e7c.second\n            sub_9d8e7c.result -> ifexpression_8f9e5c.gen_0\n            0 -> ifexpression_8f9e5c.gen_1\n            ifexpression_8f9e5c.result -> notequal_3d1c7e.left\n            true -> notequal_3d1c9e.right\n            notequal_3d1c7e.result -> if_1c8e9d.input\n            index_1c7d0f -> setter_9f6c9c.new_value\n            setter_9f6c9c.continue -> if_1c8e9d.then\n            item_1e4b0e -> setter_3d8b9d.new_value\n            setter_3d8b9d.continue -> if_1c8e9d.else\n            getter_9e9b6c.value -> missing_6b8d3c\n            if_1c8e9d.else -> for_a8c7b8.next\n            if_1c8e9d.then -> for_a8c7b8.done\n        } -> for_a8c7b8.on_item\n        list_ae1e4e -> for_a8c7b8.items\n        missing_6b8d3c -> missing_5c1b2d\n    }\n\n    \n\n    instance(x: -34, y: 127) smallest_missing_node root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -282, y: -193, name: \"list\") property(List) list_1d7f0a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_5a4d9e\n\n        instance(x: 0, y: 0) for_3b1e8d root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item_8c6f7d\n            in(x: -107, y: 44, name: \"index\") property(Number) index_1e4f3d\n\n            out(x: 515, y: 44, name: \"continue\") trigger() continue_7d4c8c\n\n            instance(x: 89, y: 29) ifexpression_9c3e1d root.Std_k98ojb.Std.IfExpression {\n                expression: \"item != index + 1\"\n            }\n            instance(x: 310, y: 35) add_1e2f4f root.Std_k98ojb.Math.Add {}\n            instance(x: 0, y: 0) if_7c8f8e root.Std_k98ojb.Std.If {}\n            index_1e4f3d -> add_1e2f4f.first\n            1 -> add_1e2f4f.second\n            add_1e2f4f.result -> ifexpression_9c3e1d.gen_1\n            item_8c6f7d -> ifexpression_9c3e1d.gen_0\n            ifexpression_9c3e1d.value -> if_7c8f8e.input\n            if_7c8f8e.then -> continue_7d4c8c\n            index_1e4f3d -> missing_5a4d9e\n        } -> for_3b1e8d.on_item\n        list_1d7f0a -> for_3b1e8d.items\n        for_3b1e8d.done -> missing_5a4d9e\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_1a9e0e root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -281, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_2c8e5c root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) equal_2e4f3c root.Std_k98ojb.Logic.Equal {}\n            1 -> sub_2c8e5c.second\n            0 -> equal_2e4f3c.right\n            sub_2c8e5c.result -> equal_2e4f3c.left\n            elem_9f6850 -> sub_2c8e5c.first\n            equal_2e4f3c.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -297, y: -1, name: \"list\") property(List) list_ae5d3e\n\n        out(x: 578, y: -1, name: \"number\") property(Number) number_9e2b2c\n\n        instance(x: 0, y: 0) find_2c6b9d root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1b9d3c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9e9c0d\n\n            instance(x: 89, y: 29) ifexpression_1b7f4c root.Std_k98ojb.Std.IfExpression {\n                expression: \"it != index\"\n            }\n            instance(x: 310, y: 35) notequal_5e5d6e root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_5e5d6e.right\n            ifexpression_1b7f4c.gen_0 -> notequal_5e5d6e.left\n            notequal_5e5d6e.result -> bool_9e9c0d\n        } -> find_2c6b9d.predicate\n        list_ae5d3e -> find_2c6b9d.items\n        find_2c6b9d.item -> number_9e2b2c\n        instance(x: 0, y: 0) map_9a3b8c root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Any) item_9b5f4e\n\n            out(x: 515, y: 44, name: \"output\") property(Number) output_8a5d2c\n\n            instance(x: 89, y: 29) index_9c7e4d root.Std_k98ojb.Iteration.Index {}\n            item_9b5f4e -> index_9c7e4d.item\n            index_9c7e4d.index -> output_8a5d2c\n        } -> map_9a3b8c.handler\n        list_ae5d3e -> map_9a3b8c.items\n        map_9a3b8c.output_list -> find_2c6b9d.items\n    }\n\n    \n\n    instance(x: -58, y: 526) smallest_missing_7e8f3e root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -290, y: -6, name: \"list\") property(List) list_7b5e3d\n\n        out(x: 597, y: -7, name: \"number\") property(Number) number_9a9f6d\n\n        instance(x: 0, y: 0) find_7c0e9c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -110, y: 36, name: \"elem\") property(Number) elem_7b9c5f\n\n            out(x: 516, y: 46, name: \"bool\") property(Bool) bool_7d6d6d\n\n            instance(x: 91, y: 30) math_5b9b7f root.Std_k98ojb.Math.Expression {\n                expression: \"elem != index + 1\"\n            }\n            instance(x: 310, y: 36) and_2f2d2f root.Std_k98ojb.Logic.And {}\n            instance(x: 310, y: 36) less_8e3e8e root.Std_k98ojb.Math.LessThan {}\n            instance(x: 310, y: 36) add_8b9e8b root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 36) greater_6e8e6e root.Std_k98ojb.Math.GreaterThan {}\n            1 -> add_8b9e8b.second\n            index -> add_8b9e8b.first\n            add_8b9e8b.result -> math_5b9b7f.gen_1\n            elem_7b9c5f -> math_5b9b7f.gen_0\n            math_5b9b7f.result -> and_2f2d2f.left\n            0 -> less_8e3e8e.left\n            index -> less_8e3e8e.right\n            less_8e3e8e.result -> and_2f2d2f.right\n            0 -> greater_6e8e6e.left\n            index -> greater_6e8e6e.right\n            greater_6e8e6e.result -> bool_7d6d6d\n            and_2f2d2f.result -> bool_7d6d6d\n        } -> find_7c0e9c.predicate\n        list_7b5e3d -> find_7c0e9c.items\n        find_7c0e9c.item -> number_9a9f6d\n    }\n\n    \n\n    instance(x: -43, y: 535) smallest_missing_7c0e9c root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -296, y: -10, name: \"list\") property(List) list_ae3b6f\n\n        out(x: 573, y: -1, name: \"missing\") property(Number) missing_2b4d6e\n\n        instance(x: 0, y: 0) find_4a7d8c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -110, y: 39, name: \"elem\") property(Number) elem_5c3a2d\n\n            out(x: 512, y: 44, name: \"bool\") property(Bool) bool_3d8f6b\n\n            instance(x: 84, y: 30) ifexpression_6b2d9c root.Std_k98ojb.Std.IfExpression {\n                expression: \"elem != index + 1\"\n            }\n            instance(x: 309, y: 35) add_7f9d3e root.Std_k98ojb.Math.Add {}\n            instance(x: 315, y: 35) notequal_3c8f2a root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 316, y: 35) numberfromstring_3f9d8b root.Std_k98ojb.Math.NumberFromString {}\n            1 -> add_7f9d3e.second\n            index -> add_7f9d3e.first\n            add_7f9d3e.result -> numberfromstring_3f9d8b.string\n            numberfromstring_3f9d8b.result -> notequal_3c8f2a.left\n            elem_5c3a2d -> notequal_3c8f2a.right\n            notequal_3c8f2a.result -> ifexpression_6b2d9c.value\n            ifexpression_6b2d9c.then -> bool_3d8f6b.execute\n            ifexpression_6b2d9c.else -> bool_3d8f6b.execute\n            bool_3d8f6b.value -> bool_3d8f6b.value\n        } -> find_4a7d8c.predicate\n        list_ae3b6f -> find_4a7d8c.items\n        find_4a7d8c.item -> missing_2b4d6e\n    }\n\n    \n\n    instance(x: -40, y: 509) smallest_missing_7e4b2f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -428, y: -247, name: \"list\") property(List) list_a5e2a9\n\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_1b2c6f\n\n        instance(x: 426, y: -303) for_1a7d6f root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) ifexpression_3f1c64 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index != value\"\n        }\n        instance(x: 0, y: 0) if_9e1d0d root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) min_2c5f1e root.Std_k98ojb.Math.Min2 {}\n        instance(x: 0, y: 0) add_7f5c4d root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) notequal_7b6f0f root.Std_k98ojb.Logic.NotEqual {}\n        0 -> notequal_7b6f0f.right\n        list_a5e2a9 -> for_1a7d6f.items\n        for_1a7d6f.item -> ifexpression_3f1c64.gen_1\n        for_1a7d6f.index -> ifexpression_3f1c64.gen_0\n        ifexpression_3f1c64.value -> if_9e1d0d.input\n        if_9e1d0d.then -> min_2c5f1e.execute\n        for_1a7d6f.index -> min_2c5f1e.left\n        ifexpression_3f1c64.gen_1 -> min_2c5f1e.right\n        min_2c5f1e.result -> add_7f5c4d.first\n        1 -> add_7f5c4d.second\n        add_7f5c4d.result -> missing_1b2c6f\n        if_9e1d0d.else -> for_1a7d6f.next\n        ifexpression_3f1c64.then -> for_1a7d6f.next\n        for_1a7d6f.trigger -> for_1a7d6f.execute\n        if_9e1d0d.execute -> if_9e1d0d.input\n        notequal_7b6f0f.left -> notequal_7b6f0f.right\n        for_1a7d6f.done -> for_1a7d6f.trigger\n    }\n\n    \n\n    instance(x: 322, y: 568) smallest_missing_5f5b7e root.main.smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -123, y: 16, name: \"input\") property(String) input_3a7d2f\n\n        out(x: 520, y: -10, name: \"output\") property(String) output_9c2b0d\n\n        instance(x: 0, y: -16) replace_1d7c0d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 220, y: -12) replace_5f9c6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 440, y: -9) replace_9e5d6e root.Std_k98ojb.Strings.Replace {}\n        input_3a7d2f -> replace_1d7c0d.input\n        \" \" -> replace_1d7c0d.search\n        \":\" -> replace_1d7c0d.replace\n        replace_1d7c0d.output -> replace_5f9c6f.input\n        \",\" -> replace_5f9c6f.search\n        \":\" -> replace_5f9c6f.replace\n        replace_5f9c6f.output -> replace_9e5d6e.input\n        \".\" -> replace_9e5d6e.search\n        \":\" -> replace_9e5d6e.replace\n        replace_9e5d6e.output -> output_9c2b0d\n    }\n\n    \n\n    instance(x: 82, y: 37) replace_space_comma_dot_4e2a9c root.main.replace_space_comma_dot {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special {\n        in(x: -155, y: -2, name: \"input\") property(String) input_9a6f9a\n\n        out(x: 499, y: -2, name: \"output\") property(String) output_9f9f1d\n\n        instance(x: 281, y: 0) replace_2b2b4a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_2b2b4a_1 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 281, y: -36) replace_2b2b4a_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: -36) replace_2b2b4a_3 root.Std_k98ojb.Strings.Replace {}\n        input_9a6f9a -> replace_2b2b4a.input\n        \" \" -> replace_2b2b4a.search\n        \":\" -> replace_2b2b4a.replace\n        replace_2b2b4a.output -> replace_2b2b4a_1.input\n        \",\" -> replace_2b2b4a_1.search\n        \":\" -> replace_2b2b4a_1.replace\n        replace_2b2b4a_1.output -> replace_2b2b4a_2.input\n        \".\" -> replace_2b2b4a_2.search\n        \":\" -> replace_2b2b4a_2.replace\n        replace_2b2b4a_2.output -> replace_2b2b4a_3.input\n        replace_2b2b4a_3.output -> output_9f9f1d\n    }\n\n    \n\n    instance(x: -91, y: -20) replace_special_2e2d1d root.main.replace_special {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_5e8c6c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3e3d2e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_3f2b7f root.Std_k98ojb.Strings.Replace {}\n        replace_5e8c6c.output -> replace_3e3d2e.input\n        replace_3e3d2e.output -> replace_3f2b7f.input\n        input_0 -> replace_5e8c6c.input\n        \" \" -> replace_5e8c6c.search\n        \":\" -> replace_5e8c6c.replace\n        \",\" -> replace_3e3d2e.search\n        \":\" -> replace_3e3d2e.replace\n        \".\" -> replace_3f2b7f.search\n        \":\" -> replace_3f2b7f.replace\n        replace_3f2b7f.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_chars_9f7b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -148, y: 11, name: \"input\") property(String) input_0\n\n        out(x: 527, y: -4, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_4a1d0a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_0c5c7e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_3c7d0a root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4a1d0a.input\n        \" \" -> replace_4a1d0a.search\n        \":\" -> replace_4a1d0a.replace\n        replace_4a1d0a.output -> replace_0c5c7e.input\n        \",\" -> replace_0c5c7e.search\n        \":\" -> replace_0c5c7e.replace\n        replace_0c5c7e.output -> replace_3c7d0a.input\n        \".\" -> replace_3c7d0a.search\n        \":\" -> replace_3c7d0a.replace\n        replace_3c7d0a.output -> output_0\n    }\n\n    \n\n    instance(x: 87, y: 53) replace_1c8e9d root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -146, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 526, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_3f2f7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_1a6e6c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1b7eae root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3f2f7f.input\n        \" \" -> replace_3f2f7f.search\n        \":\" -> replace_3f2f7f.replace\n        replace_3f2f7f.output -> replace_1a6e6c.input\n        \",\" -> replace_1a6e6c.search\n        \":\" -> replace_1a6e6c.replace\n        replace_1a6e6c.output -> replace_1b7eae.input\n        \".\" -> replace_1b7eae.search\n        \":\" -> replace_1b7eae.replace\n        replace_1b7eae.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_9f6e7c root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -128, y: 0, name: \"input\") property(String) input_1e7a7c\n\n        out(x: 532, y: -2, name: \"output\") property(String) output_1e7a7c\n\n        instance(x: 0, y: 1) replace_4a7c7c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4a7c7c_1 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_4a7c7c_2 root.Std_k98ojb.Strings.Replace {}\n        input_1e7a7c -> replace_4a7c7c.input\n        \" \" -> replace_4a7c7c.search\n        \":\" -> replace_4a7c7c.replace\n        replace_4a7c7c.output -> replace_4a7c7c_1.input\n        \",\" -> replace_4a7c7c_1.search\n        \":\" -> replace_4a7c7c_1.replace\n        replace_4a7c7c_1.output -> replace_4a7c7c_2.input\n        \".\" -> replace_4a7c7c_2.search\n        \":\" -> replace_4a7c7c_2.replace\n        replace_4a7c7c_2.output -> output_1e7a7c\n    }\n\n    \n\n    instance(x: 101, y: 52) replace_spaces_commas_dots_2c4d4f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -135, y: 0, name: \"input\") property(String) input_7e4a8c\n\n        out(x: 540, y: -2, name: \"output\") property(String) output_4c6c6c\n\n        instance(x: 0, y: 1) replace_4a8f3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_2e5b0d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_7b8e9d root.Std_k98ojb.Strings.Replace {}\n        input_7e4a8c -> replace_4a8f3c.input\n        \" \" -> replace_4a8f3c.search\n        \":\" -> replace_4a8f3c.replace\n        replace_4a8f3c.output -> replace_2e5b0d.input\n        \",\" -> replace_2e5b0d.search\n        \":\" -> replace_2e5b0d.replace\n        replace_2e5b0d.output -> replace_7b8e9d.input\n        \".\" -> replace_7b8e9d.search\n        \":\" -> replace_7b8e9d.replace\n        replace_7b8e9d.output -> output_4c6c6c\n    }\n\n    \n\n    instance(x: 101, y: 52) replace_spaces_commas_dots_4a8f3c root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -146, y: 6, name: \"input\") property(String) input_7a5a3f\n\n        out(x: 504, y: 7, name: \"output\") property(String) output_9a9e6d\n\n        instance(x: 106, y: -8) replace_7c2e9c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 109, y: 57) replace_8b4d5a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 106, y: 112) replace_1d6c0f root.Std_k98ojb.Strings.Replace {}\n        input_7a5a3f -> replace_7c2e9c.input\n        \" \" -> replace_7c2e9c.search\n        \":\" -> replace_7c2e9c.replace\n        replace_7c2e9c.output -> replace_8b4d5a.input\n        \",\" -> replace_8b4d5a.search\n        \":\" -> replace_8b4d5a.replace\n        replace_8b4d5a.output -> replace_1d6c0f.input\n        \".\" -> replace_1d6c0f.search\n        \":\" -> replace_1d6c0f.replace\n        replace_1d6c0f.output -> output_9a9e6d\n    }\n\n    \n\n    instance(x: -116, y: 43) replace_chars_7f8f5c root.main.replace_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -145, y: 3, name: \"input\") property(String) input_7d9e3f\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_3f3c7e\n\n        instance(x: 0, y: 1) replace_1b5e2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_2e3f9e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1b8b4f root.Std_k98ojb.Strings.Replace {}\n        input_7d9e3f -> replace_1b5e2d.input\n        \" \" -> replace_1b5e2d.search\n        \":\" -> replace_1b5e2d.replace\n        replace_1b5e2d.output -> replace_2e3f9e.input\n        \",\" -> replace_2e3f9e.search\n        \":\" -> replace_2e3f9e.replace\n        replace_2e3f9e.output -> replace_1b8b4f.input\n        \".\" -> replace_1b8b4f.search\n        \":\" -> replace_1b8b4f.replace\n        replace_1b8b4f.output -> output_3f3c7e\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_space_comma_dot_7e6c8f root.main.replace_space_comma_dot {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -148, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 538, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_6f6d92 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3e7f2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_3a3f7e root.Std_k98ojb.Strings.Replace {}\n        replace_6f6d92.output -> replace_3e7f2d.input\n        replace_3e7f2d.output -> replace_3a3f7e.input\n        input_0 -> replace_6f6d92.input\n        \" \" -> replace_6f6d92.search\n        \":\" -> replace_6f6d92.replace\n        \",\" -> replace_3e7f2d.search\n        \":\" -> replace_3e7f2d.replace\n        \".\" -> replace_3a3f7e.search\n        \":\" -> replace_3a3f7e.replace\n        replace_3a3f7e.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_spaces_commas_dots_e9d6d1 root.main.replace_spaces_commas_dots {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -293, y: -32, name: \"input\") property(String) input_3f1e4c\n\n        out(x: 559, y: -6, name: \"output\") property(Bool) output_9c3e76\n\n        instance(x: -94, y: -32) characters_7c4d65 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 137, y: -6) length_9c3f3d root.Std_k98ojb.List.Length {}\n        instance(x: 357, y: -7) equal_8f8e4e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 549, y: -7) and_3a6f7f root.Std_k98ojb.Logic.And {}\n        instance(x: 735, y: -7) not_5f5e3d root.Std_k98ojb.Logic.Not {}\n        instance(x: 913, y: -7) lessthanorequal_8b5d1f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1097, y: -7) ifexpression_4f1f7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        instance(x: 1299, y: -7) for_8e8b8f root.Std_k98ojb.Std.For {}\n        instance(x: 1575, y: -7) getat_9d4e8f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1779, y: -7) getat_1d3e7f root.Std_k98ojb.List.GetAt {}\n        characters_7c4d65.characters -> for_8e8b8f.items\n        input_3f1e4c -> characters_7c4d65.input\n        for_8e8b8f.item -> ifexpression_4f1f7f.gen_2\n        for_8e8b8f.index -> ifexpression_4f1f7f.gen_0\n        getat_9d4e8f.itemAtIndex -> ifexpression_4f1f7f.gen_1\n        for_8e8b8f.onItem -> ifexpression_4f1f7f.execute\n        for_8e8b8f.done -> not_5f5e3d.input\n        ifexpression_4f1f7f.value -> and_3a6f7f.left\n        1 -> lessthanorequal_8b5d1f.left\n        length_9c3f3d.length -> lessthanorequal_8b5d1f.right\n        lessthanorequal_8b5d1f.result -> equal_8f8e4e.left\n        1 -> equal_8f8e4e.right\n        equal_8f8e4e.result -> and_3a6f7f.right\n        and_3a6f7f.result -> not_5f5e3d.result\n        not_5f5e3d.result -> output_9c3e76\n        input_3f1e4c -> getat_9d4e8f.list\n        0 -> getat_9d4e8f.index\n        input_3f1e4c -> getat_1d3e7f.list\n        1 -> getat_1d3e7f.index\n        getat_1d3e7f.itemAtIndex -> for_8e8b8f.reset\n    }\n\n    \n\n    instance(x: 6, y: 5) check_same_6d7d7e root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") same_characters {\n        in(x: -334, y: -61, name: \"input\") property(String) input_4c3c9d\n\n        out(x: 1096, y: -66, name: \"output\") property(Bool) output_1f9f4f\n\n        instance(x: -183, y: -62) characters_9a2b2f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 387, y: -61) set_7e5a3a root.Std_k98ojb.List.Set {}\n        instance(x: 713, y: -60) contains_5d3e9d root.Std_k98ojb.List.Contains {}\n        instance(x: 1004, y: -61) not_9e4b4d root.Std_k98ojb.Logic.Not {}\n        characters_9a2b2f.characters -> set_7e5a3a.list\n        set_7e5a3a.listWithItem -> contains_5d3e9d.list\n        characters_9a3b2f.characters -> contains_5d3e9d.item\n        not_9e4b4d.result -> output_1f9f4f\n        contains_5d3e9d.is_contained -> not_9e4b4d.input\n    }\n\n    \n\n    instance(x: -94, y: 55) same_characters_1a3e8d root.main.same_characters {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") same_char {\n        in(x: -331, y: -19, name: \"string\") property(String) string_1f1b2c\n\n        out(x: 1143, y: -18, name: \"output\") property(Bool) output_7f3e2f\n\n        instance(x: -153, y: -20) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 338, y: -20) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 146, y: 43, name: \"getter_9c1e53\") getter_9c1e53 = previous\n        setter(x: 392, y: -241, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 122, y: -128) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -59, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -295, y: -41) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_7f3e2f\n        ifexpression_875761.value -> output_7f3e2f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        string_1f1b2c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_9c1e53.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_7f3e2f\n        for_d26972.item -> setter_9d4f1c.new_value\n        string_1f1b2c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        length_6e87f2.list -> string_1f1b2c\n        1 -> length_6e87f2.list\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -117) same_char_7b9d9c root.main.same_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_same {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"input\") property(String) input_8d7e1f\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) characters_1e2c0a root.Std_k98ojb.Strings.Characters {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        characters_1e2c0a.characters -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_8d7e1f -> characters_1e2c0a.input\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) all_same_6b1f7f root.main.all_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -293, y: -214, name: \"input\") property(String) input_6f2c8c\n\n        out(x: 1257, y: -208, name: \"output\") property(Bool) output_4e5c1e\n\n        instance(x: -142, y: -214) characters_7f6d9d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 464, y: -207) allroot_8b8a1f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1055, y: -205) equal_3f3f2f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1084, y: -127) not_9e4e7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1287, y: -128) ifexpression_9c3e1f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == previous\"\n        }\n        getter(x: 579, y: -5, name: \"getter_7b1e0f\") getter_7b1e0f = previous\n        setter(x: 1016, y: -319, name: \"setter_7f6e2f\") setter_7f6e2f = previous\n        instance(x: 337, y: -212) for_6e7c67 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -123, name: \"setter_7f6e2f\") setter_9e9e4e = previous\n        instance(x: -275, y: -38) getat_2a2d4a root.Std_k98ojb.List.GetAt {}\n        ifexpression_9c3e1f.else -> not_9e4e7c.input\n        not_9e4e7c.result -> output_4e5c1e\n        ifexpression_9c3e1f.value -> output_4e5c1e\n        ifexpression_9c3e1f.then -> setter_7f6e2f.execute\n        characters_7f6d9d.characters -> for_6e7c67.items\n        for_6e7c67.item -> ifexpression_9c3e1f.gen_2\n        for_6e7c67.index -> ifexpression_9c3e1f.gen_0\n        getter_7b1e0f.value -> ifexpression_9c3e1f.gen_1\n        for_6e7c67.onItem -> ifexpression_9c3e1f.execute\n        for_6e7c67.done -> output_4e5c1e\n        for_6e7c67.item -> setter_7f6e2f.new_value\n        characters_7f6d9d.characters -> getat_2a2d4a.list\n        0 -> getat_2a2d4a.index\n        getat_2a2d4a.itemAtIndex -> setter_9e9e4e.new_value\n        input_6f2c8c -> characters_7f6d9d.input\n        for_6e7c67.onItem -> allroot_8b8a1f.execute\n        allroot_8b8a1f.output_list -> equal_3f3f2f.left\n        1 -> equal_3f3f2f.right\n        getter_7b1e0f.value -> equal_3f3f2f.left\n        allroot_8b8a1f.handler -> func() {\n            in(x: -35, y: -13, name: \"current\") property(Any) current_6e6f7f\n            in(x: -25, y: 63, name: \"_index\") property(Number) _index_5c6e8c\n\n            out(x: 709, y: 38, name: \"output\") property(Bool) output_8b7c8d\n\n            instance(x: 210, y: 44) equal_5c8a8d root.Std_k98ojb.Logic.Equal {}\n            current_6e6f7f -> equal_5c8a8d.left\n            getter_7b1e0f.value -> equal_5c8a8d.right\n            equal_5c8a8d.result -> output_8b7c8d\n        }\n        setter_9e9e4e.continue -> for_6e7c67.reset\n        setter_7f6e2f.continue -> for_6e7c67.next\n    }\n\n    \n\n    instance(x: 14, y: -67) check_same_6b8b9f root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -289, y: -206, name: \"input\") property(String) input_5b7e6f\n\n        out(x: 1146, y: -211, name: \"output\") property(Bool) output_5e1b0d\n\n        instance(x: -131, y: -208, name: \"list of characters\") characters_3e3d8d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 450, y: -208) count_8b0b3c root.Std_k98ojb.Std.Count {}\n        instance(x: 723, y: -207) firstitem_5d8e6c root.Std_k98ojb.List.FirstItem {}\n        instance(x: 885, y: -206) filter_8d5b8c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1044, y: -205) not_5a7d2d root.Std_k98ojb.Logic.Not {}\n        instance(x: 1203, y: -205) equal_1d4e9e root.Std_k98ojb.Logic.Equal {}\n        characters_3e3d8d.characters -> count_8b0b3c.items\n        characters_3e3d8d.characters -> filter_8d5b8c.items\n        filter_8d5b8c.output_list -> not_5a7d2d.input\n        count_8b0b3c.count -> equal_1d4e9e.left\n        1 -> equal_1d4e9e.right\n        firstitem_5d8e6c.item -> equal_1d4e9e.gen_0\n        filter_8d5b8c.handler {\n            in(x: -32, y: 16, name: \"current\") property(String) current_7b4b1d\n\n            out(x: 655, y: 40, name: \"output\") property(Bool) output_7c4c3f\n\n            instance(x: 226, y: 35) equal_6e4f0c root.Std_k98ojb.Logic.Equal {}\n            current_7b4b1d -> equal_6e4f0c.left\n            equal_1d4e9e.gen_0 -> equal_6e4f0c.right\n            equal_6e4f0c.result -> output_7c4c3f\n        }\n        not_5a7d2d.result -> output_5e1b0d\n        characters_3e3d8d.characters -> firstitem_5d8e6c.list\n    }\n\n    \n\n    instance(x: -56, y: 55) check_same_4a9c6d root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_characters {\n        in(x: -298, y: -86, name: \"string\") property(String) string_8e4e6f\n\n        out(x: 563, y: -89, name: \"output\") property(Bool) output_5c9e2e\n\n        instance(x: -101, y: -87) characters_8d7d6c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 246, y: -88) distinct_8f6e3f root.Std_k98ojb.List.Distinct {}\n        instance(x: 474, y: -89) length_8f6f7d root.Std_k98ojb.List.Length {}\n        instance(x: 697, y: -88) equal_1f3f1f root.Std_k98ojb.Logic.Equal {}\n        string_8e4e6f -> characters_8d7d6c.input\n        characters_8d7d6c.characters -> distinct_8f6e3f.list\n        distinct_8f6e3f.distinct -> length_8f6f7d.list\n        1 -> equal_1f3f1f.right\n        length_8f6f7d.length -> equal_1f3f1f.left\n        equal_1f3f1f.result -> output_5c9e2e\n    }\n\n    \n\n    instance(x: -76, y: 55) check_characters_5f7e1d root.main.check_characters {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_same {\n        in(x: -280, y: -35, name: \"string\") property(String) string_3a8c7d\n\n        out(x: 1014, y: -31, name: \"output\") property(Bool) output_4b9d9e\n\n        instance(x: -129, y: -35) length_1f0c0e root.Std_k98ojb.Strings.Length {}\n        instance(x: 312, y: -32) ifexpression_5b8e5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 104, y: 56, name: \"getter_6b6e4f\") getter_6b6e4f = previous\n        setter(x: 349, y: -216, name: \"setter_4f9e8e\") setter_4f9e8e = previous\n        instance(x: 211, y: -123) for_9f2f1f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -225, name: \"setter_4f9e8e\") setter_9f2f0e = previous\n        instance(x: -279, y: -141) getat_3d9b7d root.Std_k98ojb.Strings.GetAt {}\n        ifexpression_5b8e5a.else -> continue_5a3b6e\n        ifexpression_5b8e5a.value -> output_4b9d9e\n        ifexpression_5b8e5a.then -> setter_4f9e8e.execute\n        string_3a8c7d -> for_9f2f1f.items\n        for_9f2f1f.item -> ifexpression_5b8e5a.gen_2\n        for_9f2f1f.index -> ifexpression_5b8e5a.gen_0\n        getter_6b6e4f.value -> ifexpression_5b8e5a.gen_1\n        for_9f2f1f.onItem -> ifexpression_5b8e5a.execute\n        for_9f2f1f.done -> continue_5a3b6e\n        for_9f2f1f.item -> setter_4f9e8e.new_value\n        string_3a8c7d -> getat_3d9b7d.input\n        0 -> getat_3d9b7d.index\n        getat_3d9b7d.character -> setter_9f2f0e.new_value\n        execute_6a2f8c -> setter_9f2f0e.execute\n        setter_9f2f0e.continue -> for_9f2f1f.reset\n        setter_4f9e8e.continue -> for_9f2f1f.next\n        length_1f0c0e.length -> for_9f2f1f.to\n        0 -> for_9f2f1f.from\n    }\n\n    \n\n    instance(x: 42, y: -20) all_same_7c9f4c root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -285, y: -84, name: \"string\") property(String) string_9a5b3e\n\n        out(x: 562, y: -95, name: \"output\") property(Bool) output_1e7c3e\n\n        instance(x: -96, y: -95) intersection_1d3d3e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -94) length_1e9a1e root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -93) equal_1c8f1f root.Std_k98ojb.Logic.Equal {}\n        instance(x: -284, y: 34, name: \"get characters\") characters_8d6b0d root.Std_k98ojb.Strings.Characters {}\n        characters_8d6b0d.characters -> intersection_1d3d3e.left\n        string_9a5b3e -> intersection_1d3d3e.right\n        length_1e9a1e.length -> equal_1c8f1f.left\n        1 -> equal_1c8f1f.right\n        equal_1c8f1f.result -> output_1e7c3e\n        string_9a5b3e -> characters_8d6b0d.input\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_5e4b6c root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") all_same {\n        in(x: -292, y: -74, name: \"input\") property(String) input_8e8f1f\n\n        out(x: 1078, y: -69, name: \"output\") property(Bool) output_9d1b5c\n\n        instance(x: -136, y: -74) characters_9f1b7d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 366, y: -71) length_5e3f1c root.Std_k98ojb.List.Length {}\n        instance(x: 642, y: -71) contains_6f9b0d root.Std_k98ojb.List.Contains {}\n        instance(x: 886, y: -71) not_3d9b8c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1044, y: -70) lessthan_8c1b6d root.Std_k98ojb.Math.LessThan {}\n        characters_9f1b7d.characters -> contains_6f9b0d.list\n        characters_9f1b7d.characters -> length_5e3f1c.list\n        input_8e8f1f -> characters_9f1b7d.input\n        1 -> length_5e3f1c.length\n        characters_9f1b7d.characters -> lessthan_8c1b6d.right\n        lessthan_8c1b6d.result -> not_3d9b8c.input\n        contains_6f9b0d.is_contained -> not_3d9b8c.input\n        0 -> lessthan_8c1b6d.left\n        not_3d9b8c.result -> output_9d1b5c\n    }\n\n    \n\n    instance(x: 10, y: 19) all_same_0c7f4c root.main.all_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Iteration.Filter {\n            handler: {\n                in property(String) item\n                out property(Bool) result\n\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item -> is_numeric_node.input\n                is_numeric_node.isNumeric -> result\n            }\n        }\n        instance(x: 0, y: 0) count_node_2 root.Std_k98ojb.Iteration.Count {}\n        input_ai -> count_node.items\n        count_node.output_list -> count_node_2.items\n        count_node_2.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 0) characters_1c0a0f root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_1c0a0f.input\n        instance(x: 0, y: 0) count_6b9f0f root.Std_k98ojb.Count {}\n        characters_1c0a0f.characters -> count_6b9f0f.items\n        instance(x: 0, y: 0) is_numeric_5c4f1f root.Std_k98ojb.Strings.IsNumeric {}\n        count_6b9f0f.on_count -> is_numeric_5c4f1f.execute\n        instance(x: 0, y: 0) if_expression_5a8a5e root.Std_k98ojb.Std.IfExpression {}\n        is_numeric_5c4f1f.is_numeric -> if_expression_5a8a5e.gen_0\n        \"true\" -> if_expression_5a8a5e.gen_1\n        if_expression_5a8a5e.value -> count_6b9b3f.execute\n        instance(x: 0, y: 0) count_6b9b3f root.Std_k98ojb.Count {}\n        count_6b9b3f.on_count -> count_6b9f0f.count\n        count_6b9f0f.iterations -> count_6b9b3f.iterations\n        count_6b9f0f.iteration -> count_6b9b3f.iteration\n        count_6b9f0f.done -> count_6b9b3f.reset\n        count_6b9f0f.done -> count_6b9b3f.continue\n        count_6b9b3f.iteration -> output_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) count_2e1f8f root.Std_k98ojb.Std.Count {\n            iterations: 10\n        }\n        instance(x: 0, y: 0) filter_1e2f7f root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        instance(x: 0, y: 0) count_4e3g8h root.Std_k98ojb.Std.Count {\n            iterations: 10\n        }\n        instance(x: 0, y: 0) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"count * it\"\n        }\n        instance(x: 0, y: 0) characters_1f2g3h root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) math_expr_node_2 root.Std_k98ojb.Math.Expression {\n            expression: \"count * it\"\n        }\n        instance(x: 0, y: 0) add_3f4h5i root.Std_k98ojb.Math.Add {}\n        input_ai -> characters_1f2g3h.input\n        characters_1f2g3h.characters -> filter_1e2f7f.list\n        filter_1e2f7f.result -> count_2e1f8f.onCount\n        count_2e1f8f.onCount -> count_4e3g8h.count\n        count_4e3g8h.iteration -> math_expr_node.gen_1\n        1 -> math_expr_node.gen_0\n        math_expr_node.result -> add_3f4h5i.first\n        count_4e3g8h.iteration -> math_expr_node_2.gen_1\n        0 -> math_expr_node_2.gen_0\n        math_expr_node_2.result -> add_3f4h5i.second\n        add_3f4h5i.result -> result_ai\n        count_4e3g8h.done -> count_2e1f8f.done\n        count_2e1f8f.done -> result_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) string_to_list_node root.Std_k98ojb.Strings.Characters {}\n        string_ai -> string_to_list_node.input\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {\n            iterations: 0\n        }\n        instance(x: 0, y: 0) if_node root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: 0) add_node root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) for_node root.Std_k98ojb.Std.For {}\n        string_to_list_node.characters -> for_node.items\n        for_node.item -> is_numeric_node.input\n        is_numeric_node.isNumeric -> if_node.input\n        1 -> add_node.first\n        count_node.interation -> add_node.second\n        add_node.result -> count_node.iteration\n        if_node.then -> count_node.count\n        for_node.onItem -> if_node.execute\n        for_node.done -> count_node.reset\n        count_node.onCount -> add_node.execute\n        count_node.done -> result_ai\n    }\n\n    \n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"value\") property(String) value_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) string_chars_node root.Std_k98ojb.Strings.Characters {}\n        value_ai -> string_chars_node.input\n        instance(x: 0, y: 0) count_5e1d1f root.Std_k98ojb.Std.Count {\n            iterations: 0\n        }\n        string_chars_node.characters -> count_5e1d1f.list\n        instance(x: 0, y: 0) if_expression_node root.Std_k98ojb.Std.IfExpression {\n            expression: \"it.isNumeric\"\n        }\n        string_chars_node.characters -> if_expression_node.list\n        if_expression_node.value -> count_5e1d1f.count\n        count_5e1d1f.iteration -> result_ai\n        count_5e1d1f.done -> count_5e1d1f.reset\n    }\n    \n\n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 0) string_to_chars root.Std_k98ojb.Strings.Characters {}\n        input_ai -> string_to_chars.input\n        instance(x: 0, y: 0) count_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(doc: \"filter the list to only digits\") filter {\n                in(x: 0, y: 0, name: \"it\") property(String) it_ai\n                out(x: 0, y: 0, name: \"output\") property(Bool) output_ai\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                it_ai -> is_numeric_node.input\n                is_numeric_node.isNumeric -> output_ai\n            }\n        }\n        string_to_chars.characters -> count_digits_node.items\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.List.Length {}\n        count_digits_node.output_list -> count_node.list\n        count_node.length -> output_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) characters_1f6c6a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) filter_8a9f2e root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) count_8f4f7a root.Std_k98ojb.Std.Count {}\n        string_ai -> characters_1f6c6a.input\n        characters_1f6c6a.characters -> filter_8a9f2e.list\n        filter_8a9f2e.result -> count_8f4f7a.items\n        count_8f4f7a.onCount -> count_8f4f7a.count\n        count_8f4f7a.iteration -> count_8f4f7a.iteration\n        count_8f4f7a.done -> count_8f4f7a.reset\n        count_8f4f7a.iteration -> result_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 0) chars_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> chars_node.input\n        instance(x: 0, y: 0) filter_node root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        chars_node.characters -> filter_node.list\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Count {}\n        filter_node.result -> count_node.items\n        count_node.onCount -> count_node.count\n        count_node.iteration -> output_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 0) string_contains_1 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) string_contains_2 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) string_contains_3 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) string_contains_4 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) string_contains_5 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) string_contains_6 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) string_contains_7 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) string_contains_8 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) string_contains_9 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) std_if_1 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) std_if_2 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) std_if_3 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) std_if_4 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) std_if_5 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) std_if_6 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) std_if_7 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) std_if_8 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) std_if_9 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) count_1 root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) count_2 root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) count_3 root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) count_4 root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) count_5 root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) count_6 root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) count_7 root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) count_8 root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) count_9 root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) add_1 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) add_2 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) add_3 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) add_4 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) add_5 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) add_6 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) add_7 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) add_8 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) add_9 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) add_10 root.Std_k98ojb.Math.Add {}\n        input_ai -> string_contains_1.input\n        \"0\" -> string_contains_1.contains\n        string_contains_1.contains -> std_if_1.input\n        1 -> std_if_1.then\n        0 -> std_if_1.else\n        std_if_1.value -> count_1.count\n        std_if_1.value -> add_1.first\n        0 -> count_1.iterations\n        count_1.onCount -> std_if_1.execute\n        count_1.done -> add_1.second\n        add_1.result -> output_ai\n        input_ai -> string_contains_2.input\n        \"1\" -> string_contains_2.contains\n        string_contains_2.contains -> std_if_2.input\n        1 -> std_if_2.then\n        0 -> std_if_2.else\n        std_if_2.value -> count_2.count\n        std_if_2.value -> add_2.first\n        0 -> count_2.iterations\n        count_2.onCount -> std_if_2.execute\n        count_2.done -> add_2.second\n        add_2.result -> add_1.second\n        input_ai -> string_contains_3.input\n        \"2\" -> string_contains_3.contains\n        string_contains_3.contains -> std_if_3.input\n        1 -> std_if_3.then\n        0 -> std_if_3.else\n        std_if_3.value -> count_3.count\n        std_if_3.value -> add_3.first\n        0 -> count_3.iterations\n        count_3.onCount -> std_if_3.execute\n        count_3.done -> add_3.second\n        add_3.result -> add_2.second\n        input_ai -> string_contains_4.input\n        \"3\" -> string_contains_4.contains\n        string_contains_4.contains -> std_if_4.input\n        1 -> std_if_4.then\n        0 -> std_if_4.else\n        std_if_4.value -> count_4.count\n        std_if_4.value -> add_4.first\n        0 -> count_4.iterations\n        count_4.onCount -> std_if_4.execute\n        count_4.done -> add_4.second\n        add_4.result -> add_3.second\n        input_ai -> string_contains_5.input\n        \"4\" -> string_contains_5.contains\n        string_contains_5.contains -> std_if_5.input\n        1 -> std_if_5.then\n        0 -> std_if_5.else\n        std_if_5.value -> count_5.count\n        std_if_5.value -> add_5.first\n        0 -> count_5.iterations\n        count_5.onCount -> std_if_5.execute\n        count_5.done -> add_5.second\n        add_5.result -> add_4.second\n        input_ai -> string_contains_6.input\n        \"5\" -> string_contains_6.contains\n        string_contains_6.contains -> std_if_6.input\n        1 -> std_if_6.then\n        0 -> std_if_6.else\n        std_if_6.value -> count_6.count\n        std_if_6.value -> add_6.first\n        0 -> count_6.iterations\n        count_6.onCount -> std_if_6.execute\n        count_6.done -> add_6.second\n        add_6.result -> add_5.second\n        input_ai -> string_contains_7.input\n        \"6\" -> string_contains_7.contains\n        string_contains_7.contains -> std_if_7.input\n        1 -> std_if_7.then\n        0 -> std_if_7.else\n        std_if_7.value -> count_7.count\n        std_if_7.value -> add_7.first\n        0 -> count_7.iterations\n        count_7.onCount -> std_if_7.execute\n        count_7.done -> add_7.second\n        add_7.result -> add_6.second\n        input_ai -> string_contains_8.input\n        \"7\" -> string_contains_8.contains\n        string_contains_8.contains -> std_if_8.input\n        1 -> std_if_8.then\n        0 -> std_if_8.else\n        std_if_8.value -> count_8.count\n        std_if_8.value -> add_8.first\n        0 -> count_8.iterations\n        count_8.onCount -> std_if_8.execute\n        count_8.done -> add_8.second\n        add_8.result -> add_7.second\n        input_ai -> string_contains_9.input\n        \"8\" -> string_contains_9.contains\n        string",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 0) characters_3d5f6f root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_3d5f6f.input\n        instance(x: 0, y: 0) filter_4e6b8f root.Std_k98ojb.Query.Filter {\n            where: \"Strings.IsNumeric(it)\"\n        }\n        characters_3d5f6f.characters -> filter_4e6b8f.list\n        instance(x: 0, y: 0) list_length_7f5a6f root.Std_k98ojb.List.Length {}\n        filter_4e6b8f.result -> list_length_7f5a6f.list\n        list_length_7f5a6f.length -> output_ai\n    }\n    \n\n    instance(x: -53, y: -32, name: \"count_digits\") count_digits_9e7f5e root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth {\n        in(x: -282, y: 58, name: \"n\") property(Number) n_2a8b8f\n\n        out(x: 577, y: -6, name: \"sum\") property(Number) sum_5e5a8e\n\n        instance(x: 19, y: 4) pow_8c1f3e root.Std_k98ojb.Math.Pow {}\n        instance(x: 18, y: 121) expression_5e6c3e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 304, y: 2) add_8c8c0f root.Std_k98ojb.Math.Add {}\n        instance(x: 19, y: -110) mul_8d8c0e root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 331, y: 133) data_6c7d2e  = 1\n        n_2a8b8f -> pow_8c1f3e.gen_1\n        pow_8c1f3e.result -> mul_8d8c0e.second\n        expression_5e6c3e.result -> pow_8c1f3e.gen_0\n        4 -> pow_8c1f3e.gen_0\n        n_2a8b8f -> expression_5e6c3e.gen_0\n        mul_8d8c0e.result -> add_8c8c0f.second\n        data_6c7d2e -> add_8c8c0f.first\n        add_8c8c0f.result -> sum_5e5a8e\n        add_8c8c0f.result -> data_6c7d2e\n    }\n\n    \n\n    instance(x: 123, y: -27) sum_fourth_1f9d7d root.main.sum_fourth {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -337, y: -280, name: \"n\") property(Number) n_1a8f0b\n\n        out(x: 764, y: -365, name: \"output\") property(Number) output_5c4d9c\n\n        instance(x: 21, y: -6) mul_7b1b3d root.Std_k98ojb.Math.Mul {}\n        instance(x: 24, y: 133) expression_3a5f8e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 297, y: 0) pow_3b2b3a root.Std_k98ojb.Math.Pow {}\n        instance(x: 24, y: -193) mul_4f1e1d root.Std_k98ojb.Math.Mul {}\n        instance(x: 23, y: -309) mul_3a5e0f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 393, y: -338) data_7e5f7f  = 1\n        instance(x: 10, y: -387) expression_7e3e0e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (n+1)/2\"\n        }\n        instance(x: 297, y: -329) add_1f5f3f root.Std_k98ojb.Math.Add {}\n        instance(x: 298, y: -454) mul_3f6f2d root.Std_k98ojb.Math.Mul {}\n        instance(x: 297, y: -573) div_1d1d2e root.Std_k98ojb.Math.Div {}\n        data_7e5f7f -> div_1d1d2e.second\n        mul_3f6f2d.result -> div_1d1d2e.first\n        add_1f5f3f.result -> mul_3f6f2d.first\n        mul_7b1b3d.result -> add_1f5f3f.second\n        pow_3b2b3a.result -> mul_7b1b3d.second\n        expression_3a5f8e.result -> pow_3b2b3a.y\n        pow_3b2b3a.result -> mul_4f1e1d.second\n        mul_3a5e0f.result -> mul_4f1e1d.first\n        expression_3a5f8e.result -> mul_3a5e0f.second\n        mul_7b1b3d.result -> mul_3a5e0f.first\n        expression_7e3e0e.result -> data_7e5f7f\n        n_1a8f0b -> expression_3a5f8e.gen_0\n        n_1a8f0b -> expression_7e3e0e.gen_0\n        mul_4f1e1d.result -> output_5c4d9c\n    }\n\n    \n\n    instance(x: -77, y: 160) sum_fourth_power_7b1f2e root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -270, y: 46, name: \"n\") property(Number) n_7f7a0c\n\n        out(x: 573, y: 0, name: \"sum\") property(Number) sum_1b9b7d\n\n        instance(x: 20, y: 2) mul_1f3b7f root.Std_k98ojb.Math.Mul {}\n        instance(x: 17, y: 132) mul_4e9f1c root.Std_k98ojb.Math.Mul {}\n        instance(x: 329, y: 4) div_6c3c9c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 336, y: 132) data_6e6f7d  = 3\n        instance(x: 14, y: 136) expression_1a7d5f root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 296, y: 2) div_1d7e1e root.Std_k98ojb.Math.Div {}\n        data_6e6f7d -> div_1d7e1e.second\n        mul_1f3b7f.result -> div_1d7e1e.first\n        expression_1a7d5f.result -> mul_1f3b7f.second\n        n_7f7a0c -> mul_1f3b7f.first\n        n_7f7a0c -> expression_1a7d5f.gen_0\n        div_1d7e1e.result -> mul_4e9f1c.first\n        div_1d7e1e.result -> mul_1f3b7f.first\n        div_6c3c9c.result -> sum_1b9b7d\n        mul_4e9f1c.result -> div_6c3c9c.first\n        mul_1f3b7f.result -> mul_4e9f1c.second\n        n_7f7a0c -> div_6c3c9c.second\n    }\n\n    \n\n    instance(x: 119, y: -24) sum_fourth_power_8c7d6e root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = sum\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (2*n*n - 1) * (2*n*n - 1)\"\n        }\n        instance(x: 62, y: -226, name: \"fourth\") pow_9e2d2d root.Std_k98ojb.Math.Pow {}\n        data_3c713b -> output_ebef81\n        n_c88d35 -> expression_634b7e.gen_0\n        expression_634b7e.result -> data_3c713b.sum\n        n_c88d35 -> pow_9e2d2d.x\n        pow_9e2d2d.result -> pow_9e2d2d.y\n        4 -> pow_9e2d2d.y\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_f15bad root.main.sum_fourth {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -293, y: -284, name: \"n\") property(Number) n_7f6a9e\n\n        out(x: 771, y: -381, name: \"sum\") property(Number) sum_4d9e7f\n\n        instance(x: 19, y: -381) mul_1e8f8c root.Std_k98ojb.Math.Mul {}\n        instance(x: 22, y: -230) expression_1f7b9f root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: -324) mul_1c3f7c root.Std_k98ojb.Math.Mul {}\n        instance(x: 11, y: -135) pow_1d4f8f root.Std_k98ojb.Math.Pow {}\n        instance(x: 302, y: -6) add_6b1f0c root.Std_k98ojb.Math.Add {}\n        data_instance(x: 329, y: -136) data_1a2f1f  = 1\n        n_7f6a9e -> expression_1f7b9f.gen_0\n        expression_1f7b9f.result -> mul_1e8f8c.second\n        n_7f6a9e -> mul_1e8f8c.first\n        mul_1e8f8c.result -> pow_1d4f8f.x\n        4 -> pow_1d4f8f.y\n        pow_1d4f8f.result -> mul_1c3f7c.second\n        data_1a2f1f -> mul_1c3f7c.first\n        mul_1c3f7c.result -> add_6b1f0c.second\n        add_6b1f0c.result -> sum_4d9e7f\n    }\n\n    \n\n    instance(x: 125, y: -299) sum_fourth_power_8f1a4f root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -338, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = sum\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (2*n-1) * (2*n-1) * (2*n+1) / 3\"\n        }\n        instance(x: 62, y: -226, name: \"average\") div_2d44da root.Std_k98ojb.Math.Div {}\n        data_3c713b -> output_ebef81\n        n_c88d35 -> expression_634b7e.gen_0\n        expression_634b7e.result -> data_3c713b.sum\n        expression_634b7e.result -> div_2d44da.first\n        div_2d44da.result -> data_3c713b.average\n        n_c88d35 -> div_2d44da.second\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -267, y: 1, name: \"n\") property(Number) n_6a7d5f\n\n        out(x: 591, y: -7, name: \"sum\") property(Number) sum_3b4f6e\n\n        instance(x: 12, y: 140) expression_3b4a8f root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_4a3c6d root.Std_k98ojb.Math.Pow {}\n        instance(x: 23, y: -1) mul_3b1a3f root.Std_k98ojb.Math.Mul {}\n        instance(x: 303, y: 2) div_5c7c2a root.Std_k98ojb.Math.Div {}\n        instance(x: 23, y: -1) add_6a5b3f root.Std_k98ojb.Math.Add {}\n        data_instance(x: 330, y: 133) data_7d4c3f  = 1\n        n_6a7d5f -> expression_3b4a8f.gen_0\n        expression_3b4a8f.result -> pow_4a3c6d.x\n        4 -> pow_4a3c6d.y\n        pow_4a3c6d.result -> mul_3b1a3f.second\n        n_6a7d5f -> mul_3b1a3f.first\n        mul_3b1a3f.result -> div_5c7c2a.first\n        n_6a7d5f -> div_5c7c2a.second\n        div_5c7c2a.result -> add_6a5b3f.second\n        data_7d4c3f -> add_6a5b3f.first\n        add_6a5b3f.result -> sum_3b4f6e\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9d7f4f root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth {\n        in(x: -277, y: -287, name: \"n\") property(Number) n_5e8c93\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_9d9e6d\n\n        instance(x: 0, y: 0) for_7f6e9c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) pow_1d5d5c root.Std_k98ojb.Math.Pow {}\n        instance(x: 0, y: 0) add_1d6c0f root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) expression_3a1d8f root.Std_k98ojb.Math.Expression {\n            expression: \"4*i*i-1\"\n        }\n        instance(x: 0, y: 0) data_instance_1f3a8e data_instance = 0\n        n_5e8c93 -> for_7f6e9c.items\n        func() {\n            in(x: -113, y: 34, name: \"i\") property(Number) i_8f6e7d\n\n            out(x: 515, y: 44, name: \"output\") property(Number) output_4f3c7d\n\n            expression_3a1d8f.result -> pow_1d5d5c.x\n            4 -> pow_1d5d5c.y\n            pow_1d5d5c.result -> add_1d6c0f.second\n            data_instance_1f3a8e -> add_1d6c0f.first\n            add_1d6c0f.result -> data_instance_1f3a8e\n            i_8f6e7d -> expression_3a1d8f.gen_0\n        } -> for_7f6e9c.handler\n        for_7f6e9c.done -> output_9d9e6d\n        data_instance_1f3a8e -> output_9d9e6d\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_9c1d7c root.main.sum_fourth {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power {\n        in(x: -291, y: -283, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: -275, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -273) pow_1d3d3e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_1f9c6a root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> add_1f9c6a.second\n        pow_1d3d3e.result -> add_1f9c6a.first\n        expression_2d6da6.result -> pow_1d3d3e.second\n        4 -> pow_1d3d3e.first\n        expression_2d6da6.result -> pow_1d3d3e.gen_0\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_1f9c6a.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -273) fourth_power_9dcc3d root.main.fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -291, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (2*n*n-1)\"\n        }\n        instance(x: 62, y: -226, name: \"sum_fourth\") expression_9f9c1e root.Std_k98ojb.Math.Expression {\n            expression: \"sum * (2*n*n+1)\"\n        }\n        data_instance(x: 394, y: -339) data_3c713b  = sum_fourth\n        n_c88d35 -> expression_634b7e.gen_0\n        n_c88d35 -> expression_9f9c1e.gen_0\n        expression_634b7e.result -> data_3c713b.sum\n        expression_634b7e.result -> expression_9f9c1e.sum\n        expression_9f9c1e.result -> data_3c713b.sum_fourth\n        data_3c713b -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -126, y: -53, name: \"side\") property(Number) side_7f9b3c\n\n        out(x: 171, y: -21, name: \"area\") property(Number) area_1e5f93\n\n        instance(x: 92, y: -31) mul_4d6c8c root.Std_k98ojb.Math.Mul {}\n        6 -> mul_4d6c8c.first\n        side_7f9b3c -> mul_4d6c8c.second\n        mul_4d6c8c.result -> area_1e5f93\n    }\n\n    \n\n    instance(x: 46, y: 31) surface_area_9f7b6c root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -1000, y: -150, name: \"side\") property(Number) side_9d6f9c\n\n        out(x: 0, y: 0, name: \"area\") property(Number) area_9f9f1d\n\n        instance(x: -650, y: -25) mul_f2b2b4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -420, y: 30) data_5b3c5c  = 6\n        side_9d6f9c -> mul_f2b2b4.first\n        data_5b3c5c -> mul_f2b2b4.second\n        mul_f2b2b4.result -> area_9f9f1d\n    }\n\n    \n\n    instance(x: -250, y: 30) surface_area_4c1c3c root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -1009, y: -105, name: \"side\") property(Number) side_1c8d9d\n\n        out(x: -34, y: -5, name: \"area\") property(Number) area_7e2f2e\n\n        instance(x: -647, y: -127) mul_3b3f0d root.Std_k98ojb.Math.Mul {}\n        instance(x: -367, y: -51) mul_5b4e3c root.Std_k98ojb.Math.Mul {}\n        instance(x: -186, y: -1) mul_6f4c3c root.Std_k98ojb.Math.Mul {}\n        side_1c8d9d -> mul_3b3d0d.first\n        6 -> mul_3b3d0d.second\n        mul_3b3d0d.result -> mul_5b4e3c.first\n        side_1c8d9d -> mul_5b4e3c.second\n        mul_5b4e3c.result -> mul_6f4c3c.first\n        side_1c8d9d -> mul_6f4c3c.second\n        mul_6f4c3c.result -> area_7e2f2e\n    }\n\n    \n\n    instance(x: 110, y: 76) surface_area_1b9f2e root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -119, y: -50, name: \"side\") property(Number) side_6c7d6d\n\n        out(x: 119, y: -3, name: \"area\") property(Number) area_1b9f74\n\n        instance(x: 26, y: -37, name: \"multiply\") multiply_2c6b3f root.Std_k98ojb.Math.Mul {}\n        instance(x: 22, y: -85, name: \"multiply_2\") multiply_6f6f9c root.Std_k98ojb.Math.Mul {}\n        instance(x: 28, y: -131, name: \"multiply_3\") multiply_1e4b0e root.Std_k98ojb.Math.Mul {}\n        instance(x: 22, y: -178, name: \"multiply_4\") multiply_1d4e2c root.Std_k98ojb.Math.Mul {}\n        6 -> multiply_2c6b3f.first\n        side_6c7d6d -> multiply_2c6b3f.second\n        side_6c7d6d -> multiply_6f6f9c.first\n        side_6c7d6d -> multiply_1e4b0e.first\n        multiply_2c6b3f.result -> multiply_6f6f9c.second\n        multiply_6f6f9c.result -> multiply_1e4b0e.second\n        multiply_1e4b0e.result -> multiply_1d4e2c.first\n        2 -> multiply_1d4e2c.second\n        multiply_1d4e2c.result -> area_1b9f74\n    }\n\n    \n\n    instance(x: 105, y: 56) surface_area_3a4f6c root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -1013, y: -185, name: \"size\") property(Number) size_8c7d73\n\n        out(x: -62, y: -306, name: \"surface area\") property(Number) surface_area_5d3d9e\n\n        instance(x: -601, y: -358) mul_3b5e8d root.Std_k98ojb.Math.Mul {}\n        instance(x: -341, y: -301) mul_6e1f48 root.Std_k98ojb.Math.Mul {}\n        instance(x: -141, y: -152) mul_3f3f2f root.Std_k98ojb.Math.Mul {}\n        instance(x: -109, y: -63) mul_9e4e91 root.Std_k98ojb.Math.Mul {}\n        instance(x: -105, y: -110) mul_6e9c3e root.Std_k98ojb.Math.Mul {}\n        size_8c7d73 -> mul_3b5e8d.first\n        size_8c7d73 -> mul_6e1f48.first\n        size_8c7d73 -> mul_3f3f2f.first\n        size_8c7d73 -> mul_9e4e91.first\n        size_8c7d73 -> mul_6e9c3e.first\n        6 -> mul_3b5e8d.second\n        mul_3b5e8d.result -> mul_6e1f48.second\n        mul_6e1f48.result -> mul_3f3f2f.second\n        mul_3f3f2f.result -> mul_9e4e91.second\n        mul_9e4e91.result -> mul_6e9c3e.second\n        mul_6e9c3e.result -> surface_area_5d3d9e\n    }\n\n    \n\n    instance(x: 325, y: 567) surface_area_3f6c6f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -108, y: -77, name: \"size\") property(Number) size_6e3e1e\n\n        out(x: 105, y: -68, name: \"area\") property(Number) area_1b9d0e\n\n        instance(x: 93, y: -22) mul_7b7d4f root.Std_k98ojb.Math.Mul {}\n        instance(x: 93, y: -118) mul_9d9f5e root.Std_k98ojb.Math.Mul {}\n        instance(x: 93, y: -204) mul_3c7e5f root.Std_k98ojb.Math.Mul {}\n        size_6e3e1e -> mul_7b7d4f.first\n        size_6e3e1e -> mul_7b7d4f.second\n        mul_7b7d4f.result -> mul_9d9f5e.first\n        6 -> mul_9d9f5e.second\n        mul_9d9f5e.result -> mul_3c7e5f.first\n        size_6e3e1e -> mul_3c7e5f.second\n        mul_3c7e5f.result -> area_1b9d0e\n    }\n\n    \n\n    instance(x: 112, y: 57) cube_surface_area_4b1f7e root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -186, y: 42, name: \"size\") property(Number) size_6d5d89\n\n        out(x: 472, y: 11, name: \"surface area\") property(Number) surface_area_9c3b4f\n\n        instance(x: 26, y: -16) mul_3f3b4f root.Std_k98ojb.Math.Mul {}\n        instance(x: 316, y: 8) mul_6d3e9c root.Std_k98ojb.Math.Mul {}\n        instance(x: 454, y: 7) mul_4f7b1e root.Std_k98ojb.Math.Mul {}\n        instance(x: 592, y: 6) mul_4c3c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 730, y: 5) mul_3f0f4a root.Std_k98ojb.Math.Mul {}\n        instance(x: 868, y: 4) mul_4b2e9a root.Std_k98ojb.Math.Mul {}\n        instance(x: 1006, y: 3) mul_3f3b4f_1 root.Std_k98ojb.Math.Mul {}\n        size_6d5d89 -> mul_3f3b4f.first\n        size_6d5d89 -> mul_3f3b4f.second\n        mul_3f3b4f.result -> mul_6d3e9c.first\n        mul_3f3b4f.result -> mul_6d3e9c.second\n        mul_6d3e9c.result -> mul_4f7b1e.first\n        mul_6d3e9c.result -> mul_4f7b1e.second\n        mul_4f7b1e.result -> mul_4c3c8f.first\n        mul_4f7b1e.result -> mul_4c3c8f.second\n        mul_4c3c8f.result -> mul_3f0f4a.first\n        mul_4c3c8f.result -> mul_3f0f4a.second\n        mul_3f0f4a.result -> mul_4b2e9a.first\n        mul_3f0f4a.result -> mul_4b2e9a.second\n        mul_4b2e9a.result -> mul_3f3b4f_1.first\n        mul_4b2e9a.result -> mul_3f3b4f_1.second\n        mul_3f3b4f_1.result -> surface_area_9c3b4f\n    }\n\n    \n\n    instance(x: 111, y: 42) cube_surface_area_5d9b8d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -126, y: -51, name: \"size\") property(Number) size_8c7b5e\n\n        out(x: 1044, y: -10, name: \"area\") property(Number) area_4b9e4f\n\n        instance(x: 22, y: -22) mul_2e3c1f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_2e3c1f.result -> div_64046c.first\n        expression_2d6da6.result -> mul_2e3c1f.second\n        size_8c7b5e -> mul_2e3c1f.first\n        size_8c7b5e -> expression_2d6da6.gen_0\n        div_64046c.result -> area_4b9e4f\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_9dcc3d root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -119, y: 43, name: \"size\") property(Number) size_3e3bdc\n\n        out(x: 1027, y: 15, name: \"surface area\") property(Number) surface_area_4d6e6c\n\n        instance(x: 25, y: -18) mul_7d8c8c root.Std_k98ojb.Math.Mul {}\n        instance(x: 325, y: 11) mul_1e3f9e root.Std_k98ojb.Math.Mul {}\n        instance(x: 615, y: 1) mul_3c7f9d root.Std_k98ojb.Math.Mul {}\n        size_3e3bdc -> mul_7d8c8c.first\n        6 -> mul_7d8c8c.second\n        mul_7d8c8c.result -> mul_1e3f9e.first\n        size_3e3bdc -> mul_1e3f9e.second\n        mul_1e3f9e.result -> mul_3c7f9e.first\n        size_3e3bdc -> mul_3c7f9e.second\n        mul_3c7f9e.result -> surface_area_4d6e6c\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -116, y: -67, name: \"size\") property(Number) size_6d5e2c\n\n        out(x: 110, y: 18, name: \"area\") property(Number) area_9d3c4d\n\n        instance(x: 3, y: -29) mul_7a8c9c root.Std_k98ojb.Math.Mul {}\n        instance(x: 103, y: 13) mul_6b8d4e root.Std_k98ojb.Math.Mul {}\n        6 -> mul_7a8c9c.first\n        size_6d5e2c -> mul_7a8c9c.second\n        mul_7a8c9c.result -> mul_6b8d4e.first\n        size_6d5e2c -> mul_6b8d4e.second\n        mul_6b8d4e.result -> area_9d3c4d\n    }\n\n    \n\n    instance(x: 103, y: 54) surface_area_7b6f0f root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -35, y: -26, name: \"list\") property(List) list_4c2a0f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_4f5e5c\n\n        instance(x: 188, y: 425) sub_5c8c1f root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"Max\") max_9c6f2f root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358, name: \"Min\") min_1d7c8c root.Std_k98ojb.List.Min {}\n        max_9c6f2f.items -> list_4c2a0f\n        min_1d7c8c.items -> list_4c2a0f\n        max_9c6f2f.max -> sub_5c8c1f.first\n        min_1d7c8c.min -> sub_5c8c1f.second\n        sub_5c8c1f.result -> difference_4f5e5c\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_5d9c8f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff {\n        in(x: -281, y: -193, name: \"list\") property(List) list_9c9d6f\n\n        out(x: 46, y: 158, name: \"difference\") property(Number) difference_1f9f4f\n\n        instance(x: -105, y: -110) max_node root.Std_k98ojb.List.Max {}\n        instance(x: -104, y: 114) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 116, y: -268) sub_7d1c8f root.Std_k98ojb.Math.Sub {}\n        list_9c9d6f -> max_node.items\n        list_9c9d6f -> min_node.items\n        max_node.max -> sub_7d1c8f.first\n        min_node.min -> sub_7d1c8f.second\n        sub_7d1c8f.result -> difference_1f9f4f\n    }\n\n    \n\n    instance(x: -174, y: -63) diff_6a8f2c root.main.diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -326, y: -230, name: \"list\") property(List) list_1c8d9d\n\n        out(x: 425, y: -224, name: \"diff\") property(Number) diff_3e2f2e\n\n        instance(x: -96, y: -304) max_3c3f0d root.Std_k98ojb.List.Max {}\n        instance(x: 240, y: -225) min_8d9f4e root.Std_k98ojb.List.Min {}\n        instance(x: 435, y: -225) sub_6e6f4c root.Std_k98ojb.Math.Sub {}\n        list_1c8d9d -> max_3c3f0d.items\n        list_1c8d9d -> min_8d9f4e.items\n        max_3c3f0d.max -> sub_6e6f4c.first\n        min_8d9f4e.min -> sub_6e6f4c.second\n        sub_6e6f4c.result -> diff_3e2f2e\n    }\n\n    \n\n    instance(x: 50, y: -30) diff_max_min_1f9f9c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -42, y: -23, name: \"list\") property(List) list_7d6b9f\n\n        out(x: 446, y: 40, name: \"difference\") property(Number) difference_7f2f1a\n\n        instance(x: -192, y: -13) max_5a3c6a root.Std_k98ojb.List.Max {}\n        instance(x: -192, y: -142) min_5a3c6a root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 39) sub_7d6b9f root.Std_k98ojb.Math.Sub {}\n        list_7d6b9f -> max_5a3c6a.items\n        list_7d6b9f -> min_5a3c6a.items\n        max_5a3c6a.max -> sub_7d6b9f.first\n        min_5a3c6a.min -> sub_7d6b9f.second\n        sub_7d6b9f.result -> difference_7f2f1a\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_15f9e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -297, y: -228, name: \"list\") property(List) list_1d7f0d\n\n        out(x: 447, y: -219, name: \"difference\") property(Number) difference_5a4c9e\n\n        instance(x: 0, y: -306) list_max_9d7c4f root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: -534) list_min_9f3d9f root.Std_k98ojb.List.Min {}\n        instance(x: 192, y: -423) sub_3b6f3f root.Std_k98ojb.Math.Sub {}\n        list_1d7f0d -> list_max_9d7c4f.items\n        list_1d7f0d -> list_min_9f3d9f.items\n        list_max_9d7c4f.max -> sub_3b6f3f.first\n        list_min_9f3d9f.min -> sub_3b6f3f.second\n        sub_3b6f3f.result -> difference_5a4c9e\n    }\n\n    \n\n    instance(x: 30, y: -37) diff_max_min_4e2d7f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -326, y: -236, name: \"list\") property(List) list_9e1b7a\n\n        out(x: 451, y: -225, name: \"difference\") property(Number) difference_9c1e5e\n\n        instance(x: -76, y: -304) max_7f4b9c root.Std_k98ojb.List.Max {}\n        instance(x: 192, y: -223) min_1d4c8f root.Std_k98ojb.List.Min {}\n        instance(x: 191, y: -60) sub_9c0e5f root.Std_k98ojb.Math.Sub {}\n        list_9e1b7a -> max_7f4b9c.items\n        list_9e1b7a -> min_1d4c8f.items\n        max_7f4b9c.max -> sub_9c0e5f.first\n        min_1d4c8f.min -> sub_9c0e5f.second\n        sub_9c0e5f.result -> difference_9c1e5e\n    }\n\n    \n\n    instance(x: 48, y: -29) diff_largest_smallest_7d6f9f root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -297, y: -21, name: \"list\") property(List) list_6f6b7e\n\n        out(x: 445, y: 26, name: \"difference\") property(Number) difference_3a3b4c\n\n        instance(x: -48, y: -16) max_3f3b4c root.Std_k98ojb.List.Max {}\n        instance(x: -48, y: 175) min_6f6b7e root.Std_k98ojb.List.Min {}\n        instance(x: 200, y: 26) sub_3a3b4c root.Std_k98ojb.Math.Sub {}\n        list_6f6b7e -> max_3f3b4c.items\n        list_6f6b7e -> min_6f6b7e.items\n        max_3f3b4c.max -> sub_3a3b4c.first\n        min_6f6b7e.min -> sub_3a3b4c.second\n        sub_3a3b4c.result -> difference_3a3b4c\n    }\n\n    \n\n    instance(x: 54, y: -3) diff_max_min_5f7b6e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_5f9d6d root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_4b4e2f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_5f9d6d.max -> sub_852f2e.first\n        min_4b4e2f.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_5f9d6d.items\n        list_0b075e -> min_4b4e2f.items\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_15f9e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff {\n        in(x: -35, y: -22, name: \"list\") property(List) list_5b3e3d\n\n        out(x: 438, y: 57, name: \"diff\") property(Number) diff_7b2b4d\n\n        instance(x: 166, y: 52) sub_1c4e7d root.Std_k98ojb.Math.Sub {}\n        instance(x: -67, y: -8) max_2a6f1e root.Std_k98ojb.List.Max {}\n        instance(x: -59, y: 139) min_5f1b9e root.Std_k98ojb.List.Min {}\n        list_5b3e3d -> max_2a6f1e.items\n        list_5b3e3d -> min_5f1b9e.items\n        max_2a6f1e.max -> sub_1c4e7d.first\n        min_5f1b9e.min -> sub_1c4e7d.second\n        sub_1c4e7d.result -> diff_7b2b4d\n    }\n\n    \n\n    instance(x: 43, y: -8) diff_2a0e6d root.main.diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -316, y: -18, name: \"list\") property(List) list_1f9c0d\n\n        out(x: 465, y: 35, name: \"diff\") property(Number) diff_1b6c96\n\n        instance(x: -83, y: -29) max_7a8c9c root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: 137) min_5c3f1c root.Std_k98ojb.List.Min {}\n        instance(x: 200, y: 35) sub_6f9b0d root.Std_k98ojb.Math.Sub {}\n        list_1f9c0d -> max_7a8c9c.items\n        list_1f9c0d -> min_5c3f1c.items\n        max_7a8c9c.max -> sub_6f9b0d.first\n        min_5c3f1c.min -> sub_6f9b0d.second\n        sub_6f9b0d.result -> diff_1b6c96\n    }\n\n    \n\n    instance(x: 44, y: -11) diff_max_min_1f8c4f root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -29, y: -28, name: \"n\") property(Number) n_4a7f9f\n\n        out(x: 548, y: 62, name: \"output\") property(Bool) output_3c8f5e\n\n        instance(x: 210, y: 61) modulo_4d6c8c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 438, y: 62) equal_5f2f0f root.Std_k98ojb.Logic.Equal {}\n        n_4a7f9f -> modulo_4d6c8c.value\n        2 -> modulo_4d6c8c.divisor\n        0 -> equal_5f2f0f.right\n        modulo_4d6c8c.result -> equal_5f2f0f.left\n        equal_5f2f0f.result -> output_3c8f5e\n    }\n\n    \n\n    instance(x: 36, y: -3) is_even_3e1d2e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -527, y: -214, name: \"input\") property(Number) input_1b5c2f\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7d5c5c\n\n        instance(x: -303, y: -205, name: \"modulo 2\") modulo_8f2b6c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 847, y: -207) equal_5e7f2e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        2 -> modulo_8f2b6c.divisor\n        input_1b5c2f -> modulo_8f2b6c.value\n        0 -> equal_5e7f2e.right\n        modulo_8f2b6c.result -> equal_5e7f2e.left\n        equal_5e7f2e.result -> not_75283f.input\n        not_75283f.result -> output_7d5c5c\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_6e3b1e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -30, y: -28, name: \"n\") property(Number) n_6d3f6e\n\n        out(x: 543, y: 63, name: \"output\") property(Bool) output_7d3e2f\n\n        instance(x: 187, y: 62) modulo_6a3b3f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 401, y: 62) equal_1b5b4e root.Std_k98ojb.Logic.Equal {}\n        equal_1b5b4e.result -> output_7d3e2f\n        2 -> modulo_6a3b3f.divisor\n        n_6d3f6e -> modulo_6a3b3f.value\n        0 -> equal_1b5b4e.right\n        modulo_6a3b3f.result -> equal_1b5b4e.left\n    }\n\n    \n\n    instance(x: 42, y: 7) is_even_7e5f49 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_5f6c7d\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_3b5c1c\n\n        instance(x: 202, y: 62) modulo_9d8c7a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 435, y: 64) equal_4c5e7d root.Std_k98ojb.Logic.Equal {}\n        n_5f6c7d -> modulo_9d8c7a.value\n        2 -> modulo_9d8c7a.divisor\n        modulo_9d8c7a.result -> equal_4c5e7d.left\n        0 -> equal_4c5e7d.right\n        equal_4c5e7d.result -> output_3b5c1c\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_8d7b5d root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -30, y: -26, name: \"input\") property(Number) input_6c6c1d\n        in(x: -294, y: 155, name: \"execute\") trigger() execute_8f5e0c\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_8d8b9c\n        out(x: 546, y: 205, name: \"continue\") trigger() continue_6f7b9f\n\n        instance(x: 201, y: 62) modulo_7e5d7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 207) equal_9f8d4c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 201, y: 354) or_6f4f3d root.Std_k98ojb.Logic.Or {}\n        instance(x: 201, y: 500) choose_3d3e4f root.Std_k98ojb.Std.Choose {}\n        instance(x: 201, y: 646) or_9a3b2e root.Std_k98ojb.Logic.Or {}\n        input_6c6c1d -> modulo_7e5d7f.value\n        2 -> modulo_7e5d7f.divisor\n        modulo_7e5d7f.result -> equal_9f8d4c.left\n        0 -> equal_9f8d4c.right\n        equal_9f8d4c.result -> or_6f4f3d.left\n        true -> or_6f4f3d.right\n        or_6f4f3d.result -> choose_3d3e4f.predicate\n        execute_8f5e0c -> choose_3d3e4f.execute\n        true -> choose_3d3e4f.then\n        false -> choose_3d3e4f.else\n        choose_3d3e4f.value -> or_9a3b2e.left\n        false -> or_9a3b2e.right\n        or_9a3b2e.result -> output_8d8b9c\n        choose_3d3e4f.value -> continue_6f7b9f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_6f6c4c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -28, y: -33, name: \"input\") property(Number) input_9f9e1f\n        in(x: -296, y: 157, name: \"execute\") trigger() execute_9e5e1e\n\n        out(x: 547, y: 65, name: \"output\") property(Bool) output_3e3c05\n        out(x: 690, y: 186, name: \"continue\") trigger() continue_9f5e2d\n\n        instance(x: 210, y: 61) modulo_4c5f1d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 440, y: 56) equal_2c8e5c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 665, y: 186) if_2e4f3a root.Std_k98ojb.Std.If {}\n        modulo_4c5f1d.result -> equal_2c8e5c.left\n        0 -> equal_2c8e5c.right\n        equal_2c8e5c.result -> if_2e4f3a.predicate\n        execute_9e5e1e -> if_2e4f3a.execute\n        if_2e4f3a.else -> continue_9f5e2d\n        if_2e4f3a.then -> continue_9f5e2d\n        input_9f9e1f -> modulo_4c5f1d.value\n        modulo_4c5f1d.divisor -> 2\n        if_2e4f3a.value -> output_3e3c05\n    }\n\n    \n\n    instance(x: 53, y: 12) is_even_8f6e1e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -529, y: 42, name: \"input\") property(Number) input_8e4e6f\n\n        out(x: 1269, y: 79, name: \"output\") property(Bool) output_5e9c3d\n\n        instance(x: 1078, y: 69) modulo_7d6b9d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1497, y: 80) equal_6d3e9c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1875, y: 79) not_6f7b1e root.Std_k98ojb.Logic.Not {}\n        input_8e4e6f -> modulo_7d6b9d.value\n        2 -> modulo_7d6b9d.divisor\n        modulo_7d6b9d.result -> equal_6d3e9c.left\n        0 -> equal_6d3e9c.right\n        equal_6d3e9c.result -> not_6f7b1e.input\n        not_6f7b1e.result -> output_5e9c3d\n    }\n\n    \n\n    instance(x: -67, y: -37) is_even_5c6e4c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -533, y: 2, name: \"input\") property(Number) input_3a8c7d\n\n        out(x: 1724, y: -10, name: \"output\") property(Bool) output_4f9d9e\n\n        instance(x: 1428, y: -309, name: \"modulo\") modulo_9c6f5f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1826, y: -187, name: \"equal\") equal_5f7b9c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 2134, y: -10, name: \"not\") not_1a4d2f root.Std_k98ojb.Logic.Not {}\n        input_3a8c7d -> modulo_9c6f5f.value\n        2 -> modulo_9c6f5f.divisor\n        modulo_9c6f5f.result -> equal_5f7b9c.left\n        0 -> equal_5f7b9c.right\n        equal_5f7b9c.result -> not_1a4d2f.input\n        not_1a4d2f.result -> output_4f9d9e\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_7b8d6d root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -57, y: -29, name: \"input\") property(Number) input_6e5c8f\n\n        out(x: 1118, y: -29, name: \"output\") property(Bool) output_7c3e3f\n\n        instance(x: 574, y: -29) modulo_3d3e1f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 854, y: -29) equal_7f1e0c root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_3d3e1f.divisor\n        input_6e5c8f -> modulo_3d3e1f.value\n        0 -> equal_7f1e0c.right\n        modulo_3d3e1f.result -> equal_7f1e0c.left\n        equal_7f1e0c.result -> output_7c3e3f\n    }\n\n    \n\n    instance(x: 32, y: -7) is_even_5e8b8c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -528, y: -214, name: \"input\") property(Number) input_6e6d5e\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_9d3c4d\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_32727d.handler\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_170471 -> modulo_c76d2b.value\n        } -> contains_32727d.items\n        not_75283f.result -> output_9d3c4d\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -275, y: 0, name: \"string\") property(String) string_9a2c0f\n\n        out(x: 595, y: -1, name: \"output\") property(Any) output_5f9c2f\n\n        instance(x: 0, y: 0) for_8f1d7c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) ``Finds the first repeated character in a given string_2c7c85`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) contains_7e8c8c root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) set_5a8d2c root.Std_k98ojb.Std.Set {}\n        for_8f1d7c.items -> string_9a2c0f\n        for_8f1d7c.trigger -> for_8f1d7c.reset\n        for_8f1d7c.onItem -> ``Finds the first repeated character in a given string_2c7c85``.items\n        for_8f1d7c.item -> contains_7e8c8c.input\n        for_8f1d7c.item -> set_5a8d2c.item\n        contains_7e8c8c.input -> contains_7e8c8c.contains\n        ``Finds the first repeated character in a given string_2c7c85``.predicate -> contains_7e8c8c.predicate\n        contains_7e8c8c.result -> ``Finds the first repeated character in a given string_2c7c85``.predicate\n        contains_7e8c8c.input -> set_5a8d2c.list\n        set_5a8d2c.item -> output_5f9c2f\n        ``Finds the first repeated character in a given string_2c7c85``.item -> output_5f9c2f\n        for_8f1d7c.done -> for_8f1d7c.next\n    }\n\n    \n\n    instance(x: -254, y: 1) first_repeated_char_0f2e0d root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: -2, name: \"string\") property(String) string_9e6f9c\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_9f9f1d\n\n        instance(x: 0, y: 0) find_2f2b4a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) characters_5a3c72 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) ``characters_5a3c72_1`` root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``characters_5a3c72_2`` root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_5f7c0f\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_7b1b2d\n\n            instance(x: 89, y: 29) contains_4f1c7f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_6b7e7d root.Std_k98ojb.Logic.NotEqual {}\n            characters_5a3c72.output -> contains_4f1c7f.input\n            char_5f7c0f -> contains_4f1c7f.contains\n            contains_4f1c7f.result -> notequal_6b7e7d.left\n            0 -> notequal_6b7e7d.right\n            notequal_6b7e7d.result -> bool_7b1b2d\n        } -> ``characters_5a3c72_1``.handler\n        characters_5a3c72.output -> ``characters_5a3c72_1``.items\n        ``characters_5a3c72_1``.output_list -> find_2f2b4a.items\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_8c4b2d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1e6c1e\n\n            instance(x: 89, y: 29) contains_1d9d9f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_1c1b71 root.Std_k98ojb.Logic.NotEqual {}\n            ``characters_5a3c72_1``.output_list -> contains_1d9d9f.input\n            char_8c4b2d -> contains_1d9d9f.contains\n            contains_1d9d9f.result -> notequal_1c1b71.left\n            0 -> notequal_1c1b71.right\n            notequal_1c1b71.result -> bool_1e6c1e\n        } -> ``characters_5a3c72_2``.predicate\n        ``characters_5a3c72_1``.output_list -> ``characters_5a3c72_2``.items\n        find_2f2b4a.item -> char_9f9f1d\n        string_9e6f9c -> characters_5a3c72.input\n    }\n\n    \n\n    instance(x: -286, y: -6) first_repeated_char_5e6b7e root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -271, y: -4, name: \"string\") property(String) string_1\n\n        out(x: 650, y: -5, name: \"char\") property(String) char_2\n\n        instance(x: 0, y: 0) find_5c8c6c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -119, y: 33, name: \"elem\") property(String) elem_2\n\n            out(x: 509, y: 42, name: \"bool\") property(Bool) bool_1\n\n            instance(x: 86, y: 28) contains_1e2eaa root.Std_k98ojb.Strings.Contains {}\n            instance(x: 314, y: 34) notequal_7b4b9e root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_7b4b9e.right\n            contains_1e2eaa.result -> notequal_7b4b9e.left\n            string_1 -> contains_1e2eaa.input\n            elem_2 -> contains_1e2eaa.contains\n            notequal_7b4b9e.result -> bool_1\n        } -> find_5c8c6c.predicate\n        instance(x: 0, y: 0) characters_8a5d8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) map_4b6c9f root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Any) item_1\n\n            out(x: 515, y: 44, name: \"output\") property(String) output_1\n\n            instance(x: 89, y: 29) substring_3b2c9d root.Std_k98ojb.Strings.Substring {}\n            0 -> substring_3b2c9d.start\n            1 -> substring_3b2c9d.end\n            item_1 -> substring_3b2c9d.input\n            substring_3b2c9d.substring -> output_1\n        } -> map_4b6c9f.handler\n        characters_8a5d8c.characters -> map_4b6c9f.items\n        map_4b6c9f.output_list -> find_5c8c6c.items\n        find_5c8c6c.item -> char_2\n        string_1 -> characters_8a5d8c.input\n    }\n\n    \n\n    instance(x: -294, y: -10) first_repeated_char_6c3d1f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -287, y: 1, name: \"string\") property(String) input_0\n\n        out(x: 527, y: -1, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 0) characters_4a5e8a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) find_5a7e4a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``find_5a7e4a_0`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) contains_2e7b8f root.Std_k98ojb.Strings.Contains {}\n        characters_4a5e8a.characters -> find_5a7e4a.items\n        func() {\n            in(x: -128, y: 34, name: \"elem\") property(String) elem_0\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_0\n\n            ``find_5a7e4a_0``.item -> contains_2e7b8f.input\n            elem_0 -> contains_2e7b8f.contains\n            contains_2e7b8f.result -> bool_0\n        } -> find_5a7e4a.predicate\n        characters_4a5e8a.characters -> ``find_5a7e4a_0``.items\n        find_5a7e4a.item -> result_0\n        input_0 -> characters_4a5e8a.input\n    }\n\n    \n\n    instance(x: 77, y: 48) FirstRepeatedChar_9c2f6c root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -269, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 590, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 0) find_5a0b6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) for_3b2c92 root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) contains_9f3c1c root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) set_2c4f4c root.Std_k98ojb.Std.Set {}\n        instance(x: 0, y: 0) ``char_0`` root.Std_k98ojb.Strings.Characters {}\n        func() {\n            in(x: -128, y: 34, name: \"current\") property(String) current_9e7a2e\n\n            out(x: 514, y: 44, name: \"bool\") property(Bool) bool_5e7e8d\n\n            current_9e7a2e -> contains_9f3c1c.input\n            set_2c4f4c.value -> contains_9f3c1c.contains\n            contains_9f3c1c.result -> bool_5e7e8d\n        } -> find_5a0b6f.predicate\n        ``char_0``.characters -> for_3b2c92.items\n        input_0 -> ``char_0``.input\n        for_3b2c92.onItem -> set_2c4f4c.execute\n        for_3b2c92.item -> set_2c4f4c.value\n        for_3b2c92.onItem -> find_5a0b6f.execute\n        find_5a0b6f.item -> result_0\n    }\n\n    \n\n    instance(x: 86, y: 52) FirstRepeatedChar_8d3a3e root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -273, y: 6, name: \"string\") property(String) input_1\n\n        out(x: 597, y: -1, name: \"output\") property(Any) output_1\n\n        instance(x: 0, y: 0) for_1a7b6f root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) characters_4e8f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) contains_7f2e4f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) first_7a1d2a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) orElse_1d8c4c root.Std_k98ojb.Std.OrElse {}\n        instance(x: 0, y: 0) notequal_6b7a4c root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 0, y: 0) toUpper_8f9b0c root.Std_k98ojb.Strings.ToUpper {}\n        instance(x: 0, y: 0) toLower_8f9b0c root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 0, y: 0) and_6f9c1d root.Std_k98ojb.Logic.And {}\n        instance(x: 0, y: 0) not_7a8c4d root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) or_7a8c4d root.Std_k98ojb.Logic.Or {}\n        instance(x: 0, y: 0) expression_8f9b0c root.Std_k98ojb.Math.Expression {}\n        characters_4e8f8c.input -> for_1a7b6f.items\n        input_1 -> characters_4e8f8c.input\n        for_1a7b6f.item -> contains_7f2e4f.handler\n        func() {\n            in(x: -128, y: 68, name: \"current\") property(Any) current_1\n\n            out(x: 502, y: 68, name: \"bool\") property(Bool) bool_1\n\n            instance(x: 0, y: 0) contains_7f2e4f_0 root.Std_k98ojb.List.Contains {}\n            instance(x: 0, y: 0) notequal_6b7a4c_0 root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: 0) orElse_1d8c4c_0 root.Std_k98ojb.Std.OrElse {}\n            instance(x: 0, y: 0) expression_8f9b0c_0 root.Std_k98ojb.Math.Expression {}\n            instance(x: 0, y: 0) or_7a8c4d_0 root.Std_k98ojb.Logic.Or {}\n            instance(x: 0, y: 0) not_7a8c4d_0 root.Std_k98ojb.Logic.Not {}\n            instance(x: 0, y: 0) and_6f9c1d_0 root.Std_k98ojb.Logic.And {}\n            contains_7f2e4f_0.list -> orElse_1d8c4c_0.first\n            for_1a7b6f.items -> contains_7f2e4f_0.list\n            current_1 -> orElse_1d8c4c_0.second\n            orElse_1d8c4c_0.value -> contains_7f2e4f_0.item\n            toUpper_8f9b0c.output -> expression_8f9b0c_0.gen_0\n            expression_8f9b0c_0.expression: \"current\"\n            expression_8f9b0c_0.result -> or_7a8c4d_0.left\n            toLower_8f9b0c.output -> expression_8f9b0c_0.gen_1\n            expression_8f9b0c_0.result -> or_7a8c4d_0.right\n            or_7a8c4d_0.result -> notequal_6b7a4c_0.left\n            current_1 -> notequal_6b7a4c_0.right\n            notequal_6b7a4c_0.result -> and_6f9c1d_0.left\n            not_7a8c4d_0.value -> and_6f9c1d_0.right\n            contains_7f2e4f_0.result -> not_7a8c4d_0.value\n            and_6f9c1d_0.result -> bool_1\n        } -> contains_7f2e4f.handler\n        for_1a7b6f.onItem -> contains_7f2e4f.execute\n        contains_7f2e4f.output_list -> first_7a1d2a.items\n        func() {\n            in(x: -128, y: 68, name: \"current\") property(Any) current_1\n\n            out(x: 502, y: 68, name: \"bool\") property(Bool) bool_1\n\n            instance(x: 0, y: 0) contains_7f2e4f_0 root.Std_k98ojb.List.Contains {}\n            instance(x: 0, y: 0) notequal_6b7a4c_0 root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: 0) orElse_1d8c4c_0 root.Std_k98ojb.Std.OrElse {}\n            instance(x: 0, y: 0) expression_8f9b0c_0 root.Std_k98ojb.Math.Expression {}\n            instance(x: 0, y: 0) or_7a8c4d_0 root.Std_k98ojb.Logic.Or {}\n            instance(x: 0, y: 0) not_7a8c4d_0 root.Std_k98ojb.Logic.Not {}\n            instance(x: 0, y: 0) and_6f9c1d_0 root.Std_k98ojb.Logic.And {}\n            contains_7f2e4f_0.list -> orElse_1d8c4c_0.first\n            for_1a7b6f.items -> contains_7f2e4f_0.list\n            current_1 -> orElse_1d8c4c_0.second\n            orElse_1d8c4c_0.value -> contains_7f2e4f_0.item\n            toUpper_8f9b0c.output -> expression_8f9b0c_0.gen_0\n            expression_8f9b0c_0.expression: \"current\"\n            expression_8f9b0c_0.result -> or_7a8c4d_0.left\n            toLower_8f9b0c.output -> expression_8f9b0c_0.gen_1\n            expression_8f9b0c_0.result -> or_7a8c4d_0.right\n            or_7a8c4d_0.result -> notequal_6b7a4c_0.left\n            current_1 -> notequal_6b7a4c_0.right\n            notequal_6b7a4c_0.result -> and_6f9c1d_0.left\n            not_7a8c4d_0.value -> and_6f9c1d_0.right\n            contains_7f2e4f_0.result -> not_7a8c4d_0.value\n            and_6f9c1d_0.result -> bool_1\n        } -> first_7a1d2a.predicate\n        first_7a1d2a.item -> output_1\n    }\n\n    \n\n    instance(x: -285, y: 4) first_repeated_char_7e8c4d root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 510, y: -1, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) characters_7a8d5a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 260, y: 0) find_2c8d8f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``Finds the first repeated character in a given string_0`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) contains_0f6b2f root.Std_k98ojb.Strings.Contains {}\n        characters_7a8d5a.characters -> find_2c8d8f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            contains_0f6b2f.input -> contains_0f6b2f.input\n            elem_9f6850 -> contains_0f6b2f.contains\n            find_2c8d8f.output -> contains_0f6b2f.input\n            contains_0f6b2f.result -> bool_af09a7\n        } -> find_2c8d8f.predicate\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            contains_0f6b2f.input -> contains_0f6b2f.input\n            elem_9f6850 -> contains_0f6b2f.contains\n            characters_7a8d5a.characters -> contains_0f6b2f.input\n            contains_0f6b2f.result -> bool_af09a7\n        } -> ``Finds the first repeated character in a given string_0``.predicate\n        characters_7a8d5a.characters -> ``Finds the first repeated character in a given string_0``.items\n        find_2c8d8f.item -> output_0\n        ``Finds the first repeated character in a given string_0``.item -> output_0\n        input_0 -> characters_7a8d5a.input\n    }\n\n    \n\n    instance(x: 75, y: 52) first_repeated_2d6a6d root.main.first_repeated {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -296, y: -12, name: \"string\") property(String) string_8c7b5a\n\n        out(x: 719, y: -17, name: \"character\") property(String) character_0\n\n        instance(x: 0, y: 0) find_4e1f6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``string_8c7b5a_0`` root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) ``string_8c7b5a_1`` root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``string_8c7b5a_2`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``string_8c7b5a_3`` root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``string_8c7b5a_4`` root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -110, y: 34, name: \"item\") property(String) item_8d3e7a\n\n            out(x: 519, y: 44, name: \"bool\") property(Bool) bool_1f8e5a\n\n            instance(x: 88, y: 29) ``string_8c7b5a_5`` root.Std_k98ojb.Iteration.Find {}\n            instance(x: 314, y: 35) ``string_8c7b5a_6`` root.Std_k98ojb.Iteration.Filter {}\n            instance(x: 311, y: 35) ``string_8c7b5a_7`` root.Std_k98ojb.Iteration.Find {}\n            instance(x: 312, y: 35) ``string_8c7b5a_8`` root.Std_k98ojb.Iteration.Filter {}\n            ``string_8c7b5a_5``.items -> ``string_8c7b5a_6``.items\n            item_8d3e7a -> ``string_8c7b5a_6``.handler\n            ``string_8c7b5a_6``.output_list -> ``string_8c7b5a_5``.items\n            ``string_8c7b5a_5``.item -> ``string_8c7b5a_7``.items\n            item_8d3e7a -> ``string_8c7b5a_7``.handler\n            ``string_8c7b5a_7``.output_list -> ``string_8c7b5a_8``.items\n            ``string_8c7b5a_8``.output_list -> ``string_8c7b5a_5``.items\n            ``string_8c7b5a_5``.item -> bool_1f8e5a\n        } -> find_4e1f6f.predicate\n        ``string_8c7b5a_0``.characters -> ``string_8c7b5a_1``.items\n        func() {\n            in(x: -110, y: 34, name: \"item\") property(String) item_8d3e7a\n\n            out(x: 519, y: 44, name: \"bool\") property(Bool) bool_9b7e6b\n\n            instance(x: 88, y: 29) ``string_8c7b5a_9`` root.Std_k98ojb.Iteration.Find {}\n            instance(x: 312, y: 35) ``string_8c7b5a_10`` root.Std_k98ojb.Iteration.Filter {}\n            ``string_8c7b5a_9``.items -> ``string_8c7b5a_10``.items\n            item_8d3e7a -> ``string_8c7b5a_10``.handler\n            ``string_8c7b5a_10``.output_list -> ``string_8c7b5a_9``.items\n            ``string_8c7b5a_9``.item -> bool_9b7e6b\n        } -> ``string_8c7b5a_1``.handler\n        ``string_8c7b5a_1``.output_list -> find_4e1f6f.items\n        ``string_8c7b5a_2``.items -> ``string_8c7b5a_3``.items\n        func() {\n            in(x: -110, y: 34, name: \"item\") property(String) item_8d3e7a\n\n            out(x: 519, y: 44, name: \"bool\") property(Bool) bool_9b7e6b\n\n            instance(x: 88, y: 29) ``string_8c7b5a_11`` root.Std_k98ojb.Iteration.Find {}\n            instance(x: 312, y: 35) ``string_8c7b5a_12`` root.Std_k98ojb.Iteration.Filter {}\n            ``string_8c7b5a_11``.items -> ``string_8c7b5a_12``.items\n            item_8d3e7a -> ``string_8c7b5a_12``.handler\n            ``string_8c7b5a_12``.output_list -> ``string_8c7b5a_11``.items\n            ``string_8c7b5a_11``.item -> bool_9b7e6b\n        } -> ``string_8c7b5a_3``.handler\n        ``string_8c7b5a_3``.output_list -> ``string_8c7b5a_2``.items\n        ``string_8c7b5a_4``.items -> ``string_8c7b5a_2``.items\n        func() {\n            in(x: -110, y: 34, name: \"item\") property(String) item_8d3e7a\n\n            out(x: 519, y: 44, name: \"bool\") property(Bool) bool_9b7e6b\n\n            instance(x: 88, y: 29) ``string_8c7b5a_13`` root.Std_k98ojb.Iteration.Find {}\n            instance(x: 312, y: 35) ``string_8c7b5a_14`` root.Std_k98ojb.Iteration.Filter {}\n            ``string_8c7b5a_13``.items -> ``string_8c7b5a_14``.items\n            item_8d3e7a -> ``string_8c7b5a_14``.handler\n            ``string_8c7b5a_14``.output_list -> ``string_8c7b5a_13``.items\n            ``string_8c7b5a_13``.item -> bool_9b7e6b\n        } -> ``string_8c7b5a_4``.handler\n        string_8c7b5a -> ``string_8c7b5a_0``.input\n        find_4e1f6f.item -> character_0\n    }\n\n    \n\n    instance(x: -294, y: -13) first_repeated_7b9f3f root.main.first_repeated {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -298, y: 3, name: \"string\") property(String) input_0\n\n        out(x: 605, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) find_1d8d9e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) characters_5b3f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) map_2c3b4e root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) filter_2e5c9e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) contains_7f6f8d root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) getat_5a3b8d root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) add_5b3c8e root.Std_k98ojb.List.Add {}\n        instance(x: 0, y: 0) length_3d4b8c root.Std_k98ojb.List.Length {}\n        instance(x: 0, y: 0) ``first item_0d4b8c`` root.Std_k98ojb.List.FirstItem {}\n        input_0 -> characters_5b3f8c.input\n        characters_5b3f8c.characters -> map_2c3b4e.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"output\") property(List) output_1a3b9c\n\n            instance(x: 89, y: 29) ``get at_0d4b8c`` root.Std_k98ojb.List.GetAt {}\n            instance(x: 310, y: 35) add_3b4d8c root.Std_k98ojb.List.Add {}\n            ``get at_0d4b8c``.list -> add_3b4d8c.list\n            ``get at_0d4b8c``.index -> add_3b4d8c.index\n            elem_9f6850 -> ``get at_0d4b8c``.item\n            0 -> ``get at_0d4b8c``.index\n            add_3b4d8c.listWithItem -> output_1a3b9c\n        } -> map_2c3b4e.handler\n        map_2c3b4e.output_list -> filter_2e5c9e.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(List) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 89, y: 29) ``length_0d4b8c`` root.Std_k98ojb.List.Length {}\n            instance(x: 310, y: 35) ``get at_0d4b8c`` root.Std_k98ojb.List.GetAt {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            ``length_0d4b8c``.length -> ``get at_0d4b8c``.index\n            1 -> ``get at_0d4b8c``.index\n            elem_9f6850 -> ``length_0d4b8c``.list\n            ``get at_0d4b8c``.item -> contains_7f6f8d.item\n            map_2c3b4e.output_list -> contains_7f6f8d.list\n            notequal_148aeb.right -> contains_7f6f8d.result\n            contains_7f6f8d.result -> notequal_148aeb.left\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> filter_2e5c9e.handler\n        filter_2e5c9e.output_list -> find_1d8d9e.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(List) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 89, y: 29) ``get at_0d4b8c`` root.Std_k98ojb.List.GetAt {}\n            instance(x: 310, y: 35) ``length_0d4b8c`` root.Std_k98ojb.List.Length {}\n            ``get at_0d4b8c``.list -> ``length_0d4b8c``.list\n            ``get at_0d4b8c``.index -> ``length_0d4b8c``.index\n            1 -> ``get at_0d4b8c``.index\n            ``length_0d4b8c``.length -> ``get at_0d4b8c``.index\n            0 -> ``get at_0d4b8c``.index\n            ``get at_0d4b8c``.item -> bool_1eb6e9\n        } -> find_1d8d9e.predicate\n        find_1d8d9e.item -> ``first item_0d4b8c``\n        ``first item_0d4b8c``.item -> output_0\n    }\n\n    \n\n    instance(x: -298, y: 3) first_repeated_1d8d9e root.main.first_repeated {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -268, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 500, y: -1, name: \"char\") property(String) char_2\n\n        instance(x: 0, y: 0) characters_3f5f6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 250, y: 0) find_1a3e7f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 1) find_1a3e7f_1 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 2) ``find_1a3e7f_1_1`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 3) ``find_1a3e7f_1_2`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 4) ``find_1a3e7f_1_3`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 5) ``find_1a3e7f_1_4`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 6) ``find_1a3e7f_1_5`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 7) ``find_1a3e7f_1_6`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 8) ``find_1a3e7f_1_7`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 9) ``find_1a3e7f_1_8`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 10) ``find_1a3e7f_1_9`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 11) ``find_1a3e7f_1_10`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 12) ``find_1a3e7f_1_11`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 13) ``find_1a3e7f_1_12`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 14) ``find_1a3e7f_1_13`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 15) ``find_1a3e7f_1_14`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 16) ``find_1a3e7f_1_15`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 17) ``find_1a3e7f_1_16`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 18) ``find_1a3e7f_1_17`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 19) ``find_1a3e7f_1_18`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 20) ``find_1a3e7f_1_19`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 21) ``find_1a3e7f_1_20`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 22) ``find_1a3e7f_1_21`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 23) ``find_1a3e7f_1_22`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 24) ``find_1a3e7f_1_23`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 25) ``find_1a3e7f_1_24`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 26) ``find_1a3e7f_1_25`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 27) ``find_1a3e7f_1_26`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 28) ``find_1a3e7f_1_27`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 29) ``find_1a3e7f_1_28`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 30) ``find_1a3e7f_1_29`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 31) ``find_1a3e7f_1_30`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 32) ``find_1a3e7f_1_31`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 33) ``find_1a3e7f_1_32`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 34) ``find_1a3e7f_1_33`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 35) ``find_1a3e7f_1_34`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 36) ``find_1a3e7f_1_35`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 37) ``find_1a3e7f_1_36`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 38) ``find_1a3e7f_1_37`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 39) ``find_1a3e7f_1_38`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 40) ``find_1a3e7f_1_39`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 41) ``find_1a3e7f_1_40`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 42) ``find_1a3e7f_1_41`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 43) ``find_1a3e7f_1_42`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 44) ``find_1a3e7f_1_43`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 45) ``find_1a3e7f_1_44`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 46) ``find_1a3e7f_1_45`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 47) ``find_1a3e7f_1_46`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 48) ``find_1a3e7f_1_47`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 49) ``find_1a3e7f_1_48`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 50) ``find_1a3e7f_1_49`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 51) ``find_1a3e7f_1_50`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 52) ``find_1a3e7"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -285, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) min_1b6f2e root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) remove_5c8b3d root.Std_k98ojb.List.Remove {}\n        instance(x: 0, y: 0) min_6c8c5c root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_1b6f2e.items\n        min_1b6f2e.min -> remove_5c8b3d.index\n        list_abed4a -> remove_5c8b3d.list\n        remove_5c8b3d.listWithoutItem -> min_6c8c5c.items\n        min_6c8c5c.min -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_1a7f6c root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -903, y: -379, name: \"items\") property(List) items_ai\n\n        out(x: -78, y: -306, name: \"min\") property(Number) min_7b1f8a\n\n        data_instance(x: -609, y: -363) data_9a9c70  = [items]\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        data_9a9c70 -> min_c3e343.items\n        min_c3e343.min -> min_7b1f8a\n        instance(x: -341, y: -301) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        data_9a9c70 -> min_c3e343_2.items\n        instance(x: -341, y: -301) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it > min\"\n        }\n        data_9a9c70 -> filter_7b3b7b.list\n        min_7b1f8a -> filter_7b3b7b.gen_0\n        filter_7b3b7b.result -> min_c3e343_2.items\n        min_c3e343_2.min -> min_7b1f8a\n    }\n    \n\n    instance(x: 322, y: 568) second_smallest_2e9c3f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: -197, name: \"items\") property(List) items_ai\n        out(x: 160, y: -220, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -439) list_min_node_1 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -575) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.index\n        list_min_node.min -> list_min_node_1.items\n        list_remove_node.listWithoutItem -> list_min_node_1.items\n        list_min_node_1.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -301, y: -198, name: \"items\") property(List) items_9e7c1e\n\n        out(x: 161, y: -207, name: \"second_smallest\") property(Number) second_smallest_1b7b7c\n\n        instance(x: -5, y: -299) min_7b8b5c root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) filter_3b1e7b root.Std_k98ojb.Query.Filter {\n            where: \"it != min\"\n        }\n        instance(x: 300, y: -299) min_6e6c9c root.Std_k98ojb.List.Min {}\n        items_9e7c1e -> min_7b8b5c.items\n        min_7b8b5c.min -> filter_3b1e7b.where.gen_0\n        items_9e7c1e -> filter_3b1e7b.list\n        filter_3b1e7b.result -> min_6e6c9c.items\n        min_6e6c9c.min -> second_smallest_1b7b7c\n    }\n\n    \n\n    instance(x: 0, y: 0) second_smallest_2c9a2f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -285, y: -0, name: \"items\") property(List) items_2c8c7d\n\n        out(x: 590, y: -1, name: \"min\") property(Number) min_5e5c1e\n\n        instance(x: 0, y: 0) find_7f6d9d root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -111, y: 34, name: \"elem\") property(Number) elem_2a8c6f\n\n            out(x: 514, y: 44, name: \"bool\") property(Bool) bool_6f5c1d\n\n            instance(x: 89, y: 29) min_3f9e4c root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_9c3e1d root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: 0) min_9d9c6d root.Std_k98ojb.Math.Min {}\n            instance(x: 89, y: 29) min_7f5e9c root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_7e9c1d root.Std_k98ojb.Logic.NotEqual {}\n            find_7f6d9d.item -> min_3f9e4c.right\n            elem_2a8c6f -> min_3f9e4c.left\n            min_3f9e4c.result -> min_9d9c6d.right\n            elem_2a8c6f -> min_9d9c6d.left\n            min_9d9c6d.result -> min_7f5e9c.right\n            elem_2a8c6f -> min_7f5e9c.left\n            min_7f5e9c.result -> notequal_7e9c1d.right\n            find_7f6d9d.item -> notequal_7e9c1d.left\n            notequal_7e9c1d.result -> notequal_9c3e1d.left\n            0 -> notequal_9c3e1d.right\n            notequal_9c3e1d.result -> bool_6f5c1d\n        } -> find_7f6d9d.predicate\n        items_2c8c7d -> find_7f6d9d.items\n        find_7f6d9d.item -> min_5e5c1e\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_3c8d7f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -285, y: -0, name: \"list\") property(List) list_5e6f9e\n\n        out(x: 591, y: -1, name: \"second smallest\") property(Number) second_smallest_4e7c3f\n\n        instance(x: 0, y: 0) find_9a7c93 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_4a6c4c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5e9a8e\n\n            instance(x: 89, y: 29) min_7c8a2a root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_2b3b8a root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: 0) find_2a7b8b root.Std_k98ojb.Iteration.Find {}\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_7b6c4f\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_8e9a8f\n\n                instance(x: 89, y: 29) min_6c8a2b root.Std_k98ojb.Math.Min {}\n                instance(x: 310, y: 35) notequal_3b3b8b root.Std_k98ojb.Logic.NotEqual {}\n                min_7c8a2a.result -> notequal_3b3b8b.left\n                elem_7b6c4f -> notequal_3b3b8b.right\n                notequal_3b3b8b.result -> bool_8e9a8f\n                list_5e6f9e -> find_2a7b8b.items\n                find_2a7b8b.item -> min_6c8a2b.right\n                elem_7b6c4f -> min_6c8a2b.left\n                find_2a7b8b.predicate = bool_8e9a8f\n            } -> find_9a7c93.predicate\n            min_7c8a2a.left -> find_2a7b8b.predicate\n            find_2a7b8b.item -> min_7c8a2a.right\n            elem_4a6c4c -> min_7c8a2a.left\n            list_5e6f9e -> find_9a7c93.items\n            find_9a7c93.item -> second_smallest_4e7c3f\n            notequal_2b3b8a.result -> bool_5e9a8e\n            find_2a7b8b.item -> notequal_2b3b8a.right\n            min_7c8a2a.result -> notequal_2b3b8a.left\n            find_9a7c93.predicate = bool_5e9a8e\n        }\n    }\n    \n\n    instance(x: -32, y: 124) second_smallest_1a6c93 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) min_5a7f0f root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) remove_7a7d2e root.Std_k98ojb.List.Remove {}\n        instance(x: 0, y: 0) min_7f7c7c root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_5a7f0f.items\n        min_5a7f0f.min -> remove_7a7d2e.index\n        list_abed4a -> remove_7a7d2e.list\n        remove_7a7d2e.listWithoutItem -> min_7f7c7c.items\n        min_7f7c7c.min -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -285, y: -188, name: \"items\") property(List) items_9e7c5e\n\n        out(x: 46, y: -216, name: \"min\") property(Number) min_4c4b9e\n\n        instance(x: -103, y: -114) getat_1f7c0e root.Std_k98ojb.List.GetAt {}\n        instance(x: -103, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node2 root.Std_k98ojb.List.Min {}\n        instance(x: -103, y: -493) list_remove_node root.Std_k98ojb.List.Remove {}\n        instance(x: -103, y: -684) list_min_node3 root.Std_k98ojb.List.Min {}\n        items_9e7c5e -> list_min_node.items\n        list_min_node.min -> getat_1f7c0e.index\n        0 -> getat_1f7c0e.index\n        items_9e7c5e -> list_remove_node.list\n        getat_1f7c0e.itemAtIndex -> list_remove_node.index\n        list_remove_node.listWithoutItem -> list_min_node2.items\n        list_min_node2.min -> min_4c5c7e\n    }\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -279, y: -199, name: \"items\") property(List) items_5b7e3d\n\n        out(x: 59, y: -220, name: \"min\") property(Number) min_7f2b4d\n\n        instance(x: -106, y: -106) remove_1c4a7d root.Std_k98ojb.List.Remove {}\n        instance(x: -106, y: -206) min_2c7f1e root.Std_k98ojb.List.Min {}\n        instance(x: -106, y: -306) min_5f6b9e root.Std_k98ojb.List.Min {}\n        items_5b7e3d -> min_2c7f1e.items\n        min_2c7f1e.min -> remove_1c4a7d.index\n        items_5b7e3d -> remove_1c4a7d.list\n        remove_1c4a7d.listWithoutItem -> min_5f6b9e.items\n        min_5f6b9e.min -> min_7f2b4d\n    }\n\n    \n\n    instance(x: -174, y: -63) second_smallest_9b7d3e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -279, y: -179, name: \"list\") property(List) list_ae8d5e\n\n        out(x: 56, y: -189, name: \"second smallest\") property(Number) second_smallest_1b2c3d\n\n        instance(x: -109, y: -111) min_1a2b3c root.Std_k98ojb.List.Min {}\n        instance(x: -103, y: -44) getat_4d5e6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) remove_7g8h9i root.Std_k98ojb.List.Remove {}\n        instance(x: 0, y: 0) min_2a3b4c root.Std_k98ojb.List.Min {}\n        list_ae8d5e -> min_1a2b3c.items\n        min_1a2b3c.min -> getat_4d5e6f.index\n        list_ae8d5e -> getat_4d5e6f.list\n        getat_4d5e6f.itemAtIndex -> remove_7g8h9i.index\n        list_ae8d5e -> remove_7g8h9i.list\n        remove_7g8h9i.listWithoutItem -> min_2a3b4c.items\n        min_2a3b4c.min -> second_smallest_1b2c3d\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_3c4d5e root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_RAG_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15910,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -398, y: -194, name: \"list1\") property(List) list1_8b8d0e\n        in(x: -416, y: 34, name: \"list2\") property(List) list2_9b4b9f\n\n        out(x: 1158, y: 39, name: \"output\") property(Bool) output_7f1b6d\n\n        instance(x: 768, y: 85) intersection_1b6c85 root.Std_k98ojb.Sets.Intersection {}\n        list1_8b8d0e -> intersection_1b6c85.left\n        list2_9b4b9f -> intersection_1b6c85.right\n        instance(x: 1037, y: 78) notempty_5c3eac root.Std_k98ojb.List.NotEmpty {}\n        intersection_1b6c85.intersect -> notempty_5c3eac.list\n        notempty_5c3eac.isEmpty -> output_7f1b6d\n    }\n\n    \n\n    instance(x: -316, y: -20) has_common_3f8d6f root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -476, y: -239, name: \"list1\") property(List) list1_4c1e9d\n        in(x: -473, y: 33, name: \"list2\") property(List) list2_8d9d85\n\n        out(x: 1255, y: 4, name: \"output\") property(Bool) output_1c6f0d\n\n        instance(x: 757, y: 96) ifexpression_1a5f3f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous || current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_8e5d8c\") getter_8e5d8c = previous\n        setter(x: 679, y: -313, name: \"setter_7c9f7f\") setter_7c9f7f = previous\n        instance(x: 321, y: -20) for_4b3b4e root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7c9f7f\") setter_8d9f1f = previous\n        instance(x: -275, y: -35) contains_6d4f0e root.Std_k98ojb.List.Contains {}\n        ifexpression_1a5f3f.else -> output_1c6f0d\n        ifexpression_1a5f3f.value -> output_1c6f0d\n        ifexpression_1a5f3f.then -> setter_7c9f7f.execute\n        list1_4c1e9d -> for_4b3b4e.items\n        for_4b3b4e.item -> ifexpression_1a5f3f.gen_2\n        for_4b3b4e.index -> ifexpression_1a5f3f.gen_0\n        getter_8e5d8c.value -> ifexpression_1a5f3f.gen_1\n        for_4b3b4e.onItem -> ifexpression_1a5f3f.execute\n        for_4b3b4e.done -> output_1c6f0d\n        for_4b3b4e.item -> setter_7c9f7f.new_value\n        list2_8d9d85 -> contains_6d4f0e.list\n        for_4b3b4e.item -> contains_6d4f0e.item\n        contains_6d4f0e.is_contained -> ifexpression_1a5f3f.gen_3\n        setter_8d9f1f.new_value -> setter_7c9f7f.new_value\n        setter_8d9f1f.continue -> for_4b3b4e.reset\n        setter_7c9f7f.continue -> for_4b3b4e.next\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_6a4d5f root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if two lists have at least one common element.\") common_element {\n        in(x: -451, y: -226, name: \"list1\") property(List) list1_8e3e9c\n        in(x: -445, y: 26, name: \"list2\") property(List) list2_8b1c4d\n\n        out(x: 1265, y: 1, name: \"output\") property(Bool) output_4b8f9d\n\n        instance(x: 1024, y: 72) intersection_9e4c6c root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1069, y: -207) not_9e7d0c root.Std_k98ojb.Logic.Not {}\n        list1_8e3e9c -> intersection_9e4c6c.left\n        list2_8b1c4d -> intersection_9e4c6c.right\n        intersection_9e4c6c.intersect -> not_9e7d0c.input\n        not_9e7d0c.result -> output_4b8f9d\n    }\n\n    \n\n    instance(x: -391, y: -16) common_element_5e1b8c root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -349, y: -208, name: \"list1\") property(List) list1_4f9c0d\n        in(x: -367, y: -21, name: \"list2\") property(List) list2_3f2c8d\n\n        out(x: 1148, y: -204, name: \"output\") property(Bool) output_9a5c8f\n\n        instance(x: -117, y: -206, name: \"intersection\") intersection_1b4c7e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1057, y: -207) notempty_5d9d7e root.Std_k98ojb.List.NotEmpty {}\n        list1_4f9c0d -> intersection_1b4c7e.left\n        list2_3f2c8d -> intersection_1b4c7e.right\n        intersection_1b4c7e.intersect -> notempty_5d9d7e.list\n        notempty_5d9d7e.isEmpty -> output_9a5c8f\n    }\n\n    \n\n    instance(x: -222, y: -1) common_element_7b8a4c root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -290, y: -151, name: \"list1\") property(List) list1_7d9d9f\n        in(x: -304, y: 21, name: \"list2\") property(List) list2_7d7d6e\n\n        out(x: 1183, y: 3, name: \"output\") property(Bool) output_9e6d3c\n\n        instance(x: 723, y: 92) ifexpression_5e9b6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == true\"\n        }\n        getter(x: 303, y: 169, name: \"getter_7e4f4d\") getter_7e4f4d = previous\n        setter(x: 649, y: -309, name: \"setter_3f8e5f\") setter_3f8e5f = previous\n        instance(x: 327, y: -18) for_9d5b3e root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -120, name: \"setter_3f8e5f\") setter_6e8f3d = previous\n        instance(x: -285, y: -35) contains_3b8d73 root.Std_k98ojb.List.Contains {}\n        ifexpression_5e9b6f.else -> output_9e6d3c\n        ifexpression_5e9b6f.value -> output_9e6d3c\n        ifexpression_5e9b6f.then -> setter_3f8e5f.execute\n        list1_7d9d9f -> for_9d5b3e.items\n        for_9d5b3e.item -> ifexpression_5e9b6f.gen_2\n        for_9d5b3e.index -> ifexpression_5e9b6f.gen_0\n        getter_7e4f4d.value -> ifexpression_5e9b6f.gen_1\n        for_9d5b3e.onItem -> ifexpression_5e9b6f.execute\n        for_9d5b3e.done -> output_9e6d3c\n        for_9d5b3e.item -> setter_3f8e5f.new_value\n        list2_7d7d6e -> contains_3b8d73.list\n        for_9d5b3e.item -> contains_3b8d73.item\n        contains_3b8d73.is_contained -> setter_6e8f3d.new_value\n        setter_6e8f3d.continue -> for_9d5b3e.reset\n        setter_3f8e5f.continue -> for_9d5b3e.next\n    }\n\n    \n\n    instance(x: 11, y: -176) common_element_6f7c6d root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -464, y: -208, name: \"list1\") property(List) list1_1b1c5e\n        in(x: -473, y: 40, name: \"list2\") property(List) list2_6c1f1c\n\n        out(x: 1226, y: 43, name: \"output\") property(Bool) output_8d7e2d\n\n        instance(x: 761, y: 82) ifexpression_8a5e5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == false\"\n        }\n        getter(x: 333, y: 158, name: \"getter_9f1d7f\") getter_9f1d7f = previous\n        setter(x: 679, y: -316, name: \"setter_5c4e3c\") setter_5c4e3c = previous\n        instance(x: 323, y: -27) for_8d8b3e root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -127, name: \"setter_5c4e3c\") setter_6e6c9e = previous\n        instance(x: -274, y: -42) contains_1c2d3f root.Std_k98ojb.List.Contains {}\n        ifexpression_8a5e5a.else -> output_8d7e2d\n        ifexpression_8a5e5a.value -> output_8d7e2d\n        ifexpression_8a5e5a.then -> setter_5c4e3c.execute\n        list1_1b1c5e -> for_8d8b3e.items\n        for_8d8b3e.item -> ifexpression_8a5e5a.gen_2\n        for_8d8b3e.index -> ifexpression_8a5e5a.gen_0\n        getter_9f1d7f.value -> ifexpression_8a5e5a.gen_1\n        for_8d8b3e.onItem -> ifexpression_8a5e5a.execute\n        for_8d8b3e.done -> output_8d7e2d\n        for_8d8b3e.item -> setter_5c4e3c.new_value\n        list2_6c1f1c -> contains_1c2d3f.list\n        for_8d8b3e.item -> contains_1c2d3f.item\n        contains_1c2d3f.is_contained -> ifexpression_8a5e5a.gen_3\n        setter_6e6c9e.new_value -> contains_1c2d3f.item\n        setter_6e6c9e.continue -> for_8d8b3e.reset\n        setter_5c4e3c.continue -> for_8d8b3e.next\n    }\n\n    \n\n    instance(x: 11, y: -177) common_element_1e8f1f root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -369, y: -217, name: \"list1\") property(List) list1_6c1c2f\n        in(x: -378, y: 25, name: \"list2\") property(List) list2_1f8a6e\n\n        out(x: 1188, y: 22, name: \"output\") property(Bool) output_5f8f9e\n\n        instance(x: 1033, y: 70) intersection_4c2c8c root.Std_k98ojb.Sets.Intersection {}\n        list1_6c1c2f -> intersection_4c2c8c.left\n        list2_1f8a6e -> intersection_4c2c8c.right\n        instance(x: 1011, y: -186) notempty_8d8c2c root.Std_k98ojb.List.NotEmpty {}\n        intersection_4c2c8c.intersect -> notempty_8d8c2c.list\n        notempty_8d8c2c.isEmpty -> output_5f8f9e\n    }\n\n    \n\n    instance(x: -333, y: -5) common_element_9a2f7c root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if two lists have at least one common element.\") has_common_element {\n        in(x: -325, y: -167, name: \"list1\") property(List) list1_5e7d61\n        in(x: -334, y: 55, name: \"list2\") property(List) list2_8c5d50\n\n        out(x: 1179, y: 35, name: \"output\") property(Bool) output_9c8c5d\n\n        instance(x: 719, y: 68) ifexpression_7e3e78 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous || current\"\n        }\n        getter(x: 301, y: 192, name: \"getter_5e1e0c\") getter_5e1e0c = previous\n        setter(x: 649, y: -49, name: \"setter_4a3f9c\") setter_4a3f9c = previous\n        instance(x: 315, y: -54) for_7f5b6e root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -159, name: \"setter_4a3f9c\") setter_a3b3d7 = previous\n        instance(x: -289, y: -69) contains_8f8c9c root.Std_k98ojb.List.Contains {}\n        ifexpression_7e3e78.else -> setter_4a3f9c.execute\n        ifexpression_7e3e78.value -> output_9c8c5d\n        ifexpression_7e3e78.then -> setter_a3b3d7.execute\n        list1_5e7d61 -> for_7f5b6e.items\n        for_7f5b6e.item -> ifexpression_7e3e78.gen_2\n        for_7f5b6e.index -> ifexpression_7e3e78.gen_0\n        getter_5e1e0c.value -> ifexpression_7e3e78.gen_1\n        for_7f5b6e.onItem -> ifexpression_7e3e78.execute\n        for_7f5b6e.done -> setter_4a3f9c.continue\n        for_7f5b6e.item -> setter_a3b3d7.new_value\n        list2_8c5d50 -> contains_8f8c9c.list\n        for_7f5b6e.item -> contains_8f8c9c.item\n        contains_8f8c9c.is_contained -> ifexpression_7e3e78.gen_3\n        setter_a3b3d7.continue -> for_7f5b6e.next\n    }\n\n    \n\n    instance(x: 27, y: -137) has_common_element_6b6e8f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if two lists have at least one common element.\") common_element {\n        in(x: -427, y: -222, name: \"list1\") property(List) list1_9c0b5c\n        in(x: -431, y: -19, name: \"list2\") property(List) list2_8c8c5d\n\n        out(x: 1216, y: -209, name: \"output\") property(Bool) output_5b5c8d\n\n        instance(x: -186, y: -211, name: \"intersection\") intersection_4b9c2e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1052, y: -208) notempty_6d6e81 root.Std_k98ojb.List.NotEmpty {}\n        list1_9c0b5c -> intersection_4b9c2e.left\n        list2_8c8c5d -> intersection_4b9c2e.right\n        intersection_4b9c2e.intersect -> notempty_6d6e81.list\n        notempty_6d6e81.isEmpty -> output_5b5c8d\n    }\n\n    \n\n    instance(x: -298, y: -15) common_element_4f8f5f root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Returns true if the two lists have at least one common element.\") common_element {\n        in(x: -493, y: -239, name: \"list1\") property(List) list1_9b6b0f\n        in(x: -494, y: 36, name: \"list2\") property(List) list2_4b6b6e\n\n        out(x: 1247, y: 9, name: \"output\") property(Bool) output_9c8a1f\n\n        instance(x: 1024, y: 86) contains_3e8d3e root.Std_k98ojb.List.Contains {}\n        instance(x: 744, y: 38) ifexpression_5a4e5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous || current\"\n        }\n        getter(x: 336, y: 160, name: \"getter_9d6c8f\") getter_9d6c8f = previous\n        setter(x: 682, y: -317, name: \"setter_8c9c4c\") setter_8c9c4c = previous\n        instance(x: 315, y: -23) for_1a5d2d root.Std_k98ojb.Std.For {}\n        setter(x: -1, y: -125, name: \"setter_8c9c4c\") setter_4e4d8d = previous\n        instance(x: -274, y: -41) getat_7f3b1e root.Std_k98ojb.List.GetAt {}\n        ifexpression_5a4e5f.else -> output_9c8a1f\n        ifexpression_5a4e5f.value -> output_9c8a1f\n        ifexpression_5a4e5f.then -> setter_8c9c4c.execute\n        list1_9b6b0f -> for_1a5d2d.items\n        for_1a5d2d.item -> ifexpression_5a4e5f.gen_2\n        for_1a5d2d.index -> ifexpression_5a4e5f.gen_0\n        getter_9d6c8f.value -> ifexpression_5a4e5f.gen_1\n        for_1a5d2d.onItem -> ifexpression_5a4e5f.execute\n        for_1a5d2d.done -> output_9c8a1f\n        for_1a5d2d.item -> setter_8c9c4c.new_value\n        list1_9b6b0f -> getat_7f3b1e.list\n        0 -> getat_7f3b1e.index\n        getat_7f3b1e.itemAtIndex -> setter_4e4d8d.new_value\n        list2_4b6b6e -> contains_3e8d3e.list\n        for_1a5d2d.item -> contains_3e8d3e.item\n        contains_3e8d3e.is_contained -> ifexpression_5a4e5f.gen_3\n        setter_4e4d8d.continue -> for_1a5d2d.reset\n        setter_8c9c4c.continue -> for_1a5d2d.next\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_1a5b5e root.main.common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -535, y: -225, name: \"list\") property(List) list_0e9c2d\n\n        out(x: 1237, y: -209, name: \"output\") property(Bool) output_3b4e5d\n\n        instance(x: 767, y: -207) reduce_8c4b9e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 1115, y: -206) not_1f7f5a root.Std_k98ojb.Logic.Not {}\n        instance(x: 247, y: -209, name: \"check\") map_5e4f3e root.Std_k98ojb.Iteration.Map {}\n        instance(x: -303, y: -205, name: \"remove first\") slice_8c9e2c root.Std_k98ojb.List.Slice {}\n        instance(x: -0, y: -120, name: \"getter_3e1f7e\") getter_3e1f7e = previous\n        instance(x: 678, y: -314, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -276, y: -35) getat_8f8e78 root.Std_k98ojb.List.GetAt {}\n        instance(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 74, y: -23) greaterthan_7e5d0c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 285, y: -25) and_6e7f6c root.Std_k98ojb.Logic.And {}\n        instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 2, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 705, y: 49) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter_3e1f7e.value -> ifexpression_875761.gen_1\n        list_0e9c2d -> slice_8c9e2c.list\n        1 -> slice_8c9e2c.start\n        slice_8c9e2c.slice -> map_5e4f3e.items\n        map_5e4f3e.output_list -> reduce_8c4b9e.items\n        getter_b280eb.value -> ifexpression_875761.gen_0\n        ifexpression_875761.value -> setter_9d4f1c.new_value\n        ifexpression_875761.else -> setter_9d4f1c.execute\n        ifexpression_875761.then -> not_1f7f5a.execute\n        ifexpression_875761.execute -> setter_9d4f1c.execute\n        list_0e9c2d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> not_1f7f5a.execute\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_0e9c2d -> getat_8f8e78.list\n        0 -> getat_8f8e78.index\n        getat_8f8e78.itemAtIndex -> getter_3e1f7e.new_value\n        getter_3e1f7e.value -> for_d26972.execute\n        setter_9d4f1c.continue -> for_d26972.next\n        not_1f7f5a.result -> output_3b4e5d\n        reduce_8c4b9e.result -> not_1f7f5a.input\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: -194, y: 78, name: \"previous\") property(Number) previous_8e5d3f\n            in(x: -194, y: -4, name: \"accumulator\") property(Number) accumulator_7c1f8c\n\n            out(x: 521, y: -28, name: \"output\") property(Number) output_6f3b6f\n\n            current_81298e -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> and_6e7f6c.left\n            previous_8e5d3f -> greaterthan_7e5d0c.left\n            current_81298e -> greaterthan_7e5d0c.right\n            greaterthan_7e5d0c.result -> and_6e7f6c.right\n            and_6e7f6c.result -> output_6f3b6f\n            accumulator_7c1f8c -> output_6f3b6f\n        } -> reduce_8c4b9e.handler\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: -194, y: 78, name: \"previous\") property(Number) previous_8e5d3f\n\n            out(x: 521, y: -28, name: \"output\") property(Bool) output_6f3b6f\n\n            current_81298e -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> and_6e7f6c.left\n            previous_8e5d3f -> greaterthan_7e5d0c.left\n            current_81298e -> greaterthan_7e5d0c.right\n            greaterthan_7e5d0c.result -> and_6e7f6c.right\n            and_6e7f6c.result -> output_6f3b6f\n        } -> map_5e4f3e.handler\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: -194, y: 78, name: \"previous\") property(Number) previous_8e5d3f\n\n            out(x: 521, y: -28, name: \"output\") property(Bool) output_6f3b6f\n\n            current_81298e -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> and_6e7f6c.left\n            previous_8e5d3f -> greaterthan_7e5d0c.left\n            current_81298e -> greaterthan_7e5d0c.right\n            greaterthan_7e5d0c.result -> and_6e7f6c.right\n            and_6e7f6c.result -> output_6f3b6f\n        } -> map_5e4f3e.handler\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: -194, y: 78, name: \"previous\") property(Number) previous_8e5d3f\n\n            out(x: 521, y: -28, name: \"output\") property(Bool) output_6f3b6f\n\n            current_81298e -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> and_6e7f6c.left\n            previous_8e5",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -481, y: -225, name: \"list\") property(List) list_3c3d5c\n\n        out(x: 1219, y: -222, name: \"output\") property(Bool) output_4a2f2f\n\n        instance(x: 762, y: -211) ifexpression_9f6c2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current - previous == 1\"\n        }\n        getter(x: 344, y: 161, name: \"getter_8b6e1d\") getter_8b6e1d = previous\n        setter(x: 689, y: -311, name: \"setter_5c8c8c\") setter_5c8c8c = previous\n        instance(x: 322, y: -27) for_6a5e6a root.Std_k98ojb.Std.For {}\n        setter(x: -1, y: -123, name: \"setter_5c8c8c\") setter_1a6b3f = previous\n        instance(x: -275, y: -41) getat_3e7c0a root.Std_k98ojb.List.GetAt {}\n        ifexpression_9f6c2f.else -> setter_5c8c8c.execute\n        ifexpression_9f6c2f.value -> output_4a2f2f\n        ifexpression_9f6c2f.then -> setter_5c8c8c.execute\n        list_3c3d5c -> for_6a5e6a.items\n        for_6a5e6a.item -> ifexpression_9f6c2f.gen_2\n        for_6a5e6a.index -> ifexpression_9f6c2f.gen_0\n        getter_8b6e1d.value -> ifexpression_9f6c2f.gen_1\n        for_6a5e6a.onItem -> ifexpression_9f6c2f.execute\n        for_6a5e6a.done -> setter_5c8c8c.execute\n        for_6a5e6a.item -> setter_5c8c8c.new_value\n        list_3c3d5c -> getat_3e7c0a.list\n        0 -> getat_3e7c0a.index\n        getat_3e7c0a.itemAtIndex -> setter_1a6b3f.new_value\n        setter_1a6b3f.continue -> for_6a5e6a.reset\n        setter_5c8c8c.continue -> for_6a5e6a.next\n    }\n\n    \n\n    instance(x: 11, y: -178) is_consecutive_6c7d5e root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -519, y: -230, name: \"list\") property(List) list_1e7d5d\n\n        out(x: 1216, y: -223, name: \"output\") property(Bool) output_1a3e2f\n\n        instance(x: 762, y: -206) ifexpression_3d2b9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 163, name: \"getter_6b8f9d\") getter_6b8f9d = previous\n        setter(x: 679, y: -325, name: \"setter_6f7d1c\") setter_6f7d1c = previous\n        instance(x: 321, y: -49) for_4e8c2d root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -139, name: \"setter_6f7d1c\") setter_3f9c5c = previous\n        instance(x: -275, y: -64) getat_5e7b8c root.Std_k98ojb.List.GetAt {}\n        ifexpression_3d2b9f.else -> continue_5a7d9d\n        ifexpression_3d2b9f.value -> output_1a3e2f\n        ifexpression_3d2b9f.then -> setter_6f7d1c.execute\n        list_1e7d5d -> for_4e8c2d.items\n        for_4e8c2d.item -> ifexpression_3d2b9f.gen_2\n        for_4e8c2d.index -> ifexpression_3d2b9f.gen_0\n        getter_6b8f9d.value -> ifexpression_3d2b9f.gen_1\n        for_4e8c2d.onItem -> ifexpression_3d2b9f.execute\n        for_4e8c2d.done -> continue_5a7d9d\n        for_4e8c2d.item -> setter_6f7d1c.new_value\n        list_1e7d5d -> getat_5e7b8c.list\n        0 -> getat_5e7b8c.index\n        getat_5e7b8c.itemAtIndex -> setter_3f9c5c.new_value\n        execute_8e7b9d -> setter_3f9c5c.execute\n        setter_3f9c5c.continue -> for_4e8c2d.reset\n        setter_6f7d1c.continue -> for_4e8c2d.next\n    }\n\n    \n\n    instance(x: 12, y: -179) consecutive_numbers_9f7e6d root.main.consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -493, y: -214, name: \"list\") property(List) list_5f7a0e\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_5f7a0e -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_5a4dad root.main.consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -505, y: -216, name: \"list\") property(List) list_0f1c2e\n\n        out(x: 1281, y: -215, name: \"output\") property(Bool) output_5c7e8e\n\n        instance(x: -248, y: -208, name: \"filter list\") filter_3e5d8a root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 796, y: -208) not_8c1c9c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1018, y: -207) find_5f1f5f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 107, y: -207) map_5d8c8f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 345, y: -207) sub_3a7f9d root.Std_k98ojb.Math.Sub {}\n        instance(x: 573, y: -208) not_3f5e4e root.Std_k98ojb.Logic.Not {}\n        instance(x: 795, y: -209) find_5d7c3d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 106, y: -209) map_7c8f8f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 344, y: -209) add_3a8f9d root.Std_k98ojb.Math.Add {}\n        list_0f1c2e -> filter_3e5d8a.list\n        func() {\n            in(x: -35, y: -21, name: \"current\") property(Number) current_1d6b6c\n\n            out(x: 522, y: -28, name: \"bool\") property(Bool) bool_7f4b2c\n\n            instance(x: 74, y: -23) modulo_1c6b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_1d6b6c -> modulo_1c6b2a.value\n            2 -> modulo_1c6b2a.divisor\n            modulo_1c6b2a.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> bool_7f4b2c\n        } -> map_5d8c8f.handler\n        filter_3e5d8a.result -> map_5d8c8f.items\n        map_5d8c8f.output_list -> sub_3a7f9d.first\n        1 -> sub_3a7f9d.second\n        sub_3a7f9d.result -> find_5f1f5f.predicate\n        not_8c1c9c.result -> output_5c7e8e\n        find_5f1f5f.item -> not_8c1c9c.input\n        func() {\n            in(x: -37, y: -20, name: \"current\") property(Number) current_1d6b6c\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_7f4b2c\n\n            instance(x: 74, y: -23) modulo_1c6b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_1d6b6c -> modulo_1c6b2a.value\n            2 -> modulo_1c6b2a.divisor\n            modulo_1c6b2a.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> bool_7f4b2c\n        } -> map_7c8f8f.handler\n        filter_3e5d8a.result -> map_7c8f8f.items\n        map_7c8f8f.output_list -> add_3a8f9d.first\n        1 -> add_3a8f9d.second\n        add_3a8f9d.result -> find_5d7c3d.predicate\n        not_3f5e4e.result -> find_5f1f5f.context\n        find_5d7c3d.item -> not_3f5e4e.input\n        find_5f1f5f.context -> find_5d7c3d.context\n        filter_3e5d8a.result -> find_5f1f5f.items\n        filter_3e5d8a.result -> find_5d7c3d.items\n    }\n\n    \n\n    instance(x: -76, y: -8) consecutive_3f5c7f root.main.consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -569, y: -2, name: \"list\") property(List) list_5b9b7c\n\n        out(x: 442, y: 8, name: \"output\") property(Bool) output_5c6f82\n\n        instance(x: -312, y: 47, name: \"filter\") filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -48, y: 53) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -312, y: 202, name: \"filter1\") filter_1b6b5e root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 208) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 6) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 186, y: 155) sub_3f3f1d root.Std_k98ojb.Math.Sub {}\n        instance(x: 377, y: 152) equal_1c6e8c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 376, y: 4) equal_8b8b5f root.Std_k98ojb.Logic.Equal {}\n        list_5b9b7c -> filter_7b3b7b.list\n        filter_7b3b7b.result -> firstitem_870503.list\n        list_5b9b7c -> filter_1b6b5e.list\n        filter_1b6b5e.result -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        firstitem_3078c6.item -> sub_3f3f1d.first\n        firstitem_870503.item -> sub_3f3f1d.second\n        sub_852f2e.result -> equal_1c6e8c.left\n        1 -> equal_1c6e8c.right\n        sub_3f3f1d.result -> equal_8b8b5f.left\n        1 -> equal_8b8b5f.right\n        equal_1c6e8c.result -> equal_8b8b5f.left\n        equal_8b8b5f.result -> output_5c6f82\n    }\n\n    \n\n    instance(x: -61, y: -51) consecutive_numbers_9e5e0e root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -535, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_numbers_7a4dad root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -545, y: -216, name: \"list\") property(List) list_7a3d5e\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_7a3d5e -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_numbers_7a4dad root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -501, y: -232, name: \"list\") property(List) list_4d4b9c\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -305, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_4d4b9c -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_numbers_7a4dad root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -505, y: -213, name: \"list\") property(List) list_7e4a9e\n\n        out(x: 1261, y: -210, name: \"output\") property(Bool) output_2b7b2c\n\n        instance(x: -302, y: -208, name: \"only consecutive\") filter_3f1d8e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 848, y: -210) contains_3e8d3e root.Std_k98ojb.List.Contains {}\n        instance(x: 247, y: -212, name: \"transform numbers to true/false\") map_8b8c5e root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -206) not_9c4f1e root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -32, y: -11, name: \"current\") property(Number) current_5a7f7e\n            in(x: -25, y: 83, name: \"_index\") property(Number) _index_6a7f7e\n\n            out(x: 707, y: 63, name: \"output\") property(Bool) output_3f7f7e\n\n            instance(x: 228, y: 70) sub_7a8f7e root.Std_k98ojb.Math.Sub {}\n            instance(x: 465, y: 65) notequal_8b8f7e root.Std_k98ojb.Logic.NotEqual {}\n            current_5a7f7e -> sub_7a8f7e.first\n            _index_6a7f7e -> sub_7a8f7e.second\n            sub_7a8f7e.result -> notequal_8b8f7e.left\n            1 -> notequal_8b8f7e.right\n            notequal_8b8f7e.result -> output_3f7f7e\n        } -> filter_3f1d8e.handler\n        list_7e4a9e -> filter_3f1d8e.items\n        func() {\n            in(x: -194, y: -4, name: \"current\") property(Number) current_1a7f7e\n\n            out(x: 525, y: -16, name: \"bool\") property(Bool) bool_2a7f7e\n\n            instance(x: 76, y: -13) sub_3a8f7e root.Std_k98ojb.Math.Sub {}\n            instance(x: 283, y: -15) notequal_4b8f7e root.Std_k98ojb.Logic.NotEqual {}\n            current_1a7f7e -> sub_3a8f7e.first\n            1 -> sub_3a8f7e.second\n            sub_3a8f7e.result -> notequal_4b8f7e.left\n            0 -> notequal_4b8f7e.right\n            notequal_4b8f7e.result -> bool_2a7f7e\n        } -> map_8b8c5e.handler\n        filter_3f1d8e.output_list -> map_8b8c5e.items\n        map_8b8c5e.output_list -> contains_3e8d3e.list\n        false -> contains_3e8d3e.item\n        not_9c4f1e.result -> output_2b7b2c\n        contains_3e8d3e.is_contained -> not_9c4f1e.input\n    }\n\n    \n\n    instance(x: -294, y: -6) consecutive_numbers_5b4dad root.main.consecutive_numbers {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -525, y: -219, name: \"list1\") property(List) list1_2b9b8d\n        in(x: -525, y: -7, name: \"list2\") property(List) list2_5b7d9c\n\n        out(x: 1267, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -299, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list1_2b9b8d -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -425, y: -225, name: \"list1\") property(List) list1_4d4c4d\n        in(x: -425, y: -93, name: \"list2\") property(List) list2_7f2f8d\n\n        out(x: 1163, y: -175, name: \"output\") property(Bool) output_1d3b4c\n\n        instance(x: -247, y: -205, name: \"length1\") length_1f3b9e root.Std_k98ojb.List.Length {}\n        instance(x: -245, y: -75, name: \"length2\") length_8b8a0e root.Std_k98ojb.List.Length {}\n        instance(x: 102, y: -205, name: \"is list2 longer than list1\") greaterthan_4c1b6d root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 100, y: -75, name: \"is list1 longer than list2\") greaterthan_6e1b1f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 719, y: -205, name: \"is list2 equal or shorter than list1\") lessthanorequal_4b6d1f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 719, y: -75, name: \"is list1 equal or shorter than list2\") lessthanorequal_3b1f6d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1040, y: -205, name: \"list2 is shorter than list1\") lessthan_7b8f6d root.Std_k98ojb.Math.LessThan {}\n        instance(x: 1040, y: -75, name: \"list1 is shorter than list2\") lessthan_6f1b6d root.Std_k98ojb.Math.LessThan {}\n        instance(x: 1018, y: -205, name: \"list2 is equal to list1\") equal_7b8f6d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1018, y: -75, name: \"list1 is equal to list2\") equal_6f1b6d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1293, y: -205, name: \"is list2 longer or equal to list1\") greaterthanorequal_4b6d1f root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        instance(x: 1293, y: -75, name: \"is list1 longer or equal to list2\") greaterthanorequal_3b1f6d root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        instance(x: 1500, y: -205, name: \"list1 is longer than list2\") greaterthan_6e1b1f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1500, y: -75, name: \"list2 is longer than list1\") greaterthan_4c1b6d root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1715, y: -205, name: \"list1 is longer or equal to list2\") greaterthanorequal_3b1f6d root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        instance(x: 1715, y: -75, name: \"list2 is longer or equal to list1\") greaterthanorequal_4b6d1f root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        instance(x: 1886, y: -205, name: \"list1 is equal or shorter than list2\") lessthanorequal_3b1f6d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1886, y: -75, name: \"list2 is equal or shorter than list1\") lessthanorequal_4b6d1f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 2057, y: -205, name: \"list1 is shorter than list2\") lessthan_6f1b6d root.Std_k98ojb.Math.LessThan {}\n        instance(x: 2057, y: -75, name: \"list2 is shorter than list1\") lessthan_7b8f6d root.Std_k98ojb.Math.LessThan {}\n        instance(x: 2269, y: -205, name: \"list1 is equal to list2\") equal_6f1b6d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 2269, y: -75, name: \"list2 is equal to list1\") equal_7b8f6d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 2457, y: -205, name: \"list1 is sublist of list2\") if_6d8b6d root.Std_k98ojb.Std.If {}\n        instance(x: 2457, y: -75, name: \"list2 is sublist of list1\") if_4c1b6d root.Std_k98ojb.Std.If {}\n        instance(x: 2742, y: -205, name: \"list1 is not sublist of list2\") if_4c1b6d root.Std_k98ojb.Std.If {}\n        instance(x: 2742, y: -75, name: \"list2 is not sublist of list1\") if_6d8b6d root.Std_k98ojb.Std.If {}\n        instance(x: 3037, y: -205, name: \"list1 is sublist of list2\") if_6d8b6d root.Std_k98ojb.Std.If {}\n        instance(x: 3037, y: -75, name: \"list2 is sublist of list1\") if_4c1b6d root.Std_k98ojb.Std.If {}\n        instance(x: 3337, y: -205, name: \"list1 is not sublist of list2\") if_4c1b6d root.Std_k98ojb.Std.If {}\n        instance(x: 3337, y: -75, name: \"list2 is not sublist of list1\") if_6d8b6d root.Std_k98ojb.Std.If {}\n        instance(x: 3642, y: -205, name: \"list1 is sublist of list2\") if_6d8b6d root.Std_k98ojb.Std.If {}\n        instance(x: 3642, y: -75, name: \"list2 is sublist of list1\") if_4c1b6d root.Std_k98ojb.Std.If {}\n        instance(x: 3937, y: -205, name: \"list1 is not sublist of list2\") if_4c1b6d root.Std_k98ojb.Std.If {}\n        instance(x: 3937, y: -75, name: \"list2 is not sublist of list1\") if_6d8b6d root.Std_k98ojb.Std.If {}\n        instance(x: 4253, y: -205, name: \"list1 is sublist of list2\") if_6d8b6d root.Std_k98ojb.Std.If {}\n        instance(x: 4253, y: -75, name: \"list2 is sublist of list1\") if_4c1b6d root.Std_k98ojb.Std.If {}\n        instance(x: 4561, y: -205, name: \"list1 is not sublist of list2\") if_4c1b6d root.Std_k98ojb.Std.If {}\n        instance(x: 4561, y: -75, name: \"list2 is not sublist of list1\") if_6d8b6d root.Std_k98ojb.Std.If {}\n        instance(x: 4883, y: -205, name: \"list1 is sublist of list2\") if_6d8b6d root.Std_k98ojb.Std.If {}\n        instance(x: 4883, y: -75, name: \"list2 is sublist of list1\") if_4c1b6d root.Std_k98ojb.Std.If {}\n        instance(x: 5207, y: -205, name: \"list1 is not sublist of list2\") if_4c1b6d root.Std_k98ojb.Std.If {}\n        instance(x: 5207, y: -75, name: \"list2 is not sublist of list1\") if_6d8b6d root.Std_k98ojb.Std.If {}\n        instance(x: 5543, y: -205, name: \"list1 is sublist of list2\") if_6d8b6d root.Std_k98ojb.Std.If {}\n        instance(x: 5543, y: -75, name:",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -463, y: -226, name: \"list1\") property(List) list1_1e3e9c\n        in(x: -472, y: 26, name: \"list2\") property(List) list2_8b1c4d\n\n        out(x: 1268, y: 1, name: \"output\") property(Bool) output_4b8a9d\n\n        instance(x: -304, y: -209, name: \"find list1 in list2\") find_5a4e4c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 847, y: -207) contains_1d4b0e root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_5e5f2e root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_1b4f7d root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_1f4a0e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_5a7c9e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_8f6e0d\n\n            instance(x: 226, y: 56) modulo_5b4b7e root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_8a4e0c root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_5b4b7e.divisor\n            0 -> notequal_8a4e0c.right\n            notequal_8a4e0c.result -> output_8f6e0d\n            modulo_5b4b7e.result -> notequal_8a4e0c.left\n            _index_5a7c9e -> modulo_5b4b7e.value\n        } -> find_5a4e4c.predicate\n        list2_8b1c4d -> find_5a4e4c.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_7a4c9e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_5c4b9e\n\n            instance(x: 74, y: -23) modulo_7a4b7e root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_1f4a7e root.Std_k98ojb.Logic.NotEqual {}\n            current_7a4c9e -> modulo_7a4b7e.value\n            2 -> modulo_7a4b7e.divisor\n            modulo_7a4b7e.result -> notequal_1f4a7e.left\n            0 -> notequal_1f4a7e.right\n            notequal_1f4a7e.result -> bool_5c4b9e\n        } -> map_5e5f2e.handler\n        find_5a4e4c.output_list -> map_5e5f2e.items\n        map_5e5f2e.output_list -> contains_1d4b0e.list\n        list1_1e3e9c -> contains_1d4b0e.item\n        not_1b4f7d.result -> output_4b8a9d\n        contains_1d4b0e.is_contained -> not_1b4f7d.input\n    }\n\n    \n\n    instance(x: -295, y: -5) is_sublist_1a4e7e root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") sublist {\n        in(x: -493, y: -227, name: \"list1\") property(List) list1_7a2e0f\n        in(x: -485, y: 29, name: \"list2\") property(List) list2_3e1e7f\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_6c8f60\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_4b9f1c\n\n        instance(x: 752, y: 93) ifexpression_6a7b9c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_9e3e1f\") getter_9e3e1f = previous\n        setter(x: 679, y: -313, name: \"setter_6c8d1e\") setter_6c8d1e = previous\n        instance(x: 321, y: -20) for_8b3e5c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_6c8d1e\") setter_5c8c8f = previous\n        instance(x: -275, y: -35) getat_1e8e3d root.Std_k98ojb.List.GetAt {}\n        ifexpression_6a7b9c.else -> continue_6c8f60\n        ifexpression_6a7b9c.value -> output_4b9f1c\n        ifexpression_6a7b9c.then -> setter_6c8d1e.execute\n        list1_7a2e0f -> for_8b3e5c.items\n        for_8b3e5c.item -> ifexpression_6a7b9c.gen_2\n        for_8b3e5c.index -> ifexpression_6a7b9c.gen_0\n        getter_9e3e1f.value -> ifexpression_6a7b9c.gen_1\n        for_8b3e5c.onItem -> ifexpression_6a7b9c.execute\n        for_8b3e5c.done -> continue_6c8f60\n        for_8b3e5c.item -> setter_6c8d1e.new_value\n        list1_7a2e0f -> getat_1e8e3d.list\n        0 -> getat_1e8e3d.index\n        getat_1e8e3d.itemAtIndex -> setter_5c8c8f.new_value\n        continue_6c8f60 -> output_4b9f1c\n        setter_5c8c8f.continue -> for_8b3e5c.reset\n        setter_6c8d1e.continue -> for_8b3e5c.next\n    }\n\n    \n\n    instance(x: 10, y: -177) sublist_9c3d4c root.main.sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -435, y: -213, name: \"list1\") property(List) list1_2b3c74\n        in(x: -443, y: -72, name: \"list2\") property(List) list2_3f9c5d\n\n        out(x: 1187, y: -153, name: \"output\") property(Bool) output_8c4e5f\n\n        instance(x: -293, y: -202, name: \"only sublist\") filter_5e9b41 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 833, y: -195) contains_6e7c0d root.Std_k98ojb.List.Contains {}\n        instance(x: 226, y: -196, name: \"transform numbers to true/false\") map_5d5d8c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -190) not_9e1f2f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -31, y: -16, name: \"current\") property(Number) current_7b3c5e\n            in(x: -24, y: 75, name: \"_index\") property(Number) _index_5b9b4d\n\n            out(x: 706, y: 56, name: \"output\") property(Bool) output_1a9c5d\n\n            instance(x: 228, y: 61) modulo_1c8b1c root.Std_k98ojb.Math.Modulo {}\n            instance(x: 465, y: 57) notequal_7e7f1c root.Std_k98ojb.Logic.NotEqual {}\n            current_7b3c5e -> modulo_1c8b1c.value\n            2 -> modulo_1c8b1c.divisor\n            modulo_1c8b1c.result -> notequal_7e7f1c.left\n            0 -> notequal_7e7f1c.right\n            notequal_7e7f1c.result -> output_1a9c5d\n        } -> filter_5e9b41.handler\n        list1_2b3c74 -> filter_5e9b41.items\n        func() {\n            in(x: -191, y: -7, name: \"current\") property(Number) current_3a8c6d\n\n            out(x: 523, y: -20, name: \"bool\") property(Bool) bool_6e9c5e\n\n            instance(x: 74, y: -17) modulo_8e9c6d root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -19) notequal_3c8c6d root.Std_k98ojb.Logic.NotEqual {}\n            current_3a8c6d -> modulo_8e9c6d.value\n            2 -> modulo_8e9c6d.divisor\n            modulo_8e9c6d.result -> notequal_3c8c6d.left\n            0 -> notequal_3c8c6d.right\n            notequal_3c8c6d.result -> bool_6e9c5e\n        } -> map_5d5d8c.handler\n        filter_5e9b41.output_list -> map_5d5d8c.items\n        map_5d5d8c.output_list -> contains_6e7c0d.list\n        list2_3f9c5d -> contains_6e7c0d.item\n        not_9e1f2f.result -> output_8c4e5f\n        contains_6e7c0d.is_contained -> not_9e1f2f.input\n    }\n\n    \n\n    instance(x: -292, y: -5) is_sublist_1e8c6d root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -427, y: -216, name: \"list1\") property(List) list1_3c2e1d\n        in(x: -425, y: -24, name: \"list2\") property(List) list2_1f2f6c\n\n        out(x: 1206, y: -199, name: \"output\") property(Bool) output_3c9b8d\n\n        instance(x: -274, y: -209, name: \"find index\") findindex_5d5b3c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 850, y: -206) not_1d5b7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 248, y: -207, name: \"find sublist\") findindex_5d5b3c_2 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 1060, y: -203) not_7b9c9d root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -29, y: -25, name: \"current\") property(Number) _index_1c3c9e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_2b3f5e\n\n            out(x: 706, y: 49, name: \"output\") property(Bool) output_5c6c9c\n\n            instance(x: 226, y: 56) equal_2e8d2c root.Std_k98ojb.Logic.Equal {}\n            _index_2b3f5e -> equal_2e8d2c.left\n            _index_1c3c9e -> equal_2e8d2c.right\n            equal_2e8d2c.result -> output_5c6c9c\n        } -> findindex_5d5b3c.predicate\n        list1_3c2e1d -> findindex_5d5b3c.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_1e9f8c\n            in(x: -184, y: 81, name: \"_index\") property(Number) _index_7b3e5e\n\n            out(x: 521, y: -28, name: \"output\") property(Bool) output_5c8c9c\n\n            instance(x: 74, y: -23) slice_1c7d2b root.Std_k98ojb.List.Slice {}\n            instance(x: 285, y: -25) equal_7b8d2c root.Std_k98ojb.Logic.Equal {}\n            0 -> slice_1c7d2b.start\n            _index_7b3e5e -> slice_1c7d2b.end\n            list1_3c2e1d -> slice_1c7d2b.items\n            slice_1c7d2b.slice -> equal_7b8d2c.left\n            current_1e9f8c -> equal_7b8d2c.right\n            equal_7b8d2c.result -> output_5c8c9c\n        } -> findindex_5d5b3c_2.predicate\n        list1_3c2e1d -> findindex_5d5b3c_2.items\n        not_1d5b7c.result -> output_3c9b8d\n        findindex_5d5b3c.item -> not_1d5b7c.input\n        not_7b9c9d.result -> output_3c9b8d\n        findindex_5d5b3c_2.item -> not_7b9c9d.input\n    }\n\n    \n\n    instance(x: -289, y: -4) is_sublist_5b4c9d root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") sublist {\n        in(x: -284, y: -93, name: \"list1\") property(List) list1_2c9b3e\n        in(x: -283, y: 59, name: \"list2\") property(List) list2_3b2c1c\n\n        out(x: 557, y: -88, name: \"output\") property(Bool) output_4e1c1f\n\n        instance(x: -107, y: -91, name: \"is list2 a sublist of list1\") contains_8b9e7f root.Std_k98ojb.List.Contains {}\n        list2_3b2c1c -> contains_8b9e7f.item\n        list1_2c9b3e -> contains_8b9e7f.list\n        contains_8b9e7f.is_contained -> output_4e1c1f\n    }\n\n    \n\n    instance(x: -89, y: 54) sublist_7f4f6f root.main.sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -490, y: -214, name: \"list1\") property(List) list1_7a2c2e\n        in(x: -481, y: 29, name: \"list2\") property(List) list2_8c5d0c\n\n        out(x: 1231, y: 5, name: \"continue\") trigger() continue_3e8c3c\n        out(x: 1212, y: 147, name: \"output\") property(Bool) output_4d1b8c\n\n        instance(x: 752, y: 93) ifexpression_5a8f6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_1d7c4e\") getter_1d7c4e = previous\n        setter(x: 679, y: -313, name: \"setter_7c9e6e\") setter_7c9e6e = previous\n        instance(x: 321, y: -20) for_8b3b9d root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7c9e6e\") setter_3f2c7e = previous\n        instance(x: -275, y: -35) getat_9a2d67 root.Std_k98ojb.List.GetAt {}\n        ifexpression_5a8f6f.else -> continue_3e8c3c\n        ifexpression_5a8f6f.value -> output_4d1b8c\n        ifexpression_5a8f6f.then -> setter_7c9e6e.execute\n        list1_7a2c2e -> for_8b3b9d.items\n        for_8b3b9d.item -> ifexpression_5a8f6f.gen_2\n        for_8b3b9d.index -> ifexpression_5a8f6f.gen_0\n        getter_1d7c4e.value -> ifexpression_5a8f6f.gen_1\n        for_8b3b9d.onItem -> ifexpression_5a8f6f.execute\n        for_8b3b9d.done -> continue_3e8c3c\n        for_8b3b9d.item -> setter_7c9e6e.new_value\n        list1_7a2c2e -> getat_9a2d67.list\n        0 -> getat_9a2d67.index\n        getat_9a2d67.itemAtIndex -> setter_3f2c7e.new_value\n        continue_3e8c3c -> list2_8c5d0c\n        execute_9f7c8c -> setter_3f2c7e.execute\n        setter_3f2c7e.continue -> for_8b3b9d.reset\n        setter_7c9e6e.continue -> for_8b3b9d.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_8f2c7d root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -427, y: -238, name: \"list1\") property(List) list1_9c8c5c\n        in(x: -431, y: 15, name: \"list2\") property(List) list2_8c4c5d\n\n        out(x: 1216, y: -209, name: \"output\") property(Bool) output_5b5c8d\n\n        instance(x: -258, y: -211, name: \"generate range\") generateRange_e2c2e5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: -77, y: -209) filter_4a6e6e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 447, y: -207) map_5f9c5f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 850, y: -203) any_4c9d9c root.Std_k98ojb.List.Contains {}\n        instance(x: 1109, y: -207) not_5b7b5c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1197, y: -205) contains_4c9c4c root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -22, y: -19, name: \"index\") property(Number) index_8b7c5c\n\n            out(x: 676, y: 49, name: \"output\") property(List) output_9c8c5c\n\n            instance(x: 247, y: 56) slice_5b7c5c root.Std_k98ojb.List.Slice {}\n            instance(x: 475, y: 51) contains_5c8c5c root.Std_k98ojb.List.Contains {}\n            index_8b7c5c -> slice_5b7c5c.start\n            list1_9c8c5c -> slice_5b7c5c.items\n            slice_5b7c5c.slice -> contains_5c8c5c.list\n            list2_8c4c5d -> contains_5c8c5c.item\n            contains_5c8c5c.is_contained -> output_9c8c5c\n        } -> map_5f9c5f.handler\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_4a6e6e.handler\n        list1_9c8c5c -> filter_4a6e6e.items\n        filter_4a6e6e.output_list -> map_5f9c5f.items\n        map_5f9c5f.output_list -> any_4c9d9c.list\n        list2_8c4c5d -> generateRange_e2c2e5.from\n        list1_9c8c5c -> generateRange_e2c2e5.to\n        generateRange_e2c2e5.list -> filter_4a6e6e.index\n        any_4c9d9c.result -> not_5b7b5c.input\n        not_5b7b5c.result -> contains_4c9c4c.item\n        list1_9c8c5c -> contains_4c9c4c.list\n        contains_4c9c4c.is_contained -> output_5b5c8d\n    }\n\n    \n\n    instance(x: -297, y: -7) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") sublist {\n        in(x: -570, y: -219, name: \"list1\") property(List) list1_9b9e9e\n        in(x: -566, y: -70, name: \"list2\") property(List) list2_9b4c1c\n\n        out(x: 1263, y: -197, name: \"output\") property(Bool) output_4e5e6d\n\n        instance(x: -302, y: -197, name: \"list2 reversed\") reversed_4b8e7e root.Std_k98ojb.List.Reversed {}\n        instance(x: 843, y: -196) contains_9b5f0a root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -198, name: \"find list2 in list1\") find_7f1f7e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 1058, y: -191) not_5f7f8c root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -17, name: \"current\") property(List) current_7e3c8f\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_1e1a97\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_7e1a8c\n\n            instance(x: 226, y: 56) contains_4f1a0c root.Std_k98ojb.List.Contains {}\n            current_7e3c8f -> contains_4f1a0c.list\n            list2_9b4c1c -> contains_4f1a0c.item\n            contains_4f1a0c.is_contained -> output_7e1a8c\n        } -> find_7f1f7e.predicate\n        list1_9b9e9e -> find_7f1f7e.items\n        list1_9b9e9e -> reversed_4b8e7e.items\n        reversed_4b8e7e.reversed -> find_7f1f7e.start\n        find_7f1f7e.item -> contains_9b5f0a.list\n        list2_9b4c1c -> contains_9b5f0a.item\n        not_5f7f8c.result -> output_4e5e6d\n        contains_9b5f0a.is_contained -> not_5f7f8c.input\n    }\n\n    \n\n    instance(x: -293, y: -5) sublist_9b9e9e root.main.sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") missing_number {\n        in(x: -305, y: -0, name: \"list\") property(List) list_9d9b8f\n\n        out(x: 576, y: -1, name: \"number\") property(Number) number_4e7b0d\n\n        instance(x: 0, y: 0) find_4a9e1e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n            in(x: -107, y: 29, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_4a9e1e.predicate\n        list_9d9b8f -> find_4a9e1e.items\n        find_4a9e1e.index -> number_4e7b0d\n    }\n\n    \n\n    instance(x: -55, y: 529) missing_number_2c856f root.main.missing_number {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -276, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) minus_4a8d5 root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            minus_4a8d5.result -> notequal_807ffd.left\n            elem_9f6850 -> minus_4a8d5.second\n            minus_4a8d5.first -> minus_4a8d5.second\n            1 -> minus_4a8d5.first\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -299, y: -0, name: \"list\") property(List) list_8e3e9c\n\n        out(x: 599, y: -1, name: \"number\") property(Number) number_4f6b1c\n\n        instance(x: 0, y: 0) for_1d1b9f root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -109, y: 39, name: \"index\") property(Number) index_7c5d4e\n            in(x: -104, y: 138, name: \"item\") property(Number) item_1b2e9d\n\n            out(x: 515, y: 44, name: \"continue\") trigger() continue_1c7e6c\n\n            instance(x: 87, y: 29) add_5d0b5c root.Std_k98ojb.Math.Add {}\n            instance(x: 309, y: 35) if_2d4f8f root.Std_k98ojb.Std.If {}\n            instance(x: 312, y: 131) if_2f1d3d root.Std_k98ojb.Std.If {}\n            instance(x: 309, y: 230) if_2e3b1f root.Std_k98ojb.Std.If {}\n            1 -> add_5d0b5c.second\n            index_7c5d4e -> add_5d0d0b.first\n            add_5d0d0b.result -> add_5d0b5c.first\n            add_5d0b5c.result -> index_7c5d4e\n            item_1b2e9d -> if_2d4f8f.input\n            true -> if_2d4f8f.then\n            index_7c5d4e -> if_2d4f8f.else\n            if_2d4f8f.value -> if_2f1d3d.input\n            true -> if_2f1d3d.then\n            index_7c5d4e -> if_2f1d3d.else\n            if_2f1d3d.value -> if_2e3b1f.input\n            true -> if_2e3b1f.then\n            index_7c5d4e -> if_2e3b1f.else\n            if_2e3b1f.value -> number_4f6b1c\n            for_1d1b9f.next -> continue_1c7e7c\n            for_1d1b9f.item -> item_1b2e9d\n            for_1d1b9f.index -> index_7c5d4e\n            list_8e3e9c -> for_1d1b9f.items\n            for_1d1b9f.trigger -> continue_1c7e6c\n        }\n    }\n\n    \n\n    instance(x: -60, y: 531) smallest_missing_2b9b9f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -292, y: -7, name: \"list\") property(List) list_ai\n        out(x: 512, y: 57, name: \"min\") property(Number) min_ai\n\n        instance(x: 0, y: 0) for_8b3b1f root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -112, y: 27, name: \"index\") property(Number) index_9c9f3c\n            in(x: -116, y: 93, name: \"item\") property(Number) item_1e7f1d\n            in(x: -113, y: 150, name: \"execute\") trigger() execute_1a5d4c\n            out(x: 507, y: 93, name: \"continue\") trigger() continue_1c2e3c\n\n            instance(x: 89, y: 29) ifexpression_8c0b8a root.Std_k98ojb.Std.IfExpression {\n                expression: \"item - index != 1\"\n            }\n            instance(x: 89, y: 93) if_2c7e0a root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 149) if_2c7e0a_1 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 194) if_2c7e0a_2 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 240) if_2c7e0a_3 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 286) if_2c7e0a_4 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 331) if_2c7e0a_5 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 377) if_2c7e0a_6 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 423) if_2c7e0a_7 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 468) if_2c7e0a_8 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 514) if_2c7e0a_9 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 560) if_2c7e0a_10 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 605) if_2c7e0a_11 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 651) if_2c7e0a_12 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 697) if_2c7e0a_13 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 742) if_2c7e0a_14 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 788) if_2c7e0a_15 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 834) if_2c7e0a_16 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 879) if_2c7e0a_17 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 925) if_2c7e0a_18 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 970) if_2c7e0a_19 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1016) if_2c7e0a_20 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1062) if_2c7e0a_21 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1107) if_2c7e0a_22 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1153) if_2c7e0a_23 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1199) if_2c7e0a_24 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1244) if_2c7e0a_25 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1290) if_2c7e0a_26 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1336) if_2c7e0a_27 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1381) if_2c7e0a_28 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1427) if_2c7e0a_29 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1473) if_2c7e0a_30 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1518) if_2c7e0a_31 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1564) if_2c7e0a_32 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1609) if_2c7e0a_33 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1655) if_2c7e0a_34 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1701) if_2c7e0a_35 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1746) if_2c7e0a_36 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1792) if_2c7e0a_37 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1838) if_2c7e0a_38 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1883) if_2c7e0a_39 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1929) if_2c7e0a_40 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 1975) if_2c7e0a_41 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 2020) if_2c7e0a_42 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 2066) if_2c7e0a_43 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 2111) if_2c7e0a_44 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 2157) if_2c7e0a_45 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 2203) if_2c7e0a_46 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 2248) if_2c7e0a_47 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 2294) if_2c7e0a_48 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 2339) if_2c7e0a_49 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 2385) if_2c7e0a_50 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 2431) if_2c7e0a_51 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 2476) if_2c7e0a_52 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 2522) if_2c7e0a_53 root.Std_k98ojb.Std.If {}\n            instance(x: 89, y: 2567) if_",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") missing_number {\n        in(x: -294, y: -0, name: \"list\") property(List) list_7b3c7a\n\n        out(x: 594, y: -1, name: \"number\") property(Number) number_7b3c7a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) minus_1088d5 root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            instance(x: 309, y: 87) if_807ffd root.Std_k98ojb.Std.If {}\n            instance(x: 314, y: 148) index_807ffd root.Std_k98ojb.Iteration.Map {}\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n                instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                0 -> notequal_807ffd.right\n                modulo_1088d5.result -> notequal_807ffd.left\n                2 -> modulo_1088d5.divisor\n                elem_9f6850 -> modulo_1088d5.value\n                notequal_807ffd.result -> bool_af09a7\n            } -> index_807ffd.handler\n            list_7b3c7a -> index_807ffd.items\n            index_807ffd.output_list -> index_807ffd\n            index_807ffd -> minus_1088d5.second\n            index_807ffd -> if_807ffd.input\n            elem_9f6850 -> minus_1088d5.first\n            minus_1088d5.result -> if_807ffd.then\n            0 -> if_807ffd.else\n            if_807ffd.value -> equal_807ffd.right\n            list_7b3c7a -> equal_807ffd.left\n            equal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_7b3c7a -> find_6d05b0.items\n        find_6d05b0.item -> number_7b3c7a\n    }\n\n    \n\n    instance(x: -55, y: 529) missing_number_2c856f root.main.missing_number {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -280, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_5e8d9f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) greaterthan_9c5f9d root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            sub_5e8d9f.result -> notequal_807ffd.left\n            1 -> sub_5e8d9f.second\n            elem_9f6850 -> sub_5e8d9f.first\n            notequal_807ffd.result -> greaterthan_9c5f9d.right\n            index_5f6c6c -> greaterthan_9c5f9d.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -289, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -112, y: 33, name: \"index\") property(Number) index_5e2e8c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_9e8d8c root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> add_9e8d8c.second\n            index_5e2e8c -> add_9e8d8c.first\n            add_9e8d8c.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") missing_number {\n        in(x: -298, y: -12, name: \"list\") property(List) list_7e2c2e\n\n        out(x: 586, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) for_9b0d0c root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -128, y: 33, name: \"item\") property(Number) item_3b4d1d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 90, y: 29) sub_4a1b3e root.Std_k98ojb.Math.Sub {}\n            instance(x: 315, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_4a1b3e.result -> notequal_807ffd.left\n            item_3b4d1d -> sub_4a1b3e.second\n            0 -> sub_4a1b3e.first\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_9b0d0c.on_item\n        instance(x: 0, y: 0) ifexpression_3f8c9d root.Std_k98ojb.Std.IfExpression {\n            expression: \"bool == true\"\n        }\n        getter(x: -142, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = number\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = number\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = number\n        getter_9cceb3.value -> number_3bc2ae\n        ifexpression_3f8c9d.then -> setter_1cedb2.execute\n        item_3b4d1d -> setter_1cedb2.new_value\n        ifexpression_3f8c9d.else -> setter_37db7f.execute\n        item_3b4d1d -> setter_37db7f.new_value\n        for_9b0d0c.done -> ifexpression_3f8c9d.execute\n        list_7e2c2e -> for_9b0d0c.items\n        0 -> setter_1cedb2.new_value\n        0 -> number\n    }\n\n    \n\n    instance(x: -55, y: 529) missing_number_2c856f root.main.missing_number {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -281, y: -0, name: \"list\") property(List) list_9c0b5f\n\n        out(x: 596, y: -1, name: \"number\") property(Number) number_1c8c4c\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0 || it - prev != 1\"\n            }\n            instance(x: 310, y: 35) sub_2c3b0a root.Std_k98ojb.Math.Sub {}\n            getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = prev\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = prev\n            setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = prev\n            elem_9f6850 -> ifexpression_e38995.gen_1\n            sub_2c3b0a.result -> ifexpression_e38995.gen_0\n            getter_9cceb3.value -> sub_2c3b0a.first\n            elem_9f6850 -> sub_2c3b0a.second\n            ifexpression_e38995.then -> setter_1cedb2.execute\n            setter_1cedb2.new_value -> number_1c8c8d\n            ifexpression_e38995.else -> setter_37db7f.execute\n            setter_37db7f.new_value -> setter_1cedb2.new_value\n            index -> ifexpression_e38995.gen_2\n            ifexpression_e38995.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9c0b5f -> find_6d05b0.items\n        find_6d05b0.item -> number_1c8c4c\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -283, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9c9c4e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) ifexpression_7a7d8e root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0\"\n            }\n            instance(x: 89, y: 29) ifexpression_3f9e4f root.Std_k98ojb.Std.IfExpression {\n                expression: \"elem != index\"\n            }\n            instance(x: 310, y: 35) add_2a8d9f root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) sub_9d8b6c root.Std_k98ojb.Math.Sub {}\n            1 -> add_2a8d9f.second\n            index_9c9c4e -> add_2a8d9f.first\n            0 -> sub_9d8b6c.second\n            elem_9f6850 -> sub_9d8b6c.first\n            index_9c9c4e -> ifexpression_7a7d8e.gen_0\n            ifexpression_7a7d8e.then -> add_2a8d9f.execute\n            ifexpression_7a7d8e.else -> sub_9d8b6c.execute\n            add_2a8d9f.result -> index_9c9c4e\n            sub_9d8b6c.result -> ifexpression_3f9e4f.gen_0\n            ifexpression_3f9e4f.then -> bool_af09a7\n            ifexpression_3f9e4f.else -> ifexpression_7a7d8e.execute\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -155, y: 1, name: \"input\") property(String) input_0\n        out(x: 535, y: -1, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) replace_4d9f7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_0a5b8e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_2b5d1c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4d9f7f.input\n        \" \" -> replace_4d9f7f.search\n        \":\" -> replace_4d9f7f.replace\n        replace_4d9f7f.output -> replace_0a5b8e.input\n        \",\" -> replace_0a5b8e.search\n        \":\" -> replace_0a5b8e.replace\n        replace_0a5b8e.output -> replace_2b5d1c.input\n        \".\" -> replace_2b5d1c.search\n        \":\" -> replace_2b5d1c.replace\n        replace_2b5d1c.output -> output_0\n    }\n\n    \n\n    instance(x: 71, y: 53) replace_chars_9a8f7f root.main.replace_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -128, y: -10, name: \"input\") property(String) input_0\n\n        out(x: 525, y: -12, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: -12) replace_4f1c6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: -12) replace_1f2c1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: -12) replace_3b6c1e root.Std_k98ojb.Strings.Replace {}\n        replace_4f1c6f.input -> replace_1f2c1f.input\n        replace_1f2c1f.input -> replace_3b6c1e.input\n        input_0 -> replace_4f1c6f.input\n        \" \" -> replace_4f1c6f.search\n        \":\" -> replace_4f1c6f.replace\n        \",\" -> replace_1f2c1f.search\n        \":\" -> replace_1f2c1f.replace\n        \".\" -> replace_3b6c1e.search\n        \":\" -> replace_3b6c1e.replace\n        replace_3b6c1e.output -> output_0\n    }\n\n    \n\n    instance(x: 0, y: 0) replace_spaces_commas_dots_3a6c2f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -123, y: -8, name: \"input\") property(String) input_8a3b0a\n\n        out(x: 528, y: -20, name: \"output\") property(String) output_6f7e2d\n\n        instance(x: 0, y: 1) replace_4d6f5d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_5c6e4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_3f5f7d root.Std_k98ojb.Strings.Replace {}\n        input_8a3b0a -> replace_4d6f5d.input\n        \" \" -> replace_4d6f5d.search\n        \":\" -> replace_4d6f5d.replace\n        replace_4d6f5d.output -> replace_5c6e4c.input\n        \",\" -> replace_5c6e4c.search\n        \":\" -> replace_5c6e4c.replace\n        replace_5c6e4c.output -> replace_3f5f7d.input\n        \".\" -> replace_3f5f7d.search\n        \":\" -> replace_3f5f7d.replace\n        replace_3f5f7d.output -> output_6f7e2d\n    }\n\n    \n\n    instance(x: 102, y: -11) replace_spaces_commas_dots_e9c6d1 root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -150, y: 18, name: \"input\") property(String) input_7a5a5a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_3e8f7c\n\n        instance(x: 0, y: 1) replace_7f2c0e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_1d9c93 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_8d8e6f root.Std_k98ojb.Strings.Replace {}\n        input_7a5a5a -> replace_7f2c0e.input\n        \" \" -> replace_7f2c0e.search\n        \":\" -> replace_7f2c0e.replace\n        replace_7f2c0e.output -> replace_1d9c93.input\n        \",\" -> replace_1d9c93.search\n        \":\" -> replace_1d9c93.replace\n        replace_1d9c93.output -> replace_8d8e6f.input\n        \".\" -> replace_8d8e6f.search\n        \":\" -> replace_8d8e6f.replace\n        replace_8d8e6f.output -> output_3e8f7c\n    }\n\n    \n\n    instance(x: 101, y: 52) replace_1d7e6f root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -530, y: 0, name: \"input\") property(String) input_2b3c\n        out(x: 0, y: 100, name: \"output\") property(String) output_2b3c\n\n        instance(x: 0, y: 0) replace_7d4d8e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_3f1c7d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_7b7e9f root.Std_k98ojb.Strings.Replace {}\n        input_2b3c -> replace_7d4d8e.input\n        \" \" -> replace_7d4d8e.search\n        \":\" -> replace_7d4d8e.replace\n        replace_7d4d8e.output -> replace_3f1c7d.input\n        \",\" -> replace_3f1c7d.search\n        \":\" -> replace_3f1c7d.replace\n        replace_3f1c7d.output -> replace_7b7e9f.input\n        \".\" -> replace_7b7e9f.search\n        \":\" -> replace_7b7e9f.replace\n        replace_7b7e9f.output -> output_2b3c\n    }\n\n    \n\n    instance(x: -180, y: 45) replace_chars_9b6c5f root.main.replace_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_1f1b4a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: 76) replace_7d7e2a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: 76) replace_9c7d3b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_1f1b4a.input\n        \" \" -> replace_1f1b4a.search\n        \":\" -> replace_1f1b4a.replace\n        replace_1f1b4a.output -> replace_7d7e2a.input\n        \",\" -> replace_7d7e2a.search\n        \":\" -> replace_7d7e2a.replace\n        replace_7d7e2a.output -> replace_9c7d3b.input\n        \".\" -> replace_9c7d3b.search\n        \":\" -> replace_9c7d3b.replace\n        replace_9c7d3b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_3f6f5e root.main.replace {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -138, y: 4, name: \"input\") property(String) input_1c1c2f\n\n        out(x: 340, y: 70, name: \"output\") property(String) output_1c1c2f\n\n        instance(x: 774, y: 74) replace_1c1c2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 774, y: 38) replace_1c1c2f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 774, y: 2) replace_1c1c2f_3 root.Std_k98ojb.Strings.Replace {}\n        input_1c1c2f -> replace_1c1c2f.input\n        \" \" -> replace_1c1c2f.search\n        \":\" -> replace_1c1c2f.replace\n        replace_1c1c2f.output -> replace_1c1c2f_2.input\n        \",\" -> replace_1c1c2f_2.search\n        \":\" -> replace_1c1c2f_2.replace\n        replace_1c1c2f_2.output -> replace_1c1c2f_3.input\n        \".\" -> replace_1c1c2f_3.search\n        \":\" -> replace_1c1c2f_3.replace\n        replace_1c1c2f_3.output -> output_1c1c2f\n    }\n\n    \n\n    instance(x: -146, y: 33) replace_spaces_commas_dots_1c1c2f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -119, y: -20, name: \"input\") property(String) input_3c5e7d\n\n        out(x: 472, y: -30, name: \"output\") property(String) output_3e7c92\n\n        instance(x: 220, y: -47) replace_9e8d0c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 217, y: 14) replace_5b9c7e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 214, y: 87) replace_8a2d0f root.Std_k98ojb.Strings.Replace {}\n        input_3c5e7d -> replace_9e8d0c.input\n        \" \" -> replace_9e8d0c.search\n        \":\" -> replace_9e8d0c.replace\n        replace_9e8d0c.output -> replace_5b9c7e.input\n        \",\" -> replace_5b9c7e.search\n        \":\" -> replace_5b9c7e.replace\n        replace_5b9c7e.output -> replace_8a2d0f.input\n        \".\" -> replace_8a2d0f.search\n        \":\" -> replace_8a2d0f.replace\n        replace_8a2d0f.output -> output_3e7c92\n    }\n\n    \n\n    instance(x: -90, y: -13) replace_1a5c2c root.main.replace {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -128, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_0d5b1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5e6c7e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_7d8c2e root.Std_k98ojb.Strings.Replace {}\n        replace_0d5b1f.input -> replace_5e6c7e.input\n        replace_5e6c7e.input -> replace_7d8c2e.input\n        input_0 -> replace_0d5b1f.input\n        \" \" -> replace_0d5b1f.search\n        \":\" -> replace_0d5b1f.replace\n        \",\" -> replace_5e6c7e.search\n        \":\" -> replace_5e6c7e.replace\n        \".\" -> replace_7d8c2e.search\n        \":\" -> replace_7d8c2e.replace\n        replace_7d8c2e.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceAll_8b7c6f root.main.replace {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -530, y: 2, name: \"input\") property(String) input_9e\n        out(x: 340, y: 77, name: \"output\") property(String) output_9e\n\n        instance(x: 772, y: 76) replace_3e9c3a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: -54) replace_5b8c2c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: -142) replace_9c4d3c root.Std_k98ojb.Strings.Replace {}\n        input_9e -> replace_3e9c3a.input\n        \" \" -> replace_3e9c3a.search\n        \":\" -> replace_3e9c3a.replace\n        replace_3e9c3a.output -> replace_5b8c2c.input\n        \",\" -> replace_5b8c2c.search\n        \":\" -> replace_5b8c2c.replace\n        replace_5b8c2c.output -> replace_9c4d3c.input\n        \".\" -> replace_9c4d3c.search\n        \":\" -> replace_9c4d3c.replace\n        replace_9c4d3c.output -> output_9e\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_chars_2d4d2e root.main.replace_chars {}\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") same_character {\n        in(x: -316, y: -67, name: \"string\") property(String) string_1d9c73\n\n        out(x: 1113, y: -62, name: \"output\") property(Bool) output_4b6b1d\n\n        instance(x: -161, y: -68) firstitem_8b4b9e root.Std_k98ojb.List.FirstItem {}\n        instance(x: 0, y: -62) lessthan_1f7f5d root.Std_k98ojb.Math.LessThan {}\n        instance(x: 400, y: -63) length_7c1b4f root.Std_k98ojb.List.Length {}\n        instance(x: 658, y: -62) equal_4c3c6f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 862, y: -63) ifexpression_6f1b9c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        instance(x: 1038, y: -63) for_1d9c6d root.Std_k98ojb.Std.For {}\n        instance(x: 1206, y: -62) getat_7d4b6d root.Std_k98ojb.List.GetAt {}\n        string_1d9c73 -> firstitem_8b4b9e.list\n        firstitem_8b4b9e.item -> equal_4c3c6f.left\n        firstitem_8b4b9e.item -> lessthan_1f7f5d.left\n        1 -> lessthan_1f7f5d.right\n        lessthan_1f7f5d.result -> ifexpression_6f1b9c.predicate\n        ifexpression_6f1b9c.value -> output_4b6b1d\n        ifexpression_6f1b9c.then -> for_1d9c6d.reset\n        string_1d9c73 -> getat_7d4b6d.list\n        getat_7d4b6d.itemAtIndex -> ifexpression_6f1b9c.gen_2\n        for_1d9c6d.item -> getat_7d4b6d.index\n        for_1d9c6d.index -> ifexpression_6f1b9c.gen_0\n        equal_4c3c6f.result -> ifexpression_6f1b9c.gen_1\n        equal_4c3c6f.right -> ifexpression_6f1b9c.gen_1\n        string_1d9c73 -> for_1d9c6d.items\n        for_1d9c6d.onItem -> ifexpression_6f1b9c.execute\n        for_1d9c6d.done -> output_4b6b1d\n        length_7c1b4f.list -> for_1d9c6d.items\n        string_1d9c73 -> length_7c1b4f.list\n    }\n\n    \n\n    instance(x: 10, y: -6) same_character_1f1d1f root.main.same_character {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_characters {\n        in(x: -278, y: -74, name: \"input\") property(String) input_8b3c3d\n\n        out(x: 1085, y: -72, name: \"output\") property(Bool) output_6a4c2f\n\n        instance(x: -127, y: -74) characters_6f4c4d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 383, y: -73) map_7c5a7c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 729, y: -72) all_9b6b8c root.Std_k98ojb.Iteration.All {}\n        instance(x: 1004, y: -73) equal_8c8c9d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1257, y: -72) choose_6a5a6b root.Std_k98ojb.Std.Choose {}\n        instance(x: 1533, y: -72) if_8a7a8b root.Std_k98ojb.Std.If {}\n        instance(x: 1719, y: -73) firstitem_7c7c8d root.Std_k98ojb.List.FirstItem {}\n        instance(x: 1905, y: -73) not_6c6c7d root.Std_k98ojb.Logic.Not {}\n        instance(x: 2102, y: -72) orelse_8b8b9c root.Std_k98ojb.Std.OrElse {}\n        instance(x: 2294, y: -73) isempty_5a5a6b root.Std_k98ojb.Strings.IsEmpty {}\n        instance(x: 2490, y: -72) not_6d6d7e root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: 54, y: -10, name: \"current\") property(String) current_7b7b8c\n\n            out(x: 696, y: 17, name: \"output\") property(String) output_8c8c9d\n\n            instance(x: 362, y: 15) firstitem_9b9b8c root.Std_k98ojb.List.FirstItem {}\n            current_7b7b8c -> firstitem_9b9b8c.list\n            firstitem_9b9b8c.item -> output_8c8c9d\n        } -> map_7c5a7c.handler\n        characters_6f4c4d.characters -> map_7c5a7c.items\n        map_7c5a7c.output_list -> all_9b6b8c.items\n        all_9b6b8c.result -> choose_6a5a6b.predicate\n        func() {\n            in(x: -24, y: 31, name: \"current\") property(String) current_8b8b9c\n\n            out(x: 1029, y: 49, name: \"output\") property(Bool) output_9c9c8d\n\n            instance(x: 362, y: 47) equal_7b7b8c root.Std_k98ojb.Logic.Equal {}\n            firstitem_7c7c8d.item -> equal_7b7b8c.left\n            current_8b8b9c -> equal_7b7b8c.right\n            equal_7b7b8c.result -> output_9c9c8d\n        } -> all_9b6b8c.handler\n        choose_6a5a6b.then -> output_6a4c2f\n        choose_6a5a6b.else -> if_8a7a8b.execute\n        if_8a7a8b.predicate -> isempty_5a5a6b.input\n        if_8a7a8b.then -> orelse_8b8b9c.first\n        not_6c6c7d.result -> orelse_8b8b9c.second\n        isempty_5a5a6b.isEmpty -> not_6c6c7d.input\n        characters_6f4c4d.characters -> if_8a7a8b.value\n        not_6d6d7e.result -> if_8a7a8b.predicate\n        isempty_5a5a6b.isEmpty -> not_6d6d7e.input\n        orelse_8b8b9c.value -> if_8a7a8b.else\n    }\n\n    \n\n    instance(x: -119, y: 47) check_characters_9b9b8c root.main.check_characters {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -293, y: -74, name: \"input\") property(String) input_9c1e0d\n\n        out(x: 1223, y: -63, name: \"output\") property(Bool) output_3d8e3e\n\n        instance(x: -88, y: -77) characters_9a1f9d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 226, y: -74) count_7e3b9e root.Std_k98ojb.Std.Count {}\n        instance(x: 480, y: -72) equal_1e2e2c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 741, y: -72) and_3f9a7e root.Std_k98ojb.Logic.And {}\n        instance(x: 1025, y: -73) for_7a3b5d root.Std_k98ojb.Std.For {}\n        instance(x: 1206, y: -73) if_7d7f0d root.Std_k98ojb.Std.If {}\n        instance(x: 1414, y: -72) ifexpression_7f7c2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == previous\"\n        }\n        instance(x: 1395, y: -11) not_9f1f2c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1414, y: 98) if_3f1a7f root.Std_k98ojb.Std.If {}\n        instance(x: 1609, y: 97) getat_3f7f3f root.Std_k98ojb.List.GetAt {}\n        characters_9a1f9d.characters -> count_7e3b9e.items\n        characters_9a1f9d.characters -> for_7a3b5d.items\n        count_7e3b9e.count -> getat_3f7f3f.index\n        count_7e3b9e.count -> if_3f1a7f.predicate\n        count_7e3b9e.count -> getat_3f7f3f.list\n        input_9c1e0d -> characters_9a1f9d.input\n        0 -> count_7e3b9e.reset\n        for_7a3b5d.index -> ifexpression_7f7c2f.gen_0\n        if_7d7f0d.value -> ifexpression_7f7c2f.gen_1\n        for_7a3b5d.item -> ifexpression_7f7c2f.gen_2\n        for_7a3b5d.onItem -> ifexpression_7f7c2f.execute\n        ifexpression_7f7c2f.value -> if_7d7f0d.predicate\n        ifexpression_7f7c2f.value -> and_3f9a7e.left\n        if_7d7f0d.then -> ifexpression_7f7c2f.execute\n        if_7d7f0d.else -> continue_9b7f8d\n        ifexpression_7f7c2f.value -> equal_1e2e2c.left\n        ifexpression_7f7c2f.value -> equal_1e2e2c.right\n        equal_1e2e2c.result -> if_7d7f0d.value\n        for_7a3b5d.done -> continue_9b7f8d\n        getat_3f7f3f.itemAtIndex -> if_3f1a7f.execute\n        if_3f1a7f.then -> not_9f1f2c.execute\n        if_3f1a7f.else -> continue_9b7f8d\n        not_9f1f2c.result -> output_3d8e3e\n        and_3f9a7e.right -> output_3d8e3e\n        ifexpression_7f7c2f.then -> for_7a3b5d.next\n        ifexpression_7f7c2f.else -> continue_9b7f8d\n    }\n\n    \n\n    instance(x: 10, y: -12) check_same_5d3f7f root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_characters {\n        in(x: -279, y: -214, name: \"string\") property(String) string_9f7d0e\n\n        out(x: 1146, y: -210, name: \"output\") property(Bool) output_7c3b1e\n\n        instance(x: -111, y: -215, name: \"only odd indexes\") filter_1e8c6c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 497, y: -211) contains_7e6c0f root.Std_k98ojb.List.Contains {}\n        instance(x: 1008, y: -209) not_1f2b5f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -27, y: -16, name: \"current\") property(String) current_9a9e78\n\n            out(x: 705, y: 51, name: \"output\") property(Bool) output_6b8d9e\n\n            instance(x: 226, y: 56) equal_7f2d8d root.Std_k98ojb.Logic.Equal {}\n            current_9a9e78 -> equal_7f2d8d.left\n            string_9f7d0e -> equal_7f2d8d.right\n            equal_7f2d8d.result -> output_6b8d9e\n        } -> filter_1e8c6c.handler\n        instance(x: -276, y: -214) characters_8f8b4c root.Std_k98ojb.Strings.Characters {}\n        characters_8f8b4c.characters -> filter_1e8c6c.items\n        string_9f7d0e -> characters_8f8b4c.input\n        filter_1e8c6c.output_list -> contains_7e6c0f.list\n        false -> contains_7e6c0f.item\n        not_1f2b5f.result -> output_7c3b1e\n        contains_7e6c0f.is_contained -> not_1f2b5f.input\n    }\n\n    \n\n    instance(x: -57, y: 54) all_characters_7b7e4c root.main.all_characters {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_all_same {\n        in(x: -301, y: -92, name: \"string\") property(String) string_8c6c2d\n\n        out(x: 567, y: -99, name: \"output\") property(Bool) output_5c7e8e\n\n        instance(x: -101, y: -91) length_4d8e0a root.Std_k98ojb.Strings.Length {}\n        instance(x: 210, y: -96) lessthanor_1b1c4e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 350, y: -97) for_4e9f9f root.Std_k98ojb.Std.For {}\n        instance(x: 552, y: -98) equal_1e9b0c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 760, y: -98) and_8f3d6e root.Std_k98ojb.Logic.And {}\n        instance(x: 914, y: -98) if_0e1e9c root.Std_k98ojb.Std.If {}\n        instance(x: 1015, y: -99) ifexpression_9b6b6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == first\"\n        }\n        instance(x: 1097, y: -99) ifexpression_8f8a1d root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0\"\n        }\n        instance(x: 1168, y: -99) getat_0c8f0d root.Std_k98ojb.Strings.GetAt {}\n        length_4d8e0a.length -> lessthanor_1b1c4e.left\n        1 -> lessthanor_1b1c4e.right\n        lessthanor_1b1c4e.result -> if_0e1e9c.predicate\n        string_8c6c2d -> for_4e9f9f.items\n        for_4e9f9f.item -> ifexpression_9b6b6f.gen_2\n        for_4e9f9f.index -> ifexpression_9b6b6f.gen_0\n        ifexpression_8f8a1d.value -> getat_0c8f0d.index\n        ifexpression_8f8a1d.then -> getat_0c8f0d.execute\n        getat_0c8f0d.character -> ifexpression_9b6b6f.gen_1\n        for_4e9f9f.onItem -> ifexpression_9b6b6f.execute\n        ifexpression_9b6b6f.value -> equal_1e9b0c.left\n        ifexpression_9b6b6f.value -> equal_1e9b0c.right\n        equal_1e9b0c.result -> and_8f3d6e.left\n        ifexpression_8f8a1d.value -> and_8f3d6e.right\n        and_8f3d6e.result -> if_0e1e9c.then\n        if_0e1e9c.else -> output_5c7e8e\n        if_0e1e9c.then -> ifexpression_8f8a1d.execute\n        for_4e9f9f.done -> output_5c7e8e\n    }\n\n    \n\n    instance(x: 14, y: 6) check_all_same_4d5e0e root.main.check_all_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") same_char {\n        in(x: -292, y: -26, name: \"input\") property(String) input_9c9c3c\n\n        out(x: 550, y: 19, name: \"output\") property(Bool) output_6c0b7f\n\n        instance(x: -92, y: -24) characters_5b1b9a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 142, y: 16) intersection_5d6e5c root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 366, y: 16) length_3b8f60 root.Std_k98ojb.List.Length {}\n        instance(x: 536, y: 15) equal_9f1d7f root.Std_k98ojb.Logic.Equal {}\n        characters_5b1b9a.characters -> intersection_5d6e5c.left\n        characters_5b1b9a.characters -> intersection_5d6e5c.right\n        length_3b8f60.length -> equal_9f1d7f.left\n        1 -> equal_9f1d7f.right\n        intersection_5d6e5c.intersection -> length_3b8f60.list\n        equal_9f1d7f.result -> output_6c0b7f\n    }\n\n    \n\n    instance(x: -83, y: 68) same_char_8b8b5f root.main.same_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -278, y: -93, name: \"execute\") trigger() execute_6c0e8f\n        in(x: -295, y: 30, name: \"input\") property(String) input_8c1c1c\n\n        out(x: 1218, y: 5, name: \"continue\") trigger() continue_8b5d88\n        out(x: 1218, y: 149, name: \"output\") property(Bool) output_8f8d3e\n\n        instance(x: 754, y: 95) ifexpression_6c0b9a root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == previous\"\n        }\n        getter(x: 337, y: 161, name: \"getter_1a5e4d\") getter_1a5e4d = previous\n        setter(x: 679, y: -317, name: \"setter_7f4f6f\") setter_7f4f6f = previous\n        instance(x: 321, y: -23) for_1d3c0e root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -124, name: \"setter_7f4f6f\") setter_7f4f6f = previous\n        instance(x: -275, y: -39) characters_3a2c2e root.Std_k98ojb.Strings.Characters {}\n        ifexpression_6c0b9a.else -> continue_8b5d88\n        ifexpression_6c0b9a.value -> output_8f8d3e\n        ifexpression_6c0b9a.then -> setter_7f4f6f.execute\n        characters_3a2c2e.characters -> for_1d3c0e.items\n        for_1d3c0e.item -> ifexpression_6c0b9a.gen_2\n        for_1d3c0e.index -> ifexpression_6c0b9a.gen_0\n        getter_1a5e4d.value -> ifexpression_6c0b9a.gen_1\n        for_1d3c0e.onItem -> ifexpression_6c0b9a.execute\n        for_1d3c0e.done -> continue_8b5d88\n        for_1d3c0e.item -> setter_7f4f6f.new_value\n        input_8c1c1c -> characters_3a2c2e.input\n        execute_6c0e8f -> setter_7f4f6f.execute\n        setter_7f4f6f.continue -> for_1d3c0e.reset\n        setter_7f4f6f.continue -> for_1d3c0e.next\n    }\n\n    \n\n    instance(x: 11, y: -180) check_same_5e5f1e root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_same {\n        in(x: -288, y: -87, name: \"input\") property(String) input_2e2b6e\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -275, y: -35) characters_4f9f5e root.Std_k98ojb.Strings.Characters {}\n        instance(x: -278, y: 23) list_9d6b8e root.Std_k98ojb.List.FirstItem {}\n        instance(x: -277, y: 99) list_9d6b8e_1 root.Std_k98ojb.List.FirstItem {}\n        input_2e2b6e -> characters_4f9f5e.input\n        characters_4f9f5e.characters -> list_9d6b8e.list\n        characters_4f9f5e.characters -> intersection_c7c7e6.left\n        list_9d6b8e.item -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_9d6b8e_1.list -> characters_4f9f5e.input\n        list_9d6b8e_1.item -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) all_same_5a9f7c root.main.all_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -275, y: -35, name: \"execute\") trigger() execute_4e6d0d\n        in(x: -273, y: 42, name: \"input\") property(String) input_4a5c2f\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_9d3d1e\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_2c8b9f\n\n        instance(x: 752, y: 93) ifexpression_7b6f5e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_5f3e61\") getter_5f3e61 = previous\n        setter(x: 679, y: -313, name: \"setter_7b6e7e\") setter_7b6e7e = previous\n        instance(x: 321, y: -20) for_7c4d1f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7b6e7e\") setter_6f7e9c = previous\n        instance(x: -275, y: -35) characters_7c6e3e root.Std_k98ojb.Strings.Characters {}\n        ifexpression_7b6f5e.else -> continue_9d3d1e\n        ifexpression_7b6f5e.value -> output_2c8b9f\n        ifexpression_7b6f5e.then -> setter_7b6e7e.execute\n        characters_7c6e3e.characters -> for_7c4d1f.items\n        for_7c4d1f.item -> ifexpression_7b6f5e.gen_2\n        for_7c4d1f.index -> ifexpression_7b6f5e.gen_0\n        getter_5f3e61.value -> ifexpression_7b6f5e.gen_1\n        for_7c4d1f.onItem -> ifexpression_7b6f5e.execute\n        for_7c4d1f.done -> continue_9d3d1e\n        for_7c4d1f.item -> setter_7b6e7e.new_value\n        input_4a5c2f -> characters_7c6e3e.input\n        execute_4e6d0d -> setter_6f7e9c.execute\n        setter_6f7e9c.continue -> for_7c4d1f.reset\n        setter_7b6e7e.continue -> for_7c4d1f.next\n    }\n\n    \n\n    instance(x: 10, y: -177) check_same_3c7f1d root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -295, y: -40, name: \"input\") property(String) input_7a9b9e\n\n        out(x: 554, y: 23, name: \"output\") property(Bool) output_7c8b7f\n\n        instance(x: -111, y: -40) characters_7d7c5d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 145, y: 23) allroot.Std_k98ojb.Iteration.Filter {}\n        instance(x: 351, y: 23) equal_9c4b3f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 547, y: 23) not_9d7d6c root.Std_k98ojb.Logic.Not {}\n        instance(x: 359, y: -42) firstitem_1f7e9c root.Std_k98ojb.List.FirstItem {}\n        instance(x: 551, y: -42) notroot.Std_k98ojb.Logic.Not {}\n        characters_7d7c5d.characters -> allroot.Std_k98ojb.Iteration.Filter.items\n        func() {\n            in(x: -29, y: 39, name: \"current\") property(String) current_0f9f2f\n\n            out(x: 391, y: 47, name: \"output\") property(Bool) output_6a5d7c\n\n            instance(x: 241, y: 47) equal_6e1e4e root.Std_k98ojb.Logic.Equal {}\n            current_0f9f2f -> equal_6e1e4e.left\n            firstitem_1f7e9c.item -> equal_6e1e4e.right\n            equal_6e1e4e.result -> output_6a5d7c\n        } -> allroot.Std_k98ojb.Iteration.Filter.handler\n        notroot.Std_k98ojb.Logic.Not.result -> output_7c8b7f\n        allroot.Std_k98ojb.Iteration.Filter.output_list -> notroot.Std_k98ojb.Logic.Not.input\n        input_7a9b9e -> characters_7d7c5d.input\n        input_7a9b9e -> firstitem_1f7e9c.list\n        not_9d7d6c.result -> notroot.Std_k98ojb.Logic.Not.input\n        allroot.Std_k98ojb.Iteration.Filter.output_list -> not_9d7d6c.input\n    }\n\n    \n\n    instance(x: -12, y: 72) check_same_9b3d7d root.main.check_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) string_to_chars root.Std_k98ojb.Strings.Characters {}\n        string_ai -> string_to_chars.input\n        instance(x: 0, y: 0) count_1 root.Std_k98ojb.Std.Count {\n            iterations: 0\n        }\n        string_to_chars.characters -> count_1.items\n        instance(x: 0, y: 0) if_expression root.Std_k98ojb.Std.IfExpression {\n            expression: \"it.isNumeric\"\n        }\n        string_to_chars.characters -> if_expression.gen_0\n        count_1.count -> count_1.count\n        if_expression.value -> count_1.trigger\n        count_1.onCount -> count_1.count\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration\n        count_1.done -> count_1.done\n        count_1.interation -> count_1.interation\n        count_1.onCount -> count_1.onCount\n        count_1.iteration -> count_1.iteration",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 0) string_contains_node root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) count_4d5f8f root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) string_characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) ifexpression_9c3d5a root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: 0) math_add_node root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) std_call_function_node root.Std_k98ojb.Std.CallFunction {}\n\n        input_ai -> string_characters_node.input\n        string_characters_node.characters -> count_4d5f8f.items\n        string_characters_node.characters -> std_call_function_node.inputs\n        count_4d5f8f.onCount -> std_call_function_node.execute\n        std_call_function_node.outputs -> std_call_function_node.outputs\n        std_call_function_node.outputs -> math_add_node.first\n        0 -> math_add_node.second\n        math_add_node.result -> count_4d5f8f.iterations\n        count_4d5f8f.onCount -> count_4d5f8f.onCount\n        count_4d5f8f.onCount -> ifexpression_9c3d5a.execute\n        ifexpression_9c3d5a.expression: \"it != null\"\n        ifexpression_9c3d5a.then -> std_call_function_node.execute\n        ifexpression_9c3d5a.else -> count_4d5f8f.done\n        std_call_function_node.handler -> is_numeric_node\n        std_call_function_node.inputs -> is_numeric_node.input\n        is_numeric_node.isNumeric -> ifexpression_9c3d5a.gen_0\n        count_4d5f8f.done -> output_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) string_chars_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> string_chars_node.input\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {\n            iterations: 0\n        }\n        string_chars_node.characters -> count_node.onCount\n        instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        count_node.iteration -> is_numeric_node.input\n        is_numeric_node.isNumeric -> count_node.count\n        count_node.done -> result_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_5c0a6e root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Iteration.Filter {\n            handler: \"Strings.IsNumeric(it)\"\n        }\n        input_ai -> count_node.items\n        count_node.output_list -> result_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_7d9c5a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) string_characters_node root.Std_k98ojb.Strings.Characters {}\n        string_ai -> string_characters_node.input\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {}\n        string_characters_node.characters -> count_node.items\n        instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        count_node.onCount -> is_numeric_node.execute\n        is_numeric_node.input -> is_numeric_node.input\n        is_numeric_node.isNumeric -> count_node.count\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.interation\n        count_node.onCount -> count_node.onCount\n        count_node.iterations -> count_node.iterations\n        count_node.done -> count_node.done\n        count_node.interation -> count_node.inter",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) string_split_node root.Std_k98ojb.Strings.Characters {}\n        string_ai -> string_split_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it >= '0' && it <= '9'\"\n        }\n        string_split_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n\n    \n    instance(x: -51, y: -28, name: \"count_digits\") count_digits_9d4d6e root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) std_for_node root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) std_if_node root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) std_count_node root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) std_ifexpr_node root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 0, y: 0) std_string_char_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) std_string_isnumeric_node root.Std_k98ojb.Strings.IsNumeric {}\n\n        input_ai -> std_string_char_node.input\n        std_string_char_node.characters -> std_for_node.items\n        std_for_node.trigger -> std_for_node.trigger\n        std_for_node.reset -> std_count_node.reset\n        std_for_node.done -> std_if_node.input\n        std_for_node.on_item -> std_ifexpr_node.execute\n        std_for_node.item -> std_ifexpr_node.gen_0\n        std_ifexpr_node.expression: \"it.IsNumeric\"\n        std_ifexpr_node.value -> std_if_node.then\n        std_if_node.else -> std_count_node.count\n        std_count_node.iterations -> 1\n        std_count_node.on_count -> std_count_node.on_count\n        std_count_node.done -> std_for_node.next\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count_node.interation -> std_count_node.interation\n        std_count",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) string_split_node root.Std_k98ojb.Strings.Characters {}\n        string_ai -> string_split_node.input\n        instance(x: 0, y: 0) string_filter_node root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        string_split_node.characters -> string_filter_node.list\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {\n            iterations: 0\n        }\n        string_filter_node.result -> count_node.onCount\n        count_node.iteration -> count_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"value\") property(String) value_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) string_to_list_node root.Std_k98ojb.Strings.Characters {}\n        value_ai -> string_to_list_node.input\n        instance(x: 0, y: 0) count_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: {\n                in(x: 0, y: 0, name: \"item\") property(Any) item_ai\n                out(x: 0, y: 0, name: \"output\") property(Bool) output_ai\n\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item_ai -> is_numeric_node.input\n                is_numeric_node.isNumeric -> output_ai\n            }\n        }\n        string_to_list_node.characters -> count_digits_node.items\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_node.output_list -> list_length_node.list\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) is_numeric_1 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: 0) count_1 root.Std_k98ojb.Std.Count {\n            iterations: 100\n        }\n        instance(x: 0, y: 0) if_expression_1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"is_numeric_1.isNumeric\"\n        }\n        instance(x: 0, y: 0) count_2 root.Std_k98ojb.Std.Count {\n            iterations: 100\n        }\n        instance(x: 0, y: 0) if_expression_2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"!is_numeric_1.isNumeric\"\n        }\n        instance(x: 0, y: 0) substr_1 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_2 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_3 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_4 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_5 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_6 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_7 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_8 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_9 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_10 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_11 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_12 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_13 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_14 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_15 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_16 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_17 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_18 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_19 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_20 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_21 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_22 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_23 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_24 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_25 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_26 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_27 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_28 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_29 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_30 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_31 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_32 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_33 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_34 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_35 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_36 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_37 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_38 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_39 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_40 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_41 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_42 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_43 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_44 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_45 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_46 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_47 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_48 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_49 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_50 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_51 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_52 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_53 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_54 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_55 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_56 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_57 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_58 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_59 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_60 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_61 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_62 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_63 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_64 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_65 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_66 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_67 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_68 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_69 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_70 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_71 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_72 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 0, y: 0) substr_73 root.Std_k98ojb.Strings"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth {\n        in(x: -285, y: -287, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_1e1b49 root.Std_k98ojb.Math.Pow {}\n        instance(x: 303, y: 2) expression_1b6f5c root.Std_k98ojb.Math.Expression {\n            expression: \"n * (n+1)/2\"\n        }\n        instance(x: 303, y: 2) for_9c2c3e root.Std_k98ojb.Std.For {}\n        instance(x: 303, y: 2) add_3e5d3e root.Std_k98ojb.Math.Add {}\n        data_instance(x: 394, y: -339) data_3c713b  = [sum]\n        instance(x: 303, y: 2) sum_2e6a8d root.Std_k98ojb.Iteration.Reduce {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_1e1b49.x\n        4 -> pow_1e1b49.y\n        pow_1e1b49.result -> add_3e5d3e.second\n        expression_1b6f5c.result -> add_3e5d3e.first\n        add_3e5d3e.result -> sum_2e6a8d.accumulator\n        0 -> sum_2e6a8d.initial\n        for_9c2c3e.items -> sum_2e6a8d.items\n        for_9c2c3e.reset -> for_9c2c3e.trigger\n        expression_1b6f5c.result -> for_9c2c3e.items\n        for_9c2c3e.next -> for_9c2c3e.trigger\n        sum_2e6a8d.result -> data_3c713b.sum\n        data_3c713b -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_f15bad root.main.sum_fourth {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power {\n        in(x: -281, y: 49, name: \"n\") property(Number) n_3d5c4d\n\n        out(x: 585, y: 0, name: \"sum\") property(Number) sum_4a2f2f\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        instance(x: 13, y: 0) mul_3b9e7c root.Std_k98ojb.Math.Mul {}\n        instance(x: 15, y: 135) mul_2f9d4a root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3d5c4d -> mul_f892a4.first\n        n_3d5c4d -> expression_2d6da6.gen_0\n        div_64046c.result -> mul_3b9e7c.first\n        div_64046c.result -> mul_2f9d4a.first\n        mul_3b9e7c.result -> mul_2f9d4a.second\n        mul_2f9d4a.result -> sum_4a2f2f\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_1e4c3d root.main.fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -285, y: -285, name: \"n\") property(Number) n_5f8c3c\n\n        out(x: 758, y: -7, name: \"sum\") property(Number) sum_3a2f7e\n\n        instance(x: 21, y: -1) pow_9f4c6f root.Std_k98ojb.Math.Pow {}\n        instance(x: 11, y: 138) expression_2c5c6e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 301, y: 2) add_2b7d4f root.Std_k98ojb.Math.Add {}\n        instance(x: 23, y: -1) mul_f7e6d6 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 329, y: 133) data_2a3a8c  = 3\n        instance(x: 12, y: 136) expression_1c2f3f root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_7c7a2c root.Std_k98ojb.Math.Div {}\n        data_2a3a8c -> div_7c7a2c.second\n        mul_f7e6d6.result -> div_7c7a2c.first\n        expression_1c2f3f.result -> mul_f7e6d6.second\n        n_5f8c3c -> mul_f7e6d6.first\n        n_5f8c3c -> expression_1c2f3f.gen_0\n        div_7c7a2c.result -> add_2b7d4f.first\n        pow_9f4c6f.result -> add_2b7d4f.second\n        expression_2c5c6e.result -> pow_9f4c6f.second\n        n_5f8c3c -> expression_2c5c6e.gen_0\n        pow_9f4c6f.first -> 4\n        add_2b7d4f.result -> sum_3a2f7e\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_3e7a2c root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -349, y: -0, name: \"n\") property(Number) n_7f5f9c\n\n        out(x: 771, y: -1, name: \"sum\") property(Number) sum_2e7f3f\n\n        instance(x: 12, y: 136) expression_4a2b1e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) pow_6b7d9c root.Std_k98ojb.Math.Pow {}\n        instance(x: 303, y: 2) div_4f8c1c root.Std_k98ojb.Math.Div {}\n        instance(x: 330, y: 133) data_instance_5f5d2c  = 4\n        instance(x: 46, y: -383, name: \"sum\") expression_9e9e2e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (n+1)*(2*n+1)*(3*n*n+3*n-1)/30\"\n        }\n        data_instance_5f5d2c -> pow_6b7d9c.y\n        expression_4a2b1e.result -> pow_6b7d9c.x\n        pow_6b7d9c.result -> div_4f8c1c.first\n        n_7f5f9c -> div_4f8c1c.second\n        div_4f8c1c.result -> sum_2e7f3f\n        n_7f5f9c -> expression_4a2b1e.gen_0\n        n_7f5f9c -> expression_9e9e2e.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_7e3b6f root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the sum of fourth power of first n odd natural numbers.\") sum_fourth {\n        in(x: -341, y: -288, name: \"n\") property(Number) n_7b3a7f\n\n        out(x: 752, y: -5, name: \"sum\") property(Number) sum_7e8e1d\n\n        instance(x: 17, y: -7) mul_8e7b3e root.Std_k98ojb.Math.Mul {}\n        instance(x: 24, y: 140) mul_1b1c4d root.Std_k98ojb.Math.Mul {}\n        instance(x: 301, y: 2) div_6a4e2f root.Std_k98ojb.Math.Div {}\n        instance(x: 12, y: 136) expression_5c1e9e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 330, y: 133) data_instance_7e6b1e  = 4\n        instance(x: 330, y: 133) data_instance_3e5d0c  = 3\n        n_7b3a7f -> expression_5c1e9e.gen_0\n        n_7b3a7f -> mul_8e7b3e.first\n        expression_5c1e9e.result -> mul_8e7b3e.second\n        data_instance_7e6b1e -> mul_1b1c4d.first\n        mul_8e7b3e.result -> mul_1b1c4d.second\n        mul_1b1c4d.result -> div_6a4e2f.first\n        data_instance_3e5d0c -> div_6a4e2f.second\n        div_6a4e2f.result -> sum_7e8e1d\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_3a8b0c root.main.sum_fourth {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -292, y: 46, name: \"n\") property(Number) n_7a8b9c\n\n        out(x: 760, y: 4, name: \"sum\") property(Number) sum_7d9f7e\n\n        instance(x: 12, y: 148, name: \"fourth power\") pow_5a1e3c root.Std_k98ojb.Math.Pow {}\n        instance(x: 12, y: 148) expression_5e7d2e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_1b6b5e root.Std_k98ojb.Math.Add {}\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_8f6f7b  = 3\n        expression_5e7d2e.result -> pow_5a1e3c.first\n        4 -> pow_5a1e3c.second\n        pow_5a1e3c.result -> add_1b6b5e.second\n        add_1b6b5e.result -> mul_f892a4.second\n        n_7a8b9c -> mul_f892a4.first\n        n_7a8b9c -> expression_5e7d2e.gen_0\n        data_8f6f7b -> add_1b6b5e.first\n        mul_f892a4.result -> n_7a8b9c\n        add_1b6b5e.result -> sum_7d9f7e\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power {\n        in(x: -340, y: 23, name: \"n\") property(Number) n_9d3e2c\n\n        out(x: 738, y: -6, name: \"sum\") property(Number) sum_7f2c1d\n\n        instance(x: 15, y: 19) pow_6d1c6c root.Std_k98ojb.Math.Pow {}\n        instance(x: 9, y: 64) mul_3c3f8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 9, y: 139) expression_1a7c5e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 310, y: 1) div_6b7c9c root.Std_k98ojb.Math.Div {}\n        instance(x: 21, y: 101) count_3a2a0e root.Std_k98ojb.Std.Count {}\n        data_instance(x: 335, y: 130) data_7f2c1d  = 3\n        data_instance(x: 326, y: 2) data_4e7c7c  = 2\n        instance(x: 17, y: 46) add_7a3c1d root.Std_k98ojb.Math.Add {}\n        n_9d3e2c -> count_3a2a0e.reset\n        count_3a2a0e.count -> pow_6d1c6c.y\n        expression_1a7c5e.result -> pow_6d1c6c.x\n        pow_6d1c6c.result -> mul_3c3f8f.second\n        pow_6d1c6c.result -> add_7a3c1d.second\n        mul_3c3f8f.result -> add_7a3c1d.first\n        data_7f2c1d -> mul_3c3f8f.first\n        data_4e7c7c -> div_6b7c9c.second\n        add_7a3c1d.result -> sum_7f2c1d\n        expression_1a7c5e.gen_0 -> count_3a2a0e.gen_0\n        n_9d3e2c -> expression_1a7c5e.gen_0\n        count_3a2a0e.count -> div_6b7c9c.first\n        div_6b7c9c.result -> sum_7f2c1d\n    }\n\n    \n\n    instance(x: -111, y: 168) fourth_power_7b7d2f root.main.fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: -0, name: \"n\") property(Number) n_2c2e51\n\n        out(x: 756, y: -1, name: \"output\") property(Number) output_7c5f81\n\n        instance(x: 0, y: 0) for_8d0c9c root.Std_k98ojb.Std.For {}\n        instance(x: 62, y: -226, name: \"sum\") data_instance(x: 394, y: -339) data_3c713b  = 0\n        instance(x: 12, y: 136, name: \"fourth_power\") expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"n*n*n*n\"\n        }\n        instance(x: 303, y: 2, name: \"add\") add_64046c root.Std_k98ojb.Math.Add {}\n        instance(x: 23, y: -1, name: \"odd\") expression_f892a4 root.Std_k98ojb.Math.Expression {\n            expression: \"2*n-1\"\n        }\n        n_2c2e51 -> for_8d0c9c.items\n        for_8d0c9c.on_item -> expression_f892a4.gen_0\n        for_8d0c9c.on_item -> expression_2d6da6.gen_0\n        for_8d0c9c.on_item -> add_64046c.second\n        expression_f892a4.result -> for_8d0c9c.item\n        expression_2d6da6.result -> add_64046c.first\n        data_3c713b -> add_64046c.first\n        add_64046c.result -> data_3c713b\n        for_8d0c9c.done -> output_7c5f81\n        data_3c713b -> output_7c5f81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_9c7d7f root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -280, y: 45, name: \"n\") property(Number) n_8c5c6f\n\n        out(x: 580, y: -8, name: \"sum\") property(Number) sum_1c4c5d\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) pow_2e5a7d root.Std_k98ojb.Math.Pow {}\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        instance(x: 330, y: 133) data_instance_7b9d1f  = 4\n        instance(x: 46, y: -383, name: \"sum\") expression_5f4c8c root.Std_k98ojb.Math.Expression {\n            expression: \"sum+pow\"\n        }\n        data_instance_7b9d1f -> pow_2e5a7d.y\n        expression_2d6da6.result -> pow_2e5a7d.x\n        pow_2e5a7d.result -> expression_5f4c8c.pow\n        n_8c5c6f -> div_64046c.second\n        n_8c5c6f -> expression_2d6da6.gen_0\n        0 -> expression_5f4c8c.sum\n        div_64046c.result -> sum_1c4c5d\n        expression_5f4c8c.result -> div_64046c.first\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_7e5f3f root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = [sum]\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (2*n*n-1) * (2*n*n-1)\"\n        }\n        data_3c713b -> output_ebef81\n        n_c88d35 -> expression_634b7e.gen_0\n        expression_634b7e.result -> data_3c713b.sum\n    }\n\n    \n\n    instance(x: -81, y: 159) fourth_power_f15bad root.main.fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -118, y: -61, name: \"size\") property(Number) size_9b2b67\n\n        out(x: 102, y: -30, name: \"area\") property(Number) area_7b6b1d\n\n        instance(x: 26, y: -2) mul_5b6c94 root.Std_k98ojb.Math.Mul {}\n        instance(x: 27, y: 38) mul_3f6d1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 30, y: 92) mul_6f9f65 root.Std_k98ojb.Math.Mul {}\n        instance(x: 24, y: 140) mul_5a4f3d root.Std_k98ojb.Math.Mul {}\n        6 -> mul_5b6c94.first\n        size_9b2b67 -> mul_5b6c94.second\n        mul_5b6c94.result -> mul_3f6d1f.first\n        size_9b2b67 -> mul_3f6d1f.second\n        mul_3f6d1f.result -> mul_6f9f65.first\n        size_9b2b67 -> mul_6f9f65.second\n        mul_6f9f65.result -> mul_5a4f3d.first\n        1 -> mul_5a4f3d.second\n        mul_5a4f3d.result -> area_7b6b1d\n    }\n\n    \n\n    instance(x: 113, y: -34) surface_area_6c3e2f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -193, y: -41, name: \"size\") property(Number) size_3c3c5c\n\n        out(x: 109, y: -38, name: \"area\") property(Number) area_6b4c2f\n\n        instance(x: 21, y: -4) mul_6f4c4d root.Std_k98ojb.Math.Mul {}\n        instance(x: 12, y: 11) mul_7c5b54 root.Std_k98ojb.Math.Mul {}\n        instance(x: 9, y: 41) mul_1d4c9f root.Std_k98ojb.Math.Mul {}\n        6 -> mul_6f4c4d.first\n        size_3c3c5c -> mul_6f4c4d.second\n        size_3c3c5c -> mul_7c5b54.first\n        size_3c3c5c -> mul_1d4c9f.first\n        mul_6f4c4d.result -> mul_7c5b54.second\n        mul_7c5b54.result -> mul_1d4c9f.second\n        mul_1d4c9f.result -> area_6b4c2f\n    }\n\n    \n\n    instance(x: 105, y: 66) surface_area_6c8d7f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -113, y: -80, name: \"size\") property(Number) size_7d5d8c\n\n        out(x: 650, y: -67, name: \"surface area\") property(Number) surface_area_3a2f7e\n\n        instance(x: 92, y: -22) mul_9d4c6f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -104) mul_9e9f3d root.Std_k98ojb.Math.Mul {}\n        6 -> mul_9d4c6f.first\n        size_7d5d8c -> mul_9d4c6f.second\n        mul_9d4c6f.result -> mul_9e9f3d.first\n        size_7d5d8c -> mul_9e9f3d.second\n        mul_9e9f3d.result -> surface_area_3a2f7e\n    }\n\n    \n\n    instance(x: -93, y: 45) cube_surface_area_9e5e4c root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -115, y: -54, name: \"size\") property(Number) size_7b5d50\n\n        out(x: 107, y: 12, name: \"area\") property(Number) area_7c3b1e\n\n        instance(x: 10, y: -12) mul_8c7f0e root.Std_k98ojb.Math.Mul {}\n        instance(x: 9, y: 28) mul_8d9c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 5, y: 58) mul_8e6b7e root.Std_k98ojb.Math.Mul {}\n        size_7b5d50 -> mul_8c7f0e.first\n        size_7b5d50 -> mul_8d9c8f.first\n        6 -> mul_8e6b7e.first\n        2 -> mul_8e6b7e.second\n        mul_8e6b7e.result -> mul_8c7f0e.second\n        mul_8e6b7e.result -> mul_8d9c8f.second\n        mul_8c7f0e.result -> mul_8d9c8f.first\n        mul_8d9c8f.result -> area_7c3b1e\n    }\n\n    \n\n    instance(x: 132, y: 42) cube_surface_area_8e3d6e root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -103, y: -40, name: \"size\") property(Number) size_6c9d2e\n\n        out(x: 100, y: -10, name: \"surface area\") property(Number) surface_area_3f9c5d\n\n        instance(x: 0, y: -27) mul_2e3c5c root.Std_k98ojb.Math.Mul {}\n        6 -> mul_2e3c5c.first\n        size_6c9d2e -> mul_2e3c5c.second\n        instance(x: 50, y: -14) mul_4c2d7c root.Std_k98ojb.Math.Mul {}\n        mul_2e3c5c.result -> mul_4c2d7c.first\n        size_6c9d2e -> mul_4c2d7c.second\n        mul_4c2d7c.result -> surface_area_3f9c5d\n    }\n\n    \n\n    instance(x: 104, y: 56) cube_surface_area_6c5e3f root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -1013, y: -103, name: \"side\") property(Number) side_9b7cbb\n\n        out(x: -68, y: -11, name: \"area\") property(Number) area_5d6f82\n\n        instance(x: -731, y: -89) mul_9c1b9f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -461, y: -145) data_7f9b08  = 6\n        side_9b7cbb -> mul_9c1b9f.first\n        data_7f9b08 -> mul_9c1b9f.second\n        mul_9c1b9f.result -> area_5d6f82\n    }\n\n    \n\n    instance(x: 184, y: 228) surface_area_4e5e1d root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -103, y: -42, name: \"side\") property(Number) side_1c9b3e\n\n        out(x: 109, y: -2, name: \"surface area\") property(Number) surface_area_7b2c1c\n\n        instance(x: 15, y: -19) mul_6d1c6c root.Std_k98ojb.Math.Mul {}\n        instance(x: 85, y: 1) mul_7b1e6d root.Std_k98ojb.Math.Mul {}\n        instance(x: 153, y: 0) mul_6d0d7d root.Std_k98ojb.Math.Mul {}\n        side_1c9b3e -> mul_6d1c6c.first\n        side_1c9b3e -> mul_6d1c6c.second\n        mul_6d1c6c.result -> mul_7b1e6d.first\n        6 -> mul_7b1e6d.second\n        mul_7b1e6d.result -> mul_6d0d7d.first\n        side_1c9b3e -> mul_6d0d7d.second\n        mul_6d0d7d.result -> surface_area_7b2c1c\n    }\n\n    \n\n    instance(x: 229, y: 34) surface_area_1e9b7e root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -242, y: -65, name: \"size\") property(Number) size_3d5e7d\n\n        out(x: 492, y: -9, name: \"surface area\") property(Number) surface_area_7c5f81\n\n        instance(x: 18, y: -10) mul_8d9c9c root.Std_k98ojb.Math.Mul {}\n        instance(x: 330, y: 135) data_instance_7e7e3e  = 6\n        instance(x: 306, y: 2) mul_8f2d0f root.Std_k98ojb.Math.Mul {}\n        size_3d5e7d -> mul_8f2d0f.first\n        size_3d5e7d -> mul_8d9c9c.first\n        data_instance_7e7e3e -> mul_8f2d0f.second\n        data_instance_7e7e3e -> mul_8d9c9c.second\n        mul_8f2d0f.result -> mul_8d9c9c.second\n        mul_8d9c9c.result -> surface_area_7c5f81\n    }\n\n    \n\n    instance(x: 107, y: -35) cube_surface_area_9e3d1f root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -112, y: -45, name: \"side\") property(Number) side_3d9c0c\n\n        out(x: 666, y: -19, name: \"area\") property(Number) area_1f1c8c\n\n        instance(x: 104, y: -32) mul_4d7f9d root.Std_k98ojb.Math.Mul {}\n        instance(x: 104, y: -85) mul_5f3e81 root.Std_k98ojb.Math.Mul {}\n        instance(x: 104, y: -139) mul_6f5e1e root.Std_k98ojb.Math.Mul {}\n        instance(x: 104, y: -193) mul_7c1f0f root.Std_k98ojb.Math.Mul {}\n        6 -> mul_4d7f9d.first\n        side_3d9c0c -> mul_4d7f9d.second\n        side_3d9c0c -> mul_5f3e81.first\n        side_3d9c0c -> mul_5f3e81.second\n        mul_4d7f9d.result -> mul_6f5e1e.first\n        mul_5f3e81.result -> mul_6f5e1e.second\n        mul_6f5e1e.result -> mul_7c1f0f.first\n        1 -> mul_7c1f0f.second\n        mul_7c1f0f.result -> area_1f1c8c\n    }\n\n    \n\n    instance(x: 112, y: 53) surface_area_6c1b1f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -281, y: -193, name: \"side\") property(Number) side_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"area\") property(Number) area_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) mul_1d5b1c root.Std_k98ojb.Math.Mul {}\n        instance(x: -15, y: -114) mul_7a2e4f root.Std_k98ojb.Math.Mul {}\n        instance(x: 93, y: -114) mul_9c4f73 root.Std_k98ojb.Math.Mul {}\n        side_9f7759 -> mul_1d5b1c.first\n        side_9f7759 -> mul_1d5b1c.second\n        mul_1d5b1c.result -> mul_7a2e4f.first\n        6 -> mul_7a2e4f.second\n        mul_7a2e4f.result -> mul_9c4f73.first\n        side_9f7759 -> mul_9c4f73.second\n        mul_9c4f73.result -> area_b2508f\n        execute_12bf99 -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_9f8f5e root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -331, y: -22, name: \"list\") property(List) list_1d9b8d\n\n        out(x: 446, y: 7, name: \"difference\") property(Number) difference_4e5b0d\n\n        instance(x: -91, y: -22) max_4a9e1e root.Std_k98ojb.List.Max {}\n        instance(x: -88, y: 163) min_1e1e3e root.Std_k98ojb.List.Min {}\n        instance(x: 186, y: 7) sub_9f0b6e root.Std_k98ojb.Math.Sub {}\n        list_1d9b8d -> max_4a9e1e.items\n        list_1d9b8d -> min_1e1e3e.items\n        max_4a9e1e.max -> sub_9f0b6e.first\n        min_1e1e3e.min -> sub_9f0b6e.second\n        sub_9f0b6e.result -> difference_4e5b0d\n    }\n\n    \n\n    instance(x: 26, y: -16) diff_max_min_7e9c8c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -31, y: -34, name: \"list\") property(List) list_4d5c4d\n\n        out(x: 536, y: 55, name: \"difference\") property(Number) difference_4a2f2f\n\n        instance(x: -280, y: -10) max_f4c4d2 root.Std_k98ojb.List.Max {}\n        instance(x: -270, y: -181) min_7c5a54 root.Std_k98ojb.List.Min {}\n        instance(x: 204, y: 56) sub_1a9b6f root.Std_k98ojb.Math.Sub {}\n        list_4d5c4d -> max_f4c4d2.items\n        list_4d5c4d -> min_7c5a54.items\n        max_f4c4d2.max -> sub_1a9b6f.first\n        min_7c5a54.min -> sub_1a9b6f.second\n        sub_1a9b6f.result -> difference_4a2f2f\n    }\n\n    \n\n    instance(x: 40, y: -9) diff_max_min_5c3c6d root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -333, y: -18, name: \"list\") property(List) list_5f8c3a\n\n        out(x: 437, y: 63, name: \"difference\") property(Number) difference_3a2f7a\n\n        instance(x: -72, y: 155, name: \"max\") list_max_5c6f6c root.Std_k98ojb.List.Max {}\n        instance(x: 188, y: 62) sub_4c6b1c root.Std_k98ojb.Math.Sub {}\n        instance(x: -72, y: -375, name: \"min\") list_min_6b1d4f root.Std_k98ojb.List.Min {}\n        list_5f8c3a -> list_max_5c6f6c.items\n        list_5f8c3a -> list_min_6b1d4f.items\n        list_max_5c6f6c.max -> sub_4c6b1c.first\n        list_min_6b1d4f.min -> sub_4c6b1c.second\n        sub_4c6b1c.result -> difference_3a2f7a\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_4b7b49 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -37, y: -24, name: \"list\") property(List) list_7a1e0f\n\n        out(x: 442, y: 49, name: \"difference\") property(Number) difference_7c6b1e\n\n        instance(x: 166, y: 47) sub_8c7f0e root.Std_k98ojb.Math.Sub {}\n        instance(x: -305, y: -31) max_5d8f8c root.Std_k98ojb.List.Max {}\n        instance(x: -306, y: 139) min_7d8e6f root.Std_k98ojb.List.Min {}\n        list_7a1e0f -> max_5d8f8c.items\n        list_7a1e0f -> min_7d8e6f.items\n        max_5d8f8c.max -> sub_8c7f0e.first\n        min_7d8e6f.min -> sub_8c7f0e.second\n        sub_8c7f0e.result -> difference_7c6b1e\n    }\n\n    \n\n    instance(x: 49, y: 11) diff_1e5f4d root.main.diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff {\n        in(x: -286, y: -236, name: \"list\") property(List) list_8b6c2d\n\n        out(x: 440, y: -223, name: \"difference\") property(Number) difference_5f7f0f\n\n        instance(x: 26, y: -234) max_3d4f2e root.Std_k98ojb.List.Max {}\n        instance(x: 26, y: -457) min_2d7e1f root.Std_k98ojb.List.Min {}\n        instance(x: 201, y: -217) sub_1c1d2d root.Std_k98ojb.Math.Sub {}\n        list_8b6c2d -> max_3d4f2e.items\n        list_8b6c2d -> min_2d7e1f.items\n        max_3d4f2e.max -> sub_1c1d2d.first\n        min_2d7e1f.min -> sub_1c1d2d.second\n        sub_1c1d2d.result -> difference_5f7f0f\n    }\n\n    \n\n    instance(x: 40, y: -63) diff_4d1f7c root.main.diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -293, y: -228, name: \"list\") property(List) list_9c3c2e\n\n        out(x: 443, y: -219, name: \"difference\") property(Number) difference_5d6f2f\n\n        instance(x: -38, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: -38, y: -520) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: -219) sub_9d7f0a root.Std_k98ojb.Math.Sub {}\n        list_9c3c2e -> list_max_node.items\n        list_9c3c2e -> list_min_node.items\n        list_max_node.max -> sub_9d7f0a.first\n        list_min_node.min -> sub_9d7f0a.second\n        sub_9d7f0a.result -> difference_5d6f2f\n    }\n\n    \n\n    instance(x: 48, y: -37) diff_7e8d1e root.main.diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_9d3e2c\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_7b2c1c\n\n        instance(x: -62, y: 155, name: \"Max\") max_5a5b4f root.Std_k98ojb.List.Max {}\n        instance(x: -64, y: -377, name: \"Min\") min_9b2f9d root.Std_k98ojb.List.Min {}\n        instance(x: 201, y: 62, name: \"Sub\") sub_1a2b8d root.Std_k98ojb.Math.Sub {}\n        list_9d3e2c -> max_5a5b4f.items\n        list_9d3e2c -> min_9b2f9d.items\n        max_5a5b4f.max -> sub_1a2b8d.first\n        min_9b2f9d.min -> sub_1a2b8d.second\n        sub_1a2b8d.result -> output_7b2c1c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_5e2c4e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -298, y: -19, name: \"list\") property(List) list_6a5c2e\n\n        out(x: 448, y: 37, name: \"difference\") property(Number) difference_3e2c5d\n\n        instance(x: -18, y: 37) sub_8d9c9c root.Std_k98ojb.Math.Sub {}\n        instance(x: -98, y: -18) max_9c7e7e root.Std_k98ojb.List.Max {}\n        instance(x: -103, y: 63) min_3d8f2e root.Std_k98ojb.List.Min {}\n        list_6a5c2e -> max_9c7e7e.items\n        list_6a5c2e -> min_3d8f2e.items\n        max_9c7e7e.max -> sub_8d9c9c.first\n        min_3d8f2e.min -> sub_8d9c9c.second\n        sub_8d9c9c.result -> difference_3e2c5d\n    }\n\n    \n\n    instance(x: 62, y: 3) diff_max_min_1b6d51 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -280, y: -195, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 188, y: 425) max_8c3b9c root.Std_k98ojb.List.Max {}\n        instance(x: 188, y: 242) min_7d7d4d root.Std_k98ojb.List.Min {}\n        max_8c3b9c.max -> sub_852f2e.first\n        min_7d7d4d.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n        list_0b075e -> max_8c3b9c.items\n        list_0b075e -> min_7d7d4d.items\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_15f9e9 root.main.diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -37, y: -26, name: \"list\") property(List) list_9e9e3e\n\n        out(x: 544, y: 64, name: \"difference\") property(Number) difference_9b4c1c\n\n        instance(x: -76, y: 156, name: \"Max\") max_3f1d8e root.Std_k98ojb.List.Max {}\n        instance(x: -77, y: -395, name: \"Min\") min_3b3c5e root.Std_k98ojb.List.Min {}\n        instance(x: 199, y: 62) sub_9b5f0a root.Std_k98ojb.Math.Sub {}\n        list_9e9e3e -> max_3f1d8e.items\n        list_9e9e3e -> min_3b3c5e.items\n        max_3f1d8e.max -> sub_9b5f0a.first\n        min_3b3c5e.min -> sub_9b5f0a.second\n        sub_9b5f0a.result -> difference_9b4c1c\n    }\n\n    \n\n    instance(x: 47, y: 12) diff_max_min_7c4d2f root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_1d9c73\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7c3b4e\n\n        instance(x: 201, y: 62) modulo_7f8c4f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 429, y: 62) equal_3f6d1f root.Std_k98ojb.Logic.Equal {}\n        n_1d9c73 -> modulo_7f8c4f.value\n        2 -> modulo_7f8c4f.divisor\n        modulo_7f8c4f.result -> equal_3f6d1f.left\n        0 -> equal_3f6d1f.right\n        equal_3f6d1f.result -> output_7c3b4e\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_7a8f7f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -26, y: -38, name: \"input\") property(Number) input_8b3c3d\n\n        out(x: 1085, y: -32, name: \"output\") property(Bool) output_6a4c2f\n\n        instance(x: 1006, y: -39) modulo_9a9c6c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1338, y: -39) equal_5a7c5f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1567, y: -38) not_6a8c3e root.Std_k98ojb.Logic.Not {}\n        2 -> modulo_9a9c6c.divisor\n        input_8b3c3d -> modulo_9a9c6c.value\n        0 -> equal_5a7c5f.right\n        modulo_9a9c6c.result -> equal_5a7c5f.left\n        equal_5a7c5f.result -> not_6a8c3e.input\n        not_6a8c3e.result -> output_6a4c2f\n    }\n\n    \n\n    instance(x: 7, y: -14) is_even_5e4b4d root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -28, y: -26, name: \"n\") property(Number) n_8b4d73\n\n        out(x: 122, y: 52, name: \"output\") property(Bool) output_5d9e4f\n\n        instance(x: 6, y: 55, name: \"check if n is even\") modulo_6f5c6f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 114, y: 51) equal_8d2f5d root.Std_k98ojb.Logic.Equal {}\n        n_8b4d73 -> modulo_6f5c6f.value\n        2 -> modulo_6f5c6f.divisor\n        modulo_6f5c6f.result -> equal_8d2f5d.left\n        0 -> equal_8d2f5d.right\n        equal_8d2f5d.result -> output_5d9e4f\n    }\n\n    \n\n    instance(x: 7, y: 8) is_even_5f3f4c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -52, y: -42, name: \"n\") property(Number) n_9f7d0e\n\n        out(x: 436, y: -36, name: \"output\") property(Bool) output_5c3e8f\n\n        instance(x: 182, y: -38) modulo_2d7f2c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 401, y: -31) equal_5d8f8c root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_2d7f2c.divisor\n        n_9f7d0e -> modulo_2d7f2c.value\n        0 -> equal_5d8f8c.right\n        modulo_2d7f2c.result -> equal_5d8f8c.left\n        equal_5d8f8c.result -> output_5c3e8f\n    }\n\n    \n\n    instance(x: 24, y: 13) is_even_3c7e9f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -36, y: -27, name: \"input\") property(Number) input_7f1c2e\n\n        out(x: 1284, y: -30, name: \"output\") property(Bool) output_5c7e8e\n\n        instance(x: 1014, y: -25) modulo_4f2e3c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1264, y: -28) equal_1f8c4d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1459, y: -24) not_6d4e82 root.Std_k98ojb.Logic.Not {}\n        input_7f1c2e -> modulo_4f2e3c.value\n        2 -> modulo_4f2e3c.divisor\n        modulo_4f2e3c.result -> equal_1f8c4d.left\n        0 -> equal_1f8c4d.right\n        equal_1f8c4d.result -> not_6d4e82.input\n        not_6d4e82.result -> output_5c7e8e\n    }\n\n    \n\n    instance(x: 47, y: 8) is_even_9d9b5f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_a6cea7\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: 62) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 200, y: 15) equal_8e7e5e root.Std_k98ojb.Logic.Equal {}\n        n_a6cea7 -> modulo_ad7b2a.value\n        2 -> modulo_ad7b2a.divisor\n        modulo_ad7b2a.result -> equal_8e7e5e.left\n        0 -> equal_8e7e5e.right\n        equal_8e7e5e.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_15f9e9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -25, y: -18, name: \"input\") property(Number) input_3b2c9d\n\n        out(x: 1037, y: -19, name: \"output\") property(Bool) output_6c3b93\n\n        instance(x: 728, y: -20) modulo_7e7d2f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 978, y: -18) equal_8f8c3f root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_7e7d2f.divisor\n        input_3b2c9d -> modulo_7e7d2f.value\n        0 -> equal_8f8c3f.right\n        modulo_7e7d2f.result -> equal_8f8c3f.left\n        equal_8f8c3f.result -> output_6c3b93\n    }\n\n    \n\n    instance(x: 21, y: 10) is_even_5e3a3f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -39, y: -40, name: \"input\") property(Number) input_7e2b6e\n\n        out(x: 1229, y: -46, name: \"output\") property(Bool) output_9f3e2c\n\n        instance(x: 114, y: -47) modulo_9b8d0c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 471, y: -47) equal_6d8c7e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 834, y: -47) not_5d5d3c root.Std_k98ojb.Logic.Not {}\n        2 -> modulo_9b8d0c.divisor\n        input_7e2b6e -> modulo_9b8d0c.value\n        0 -> equal_6d8c7e.right\n        modulo_9b8d0c.result -> equal_6d8c7e.left\n        equal_6d8c7e.result -> not_5d5d3c.input\n        not_5d5d3c.result -> output_9f3e2c\n    }\n\n    \n\n    instance(x: 35, y: -6) is_even_1e6c6d root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -42, y: -25, name: \"input\") property(Number) input_9d3d9c\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_3b1b5d\n\n        instance(x: 201, y: 62) modulo_5d1c6d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 420, y: 65) equal_6a2d5f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 649, y: 65) not_6e5c9f root.Std_k98ojb.Logic.Not {}\n        input_9d3d9c -> modulo_5d1c6d.value\n        2 -> modulo_5d1c6d.divisor\n        modulo_5d1c6d.result -> equal_6a2d5f.left\n        0 -> equal_6a2d5f.right\n        equal_6a2d5f.result -> not_6e5c9f.input\n        not_6e5c9f.result -> output_3b1b5d\n    }\n\n    \n\n    instance(x: 47, y: 12) is_even_2b7c8f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -527, y: 438, name: \"input\") property(Number) input_7d9b9e\n\n        out(x: 443, y: 427, name: \"output\") property(Bool) output_1c8b7f\n\n        instance(x: -319, y: 358, name: \"is even\") modulo_9b3f1d root.Std_k98ojb.Math.Modulo {}\n        instance(x: -48, y: 517) equal_1e3e8f root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_9b3f1d.divisor\n        input_7d9b9e -> modulo_9b3f1d.value\n        0 -> equal_1e3e8f.right\n        modulo_9b3f1d.result -> equal_1e3e8f.left\n        equal_1e3e8f.result -> output_1c8b7f\n    }\n\n    \n\n    instance(x: -67, y: -37) is_even_9e4f0f root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -274, y: -0, name: \"string\") property(String) string_9c2d9f\n\n        out(x: 593, y: -1, name: \"character\") property(String) character_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1f2b4f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            contains_1f2b4f.input -> notequal_807ffd.left\n            string_9c2d9f -> contains_1f2b4f.input\n            elem_9f6850 -> contains_1f2b4f.contains\n            notequal_807ffd.right -> contains_1f2b4f.contains\n            contains_1f2b4f.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: -1, y: 0) characters_7c1d9f root.Std_k98ojb.Strings.Characters {}\n        characters_7c1d9f.characters -> find_6d05b0.items\n        string_9c2d9f -> characters_7c1d9f.input\n        find_6d05b0.item -> character_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: -1, name: \"string\") property(String) input_1\n\n        out(x: 599, y: -1, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 0) characters_9a2c7d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) contains_9e5b8f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) first_0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) zip_3c0b6a root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 0, y: 0) notequal_2e3b1f root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 0, y: 0) and_3a6f0e root.Std_k98ojb.Logic.And {}\n        instance(x: 0, y: 0) list_0 root.Std_k98ojb.List.Empty {}\n        instance(x: 0, y: 0) map_0 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) first_1 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) if_1 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) empty_0 root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 0, y: 0) not_0 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) first_2 root.Std_k98ojb.Iteration.Find {}\n        characters_9a2c7d.input -> characters_9a2c7d.input\n        input_1 -> characters_9a2c7d.input\n        characters_9a2c7d.characters -> map_0.items\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(String) item_9f6850\n\n            out(x: 515, y: 44, name: \"output\") property(Any) output_5e1c6a\n\n            instance(x: 89, y: 29) contains_0 root.Std_k98ojb.Iteration.Filter {}\n            instance(x: 310, y: 35) list_1 root.Std_k98ojb.List.Slice {}\n            instance(x: 0, y: 0) zip_1 root.Std_k98ojb.Iteration.Zip {}\n            instance(x: 0, y: 0) notequal_1 root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: 0) and_1 root.Std_k98ojb.Logic.And {}\n            item_9f6850 -> zip_1.left\n            list_1.list -> zip_1.right\n            zip_1.zipped -> notequal_1.left\n            zip_1.zipped -> notequal_1.right\n            notequal_1.result -> and_1.left\n            contains_0.output_list -> and_1.right\n            and_1.result -> contains_0.predicate\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) contains_2 root.Std_k98ojb.Strings.Contains {}\n                current_afd5b1 -> contains_2.input\n                item_9f6850 -> contains_2.contains\n                contains_2.result -> bool_1eb6e9\n            } -> contains_0.handler\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            characters_9a2c7d.characters -> list_1.list\n            0 -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            map_0.index -> list_1.start\n            map_0.index -> list_1.end\n            contains_0.output_list -> output_5e1c6a\n        } -> map_0.handler\n        map_0.output_list -> first_0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Any) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) not_1 root.Std_k98ojb.Logic.Not {}\n            instance(x: 421, y: 79) list_2 root.Std_k98ojb.List.IsEmpty {}\n            list_2.list -> list_2.list\n            current_afd5b1 -> list_2.list\n            list_2.isEmpty -> not_1.input\n            not_1.result -> bool_1eb6e9\n        } -> first_0.predicate\n        map_0.output_list -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Any) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) not_2 root.Std_k98ojb.Logic.Not {}\n            instance(x: 421, y: 79) list_3 root.Std_k98ojb.List.IsEmpty {}\n            list_3.list -> list_3.list\n            current_afd5b1 -> list_3.list\n            list_3.isEmpty -> not_2.input\n            not_2.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        first_0.item -> contains_9e5b8f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3 root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_3.input\n            first_0.item -> contains_3.contains\n            contains_3.result -> bool_1eb6e9\n        } -> contains",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -281, y: 176, name: \"string\") property(String) string_0\n\n        out(x: 803, y: 148, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) map_6d05b0 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) contains_6d05b0 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) filter_6d05b0 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) list_6d05b0 root.Std_k98ojb.List.Empty {}\n        string_0 -> characters_6d05b0.input\n        characters_6d05b0.characters -> map_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"output\") property(List) output_6c5d1a\n\n            instance(x: 310, y: 35) concat_1088d5 root.Std_k98ojb.List.Concat {}\n            instance(x: 89, y: 29) list_807ffd root.Std_k98ojb.List.Empty {}\n            list_807ffd.list -> concat_1088d5.left\n            elem_9f6850 -> concat_1088d5.right\n            concat_1088d5.listWithItem -> output_6c5d1a\n        } -> map_6d05b0.handler\n        map_6d05b0.output_list -> contains_6d05b0.list\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(List) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 310, y: 35) not_1088d5 root.Std_k98ojb.Logic.Not {}\n            instance(x: 89, y: 29) length_807ffd root.Std_k98ojb.List.Length {}\n            not_1088d5.value -> bool_af09a7\n            length_807ffd.list -> not_1088d5.value\n            elem_9f6850 -> length_807ffd.list\n        } -> filter_6d05b0.handler\n        map_6d05b0.output_list -> filter_6d05b0.items\n        filter_6d05b0.output_list -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(List) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.List.Contains {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            contains_45e806.item -> equal_a54bdc.left\n            current_afd5b1 -> contains_45e806.list\n            contains_45e806.result -> equal_a54bdc.right\n            1 -> equal_a54bdc.left\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        list_6d05b0.list -> contains_6d05b0.list\n        find_6d05b0.item -> output_0\n    }\n\n    \n\n    instance(x: -292, y: 177) first_repeated_char_2c856f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -268, y: 0, name: \"string\") property(String) string_0\n\n        out(x: 592, y: -1, name: \"char\") property(String) char_0\n\n        instance(x: 0, y: 0) characters_4b3b1a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) find_1d7e4c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) filter_5a3c9c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) contains_7e3b8e root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) map_3e3e1f root.Std_k98ojb.Iteration.Map {}\n        characters_4b3b1a.characters -> map_3e3e1f.items\n        func() {\n            in(x: -128, y: 39, name: \"item\") property(String) item_1\n\n            out(x: 526, y: 39, name: \"output\") property(List) output_0\n\n            instance(x: 46, y: 37) list_2a5c9f root.Std_k98ojb.List.Add {}\n            instance(x: 246, y: 36) list_2a5c9f_1 root.Std_k98ojb.List.Add {}\n            item_1 -> list_2a5c9f.item\n            list_3c9f.listWithItem -> list_2a5c9f_1.list\n            item_1 -> list_2a5c9f_1.item\n            list_2a5c9f_1.listWithItem -> output_0\n        } -> map_3e3e1f.handler\n        map_3e3e1f.output_list -> filter_5a3c9c.items\n        func() {\n            in(x: -129, y: 92, name: \"item\") property(List) item_0\n\n            out(x: 525, y: 93, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 46, y: 91) list_2a5c9f_2 root.Std_k98ojb.List.Contains {}\n            instance(x: 247, y: 90) list_2a5c9f_3 root.Std_k98ojb.List.Contains {}\n            list_2a5c9f_2.item -> list_2a5c9f_3.list\n            item_0 -> list_2a5c9f_2.item\n            list_2a5c9f_3.result -> bool_0\n        } -> filter_5a3c9c.handler\n        filter_5a3c9c.output_list -> find_1d7e4c.items\n        func() {\n            in(x: -130, y: 145, name: \"item\") property(List) item_0\n\n            out(x: 524, y: 146, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 46, y: 144) list_2a5c9f_4 root.Std_k98ojb.List.Length {}\n            instance(x: 246, y: 144) math_3a7b4a root.Std_k98ojb.Math.GreaterThan {}\n            list_2a5c9f_4.length -> math_3a7b4a.left\n            1 -> math_3a7b4a.right\n            math_3a7b4a.result -> bool_0\n        } -> find_1d7e4c.predicate\n        find_1d7e4c.item -> contains_7e3b8e.list\n        filter_5a3c9c.output_list -> contains_7e3b8e.item\n        contains_7e3b8e.result -> find_1d7e4c.predicate\n        string_0 -> characters_4b3b1a.input\n        find_1d7e4c.item -> char_0\n    }\n\n    \n\n    instance(x: -81, y: 52) first_repeated_char_7a2b3e root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) string_1c2b3a\n\n        out(x: 593, y: -1, name: \"character\") property(String) character_5c7e8e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"character\") property(String) character_2b3a6f\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_7c9d4f\n\n            instance(x: 89, y: 29) filter_4d3f5b root.Std_k98ojb.Iteration.Filter {}\n            instance(x: 310, y: 35) contains_8f3d6e root.Std_k98ojb.Strings.Contains {}\n            instance(x: 311, y: 127) length_3b2f7d root.Std_k98ojb.List.Length {}\n            instance(x: 521, y: 38) notequal_9a3c8f root.Std_k98ojb.Logic.NotEqual {}\n            func() {\n                in(x: -193, y: 65, name: \"item\") property(String) item_9c3f7e\n\n                out(x: 699, y: 66, name: \"bool\") property(Bool) bool_5d3e8f\n\n                contains_8f3d6e.input -> contains_8f3d6e.contains\n                contains_8f3d6e.input -> item_9c3f7e\n                character_2b3a6f -> contains_8f3d6e.input\n                contains_8f3d6e.result -> bool_5d3e8f\n            } -> filter_4d3f5b.handler\n            string_1c2b3a -> filter_4d3f5b.items\n            length_3b2f7d.list -> length_3b2f7d.list\n            filter_4d3f5b.output_list -> length_3b2f7d.list\n            notequal_9a3c8f.right -> length_3b2f7d.result\n            1 -> notequal_9a3c8f.left\n            length_3b2f7d.result -> notequal_9a3c8f.left\n            notequal_9a3c8f.result -> bool_7c9d4f\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -113, y: 34, name: \"character\") property(String) character_2b3a6f\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_7c9d4f\n\n            instance(x: 89, y: 29) filter_4d3f5b root.Std_k98ojb.Iteration.Filter {}\n            instance(x: 310, y: 35) contains_8f3d6e root.Std_k98ojb.Strings.Contains {}\n            instance(x: 311, y: 127) length_3b2f7d root.Std_k98ojb.List.Length {}\n            instance(x: 521, y: 38) notequal_9a3c8f root.Std_k98ojb.Logic.NotEqual {}\n            func() {\n                in(x: -193, y: 65, name: \"item\") property(String) item_9c3f7e\n\n                out(x: 699, y: 66, name: \"bool\") property(Bool) bool_5d3e8f\n\n                contains_8f3d6e.input -> contains_8f3d6e.contains\n                contains_8f3d6e.input -> item_9c3f7e\n                character_2b3a6f -> contains_8f3d6e.input\n                contains_8f3d6e.result -> bool_5d3e8f\n            } -> filter_4d3f5b.handler\n            string_1c2b3a -> filter_4d3f5b.items\n            length_3b2f7d.list -> length_3b2f7d.list\n            filter_4d3f5b.output_list -> length_3b2f7d.list\n            notequal_9a3c8f.right -> length_3b2f7d.result\n            1 -> notequal_9a3c8f.left\n            length_3b2f7d.result -> notequal_9a3c8f.left\n            notequal_9a3c8f.result -> bool_7c9d4f\n        } -> find_6d05b0.predicate\n        string_1c2b3a -> find_6d05b0.items\n        find_6d05b0.item -> character_5c7e8e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 1, name: \"string\") property(String) input_0\n\n        out(x: 599, y: -1, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 0, y: 0) characters_7a3f1d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) map_1c5e81 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) filter_5c6f0c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) count_8e5d4d root.Std_k98ojb.Iteration.Count {}\n        instance(x: 0, y: 0) filter_0f7e89 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) find_0d3a1c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) tolower_0d6f5d root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 0, y: 0) characters_4c7f6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) map_7b4e7d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) filter_7b3b7f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) count_1d4b7c root.Std_k98ojb.Iteration.Count {}\n        instance(x: 0, y: 0) filter_0f7e89 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) find_0d3a1c root.Std_k98ojb.Iteration.Find {}\n        tolower_2e1444.input -> characters_7a3f1d.input\n        input_0 -> tolower_2e1444.input\n        characters_7a3f1d.characters -> map_1c5e81.items\n        func() {\n            in(x: -117, y: 36, name: \"char\") property(String) char_0\n\n            out(x: 518, y: 46, name: \"string\") property(String) string_0\n\n            tolower_0d6f5d.input -> string_0\n            char_0 -> tolower_0d6f5d.input\n        } -> map_1c5e81.handler\n        map_1c5e81.output_list -> filter_5c6f0c.items\n        func() {\n            in(x: -117, y: 36, name: \"char\") property(String) char_0\n\n            out(x: 518, y: 46, name: \"bool\") property(Bool) bool_0\n\n            count_8e5d4d.count -> bool_0\n            1 -> count_8e5d4d.reset\n            char_0 -> count_8e5d4d.trigger\n        } -> filter_5c6f0c.handler\n        filter_5c6f0c.output_list -> find_6d05b0.items\n        func() {\n            in(x: -117, y: 36, name: \"char\") property(String) char_0\n\n            out(x: 518, y: 46, name: \"bool\") property(Bool) bool_0\n\n            count_1d4b7c.count -> bool_0\n            2 -> count_1d4b7c.reset\n            char_0 -> count_1d4b7c.trigger\n        } -> filter_0f7e89.handler\n        filter_5c6f0c.output_list -> filter_0f7e89.items\n        filter_0f7e89.output_list -> find_0d3a1c.items\n        func() {\n            in(x: -117, y: 36, name: \"char\") property(String) char_0\n\n            out(x: 518, y: 46, name: \"bool\") property(Bool) bool_0\n\n            characters_4c7f6f.characters -> map_7b4e7d.items\n            func() {\n                in(x: -117, y: 36, name: \"char\") property(String) char_0\n\n                out(x: 518, y: 46, name: \"string\") property(String) string_0\n\n                tolower_0d6f5d.input -> string_0\n                char_0 -> tolower_0d6f5d.input\n            } -> map_7b4e7d.handler\n            map_7b4e7d.output_list -> filter_7b3b7f.items\n            func() {\n                in(x: -117, y: 36, name: \"char\") property(String) char_0\n\n                out(x: 518, y: 46, name: \"bool\") property(Bool) bool_0\n\n                count_1d4b7c.count -> bool_0\n                1 -> count_1d4b7c.reset\n                char_0 -> count_1d4b7c.trigger\n            } -> filter_7b3b7f.handler\n            filter_7b3b7f.output_list -> count_8e5d4d.items\n            char_0 -> count_8e5d4d.trigger\n        } -> find_0d3a1c.predicate\n        find_0d3a1c.item -> result_0\n        find_6d05b0.item -> result_0\n    }\n\n    \n\n    instance(x: 80, y: 51) FirstRepeatedChar_5b7a3c root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -287, y: -1, name: \"string\") property(String) string_8f1e7e\n\n        out(x: 800, y: -1, name: \"output\") property(String) output_1c5f6f\n\n        instance(x: 0, y: 0) characters_7d1f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) find_8c3d8f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) contains_9f7c5d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) first_1d4c2a root.Std_k98ojb.List.FirstItem {}\n        instance(x: 0, y: 0) ``first item_3d5f2e`` root.Std_k98ojb.List.FirstItem {}\n        string_8f1e7e -> characters_7d1f8c.input\n        characters_7d1f8c.characters -> contains_9f7c5d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_8a5f5d\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``contains_3b5d9c`` root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 113, y: 0) ``first item_8b5f2e`` root.Std_k98ojb.List.FirstItem {}\n            ``first item_8b5f2e``.item -> ``contains_3b5d9c``.input\n            current_8a5f5d -> ``contains_3b5d9c``.contains\n            ``contains_3b5d9c``.result -> notequal_148aeb.left\n            false -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> contains_9f7c5d.handler\n        contains_9f7c5d.output_list -> find_8c3d8f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_8a5f5d\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``contains_3b5d9c`` root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            instance(x: 113, y: 0) ``first item_8b5f2e`` root.Std_k98ojb.List.FirstItem {}\n            ``first item_8b5f2e``.item -> ``contains_3b5d9c``.input\n            current_8a5f5d -> ``contains_3b5d9c``.contains\n            ``contains_3b5d9c``.result -> equal_a54bdc.left\n            true -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_8c3d8f.predicate\n        find_8c3d8f.item -> ``first item_3d5f2e``.list\n        ``first item_3d5f2e``.item -> output_1c5f6f\n    }\n\n    \n\n    instance(x: -291, y: -2) first_repeated_char_2e4d2c root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: -1, name: \"string\") property(String) input_3c7e7d\n\n        out(x: 800, y: -2, name: \"output\") property(Any) output_3e2c5d\n\n        instance(x: 0, y: 0) characters_0c0c9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) find_7a7e6e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``characters_0c0c9c_0`` root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) ``find_7a7e6e_0`` root.Std_k98ojb.Iteration.Find {}\n        characters_0c0c9c.characters -> ``characters_0c0c9c_0``.items\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_0\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 89, y: 29) ``characters_0c0c9c_0``_1 root.Std_k98ojb.Iteration.Find {}\n            instance(x: 310, y: 35) ``characters_0c0c9c_0``_2 root.Std_k98ojb.Iteration.Filter {}\n            instance(x: 310, y: 35) ``characters_0c0c9c_0``_3 root.Std_k98ojb.Iteration.Filter {}\n            ``characters_0c0c9c_0``.characters -> ``characters_0c0c9c_0``_1.items\n            func() {\n                in(x: -113, y: 34, name: \"current\") property(String) current_0\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_0\n\n                instance(x: 89, y: 29) equal_2d5e6a root.Std_k98ojb.Logic.Equal {}\n                current_0 -> equal_2d5e6a.left\n                current -> equal_2d5e6a.right\n                equal_2d5e6a.result -> bool_0\n            } -> ``characters_0c0c9c_0``_1.predicate\n            ``characters_0c0c9c_0``_1.item -> ``characters_0c0c9c_0``_2.index\n            ``characters_0c0c9c_0``.characters -> ``characters_0c0c9c_0``_2.items\n            func() {\n                in(x: -113, y: 34, name: \"current\") property(String) current_0\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_0\n\n                instance(x: 89, y: 29) lessThan_0f5c8f root.Std_k98ojb.Math.LessThan {}\n                ``characters_0c0c9c_0``_2.index -> lessThan_0f5c8f.left\n                ``characters_0c0c9c_0``_1.index -> lessThan_0f5c8f.right\n                lessThan_0f5c8f.result -> bool_0\n            } -> ``characters_0c0c9c_0``_2.predicate\n            ``characters_0c0c9c_0``_2.output -> ``characters_0c0c9c_0``_3.input\n            ``characters_0c0c9c_0``.characters -> ``characters_0c0c9c_0``_3.items\n            func() {\n                in(x: -113, y: 34, name: \"current\") property(String) current_0\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_0\n\n                instance(x: 89, y: 29) equal_2d5e6a root.Std_k98ojb.Logic.Equal {}\n                current_0 -> equal_2d5e6a.left\n                current -> equal_2d5e6a.right\n                equal_2d5e6a.result -> bool_0\n            } -> ``characters_0c0c9c_0``_3.predicate\n            ``characters_0c0c9c_0``_3.output -> find_7a7e6e.items\n            func() {\n                in(x: -113, y: 34, name: \"current\") property(String) current_0\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_0\n\n                instance(x: 89, y: 29) not_7e4c3f root.Std_k98ojb.Logic.Not {}\n                ``characters_0c0c9c_0``_1.result -> not_7e4c3f.input\n                not_7e4c3f.output -> bool_0\n            } -> find_7a7e6e.predicate\n            find_7a7e6e.item -> output_3e2c5d\n        } -> ``characters_0c0c9c_0``.predicate\n        input_3c7e7d -> characters_0c0c9c.input\n    }\n\n    \n\n    instance(x: -294, y: -3) first_repeated_char_3c4b4f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_1e4c5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6e7d2e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 265, y: 0) contains_9a4c1d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) map_7d4d7c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 265, y: 0) ``list_1`` root.Std_k98ojb.List.Slice {}\n        instance(x: 265, y: 0) ``list_2`` root.Std_k98ojb.List.Slice {}\n        characters_1e4c5f.characters -> ``list_1``.list\n        0 -> ``list_1``.start\n        -1 -> ``list_1``.end\n        characters_1e4c5f.characters -> ``list_2``.list\n        1 -> ``list_2``.start\n        -1 -> ``list_2``.end\n        ``list_1``.list -> map_7d4d7c.items\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(String) item_9f6850\n\n            out(x: 515, y: 44, name: \"output\") property(String) output_7e0a6f\n\n            instance(x: 89, y: 29) ``item_1`` root.Std_k98ojb.List.FirstItem {}\n            instance(x: 310, y: 35) ``list_1`` root.Std_k98ojb.List.Slice {}\n            ``list_2``.list -> ``list_1``.list\n            0 -> ``list_1``.start\n            ``item_9f6850`` -> ``list_1``.end\n            ``list_1``.list -> ``item_1``.list\n            ``item_1``.item -> output_7e0a6f\n        } -> map_7d4d7c.handler\n        map_7d4d7c.output_list -> contains_9a4c1d.items\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(String) item_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_5a9c6e root.Std_k98ojb.Strings.Contains {}\n            item_9f6850 -> contains_5a9c6e.input\n            item_9f6850 -> contains_5a9c6e.contains\n            contains_5a9c6e.result -> bool_af09a7\n        } -> contains_9a4c1d.handler\n        contains_9a4c1d.output_list -> find_6e7d2e.items\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(String) item_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) ``item_1`` root.Std_k98ojb.List.FirstItem {}\n            instance(x: 310, y: 35) ``list_1`` root.Std_k98ojb.List.Slice {}\n            ``list_2``.list -> ``list_1``.list\n            0 -> ``list_1``.start\n            item_9f6850 -> ``list_1``.end\n            ``list_1``.list -> ``item_1``.list\n            ``item_1``.item -> bool_af09a7\n        } -> find_6e7d2e.predicate\n        find_6e7d2e.item -> result_0\n        input_0 -> characters_1e4c5f.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_9c7f4c root.main.first_repeated {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -276, y: 2, name: \"string\") property(String) input_0\n\n        out(x: 640, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3b2b9e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 328, y: 0) first_8e5b0c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) map_7e6c82 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 328, y: 0) contains_7f3d7e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) filter_1e6c3d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 328, y: 0) find_3f7f8c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``first_8e5b0c_1`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``map_7e6c82_1`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 328, y: 0) ``contains_7f3d7e_1`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``filter_1e6c3d_1`` root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 328, y: 0) ``find_3f7f8c_1`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``first_8e5b0c_2`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``map_7e6c82_2`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 328, y: 0) ``contains_7f3d7e_2`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``filter_1e6c3d_2`` root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 328, y: 0) ``find_3f7f8c_2`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``first_8e5b0c_3`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``map_7e6c82_3`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 328, y: 0) ``contains_7f3d7e_3`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``filter_1e6c3d_3`` root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 328, y: 0) ``find_3f7f8c_3`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``first_8e5b0c_4`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``map_7e6c82_4`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 328, y: 0) ``contains_7f3d7e_4`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``filter_1e6c3d_4`` root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 328, y: 0) ``find_3f7f8c_4`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``first_8e5b0c_5`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``map_7e6c82_5`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 328, y: 0) ``contains_7f3d7e_5`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``filter_1e6c3d_5`` root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 328, y: 0) ``find_3f7f8c_5`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``first_8e5b0c_6`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``map_7e6c82_6`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 328, y: 0) ``contains_7f3d7e_6`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``filter_1e6c3d_6`` root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 328, y: 0) ``find_3f7f8c_6`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``first_8e5b0c_7`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``map_7e6c82_7`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 328, y: 0) ``contains_7f3d7e_7`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``filter_1e6c3d_7`` root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 328, y: 0) ``find_3f7f8c_7`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``first_8e5b0c_8`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``map_7e6c82_8`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 328, y: 0) ``contains_7f3d7e_8`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``filter_1e6c3d_8`` root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 328, y: 0) ``find_3f7f8c_8`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``first_8e5b0c_9`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``map_7e6c82_9`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 328, y: 0) ``contains_7f3d7e_9`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``filter_1e6c3d_9`` root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 328, y: 0) ``find_3f7f8c_9`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``first_8e5b0c_10`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``map_7e6c82_10`` root.Std_k98ojb.Iteration.Map {}\n        instance(x: 328, y: 0) ``contains_7f3d7e_10`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``filter_1e6c3d_10`` root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 328, y: 0) ``find_3f7f8c_10`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y: 0) ``first_8e5b0c_11`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 328, y:"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 309, y: 71) notequal_8b5f6c root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: 106) notequal_7d9c1d root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: 142) notequal_7d9c1d_2 root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            find_6d05b0.item -> notequal_8b5f6c.left\n            notequal_807ffd.result -> notequal_8b5f6c.right\n            notequal_8b5f6c.result -> notequal_7d9c1d.left\n            find_6d05b0.item -> notequal_7d9c1d.right\n            notequal_7d9c1d.result -> notequal_7d9c1d_2.left\n            elem_9f6850 -> notequal_7d9c1d_2.right\n            notequal_7d9c1d_2.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: -194, name: \"items\") property(List) items_6f1c6d\n\n        out(x: 52, y: -211, name: \"min\") property(Number) min_1b6d7f\n\n        instance(x: -108, y: -110) remove_5c9e9c root.Std_k98ojb.List.Remove {}\n        instance(x: -305, y: -300) min_6f7c5f root.Std_k98ojb.List.Min {}\n        instance(x: -108, y: -110) remove_3b2b4c root.Std_k98ojb.List.Remove {}\n        instance(x: 0, y: 0) min_3b5b0f root.Std_k98ojb.List.Min {}\n        items_6f1c6d -> remove_5c9e9c.list\n        min_6f7c5f.items -> remove_3b2b4c.list\n        min_6f7c5f.min -> remove_5c9e9c.index\n        remove_5c9e9c.listWithoutItem -> min_3b5b0f.items\n        remove_3b2b4c.listWithoutItem -> min_6f7c5f.items\n        min_3b5b0f.min -> min_1b6d7f\n    }\n\n    \n\n    instance(x: 330, y: 572) second_smallest_7c9a7f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -286, y: -189, name: \"items\") property(List) items_ai\n\n        out(x: 47, y: -217, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_min_node_2.items\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it == min\"\n        }\n        instance(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = second_smallest\n        instance(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_smallest\n        instance(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = second_smallest\n        list_min_node_2.min -> ifexpression_e38995.gen_0\n        list_min_node.min -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> second_smallest_ai\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        list_min_node_2.min -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        list_min_node_2.min -> setter_37db7f.new_value\n        list_min_node_2.items -> ifexpression_e38995.items\n    }\n    \n\n    instance(x: -174, y: -63) second_smallest_d6e930 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: -0, name: \"list\") property(List) list_7a7a5d\n\n        out(x: 592, y: -1, name: \"number\") property(Number) number_5c3e8f\n\n        instance(x: 0, y: 0) min_2d7f2c root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) remove_4e8d9c root.Std_k98ojb.List.Remove {}\n        instance(x: 0, y: 0) find_4a8f1e root.Std_k98ojb.Iteration.Find {}\n        list_7a7a5d -> min_2d7f2c.items\n        min_2d7f2c.min -> remove_4e8d9c.index\n        list_7a7a5d -> remove_4e8d9c.list\n        remove_4e8d9c.listWithoutItem -> find_4a8f1e.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_6e8f9d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_6a5c9f\n\n            instance(x: 89, y: 29) notequal_2b9c6f root.Std_k98ojb.Logic.NotEqual {}\n            min_2d7f2c.min -> notequal_2b9c6f.left\n            elem_6e8f9d -> notequal_2b9c6f.right\n            notequal_2b9c6f.result -> bool_6a5c9f\n        } -> find_4a8f1e.predicate\n        find_4a8f1e.item -> number_5c3e8f\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2b4e4f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -301, y: -191, name: \"items\") property(List) items_8b6c71\n\n        out(x: 59, y: -216, name: \"min\") property(Number) min_5f5c7e\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> min_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n\n        instance(x: -105, y: -110) ifexpression_e38995_2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3_2\") getter_9cceb3_2 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2_2\") setter_1cedb2_2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f_2\") setter_37db7f_2 = min\n        a_9f7759_2 -> ifexpression_e38995_2.gen_0\n        b_f9110a_2 -> ifexpression_e38995_2.gen_1\n        getter_9cceb3_2.value -> min_b2508f_2\n        ifexpression_e38995_2.then -> setter_1cedb2_2.execute\n        a_9f7759_2 -> setter_1cedb2_2.new_value\n        b_f9110a_2 -> setter_37db7f_2.new_value\n        ifexpression_e38995_2.else -> setter_37db7f_2.execute\n        execute_12bf99_2 -> ifexpression_e38995_2.execute\n        setter_1cedb2_2.continue -> continue_685c8f_2\n        setter_37db7f_2.continue -> continue_685c8f_2\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_3 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_4 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_5 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_6 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_7 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_8 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_9 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_10 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_11 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_12 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_13 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_14 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_15 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_16 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_17 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_18 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_19 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_20 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_21 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_22 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_23 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_24 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_25 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_26 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_27 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_28 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_29 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_30 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_31 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_32 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_33 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_34 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_35 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_36 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_37 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_38 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_39 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_40 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_41 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_42 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_43 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_44 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_45 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_46 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_47 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_48 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_min_node_49 root.Std_k98",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) min_6d05b0 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_6d05b0.items\n        instance(x: 0, y: 0) remove_1088d5 root.Std_k98ojb.List.Remove {}\n        min_6d05b0.min -> remove_1088d5.index\n        list_abed4a -> remove_1088d5.list\n        instance(x: 0, y: 0) min_807ffd root.Std_k98ojb.List.Min {}\n        remove_1088d5.listWithoutItem -> min_807ffd.items\n        min_807ffd.min -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: -189, name: \"list\") property(List) list_9e8f1e\n\n        out(x: 463, y: -190, name: \"min\") property(Number) min_1c1c5f\n\n        data_instance(x: -609, y: -363) data_9a9c70  = [list_9e8f1e]\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        data_9a9c70 -> min_c3e343.items\n        min_c3e343.min -> data_9a9c70.min\n        instance(x: -609, y: -243) list_remove_1d3c2a root.Std_k98ojb.List.Remove {}\n        data_9a9c70.min -> list_remove_1d3c2a.index\n        data_9a9c70.list -> list_remove_1d3c2a.list\n        list_remove_1d3c2a.listWithoutItem -> data_9a9c70.listWithoutItem\n        instance(x: -341, y: -154) min_4e7c7c root.Std_k98ojb.List.Min {}\n        data_9a9c70.listWithoutItem -> min_4e7c7c.items\n        min_4e7c7c.min -> min_1c1c5f\n    }\n    \n\n    instance(x: 322, y: 568) second_smallest_9b8c3e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) sort_node root.Std_k98ojb.List.Sort {}\n        list_abed4a -> sort_node.list\n        instance(x: 0, y: 0) getat_node root.Std_k98ojb.List.GetAt {}\n        sort_node.sorted_list -> getat_node.list\n        1 -> getat_node.index\n        getat_node.itemAtIndex -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: -197, name: \"list\") property(List) list_1d8b9c\n\n        out(x: 46, y: 159, name: \"min\") property(Number) min_8d1c5d\n\n        instance(x: -105, y: -110) ifexpression_6e7f9d root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1e6d7f\") getter_1e6d7f = min\n        setter(x: 116, y: -268, name: \"setter_1f8b1d\") setter_1f8b1d = min\n        setter(x: 118, y: -56, name: \"setter_3c5f3f\") setter_3c5f3f = min\n        a -> ifexpression_6e7f9d.gen_0\n        b -> ifexpression_6e7f9d.gen_1\n        getter_1e6d7f.value -> min_8d1c5d\n        ifexpression_6e7f9d.then -> setter_1f8b1d.execute\n        a -> setter_1f8b1d.new_value\n        b -> setter_3c5f3f.new_value\n        ifexpression_6e7f9d.else -> setter_3c5f3f.execute\n        execute -> ifexpression_6e7f9d.execute\n        setter_1f8b1d.continue -> continue\n        setter_3c5f3f.continue -> continue\n\n        data_instance(x: -612, y: -363) data_9a9c70  = [a, b, c]\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        a -> data_9a9c70.a\n        b -> data_9a9c70.b\n        c -> data_9a9c70.c\n        data_9a9c70 -> min_c3e343.items\n        min_c3e343.min -> a\n\n        instance(x: -102, y: -114) list_remove_node root.Std_k98ojb.List.Remove {}\n        min_c3e343.min -> list_remove_node.index\n        list_1d8b9c -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_2\n\n        instance(x: -102, y: -114) min_2 root.Std_k98ojb.List.Min {}\n        list_2 -> min_2.items\n        min_2.min -> min_8d1c5d\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: -194, name: \"list\") property(List) list_7e4f9e\n\n        out(x: 46, y: 158, name: \"min\") property(Number) min_1c2b7f\n\n        instance(x: -107, y: -107) find_2d2c5a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -111, y: 35, name: \"elem\") property(Number) elem_7b3c5e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5b5a8f\n\n            instance(x: 90, y: 30) min_5e2c3f root.Std_k98ojb.List.Min {}\n            instance(x: 309, y: 35) notequal_2f7d7f root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: 0) remove_5e4c3f root.Std_k98ojb.List.Remove {}\n            instance(x: 0, y: 0) min_7e4c3f root.Std_k98ojb.List.Min {}\n            list_7e4f9e -> min_5e2c3f.items\n            min_5e2c3f.min -> remove_5e4c3f.index\n            list_7e4f9e -> remove_5e4c3f.list\n            remove_5e4c3f.listWithoutItem -> min_7e4c3f.items\n            min_7e4c3f.min -> notequal_2f7d7f.right\n            elem_7b3c5e -> notequal_2f7d7f.left\n            notequal_2f7d7f.result -> bool_5b5a8f\n        } -> find_2d2c5a.predicate\n        list_7e4f9e -> find_2d2c5a.items\n        find_2d2c5a.item -> min_1c2b7f\n    }\n\n    \n\n    instance(x: -53, y: 526) second_smallest_3e2c7f root.main.second_smallest {}\n}"
            ]
        }
    }
]