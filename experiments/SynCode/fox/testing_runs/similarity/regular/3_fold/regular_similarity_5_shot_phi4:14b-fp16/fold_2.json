[
    {
        "experiment_name": "regular_similarity_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 8701,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -255, y: -171, name: \"list1\") property(List) list1_1f846b\n        in(x: -263, y: -41, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -255, y: -147, name: \"list1\") property(List) list1_1f846b\n        in(x: -263, y: -17, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -285, y: -86, name: \"list1\") property(List) list1_3af6ba\n        in(x: -285, y: -86, name: \"list2\") property(List) list2_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list1_3af6ba -> intersection_c7c7e6.left\n        list2_3af6ba -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_ac7dfb root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -289, y: -86, name: \"list1\") property(List) list1_1f846b\n        in(x: -297, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_4e8c54.left\n            list2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n        instance(x: 245, y: -54) filter_4e8c54 root.Std_k98ojb.Iteration.Filter {}\n        filter_4e8c54.handler -> zip_201051.zipped\n        filter_4e8c54.output_list -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -305, y: -210, name: \"list1\") property(List) list1_1f846b\n        in(x: -313, y: -90, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_4e8c54.left\n            list2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n        instance(x: 360, y: -95) any_1f8f7f root.Std_k98ojb.Iteration.Find {}\n        zip_201051.zipped -> any_1f8f7f.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Bool) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) not_7836b4 root.Std_k98ojb.Logic.Not {}\n            _index_170471 -> not_7836b4.input\n            not_7836b4.result -> output_efbc78\n        } -> any_1f8f7f.predicate\n        any_1f8f7f.item -> output_0d40f1\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_ac7dfb root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -299, y: -211, name: \"list1\") property(List) list1_1f846b\n        in(x: -317, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_4e8c54.left\n            list2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n        instance(x: 360, y: -95) any_1f8f1f root.Std_k98ojb.Iteration.Find {}\n        zip_201051.zipped -> any_1f8f1f.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Bool) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) not_7836b4 root.Std_k98ojb.Logic.Not {}\n            _index_170471 -> not_7836b4.input\n            not_7836b4.result -> output_efbc78\n        } -> any_1f8f1f.predicate\n        any_1f8f1f.item -> output_0d40f1\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_ac7dfb root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -255, y: -86, name: \"list1\") property(List) list1_1f846b\n        in(x: -263, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -299, y: -211, name: \"list1\") property(List) list1_1f846b\n        in(x: -317, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_4e8c54.left\n            list2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n        instance(x: 360, y: -95) any_1f8f1f root.Std_k98ojb.Iteration.Find {}\n        zip_201051.zipped -> any_1f8f1f.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Bool) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) not_7836b4 root.Std_k98ojb.Logic.Not {}\n            _index_170471 -> not_7836b4.input\n            not_7836b4.result -> output_efbc78\n        } -> any_1f8f1f.predicate\n        any_1f8f1f.item -> output_0d40f1\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_ac7dfb root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -293, y: -86, name: \"list1\") property(List) list1_1f846b\n        in(x: -301, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_4e8c54.left\n            list2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n        instance(x: 245, y: -54) filter_4e8c54 root.Std_k98ojb.Iteration.Filter {}\n        filter_4e8c54.handler -> zip_201051.zipped\n        filter_4e8c54.output_list -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -299, y: -199, name: \"list1\") property(List) list1_1f846b\n        in(x: -317, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_4e8c54.left\n            list2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n        instance(x: 360, y: -95) any_1f0f1f root.Std_k98ojb.Iteration.Find {}\n        zip_201051.zipped -> any_1f0f1f.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_42bc6f\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n            1 -> output_e245cb\n        } -> any_1f0f1f.predicate\n        any_1f0f1f.item -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -485, y: -235, name: \"list\") property(List) list_1e7f9c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_9e9f1f\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_7e9f1f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_9e9f1f\n        ifexpression_875761.value -> output_7e9f1f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_1e7f9c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_9e9f1f\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1e7f9c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_9e9f1f -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) consecutive_9e9f1f root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -525, y: -5, name: \"list\") property(List) list_7e7c8c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_7e7c8c\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_7e7c8c\n\n        instance(x: 752, y: 93) ifexpression_7e7c8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_7e7c8c\") getter_7e7c8c = previous\n        setter(x: 679, y: -313, name: \"setter_7e7c8c\") setter_7e7c8c = previous\n        instance(x: 321, y: -20) for_7e7c8c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7e7c8c\") setter_7e7c8c = previous\n        instance(x: -275, y: -35) getat_7e7c8c root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e7c8c.else -> continue_7e7c8c\n        ifexpression_7e7c8c.value -> output_7e7c8c\n        ifexpression_7e7c8c.then -> setter_7e7c8c.execute\n        list_7e7c8c -> for_7e7c8c.items\n        for_7e7c8c.item -> ifexpression_7e7c8c.gen_2\n        for_7e7c8c.index -> ifexpression_7e7c8c.gen_0\n        getter_7e7c8c.value -> ifexpression_7e7c8c.gen_1\n        for_7e7c8c.onItem -> ifexpression_7e7c8c.execute\n        for_7e7c8c.done -> continue_7e7c8c\n        for_7e7c8c.item -> setter_7e7c8c.new_value\n        list_7e7c8c -> getat_7e7c8c.list\n        0 -> getat_7e7c8c.index\n        getat_7e7c8c.itemAtIndex -> setter_7e7c8c.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) consecutive_7e7c8c root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -485, y: -235, name: \"list\") property(List) list_7e7c9f\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_9e7f1f\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_9e7f1f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_9e7f1f\n        ifexpression_875761.value -> output_9e7f1f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_7e7c9f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_9e7f1f\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_7e7c9f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) consecutive_9e7f1f root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -485, y: -235, name: \"list\") property(List) list_7e7c8c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_7f3f7f\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_7f3f7f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_7f3f7f\n        ifexpression_875761.value -> output_7f3f7f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_7e7c8c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_7f3f7f\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_7e7c8c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_7f3f7f -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) consecutive_7f3f7f root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -525, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -485, y: -235, name: \"list\") property(List) list_1a8c8c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_9e9f7f\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_7e9f7f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_9e9f7f\n        ifexpression_875761.value -> output_7e9f7f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_1a8c8c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_9e9f7f\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1a8c8c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_9e9f7f -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) consecutive_7a4dad root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -525, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e4c1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e4c1f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e4c1f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e4c1f.input\n        \" \" -> replace_1e4c1f.search\n        \":\" -> replace_1e4c1f.replace\n        replace_1e4c1f.output -> replace_1e4c1f_2.input\n        \",\" -> replace_1e4c1f_2.search\n        \":\" -> replace_1e4c1f_2.replace\n        replace_1e4c1f_2.output -> replace_1e4c1f_3.input\n        \".\" -> replace_1e4c1f_3.search\n        \":\" -> replace_1e4c1f_3.replace\n        replace_1e4c1f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e4c1f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e4c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e4c8f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e4c8f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e4c8f.input\n        \" \" -> replace_1e4c8f.search\n        \":\" -> replace_1e4c8f.replace\n        replace_1e4c8f.output -> replace_1e4c8f_2.input\n        \",\" -> replace_1e4c8f_2.search\n        \":\" -> replace_1e4c8f_2.replace\n        replace_1e4c8f_2.output -> replace_1e4c8f_3.input\n        \".\" -> replace_1e4c8f_3.search\n        \":\" -> replace_1e4c8f_3.replace\n        replace_1e4c8f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e4c8f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e3c1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e3c1f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e3c1f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e3c1f.input\n        \" \" -> replace_1e3c1f.search\n        \":\" -> replace_1e3c1f.replace\n        replace_1e3c1f.output -> replace_1e3c1f_2.input\n        \",\" -> replace_1e3c1f_2.search\n        \":\" -> replace_1e3c1f_2.replace\n        replace_1e3c1f_2.output -> replace_1e3c1f_3.input\n        \".\" -> replace_1e3c1f_3.search\n        \":\" -> replace_1e3c1f_3.replace\n        replace_1e3c1f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e3c1f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e4c1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e4c1f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e4c1f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e4c1f.input\n        \" \" -> replace_1e4c1f.search\n        \":\" -> replace_1e4c1f.replace\n        replace_1e4c1f.output -> replace_1e4c1f_2.input\n        \",\" -> replace_1e4c1f_2.search\n        \":\" -> replace_1e4c1f_2.replace\n        replace_1e4c1f_2.output -> replace_1e4c1f_3.input\n        \".\" -> replace_1e4c1f_3.search\n        \":\" -> replace_1e4c1f_3.replace\n        replace_1e4c1f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e4c1f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e3f1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e3f1f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e3f1f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e3f1f.input\n        \" \" -> replace_1e3f1f.search\n        \":\" -> replace_1e3f1f.replace\n        replace_1e3f1f.output -> replace_1e3f1f_2.input\n        \",\" -> replace_1e3f1f_2.search\n        \":\" -> replace_1e3f1f_2.replace\n        replace_1e3f1f_2.output -> replace_1e3f1f_3.input\n        \".\" -> replace_1e3f1f_3.search\n        \":\" -> replace_1e3f1f_3.replace\n        replace_1e3f1f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e3f1f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e3c1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e3c1f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e3c1f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e3c1f.input\n        \" \" -> replace_1e3c1f.search\n        \":\" -> replace_1e3c1f.replace\n        replace_1e3c1f.output -> replace_1e3c1f_2.input\n        \",\" -> replace_1e3c1f_2.search\n        \":\" -> replace_1e3c1f_2.replace\n        replace_1e3c1f_2.output -> replace_1e3c1f_3.input\n        \".\" -> replace_1e3c1f_3.search\n        \":\" -> replace_1e3c1f_3.replace\n        replace_1e3c1f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e3c1f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e3c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e3c8f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e3c8f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e3c8f.input\n        \" \" -> replace_1e3c8f.search\n        \":\" -> replace_1e3c8f.replace\n        replace_1e3c8f.output -> replace_1e3c8f_2.input\n        \",\" -> replace_1e3c8f_2.search\n        \":\" -> replace_1e3c8f_2.replace\n        replace_1e3c8f_2.output -> replace_1e3c8f_3.input\n        \".\" -> replace_1e3c8f_3.search\n        \":\" -> replace_1e3c8f_3.replace\n        replace_1e3c8f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e3c8f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e4c1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e4c1f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e4c1f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e4c1f.input\n        \" \" -> replace_1e4c1f.search\n        \":\" -> replace_1e4c1f.replace\n        replace_1e4c1f.output -> replace_1e4c1f_2.input\n        \",\" -> replace_1e4c1f_2.search\n        \":\" -> replace_1e4c1f_2.replace\n        replace_1e4c1f_2.output -> replace_1e4c1f_3.input\n        \".\" -> replace_1e4c1f_3.search\n        \":\" -> replace_1e4c1f_3.replace\n        replace_1e4c1f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e4c1f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e4c1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e4c1f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e4c1f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e4c1f.input\n        \" \" -> replace_1e4c1f.search\n        \":\" -> replace_1e4c1f.replace\n        replace_1e4c1f.output -> replace_1e4c1f_2.input\n        \",\" -> replace_1e4c1f_2.search\n        \":\" -> replace_1e4c1f_2.replace\n        replace_1e4c1f_2.output -> replace_1e4c1f_3.input\n        \".\" -> replace_1e4c1f_3.search\n        \":\" -> replace_1e4c1f_3.replace\n        replace_1e4c1f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e4c1f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e4c1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e4c1f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e4c1f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e4c1f.input\n        \" \" -> replace_1e4c1f.search\n        \":\" -> replace_1e4c1f.replace\n        replace_1e4c1f.output -> replace_1e4c1f_2.input\n        \",\" -> replace_1e4c1f_2.search\n        \":\" -> replace_1e4c1f_2.replace\n        replace_1e4c1f_2.output -> replace_1e4c1f_3.input\n        \".\" -> replace_1e4c1f_3.search\n        \":\" -> replace_1e4c1f_3.replace\n        replace_1e4c1f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e4c1f root.main.replace_spaces_commas_dots {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -290, y: -11, name: \"string\") property(String) string_1e7c8c\n\n        out(x: 557, y: 5, name: \"output\") property(Bool) output_7e7c8c\n\n        instance(x: -82, y: -11) characters_1e7c8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 201, y: 5) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 415, y: 5) filter_1e7c8c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 640, y: 5) length_1e7c8c root.Std_k98ojb.List.Length {}\n        instance(x: 854, y: 5) equal_1e7c8c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1068, y: 5) not_1e7c8c root.Std_k98ojb.Logic.Not {}\n        characters_1e7c8c.characters -> filter_1e7c8c.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(String) current_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_1e7c8c.handler\n        length_6e87f2.list -> characters_1e7c8c.string\n        filter_1e7c8c.output_list -> length_1e7c8c.list\n        length_1e7c8c.length -> equal_1e7c8c.left\n        1 -> equal_1e7c8c.right\n        not_1e7c8c.result -> output_7e7c8c\n        equal_1e7c8c.result -> not_1e7c8c.input\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_ac7dfb root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -287, y: -11, name: \"string\") property(String) string_1e9f1f\n\n        out(x: 557, y: 10, name: \"output\") property(Bool) output_9e9f1f\n\n        instance(x: -92, y: -6) characters_1e9f1f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 9) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 8) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 574, y: -6) filter_1e9f1f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 814, y: 9) length_8166b0_1 root.Std_k98ojb.List.Length {}\n        instance(x: 1028, y: 8) equal_f89569_1 root.Std_k98ojb.Logic.Equal {}\n        string_1e9f1f -> characters_1e9f1f.input\n        characters_1e9f1f.characters -> filter_1e9f1f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(String) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) equal_1e9f1f root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> equal_1e9f1f.left\n            filter_1e9f1f.value -> equal_1e9f1f.right\n            equal_1e9f1f.result -> bool_4524be\n        } -> filter_1e9f1f.handler\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        characters_1e9f1f.characters -> length_8166b0.list\n        filter_1e9f1f.output_list -> length_8166b0_1.list\n        length_8166b0_1.length -> equal_f89569_1.left\n        1 -> equal_f89569_1.right\n        equal_f89569.result -> output_9e9f1f\n        equal_f89569_1.result -> output_9e9f1f\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_1e9f1f root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -299, y: -5, name: \"input\") property(String) input_1e9f1f\n\n        out(x: 1017, y: 5, name: \"output\") property(Bool) output_9e7c8f\n\n        instance(x: -152, y: -5) characters_9e7c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 316, y: 5) filter_9e7c8f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 641, y: 5) length_9e7c8f root.Std_k98ojb.List.Length {}\n        instance(x: 855, y: 5) equal_9e7c8f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1069, y: 5) not_9e7c8f root.Std_k98ojb.Logic.Not {}\n        characters_9e7c8f.characters -> filter_9e7c8f.items\n        func() {\n            in(x: -30, y: 46, name: \"current\") property(String) current_9e7c8f\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_9e7c8f\n\n            instance(x: 106, y: 17) equal_9e7c8f root.Std_k98ojb.Logic.Equal {}\n            current_9e7c8f -> equal_9e7c8f.left\n            input_1e9f1f -> equal_9e7c8f.right\n            equal_9e7c8f.result -> out_9e7c8f\n        } -> filter_9e7c8f.handler\n        filter_9e7c8f.output_list -> length_9e7c8f.list\n        length_9e7c8f.length -> equal_9e7c8f.left\n        1 -> equal_9e7c8f.right\n        equal_9e7c8f.result -> not_9e7c8f.input\n        not_9e7c8f.result -> output_9e7c8f\n    }\n\n    \n\n    instance(x: 10, y: -177) check_same_9e7c8f root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -285, y: -86, name: \"string\") property(String) string_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        string_3af6ba -> strings_characters_1f8a8a.input\n        strings_characters_1f8a8a.characters -> intersection_c7c7e6.left\n        strings_characters_1f8a8a.characters -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n        intersection_c7c7e6.intersection -> length_8166b0.list\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_ac7dfb root.main.check_same {}\n    instance(x: -84, y: -117) strings_characters_1f8a8a root.Std_k98ojb.Strings.Characters {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -35, y: -26, name: \"string\") property(String) string_1e7f7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e9f7f\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 0, y: 0) characters_1e7f7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) firstitem_1e7f7f root.Std_k98ojb.List.FirstItem {}\n        instance(x: 0, y: 0) filter_1e7f7f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) map_1e7f7f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) lessthanorequal_1e7f7f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 0, y: 0) if_1e7f7f root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) expression_1e7f7f root.Std_k98ojb.Math.Expression {\n            expression: \"it == first\"\n        }\n        instance(x: 0, y: 0) not_1e7f7f root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) and_1e7f7f root.Std_k98ojb.Logic.And {}\n        instance(x: 0, y: 0) for_1e7f7f root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) add_1e7f7f root.Std_k98ojb.Math.Add {}\n        characters_1e7f7f.input -> map_1e7f7f.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(String) current_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(String) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_1e7f7f.handler\n        map_1e7f7f.output_list -> filter_1e7f7f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(String) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> filter_1e7f7f.handler\n        filter_1e7f7f.output_list -> for_1e7f7f.items\n        for_1e7f7f.item -> expression_1e7f7f.gen_0\n        firstitem_1e7f7f.item -> expression_1e7f7f.gen_1\n        expression_1e7f7f.result -> if_1e7f7f.predicate\n        for_1e7f7f.onItem -> if_1e7f7f.execute\n        if_1e7f7f.else -> not_1e7f7f.input\n        if_1e7f7f.then -> continue_8ba06b\n        for_1e7f7f.done -> continue_8ba06b\n        not_1e7f7f.result -> and_1e7f7f.left\n        0 -> lessthanorequal_1e7f7f.left\n        length_6e87f2.length -> lessthanorequal_1e7f7f.right\n        lessthanorequal_1e7f7f.result -> and_1e7f7f.right\n        and_1e7f7f.result -> output_7e9f7f\n        string_1e7f7f -> characters_1e7f7f.input\n        characters_1e7f7f.characters -> firstitem_1e7f7f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) check_same_15f9e9 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -293, y: -5, name: \"input\") property(String) input_1e7f7f\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -275, y: -35) characters_9e9f8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: -275, y: 155) firstitem_1f8f9f root.Std_k98ojb.List.FirstItem {}\n        instance(x: 146, y: 155) lastitem_1f8f9f root.Std_k98ojb.List.LastItem {}\n        input_1e7f7f -> characters_9e9f8f.input\n        characters_9e9f8f.characters -> firstitem_1f8f9f.list\n        characters_9e9f8f.characters -> lastitem_1f8f9f.list\n        firstitem_1f8f9f.item -> intersection_c7c7e6.left\n        lastitem_1f8f9f.item -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_7a4dad root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -32, y: -26, name: \"string\") property(String) string_9e7f1f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_9e7f1f\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 0, y: 0) characters_1a9f1f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) filter_1a9f1f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) firstitem_1a9f1f root.Std_k98ojb.List.FirstItem {}\n        instance(x: 0, y: 0) notempty_1a9f1f root.Std_k98ojb.List.NotEmpty {}\n        instance(x: 0, y: 0) not_1a9f1f root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) and_1a9f1f root.Std_k98ojb.Logic.And {}\n        instance(x: 0, y: 0) if_1a9f1f root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) ifexpression_1a9f1f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        instance(x: 0, y: 0) getat_1a9f1f root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) for_1a9f1f root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) set_1a9f1f root.Std_k98ojb.List.Set {}\n        instance(x: 0, y: 0) add_1a9f1f root.Std_k98ojb.List.Add {}\n        instance(x: 0, y: 0) getat_1a9f1f_1 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_2 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_3 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_4 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_5 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_6 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_7 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_8 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_9 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_10 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_11 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_12 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_13 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_14 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_15 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_16 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_17 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_18 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_19 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_20 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_21 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_22 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_23 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_24 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_25 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_26 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_27 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_28 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_29 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_30 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_31 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_32 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_33 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_34 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_35 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_36 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_37 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_38 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_39 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_40 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_41 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_42 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_43 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_44 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) getat_1a9f1f_45 root.Std_k98",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -285, y: -86, name: \"string\") property(String) string_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        string_3af6ba -> strings_characters_1f8a1c.input\n        strings_characters_1f8a1c.characters -> intersection_c7c7e6.left\n        strings_characters_1f8a1c.characters -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n        intersection_c7c7e6.intersection -> length_8166b0.list\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_ac7dfb root.main.check_same {}\n    instance(x: -84, y: -117) strings_characters_1f8a1c root.Std_k98ojb.Strings.Characters {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -293, y: -5, name: \"input\") property(String) input_1e7f7f\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -275, y: -35) characters_9e7f1f root.Std_k98ojb.Strings.Characters {}\n        instance(x: -275, y: 155) firstitem_1e7f7f root.Std_k98ojb.List.FirstItem {}\n        instance(x: 146, y: 155) list_1e7f7f root.Std_k98ojb.List.Empty {}\n        instance(x: 360, y: 155) add_1e7f7f root.Std_k98ojb.List.Add {}\n        instance(x: 574, y: 155) getat_1e7f7f root.Std_k98ojb.List.GetAt {}\n        instance(x: 788, y: 155) for_1e7f7f root.Std_k98ojb.Std.For {}\n        instance(x: 1002, y: 155) if_1e7f7f root.Std_k98ojb.Std.If {}\n        instance(x: 1216, y: 155) if_1e7f7f_1 root.Std_k98ojb.Std.If {}\n        instance(x: 1430, y: 155) if_1e7f7f_2 root.Std_k98ojb.Std.If {}\n        instance(x: 1644, y: 155) if_1e7f7f_3 root.Std_k98ojb.Std.If {}\n        instance(x: 1858, y: 155) if_1e7f7f_4 root.Std_k98ojb.Std.If {}\n        instance(x: 2072, y: 155) if_1e7f7f_5 root.Std_k98ojb.Std.If {}\n        instance(x: 2286, y: 155) if_1e7f7f_6 root.Std_k98ojb.Std.If {}\n        instance(x: 2500, y: 155) if_1e7f7f_7 root.Std_k98ojb.Std.If {}\n        instance(x: 2714, y: 155) if_1e7f7f_8 root.Std_k98ojb.Std.If {}\n        instance(x: 2928, y: 155) if_1e7f7f_9 root.Std_k98ojb.Std.If {}\n        instance(x: 3142, y: 155) if_1e7f7f_10 root.Std_k98ojb.Std.If {}\n        instance(x: 3356, y: 155) if_1e7f7f_11 root.Std_k98ojb.Std.If {}\n        instance(x: 3570, y: 155) if_1e7f7f_12 root.Std_k98ojb.Std.If {}\n        instance(x: 3784, y: 155) if_1e7f7f_13 root.Std_k98ojb.Std.If {}\n        instance(x: 3998, y: 155) if_1e7f7f_14 root.Std_k98ojb.Std.If {}\n        instance(x: 4212, y: 155) if_1e7f7f_15 root.Std_k98ojb.Std.If {}\n        instance(x: 4426, y: 155) if_1e7f7f_16 root.Std_k98ojb.Std.If {}\n        instance(x: 4640, y: 155) if_1e7f7f_17 root.Std_k98ojb.Std.If {}\n        instance(x: 4854, y: 155) if_1e7f7f_18 root.Std_k98ojb.Std.If {}\n        instance(x: 5068, y: 155) if_1e7f7f_19 root.Std_k98ojb.Std.If {}\n        instance(x: 5282, y: 155) if_1e7f7f_20 root.Std_k98ojb.Std.If {}\n        instance(x: 5496, y: 155) if_1e7f7f_21 root.Std_k98ojb.Std.If {}\n        instance(x: 5710, y: 155) if_1e7f7f_22 root.Std_k98ojb.Std.If {}\n        instance(x: 5924, y: 155) if_1e7f7f_23 root.Std_k98ojb.Std.If {}\n        instance(x: 6138, y: 155) if_1e7f7f_24 root.Std_k98ojb.Std.If {}\n        instance(x: 6352, y: 155) if_1e7f7f_25 root.Std_k98ojb.Std.If {}\n        instance(x: 6566, y: 155) if_1e7f7f_26 root.Std_k98ojb.Std.If {}\n        instance(x: 6780, y: 155) if_1e7f7f_27 root.Std_k98ojb.Std.If {}\n        instance(x: 6994, y: 155) if_1e7f7f_28 root.Std_k98ojb.Std.If {}\n        instance(x: 7208, y: 155) if_1e7f7f_29 root.Std_k98ojb.Std.If {}\n        instance(x: 7422, y: 155) if_1e7f7f_30 root.Std_k98ojb.Std.If {}\n        instance(x: 7636, y: 155) if_1e7f7f_31 root.Std_k98ojb.Std.If {}\n        instance(x: 7850, y: 155) if_1e7f7f_32 root.Std_k98ojb.Std.If {}\n        instance(x: 8064, y: 155) if_1e7f7f_33 root.Std_k98ojb.Std.If {}\n        instance(x: 8278, y: 155) if_1e7f7f_34 root.Std_k98ojb.Std.If {}\n        instance(x: 8492, y: 155) if_1e7f7f_35 root.Std_k98ojb.Std.If {}\n        instance(x: 8706, y: 155) if_1e7f7f_36 root.Std_k98ojb.Std.If {}\n        instance(x: 8920, y: 155) if_1e7f7f_37 root.Std_k98ojb.Std.If {}\n        instance(x: 9134, y: 155) if_1e7f7f_38 root.Std_k98ojb.Std.If {}\n        instance(x: 9348, y: 155) if_1e7f7f_39 root.Std_k98ojb.Std.If {}\n        instance(x: 9562, y: 155) if_1e7f7f_40 root.Std_k98ojb.Std.If {}\n        instance(x: 9776, y: 155) if_1e7f7f_41 root.Std_k98ojb.Std.If {}\n        instance(x: 9990, y: 155) if_1e7f7f_42 root.Std_k98ojb.Std.If {}\n        instance(x: 10204, y: 155) if_1e7f7f_43 root.Std_k98ojb.Std.If {}\n        instance(x: 10318, y: 155) if_1e7f7f_44 root.Std_k98ojb.Std.If {}\n        instance(x: 10432, y: 155) if_1e7f7f_45 root.Std_k98ojb.Std.If {}\n        instance(x: 10546, y: 155) if_1e7f7f_46 root.Std_k98ojb.Std.If {}\n        instance(x: 10660, y: 155) if_1e7f7f_47 root.Std_k98ojb.Std.If {}\n        instance(x: 10774, y: 155) if_1e7f7f_48 root.Std_k98ojb.Std.If {}\n        instance(x: 10888, y: 155) if_1e7f7f_49 root.Std_k98ojb.Std.If {}\n        instance(x: 11002, y: 155) if_1e7f7f_50 root.Std_k98ojb.Std.If {}\n        instance(x: 11116, y: 155) if_1e",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -34, y: -26, name: \"string\") property(String) string_9e7f7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_9e7f7f\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 0, y: 0) characters_1a9f1f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) firstitem_1a9f1f root.Std_k98ojb.List.FirstItem {}\n        instance(x: 0, y: 0) filter_1a9f1f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) map_1a9f1f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) expression_1a9f1f root.Std_k98ojb.Math.Expression {\n            expression: \"current == first\"\n        }\n        instance(x: 0, y: 0) and_1a9f1f root.Std_k98ojb.Logic.And {}\n        instance(x: 0, y: 0) not_1a9f1f root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) if_1a9f1f root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) ifexpression_1a9f1f root.Std_k98ojb.Std.IfExpression {\n            expression: \"length == 0 || all\"\n        }\n        string_9e7f7f -> characters_1a9f1f.input\n        characters_1a9f1f.characters -> firstitem_1a9f1f.list\n        firstitem_1a9f1f.item -> expression_1a9f1f.gen_1\n        characters_1a9f1f.characters -> filter_1a9f1f.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(String) current_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> equal_f89569.left\n            expression_1a9f1f.result -> equal_f89569.right\n            equal_f89569.result -> output_efbc78\n        } -> filter_1a9f1f.handler\n        filter_1a9f1f.output_list -> map_1a9f1f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) not_75283f root.Std_k98ojb.Logic.Not {}\n            current_81298e -> not_75283f.input\n            not_75283f.result -> bool_4524be\n        } -> map_1a9f1f.handler\n        map_1a9f1f.output_list -> length_6e87f2.list\n        length_6e87f2.length -> equal_f89569.left\n        0 -> equal_f89569.right\n        equal_f89569.result -> if_1a9f1f.predicate\n        if_1a9f1f.then -> not_1a9f1f.execute\n        if_1a9f1f.else -> and_1a9f1f.execute\n        map_1a9f1f.output_list -> and_1a9f1f.left\n        1 -> and_1a9f1f.right\n        and_1a9f1f.result -> ifexpression_1a9f1f.gen_1\n        length_6e87f2.length -> ifexpression_1a9f1f.gen_0\n        ifexpression_1a9f1f.result -> output_9e7f7f\n    }\n\n    \n\n    instance(x: 48, y: 11) check_same_15f9e9 root.main.check_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_1e7f1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_1e7f1c.y\n        expression_2d6da6.result -> pow_1e7f1c.x\n        pow_1e7f1c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_1e7b1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_1e7b1c.y\n        expression_2d6da6.result -> pow_1e7b1c.x\n        pow_1e7b1c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_2a3f1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_2a3f1c.y\n        expression_2d6da6.result -> pow_2a3f1c.x\n        pow_2a3f1c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_1f8f1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_1f8f1c.y\n        expression_2d6da6.result -> pow_1f8f1c.x\n        pow_1f8f1c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_2f3f1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_2f3f1c.y\n        expression_2d6da6.result -> pow_2f3f1c.x\n        pow_2f3f1c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_1e9b2e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_1e9b2e.y\n        expression_2d6da6.result -> pow_1e9b2e.x\n        pow_1e9b2e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_1f8f1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_1f8f1c.y\n        expression_2d6da6.result -> pow_1f8f1c.x\n        pow_1f8f1c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_2f7f1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_2f7f1c.y\n        expression_2d6da6.result -> pow_2f7f1c.x\n        pow_2f7f1c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_1f8f1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_1f8f1c.y\n        expression_2d6da6.result -> pow_1f8f1c.x\n        pow_1f8f1c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_2f7f1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_2f7f1c.y\n        expression_2d6da6.result -> pow_2f7f1c.x\n        pow_2f7f1c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3c8f9f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_9e7f7f\n\n        instance(x: 94, y: -105) mul_1a8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f9f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_7e9f9f root.Std_k98ojb.Math.Mul {}\n        size_3c8f9f -> mul_1a8c1f.first\n        size_3c8f9f -> mul_1a8c1f.second\n        mul_1a8c1f.result -> mul_5f9f9f.first\n        6 -> mul_5f9f9f.second\n        mul_5f9f9f.result -> mul_7e9f9f.first\n        size_3c8f9f -> mul_7e9f9f.second\n        mul_7e9f9f.result -> surface_area_9e7f7f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_9f9f9f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3c2f7f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_9e9f7f\n\n        instance(x: 94, y: -105) mul_9e9f7f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9e9f7f_2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9e9f7f_3 root.Std_k98ojb.Math.Mul {}\n        size_3c2f7f -> mul_9e9f7f.first\n        size_3c2f7f -> mul_9e9f7f_2.first\n        size_3c2f7f -> mul_9e9f7f_3.first\n        mul_9e9f7f.result -> mul_9e9f7f_2.second\n        mul_9e9f7f.result -> mul_9e9f7f_3.second\n        6 -> mul_9e9f7f.second\n        2 -> mul_9e9f7f_2.second\n        mul_9e9f7f_2.result -> mul_9e9f7f_3.second\n        mul_9e9f7f_3.result -> surface_area_9e9f7f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_9e9f7f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6e9c8f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_1f3f7f\n\n        instance(x: 94, y: -105) mul_1f9f9f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f9f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9f9f9f root.Std_k98ojb.Math.Mul {}\n        size_6e9c8f -> mul_1f9f9f.first\n        size_6e9c8f -> mul_1f9f9f.second\n        mul_1f9f9f.result -> mul_5f9f9f.first\n        mul_1f9f9f.result -> mul_5f9f9f.second\n        mul_1f9f9f.result -> mul_9f9f9f.first\n        mul_1f9f9f.result -> mul_9f9f9f.second\n        mul_5f9f9f.result -> mul_9f9f9f.second\n        mul_5f9f9f.result -> surface_area_1f3f7f\n        mul_9f9f9f.result -> surface_area_1f3f7f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_9f9f9f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6a7f9f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_1f7f7f\n\n        instance(x: 94, y: -105) mul_1e8f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5e8f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_7e8f1f root.Std_k98ojb.Math.Mul {}\n        size_6a7f9f -> mul_1e8f1f.first\n        size_6a7f9f -> mul_1e8f1f.second\n        mul_1e8f1f.result -> mul_5e8f1f.first\n        6 -> mul_5e8f1f.second\n        mul_5e8f1f.result -> mul_7e8f1f.first\n        size_6a7f9f -> mul_7e8f1f.second\n        mul_7e8f1f.result -> surface_area_1f7f7f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_9f7f7f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6a7f7f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_7e9f9f\n\n        instance(x: 94, y: -105) mul_1e8c1e root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1e_1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1e_2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1e_3 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1e_4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1e_5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1e_6 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) add_1e8c1e root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_1e8c1e_1 root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_1e8c1e_2 root.Std_k98ojb.Math.Add {}\n        size_6a7f7f -> mul_1e8c1e.first\n        size_6a7f7f -> mul_1e8c1e.second\n        mul_1e8c1e.result -> mul_1e8c1e_1.first\n        mul_1e8c1e.result -> mul_1e8c1e_2.first\n        mul_1e8c1e.result -> mul_1e8c1e_3.first\n        mul_1e8c1e.result -> mul_1e8c1e_4.first\n        mul_1e8c1e.result -> mul_1e8c1e_5.first\n        mul_1e8c1e.result -> mul_1e8c1e_6.first\n        size_6a7f7f -> mul_1e8c1e_1.second\n        size_6a7f7f -> mul_1e8c1e_2.second\n        size_6a7f7f -> mul_1e8c1e_3.second\n        size_6a7f7f -> mul_1e8c1e_4.second\n        size_6a7f7f -> mul_1e8c1e_5.second\n        size_6a7f7f -> mul_1e8c1e_6.second\n        mul_1e8c1e_1.result -> add_1e8c1e.first\n        mul_1e8c1e_2.result -> add_1e8c1e.second\n        mul_1e8c1e_3.result -> add_1e8c1e_1.first\n        mul_1e8c1e_4.result -> add_1e8c1e_1.second\n        mul_1e8c1e_5.result -> add_1e8c1e_2.first\n        mul_1e8c1e_6.result -> add_1e8c1e_2.second\n        add_1e8c1e.result -> add_1e8c1e_2.first\n        add_1e8c1e_1.result -> add_1e8c1e_2.second\n        add_1e8c1e_2.result -> surface_area_7e9f9f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_1e8c1e root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6a3f7f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_1f3f1f\n\n        instance(x: 94, y: -105) mul_1e9f2f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e9f2f_1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e9f2f_2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e9f2f_3 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e9f2f_4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e9f2f_5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) add_1e9f2f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_1e9f2f_1 root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_1e9f2f_2 root.Std_k98ojb.Math.Add {}\n        size_6a3f7f -> mul_1e9f2f.first\n        size_6a3f7f -> mul_1e9f2f.second\n        size_6a3f7f -> mul_1e9f2f_1.first\n        size_6a3f7f -> mul_1e9f2f_1.second\n        size_6a3f7f -> mul_1e9f2f_2.first\n        size_6a3f7f -> mul_1e9f2f_2.second\n        size_6a3f7f -> mul_1e9f2f_3.first\n        size_6a3f7f -> mul_1e9f2f_3.second\n        size_6a3f7f -> mul_1e9f2f_4.first\n        size_6a3f7f -> mul_1e9f2f_4.second\n        size_6a3f7f -> mul_1e9f2f_5.first\n        size_6a3f7f -> mul_1e9f2f_5.second\n        mul_1e9f2f.result -> add_1e9f2f.first\n        mul_1e9f2f_1.result -> add_1e9f2f.second\n        mul_1e9f2f_2.result -> add_1e9f2f_1.first\n        mul_1e9f2f_3.result -> add_1e9f2f_1.second\n        mul_1e9f2f_4.result -> add_1e9f2f_2.first\n        mul_1e9f2f_5.result -> add_1e9f2f_2.second\n        add_1e9f2f.result -> add_1e9f2f_2.first\n        add_1e9f2f_1.result -> add_1e9f2f_2.second\n        add_1e9f2f_2.result -> surface_area_1f3f1f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_1e9f2f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6a7f9f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_1f3f1f\n\n        instance(x: 94, y: -105) mul_9e9f9f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6a7f7f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_7e9f9f\n\n        instance(x: 94, y: -105) mul_9e9f8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e9f8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_2e9f8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_3e9f8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_4e9f8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5e9f8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_6e9f8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) add_7e9f8f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_8e9f8f root.Std_k98ojb.Math.Add {}\n        size_6a7f7f -> mul_9e9f8f.first\n        size_6a7f7f -> mul_1e9f8f.first\n        size_6a7f7f -> mul_2e9f8f.first\n        size_6a7f7f -> mul_3e9f8f.first\n        size_6a7f7f -> mul_4e9f8f.first\n        size_6a7f7f -> mul_5e9f8f.first\n        size_6a7f7f -> mul_6e9f8f.first\n        6 -> mul_9e9f8f.second\n        2 -> mul_1e9f8f.second\n        2 -> mul_2e9f8f.second\n        2 -> mul_3e9f8f.second\n        2 -> mul_4e9f8f.second\n        2 -> mul_5e9f8f.second\n        2 -> mul_6e9f8f.second\n        mul_9e9f8f.result -> add_7e9f8f.first\n        mul_1e9f8f.result -> add_7e9f8f.second\n        mul_2e9f8f.result -> add_8e9f8f.first\n        mul_3e9f8f.result -> add_8e9f8f.second\n        mul_4e9f8f.result -> mul_5e9f8f.first\n        mul_6e9f8f.result -> mul_5e9f8f.second\n        add_7e9f8f.result -> add_8e9f8f.second\n        mul_5e9f8f.result -> add_7e9f8f.first\n        add_8e9f8f.result -> surface_area_7e9f9f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_9e9f8f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3c8c9f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_7e9f7f\n\n        instance(x: 94, y: -105) mul_1a9c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f9f2f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_2a9c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_2f9f2f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_349c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_3f9f2f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_449c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_4f9f2f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_549c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f2f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_649c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_6f9f2f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_749c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_7f9f2f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_849c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_8f9f2f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_949c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9f9f2f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_a49c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_af9f2f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_b49c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_bf9f2f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_c49c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_cf9f2f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_d49c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_df9f2f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_e49c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_ef9f2f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_f49c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) add_1a9c8f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_1f9f2f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_249c8f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_2f9f2f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_349c8f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_3f9f2f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_449c8f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_4f9f2f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_549c8f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_5f9f2f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_649c8f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_6f9f2f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_749c8f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_7f9f2f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_849c8f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_8f9f2f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_949c8f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_9f9f2f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_a49c8f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_af9f2f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_b49c8f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_bf9f2f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_c49c8f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_cf9f2f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_d49c8f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_df9f2f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_e49c8f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_ef9f2f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_f49c8f root.Std_k98ojb.Math.Add {}\n        size_3c8c9f -> mul_1a9c8f.first\n        size_3c8c9f -> mul_1a9c8f.second\n        size_3c8c9f -> mul_1f9f2f.first\n        size_3c8c9f -> mul_1f9f2f.second\n        size_3c8c9f -> mul_2a9c8f.first\n        size_3c8c9f -> mul_2a9c8f.second\n        size_3c8c9f -> mul_2f9f2f.first\n        size_3c8c9f -> mul_2f9f2f.second\n        size_3c8c9f -> mul_349c8f.first\n        size_3c8c9f -> mul_349c8f.second\n        size_3c8c9f -> mul_3f9f2f.first\n        size_3c8c9f -> mul_3f9f2f.second\n        size_3c8c9f -> mul_449c8f.first\n        size_3c8c9",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6a7f7f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_7e1c8f\n\n        instance(x: 94, y: -105) mul_1f3c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f3c1f_1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f3c1f_2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f3c1f_3 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f3c1f_4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f3c1f_5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) add_1f3c1f_6 root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_1f3c1f_7 root.Std_k98ojb.Math.Add {}\n        size_6a7f7f -> mul_1f3c1f.first\n        size_6a7f7f -> mul_1f3c1f.second\n        size_6a7f7f -> mul_1f3c1f_1.first\n        size_6a7f7f -> mul_1f3c1f_1.second\n        size_6a7f7f -> mul_1f3c1f_2.first\n        size_6a7f7f -> mul_1f3c1f_2.second\n        size_6a7f7f -> mul_1f3c1f_3.first\n        size_6a7f7f -> mul_1f3c1f_3.second\n        size_6a7f7f -> mul_1f3c1f_4.first\n        size_6a7f7f -> mul_1f3c1f_4.second\n        size_6a7f7f -> mul_1f3c1f_5.first\n        size_6a7f7f -> mul_1f3c1f_5.second\n        mul_1f3c1f.result -> mul_1f3c1f_1.first\n        mul_1f3c1f.result -> mul_1f3c1f_2.first\n        mul_1f3c1f.result -> mul_1f3c1f_3.first\n        mul_1f3c1f.result -> mul_1f3c1f_4.first\n        mul_1f3c1f.result -> mul_1f3c1f_5.first\n        mul_1f3c1f.result -> add_1f3c1f_6.first\n        mul_1f3c1f.result -> add_1f3c1f_7.first\n        mul_1f3c1f.result -> mul_1f3c1f_1.second\n        mul_1f3c1f.result -> mul_1f3c1f_2.second\n        mul_1f3c1f.result -> mul_1f3c1f_3.second\n        mul_1f3c1f.result -> mul_1f3c1f_4.second\n        mul_1f3c1f.result -> mul_1f3c1f_5.second\n        mul_1f3c1f_1.result -> add_1f3c1f_6.second\n        mul_1f3c1f_2.result -> add_1f3c1f_7.second\n        mul_1f3c1f_3.result -> add_1f3c1f_6.second\n        mul_1f3c1f_4.result -> add_1f3c1f_7.second\n        mul_1f3c1f_5.result -> add_1f3c1f_7.second\n        add_1f3c1f_6.result -> add_1f3c1f_7.first\n        add_1f3c1f_7.result -> surface_area_7e1c8f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_1f3c1f root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a7f1f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6c7f1f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a7f1f.max -> sub_852f2e.first\n        min_6c7f1f.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a7f1f.list\n        list_0b075e -> min_6c7f1f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_5e9f2f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6e87f2 root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_5e9f2f.max -> sub_852f2e.first\n        min_6e87f2.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_5e9f2f.list\n        list_0b075e -> min_6e87f2.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a9c1e root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6f9c1e root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a9c1e.max -> sub_852f2e.first\n        min_6f9c1e.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a9c1e.list\n        list_0b075e -> min_6f9c1e.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a9c8e root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6e7f1f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a9c8e.max -> sub_852f2e.first\n        min_6e7f1f.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a9c8e.list\n        list_0b075e -> min_6e7f1f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a9c8e root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6e7f2f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a9c8e.max -> sub_852f2e.first\n        min_6e7f2f.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a9c8e.list\n        list_0b075e -> min_6e7f2f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_5e9f2f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6e87f2 root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_5e9f2f.max -> sub_852f2e.first\n        min_6e87f2.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_5e9f2f.list\n        list_0b075e -> min_6e87f2.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a9c1e root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6e7f1f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a9c1e.max -> sub_852f2e.first\n        min_6e7f1f.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a9c1e.list\n        list_0b075e -> min_6e7f1f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_5e9f1f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6e87f2 root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_5e9f1f.max -> sub_852f2e.first\n        min_6e87f2.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_5e9f1f.list\n        list_0b075e -> min_6e87f2.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a7f1f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6c9c8f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a7f1f.max -> sub_852f2e.first\n        min_6c9c8f.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a7f1f.list\n        list_0b075e -> min_6c9c8f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a7f2f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6c9f1f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a7f2f.max -> sub_852f2e.first\n        min_6c9f1f.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a7f2f.list\n        list_0b075e -> min_6c9f1f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_7e7f7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e7f7f\n\n        instance(x: 201, y: 62) modulo_7e7f7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_7e7f7f root.Std_k98ojb.Logic.Equal {}\n        n_7e7f7f -> modulo_7e7f7f.value\n        2 -> modulo_7e7f7f.divisor\n        modulo_7e7f7f.result -> equal_7e7f7f.left\n        0 -> equal_7e7f7f.right\n        equal_7e7f7f.result -> output_7e7f7f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_7e7f7f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_1e7f9f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_1e7f9f\n\n        instance(x: 201, y: 62) modulo_1e7f9f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_1e7f9f root.Std_k98ojb.Logic.Equal {}\n        n_1e7f9f -> modulo_1e7f9f.value\n        2 -> modulo_1e7f9f.divisor\n        modulo_1e7f9f.result -> equal_1e7f9f.left\n        0 -> equal_1e7f9f.right\n        equal_1e7f9f.result -> output_1e7f9f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_1e7f9f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_7e7f9f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_1a7c9f\n\n        instance(x: 201, y: 62) modulo_9e7f9f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_1a7c9f root.Std_k98ojb.Logic.Equal {}\n        n_7e7f9f -> modulo_9e7f9f.value\n        2 -> modulo_9e7f9f.divisor\n        modulo_9e7f9f.result -> equal_1a7c9f.left\n        0 -> equal_1a7c9f.right\n        equal_1a7c9f.result -> output_1a7c9f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_15f9e9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_7e7f7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e7f7f\n\n        instance(x: 201, y: 62) modulo_7e7f7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_7e7f7f root.Std_k98ojb.Logic.Equal {}\n        n_7e7f7f -> modulo_7e7f7f.value\n        2 -> modulo_7e7f7f.divisor\n        modulo_7e7f7f.result -> equal_7e7f7f.left\n        0 -> equal_7e7f7f.right\n        equal_7e7f7f.result -> output_7e7f7f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_7e7f7f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_7e7f7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e7f7f\n\n        instance(x: 201, y: 62) modulo_7e7f7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_7e7f7f root.Std_k98ojb.Logic.Equal {}\n        n_7e7f7f -> modulo_7e7f7f.value\n        2 -> modulo_7e7f7f.divisor\n        modulo_7e7f7f.result -> equal_7e7f7f.left\n        0 -> equal_7e7f7f.right\n        equal_7e7f7f.result -> output_7e7f7f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_7e7f7f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_1a9f9f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_1e7f8f\n\n        instance(x: 201, y: 62) modulo_9e9f9f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_1e7f8f root.Std_k98ojb.Logic.Equal {}\n        n_1a9f9f -> modulo_9e9f9f.value\n        2 -> modulo_9e9f9f.divisor\n        modulo_9e9f9f.result -> equal_1e7f8f.left\n        0 -> equal_1e7f8f.right\n        equal_1e7f8f.result -> output_1e7f8f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_15f9e9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_7e9f7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e9f7f\n\n        instance(x: 201, y: 62) modulo_7e9f7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_7e9f7f root.Std_k98ojb.Logic.Equal {}\n        n_7e9f7f -> modulo_7e9f7f.value\n        2 -> modulo_7e9f7f.divisor\n        modulo_7e9f7f.result -> equal_7e9f7f.left\n        0 -> equal_7e9f7f.right\n        equal_7e9f7f.result -> output_7e9f7f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_7e9f7f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_1a9f7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_1e9f7f\n\n        instance(x: 201, y: 62) modulo_1e9f7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_1e9f7f root.Std_k98ojb.Logic.Equal {}\n        n_1a9f7f -> modulo_1e9f7f.value\n        2 -> modulo_1a9f7f.divisor\n        modulo_1a9f7f.result -> equal_1a9f7f.left\n        0 -> equal_1a9f7f.right\n        equal_1a9f7f.result -> output_1a9f7f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_15f9e9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_1e7f7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e9c9f\n\n        instance(x: 201, y: 62) modulo_9e9c9f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_9e9c9f root.Std_k98ojb.Logic.Equal {}\n        modulo_9e9c9f.result -> equal_9e9c9f.left\n        0 -> equal_9e9c9f.right\n        equal_9e9c9f.result -> output_7e9c9f\n        n_1e7f7f -> modulo_9e9c9f.value\n        2 -> modulo_9e9c9f.divisor\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_15f9e9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_1a7f7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_1e7f7f\n\n        instance(x: 201, y: 62) modulo_1e7f7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_1e7f7f root.Std_k98ojb.Logic.Equal {}\n        modulo_1e7f7f.result -> equal_1e7f7f.left\n        0 -> equal_1e7f7f.right\n        equal_1e7f7f.result -> output_1e7f7f\n        n_1a7f7f -> modulo_1e7f7f.value\n        2 -> modulo_1e7f7f.divisor\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_1e7f7f root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 8701,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -255, y: -171, name: \"list1\") property(List) list1_1f846b\n        in(x: -263, y: -41, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_4e8c54.left\n            list2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n        instance(x: 245, y: -54) filter_4e8c54 root.Std_k98ojb.Iteration.Filter {}\n        filter_4e8c54.handler -> zip_201051.zipped\n        filter_4e8c54.output_list -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -255, y: -144, name: \"list1\") property(List) list1_1f846b\n        in(x: -263, y: -14, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_4e8c54.left\n            list2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n        instance(x: 245, y: -54) filter_4e8c54 root.Std_k98ojb.Iteration.Filter {}\n        filter_4e8c54.handler -> zip_201051.zipped\n        filter_4e8c54.output_list -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_4e8c54.left\n            list2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n        instance(x: 245, y: -54) filter_4e8c54 root.Std_k98ojb.Iteration.Filter {}\n        filter_4e8c54.handler -> zip_201051.zipped\n        filter_4e8c54.output_list -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -255, y: -86, name: \"list1\") property(List) list1_1f846b\n        in(x: -263, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -193, y: -147, name: \"list1\") property(List) list1_1f846b\n        in(x: -201, y: -7, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -273, y: -85, name: \"list1\") property(List) list1_1f846b\n        in(x: -281, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -284, y: -86, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 245, y: -54) notempty_4e8c54 root.Std_k98ojb.List.NotEmpty {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> notempty_4e8c54.list\n        notempty_4e8c54.isEmpty -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -285, y: -86, name: \"list1\") property(List) list1_3af6ba\n        in(x: -285, y: -86, name: \"list2\") property(List) list2_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list1_3af6ba -> intersection_c7c7e6.left\n        list2_3af6ba -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_ac7dfb root.main.common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -525, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -525, y: -5, name: \"list\") property(List) list_7e7c7c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_7e7c7c\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_7e7c7c\n\n        instance(x: 752, y: 93) ifexpression_7e7c7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_7e7c7c\") getter_7e7c7c = previous\n        setter(x: 679, y: -313, name: \"setter_7e7c7c\") setter_7e7c7c = previous\n        instance(x: 321, y: -20) for_7e7c7c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7e7c7c\") setter_7e7c7c = previous\n        instance(x: -275, y: -35) getat_7e7c7c root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e7c7c.else -> continue_7e7c7c\n        ifexpression_7e7c7c.value -> output_7e7c7c\n        ifexpression_7e7c7c.then -> setter_7e7c7c.execute\n        list_7e7c7c -> for_7e7c7c.items\n        for_7e7c7c.item -> ifexpression_7e7c7c.gen_2\n        for_7e7c7c.index -> ifexpression_7e7c7c.gen_0\n        getter_7e7c7c.value -> ifexpression_7e7c7c.gen_1\n        for_7e7c7c.onItem -> ifexpression_7e7c7c.execute\n        for_7e7c7c.done -> continue_7e7c7c\n        for_7e7c7c.item -> setter_7e7c7c.new_value\n        list_7e7c7c -> getat_7e7c7c.list\n        0 -> getat_7e7c7c.index\n        getat_7e7c7c.itemAtIndex -> setter_7e7c7c.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) consecutive_7e7c7c root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -485, y: -235, name: \"list\") property(List) list_1a8c8c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_7e7f7f\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_7e7f7f\n\n        instance(x: 752, y: 93) ifexpression_7e7f7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_7e7f7f\") getter_7e7f7f = previous\n        setter(x: 679, y: -313, name: \"setter_7e7f7f\") setter_7e7f7f = previous\n        instance(x: 321, y: -20) for_7e7f7f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7e7f7f\") setter_7e7f7f = previous\n        instance(x: -275, y: -35) getat_7e7f7f root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e7f7f.else -> continue_7e7f7f\n        ifexpression_7e7f7f.value -> output_7e7f7f\n        ifexpression_7e7f7f.then -> setter_7e7f7f.execute\n        list_1a8c8c -> for_7e7f7f.items\n        for_7e7f7f.item -> ifexpression_7e7f7f.gen_2\n        for_7e7f7f.index -> ifexpression_7e7f7f.gen_0\n        getter_7e7f7f.value -> ifexpression_7e7f7f.gen_1\n        for_7e7f7f.onItem -> ifexpression_7e7f7f.execute\n        for_7e7f7f.done -> continue_7e7f7f\n        for_7e7f7f.item -> setter_7e7f7f.new_value\n        list_1a8c8c -> getat_7e7f7f.list\n        0 -> getat_7e7f7f.index\n        getat_7e7f7f.itemAtIndex -> setter_7e7f7f.new_value\n        setter_7e7f7f.continue -> for_7e7f7f.reset\n        setter_7e7f7f.continue -> for_7e7f7f.next\n    }\n\n    \n\n    instance(x: 10, y: -177) consecutive_7e7f7f root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -525, y: -5, name: \"list\") property(List) list_7e7c8c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_7e7c8c\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_7e7c8c\n\n        instance(x: 752, y: 93) ifexpression_7e7c8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_7e7c8c\") getter_7e7c8c = previous\n        setter(x: 679, y: -313, name: \"setter_7e7c8c\") setter_7e7c8c = previous\n        instance(x: 321, y: -20) for_7e7c8c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7e7c8c\") setter_7e7c8c = previous\n        instance(x: -275, y: -35) getat_7e7c8c root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e7c8c.else -> continue_7e7c8c\n        ifexpression_7e7c8c.value -> output_7e7c8c\n        ifexpression_7e7c8c.then -> setter_7e7c8c.execute\n        list_7e7c8c -> for_7e7c8c.items\n        for_7e7c8c.item -> ifexpression_7e7c8c.gen_2\n        for_7e7c8c.index -> ifexpression_7e7c8c.gen_0\n        getter_7e7c8c.value -> ifexpression_7e7c8c.gen_1\n        for_7e7c8c.onItem -> ifexpression_7e7c8c.execute\n        for_7e7c8c.done -> continue_7e7c8c\n        for_7e7c8c.item -> setter_7e7c8c.new_value\n        list_7e7c8c -> getat_7e7c8c.list\n        0 -> getat_7e7c8c.index\n        getat_7e7c8c.itemAtIndex -> setter_7e7c8c.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) consecutive_7e7c8c root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -525, y: -5, name: \"list\") property(List) list_7e9f7f\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_9e7f1f\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_7e9f7f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_9e7f1f\n        ifexpression_875761.value -> output_7e9f7f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_7e9f7f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_9e7f1f\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_7e9f7f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) consecutive_7e9f7f root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -525, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e4c1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e4c1f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e4c1f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e4c1f.input\n        \" \" -> replace_1e4c1f.search\n        \":\" -> replace_1e4c1f.replace\n        replace_1e4c1f.output -> replace_1e4c1f_2.input\n        \",\" -> replace_1e4c1f_2.search\n        \":\" -> replace_1e4c1f_2.replace\n        replace_1e4c1f_2.output -> replace_1e4c1f_3.input\n        \".\" -> replace_1e4c1f_3.search\n        \":\" -> replace_1e4c1f_3.replace\n        replace_1e4c1f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e4c1f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e4c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e4c8f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e4c8f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e4c8f.input\n        \" \" -> replace_1e4c8f.search\n        \":\" -> replace_1e4c8f.replace\n        replace_1e4c8f.output -> replace_1e4c8f_2.input\n        \",\" -> replace_1e4c8f_2.search\n        \":\" -> replace_1e4c8f_2.replace\n        replace_1e4c8f_2.output -> replace_1e4c8f_3.input\n        \".\" -> replace_1e4c8f_3.search\n        \":\" -> replace_1e4c8f_3.replace\n        replace_1e4c8f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e4c8f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e3c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e3c8f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e3c8f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e3c8f.input\n        \" \" -> replace_1e3c8f.search\n        \":\" -> replace_1e3c8f.replace\n        replace_1e3c8f.output -> replace_1e3c8f_2.input\n        \",\" -> replace_1e3c8f_2.search\n        \":\" -> replace_1e3c8f_2.replace\n        replace_1e3c8f_2.output -> replace_1e3c8f_3.input\n        \".\" -> replace_1e3c8f_3.search\n        \":\" -> replace_1e3c8f_3.replace\n        replace_1e3c8f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e3c8f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e3c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e3c8f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e3c8f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e3c8f.input\n        \" \" -> replace_1e3c8f.search\n        \":\" -> replace_1e3c8f.replace\n        replace_1e3c8f.output -> replace_1e3c8f_2.input\n        \",\" -> replace_1e3c8f_2.search\n        \":\" -> replace_1e3c8f_2.replace\n        replace_1e3c8f_2.output -> replace_1e3c8f_3.input\n        \".\" -> replace_1e3c8f_3.search\n        \":\" -> replace_1e3c8f_3.replace\n        replace_1e3c8f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e3c8f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e4c1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e4c1f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e4c1f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e4c1f.input\n        \" \" -> replace_1e4c1f.search\n        \":\" -> replace_1e4c1f.replace\n        replace_1e4c1f.output -> replace_1e4c1f_2.input\n        \",\" -> replace_1e4c1f_2.search\n        \":\" -> replace_1e4c1f_2.replace\n        replace_1e4c1f_2.output -> replace_1e4c1f_3.input\n        \".\" -> replace_1e4c1f_3.search\n        \":\" -> replace_1e4c1f_3.replace\n        replace_1e4c1f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e4c1f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e4c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e4c8f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e4c8f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e4c8f.input\n        \" \" -> replace_1e4c8f.search\n        \":\" -> replace_1e4c8f.replace\n        replace_1e4c8f.output -> replace_1e4c8f_2.input\n        \",\" -> replace_1e4c8f_2.search\n        \":\" -> replace_1e4c8f_2.replace\n        replace_1e4c8f_2.output -> replace_1e4c8f_3.input\n        \".\" -> replace_1e4c8f_3.search\n        \":\" -> replace_1e4c8f_3.replace\n        replace_1e4c8f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e4c8f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e4c1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e4c1f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e4c1f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e4c1f.input\n        \" \" -> replace_1e4c1f.search\n        \":\" -> replace_1e4c1f.replace\n        replace_1e4c1f.output -> replace_1e4c1f_2.input\n        \",\" -> replace_1e4c1f_2.search\n        \":\" -> replace_1e4c1f_2.replace\n        replace_1e4c1f_2.output -> replace_1e4c1f_3.input\n        \".\" -> replace_1e4c1f_3.search\n        \":\" -> replace_1e4c1f_3.replace\n        replace_1e4c1f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e4c1f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e4c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e4c8f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e4c8f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e4c8f.input\n        \" \" -> replace_1e4c8f.search\n        \":\" -> replace_1e4c8f.replace\n        replace_1e4c8f.output -> replace_1e4c8f_2.input\n        \",\" -> replace_1e4c8f_2.search\n        \":\" -> replace_1e4c8f_2.replace\n        replace_1e4c8f_2.output -> replace_1e4c8f_3.input\n        \".\" -> replace_1e4c8f_3.search\n        \":\" -> replace_1e4c8f_3.replace\n        replace_1e4c8f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e4c8f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e4c1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e4c1f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e4c1f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e4c1f.input\n        \" \" -> replace_1e4c1f.search\n        \":\" -> replace_1e4c1f.replace\n        replace_1e4c1f.output -> replace_1e4c1f_2.input\n        \",\" -> replace_1e4c1f_2.search\n        \":\" -> replace_1e4c1f_2.replace\n        replace_1e4c1f_2.output -> replace_1e4c1f_3.input\n        \".\" -> replace_1e4c1f_3.search\n        \":\" -> replace_1e4c1f_3.replace\n        replace_1e4c1f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e4c1f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e3f1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e3f1f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e3f1f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e3f1f.input\n        \" \" -> replace_1e3f1f.search\n        \":\" -> replace_1e3f1f.replace\n        replace_1e3f1f.output -> replace_1e3f1f_2.input\n        \",\" -> replace_1e3f1f_2.search\n        \":\" -> replace_1e3f1f_2.replace\n        replace_1e3f1f_2.output -> replace_1e3f1f_3.input\n        \".\" -> replace_1e3f1f_3.search\n        \":\" -> replace_1e3f1f_3.replace\n        replace_1e3f1f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e3f1f root.main.replace_spaces_commas_dots {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -290, y: -11, name: \"string\") property(String) string_1e7c8c\n\n        out(x: 557, y: 5, name: \"output\") property(Bool) output_7e7c8c\n\n        instance(x: -82, y: -11) characters_1e7c8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 201, y: 5) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 415, y: 5) filter_1e7c8c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 640, y: 5) length_1e7c8c root.Std_k98ojb.List.Length {}\n        instance(x: 854, y: 5) equal_1e7c8c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1068, y: 5) not_1e7c8c root.Std_k98ojb.Logic.Not {}\n        characters_1e7c8c.characters -> filter_1e7c8c.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(String) current_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_1e7c8c.handler\n        length_6e87f2.list -> characters_1e7c8c.string\n        filter_1e7c8c.output_list -> length_1e7c8c.list\n        length_1e7c8c.length -> equal_1e7c8c.left\n        1 -> equal_1e7c8c.right\n        not_1e7c8c.result -> output_7e7c8c\n        equal_1e7c8c.result -> not_1e7c8c.input\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_ac7dfb root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -293, y: -26, name: \"string\") property(String) string_9e9f7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_9e9f7f\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 0, y: -26) characters_9e9f7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: -26) firstitem_9e9f7f root.Std_k98ojb.List.FirstItem {}\n        instance(x: 0, y: -26) lastitem_9e9f7f root.Std_k98ojb.List.LastItem {}\n        instance(x: 0, y: -26) filter_9e9f7f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: -26) map_9e9f7f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: -26) reduce_9e9f7f root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 0, y: -26) find_9e9f7f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -26) zip_9e9f7f root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 0, y: -26) generaterange_9e9f7f root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 0, y: -26) getat_9e9f7f root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: -26) add_9e9f7f root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: -26) sub_9e9f7f root.Std_k98ojb.Math.Sub {}\n        instance(x: 0, y: -26) mul_9e9f7f root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -26) div_9e9f7f root.Std_k98ojb.Math.Div {}\n        instance(x: 0, y: -26) modulo_9e9f7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 0, y: -26) pow_9e9f7f root.Std_k98ojb.Math.Pow {}\n        instance(x: 0, y: -26) floor_9e9f7f root.Std_k98ojb.Math.Floor {}\n        instance(x: 0, y: -26) lessthanorequal_9e9f7f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 0, y: -26) greaterthan_9e9f7f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 0, y: -26) expression_9e9f7f root.Std_k98ojb.Math.Expression {}\n        instance(x: 0, y: -26) not_9e9f7f root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: -26) and_9e9f7f root.Std_k98ojb.Logic.And {}\n        instance(x: 0, y: -26) or_9e9f7f root.Std_k98ojb.Logic.Or {}\n        instance(x: 0, y: -26) notequal_9e9f7f root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 0, y: -26) if_9e9f7f root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: -26) ifexpression_9e9f7f root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 0, y: -26) count_9e9f7f root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: -26) replace_9e9f7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: -26) tolower_9e9f7f root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 0, y: -26) toupper_9e9f7f root.Std_k98ojb.Strings.ToUpper {}\n        instance(x: 0, y: -26) isnumeric_9e9f7f root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: -26) contains_9e9f7f root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: -26) empty_9e9f7f root.Std_k98ojb.List.Empty {}\n        instance(x: 0, y: -26) add_9e9f7f_1 root.Std_k98ojb.List.Add {}\n        instance(x: 0, y: -26) remove_9e9f7f root.Std_k98ojb.List.Remove {}\n        instance(x: 0, y: -26) max_9e9f7f root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: -26) min_9e9f7f root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: -26) slice_9e9f7f root.Std_k98ojb.List.Slice {}\n        instance(x: 0, y: -26) reversed_9e9f7f root.Std_k98ojb.List.Reversed {}\n        instance(x: 0, y: -26) isempty_9e9f7f root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 0, y: -26) notempty_9e9f7f root.Std_k98ojb.List.NotEmpty {}\n        instance(x: 0, y: -26) flatten_9e9f7f root.Std_k98ojb.List.Flatten {}\n        instance(x: 0, y: -26) concat_9e9f7f root.Std_k98ojb.List.Concat {}\n        instance(x: 0, y: -26) filter_9e9f7f_1 root.Std_k98ojb.Query.Filter {}\n        instance(x: 0, y: -26) intersection_9e9f7f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 0, y: -26) difference_9e9f7f root.Std_k98ojb.Sets.Difference {}\n        string_9e9f7f -> characters_9e9f7f.input\n        characters_9e9f7f.characters -> firstitem_9e9f7f.list\n        characters_9e9f7f.characters -> lastitem_9e9f7f.list\n        characters_9e9f7f.characters -> filter_9e9f7f.items\n        characters_9e9f7f.characters -> map_9e9f7f.items\n        characters_9e9f7f.characters -> reduce_9e9f7f.item\n        characters_9e9f7f.characters -> find_9e9f7f.items\n        characters_9e9f7f.characters -> zip_9e9f7f.left\n        characters_9e9f7f.characters -> generaterange_9e9f7f.from\n        characters_9e9f7f.characters -> getat_9e9f7f.list\n        characters_9e9f7f.characters -> add_9e9f7f.first\n        characters_9e9f7f.characters -> sub_9e9f7f.first\n        characters_9e9f7f.characters -> mul_9e9f7f.first\n        characters_9e9f7f.characters -> div_9e9f7f.first\n        characters_9e9f7f.characters -> modulo_9e9f7f.value\n        characters_9e9f7f.characters -> pow_9e9f7f.x\n        characters_9e9f7f.characters -> floor_9e9f7f.input\n        characters_9e9f7f.characters -> lessthanorequal_9e9f7f.left\n        characters_9e9f7f.characters -> greaterthan_9e9f7f.left\n        characters_9e9f7f.characters -> expression_9e9f7f.gen_0\n        characters_9e9f7f.characters -> not_9e9f7f.input\n        characters_9e9f7f.characters -> and_9e9f7",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -33, y: -26, name: \"string\") property(String) string_9e9f1f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_9e9f1f\n\n        instance(x: -82, y: 155) characters_6e87f2 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 201, y: 62) all_1f9f1f root.Std_k98ojb.Iteration.All {}\n        instance(x: 201, y: 62) equal_cb50ae root.Std_k98ojb.Logic.Equal {}\n        equal_cb50ae.result -> all_1f9f1f.predicate\n        characters_6e87f2.characters -> all_1f9f1f.items\n        string_9e9f1f -> characters_6e87f2.input\n        all_1f9f1f.result -> output_9e9f1f\n    }\n\n    \n\n    instance(x: 48, y: 11) check_same_15f9e9 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -299, y: -26, name: \"string\") property(String) string_1e7c7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e7c7f\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 0, y: -26) characters_1e7c7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: -26) firstitem_1e7c7f root.Std_k98ojb.List.FirstItem {}\n        instance(x: 0, y: -26) lastitem_1e7c7f root.Std_k98ojb.List.LastItem {}\n        equal_f89569.result -> output_7e7c7f\n        firstitem_1e7c7f.item -> equal_f89569.left\n        lastitem_1e7c7f.item -> equal_f89569.right\n        string_1e7c7f -> characters_1e7c7f.input\n        characters_1e7c7f.characters -> length_6e87f2.list\n        characters_1e7c7f.characters -> firstitem_1e7c7f.list\n        characters_1e7c7f.characters -> lastitem_1e7c7f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) check_same_15f9e9 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -31, y: -26, name: \"string\") property(String) string_1e9c9c\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e7c9f\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) equal_9e9c9c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 0, y: 0) characters_1e9c9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) firstitem_1e9c9c root.Std_k98ojb.List.FirstItem {}\n        instance(x: 0, y: 0) filter_1e9c9c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) map_1e9c9c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) not_1e9c9c root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_1 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_1 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_2 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_2 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_3 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_3 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_4 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_4 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_5 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_5 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_6 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_6 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_7 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_7 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_8 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_8 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_9 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_9 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_10 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_10 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_11 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_11 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_12 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_12 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_13 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_13 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_14 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_14 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_15 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_15 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_16 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_16 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_17 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_17 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_18 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_18 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_19 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_19 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_20 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_20 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_21 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_21 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_22 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_22 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_23 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_23 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_24 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_24 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_25 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_25 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_26 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_26 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) not_1e9c9c_27 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_1e9c9c_27 root.Std_k98",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -293, y: -5, name: \"input\") property(String) input_7e9f1f\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -275, y: -35) characters_1a7f8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: -275, y: 155) firstitem_7e9f1f root.Std_k98ojb.List.FirstItem {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        characters_1a7f8f.characters -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        characters_1a7f8f.characters -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n        input_7e9f1f -> characters_1a7f8f.input\n        characters_1a7f8f.characters -> intersection_c7c7e6.left\n        firstitem_7e9f1f.item -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: 10, y: -177) check_same_fc79d5 root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -285, y: -86, name: \"string\") property(String) string_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        string_3af6ba -> strings_characters_1f9f1c.input\n        strings_characters_1f9f1c.characters -> intersection_c7c7e6.left\n        strings_characters_1f9f1c.characters -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n        intersection_c7c7e6.intersection -> length_8166b0.list\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_ac7dfb root.main.check_same {}\n    instance(x: -84, y: -118) strings_characters_1f9f1c root.Std_k98ojb.Strings.Characters {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -33, y: -26, name: \"string\") property(String) string_1e7f1f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e9f7f\n\n        instance(x: -82, y: 155) characters_7e7c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 201, y: 62) contains_1f3f1f root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: -1) not_1f3f1f root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: -1) getat_1f3f1f root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: -1) length_1f3f1f root.Std_k98ojb.List.Length {}\n        characters_7e7c8f.characters -> contains_1f3f1f.list\n        getat_1f3f1f.itemAtIndex -> contains_1f3f1f.item\n        length_1f3f1f.length -> getat_1f3f1f.index\n        1 -> length_1f3f1f.list\n        string_1e7f1f -> characters_7e7c8f.input\n        contains_1f3f1f.is_contained -> not_1f3f1f.input\n        not_1f3f1f.result -> output_7e9f7f\n    }\n\n    \n\n    instance(x: 48, y: 11) check_same_1f3f1f root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -31, y: -26, name: \"string\") property(String) string_1e9c8c\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_9e7f8c\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 0, y: 0) characters_9e7f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) firstitem_9e7f8c root.Std_k98ojb.List.FirstItem {}\n        instance(x: 0, y: 0) filter_9e7f8c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) map_9e7f8c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) not_9e7f8c root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) notequal_9e7f8c root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 0, y: 0) getat_9e7f8c root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) add_9e7f8c root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) lessthanorequal_9e7f8c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 0, y: 0) for_9e7f8c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) if_9e7f8c root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) ifexpression_9e7f8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        characters_9e7f8c.input -> map_9e7f8c.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(String) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_9e7f8c.handler\n        map_9e7f8c.output_list -> filter_9e7f8c.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) not_9e7f8c_1 root.Std_k98ojb.Logic.Not {}\n            current_81298e -> not_9e7f8c_1.input\n            not_9e7f8c_1.result -> bool_4524be\n        } -> filter_9e7f8c.handler\n        filter_9e7f8c.output_list -> length_6e87f2.list\n        length_6e87f2.length -> lessthanorequal_9e7f8c.left\n        1 -> lessthanorequal_9e7f8c.right\n        lessthanorequal_9e87f2.result -> if_9e7f8c.predicate\n        if_9e7f8c.else -> not_9e7f8c.input\n        if_9e7f8c.then -> for_9e7f8c.reset\n        string_1e9c8c -> characters_9e7f8c.input\n        characters_9e7f8c.characters -> for_9e7f8c.items\n        for_9e7f8c.item -> ifexpression_9e7f8c.gen_2\n        for_9e7f8c.index -> ifexpression_9e7f8c.gen_0\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        ifexpression_9e7f8c.else -> for_9e7f8c.next\n        ifexpression_9e7f8c.value -> setter_9d4f1c.new_value\n        ifexpression_9e7f8c.then -> setter_9d4f1c.execute\n        getter_b280eb.value -> ifexpression_9e7f8c.gen_1\n        for_9e7f8c.onItem -> ifexpression_9e7f8c.execute\n        for_9e7f8c.done -> not_9e7f8c.continue\n        not_9e7f8c.result -> output_9e7f8c\n    }\n\n    \n\n    instance(x: 48, y: 11) check_same_15f9e9 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -285, y: -86, name: \"string\") property(String) string_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        string_3af6ba -> strings_characters_1f8f1c.input\n        strings_characters_1f8f1c.characters -> intersection_c7c7e6.left\n        strings_characters_1f8f1c.characters -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n        intersection_c7c7e6.intersection -> length_8166b0.list\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_ac7dfb root.main.check_same {}\n    instance(x: -84, y: -123) strings_characters_1f8f1c root.Std_k98ojb.Strings.Characters {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_1e7f1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_1e7f1c.y\n        expression_2d6da6.result -> pow_1e7f1c.x\n        pow_1e7f1c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_2a7f2c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_2a7f2c.y\n        expression_2d6da6.result -> pow_2a7f2c.x\n        pow_2a7f2c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_2a3f1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_2a3f1c.y\n        expression_2d6da6.result -> pow_2a3f1c.x\n        pow_2a3f1c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_2a3f1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_2a3f1c.y\n        expression_2d6da6.result -> pow_2a3f1c.x\n        pow_2a3f1c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_2a3f1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_2a3f1c.y\n        expression_2d6da6.result -> pow_2a3f1c.x\n        pow_2a3f1c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_2f7f1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_2f7f1c.y\n        expression_2d6da6.result -> pow_2f7f1c.x\n        pow_2f7f1c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_1e9b2e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_1e9b2e.y\n        expression_2d6da6.result -> pow_1e9b2e.x\n        pow_1e9b2e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_1f8f1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_1f8f1c.y\n        expression_2d6da6.result -> pow_1f8f1c.x\n        pow_1f8f1c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_1e7f2c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_1e7f2c.y\n        expression_2d6da6.result -> pow_1e7f2c.x\n        pow_1e7f2c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_2f3f2c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_2f3f2c.y\n        expression_2d6da6.result -> pow_2f3f2c.x\n        pow_2f3f2c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3c8f9f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_9e7f7f\n\n        instance(x: 94, y: -105) mul_1a8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f9f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_7e9f9f root.Std_k98ojb.Math.Mul {}\n        size_3c8f9f -> mul_1a8c1f.first\n        size_3c8f9f -> mul_1a8c1f.second\n        mul_1a8c1f.result -> mul_5f9f9f.first\n        6 -> mul_5f9f9f.second\n        mul_5f9f9f.result -> mul_7e9f9f.first\n        size_3c8f9f -> mul_7e9f9f.second\n        mul_7e9f9f.result -> surface_area_9e7f7f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_9f9f9f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3c2f9f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_7e9f7f\n\n        instance(x: 94, y: -105) mul_1f9f9f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_3f9d09 root.Std_k98ojb.Math.Mul {}\n        size_3c2f9f -> mul_1f9f9f.first\n        size_3c2f9f -> mul_2f9d09.first\n        size_3c2f9f -> mul_3f9d09.first\n        6 -> mul_1f9f9f.second\n        2 -> mul_2f9d09.second\n        2 -> mul_3f9d09.second\n        mul_2f9d09.result -> mul_3f9d09.second\n        mul_3f9d09.result -> mul_1f9f9f.second\n        mul_1f9f9f.result -> surface_area_7e9f7f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_9f9f9f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3c2f9f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_7e9f9f\n\n        instance(x: 94, y: -105) mul_1a9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a9c1f_1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a9c1f_2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a9c1f_3 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a9c1f_4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a9c1f_5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) add_1a9c1f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_1a9c1f_1 root.Std_k98ojb.Math.Add {}\n        size_3c2f9f -> mul_1a9c1f.first\n        size_3c2f9f -> mul_1a9c1f.second\n        size_3c2f9f -> mul_1a9c1f_1.first\n        size_3c2f9f -> mul_1a9c1f_1.second\n        size_3c2f9f -> mul_1a9c1f_2.first\n        size_3c2f9f -> mul_1a9c1f_2.second\n        size_3c2f9f -> mul_1a9c1f_3.first\n        size_3c2f9f -> mul_1a9c1f_3.second\n        size_3c2f9f -> mul_1a9c1f_4.first\n        size_3c2f9f -> mul_1a9c1f_4.second\n        size_3c2f9f -> mul_1a9c1f_5.first\n        size_3c2f9f -> mul_1a9c1f_5.second\n        6 -> mul_1a9c1f_5.second\n        mul_1a9c1f.result -> mul_1a9c1f_3.first\n        mul_1a9c1f.result -> mul_1a9c1f_4.first\n        mul_1a9c1f.result -> mul_1a9c1f_5.first\n        mul_1a9c1f_1.result -> add_1a9c1f.first\n        mul_1a9c1f_2.result -> add_1a9c1f.second\n        mul_1a9c1f_3.result -> add_1a9c1f_1.first\n        mul_1a9c1f_4.result -> add_1a9c1f_1.second\n        add_1a9c1f.result -> add_1a9c1f_1.first\n        add_1a9c1f_1.result -> surface_area_7e9f9f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_1a9c1f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3c2f7f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_7e7f1f\n\n        instance(x: 94, y: -105) mul_1e8f9f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8f9f_1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8f9f_2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8f9f_3 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8f9f_4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e8f9f_5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) add_1e8f9f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_1e8f9f_1 root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_1e8f9f_2 root.Std_k98ojb.Math.Add {}\n        size_3c2f7f -> mul_1e8f9f.first\n        size_3c2f7f -> mul_1e8f9f.second\n        size_3c2f9f -> mul_1e8f9f_1.first\n        size_3c2f9f -> mul_1e8f9f_1.second\n        size_3c2f9f -> mul_1e8f9f_2.first\n        size_3c2f9f -> mul_1e8f9f_2.second\n        size_3c2f9f -> mul_1e8f9f_3.first\n        size_3c2f9f -> mul_1e8f9f_3.second\n        size_3c2f9f -> mul_1e8f9f_4.first\n        size_3c2f9f -> mul_1e8f9f_4.second\n        size_3c2f9f -> mul_1e8f9f_5.first\n        size_3c2f9f -> mul_1e8f9f_5.second\n        mul_1e8f9f.result -> add_1e8f9f.first\n        mul_1e8f9f_1.result -> add_1e8f9f.second\n        mul_1e8f9f_2.result -> add_1e8f9f_1.first\n        mul_1e8f9f_3.result -> add_1e8f9f_1.second\n        mul_1e8f9f_4.result -> add_1e8f9f_2.first\n        mul_1e8f9f_5.result -> add_1e8f9f_2.second\n        add_1e8f9f.result -> add_1e8f9f_2.first\n        add_1e8f9f_1.result -> add_1e8f9f_2.second\n        add_1e8f9f_2.result -> surface_area_7e7f1f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6a7f9f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_7e7f1f\n\n        instance(x: 94, y: -105) mul_1a8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a8c1f_1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a8c1f_2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a8c1f_3 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a8c1f_4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a8c1f_5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a8c1f_6 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) add_1a8c1f_7 root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_1a8c1f_8 root.Std_k98ojb.Math.Add {}\n        size_6a7f9f -> mul_1a8c1f.first\n        size_6a7f9f -> mul_1a8c1f.second\n        size_6a7f9f -> mul_1a8c1f_1.first\n        size_6a7f9f -> mul_1a8c1f_1.second\n        size_6a7f9f -> mul_1a8c1f_2.first\n        size_6a7f9f -> mul_1a8c1f_2.second\n        size_6a7f9f -> mul_1a8c1f_3.first\n        size_6a7f9f -> mul_1a8c1f_3.second\n        size_6a7f9f -> mul_1a8c1f_4.first\n        size_6a7f9f -> mul_1a8c1f_4.second\n        size_6a7f9f -> mul_1a8c1f_5.first\n        size_6a7f9f -> mul_1a8c1f_5.second\n        size_6a7f9f -> mul_1a8c1f_6.first\n        size_6a7f9f -> mul_1a8c1f_6.second\n        mul_1a8c1f.result -> add_1a8c1f_7.first\n        mul_1a8c1f_1.result -> add_1a8c1f_7.second\n        mul_1a8c1f_2.result -> add_1a8c1f_8.first\n        mul_1a8c1f_3.result -> add_1a8c1f_8.second\n        mul_1a8c1f_4.result -> add_1a8c1f_7.first\n        mul_1a8c1f_5.result -> add_1a8c1f_7.second\n        mul_1a8c1f_6.result -> add_1a8c1f_8.first\n        add_1a8c1f_7.result -> add_1a8c1f_8.second\n        add_1a8c1f_8.result -> surface_area_7e7f1f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_1a8c1f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6e7f7f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_1f3c9f\n\n        instance(x: 94, y: -105) mul_9e9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9e9f1f_1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9e9f1f_2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9e9f1f_3 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9e9f1f_4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9e9f1f_5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9e9f1f_6 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) add_9e9f1f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_9e9f1f_1 root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_9e9f1f_2 root.Std_k98ojb.Math.Add {}\n        size_6e7f7f -> mul_9e9f1f.first\n        size_6e7f7f -> mul_9e9f1f.second\n        mul_9e9f1f.result -> mul_9e9f1f_1.first\n        mul_9e9f1f.result -> mul_9e9f1f_2.first\n        mul_9e9f1f.result -> mul_9e9f1f_3.first\n        mul_9e9f1f.result -> mul_9e9f1f_4.first\n        mul_9e9f1f.result -> mul_9e9f1f_5.first\n        mul_9e9f1f.result -> mul_9e9f1f_6.first\n        6 -> mul_9e9f1f_1.second\n        6 -> mul_9e9f1f_2.second\n        6 -> mul_9e9f1f_3.second\n        6 -> mul_9e9f1f_4.second\n        6 -> mul_9e9f1f_5.second\n        6 -> mul_9e9f1f_6.second\n        mul_9e9f1f_1.result -> add_9e9f1f.first\n        mul_9e9f1f_2.result -> add_9e9f1f.second\n        mul_9e9f1f_3.result -> add_9e9f1f_1.first\n        mul_9e9f1f_4.result -> add_9e9f1f_1.second\n        mul_9e9f1f_5.result -> add_9e9f1f_2.first\n        mul_9e9f1f_6.result -> add_9e9f1f_2.second\n        add_9e9f1f.result -> add_9e9f1f_2.first\n        add_9e9f1f_1.result -> add_9e9f1f_2.second\n        add_9e9f1f_2.result -> surface_area_1f3c9f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_9e9f1f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6e7f9f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_1f7f1f\n\n        instance(x: 94, y: -105) mul_9e7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6e9f7f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_1f3f1f\n\n        instance(x: 94, y: -105) mul_1f3f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f3f1f_2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f3f1f_3 root.Std_k98ojb.Math.Mul {}\n        6 -> mul_1f3f1f.first\n        size_6e9f7f -> mul_1f3f1f.second\n        mul_1f3f1f.result -> mul_1f3f1f_2.first\n        size_6e9f7f -> mul_1f3f1f_2.second\n        mul_1f3f1f_2.result -> mul_1f3f1f_3.first\n        size_6e9f7f -> mul_1f3f1f_3.second\n        mul_1f3f1f_3.result -> surface_area_1f3f1f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_1f3f1f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3c2c8f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_9e9f7f\n\n        instance(x: 94, y: -105) mul_9e9f7f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9e9f7f_2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9e9f7f_3 root.Std_k98ojb.Math.Mul {}\n        size_3c2c8f -> mul_9e9f7f.first\n        size_3c2c8f -> mul_9e9f7f.second\n        mul_9e9f7f.result -> mul_9e9f7f_2.first\n        6 -> mul_9e9f7f_2.second\n        mul_9e9f7f.result -> mul_9e9f7f_3.first\n        mul_9e9f7f.result -> mul_9e9f7f_3.second\n        mul_9e9f7f_2.result -> mul_9e9f7f_3.first\n        mul_9e9f7f_3.result -> surface_area_9e9f7f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_9e9f7f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3c8f7f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_9e7f7f\n\n        instance(x: 94, y: -105) mul_1e9f7f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_2e9f7f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_3e9f7f root.Std_k98ojb.Math.Mul {}\n        size_3c8f7f -> mul_1e9f7f.first\n        size_3c8f7f -> mul_2e9f7f.first\n        size_3c8f7f -> mul_3e9f7f.first\n        6 -> mul_1e9f7f.second\n        mul_1e9f7f.result -> mul_2e9f7f.second\n        mul_2e9f7f.result -> mul_3e9f7f.second\n        mul_3e9f7f.result -> surface_area_9e7f7f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_4e9f7f root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a7f1f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6c7f1f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a7f1f.max -> sub_852f2e.first\n        min_6c7f1f.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a7f1f.list\n        list_0b075e -> min_6c7f1f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a9f1f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6f9f1f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a9f1f.max -> sub_852f2e.first\n        min_6f9f1f.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a9f1f.list\n        list_0b075e -> min_6f9f1f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a9f1f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6f9f1f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a9f1f.max -> sub_852f2e.first\n        min_6f9f1f.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a9f1f.list\n        list_0b075e -> min_6f9f1f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a9c1e root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6f8f1c root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a9c1e.max -> sub_852f2e.first\n        min_6f8f1c.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a9c1e.list\n        list_0b075e -> min_6f8f1c.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a7f2f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6f9f2f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a7f2f.max -> sub_852f2e.first\n        min_6f9f2f.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a7f2f.list\n        list_0b075e -> min_6f9f2f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_5e7f1f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6e87f2 root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_5e7f1f.max -> sub_852f2e.first\n        min_6e87f2.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_5e7f1f.list\n        list_0b075e -> min_6e87f2.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a7f1f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6c9c8f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a7f1f.max -> sub_852f2e.first\n        min_6c9c8f.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a7f1f.list\n        list_0b075e -> min_6c9c8f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a7f2f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6c7f2f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a7f2f.max -> sub_852f2e.first\n        min_6c7f2f.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a7f2f.list\n        list_0b075e -> min_6c7f2f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_5e9f2f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6e87f2 root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_5e9f2f.max -> sub_852f2e.first\n        min_6e87f2.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_5e9f2f.list\n        list_0b075e -> min_6e87f2.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_5e7f1f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6e87f2 root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_5e7f1f.max -> sub_852f2e.first\n        min_6e87f2.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_5e7f1f.list\n        list_0b075e -> min_6e87f2.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_7e7f7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e7f7f\n\n        instance(x: 201, y: 62) modulo_7e7f7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_7e7f7f root.Std_k98ojb.Logic.Equal {}\n        n_7e7f7f -> modulo_7e7f7f.value\n        2 -> modulo_7e7f7f.divisor\n        modulo_7e7f7f.result -> equal_7e7f7f.left\n        0 -> equal_7e7f7f.right\n        equal_7e7f7f.result -> output_7e7f7f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_7e7f7f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_7e7f9f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_1a9f9f\n\n        instance(x: 201, y: 62) modulo_9e9f9f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_9e9f9f root.Std_k98ojb.Logic.Equal {}\n        modulo_9e9f9f.result -> equal_9e9f9f.left\n        0 -> equal_9e9f9f.right\n        equal_9e9f9f.result -> output_1a9f9f\n        n_7e7f9f -> modulo_9e9f9f.value\n        2 -> modulo_9e9f9f.divisor\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_15f9e9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_1e9c7e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_1e9c7e\n\n        instance(x: 201, y: 62) modulo_1e9c7e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_1e9c7e root.Std_k98ojb.Logic.Equal {}\n        n_1e9c7e -> modulo_1e9c7e.value\n        2 -> modulo_1e9c7e.divisor\n        modulo_1e9c7e.result -> equal_1e9c7e.left\n        0 -> equal_1e9c7e.right\n        equal_1e9c7e.result -> output_1e9c7e\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_1e9c7e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_1a7f9f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e7c8f\n\n        instance(x: 201, y: 62) modulo_7e7c8f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_7e7c8f root.Std_k98ojb.Logic.Equal {}\n        n_1a7f9f -> modulo_7e7c8f.value\n        2 -> modulo_7e7c8f.divisor\n        modulo_7e7c8f.result -> equal_7e7c8f.left\n        0 -> equal_7e7c8f.right\n        equal_7e7c8f.result -> output_7e7c8f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_15f9e9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_1a7f7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_1e7f7f\n\n        instance(x: 201, y: 62) modulo_1e7f7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_1e7f7f root.Std_k98ojb.Logic.Equal {}\n        modulo_1e7f7f.result -> equal_1e7f7f.left\n        0 -> equal_1e7f7f.right\n        equal_1e7f7f.result -> output_1e7f7f\n        n_1a7f7f -> modulo_1e7f7f.value\n        2 -> modulo_1e7f7f.divisor\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_1e7f7f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_7e7f7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_1e7f7f\n\n        instance(x: 201, y: 62) modulo_7e7f7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_7e7f7f root.Std_k98ojb.Logic.Equal {}\n        modulo_7e7f7f.result -> equal_7e7f7f.left\n        0 -> equal_7e7f7f.right\n        equal_7e7f7f.result -> output_1e7f7f\n        n_7e7f7f -> modulo_7e7f7f.value\n        2 -> modulo_7e7f7f.divisor\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_15f9e9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_7e9f7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e9f7f\n\n        instance(x: 201, y: 62) modulo_7e9f7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_7e9f7f root.Std_k98ojb.Logic.Equal {}\n        n_7e9f7f -> modulo_7e9f7f.value\n        2 -> modulo_7e9f7f.divisor\n        modulo_7e9f7f.result -> equal_7e9f7f.left\n        0 -> equal_7e9f7f.right\n        equal_7e9f7f.result -> output_7e9f7f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_7e9f7f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_1e7f9f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e9f9f\n\n        instance(x: 201, y: 62) modulo_9e7f9f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_9e7f9f root.Std_k98ojb.Logic.Equal {}\n        n_1e7f9f -> modulo_9e7f9f.value\n        2 -> modulo_9e7f9f.divisor\n        modulo_9e7f9f.result -> equal_9e7f9f.left\n        0 -> equal_9e7f9f.right\n        equal_9e7f9f.result -> output_7e9f9f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_15f9e9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_7e9f7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e9f7f\n\n        instance(x: 201, y: 62) modulo_7e9f7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_7e9f7f root.Std_k98ojb.Logic.Equal {}\n        n_7e9f7f -> modulo_7e9f7f.value\n        2 -> modulo_7e9f7f.divisor\n        modulo_7e9f7f.result -> equal_7e9f7f.left\n        0 -> equal_7e9f7f.right\n        equal_7e9f7f.result -> output_7e9f7f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_7e9f7f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_1a7f9f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e7c8f\n\n        instance(x: 201, y: 62) modulo_9e7f1f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_1e9f1f root.Std_k98ojb.Logic.Equal {}\n        n_1a7f9f -> modulo_9e7f1f.value\n        2 -> modulo_9e7f1f.divisor\n        modulo_9e7f1f.result -> equal_1e9f1f.left\n        0 -> equal_1e9f1f.right\n        equal_1e9f1f.result -> output_7e7c8f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_15f9e9 root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 8701,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -255, y: -171, name: \"list1\") property(List) list1_1f846b\n        in(x: -263, y: -41, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -293, y: -214, name: \"list1\") property(List) list1_1f846b\n        in(x: -301, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_4e8c54.left\n            list2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n        instance(x: 245, y: -54) filter_4e8c54 root.Std_k98ojb.Iteration.Filter {}\n        filter_4e8c54.handler -> zip_201051.zipped\n        filter_4e8c54.output_list -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -277, y: -85, name: \"list1\") property(List) list1_1f846b\n        in(x: -285, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -273, y: -111, name: \"list1\") property(List) list1_1f846b\n        in(x: -281, y: -1, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -54, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -275, y: -104, name: \"list1\") property(List) list1_1f846b\n        in(x: -283, y: 16, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -293, y: -214, name: \"list1\") property(List) list1_1f846b\n        in(x: -301, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_4e8c54.left\n            list2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n        instance(x: 245, y: -54) filter_4e8c54 root.Std_k98ojb.Iteration.Filter {}\n        filter_4e8c54.handler -> zip_201051.zipped\n        filter_4e8c54.output_list -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -275, y: -104, name: \"list1\") property(List) list1_1f846b\n        in(x: -283, y: 16, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_4e8c54.left\n            list2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n        instance(x: 245, y: -54) filter_4e8c54 root.Std_k98ojb.Iteration.Filter {}\n        filter_4e8c54.handler -> zip_201051.zipped\n        filter_4e8c54.output_list -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -277, y: -91, name: \"list1\") property(List) list1_1f846b\n        in(x: -285, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -299, y: -186, name: \"list1\") property(List) list1_1f846b\n        in(x: -307, y: -56, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 245, y: -54) notempty_4e8c54 root.Std_k98ojb.List.NotEmpty {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> notempty_4e8c54.list\n        notempty_4e8c54.isEmpty -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -525, y: -5, name: \"list\") property(List) list_1e9c9c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_7e9f7f\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_7e9f7f\n\n        instance(x: 752, y: 93) ifexpression_7e9f7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_7e9f7f\") getter_7e9f7f = previous\n        setter(x: 679, y: -313, name: \"setter_7e9f7f\") setter_7e9f7f = previous\n        instance(x: 321, y: -20) for_7e9f7f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7e9f7f\") setter_7e9f7f = previous\n        instance(x: -275, y: -35) getat_7e9f7f root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e9f7f.else -> continue_7e9f7f\n        ifexpression_7e9f7f.value -> output_7e9f7f\n        ifexpression_7e9f7f.then -> setter_7e9f7f.execute\n        list_1e9c9c -> for_7e9f7f.items\n        for_7e9f7f.item -> ifexpression_7e9f7f.gen_2\n        for_7e9f7f.index -> ifexpression_7e9f7f.gen_0\n        getter_7e9f7f.value -> ifexpression_7e9f7f.gen_1\n        for_7e9f7f.onItem -> ifexpression_7e9f7f.execute\n        for_7e9f7f.done -> continue_7e9f7f\n        for_7e9f7f.item -> setter_7e9f7f.new_value\n        list_1e9c9c -> getat_7e9f7f.list\n        0 -> getat_7e9f7f.index\n        getat_7e9f7f.itemAtIndex -> setter_7e9f7f.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) consecutive_7e9f7f root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -485, y: -235, name: \"list\") property(List) list_7e9f9f\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_9e9f7f\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_9e9f7f\n\n        instance(x: 752, y: 93) ifexpression_9e9f7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_9e9f7f\") getter_9e9f7f = previous\n        setter(x: 679, y: -313, name: \"setter_9e9f7f\") setter_9e9f7f = previous\n        instance(x: 321, y: -20) for_9e9f7f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9e9f7f\") setter_9e9f7f = previous\n        instance(x: -275, y: -35) getat_9e9f7f root.Std_k98ojb.List.GetAt {}\n        ifexpression_9e9f7f.else -> continue_9e9f7f\n        ifexpression_9e9f7f.value -> output_9e9f7f\n        ifexpression_9e9f7f.then -> setter_9e9f7f.execute\n        list_7e9f9f -> for_9e9f7f.items\n        for_9e9f7f.item -> ifexpression_9e9f7f.gen_2\n        for_9e9f7f.index -> ifexpression_9e9f7f.gen_0\n        getter_9e9f7f.value -> ifexpression_9e9f7f.gen_1\n        for_9e9f7f.onItem -> ifexpression_9e9f7f.execute\n        for_9e9f7f.done -> continue_9e9f7f\n        for_9e9f7f.item -> setter_9e9f7f.new_value\n        list_7e9f9f -> getat_9e9f7f.list\n        0 -> getat_9e9f7f.index\n        getat_9e9f7f.itemAtIndex -> setter_9e9f7f.new_value\n        setter_9e9f7f.continue -> for_9e9f7f.reset\n        setter_9e9f7f.continue -> for_9e9f7f.next\n    }\n\n    \n\n    instance(x: 10, y: -177) consecutive_9e9f7f root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -525, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"list1\") property(List) list1_1f846b\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n        find_6d05b0.index -> find_6d05b0.predicate.index\n    }\n\n    \n\n    instance(x: -55, y: 529) smallest_missing_2c856f root.main.smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e4c1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e4c1f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e4c1f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e4c1f.input\n        \" \" -> replace_1e4c1f.search\n        \":\" -> replace_1e4c1f.replace\n        replace_1e4c1f.output -> replace_1e4c1f_2.input\n        \",\" -> replace_1e4c1f_2.search\n        \":\" -> replace_1e4c1f_2.replace\n        replace_1e4c1f_2.output -> replace_1e4c1f_3.input\n        \".\" -> replace_1e4c1f_3.search\n        \":\" -> replace_1e4c1f_3.replace\n        replace_1e4c1f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e4c1f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e4c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e4c8f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e4c8f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e4c8f.input\n        \" \" -> replace_1e4c8f.search\n        \":\" -> replace_1e4c8f.replace\n        replace_1e4c8f.output -> replace_1e4c8f_2.input\n        \",\" -> replace_1e4c8f_2.search\n        \":\" -> replace_1e4c8f_2.replace\n        replace_1e4c8f_2.output -> replace_1e4c8f_3.input\n        \".\" -> replace_1e4c8f_3.search\n        \":\" -> replace_1e4c8f_3.replace\n        replace_1e4c8f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e4c8f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e4c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e4c8f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e4c8f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e4c8f.input\n        \" \" -> replace_1e4c8f.search\n        \":\" -> replace_1e4c8f.replace\n        replace_1e4c8f.output -> replace_1e4c8f_2.input\n        \",\" -> replace_1e4c8f_2.search\n        \":\" -> replace_1e4c8f_2.replace\n        replace_1e4c8f_2.output -> replace_1e4c8f_3.input\n        \".\" -> replace_1e4c8f_3.search\n        \":\" -> replace_1e4c8f_3.replace\n        replace_1e4c8f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e4c8f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e3c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e3c8f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e3c8f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e3c8f.input\n        \" \" -> replace_1e3c8f.search\n        \":\" -> replace_1e3c8f.replace\n        replace_1e3c8f.output -> replace_1e3c8f_2.input\n        \",\" -> replace_1e3c8f_2.search\n        \":\" -> replace_1e3c8f_2.replace\n        replace_1e3c8f_2.output -> replace_1e3c8f_3.input\n        \".\" -> replace_1e3c8f_3.search\n        \":\" -> replace_1e3c8f_3.replace\n        replace_1e3c8f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e3c8f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e3c1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e3c1f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e3c1f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e3c1f.input\n        \" \" -> replace_1e3c1f.search\n        \":\" -> replace_1e3c1f.replace\n        replace_1e3c1f.output -> replace_1e3c1f_2.input\n        \",\" -> replace_1e3c1f_2.search\n        \":\" -> replace_1e3c1f_2.replace\n        replace_1e3c1f_2.output -> replace_1e3c1f_3.input\n        \".\" -> replace_1e3c1f_3.search\n        \":\" -> replace_1e3c1f_3.replace\n        replace_1e3c1f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e3c1f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e4c1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e4c1f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e4c1f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e4c1f.input\n        \" \" -> replace_1e4c1f.search\n        \":\" -> replace_1e4c1f.replace\n        replace_1e4c1f.output -> replace_1e4c1f_2.input\n        \",\" -> replace_1e4c1f_2.search\n        \":\" -> replace_1e4c1f_2.replace\n        replace_1e4c1f_2.output -> replace_1e4c1f_3.input\n        \".\" -> replace_1e4c1f_3.search\n        \":\" -> replace_1e4c1f_3.replace\n        replace_1e4c1f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e4c1f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e3f1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e3f1f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e3f1f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e3f1f.input\n        \" \" -> replace_1e3f1f.search\n        \":\" -> replace_1e3f1f.replace\n        replace_1e3f1f.output -> replace_1e3f1f_2.input\n        \",\" -> replace_1e3f1f_2.search\n        \":\" -> replace_1e3f1f_2.replace\n        replace_1e3f1f_2.output -> replace_1e3f1f_3.input\n        \".\" -> replace_1e3f1f_3.search\n        \":\" -> replace_1e3f1f_3.replace\n        replace_1e3f1f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e3f1f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e3c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e3c8f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e3c8f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e3c8f.input\n        \" \" -> replace_1e3c8f.search\n        \":\" -> replace_1e3c8f.replace\n        replace_1e3c8f.output -> replace_1e3c8f_2.input\n        \",\" -> replace_1e3c8f_2.search\n        \":\" -> replace_1e3c8f_2.replace\n        replace_1e3c8f_2.output -> replace_1e3c8f_3.input\n        \".\" -> replace_1e3c8f_3.search\n        \":\" -> replace_1e3c8f_3.replace\n        replace_1e3c8f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e3c8f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e3f8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e3f8f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e3f8f_3 root.Std_k98ojb.Strings.Replace {}\n        replace_1e3f8f.output -> replace_1e3f8f_2.input\n        replace_1e3f8f_2.output -> replace_1e3f8f_3.input\n        replace_1e3f8f_3.output -> result_0\n        input_0 -> replace_1e3f8f.input\n        \" \" -> replace_1e3f8f.search\n        \":\" -> replace_1e3f8f.replace\n        \",\" -> replace_1e3f8f_2.search\n        \":\" -> replace_1e3f8f_2.replace\n        \".\" -> replace_1e3f8f_3.search\n        \":\" -> replace_1e3f8f_3.replace\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e3f8f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1e4c1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1e4c1f_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1e4c1f_3 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_1e4c1f.input\n        \" \" -> replace_1e4c1f.search\n        \":\" -> replace_1e4c1f.replace\n        replace_1e4c1f.output -> replace_1e4c1f_2.input\n        \",\" -> replace_1e4c1f_2.search\n        \":\" -> replace_1e4c1f_2.replace\n        replace_1e4c1f_2.output -> replace_1e4c1f_3.input\n        \".\" -> replace_1e4c1f_3.search\n        \":\" -> replace_1e4c1f_3.replace\n        replace_1e4c1f_3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1e4c1f root.main.replace_spaces_commas_dots {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -290, y: -11, name: \"string\") property(String) string_1e7c8c\n\n        out(x: 557, y: 5, name: \"output\") property(Bool) output_7e7c8c\n\n        instance(x: -82, y: -11) characters_1e7c8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 201, y: 5) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 415, y: 5) filter_1e7c8c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 640, y: 5) length_1e7c8c root.Std_k98ojb.List.Length {}\n        instance(x: 854, y: 5) equal_1e7c8c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1068, y: 5) not_1e7c8c root.Std_k98ojb.Logic.Not {}\n        characters_1e7c8c.characters -> filter_1e7c8c.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(String) current_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_1e7c8c.handler\n        length_6e87f2.list -> characters_1e7c8c.string\n        filter_1e7c8c.output_list -> length_1e7c8c.list\n        length_1e7c8c.length -> equal_1e7c8c.left\n        1 -> equal_1e7c8c.right\n        not_1e7c8c.result -> output_7e7c8c\n        equal_1e7c8c.result -> not_1e7c8c.input\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_ac7dfb root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -294, y: 155, name: \"string\") property(String) string_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: -82, y: 155) characters_6e87f2 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 201, y: 62) uniquelist_9b50ae root.Std_k98ojb.List.Unique {}\n        instance(x: 401, y: 62) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 601, y: 62) equal_cb50ae root.Std_k98ojb.Logic.Equal {}\n        characters_6e87f2.characters -> uniquelist_9b50ae.list\n        uniquelist_9b50ae.uniqueList -> length_6e87f2.list\n        1 -> equal_cb50ae.right\n        length_6e87f2.length -> equal_cb50ae.left\n        equal_cb50ae.result -> output_b1d7f8\n        string_0b075e -> characters_6e87f2.input\n    }\n\n    \n\n    instance(x: 48, y: 11) check_same_15f9e9 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -293, y: -5, name: \"input\") property(String) input_7e9f1f\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -275, y: -35) characters_1a9c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: -275, y: 155) firstitem_1e8f1f root.Std_k98ojb.List.FirstItem {}\n        instance(x: 146, y: 155) lastitem_1e8f1f root.Std_k98ojb.List.LastItem {}\n        input_7e9f1f -> characters_1a9c8f.input\n        characters_1a9c8f.characters -> intersection_c7c7e6.left\n        characters_1a9c8f.characters -> intersection_c7c7e6.right\n        characters_1a9c8f.characters -> length_8166b0.list\n        characters_1a9c8f.characters -> firstitem_1e8f1f.list\n        firstitem_1e8f1f.item -> lastitem_1e8f1f.list\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        lastitem_1e8f1f.item -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_7a4dad root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -293, y: -5, name: \"input\") property(String) input_1e7f7f\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -275, y: -35) characters_1e7f7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: -275, y: 155) firstitem_1e7f7f root.Std_k98ojb.List.FirstItem {}\n        instance(x: 146, y: 155) lastitem_1e7f7f root.Std_k98ojb.List.LastItem {}\n        input_1e7f7f -> characters_1e7f7f.input\n        characters_1e7f7f.characters -> intersection_c7c7e6.left\n        characters_1e7f7f.characters -> intersection_c7c7e6.right\n        characters_1e7f7f.characters -> length_8166b0.list\n        characters_1e7f7f.characters -> firstitem_1e7f7f.list\n        firstitem_1e7f7f.item -> lastitem_1e7f7f.list\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        firstitem_1e7f7f.item -> equal_f89569.left\n        lastitem_1e7f7f.item -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_7a4dad root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -35, y: -26, name: \"string\") property(String) string_9e7f7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_9e7f7f\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 0, y: 0) characters_9e7f7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) firstitem_9e7f7f root.Std_k98ojb.List.FirstItem {}\n        instance(x: 0, y: 0) filter_9e7f7f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 0) map_9e7f7f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) not_9e7f7f root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) contains_9e7f7f root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 0, y: 0) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        instance(x: 0, y: 0) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 0) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 0, y: 0) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 0, y: 0) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 0, y: 0) if_e19a62 root.Std_k98ojb.Std.If {}\n        string_9e7f7f -> characters_9e7f7f.input\n        characters_9e7f7f.characters -> filter_9e7f7f.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_9e7f7f root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_9e7f7f.left\n            firstitem_9e7f7f.item -> equal_9e7f7f.right\n            equal_9e7f7f.result -> out_d0fd24\n        } -> filter_9e7f7f.handler\n        filter_9e7f7f.output_list -> map_9e7f7f.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) not_9e7f7f_2 root.Std_k98ojb.Logic.Not {}\n            element_5f51f7 -> not_9e7f7f_2.input\n            not_9e7f7f_2.result -> out_d0fd24\n        } -> map_9e7f7f.handler\n        map_9e7f7f.output_list -> contains_9e7f7f.list\n        false -> contains_9e7f7f.item\n        contains_9e7f7f.is_contained -> not_9e7f7f.input\n        not_9e7f7f.result -> output_9e7f7f\n        characters_9e7f7f.characters -> length_6e87f2.list\n        length_6e87f2.length -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        characters_9e7f7f.characters -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        firstitem_9e7f7f.item -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        ifexpression_875761.else -> output_9e7f7f\n        ifexpression_875761.value -> output_9e7f7f\n        for_d26972.done -> output_9e7f7f\n        if_07b8c7.then -> for_d26972.reset\n        if_07b8c7.else -> for_d26972.next\n        firstitem_9e7f7f.list -> characters_9e7f7f.characters\n    }\n\n    \n\n    instance(x: 48, y: 11) check_same_15f9e9 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -32, y: -26, name: \"string\") property(String) string_9e9f1f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_9e9f1f\n\n        instance(x: -82, y: 155) characters_6e87f2 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 201, y: 62) equal_cb50ae root.Std_k98ojb.Logic.Equal {}\n        instance(x: 201, y: 62) filter_6e87f2 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 201, y: 62) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) firstitem_6e87f2 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 201, y: 62) not_6e87f2 root.Std_k98ojb.Logic.Not {}\n        instance(x: 201, y: 62) lessthanorequal_6e87f2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 201, y: 62) if_6e87f2 root.Std_k98ojb.Std.If {}\n        instance(x: 201, y: 62) ifexpression_6e87f2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        instance(x: 201, y: 62) map_6e87f2 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 201, y: 62) for_6e87f2 root.Std_k98ojb.Std.For {}\n        instance(x: 201, y: 62) getat_6e87f2 root.Std_k98ojb.List.GetAt {}\n        instance(x: 201, y: 62) add_6e87f2 root.Std_k98ojb.Math.Add {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y: 62) getitem_6e87f2 root.Std_k98ojb.List.GetItem {}\n        instance(x: 201, y: 62) setitem_6e87f2 root.Std_k98ojb.List.SetItem {}\n        instance(x: 201, y",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -290, y: -25, name: \"string\") property(String) string_9e7f1f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e9f9f\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) equal_9e7f1f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 0, y: -25) characters_9e7f1f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: -25) firstitem_9e7f1f root.Std_k98ojb.List.FirstItem {}\n        instance(x: 0, y: -25) lastitem_9e7f1f root.Std_k98ojb.List.LastItem {}\n        instance(x: 0, y: -25) notempty_9e7f1f root.Std_k98ojb.List.NotEmpty {}\n        instance(x: 0, y: -25) filter_9e7f1f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: -25) map_9e7f1f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: -25) reduce_9e7f1f root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 0, y: -25) find_9e7f1f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -25) zip_9e7f1f root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 0, y: -25) sort_9e7f1f root.Std_k98ojb.List.Sort {}\n        instance(x: 0, y: -25) slice_9e7f1f root.Std_k98ojb.List.Slice {}\n        instance(x: 0, y: -25) reversed_9e7f1f root.Std_k98ojb.List.Reversed {}\n        instance(x: 0, y: -25) concat_9e7f1f root.Std_k98ojb.List.Concat {}\n        instance(x: 0, y: -25) flatten_9e7f1f root.Std_k98ojb.List.Flatten {}\n        instance(x: 0, y: -25) difference_9e7f1f root.Std_k98ojb.Sets.Difference {}\n        instance(x: 0, y: -25) intersection_9e7f1f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 0, y: -25) if_9e7f1f root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: -25) ifexpression_9e7f1f root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 0, y: -25) count_9e7f1f root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: -25) for_9e7f1f root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: -25) expression_9e7f1f root.Std_k98ojb.Math.Expression {}\n        instance(x: 0, y: -25) floor_9e7f1f root.Std_k98ojb.Math.Floor {}\n        instance(x: 0, y: -25) add_9e7f1f root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: -25) sub_9e7f1f root.Std_k98ojb.Math.Sub {}\n        instance(x: 0, y: -25) mul_9e7f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -25) div_9e7f1f root.Std_k98ojb.Math.Div {}\n        instance(x: 0, y: -25) lessthanorequal_9e7f1f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 0, y: -25) pow_9e7f1f root.Std_k98ojb.Math.Pow {}\n        instance(x: 0, y: -25) modulo_9e7f1f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 0, y: -25) min_9e7f1f root.Std_k98ojb.Math.Min {}\n        instance(x: 0, y: -25) not_9e7f1f root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: -25) and_9e7f1f root.Std_k98ojb.Logic.And {}\n        instance(x: 0, y: -25) notequal_9e7f1f root.Std_k98ojb.Logic.NotEqual {}\n        string_9e7f1f -> characters_9e7f1f.input\n        characters_9e7f1f.characters -> length_6e87f2.list\n        characters_9e7f1f.characters -> filter_9e7f1f.items\n        characters_9e7f1f.characters -> map_9e7f1f.items\n        characters_9e7f1f.characters -> reduce_9e7f1f.item\n        characters_9e7f1f.characters -> find_9e7f1f.items\n        characters_9e7f1f.characters -> zip_9e7f1f.left\n        characters_9e7f1f.characters -> sort_9e7f1f.list\n        characters_9e7f1f.characters -> slice_9e7f1f.list\n        characters_9e7f1f.characters -> reversed_9e7f1f.list\n        characters_9e7f1f.characters -> concat_9e7f1f.left\n        characters_9e7f1f.characters -> flatten_9e7f1f.list\n        characters_9e7f1f.characters -> difference_9e7f1f.left\n        characters_9e7f1f.characters -> intersection_9e7f1f.left\n        characters_9e7f1f.characters -> if_9e7f1f.input\n        characters_9e7f1f.characters -> ifexpression_9e7f1f.expression\n        characters_9e7f1f.characters -> count_9e7f1f.items\n        characters_9e7f1f.characters -> for_9e7f1f.items\n        characters_9e7f1f.characters -> expression_9e7f1f.expression\n        characters_9e7f1f.characters -> floor_9e7f1f.input\n        characters_9e7f1f.characters -> add_9e7f1f.first\n        characters_9e7f1f.characters -> add_9e7f1f.second\n        characters_9e7f1f.characters -> sub_9e7f1f.first\n        characters_9e7f1f.characters -> sub_9e7f1f.second\n        characters_9e7f1f.characters -> mul_9e7f1f.first\n        characters_9e7f1f.characters -> mul_9e7f1f.second\n        characters_9e7f1f.characters -> div_9e7f1f.first\n        characters_9e7f1f.characters -> div_9e7f1f.second\n        characters_9e7f1f.characters -> lessthanorequal_9e7f1f.left\n        characters_9e7f1f.characters -> lessthanorequal_9e7f1f.right\n        characters_9e7f1f.characters -> pow_9e7f1f.x\n        characters_9e7f1f.characters -> pow_9e7f1f.y\n        characters_9e7f1f.characters -> modulo_9e7f1f.value\n        characters_9e7f1f.characters -> modulo_9e7f1f.divisor\n        characters_9e7f1f.characters -> min_9e7f1f.input\n        firstitem_9e7f1f.list -> list_9e7f1f.characters\n        list_9e7f1f.characters -> lastitem_9e7f1f.list\n        list_9e7f1f.characters -> notempty_9e7f1f.list\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(String) current_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -32, y: -26, name: \"string\") property(String) string_9e9f1f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e7c8f\n\n        instance(x: -82, y: 155) characters_1f8c1f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 201, y: 62) uniquelist_1f8c1f root.Std_k98ojb.List.Unique {}\n        instance(x: 201, y: 62) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        characters_1f8c1f.characters -> uniquelist_1f8c1f.list\n        uniquelist_1f8c1f.uniqueList -> length_6e87f2.list\n        length_6e87f2.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_7e7c8f\n        string_9e9f1f -> characters_1f8c1f.input\n    }\n\n    \n\n    instance(x: 48, y: 11) check_same_15f9e9 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -33, y: -26, name: \"string\") property(String) string_9e7c9f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_9e7c9f\n\n        instance(x: -82, y: 155) characters_6e87f2 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 201, y: 62) allroot_9e7c9f root.Std_k98ojb.Iteration.All {}\n        instance(x: 201, y: 62) equal_9e7c9f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 201, y: 62) firstitem_9e7c9f root.Std_k98ojb.List.FirstItem {}\n        instance(x: 201, y: 62) not_9e7c9f root.Std_k98ojb.Logic.Not {}\n        instance(x: 201, y: 62) map_9e7c9f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 201, y: 62) filter_9e7c9f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 201, y: 62) length_9e7c9f root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) notempty_9e7c9f root.Std_k98ojb.List.NotEmpty {}\n        instance(x: 201, y: 62) if_9e7c9f root.Std_k98ojb.Std.If {}\n        instance(x: 201, y: 62) ifexpression_9e7c9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        instance(x: 201, y: 62) getat_9e7c9f root.Std_k98ojb.List.GetAt {}\n        instance(x: 201, y: 62) setat_9e7c9f root.Std_k98ojb.List.SetAt {}\n        instance(x: 201, y: 62) concat_9e7c9f root.Std_k98ojb.List.Concat {}\n        instance(x: 201, y: 62) slice_9e7c9f root.Std_k98ojb.List.Slice {}\n        instance(x: 201, y: 62) map_9e7c9f_9e7c9f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 201, y: 62) filter_9e7c9f_9e7c9f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 201, y: 62) length_9e7c9f_9e7c9f root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) notempty_9e7c9f_9e7c9f root.Std_k98ojb.List.NotEmpty {}\n        instance(x: 201, y: 62) if_9e7c9f_9e7c9f root.Std_k98ojb.Std.If {}\n        instance(x: 201, y: 62) ifexpression_9e7c9f_9e7c9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        instance(x: 201, y: 62) getat_9e7c9f_9e7c9f root.Std_k98ojb.List.GetAt {}\n        instance(x: 201, y: 62) setat_9e7c9f_9e7c9f root.Std_k98ojb.List.SetAt {}\n        instance(x: 201, y: 62) concat_9e7c9f_9e7c9f root.Std_k98ojb.List.Concat {}\n        instance(x: 201, y: 62) slice_9e7c9f_9e7c9f root.Std_k98ojb.List.Slice {}\n        string_9e7c9f -> characters_6e87f2.input\n        characters_6e87f2.characters -> map_9e7c9f.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(String) current_9e7c9f\n\n            out(x: 705, y: 49, name: \"output\") property(String) output_9e7c9f\n\n            instance(x: 226, y: 56) tolower_9e7c9f root.Std_k98ojb.Strings.ToLower {}\n            current_9e7c9f -> tolower_9e7c9f.input\n            tolower_9e7c9f.lowercased -> output_9e7c9f\n        } -> map_9e7c9f.handler\n        map_9e7c9f.output_list -> filter_9e7c9f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(String) current_9e7c9f\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_9e7c9f\n\n            instance(x: 74, y: -23) length_9e7c9f root.Std_k98ojb.List.Length {}\n            instance(x: 285, y: -25) equal_9e7c9f root.Std_k98ojb.Logic.Equal {}\n            current_9e7c9f -> length_9e7c9f.list\n            1 -> equal_9e7c9f.right\n            length_9e7c9f.length -> equal_9e7c9f.left\n            equal_9e7c9f.result -> bool_9e7c9f\n        } -> filter_9e7c9f.handler\n        filter_9e7c9f.output_list -> allroot_9e7c9f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(String) current_9e7c9f\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_9e7c9f\n\n            instance(x: 74, y: -23) equal_9e7c9f root.Std_k98ojb.Logic.Equal {}\n            firstitem_9e7c9f.item -> equal_9e7c9f.left\n            current_9e7c9f -> equal_9e7c9f.right\n            equal_9e7c9f.result -> bool_9e7c9f\n        } -> allroot_9e7c9f.handler\n        allroot_9e9f9f.result -> not_9e7c9f.input\n        not_9e7c9f.result -> if_9e7c9f.predicate\n        if_9e7c9f.then -> length_9e7c9f.execute\n        if_9e7c9f.else -> output_9e7c9f\n        length_9e7c9f.list -> if_9e7c9f.value\n        filter_9e7c9f.output_list -> length_9e7c9f.list\n        length_9e7c9f.length -> notempty_9e7c9f.list\n        notempty_9e7c9f.result -> ifexpression_9e7c9f.execute\n        ifexpression_9e7c9f.value -> if_9e7c9f.value\n        ifexpression_9e7c9f.then -> getat_9e7c9f.execute\n        ifexpression_9e7c9f.else -> output_9e7c9f\n        filter_9e7c9f.output_list -> getat_9e7c9f.list\n        0 -> getat_9e7c9f.index\n        getat_9e7c9f.itemAtIndex -> firstitem_9e7c9f.input\n        firstitem_9e7c9f.item -> setat_9e7c9f.new_value\n        setat_9e7c9f.list -> concat_9e7c9f.left\n        concat_9e7c9f.right -> slice_9e7c9f.list\n        1 -> slice_9e7c9f.start\n        -1 -> slice_9e7c9f.end\n        slice_9e7c9f.slice -> setat_9e7c9f.index\n        setat_9e7c9f.list -> filter_9e7c9f_9e7c9f.items",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") check_same {\n        in(x: -287, y: -86, name: \"string\") property(String) string_1e9c8c\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        string_1e9c8c -> strings_characters_1c9f1c.input\n        strings_characters_1c9f1c.characters -> intersection_c7c7e6.left\n        strings_characters_1c9f1c.characters -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n        intersection_c7c7e6.intersection -> length_8166b0.list\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_7a4dad root.main.check_same {}\n    instance(x: -287, y: -206) strings_characters_1c9f1c root.Std_k98ojb.Strings.Characters {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> count_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_node root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_1e7f1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_1e7f1c.y\n        expression_2d6da6.result -> pow_1e7f1c.x\n        pow_1e7f1c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_1f3f2c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_1f3f2c.y\n        expression_2d6da6.result -> pow_1f3f2c.x\n        pow_1f3f2c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_1e9b1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_1e9b1c.y\n        expression_2d6da6.result -> pow_1e9b1c.x\n        pow_1e9b1c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_1f8f1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_1f8f1c.y\n        expression_2d6da6.result -> pow_1f8f1c.x\n        pow_1f8f1c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_1e9b1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_1e9b1c.y\n        expression_2d6da6.result -> pow_1e9b1c.x\n        pow_1e9b1c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_1e9b2e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_1e9b2e.y\n        expression_2d6da6.result -> pow_1e9b2e.x\n        pow_1e9b2e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_2a7f1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_2a7f1c.y\n        expression_2d6da6.result -> pow_2a7f1c.x\n        pow_2a7f1c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_1e7f2c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_1e7f2c.y\n        expression_2d6da6.result -> pow_1e7f2c.x\n        pow_1e7f2c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_2f7f2c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_2f7f2c.y\n        expression_2d6da6.result -> pow_2f7f2c.x\n        pow_2f7f2c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_1f8f2c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_1f8f2c.y\n        expression_2d6da6.result -> pow_1f8f2c.x\n        pow_1f8f2c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3c8f9f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_9e7f7f\n\n        instance(x: 94, y: -105) mul_1a8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f9f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_7e9f9f root.Std_k98ojb.Math.Mul {}\n        size_3c8f9f -> mul_1a8c1f.first\n        size_3c8f9f -> mul_1a8c1f.second\n        mul_1a8c1f.result -> mul_5f9f9f.first\n        6 -> mul_5f9f9f.second\n        mul_5f9f9f.result -> mul_7e9f9f.first\n        size_3c8f9f -> mul_7e9f9f.second\n        mul_7e9f9f.result -> surface_area_9e7f7f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_9f9f9f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6a7f9f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_7e7f7f\n\n        instance(x: 94, y: -105) mul_1e9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e9f1f_1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e9f1f_2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e9f1f_3 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e9f1f_4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e9f1f_5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) add_1e9f1f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_1e9f1f_1 root.Std_k98ojb.Math.Add {}\n        size_6a7f9f -> mul_1e9f1f.first\n        size_6a7f9f -> mul_1e9f1f.second\n        size_6a7f9f -> mul_1e9f1f_1.first\n        size_6a7f9f -> mul_1e9f1f_1.second\n        size_6a7f9f -> mul_1e9f1f_2.first\n        size_6a7f9f -> mul_1e9f1f_2.second\n        size_6a7f9f -> mul_1e9f1f_3.first\n        size_6a7f9f -> mul_1e9f1f_3.second\n        size_6a7f9f -> mul_1e9f1f_4.first\n        size_6a7f9f -> mul_1e9f1f_4.second\n        size_6a7f9f -> mul_1e9f1f_5.first\n        6 -> mul_1e9f1f_5.second\n        mul_1e9f1f.result -> add_1e9f1f.first\n        mul_1e9f1f_1.result -> add_1e9f1f.second\n        mul_1e9f1f_2.result -> add_1e9f1f_1.first\n        mul_1e9f1f_3.result -> add_1e9f1f_1.second\n        add_1e9f1f.result -> mul_1e9f1f_4.first\n        add_1e9f1f_1.result -> mul_1e9f1f_4.second\n        mul_1e9f1f_4.result -> add_1e9f1f_5.first\n        mul_1e9f1f_5.result -> add_1e9f1f_5.second\n        add_1e9f1f_5.result -> surface_area_7e7f7f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_1e9f1f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3c8c8f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_7e7f7f\n\n        instance(x: 94, y: -105) mul_1a9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1b9c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6a7f7f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_7e1f1f\n\n        instance(x: 94, y: -105) mul_1f9c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_3f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_4f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_5f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_6f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_7f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_8f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_10f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_11f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_12f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_13f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_14f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_15f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_16f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_17f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_18f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_19f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_20f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_21f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_22f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_23f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_24f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_25f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_26f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_27f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_28f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_29f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_30f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_31f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_32f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_33f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_34f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_35f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_36f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_37f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_38f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_39f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_40f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_41f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_42f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_43f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_44f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_45f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_46f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_47f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_48f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_49f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_50f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_51f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_52f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_53f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_54f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_55f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_56f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_57f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_58f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_59f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_60f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_61f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_62f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_63f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_64f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_65f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_66",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6a3f7f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_7e1f7f\n\n        instance(x: 94, y: -105) mul_9e9f7f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9e9f7f_1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9e9f7f_2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9e9f7f_3 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9e9f7f_4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9e9f7f_5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9e9f7f_6 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9e9f7f_7 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9e9f7f_8 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) add_9e9f7f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_9e9f7f_1 root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_9e9f7f_2 root.Std_k98ojb.Math.Add {}\n        size_6a3f7f -> mul_9e9f7f.first\n        size_6a3f7f -> mul_9e9f7f.second\n        size_6a3f7f -> mul_9e9f7f_1.first\n        size_6a3f7f -> mul_9e9f7f_1.second\n        size_6a3f7f -> mul_9e9f7f_2.first\n        size_6a3f7f -> mul_9e9f7f_2.second\n        size_6a3f7f -> mul_9e9f7f_3.first\n        size_6a3f7f -> mul_9e9f7f_3.second\n        size_6a3f7f -> mul_9e9f7f_4.first\n        size_6a3f7f -> mul_9e9f7f_4.second\n        size_6a3f7f -> mul_9e9f7f_5.first\n        size_6a3f7f -> mul_9e9f7f_5.second\n        size_6a3f7f -> mul_9e9f7f_6.first\n        size_6a3f7f -> mul_9e9f7f_6.second\n        size_6a3f7f -> mul_9e9f7f_7.first\n        size_6a3f7f -> mul_9e9f7f_7.second\n        size_6a3f7f -> mul_9e9f7f_8.first\n        size_6a3f7f -> mul_9e9f7f_8.second\n        mul_9e9f7f.result -> add_9e9f7f.first\n        mul_9e9f7f_1.result -> add_9e9f7f.second\n        add_9e9f7f.result -> add_9e9f7f_1.first\n        mul_9e9f7f_2.result -> add_9e9f7f_1.second\n        add_9e9f7f_1.result -> add_9e9f7f_2.first\n        mul_9e9f7f_3.result -> add_9e9f7f_2.second\n        add_9e9f7f_2.result -> add_9e9f7f_2.second\n        mul_9e9f7f_4.result -> add_9e9f7f_2.second\n        mul_9e9f7f_5.result -> add_9e9f7f_2.second\n        mul_9e9f7f_6.result -> add_9e9f7f_2.second\n        mul_9e9f7f_7.result -> add_9e9f7f_2.second\n        mul_9e9f7f_8.result -> add_9e9f7f_2.second\n        add_9e9f7f_2.result -> surface_area_7e1f7f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_9e9f7f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3c2f7f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_7e9f9f\n\n        instance(x: 94, y: -105) mul_1e9b1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e9b1f_1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e9b1f_2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e9b1f_3 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e9b1f_4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1e9b1f_5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) add_1e9b1f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_1e9b1f_1 root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_1e9b1f_2 root.Std_k98ojb.Math.Add {}\n        size_3c2f7f -> mul_1e9b1f.first\n        size_3c2f7f -> mul_1e9b1f.second\n        size_3c2f7f -> mul_1e9b1f_1.first\n        size_3c2f7f -> mul_1e9b1f_1.second\n        size_3c2f7f -> mul_1e9b1f_2.first\n        size_3c2f7f -> mul_1e9b1f_2.second\n        size_3c2f7f -> mul_1e9b1f_3.first\n        size_3c2f7f -> mul_1e9b1f_3.second\n        size_3c2f7f -> mul_1e9b1f_4.first\n        size_3c2f7f -> mul_1e9b1f_4.second\n        size_3c2f7f -> mul_1e9b1f_5.first\n        size_3c2f7f -> mul_1e9b1f_5.second\n        mul_1e9b1f.result -> add_1e9b1f.first\n        mul_1e9b1f_1.result -> add_1e9b1f.second\n        mul_1e9b1f_2.result -> add_1e9b1f_1.first\n        mul_1e9b1f_3.result -> add_1e9b1f_1.second\n        mul_1e9b1f_4.result -> add_1e9b1f_2.first\n        mul_1e9b1f_5.result -> add_1e9b1f_2.second\n        add_1e9b1f.result -> add_1e9b1f_2.first\n        add_1e9b1f_1.result -> add_1e9b1f_2.second\n        add_1e9b1f_2.result -> surface_area_7e9f9f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_1e9b1f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3c2c9f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_9e9f7f\n\n        instance(x: 94, y: -105) mul_1a9f9f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a9f9f_1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a9f9f_2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a9f9f_3 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a9f9f_4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a9f9f_5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) add_1a9f9f_6 root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_1a9f9f_7 root.Std_k98ojb.Math.Add {}\n        size_3c2c9f -> mul_1a9f9f.first\n        size_3c2c9f -> mul_1a9f9f.second\n        mul_1a9f9f.result -> mul_1a9f9f_1.first\n        mul_1a9f9f.result -> mul_1a9f9f_2.first\n        mul_1a9f9f.result -> mul_1a9f9f_3.first\n        mul_1a9f9f.result -> mul_1a9f9f_4.first\n        mul_1a9f9f.result -> mul_1a9f9f_5.first\n        mul_1a9f9f.result -> add_1a9f9f_6.first\n        mul_1a9f9f.result -> add_1a9f9f_7.first\n        6 -> mul_1a9f9f_1.second\n        6 -> mul_1a9f9f_2.second\n        6 -> mul_1a9f9f_3.second\n        6 -> mul_1a9f9f_4.second\n        6 -> mul_1a9f9f_5.second\n        mul_1a9f9f_1.result -> add_1a9f9f_6.second\n        mul_1a9f9f_2.result -> add_1a9f9f_7.first\n        mul_1a9f9f_3.result -> add_1a9f9f_7.second\n        mul_1a9f9f_4.result -> add_1a9f9f_6.second\n        mul_1a9f9f_5.result -> add_1a9f9f_7.second\n        add_1a9f9f_6.result -> add_1a9f9f_7.second\n        add_1a9f9f_7.result -> surface_area_9e9f7f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6e9c8f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_7e1c1f\n\n        instance(x: 94, y: -105) mul_1a8c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a8c1f_1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a8c1f_2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a8c1f_3 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a8c1f_4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a8c1f_5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) add_1a8c1f_6 root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_1a8c1f_7 root.Std_k98ojb.Math.Add {}\n        size_6e9c8f -> mul_1a8c1f.first\n        size_6e9c8f -> mul_1a8c1f.second\n        size_6e9c8f -> mul_1a8c1f_1.first\n        size_6e9c8f -> mul_1a8c1f_1.second\n        size_6e9c8f -> mul_1a8c1f_2.first\n        size_6e9c8f -> mul_1a8c1f_2.second\n        size_6e9c8f -> mul_1a8c1f_3.first\n        size_6e9c8f -> mul_1a8c1f_3.second\n        size_6e9c8f -> mul_1a8c1f_4.first\n        size_6e9c8f -> mul_1a8c1f_4.second\n        size_6e9c8f -> mul_1a8c1f_5.first\n        size_6e9c8f -> mul_1a8c1f_5.second\n        mul_1a8c1f.result -> add_1a8c1f_6.first\n        mul_1a8c1f_1.result -> add_1a8c1f_6.second\n        mul_1a8c1f_2.result -> add_1a8c1f_7.first\n        mul_1a8c1f_3.result -> add_1a8c1f_7.second\n        mul_1a8c1f_4.result -> add_1a8c1f_6.first\n        mul_1a8c1f_5.result -> add_1a8c1f_6.second\n        add_1a8c1f_6.result -> add_1a8c1f_7.first\n        add_1a8c1f_7.result -> surface_area_7e1c1f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_1a8c1f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3c8c9f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_7e7c1f\n\n        instance(x: 94, y: -105) mul_1e9c8e root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_7e7f9f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_7e7f9f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_7e7f9f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_7e7f9f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_7e7f9f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_7e7f9f root.Std_k98ojb.Math.Mul {}\n        size_3c8c9f -> mul_1e9c8e.first\n        size_3c8c9f -> mul_1e9c8e.second\n        mul_1e9c8e.result -> mul_7e7f9f.first\n        6 -> mul_7e7f9f.second\n        mul_7e7f9f.result -> surface_area_7e7c1f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_9e7f9f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3c8c8f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_9e8f7f\n\n        instance(x: 94, y: -105) mul_1f9c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f9c8f_1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f9c8f_2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f9c8f_3 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f9c8f_4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f9c8f_5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1f9c8f_6 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) add_1f9c8f root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_1f9c8f_1 root.Std_k98ojb.Math.Add {}\n        instance(x: 92, y: -22) add_1f9c8f_2 root.Std_k98ojb.Math.Add {}\n        size_3c8c8f -> mul_1f9c8f.first\n        size_3c8c8f -> mul_1f9c8f.second\n        size_3c8c8f -> mul_1f9c8f_1.first\n        size_3c8c8f -> mul_1f9c8f_1.second\n        size_3c8c8f -> mul_1f9c8f_2.first\n        size_3c8c8f -> mul_1f9c8f_2.second\n        size_3c8c8f -> mul_1f9c8f_3.first\n        size_3c8c8f -> mul_1f9c8f_3.second\n        size_3c8c8f -> mul_1f9c8f_4.first\n        size_3c8c8f -> mul_1f9c8f_4.second\n        size_3c8c8f -> mul_1f9c8f_5.first\n        size_3c8c8f -> mul_1f9c8f_5.second\n        size_3c8c8f -> mul_1f9c8f_6.first\n        size_3c8c8f -> mul_1f9c8f_6.second\n        6 -> mul_1f9c8f_6.second\n        mul_1f9c8f.result -> mul_1f9c8f_3.first\n        mul_1f9c8f.result -> mul_1f9c8f_4.first\n        mul_1f9c8f.result -> mul_1f9c8f_5.first\n        mul_1f9c8f.result -> mul_1f9c8f_6.first\n        mul_1f9c8f_1.result -> mul_1f9c8f_2.first\n        mul_1f9c8f_1.result -> mul_1f9c8f_2.second\n        mul_1f9c8f_3.result -> add_1f9c8f.first\n        mul_1f9c8f_4.result -> add_1f9c8f.second\n        mul_1f9c8f_5.result -> add_1f9c8f_1.first\n        mul_1f9c8f_6.result -> add_1f9c8f_1.second\n        add_1f9c8f.result -> add_1f9c8f_2.first\n        add_1f9c8f_1.result -> add_1f9c8f_2.second\n        add_1f9c8f_2.result -> surface_area_9e8f7f\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a7f1f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6c7f1f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a7f1f.max -> sub_852f2e.first\n        min_6c7f1f.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a7f1f.list\n        list_0b075e -> min_6c7f1f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_5e7f1f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6e87f2 root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_5e7f1f.max -> sub_852f2e.first\n        min_6e87f2.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_5e7f1f.list\n        list_0b075e -> min_6e87f2.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a9c1e root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6f8f2f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a9c1e.max -> sub_852f2e.first\n        min_6f8f2f.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a9c1e.list\n        list_0b075e -> min_6f8f2f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a9c1e root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6f8f1c root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a9c1e.max -> sub_852f2e.first\n        min_6f8f1c.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a9c1e.list\n        list_0b075e -> min_6f8f1c.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_5e7f2e root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6e87f2 root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_5e7f2e.max -> sub_852f2e.first\n        min_6e87f2.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_5e7f2e.list\n        list_0b075e -> min_6e87f2.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a9c1e root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6e8f2f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a9c1e.max -> sub_852f2e.first\n        min_6e8f2f.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a9c1e.list\n        list_0b075e -> min_6e8f2f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a7f1f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6c9f9f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a7f1f.max -> sub_852f2e.first\n        min_6c9f9f.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a7f1f.list\n        list_0b075e -> min_6c9f9f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a9c1e root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6f9c1e root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a9c1e.max -> sub_852f2e.first\n        min_6f9c1e.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a9c1e.list\n        list_0b075e -> min_6f9c1e.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a7f1f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6c9c9f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a7f1f.max -> sub_852f2e.first\n        min_6c9c9f.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a7f1f.list\n        list_0b075e -> min_6c9c9f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -33, y: -26, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 201, y: 62) max_1a7f1f root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_6f8f1f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        max_1a7f1f.max -> sub_852f2e.first\n        min_6f8f1f.min -> sub_852f2e.second\n        list_0b075e -> length_6e87f2.list\n        list_0b075e -> max_1a7f1f.list\n        list_0b075e -> min_6f8f1f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_largest_smallest_15f9e9 root.main.diff_largest_smallest {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_7e7f7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e7f7f\n\n        instance(x: 201, y: 62) modulo_7e7f7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_7e7f7f root.Std_k98ojb.Logic.Equal {}\n        n_7e7f7f -> modulo_7e7f7f.value\n        2 -> modulo_7e7f7f.divisor\n        modulo_7e7f7f.result -> equal_7e7f7f.left\n        0 -> equal_7e7f7f.right\n        equal_7e7f7f.result -> output_7e7f7f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_7e7f7f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_1e9c7e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e9c7e\n\n        instance(x: 201, y: 62) modulo_1e9c7e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_1e9c7e root.Std_k98ojb.Logic.Equal {}\n        n_1e9c7e -> modulo_1e9c7e.value\n        2 -> modulo_1e9c7e.divisor\n        modulo_1e9c7e.result -> equal_1e9c7e.left\n        0 -> equal_1e9c7e.right\n        equal_1e9c7e.result -> output_7e9c7e\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_1e9c7e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_1e9c8e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_1e9c8e\n\n        instance(x: 201, y: 62) modulo_1e9c8e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_1e9c8e root.Std_k98ojb.Logic.Equal {}\n        n_1e9c8e -> modulo_1e9c8e.value\n        2 -> modulo_1e9c8e.divisor\n        modulo_1e9c8e.result -> equal_1e9c8e.left\n        0 -> equal_1e9c8e.right\n        equal_1e9c8e.result -> output_1e9c8e\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_1e9c8e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_7e9f9f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e9f9f\n\n        instance(x: 201, y: 62) modulo_7e9f9f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_7e9f9f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 201, y: 62) not_7e9f9f root.Std_k98ojb.Logic.Not {}\n        n_7e9f9f -> modulo_7e9f9f.value\n        2 -> modulo_7e9f9f.divisor\n        modulo_7e9f9f.result -> equal_7e9f9f.left\n        0 -> equal_7e9f9f.right\n        equal_7e9f9f.result -> not_7e9f9f.input\n        not_7e9f9f.result -> output_7e9f9f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_7e9f9f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_1e7f7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e9f7f\n\n        instance(x: 201, y: 62) modulo_1e7f7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_1e7f7f root.Std_k98ojb.Logic.Equal {}\n        n_1e7f7f -> modulo_1e7f7f.value\n        2 -> modulo_1e7f7f.divisor\n        0 -> equal_1e7f7f.right\n        modulo_1e7f7f.result -> equal_1e7f7f.left\n        equal_1e7f7f.result -> output_7e9f7f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_1e7f7f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_7e7f7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e7f7f\n\n        instance(x: 201, y: 62) modulo_7e7f7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_7e7f7f root.Std_k98ojb.Logic.Equal {}\n        n_7e7f7f -> modulo_7e7f7f.value\n        2 -> modulo_7e7f7f.divisor\n        modulo_7e7f7f.result -> equal_7e7f7f.left\n        0 -> equal_7e7f7f.right\n        equal_7e7f7f.result -> output_7e7f7f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_7e7f7f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_1e9c7e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_1e9c7e\n\n        instance(x: 201, y: 62) modulo_1e9c7e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_1e9c7e root.Std_k98ojb.Logic.Equal {}\n        n_1e9c7e -> modulo_1e9c7e.value\n        2 -> modulo_1e9c7e.divisor\n        modulo_1e9c7e.result -> equal_1e9c7e.left\n        0 -> equal_1e9c7e.right\n        equal_1e9c7e.result -> output_1e9c7e\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_1e9c7e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_7e7f9f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_1a9f9f\n\n        instance(x: 201, y: 62) modulo_9e7f9f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_9e7f9f root.Std_k98ojb.Logic.Equal {}\n        modulo_9e7f9f.result -> equal_9e7f9f.left\n        0 -> equal_9e7f9f.right\n        equal_9e7f9f.result -> output_1a9f9f\n        n_7e7f9f -> modulo_9e7f9f.value\n        2 -> modulo_9e7f9f.divisor\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_15f9e9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_7e9f7f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e9f7f\n\n        instance(x: 201, y: 62) modulo_7e9f7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_7e9f7f root.Std_k98ojb.Logic.Equal {}\n        n_7e9f7f -> modulo_7e9f7f.value\n        2 -> modulo_7e9f7f.divisor\n        modulo_7e9f7f.result -> equal_7e9f7f.left\n        0 -> equal_7e9f7f.right\n        equal_7e9f7f.result -> output_7e9f7f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_7e9f7f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: -26, name: \"n\") property(Number) n_7e7f9f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7e7f9f\n\n        instance(x: 201, y: 62) modulo_7e7f9f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_7e7f9f root.Std_k98ojb.Logic.Equal {}\n        n_7e7f9f -> modulo_7e7f9f.value\n        2 -> modulo_7e7f9f.divisor\n        modulo_7e7f9f.result -> equal_7e7f9f.left\n        0 -> equal_7e7f9f.right\n        equal_7e7f9f.result -> output_7e7f9f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_7e7f9f root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) string_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(String) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_0b1361 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"first repeated\") ``characters_0b1361_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        string_09fcba -> characters_0b1361.input\n        characters_0b1361.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.contains\n            find_7e1ce0.list -> contains_45e806.input\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_0b1361.characters -> ``characters_0b1361_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.contains\n            ``characters_0b1361_0b1361``.list -> contains_45e806.input\n            contains_45e806.result -> equal_148aeb.left\n            1 -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``characters_0b1361_0b1361``.predicate\n        find_7e1ce0.list -> ``characters_0b1361_0b1361``.list\n        ``characters_0b1361_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_smallest\") property(Number) second_smallest_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> second_smallest_ai\n\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.min -> list_remove_node.index\n        items_ai -> list_remove_node.list\n        list_remove_node.listWithoutItem -> list_min_node.items\n\n        instance(x: 426, y: -303) list_min_node_2 root.Std_k98ojb.List.Min {}\n        list_remove_node.listWithoutItem -> list_min_node_2.items\n        list_min_node_2.min -> second_smallest_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}"
            ]
        }
    }
]