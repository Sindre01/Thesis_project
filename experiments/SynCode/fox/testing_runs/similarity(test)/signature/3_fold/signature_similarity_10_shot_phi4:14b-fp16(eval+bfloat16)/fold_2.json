[
    {
        "experiment_name": "signature_similarity_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 13475,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 122, y: -68, name: \"intersection\") intersection_7b62e8 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 442, y: -63) notempty_d2c6b0 root.Std_k98ojb.List.NotEmpty {}\n        list1_016b2e -> intersection_7b62e8.left\n        list2_c8f404 -> intersection_7b62e8.right\n        intersection_7b62e8.intersect -> notempty_d2c6b0.list\n        notempty_d2c6b0.isEmpty -> output_879de6\n    }\n\n    \n\n    instance(x: 3, y: 12) common_element_b5dbf8 root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 101, y: -33, name: \"intersection\") intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 417, y: -69) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 752, y: -50) length_4b8927 root.Std_k98ojb.List.Length {}\n        list1_016b2e -> intersection_c7c7e6.left\n        list2_c8f404 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_4b8927.list\n        length_4b8927.length -> not_75283f.input\n        not_75283f.result -> output_879de6\n    }\n\n    \n\n    instance(x: -301, y: -1) common_element_c7a50d root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: -74, y: -27, name: \"Intersection\") intersection_c7f4d9 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 340, y: -57) notempty_e9e5aa root.Std_k98ojb.List.NotEmpty {}\n        list1_016b2e -> intersection_c7f4d9.left\n        list2_c8f404 -> intersection_c7f4d9.right\n        intersection_c7f4d9.intersect -> notempty_e9e5aa.list\n        notempty_e9e5aa.result -> output_879de6\n    }\n\n    \n\n    instance(x: -284, y: -164) common_element_e7a8e9 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: -1, y: -45, name: \"intersection\") intersection_83e8c4 root.Std_k98ojb.Sets.Intersection {}\n        list1_016b2e -> intersection_83e8c4.left\n        list2_c8f404 -> intersection_83e8c4.right\n        intersection_83e8c4.intersect -> output_879de6\n    }\n\n    \n\n    instance(x: -172, y: -68) common_element_6d6f2c root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 121, y: -96) intersection_f0c8a9 root.Std_k98ojb.Sets.Intersection {}\n        list1_016b2e -> intersection_f0c8a9.left\n        list2_c8f404 -> intersection_f0c8a9.right\n        instance(x: 392, y: -90) notempty_6d2b6c root.Std_k98ojb.List.NotEmpty {}\n        intersection_f0c8a9.intersect -> notempty_6d2b6c.list\n        notempty_6d2b6c.isEmpty -> output_879de6\n    }\n\n    \n\n    instance(x: -134, y: 3) common_element_a3e1cd root.main.common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 131, y: 18) intersection_4f7d63 root.Std_k98ojb.Sets.Intersection {}\n        list1_016b2e -> intersection_4f7d63.left\n        list2_c8f404 -> intersection_4f7d63.right\n        instance(x: 380, y: -65) notempty_9b5f9f root.Std_k98ojb.List.NotEmpty {}\n        intersection_4f7d63.intersect -> notempty_9b5f9f.list\n        notempty_9b5f9f.isNotEmpty -> output_879de6\n    }\n\n    \n\n    instance(x: -260, y: -99) common_element_8df2d7 root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 111, y: -57) intersection_a1d3e1 root.Std_k98ojb.Sets.Intersection {}\n        list1_016b2e -> intersection_a1d3e1.left\n        list2_c8f404 -> intersection_a1d3e1.right\n        instance(x: 414, y: -48) not_6f6d64 root.Std_k98ojb.Logic.Not {}\n        intersection_a1d3e1.intersect -> not_6f6d64.input\n        not_6f6d64.result -> output_879de6\n    }\n\n    \n\n    instance(x: -299, y: -25) common_element_b7f6c8 root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 125, y: -51, name: \"intersection\") intersection_4b7cc8 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 367, y: -73) notempty_9e8b6b root.Std_k98ojb.List.NotEmpty {}\n        list1_016b2e -> intersection_4b7cc8.left\n        list2_c8f404 -> intersection_4b7cc8.right\n        intersection_4b7cc8.intersect -> notempty_9e8b6b.list\n        notempty_9e8b6b.isEmpty -> output_879de6\n    }\n\n    \n\n    instance(x: -293, y: -5) common_element_bfc9b9 root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: -27, y: 14, name: \"intersection\") intersection_f2d1a1 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 318, y: -66) not_88a6ea root.Std_k98ojb.Logic.Not {}\n        instance(x: 419, y: -61) length_ee8e76 root.Std_k98ojb.List.Length {}\n        list1_016b2e -> intersection_f2d1a1.left\n        list2_c8f404 -> intersection_f2d1a1.right\n        intersection_f2d1a1.intersect -> length_ee8e76.list\n        0 -> length_ee8e76.length\n        length_ee8e76.is_equal -> not_88a6ea.input\n        not_88a6ea.result -> output_879de6\n    }\n\n    \n\n    instance(x: -299, y: -131) common_element_3d7e52 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 115, y: -46, name: \"Intersection\") intersection_8b4a0e root.Std_k98ojb.Sets.Intersection {}\n        list1_016b2e -> intersection_8b4a0e.left\n        list2_c8f404 -> intersection_8b4a0e.right\n        instance(x: 356, y: -61) notempty_8d8d4a root.Std_k98ojb.List.NotEmpty {}\n        intersection_8b4a0e.intersect -> notempty_8d8d4a.list\n        notempty_8d8d4a.isEmpty -> output_879de6\n    }\n\n    \n\n    instance(x: -271, y: -97) common_element_bdf1f7 root.main.common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 212, y: 157) find_5dfe01 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -0, y: 7) not_93e3a3 root.Std_k98ojb.Logic.Not {}\n        instance(x: -287, y: -16) filter_9c8d0a root.Std_k98ojb.Query.Filter {\n            where: \"it + 1 in list\"\n        }\n        instance(x: 528, y: 112) if_a6d3e7 root.Std_k98ojb.Std.If {}\n        instance(x: -287, y: 138) filter_2d0c4a root.Std_k98ojb.Query.Filter {\n            where: \"it - 1 in list\"\n        }\n        instance(x: -287, y: 282, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: 528, y: 312) if_0efbe3 root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -192, y: 44, name: \"current\") property(Number) current_5a7a2c\n\n            out(x: 705, y: 49, name: \"bool\") property(Bool) bool_aaf1c3\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_5a7a2c -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_aaf1c3\n        } -> find_5dfe01.predicate\n        list_faf6c2 -> find_5dfe01.items\n        find_5dfe01.item -> filter_9c8d0a.list\n        list_faf6c2 -> filter_2d0c4a.list\n        filter_9c8d0a.result -> if_a6d3e7.predicate\n        filter_2d0c4a.result -> if_0efbe3.predicate\n        list_faf6c2 -> filter_4d4556.list\n        filter_4d4556.result -> find_5dfe01.items\n        if_a6d3e7.else -> not_93e3a3.input\n        if_0efbe3.else -> not_93e3a3.input\n        not_93e3a3.result -> output_a2b59d\n        if_a6d3e7.then -> output_a2b59d\n        if_0efbe3.then -> output_a2b59d\n    }\n\n    \n\n    instance(x: -108, y: 349) check_consecutive_dca3ec root.main.check_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: -138, y: 130, name: \"Sorted list\") sort_5a0e8f root.Std_k98ojb.List.Sort {}\n        instance(x: 225, y: 117) map_eecfa3 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 592, y: 114) reduce_4d8aa8 root.Std_k98ojb.Iteration.Reduce {\n            initial_accumulator: 1\n        }\n        instance(x: 848, y: 120) expression_d3f4e8 root.Std_k98ojb.Math.Expression {\n            expression: \"prev + 1 == current\"\n        }\n        instance(x: 1015, y: 113) and_8f3b4c root.Std_k98ojb.Logic.And {}\n        instance(x: 1200, y: 134) if_cab5ab root.Std_k98ojb.Std.If {}\n        sort_5a0e8f.list -> map_eecfa3.items\n        func() {\n            in(x: -103, y: 30, name: \"item\") property(Number) item_d1d7b8\n\n            out(x: 407, y: 48, name: \"result\") property(Number) result_2a0ec4\n\n            instance(x: 110, y: 43) add_9f7d0c root.Std_k98ojb.Math.Add {}\n            1 -> add_9f7d0c.first\n            item_d1d7b8 -> add_9f7d0c.second\n            add_9f7d0c.result -> result_2a0ec4\n        } -> map_eecfa3.handler\n        map_eecfa3.output_list -> reduce_4d8aa8.items\n        expression_d3f4e8.gen_0 -> reduce_4d8aa8.accumulator\n        expression_d3f4e8.gen_1 -> reduce_4d8aa8.current\n        map_eecfa3.output_list -> expression_d3f4e8.gen_2\n        and_8f3b4c.result -> if_cab5ab.predicate\n        expression_d3f4e8.result -> and_8f3b4c.left\n        reduce_4d8aa8.final_accumulated_value -> and_8f3b4c.right\n        if_cab5ab.then -> output_a2b59d\n        list_faf6c2 -> sort_5a0e8f.list\n        reduce_4d8aa8.output -> if_cab5ab.else\n    }\n\n    \n\n    instance(x: -83, y: -24) check_consecutive_8c7e9a root.main.check_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 213, y: 141) contains_0e87b4 root.Std_k98ojb.List.Contains {}\n        instance(x: -81, y: 244) for_f9edda root.Std_k98ojb.Std.For {}\n        instance(x: 498, y: 146) not_83dd27 root.Std_k98ojb.Logic.Not {}\n        instance(x: 710, y: 206) add_b1df28 root.Std_k98ojb.Math.Add {}\n        instance(x: 700, y: -4) getat_8fbb4a root.Std_k98ojb.List.GetAt {}\n        instance(x: -1, y: -71) map_d3c7e5 root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -121, y: -22, name: \"x\") property(Number) x_0b4c65\n\n            out(x: 382, y: -34, name: \"\") property(Number) _2f0c6d\n\n            instance(x: 110, y: -15) add_2e0b5a root.Std_k98ojb.Math.Add {}\n            x_0b4c65 -> add_2e0b5a.first\n            1 -> add_2e0b5a.second\n            add_2e0b5a.result -> _2f0c6d\n        } -> map_d3c7e5.handler\n        list_faf6c2 -> for_f9edda.items\n        for_f9edda.item -> getat_8fbb4a.list\n        1 -> getat_8fbb4a.index\n        for_f9edda.index -> add_b1df28.first\n        1 -> add_b1df28.second\n        add_b1df28.result -> getat_8fbb4a.index\n        getat_8fbb4a.itemAtIndex -> contains_0e87b4.item\n        map_d3c7e5.output_list -> contains_0e87b4.list\n        for_f9edda.item -> map_d3c7e5.items\n        contains_0e87b4.is_contained -> not_83dd27.input\n        not_83dd27.result -> output_a2b59d\n        for_f9edda.onItem -> contains_0e87b4.execute\n        for_f9edda.done -> output_a2b59d\n        for_f9edda.reset -> output_a2b59d\n    }\n\n    \n\n    instance(x: -61, y: -12) check_consecutive_7faa90 root.main.check_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 123, y: 168) if_03c4c5 root.Std_k98ojb.Std.If {\n            predicate: \"length == 0\"\n        }\n        instance(x: 121, y: 30) if_8c4f8d root.Std_k98ojb.Std.If {\n            predicate: \"length == 1\"\n        }\n        instance(x: 117, y: -90) if_f4ee49 root.Std_k98ojb.Std.If {}\n        instance(x: 114, y: -290) map_c1b8ba root.Std_k98ojb.Iteration.Map {}\n        instance(x: 392, y: -84) not_1e1b28 root.Std_k98ojb.Logic.Not {}\n        instance(x: 397, y: -287) filter_7f3e5d root.Std_k98ojb.Query.Filter {\n            where: \"it[1] - it[0] != 1\"\n        }\n        instance(x: 726, y: 2) length_2b56c8 root.Std_k98ojb.List.Length {}\n        instance(x: 1048, y: 0) slice_6d2f80 root.Std_k98ojb.List.Slice {}\n        instance(x: 1397, y: -80) lessthan_4b5f0a root.Std_k98ojb.Math.LessThan {}\n        list_faf6c2 -> length_2b56c8.list\n        length_2b56c8.length -> if_03c4c5.predicate\n        if_03c4c5.else -> if_8c4f8d.execute\n        length_2b56c8.length -> if_8c4f8d.predicate\n        if_8c4f8d.else -> if_f4ee49.execute\n        list_faf6c2 -> slice_6d2f80.list\n        1 -> slice_6d2f80.start\n        slice_6d2f80.list -> map_c1b8ba.items\n        func() {\n            in(x: -115, y: -41, name: \"elem\") property(List) elem_1ed1b5\n\n            out(x: 497, y: -35, name: \"\") property(List) _5f7c7b\n\n            instance(x: 102, y: -18) list_2e8d66 root.Std_k98ojb.List.Slice {}\n            1 -> list_2e8d66.end\n            elem_1ed1b5 -> list_2e8d66.list\n            list_2e8d66.list -> _5f7c7b\n        } -> map_c1b8ba.handler\n        map_c1b8ba.output_list -> filter_7f3e5d.list\n        filter_7f3e5d.result -> not_1e1b28.input\n        not_1e1b28.result -> if_f4ee49.predicate\n        if_f4ee49.else -> if_03c4c5.then\n        if_8c4f8d.then -> if_f4ee49.then\n        if_03c4c5.then -> if_f4ee49.then\n        true -> if_03c4c5.then\n        true -> if_8c4f8d.then\n        false -> if_f4ee49.then\n        slice_6d2f80.list -> length_2b56c8.list\n        lessthan_4b5f0a.result -> if_f4ee49.value\n        length_2b56c8.length -> lessthan_4b5f0a.left\n        1 -> lessthan_4b5f0a.right\n        if_f4ee49.then -> output_a2b59d\n    }\n\n    \n\n    instance(x: -96, y: 278) check_consecutive_b3b6e7 root.main.check_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: -91, y: 164, name: \"isConsecutive\") filter_8c4f72 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -82, y: -30, name: \"zip\") zip_f6c8f5 root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 225, y: 131) map_c7d5c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 610, y: 128) not_6d44b6 root.Std_k98ojb.Logic.Not {}\n        instance(x: 811, y: 129) all_88ea6d root.Std_k98ojb.List.All {}\n        instance(x: 1073, y: 130) equal_5d2c06 root.Std_k98ojb.Logic.Equal {}\n        1 -> equal_5d2c06.right\n        map_c7d5c9.output_list -> all_88ea6d.list\n        func() {\n            in(x: -190, y: -24, name: \"left\") property(Number) left_c9f0f5\n            in(x: -172, y: -24, name: \"right\") property(Number) right_49ef2f\n\n            out(x: 507, y: -25, name: \"\") property(Bool) _bceaa1\n\n            instance(x: 95, y: -25) sub_2d67dc root.Std_k98ojb.Math.Sub {}\n            sub_2d67dc.result -> _bceaa1\n            right_49ef2f -> sub_2d67dc.second\n            left_c9f0f5 -> sub_2d67dc.first\n        } -> map_c7d5c9.handler\n        zip_f6c8f5.zipped -> map_c7d5c9.items\n        func() {\n            in(x: -175, y: 46, name: \"left\") property(Number) left_9a3eb0\n            in(x: -162, y: 46, name: \"right\") property(Number) right_2e2d1b\n\n            out(x: 412, y: 47, name: \"\") property(Bool) _f6b9f6\n\n            instance(x: 83, y: 45) sub_2ebf9c root.Std_k98ojb.Math.Sub {}\n            sub_2ebf9c.result -> _f6b9f6\n            right_2e2d1b -> sub_2ebf9c.second\n            left_9a3eb0 -> sub_2ebf9c.first\n        } -> zip_f6c8f5.handler\n        list_faf6c2 -> zip_f6c8f5.left\n        list_faf6c2 -> zip_f6c8f5.right\n        not_6d44b6.result -> output_a2b59d\n        all_88ea6d.result -> not_6d44b6.input\n        map_c7d5c9.output_list -> filter_8c4f72.items\n        func() {\n            in(x: -190, y: -24, name: \"item\") property(Bool) item_a5b9a7\n\n            out(x: 507, y: -25, name: \"\") property(Bool) _a9ecda\n\n            item_a5b9a7 -> _a9ecda\n        } -> filter_8c4f72.handler\n        filter_8c4f72.output_list -> equal_5d2c06.list\n        func() {\n            in(x: -109, y: 82, name: \"it\") property(Any) it_7a5eae\n\n            out(x: 331, y: 81, name: \"\") property(Bool) _c7a5e3\n\n            it_7a5eae -> _c7a5e3\n        } -> equal_5d2c06.handler\n    }\n\n    \n\n    instance(x: -44, y: -40) check_consecutive_6a6e1f root.main.check_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: -175, y: 157, name: \"Only even numbers\") filter_8c96d2 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 310, y: 150) lessthan_4d6f4c root.Std_k98ojb.Math.LessThan {}\n        instance(x: -0, y: 93) not_9c69c5 root.Std_k98ojb.Logic.Not {}\n        instance(x: 496, y: 133) ifexpression_9b5f9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"len(list) > 1\"\n        }\n        instance(x: -175, y: 305, name: \"Difference\") map_d9e0f3 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 496, y: 256) expression_6e8e6f root.Std_k98ojb.Math.Expression {\n            expression: \"it[1] - it[0]\"\n        }\n        instance(x: 311, y: 251) lessthanorequal_cfbbe5 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 496, y: 190) ifexpression_5a2a07 root.Std_k98ojb.Std.IfExpression {\n            expression: \"len(map) == len(list) - 1\"\n        }\n        instance(x: 496, y: 43) ifexpression_e4c54d root.Std_k98ojb.Std.IfExpression {\n            expression: \"len(list) == 1\"\n        }\n        instance(x: 496, y: -13) ifexpression_5dab1b root.Std_k98ojb.Std.IfExpression {\n            expression: \"len(list) <= 1\"\n        }\n        ifexpression_9b5f9f.else -> output_a2b59d\n        filter_8c96d2.output_list -> map_d9e0f3.items\n        func() {\n            in(x: -104, y: 219, name: \"i\") property(Number) i_6ed8f7\n\n            out(x: 392, y: 230, name: \"\") property(Number) _7dc9ef\n\n            instance(x: 78, y: 221) sub_57a1ae root.Std_k98ojb.Math.Sub {}\n            sub_57a1ae.first -> _7dc9ef\n            i_6ed8f7 -> sub_57a1ae.second\n            func() {\n                in(x: -120, y: 232, name: \"i\") property(Number) i_f2c2d5\n\n                out(x: 0, y: 233, name: \"\") property(Number) _7dc9f1\n\n                in(x: 11, y: 233, name: \"index\") property(Number) index_4c2a3a\n\n                sub_57a1ae.second -> _7dc9f1\n                index_4c2a3a -> i_f2c2d5\n            } -> map_d9e0f3.handler\n            map_d9e0f3.output_list -> lessthanorequal_cfbbe5.left\n            1 -> lessthanorequal_cfbbe5.right\n            lessthanorequal_cfbbe5.result -> not_9c69c5.input\n            not_9c69c5.result -> ifexpression_e4c54d.value\n            list_faf6c2 -> ifexpression_e4c54d.gen_0\n            true -> ifexpression_e4c54d.value\n            ifexpression_e4c54d.else -> output_a2b59d\n            map_d9e0f3.output_list -> ifexpression_5a2a07.gen_1\n            list_faf6c2 -> ifexpression_5a2a07.gen_0\n            list_faf6c2 -> filter_8c96d2.items\n            func() {\n                in(x: -114, y: 180, name: \"item\") property(Number) item_8b47e6\n\n                out(x: 332, y: 190, name: \"\") property(Bool) _7dd01e\n\n                instance(x: 98, y: 178) modulo_82db2c root.Std_k98ojb.Math.Modulo {}\n                2 -> modulo_82db2c.divisor\n                modulo_82db2c.result -> _7dd01e\n                item_8b47e6 -> modulo_82db2c.value\n            } -> filter_8c96d2.handler\n            len_7dabf2.len -> ifexpression_5dab1b.gen_0\n            list_faf6c2 -> len_7dabf2.list\n            ifexpression_5dab1b.value -> output_a2b59d\n            ifexpression_5dab1b.else -> ifexpression_9b5f9f.execute\n            lessthanorequal_cfbbe5.result -> lessthan_4d6f4c.left\n            1 -> lessthan_4d6f4c.right\n            lessthan_4d6f4c.result -> ifexpression_5a2a07.value\n            ifexpression_5a2a07.then -> ifexpression_e4c54d.execute\n            ifexpression_5a2a07.else -> output_a2b59d\n            func() {\n                in(x: -124, y: 268, name: \"current\") property(List) current_f3f2e1\n\n                out(x: 400, y: 257, name: \"\") property(Number) _7dc9f3\n\n                current_f3f2e1 -> expression_6e8e6f.list\n                expression_6e8e6f.result -> _7dc9f3\n            } -> map_d9e0f3.handler\n            list_faf6c2 -> len_7dabf2.list\n        } -> ifexpression_9b5f9f.handler\n    }\n\n    \n\n    instance(x: 20, y: 41) check_consecutive_7faa52 root.main.check_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: -87, y: 129, name: \"only odd indexes\") filter_e6a2e5 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 526, y: 130) lessthan_91e9b1 root.Std_k98ojb.Math.LessThan {}\n        instance(x: 738, y: 129) equal_7e96e1 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 922, y: 127) and_ebe6f6 root.Std_k98ojb.Logic.And {}\n        instance(x: 1241, y: 128) if_6c6b4a root.Std_k98ojb.Std.If {}\n        instance(x: -259, y: 209) getat_1e3d03 root.Std_k98ojb.List.GetAt {}\n        instance(x: -256, y: 335, name: \"odd\") filter_0f93e9 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -260, y: 452, name: \"even\") filter_c4bb6a root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -255, y: 569) generaterange_8c0a45 root.Std_k98ojb.List.GenerateRange {}\n        filter_c4bb6a.result -> getat_1e3d03.list\n        0 -> getat_1e3d03.index\n        getat_1e3d03.itemAtIndex -> filter_0f93e9.list\n        filter_0f93e9.result -> generaterange_8c0a45.from\n        list_faf6c2 -> filter_c4bb6a.list\n        filter_c4bb6a.result -> filter_e6a2e5.items\n        filter_e6a2e5.output_list -> lessthan_91e9b1.left\n        func() {\n            in(x: -104, y: 22, name: \"current\") property(Number) current_9f3e99\n            in(x: -97, y: 109, name: \"previous\") property(Number) previous_7d86c5\n\n            out(x: 702, y: 46, name: \"bool\") property(Bool) bool_6e6b7b\n\n            instance(x: 42, y: 29) sub_2d8b4a root.Std_k98ojb.Math.Sub {}\n            instance(x: 259, y: 46) equal_0e6d1b root.Std_k98ojb.Logic.Equal {}\n            instance(x: 443, y: 47) equal_57f6a7 root.Std_k98ojb.Logic.Equal {}\n            instance(x: 617, y: 47) and_6ed6aa root.Std_k98ojb.Logic.And {}\n            sub_2d8b4a.result -> equal_0e6d1b.left\n            1 -> equal_0e6d1b.right\n            equal_0e6d1b.result -> lessthan_91e9b1.right\n            previous_7d86c5 -> sub_2d8b4a.first\n            current_9f3e99 -> sub_2d8b4a.second\n            current_9f3e99 -> equal_57f6a7.left\n            1 -> equal_57f6a7.right\n            equal_57f6a7.result -> and_6ed6aa.right\n            lessthan_91e9b1.result -> and_6ed6aa.left\n            and_6ed6aa.result -> bool_6e6b7b\n        } -> filter_e6a2e5.handler\n        list_faf6c2 -> filter_e6a2e5.items\n        lessthan_91e9b1.result -> equal_7e96e1.left\n        1 -> equal_7e96e1.right\n        equal_7e96e1.result -> and_ebe6f6.left\n        filter_e6a2e5.output_list -> and_ebe6f6.right\n        and_ebe6f6.result -> if_6c6b4a.predicate\n        if_6c6b4a.else -> output_a2b59d\n        if_6c6b4a.then -> generaterange_8c0a45.to\n        1 -> generaterange_8c0a45.to\n        generaterange_8c0a45.list -> output_a2b59d\n        list_faf6c2 -> filter_0f93e9.list\n    }\n\n    \n\n    instance(x: -58, y: 71) check_consecutive_6cfb6c root.main.check_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 111, y: 129) map_80f4d7 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 556, y: 123) sort_1b5f02 root.Std_k98ojb.List.Sort {}\n        instance(x: -81, y: 204) map_f8a3d9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 372, y: 128) sub_6d6ec2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 735, y: 127) map_a9d49e root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1157, y: 134) lessthanorequal_d8b1ef root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1395, y: 132) map_9b9ab5 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1537, y: 128) count_7f8a54 root.Std_k98ojb.Std.Count {}\n        instance(x: 1803, y: 126) map_2ecf3c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1947, y: 122) lessthan_1a83d2 root.Std_k98ojb.Math.LessThan {}\n        instance(x: 2218, y: 135) map_92c9d3 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 2371, y: 138) if_05a0f2 root.Std_k98ojb.Std.If {}\n        instance(x: 2361, y: 217) if_eb4b6a root.Std_k98ojb.Std.If {}\n        list_faf6c2 -> sort_1b5f02.list\n        sort_1b5f02.sortedList -> map_80f4d7.items\n        func() {\n            in(x: -81, y: 59, name: \"current\") property(Number) current_7b5cc9\n\n            out(x: 392, y: 73, name: \"output\") property(Number) output_2d4d93\n\n            instance(x: 106, y: 69) add_d6b4a2 root.Std_k98ojb.Math.Add {}\n            current_7b5cc9 -> add_d6b4a2.first\n            1 -> add_d6b4a2.second\n            add_d6b4a2.result -> output_2d4d93\n        } -> map_80f4d7.handler\n        map_80f4d7.output_list -> map_f8a3d9.items\n        map_80f4d7.output_list -> map_92c9d3.items\n        func() {\n            in(x: -113, y: 131, name: \"current\") property(Number) current_96f8cd\n\n            out(x: 494, y: 128, name: \"output\") property(Number) output_8b73f1\n\n            instance(x: 102, y: 124) sub_1f4e7a root.Std_k98ojb.Math.Sub {}\n            current_96f8cd -> sub_1f4e7a.first\n            sub_6d6ec2.result -> sub_1f4e7a.second\n            sub_1f4e7a.result -> output_8b73f1\n        } -> map_f8a3d9.handler\n        map_f8a3d9.output_list -> lessthan_1a83d2.left\n        0 -> lessthan_1a83d2.right\n        lessthan_1a83d2.result -> if_eb4b6a.predicate\n        if_eb4b6a.then -> count_7f8a54.reset\n        map_f8a3d9.output_list -> map_a9d49e.items\n        func() {\n            in(x: -113, y: 131, name: \"current\") property(Number) current_96f8cd\n\n            out(x: 494, y: 128, name: \"output\") property(Number) output_8b73f1\n\n            instance(x: 102, y: 124) sub_1f4e7a root.Std_k98ojb.Math.Sub {}\n            current_96f8cd -> sub_1f4e7a.first\n            sub_6d6ec2.result -> sub_1f4e7a.second\n            sub_1f4e7a.result -> output_8b73f1\n        } -> map_a9d49e.handler\n        map_a9d49e.output_list -> lessthanorequal_d8b1ef.left\n        0 -> lessthanorequal_d8b1ef.right\n        lessthanorequal_d8b1ef.result -> if_05a0f2.predicate\n        if_05a0f2.then -> map_9b9ab5.execute\n        if_05a0f2.else -> count_7f8a54.next\n        map_a9d49e.output_list -> map_9b9ab5.items\n        func() {\n            in(x: -113, y: 131, name: \"current\") property(Number) current_96f8cd\n\n            out(x: 494, y: 128, name: \"output\") property(Number) output_8b73f1\n\n            instance(x: 102, y: 124) sub_1f4e7a root.Std_k98ojb.Math.Sub {}\n            current_96f8cd -> sub_1f4e7a.first\n            sub_6d6ec2.result -> sub_1f4e7a.second\n            sub_1f4e7a.result -> output_8b73f1\n        } -> map_9b9ab5.handler\n        map_9b9ab5.output_list -> count_7f8a54.count\n        count_7f8a54.count -> map_2ecf3c.items\n        func() {\n            in(x: -113, y: 131, name: \"current\") property(Number) current_96f8cd\n\n            out(x: 494, y: 128, name: \"output\") property(Number) output_8b73f1\n\n            instance(x: 102, y: 124) sub_1f4e7a root.Std_k98ojb.Math.Sub {}\n            current_96f8cd -> sub_1f4e7a.first\n            sub_6d6ec2.result -> sub_1f4e7a.second\n            sub_1f4e7a.result -> output_8b73f1\n        } -> map_2ecf3c.handler\n        map_2ecf3c.output_list -> lessthanorequal_d8b1ef.left\n        length_1b5f02.length -> lessthanorequal_d8b1ef.right\n        lessthanorequal_d8b1ef.result -> if_eb4b6a.value\n        count_7f8b54.value -> if_eb4b6a.value\n        if_eb4b6a.value -> output_a2b59d\n    }\n\n    \n\n    instance(x: -55, y: 177) check_consecutive_7ec7d0 root.main.check_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: -97, y: 176, name: \"Sorted list\") sort_1d49d5 root.Std_k98ojb.List.Sort {}\n        instance(x: 321, y: 130) filter_f2f9a8 root.Std_k98ojb.Query.Filter {\n            where: \"previous == it - 1\"\n        }\n        instance(x: 646, y: 132) not_9a0b5d root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: -10) getat_9ef9b3 root.Std_k98ojb.List.GetAt {}\n        instance(x: 227, y: 165) contains_8b1db1 root.Std_k98ojb.List.Contains {}\n        instance(x: 146, y: 175) map_a1c6a8 root.Std_k98ojb.Iteration.Map {}\n        list_faf6c2 -> sort_1d49d5.list\n        sort_1d49d5.sortedList -> filter_f2f9a8.list\n        func() {\n            in(x: -189, y: 52, name: \"current\") property(Number) current_5d2a9c\n            in(x: -170, y: 130, name: \"previous\") property(Number) previous_bfa7c3\n\n            out(x: 524, y: 47, name: \"\") property(Bool) _c8d9ad\n\n            1 -> getat_9ef9b3.index\n            sort_1d49d5.sortedList -> getat_9ef9b3.list\n            current_5d2a9c -> previous_bfa7c3\n            getat_9ef9b3.itemAtIndex -> previous_bfa7c3\n            current_5d2a9c -> _c8d9ad\n        } -> map_a1c6a8.handler\n        sort_1d49d5.sortedList -> map_a1c6a8.items\n        map_a1c6a8.output_list -> contains_8b1db1.list\n        false -> contains_8b1db1.item\n        contains_8b1db1.is_contained -> not_9a0b5d.input\n        not_9a0b5d.result -> output_a2b59d\n        sort_1d49d5.sortedList -> filter_f2f9a8.list\n    }\n\n    \n\n    instance(x: -84, y: 157) check_consecutive_7f7d2f root.main.check_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 1034, y: 125) if_7d7aa3 root.Std_k98ojb.Std.If {}\n        instance(x: 1138, y: -3) filter_bf42d4 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1212, y: 89) lessthan_bef7ca root.Std_k98ojb.Math.LessThan {}\n        instance(x: 1048, y: 199) map_9a89c7 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1284, y: 48) equal_86a1f5 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1094, y: 205) sort_1e5d7c root.Std_k98ojb.List.Sort {}\n        func() {\n            in(x: -77, y: 56, name: \"current\") property(Number) current_2c2b79\n\n            out(x: 577, y: 67, name: \"result\") property(Number) result_d6ebf5\n\n            instance(x: 93, y: 44) sub_43b5a8 root.Std_k98ojb.Math.Sub {}\n            current_2c2b79 -> sub_43b5a8.first\n            1 -> sub_43b5a8.second\n            sub_43b5a8.result -> result_d6ebf5\n        } -> map_9a89c7.handler\n        instance(x: 1184, y: -3) filter_5c2a8e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1213, y: 48) equal_0f5e9f root.Std_k98ojb.Logic.Equal {}\n        list_faf6c2 -> sort_1e5d7c.list\n        sort_1e5d7c.list -> map_9a89c7.items\n        list_faf6c2 -> filter_bf42d4.items\n        func() {\n            in(x: -76, y: -12, name: \"current\") property(Number) current_d0c2ee\n\n            out(x: 581, y: -1, name: \"bool\") property(Bool) bool_9fae9b\n\n            instance(x: 111, y: -15) sub_7c5f52 root.Std_k98ojb.Math.Sub {}\n            current_d0c2ee -> sub_7c5f52.first\n            1 -> sub_7c5f52.second\n            sub_7c5f52.result -> filter_5c2a8e.handler\n            sub_7c5f52.result -> lessthan_bef7ca.left\n            current_d0c2ee -> lessthan_bef7ca.right\n            lessthan_bef7ca.result -> filter_5c2a8e.predicate\n            lessthan_bef7ca.result -> bool_9fae9b\n        } -> filter_bf42d4.handler\n        map_9a89c7.output_list -> filter_5c2a8e.items\n        filter_bf42d4.result -> filter_5c2a8e.output_list\n        sort_1e5d7c.list -> filter_5c2a8e.output_list\n        func() {\n            in(x: -76, y: 48, name: \"a\") property(Number) a_1bbf0d\n\n            in(x: -74, y: 48, name: \"b\") property(Number) b_6ba0d8\n\n            out(x: 579, y: 67, name: \"bool\") property(Bool) bool_fbfec4\n\n            a_1bbf0d -> equal_86a1f5.left\n            b_6ba0d8 -> equal_86a1f5.right\n            equal_86a1f5.result -> bool_fbfec4\n        } -> filter_bf42d4.predicate\n        func() {\n            in(x: -76, y: 48, name: \"a\") property(Number) a_1bbf0d\n\n            in(x: -74, y: 48, name: \"b\") property(Number) b_6ba0d8\n\n            out(x: 579, y: 67, name: \"bool\") property(Bool) bool_fbfec4\n\n            a_1bbf0d -> equal_0f5e9f.left\n            b_6ba0d8 -> equal_0f5e9f.right\n            equal_0f5e9f.result -> bool_fbfec4\n        } -> filter_5c2a8e.predicate\n        filter_5c2a8e.output_list -> equal_0f5e9f.a\n        filter_5c2a8e.output_list -> equal_0f5e9f.b\n        map_9a89c7.output_list -> equal_86a1f5.a\n        map_9a89c7.output_list -> equal_86a1f5.b\n        lessthan_bef7ca.result -> if_7d7aa3.predicate\n        filter_5c2a8e.result -> if_7d7aa3.then\n        filter_bf42d4.result -> if_7d7aa3.else\n        if_7d7aa3.value -> output_a2b59d\n    }\n\n    \n\n    instance(x: -139, y: 263) check_consecutive_2c5c8a root.main.check_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1727, y: 1027, name: \"contains\") contains_8d6c0f root.Std_k98ojb.List.Contains {}\n        instance(x: -1174, y: 1069) count_8bf8f2 root.Std_k98ojb.Std.Count {}\n        instance(x: -1727, y: 1173) ifexpression_b9a2ed root.Std_k98ojb.Std.IfExpression {\n            expression: \"contains == true\"\n        }\n        instance(x: -1728, y: 1275, name: \"ifexpression\") ifexpression_a87e4e root.Std_k98ojb.Std.If {}\n        instance(x: -1206, y: 1313) length_bdbdb6 root.Std_k98ojb.List.Length {}\n        instance(x: -1505, y: 1247, name: \"IfExpression\") ifexpression_7c5e52 root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == length\"\n        }\n        instance(x: -1519, y: 1115, name: \"For\") for_61baa8 root.Std_k98ojb.Std.For {}\n        sub_list_f9cb80 -> contains_8d6c0f.list\n        main_list_25f077 -> contains_8d6c0f.item\n        contains_8d6c0f.is_contained -> ifexpression_b9a2ed.gen_1\n        ifexpression_b9a2ed.value -> ifexpression_a87e4e.input\n        ifexpression_a87e4e.then -> count_8bf8f2.trigger\n        ifexpression_a87e4e.else -> continue_d72620\n        execute_68160a -> ifexpression_a87e4e.execute\n        count_8bf8f2.count -> ifexpression_7c5e52.gen_0\n        length_bdbdb6.list -> length_bdbdb6.list\n        sub_list_f9cb80 -> length_bdbdb6.list\n        length_bdbdb6.length -> ifexpression_7c5e52.gen_1\n        ifexpression_7c5e52.value -> ifexpression_a87e4e.then\n        ifexpression_a87e4e.continue -> for_61baa8.next\n        for_61baa8.items -> main_list_25f077\n        for_61baa8.onItem -> contains_8d6c0f.item\n        for_61baa8.done -> continue_d72620\n        contains_8d6c0f.is_contained -> ifexpression_a87e4e.then\n        ifexpression_a87e4e.then -> ifexpression_a87e4e.then\n        for_61baa8.reset -> count_8bf8f2.reset\n        ifexpression_a87e4e.then -> for_61baa8.trigger\n        ifexpression_a87e4e.else -> ifexpression_a87e4e.else\n        ifexpression_7c5e52.then -> output_ebc87c\n        ifexpression_7c5e52.else -> ifexpression_a87e4e.else\n    }\n\n    \n\n    instance(x: -1820, y: 1183) is_Sub_Array_b0dbfc root.main.is_Sub_Array {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1649, y: 1157) if_1a8b50 root.Std_k98ojb.Std.If {}\n        instance(x: -1582, y: 1216, name: \"find index of subList[0] in main_list\") find_f6a0b1 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -1451, y: 1020) contains_ea2b6c root.Std_k98ojb.List.Contains {}\n        instance(x: -1318, y: 1119) getat_e8f2d6 root.Std_k98ojb.List.GetAt {}\n        instance(x: -1222, y: 1247) not_37b1c2 root.Std_k98ojb.Logic.Not {}\n        instance(x: -1108, y: 1127, name: \"main_list.slice\") slice_0ec4e5 root.Std_k98ojb.List.Slice {}\n        instance(x: -1087, y: 1092, name: \"main_list[index:]\") slice_8ddc3f root.Std_k98ojb.List.Slice {}\n        instance(x: -1031, y: 1195) length_93f7d7 root.Std_k98ojb.List.Length {}\n        instance(x: -1003, y: 1282) sub_9a9ec0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -925, y: 1216, name: \"get index in sliced main_list\") getat_3eb2a5 root.Std_k98ojb.List.GetAt {}\n        instance(x: -831, y: 1170) if_5a2df1 root.Std_k98ojb.Std.If {}\n        instance(x: -772, y: 1186, name: \"compare sliced main_list with sub_list\") equals_2cbf3f root.Std_k98ojb.Logic.Equal {}\n        instance(x: -722, y: 1290) sub_1a2f5d root.Std_k98ojb.Math.Sub {}\n        instance(x: -696, y: 1171, name: \"sub_list[:-1]\") slice_7f1dd9 root.Std_k98ojb.List.Slice {}\n        instance(x: -672, y: 1124, name: \"main_list[index + 1:]\") slice_b0f1c2 root.Std_k98ojb.List.Slice {}\n        instance(x: -641, y: 1224, name: \"check if sub_list exists in main_list[index+1:]\") contains_5c92d7 root.Std_k98ojb.List.Contains {}\n        instance(x: -578, y: 1168) if_7a5d16 root.Std_k98ojb.Std.If {}\n        instance(x: -520, y: 1143, name: \"if sub_list is not in main_list[index+1:]\") if_93e5ef root.Std_k98ojb.Std.If {}\n        instance(x: -467, y: 1157) false_93f9c4 root.Std_k98ojb.Logic.False {}\n        instance(x: -424, y: 1266) ifexpression_9efbf6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index + 1 < main_list.length\"\n        }\n        instance(x: -359, y: 1183, name: \"if sub_list is found in main_list[index+1:]\") if_8cc2db root.Std_k98ojb.Std.If {}\n        instance(x: -307, y: 1226) true_1ab6c5 root.Std_k98ojb.Logic.True {}\n        instance(x: -262, y: 1287) ifexpression_8e1ebc root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1 || main_list.length < index + sub_list.length\"\n        }\n        instance(x: -197, y: 1184) false_9b83c9 root.Std_k98ojb.Logic.False {}\n        execute_68160a -> find_f6a0b1.items\n        main_list_25f077 -> find_f6a0b1.items\n        func() {\n            in(x: -1808, y: 1260, name: \"current\") property(Number) current_d5c1ca\n\n            out(x: -1097, y: 1188, name: \"bool\") property(Bool) bool_d4db1a\n\n            instance(x: -1642, y: 1235) equal_6fc8b6 root.Std_k98ojb.Logic.Equal {}\n            sub_list_f9cb80 -> equal_6fc8b6.right\n            current_d5c1ca -> equal_6fc8b6.left\n            equal_6fc8b6.result -> bool_d4db1a\n        } -> find_f6a0b1.predicate\n        find_f6a0b1.index -> getat_e8f2d6.index\n        main_list_25f077 -> getat_e8f2d6.list\n        find_f6a0b1.index -> getat_3eb2a5.index\n        slice_0ec4e5.list -> contains_ea2b6c.list\n        sub_list_f9cb80 -> contains_ea2b6c.item\n        getat_e8f2d6.itemAtIndex -> slice_0ec4e5.start\n        1 -> slice_0ec4e5.end\n        slice_0ec4e5.slice -> getat_3eb2a5.list\n        contains_ea2b6c.is_contained -> if_1a8b50.input\n        getat_e8f2d6.itemAtIndex -> if_1a8b50.thenValue\n        false_93f9c4.value -> if_1a8b50.elseValue\n        if_1a8b50.then -> getat_3eb2a5.execute\n        if_1a8b50.else -> continue_d72620\n        if_1a8b50.value -> not_37b1c2.input\n        getat_e8f2d6.itemAtIndex -> sub_9a9ec0.second\n        0 -> sub_9a9ec0.first\n        sub_9a9ec0.result -> slice_8ddc3f.start\n        getat_3eb2a5.itemAtIndex -> length_93f7d7.list\n        length_93f7d7.length -> if_5a2df1.input\n        not_37b1c2.result -> if_5a2df1.elseValue\n        false_9b83c9.value -> if_5a2df1.thenValue\n        if_5a2df1.then -> equals_2cbf3f.execute\n        if_5a2df1.else -> continue_d72620\n        slice_8ddc3f.list -> equals_2cbf3f.left\n        sub_list_f9cb80 -> equals_2cbf3f.right\n        equals_2cbf3f.result -> if_7a5d16.input\n        false_9b83c9.value -> if_7a5d16.elseValue\n        true_1ab6c5.value -> if_7a5d16.thenValue\n        if_7a5d16.then -> slice_b0f1c2.execute\n        if_7a5d16.else -> continue_d72620\n        getat_3eb2a5.itemAtIndex -> slice_b0f1c2.start\n        1 -> slice_b0f1c2.end\n        slice_b0f1c2.slice -> contains_5c92d7.list\n        sub_list_f9cb80 -> contains_5c92d7.item\n        contains_5c92d7.is_contained -> if_93e5ef.input\n        false_93f9c4.value -> if_93e5ef.elseValue\n        true_1ab6c5.value -> if_93e5ef.thenValue\n        if_93e5ef.then -> sub_1a2f5d.execute\n        if_93e5ef.else -> continue_d72620\n        getat_3eb2a5.itemAtIndex -> sub_1a2f5d.first\n        sub_list_f9cb80.length -> sub_1a2f5",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1188, y: 1035) for_fbd3bc root.Std_k98ojb.Std.For {}\n        instance(x: -1258, y: 1072, name: \"get sublist\") slice_e8e5f1 root.Std_k98ojb.List.Slice {}\n        instance(x: -1220, y: 1273) map_9e0a1c root.Std_k98ojb.Iteration.Map {}\n        instance(x: -1278, y: 1310, name: \"length of sub list\") length_7c1bc4 root.Std_k98ojb.List.Length {}\n        instance(x: -1200, y: 1106, name: \"check equality\") filter_0ff5a2 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -1136, y: 1180, name: \"if expression\") ifexpression_2e4c4e root.Std_k98ojb.Std.IfExpression {}\n        instance(x: -1164, y: 1247) isequal_b0a73e root.Std_k98ojb.Logic.Equal {}\n        main_list_25f077 -> for_fbd3bc.items\n        for_fbd3bc.index -> slice_e8e5f1.start\n        length_7c1bc4.list -> sub_list_f9cb80\n        length_7c1bc4.length -> slice_e8e5f1.end\n        for_fbd3bc.item -> slice_e8e5f1.list\n        execute_68160a -> for_fbd3bc.reset\n        for_fbd3bc.onItem -> ifexpression_2e4c4e.execute\n        slice_e8e5f1.slice -> map_9e0a1c.items\n        func() {\n            in(x: -122, y: 1146, name: \"current\") property(Number) current_8e5bbf\n\n            out(x: 247, y: 1171, name: \"\") property(Bool) _1f4d7b1\n\n            instance(x: 116, y: 1167) isequal_71cfa4 root.Std_k98ojb.Logic.Equal {}\n            sub_list_f9cb80 -> isequal_71cfa4.right\n            current_8e5bbf -> isequal_71cfa4.left\n            isequal_71cfa4.result -> _1f4d7b1\n        } -> map_9e0a1c.handler\n        map_9e0a1c.output_list -> filter_0ff5a2.items\n        func() {\n            in(x: -192, y: 1132, name: \"current\") property(Bool) current_3e4c9e\n\n            out(x: 521, y: 1148, name: \"output\") property(Bool) output_5d4a5b\n\n            instance(x: 74, y: 1141) and_f9b92f root.Std_k98ojb.Logic.And {}\n            instance(x: 295, y: 1139) contains_9c0b1c root.Std_k98ojb.List.Contains {}\n            true -> and_f9b92f.left\n            contains_9c0b1c.is_contained -> and_f9b92f.right\n            current_3e4c9e -> contains_9c0b1c.item\n            sub_list_f9cb80 -> contains_9c0b1c.list\n            and_f9b92f.result -> output_5d4a5b\n        } -> filter_0ff5a2.handler\n        filter_0ff5a2.output_list -> ifexpression_2e4c4e.gen_2\n        func() {\n            in(x: -192, y: 1112, name: \"current\") property(List) current_9f4d0e\n\n            out(x: 521, y: 1128, name: \"output\") property(Bool) output_9cb7b1\n\n            instance(x: 74, y: 1121) and_4d8e3c root.Std_k98ojb.Logic.And {}\n            instance(x: 295, y: 1119) isequal_1a8b2a root.Std_k98ojb.Logic.Equal {}\n            instance(x: 456, y: 1119) length_87e3a4 root.Std_k98ojb.List.Length {}\n            length_87e3a4.list -> current_9f4d0e\n            length_87e3a4.length -> isequal_1a8b2a.right\n            length_7c1bc4.length -> isequal_1a8b2a.left\n            isequal_1a8b2a.result -> and_4d8e3c.left\n            true -> and_4d8e3c.right\n            and_4d8e3c.result -> output_9cb7b1\n        } -> ifexpression_2e4c4e.gen_0\n        ifexpression_2e4c4e.then -> isequal_b0a73e.execute\n        ifexpression_2e4c4e.value -> output_ebc87c\n        ifexpression_2e4c4e.else -> continue_d72620\n        isequal_b0a73e.left -> filter_0ff5a2.output_list\n        isequal_b0a73e.right -> sub_list_f9cb80\n        isequal_b0a73e.result -> continue_d72620\n        for_fbd3bc.done -> continue_d72620\n    }\n\n    \n\n    instance(x: -1178, y: 1081) is_Sub_Array_7cfe6c root.main.is_Sub_Array {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1592, y: 1044, name: \"length of main list\") length_5e81c8 root.Std_k98ojb.List.Length {}\n        instance(x: -1592, y: 1317, name: \"length of sub list\") length_7e1e1b root.Std_k98ojb.List.Length {}\n        instance(x: -1487, y: 1268) ifexpression_3e5d7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"length of sub list <= length of main list\"\n        }\n        instance(x: -1491, y: 1053, name: \"main list length > sub list length\") ifexpression_6b3b2d root.Std_k98ojb.Std.IfExpression {\n            expression: \"length of main list > length of sub list\"\n        }\n        instance(x: -1366, y: 1271, name: \"check if all elements match\") filter_4a71b2 root.Std_k98ojb.Query.Filter {\n            where: \"it == sub_list[index]\"\n        }\n        instance(x: -1366, y: 1046, name: \"check if all elements match\") filter_2d8bba root.Std_k98ojb.Query.Filter {\n            where: \"it == main_list[index]\"\n        }\n        instance(x: -1148, y: 1232) getat_7c1cc9 root.Std_k98ojb.List.GetAt {}\n        instance(x: -1148, y: 1105) getat_8a3f57 root.Std_k98ojb.List.GetAt {}\n        instance(x: -1083, y: 1182) ifexpression_8eb9cc root.Std_k98ojb.Std.IfExpression {\n            expression: \"item == sub_list[index]\"\n        }\n        instance(x: -1114, y: 1120, name: \"first item\") firstitem_9c1d50 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1114, y: 1295, name: \"first item\") firstitem_6bb6c8 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1024, y: 1118) ifexpression_1f3fcb root.Std_k98ojb.Std.IfExpression {\n            expression: \"item == main_list[index]\"\n        }\n        instance(x: -992, y: 1203) add_92e0e3 root.Std_k98ojb.List.Add {}\n        instance(x: -1009, y: 1187) getat_7c1cc9 root.Std_k98ojb.List.GetAt {}\n        instance(x: -993, y: 1107) add_92e0e3 root.Std_k98ojb.List.Add {}\n        instance(x: -1018, y: 1090) getat_8a3f57 root.Std_k98ojb.List.GetAt {}\n        instance(x: -1087, y: 1171) add_92e0e3 root.Std_k98ojb.List.Add {}\n        instance(x: -1095, y: 1227) getat_7c1cc9 root.Std_k98ojb.List.GetAt {}\n        instance(x: -1102, y: 1142) add_92e0e3 root.Std_k98ojb.List.Add {}\n        instance(x: -1089, y: 1105) getat_8a3f57 root.Std_k98ojb.List.GetAt {}\n        instance(x: -1027, y: 1167) add_92e0e3 root.Std_k98ojb.List.Add {}\n        instance(x: -992, y: 1199) increment_2b4f28 root.Std_k98ojb.Std.Count {}\n        instance(x: -1014, y: 1175) increment_5f0d8e root.Std_k98ojb.Std.Count {}\n        instance(x: -1083, y: 1113) increment_5f0d8e root.Std_k98ojb.Std.Count {}\n        instance(x: -1026, y: 1185) increment_2b4f28 root.Std_k98ojb.Std.Count {}\n        instance(x: -1136, y: 1182) ifexpression_8eb9cc_else root.Std_k98ojb.Std.IfExpression {\n            expression: \"item != sub_list[index]\"\n        }\n        instance(x: -1013, y: 1117) ifexpression_1f3fcb_else root.Std_k98ojb.Std.IfExpression {\n            expression: \"item != main_list[index]\"\n        }\n        instance(x: -1136, y: 1182) ifexpression_8eb9cc_then root.Std_k98ojb.Std.IfExpression {}\n        instance(x: -1013, y: 1117) ifexpression_1f3fcb_then root.Std_k98ojb.Std.IfExpression {}\n        instance(x: -1071, y: 1131) reset_5d7bb6 root.Std_k98ojb.Std.Count {\n            repeat: true\n        }\n        instance(x: -1071, y: 1216) reset_47ed53 root.Std_k98ojb.Std.Count {\n            repeat: true\n        }\n        instance(x: -1096, y: 1192) ifexpression_8eb9cc_else_2 root.Std_k98ojb.Std.IfExpression {}\n        instance(x: -1017, y: 1107) ifexpression_1f3fcb_else_2 root.Std_k98ojb.Std.IfExpression {}\n        instance(x: -1042, y: 1214) increment_2b4f28_else root.Std_k98ojb.Std.Count {}\n        instance(x: -1067, y: 1176) increment_5f0d8e_else root.Std_k98ojb.Std.Count {}\n        instance(x: -1024, y: 1118) ifexpression_1f3fcb_then root.Std_k98ojb.Std.IfExpression {}\n        instance(x: -1071, y: 1131) reset_5d7bb6_else root.Std_k98ojb.Std.Count {}\n        instance(x: -1071, y: 1216) reset_47ed53_else root.Std_k98ojb.Std.Count {}\n        instance(x: -1042, y: 1214) increment_2b4f28_else_2 root.Std_k98ojb.Std.Count {}\n        instance(x: -1067, y: 1176) increment_5f0d8e_else_2 root.Std_k98ojb.Std.Count {}\n        instance(x: -1071, y: 1131) reset_5d7bb6_then root.Std_k98ojb.Std.Count {}\n        instance(x: -1071, y: 1216) reset_47ed53_then root.Std_k98ojb.Std.Count {}\n        instance(x: -1114, y: 1295) firstitem_6bb6c8_result root.Std_k98ojb.List.FirstItem_result {}\n        instance(x: -1114, y: 1120) firstitem_9c1d50_result root.Std_k98ojb.List.FirstItem_result {}\n        instance(x: -1083, y: 1271) filter_4a71b2_result root.Std_k98ojb.Query.Filter_result {}\n        instance(x: -1487, y: 1053) ifexpression_6b3b2d_else root.Std_k98ojb.Std.IfExpression {}\n        instance(x: -1487, y: 1053) ifexpression_6b3b2d_then root.Std_k98ojb.Std.IfExpression {}\n        instance(x: -1592, y: 1317) length_7e1e1b_result root.Std_k98ojb.List.Length_result {}\n        instance(x: -1592, y: 1044) length_5e81c8_result root.Std_k98ojb.List.Length_result {}\n        instance(x: -1366, y: 1046) filter_2d8bba_result root.Std_k98ojb.Query.Filter_result {}\n        instance(x: -1366, y: 1271) filter_4a71b2_result_2 root.Std_k98ojb.Query.Filter_result {}\n        instance(x: -1027, y: 1167) add_92e0e3_result_2 root.Std_k98ojb.List.Add_result {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1391, y: 1041) for_cdc0f2 root.Std_k98ojb.Std.For {}\n        instance(x: 138, y: 1093) if_4d2d5a root.Std_k98ojb.Std.If {}\n        instance(x: -1435, y: 1152) slice_ae8f6a root.Std_k98ojb.List.Slice {}\n        instance(x: -1348, y: 1275) equal_d0f9bf root.Std_k98ojb.Logic.Equal {}\n        main_list_25f077 -> for_cdc0f2.items\n        execute_68160a -> for_cdc0f2.trigger\n        for_cdc0f2.item -> slice_ae8f6a.list\n        0 -> slice_ae8f6a.start\n        for_cdc0f2.index -> slice_ae8f6a.end\n        slice_ae8f6a.slice -> equal_d0f9bf.left\n        sub_list_f9cb80 -> equal_d0f9bf.right\n        equal_d0f9bf.result -> if_4d2d5a.input\n        if_4d2d5a.then -> continue_d72620\n        if_4d2d5a.else -> continue_d72620\n        if_4d2d5a.value -> output_ebc87c\n        for_cdc0f2.onItem -> if_4d2d5a.execute\n        for_cdc0f2.done -> continue_d72620\n    }\n\n    \n    instance(x: 1, y: 1097) is_sub_array_e4d0e9 root.main.is_Sub_Array {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1333, y: 1003) contains_3dca6c root.Std_k98ojb.List.Contains {}\n        instance(x: 1426, y: 1118) equal_83c3d0 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -1297, y: 1066) getat_d9e0f8 root.Std_k98ojb.List.GetAt {}\n        instance(x: -1298, y: 1288) getat_c1fcf1 root.Std_k98ojb.List.GetAt {}\n        instance(x: -1112, y: 1091) ifexpression_2bc01c root.Std_k98ojb.Std.IfExpression {\n            expression: \"contains\"\n        }\n        instance(x: -1117, y: 1220) ifexpression_c0af2a root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < sub_list.length\"\n        }\n        instance(x: -1114, y: 1314) ifexpression_f6e2d6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"current == sub_list[index]\"\n        }\n        getat_c1fcf1.itemAtIndex -> ifexpression_c0af2a.gen_1\n        getat_c1fcf1.list -> contains_3dca6c.list\n        getat_c1fcf1.index -> contains_3dca6c.index\n        sub_list_f9cb80 -> contains_3dca6c.item\n        getat_d9e0f8.list -> getat_c1fcf1.list\n        getat_d9e0f8.index -> getat_c1fcf1.index\n        main_list_25f077 -> getat_d9e0f8.list\n        0 -> getat_d9e0f8.index\n        getat_c1fcf1.itemAtIndex -> ifexpression_2bc01c.gen_0\n        contains_3dca6c.is_contained -> ifexpression_2bc01c.gen_1\n        ifexpression_2bc01c.value -> equal_83c3d0.left\n        true -> equal_83c3d0.right\n        equal_83c3d0.result -> ifexpression_c0af2a.gen_0\n        sub_list_f9cb80 -> getat_c1fcf1.list\n        0 -> getat_c1fcf1.index\n        sub_list_f9cb80 -> getat_d9e0f8.list\n        0 -> getat_d9e0f8.index\n        ifexpression_c0af2a.then -> getat_d9e0f8.execute\n        ifexpression_c0af2a.value -> ifexpression_f6e2d6.gen_1\n        ifexpression_f6e2d6.then -> getat_d9e0f8.execute\n        getat_c1fcf1.itemAtIndex -> ifexpression_f6e2d6.gen_0\n        getat_d9e0f8.itemAtIndex -> ifexpression_f6e2d6.gen_2\n        ifexpression_f6e2d6.value -> ifexpression_c0af2a.gen_2\n        ifexpression_c0af2a.else -> getat_d9e0f8.execute\n        ifexpression_2bc01c.then -> getat_c1fcf1.execute\n        execute_68160a -> getat_d9e0f8.execute\n        ifexpression_c0af2a.else -> getat_c1fcf1.execute\n        getat_c1fcf1.continue -> ifexpression_2bc01c.execute\n        getat_d9e0f8.continue -> ifexpression_c0af2a.execute\n        getat_d9e0f8.continue -> ifexpression_f6e2d6.execute\n        ifexpression_f6e2d6.else -> getat_d9e0f8.next\n        ifexpression_c0af2a.else -> getat_d9e0f8.next\n        ifexpression_2bc01c.else -> continue_d72620\n        ifexpression_2bc01c.value -> output_ebc87c\n    }\n\n    \n\n    instance(x: -1414, y: 1063) is_Sub_Array_ee1a3b root.main.is_Sub_Array {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1638, y: 1011) if_2b9c96 root.Std_k98ojb.Std.If {}\n        instance(x: -1686, y: 1087) getat_8b0d3c root.Std_k98ojb.List.GetAt {}\n        instance(x: -1639, y: 1207) if_5d41f4 root.Std_k98ojb.Std.If {}\n        instance(x: -1706, y: 1300) length_bce2ac root.Std_k98ojb.List.Length {}\n        instance(x: -1452, y: 1177) getat_8d4eaa root.Std_k98ojb.List.GetAt {}\n        instance(x: -1493, y: 1099) getat_1a4d9c root.Std_k98ojb.List.GetAt {}\n        instance(x: -1624, y: 1265) if_3b69cc root.Std_k98ojb.Std.If {}\n        instance(x: -1695, y: 1359) index_9d7c03 root.Std_k98ojb.Std.Count {}\n        instance(x: -1584, y: 1037) setvalue_8e47fc root.Std_k98ojb.Std.SetValue {}\n        instance(x: -1466, y: 1167) getat_3a9e98 root.Std_k98ojb.List.GetAt {}\n        instance(x: -1509, y: 1091) getat_e6e8f2 root.Std_k98ojb.List.GetAt {}\n        instance(x: -1598, y: 1249) setvalue_c4aa59 root.Std_k98ojb.Std.SetValue {}\n        instance(x: -1472, y: 1343) add_7d3b0f root.Std_k98ojb.List.Add {}\n        instance(x: -1675, y: 1245) if_3dc7f7 root.Std_k98ojb.Std.If {}\n        instance(x: -1672, y: 1333) add_7d3b0f root.Std_k98ojb.List.Add {}\n        instance(x: -1714, y: 1397) if_7c1d83 root.Std_k98ojb.Std.If {}\n        getat_1a4d9c.itemAtIndex -> setvalue_8e47fc.new_value\n        getat_8d4eaa.itemAtIndex -> if_3b69cc.condition\n        getat_8d4eaa.itemAtIndex -> setvalue_c4aa59.new_value\n        index_9d7c03.count -> getat_e6e8f2.index\n        index_9d7c03.count -> getat_3a9e98.index\n        0 -> getat_e6e8f2.index\n        0 -> getat_3a9e98.index\n        main_list_25f077 -> length_bce2ac.list\n        length_bce2ac.length -> getat_8b0d3c.index\n        main_list_25f077 -> getat_8b0d3c.list\n        sub_list_f9cb80 -> length_bce2ac.list\n        getat_8b0d3c.itemAtIndex -> if_2b9c96.condition\n        setvalue_8e47fc.continue -> if_2b9c96.then\n        execute_68160a -> setvalue_8e47fc.execute\n        0 -> index_9d7c03.trigger\n        execute_68160a -> index_9d7c03.trigger\n        true -> if_3b69cc.then\n        if_3b69cc.condition -> if_3b69cc.else\n        if_3b69cc.else -> if_3dc7f7.execute\n        if_3b69cc.then -> continue_d72620\n        if_3dc7f7.condition -> if_3dc7f7.else\n        if_3dc7f7.else -> add_7d3b0f.execute\n        if_3dc7f7.then -> if_7c1d83.execute\n        true -> if_7c1d83.then\n        if_7c1d83.else -> add_7d3b0f.execute\n        if_7c1d83.then -> index_9d7c03.next\n        if_7c1d83.then -> continue_d72620\n        if_7c1d83.then -> if_5d41f4.execute\n        index_9d7c03.count -> getat_1a4d9c.index\n        if_5d41f4.else -> if_3dc7f7.execute\n        if_5d41f4.then -> index_9d7c03.next\n        add_7d3b0f.listWithItem -> index_9d7c03.list\n        if_2b9c96.else -> if_5d41f4.execute\n        if_2b9c96.then -> continue_d72620\n        true -> if_2b9c96.then\n        index_9d7c03.count -> getat_3a9e98.index\n        getat_e6e8f2.itemAtIndex -> add_7d3b0f.item\n        getat_3a9e98.itemAtIndex -> add_7d3b0f.item\n        true -> if_7c1d83.then\n        if_3dc7f7.then -> if_7c1d83.execute\n        add_7d3b0f.listWithItem -> index_9d7c03.list\n        true -> if_3dc7f7.then\n        getat_1a4d9c.list -> main_list_25f077\n        getat_3a9e98.list -> sub_list_f9cb80\n        add_7d3b0f.item -> setvalue_c4aa59.index\n        index_9d7c03.reset -> if_5d41f4.execute\n        index_9d7c03.list -> setvalue_8e47fc.list\n        index_9d7c03.list -> add_7d3b0f.list\n        if_5d41f4.then -> continue_d72620\n        index_9d7c03.done -> if_5d41f4.execute\n        add_7d3b0f.continue -> if_3dc7f7.execute\n        true -> if_3b69cc.then\n        getat_e6e8f2.list -> main_list_25f077\n        add_7d3b0f.continue -> if_7c1d83.execute\n        true -> if_2b9c96.then\n        add_7d3b0f.item -> setvalue_c4aa59.new_value\n        index_9d7c03.triggered -> getat_e6e8f2.trigger\n        index_9d7c03.triggered -> getat_3a9e98.trigger\n        if_7c1d83.then -> continue_d72620\n        if_3dc7f7.then -> add_7d3b0f.execute\n        true -> if_3dc7f7.then\n        if_5d41f4.then -> continue_d72620\n        true -> if_5d41f4.then\n        if_7c1d83.then -> index_9d7c03.next\n        index_9d7c03.count -> if_5d41f4.condition\n        index_9d7c03.done -> continue_d72620\n        index_9d7c03.triggered -> if_3dc7f7.execute\n        true -> if_3b69cc.then\n        if_3dc7f7.then -> add_7d3b0f.execute\n        length_bce2ac.length -> if_5d41f4.condition\n        if_2b9c96.else -> if_5d41f4.execute\n        if_2b9c96.then -> continue_d72620\n        index_9d7c03.triggered -> if_2b9c96.execute\n        index_9d7c03.triggered -> if_7c1d83.execute\n        index_9d7c03.triggered -> if_3dc7f",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1260, y: 1084) contains_d4b1cd root.Std_k98ojb.List.Contains {}\n        instance(x: -1238, y: 1212) ifexpression_8f1d83 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: -1334, y: 1238, name: \"getter_5d8b6d\") getter_5d8b6d = previous\n        setter(x: -1200, y: 681, name: \"setter_2d52a1\") setter_2d52a1 = previous\n        instance(x: -1347, y: 974) for_5a51f0 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: 761, name: \"setter_2d52a1\") setter_a4f0a4 = previous\n        instance(x: -1886, y: 986) getat_e2b9b4 root.Std_k98ojb.List.GetAt {}\n        ifexpression_8f1d83.else -> continue_d72620\n        ifexpression_8f1d83.value -> output_ebc87c\n        ifexpression_8f1d83.then -> setter_2d52a1.execute\n        contains_d4b1cd.is_contained -> ifexpression_8f1d83.gen_0\n        main_list_25f077 -> for_5a51f0.items\n        for_5a51f0.item -> ifexpression_8f1d83.gen_2\n        for_5a51f0.index -> ifexpression_8f1d83.gen_1\n        getter_5d8b6d.value -> ifexpression_8f1d83.gen_3\n        for_5a51f0.onItem -> ifexpression_8f1d83.execute\n        for_5a51f0.done -> continue_d72620\n        for_5a51f0.item -> setter_2d52a1.new_value\n        main_list_25f077 -> getat_e2b9b4.list\n        0 -> getat_e2b9b4.index\n        getat_e2b9b4.itemAtIndex -> setter_a4f0a4.new_value\n        execute_68160a -> setter_a4f0a4.execute\n        setter_a4f0a4.continue -> for_5a51f0.reset\n        setter_2d52a1.continue -> for_5a51f0.next\n        sub_list_f9cb80 -> contains_d4b1cd.list\n        for_5a51f0.item -> contains_d4b1cd.item\n    }\n\n    \n\n    instance(x: -1277, y: 1289) is_Sub_Array_7a94ea root.main.is_Sub_Array {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1699, y: 1283, name: \"only common elements\") filter_a1d58f root.Std_k98ojb.Query.Filter {\n            where: \"it in main_list\"\n        }\n        instance(x: -1545, y: 1227) length_6c8b1c root.Std_k98ojb.List.Length {}\n        instance(x: -1424, y: 1064, name: \"check length\") equal_f5abf5 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -1554, y: 1021, name: \"all sub list elements in main list\") contains_0c2db3 root.Std_k98ojb.List.Contains {}\n        instance(x: -1651, y: 1270, name: \"check if sub list is empty\") isempty_2e9ed4 root.Std_k98ojb.List.IsEmpty {}\n        instance(x: -1657, y: 1341, name: \"not empty\") not_8f4a7c root.Std_k98ojb.Logic.Not {}\n        instance(x: -1641, y: 1106, name: \"check if sub list is not empty\") notempty_66a2d5 root.Std_k98ojb.List.NotEmpty {}\n        instance(x: -1548, y: 1385, name: \"and operator\") and_2e51cb root.Std_k98ojb.Logic.And {}\n        instance(x: -1627, y: 1401, name: \"and operator\") and_1e6b1e root.Std_k98ojb.Logic.And {}\n        instance(x: -1359, y: 1239) slice_7e9d5f root.Std_k98ojb.List.Slice {}\n        instance(x: -1210, y: 1081) length_7d52d6 root.Std_k98ojb.List.Length {}\n        instance(x: -1173, y: 1100) sub_4a0c04 root.Std_k98ojb.Math.Sub {}\n        instance(x: -1089, y: 1235) equal_5f8a94 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -1203, y: 1296) not_27d1c8 root.Std_k98ojb.Logic.Not {}\n        instance(x: -1279, y: 1223) and_ae81e9 root.Std_k98ojb.Logic.And {}\n        instance(x: -1132, y: 1378) contains_7a0e99 root.Std_k98ojb.List.Contains {}\n        contains_0c2db3.is_contained -> and_2e51cb.right\n        contains_7a2f9b0.is_contained -> and_1e6b1e.right\n        execute_68160a -> filter_a1d58f.execute\n        filter_a1d58f.result -> length_6c8b1c.list\n        length_6c8b1c.length -> equal_f5abf5.left\n        length_7d52d6.length -> sub_4a0c04.first\n        sub_4a0c04.result -> slice_7e9d5f.end\n        0 -> slice_7e9d5f.start\n        sub_list_f9cb80 -> slice_7e9d5f.list\n        length_7d52d6.list -> slice_7e9d5f.list\n        isempty_2e9ed4.isEmpty -> not_8f4a7c.input\n        not_8f4a7c.result -> notempty_66a2d5.input\n        notempty_66a2d5.isEmpty -> and_2e51cb.left\n        1 -> equal_f5abf5.right\n        sub_list_f9cb80 -> contains_0c2db3.list\n        filter_a1d58f.result -> contains_0c2db3.item\n        not_27d1c8.result -> equal_5f8a94.right\n        equal_5f8a94.left -> sub_list_f9cb80\n        length_7d52d6.list -> sub_4a0c04.second\n        slice_7e9d5f.slice -> contains_7a0e99.list\n        sub_list_f9cb80 -> contains_7a0e99.item\n        contains_7a0e99.is_contained -> and_1e6b1e.left\n        equal_5f8a94.result -> not_27d1c8.input\n        length_6c8b1c.length -> equal_5f8a94.left\n        and_2e51cb.result -> and_ae81e9.left\n        and_1e6b1e.result -> and_ae81e9.right\n        and_ae81e9.result -> output_ebc87c\n        continue_d72620 -> filter_a1d58f.continue\n        filter_a1d58f.done -> continue_d72620\n    }\n\n    \n\n    instance(x: -1811, y: 1000) is_Sub_Array_5e0f54 root.main.is_Sub_Array {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: 1169, y: 1048) length_6b1c09 root.Std_k98ojb.List.Length {}\n        instance(x: 1193, y: 1284) length_ea3c05 root.Std_k98ojb.List.Length {}\n        instance(x: 1326, y: 1094) greaterthan_d1b4c1 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1312, y: 1270) greaterthan_8d6e8e root.Std_k98ojb.Math.GreaterThan {}\n        greaterthan_d1b4c1.result -> greaterthan_8d6e8e.left\n        length_6b1c09.length -> greaterthan_d1b4c1.left\n        length_ea3c05.length -> greaterthan_8d6e8e.right\n        instance(x: 1089, y: 1057) ifexpression_8e0e3d root.Std_k98ojb.Std.IfExpression {\n            expression: \"index >= length\"\n        }\n        greaterthan_8d6e8e.result -> ifexpression_8e0e3d.gen_0\n        instance(x: 1053, y: 1048) count_16a3d8 root.Std_k98ojb.Std.Count {}\n        instance(x: 1319, y: 1055) add_d6ef5b root.Std_k98ojb.Math.Add {}\n        instance(x: 1133, y: 1192) ifexpression_9e0a6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"sub_list[index] == main_list[index + offset]\"\n        }\n        instance(x: 1150, y: 1133) getat_dfe0c2 root.Std_k98ojb.List.GetAt {}\n        instance(x: 1086, y: 1134) getat_ae9b72 root.Std_k98ojb.List.GetAt {}\n        count_16a3d8.count -> add_d6ef5b.first\n        0 -> add_d6ef5b.second\n        add_d6ef5b.result -> getat_dfe0c2.index\n        count_16a3d8.count -> getat_ae9b72.index\n        instance(x: 1102, y: 1258) getat_8c1e51 root.Std_k98ojb.List.GetAt {}\n        instance(x: 1127, y: 1265) add_1a8c6e root.Std_k98ojb.Math.Add {}\n        getat_dfe0c2.itemAtIndex -> ifexpression_9e0a6c.gen_1\n        getat_ae9b72.itemAtIndex -> ifexpression_9e0a6c.gen_0\n        count_16a3d8.count -> add_1a8c6e.first\n        getat_8c1e51.itemAtIndex -> add_1a8c6e.second\n        add_1a8c6e.result -> getat_dfe0c2.index\n        instance(x: 1091, y: 1128) ifexpression_8b7b3b root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == length\"\n        }\n        instance(x: 1064, y: 1142) count_fbfec4 root.Std_k98ojb.Std.Count {}\n        instance(x: 1053, y: 1158) add_74f35c root.Std_k98ojb.Math.Add {}\n        instance(x: 1080, y: 1195) count_6e73d3 root.Std_k98ojb.Std.Count {}\n        instance(x: 1073, y: 1181) add_7b68c4 root.Std_k98ojb.Math.Add {}\n        instance(x: 1096, y: 1173) count_7c61e8 root.Std_k98ojb.Std.Count {}\n        instance(x: 1095, y: 1199) count_d7f0b9 root.Std_k98ojb.Std.Count {}\n        instance(x: 1108, y: 1202) count_3e9db6 root.Std_k98ojb.Std.Count {}\n        instance(x: 1106, y: 1225) count_b6d9c8 root.Std_k98ojb.Std.Count {}\n        count_16a3d8.count -> ifexpression_9e0a6c.index\n        ifexpression_9e0a6c.value -> ifexpression_8b7b3b.gen_1\n        count_fbfec4.count -> add_74f35c.first\n        length_ea3c05.length -> add_74f35c.second\n        add_74f35c.result -> ifexpression_8b7b3b.gen_0\n        ifexpression_8b7b3b.value -> count_16a3d8.trigger\n        ifexpression_8b7b3b.then -> count_16a3d8.reset\n        ifexpression_8b7b3b.else -> continue_d72620\n        ifexpression_9e0a6c.then -> count_6e73d3.trigger\n        ifexpression_9e0a6c.else -> count_7c61e8.trigger\n        count_6e73d3.count -> add_7b68c4.first\n        count_7c61e8.count -> add_7b68c4.second\n        add_7b68c4.result -> count_16a3d8.trigger\n        count_7c61e8.count -> count_d7f0b9.trigger\n        count_6e73d3.count -> count_3e9db6.trigger\n        count_d7f0b9.count -> count_b6d9c8.trigger\n        count_3e9db6.count -> count_16a3d8.trigger\n        count_b6d9c8.count -> count_16a3d8.trigger\n        length_ea3c05.length -> getat_8c1e51.index\n        sub_list_f9cb80 -> getat_8c1e51.list\n        main_list_25f077 -> getat_dfe0c2.list\n        main_list_25f077 -> getat_ae9b72.list\n        ifexpression_8e0e3d.then -> count_16a3d8.next\n        ifexpression_8e0e3d.else -> count_16a3d8.reset\n        execute_68160a -> count_16a3d8.trigger\n        ifexpression_8e0e3d.index -> count_16a3d8.index\n        length_6b1c09.length -> ifexpression_8e0e3d.gen_1\n    }\n\n    \n\n    instance(x: -1944, y: 1027) is_sub_array_6e9a8d root.main.is_Sub_Array {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: -57, y: -16) for_23c8d0 root.Std_k98ojb.Std.For {}\n        instance(x: 217, y: 60) if_9fda7e root.Std_k98ojb.Std.If {}\n        instance(x: 448, y: 31) math_sub_7a9cda root.Std_k98ojb.Math.Sub {}\n        setter(x: 726, y: -251, name: \"setter_6c2b84\") setter_6c2b84 = result\n        instance(x: 1181, y: 0) not_5dbf8b root.Std_k98ojb.Logic.Not {}\n        getter(x: 1380, y: 63, name: \"getter_82d7eb\") getter_82d7eb = result\n        instance(x: 1111, y: -85) equal_ae6a2f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1307, y: -155) if_5e74b8 root.Std_k98ojb.Std.If {}\n        for_23c8d0.done -> continue_aedf0f\n        not_5dbf8b.value -> if_5e74b8.predicate\n        if_5e74b8.else -> continue_aedf0f\n        getter_82d7eb.value -> output_25655e\n        if_5e74b8.then -> setter_6c2b84.execute\n        setter_6c2b84.continue -> continue_aedf0f\n        list_24e9a6 -> for_23c8d0.items\n        execute_fa8807 -> for_23c8d0.trigger\n        0 -> math_sub_7a9cda.first\n        for_23c8d0.index -> math_sub_7a9cda.second\n        math_sub_7a9cda.result -> equal_ae6a2f.left\n        for_23c8d0.item -> equal_ae6a2f.right\n        equal_ae6a2f.result -> not_5dbf8b.value\n        for_23c8d0.onItem -> if_9fda7e.execute\n        if_9fda7e.predicate -> if_5e74b8.execute\n        if_9fda7e.then -> for_23c8d0.next\n        if_9fda7e.else -> setter_6c2b84.new_value\n    }\n\n    \n\n    instance(x: 1222, y: -35) find_First_Missing_7c4a1e root.main.find_First_Missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: 0, y: 0) for_6d5f88 root.Std_k98ojb.Std.For {}\n        instance(x: 315, y: 112) ifexpression_d6e4d3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"i == 0 || value == previous + 1\"\n        }\n        getter(x: 482, y: 179, name: \"getter_d1b2a6\") getter_d1b2a6 = previous\n        instance(x: 1051, y: -28) math_add_node root.Std_k98ojb.Math.Add {}\n        setter(x: 1318, y: -263, name: \"setter_5ab0b9\") setter_5ab0b9 = previous\n        for_6d5f88.items -> list_24e9a6\n        for_6d5f88.onItem -> ifexpression_d6e4d3.execute\n        ifexpression_d6e4d3.gen_0 -> for_6d5f88.index\n        for_6d5f88.item -> ifexpression_d6e4d3.gen_2\n        getter_d1b2a6.value -> ifexpression_d6e4d3.gen_1\n        ifexpression_d6e4d3.then -> math_add_node.execute\n        getter_d1b2a6.value -> math_add_node.first\n        1 -> math_add_node.second\n        math_add_node.result -> setter_5ab0b9.new_value\n        execute_fa8807 -> setter_5ab0b9.execute\n        for_6d5f88.done -> continue_aedf0f\n        setter_5ab0b9.continue -> for_6d5f88.next\n        ifexpression_d6e4d3.value -> output_25655e\n        ifexpression_d6e4d3.else -> continue_aedf0f\n    }\n\n    \n\n    instance(x: 1077, y: 118) find_First_Missing_a8c1ed root.main.find_First_Missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: 137, y: -51) ifexpression_1e2e4a root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        setter(x: 0, y: 0, name: \"setter_3bb4a4\") setter_3bb4a4 = index\n        getter(x: 333, y: 171, name: \"getter_6d7f4d\") getter_6d7f4d = previous\n        instance(x: 307, y: -5) for_4cf7ea root.Std_k98ojb.Std.For {}\n        setter(x: -1, y: -136, name: \"setter_3bb4a4\") setter_d1f7a6 = index\n        instance(x: -287, y: -41) getat_9f4f81 root.Std_k98ojb.List.GetAt {}\n        ifexpression_1e2e4a.else -> continue_aedf0f\n        ifexpression_1e2e4a.value -> output_25655e\n        ifexpression_1e2e4a.then -> setter_3bb4a4.execute\n        list_24e9a6 -> for_4cf7ea.items\n        for_4cf7ea.item -> ifexpression_1e2e4a.gen_2\n        for_4cf7ea.index -> ifexpression_1e2e4a.gen_0\n        getter_6d7f4d.value -> ifexpression_1e2e4a.gen_1\n        for_4cf7ea.onItem -> ifexpression_1e2e4a.execute\n        for_4cf7ea.done -> continue_aedf0f\n        for_4cf7ea.item -> setter_3bb4a4.new_value\n        list_24e9a6 -> getat_9f4f81.list\n        0 -> getat_9f4f81.index\n        getat_9f4f81.itemAtIndex -> setter_d1f7a6.new_value\n        execute_fa8807 -> setter_d1f7a6.execute\n        setter_d1f7a6.continue -> for_4cf7ea.reset\n        setter_3bb4a4.continue -> for_4cf7ea.next\n    }\n\n    \n\n    instance(x: 1055, y: 160) find_First_Missing_0cdeeb root.main.find_First_Missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: -3, y: -8) for_0e7c92 root.Std_k98ojb.Std.For {}\n        setter(x: -178, y: -289, name: \"setter_98b1f9\") setter_98b1f9 = index\n        getter(x: 1383, y: 274, name: \"getter_5f2c5a\") getter_5f2c5a = index\n        getter(x: 1059, y: -12, name: \"getter_5f2c5a\") getter_5f2c5a = index\n        instance(x: 1152, y: -76) if_3c1c61 root.Std_k98ojb.Std.If {}\n        getter_5f2c5a.value -> output_25655e\n        for_0e7c92.onItem -> if_3c1c61.execute\n        getter_5f2c5a.value -> if_3c1c61.gen_1\n        for_0e7c92.item -> if_3c1c61.gen_0\n        1 -> setter_98b1f9.new_value\n        execute_fa8807 -> setter_98b1f9.execute\n        for_0e7c92.reset -> setter_98b1f9.continue\n        if_3c1c61.then -> continue_aedf0f\n        if_3c1c61.else -> for_0e7c92.next\n        for_0e7c92.done -> continue_aedf0f\n        for_0e7c92.items -> list_24e9a6\n        for_0e7c92.index -> getter_5f2c5a.index\n        for_0e7c92.index -> setter_98b1f9.index\n    }\n\n    \n\n    instance(x: -11, y: -40) find_First_Missing_8f5efc root.main.find_First_Missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: 1336, y: 307) ifexpression_bf9c8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 538, y: 329, name: \"getter_5a0f51\") getter_5a0f51 = previous\n        setter(x: 1167, y: -356, name: \"setter_5eaa8f\") setter_5eaa8f = previous\n        instance(x: 487, y: 74, name: \"for\") for_66e4e8 root.Std_k98ojb.Std.For {}\n        setter(x: 0, y: -155, name: \"setter_5eaa8f\") setter_f6d81e = previous\n        instance(x: -219, y: -27, name: \"getAt\") getat_2e6b91 root.Std_k98ojb.List.GetAt {}\n        ifexpression_bf9c8c.else -> continue_aedf0f\n        ifexpression_bf9c8c.value -> output_25655e\n        ifexpression_bf9c8c.then -> setter_5eaa8f.execute\n        list_24e9a6 -> for_66e4e8.items\n        for_66e4e8.item -> ifexpression_bf9c8c.gen_2\n        for_66e4e8.index -> ifexpression_bf9c8c.gen_0\n        getter_5a0f51.value -> ifexpression_bf9c8c.gen_1\n        for_66e4e8.onItem -> ifexpression_bf9c8c.execute\n        for_66e4e8.done -> continue_aedf0f\n        for_66e4e8.item -> setter_5eaa8f.new_value\n        list_24e9a6 -> getat_2e6b91.list\n        0 -> getat_2e6b91.index\n        getat_2e6b91.itemAtIndex -> setter_f6d81e.new_value\n        execute_fa8807 -> setter_f6d81e.execute\n        setter_f6d81e.continue -> for_66e4e8.reset\n        setter_5eaa8f.continue -> for_66e4e8.next\n    }\n\n    \n\n    instance(x: 20, y: -18) find_First_Missing_6e9e3a root.main.find_First_Missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: -27, y: -30) for_2e2a8b root.Std_k98ojb.Std.For {}\n        instance(x: 289, y: 63) if_9ce5ca root.Std_k98ojb.Std.If {}\n        instance(x: 483, y: 71) if_8e0eb7 root.Std_k98ojb.Std.If {}\n        setter(x: 1009, y: -140, name: \"setter_3a9a02\") setter_3a9a02 = output\n        instance(x: 0, y: 0) math_expression_2d7c1d root.Std_k98ojb.Math.Expression {\n            expression: \"i + 1\"\n        }\n        list_24e9a6 -> for_2e2a8b.items\n        for_2e2a8b.onItem -> if_9ce5ca.execute\n        if_9ce5ca.then -> if_8e0eb7.execute\n        math_expression_2d7c1d.result -> if_8e0eb7.predicate\n        for_2e2a8b.index -> math_expression_2d7c1d.gen_0\n        if_8e0eb7.else -> continue_aedf0f\n        if_8e0eb7.then -> setter_3a9a02.execute\n        math_expression_2d7c1d.result -> setter_3a9a02.new_value\n        if_9ce5ca.else -> for_2e2a8b.next\n        for_2e2a8b.done -> continue_aedf0f\n        execute_fa8807 -> for_2e2a8b.trigger\n        for_2e2a8b.item -> if_9ce5ca.predicate\n        setter_3a9a02.continue -> continue_aedf0f\n        setter_3a9a02.value -> output_25655e\n    }\n\n    \n\n    instance(x: -22, y: 127) find_First_Missing_7a0f9c root.main.find_First_Missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: 1208, y: 268) for_6a8d0d root.Std_k98ojb.Std.For {}\n        instance(x: 1227, y: 39) if_1a96b8 root.Std_k98ojb.Std.If {}\n        instance(x: 1372, y: -11) math_sub_8b0d3c root.Std_k98ojb.Math.Sub {}\n        setter(x: 1025, y: -306, name: \"setter_6b6b3c\") setter_6b6b3c = missing\n        getter(x: 1402, y: 276, name: \"getter_1f8f82\") getter_1f8f82 = missing\n        instance(x: 1398, y: -57) math_floor_3f2db4 root.Std_k98ojb.Math.Floor {}\n        getter_1f8f82.value -> output_25655e\n        list_24e9a6 -> for_6a8d0d.items\n        for_6a8d0d.done -> continue_aedf0f\n        1 -> setter_6b6b3c.new_value\n        execute_fa8807 -> setter_6b6b3c.execute\n        setter_6b6b3c.continue -> for_6a8d0d.reset\n        for_6a8d0d.onItem -> if_1a96b8.execute\n        for_6a8d0d.index -> math_sub_8b0d3c.first\n        for_6a8d0d.item -> math_sub_8b0d3c.second\n        1 -> math_floor_3f2db4.input\n        math_sub_8b0d3c.result -> math_floor_3f2db4.input\n        math_floor_3f2db4.result -> if_1a96b8.predicate\n        if_1a96b8.else -> for_6a8d0d.next\n        if_1a96b8.then -> setter_6b6b3c.execute\n        math_floor_3f2db4.result -> setter_6b6b3c.new_value\n        setter_6b6b3c.continue -> for_6a8d0d.next\n    }\n\n    \n\n    instance(x: 1017, y: 1032) find_First_Missing_f8cf51 root.main.find_First_Missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: 0, y: 0) for_2f8a3d root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) if_46a6d6 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) ifexpression_4d8f1d root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        instance(x: 0, y: 0) setter_5a04dc root.Std_k98ojb.Set {\n            key: \"current\"\n        }\n        getter(x: 0, y: 0, name: \"getter_9c2d52\") getter_9c2d52 = previous\n        setter(x: 0, y: 0, name: \"setter_5a04dc\") setter_5a04dc = previous\n        list_24e9a6 -> for_2f8a3d.items\n        for_2f8a3d.onItem -> if_46a6d6.execute\n        for_2f8a3d.item -> if_46a6d6.input\n        getter_9c2d52.value -> if_46a6d6.condition\n        for_2f8a3d.index -> ifexpression_4d8f1d.gen_0\n        for_2f8a3d.item -> ifexpression_4d8f1d.gen_2\n        getter_9c2d52.value -> ifexpression_4d8f1d.gen_1\n        if_46a6d6.else -> continue_aedf0f\n        if_46a6d6.then -> ifexpression_4d8f1d.execute\n        ifexpression_4d8f1d.else -> setter_5a04dc.execute\n        for_2f8a3d.item -> setter_5a04dc.new_value\n        ifexpression_4d8f1d.then -> for_2f8a3d.next\n        setter_5a04dc.continue -> continue_aedf0f\n        ifexpression_4d8f1d.value -> output_25655e\n        for_2f8a3d.done -> continue_aedf0f\n        execute_fa8807 -> setter_5a04dc.execute\n    }\n\n    \n\n    instance(x: 1039, y: -64) find_First_Missing_57dc7f root.main.find_First_Missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: 1009, y: 170) for_21d4c0 root.Std_k98ojb.Std.For {}\n        instance(x: 1340, y: 36) if_18b9d6 root.Std_k98ojb.Std.If {}\n        getter(x: 1500, y: 270, name: \"getter_7b8d74\") getter_7b8d74 = number\n        setter(x: 1150, y: -262, name: \"setter_1b4dd9\") setter_1b4dd9 = number\n        setter(x: 1155, y: -31, name: \"setter_9f5e5d\") setter_9f5e5d = number\n        for_21d4c0.item -> if_18b9d6.predicate\n        1 -> setter_1b4dd9.new_value\n        0 -> setter_9f5e5d.new_value\n        execute_fa8807 -> setter_1b4dd9.execute\n        getter_7b8d74.value -> output_25655e\n        for_21d4c0.done -> continue_aedf0f\n        for_21d4c0.onItem -> if_18b9d6.execute\n        setter_1b4dd9.continue -> for_21d4c0.reset\n        if_18b9d6.else -> setter_9f5e5d.execute\n        if_18b9d6.then -> setter_9f5e5d.execute\n        setter_1b4dd9.continue -> for_21d4c0.next\n        setter_9f5e5d.continue -> for_21d4c0.next\n        for_21d4c0.index -> setter_9f5e5d.new_value\n        for_21d4c0.items -> list_24e9a6\n    }\n\n    \n\n    instance(x: 1023, y: -14) find_First_Missing_8d3a7b root.main.find_First_Missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: 0, y: 0) for_1ad3a9 root.Std_k98ojb.Std.For {}\n        getter(x: 1121, y: 328, name: \"getter_1c6e55\") getter_1c6e55 = index\n        setter(x: 1438, y: -0, name: \"setter_3b44d4\") setter_3b44d4 = output\n        setter(x: 1465, y: -168, name: \"setter_e2d2f3\") setter_e2d2f3 = index\n        instance(x: 1252, y: -13) if_e5c0b2 root.Std_k98ojb.Std.If {}\n        instance(x: 1098, y: -74) expression_b0e1cc root.Std_k98ojb.Math.Expression {\n            expression: \"current != index + 1\"\n        }\n        instance(x: 1046, y: 50) math_floor_node root.Std_k98ojb.Math.Floor {}\n        setter_3b44d4.execute -> for_1ad3a9.reset\n        list_24e9a6 -> for_1ad3a9.items\n        execute_fa8807 -> setter_3b44d4.execute\n        1 -> math_floor_node.value\n        math_floor_node.result -> setter_3b44d4.new_value\n        for_1ad3a9.done -> continue_aedf0f\n        expression_b0e1cc.value -> if_e5c0b2.predicate\n        for_1ad3a9.onItem -> if_e5c0b2.execute\n        for_1ad3a9.index -> expression_b0e1cc.gen_0\n        getter_1c6e55.value -> expression_b0e1cc.gen_1\n        for_1ad3a9.item -> expression_b0e1cc.gen_2\n        if_e5c0b2.then -> setter_3b44d4.execute\n        for_1ad3a9.index -> setter_3b44d4.new_value\n        setter_3b44d4.continue -> continue_aedf0f\n        getter_1c6e55.value -> output_25655e\n        if_e5c0b2.else -> for_1ad3a9.next\n        for_1ad3a9.index -> setter_e2d2f3.new_value\n        setter_e2d2f3.continue -> for_1ad3a9.next\n    }\n    \n\n    instance(x: 1381, y: -27) find_First_Missing_7b1ab9 root.main.find_First_Missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: -1) replace_d1f5f2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_c3c6b7 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_f8d1f8 root.Std_k98ojb.Strings.Replace {}\n        replace_d1f5f2.output -> replace_c3c6b7.input\n        replace_c3c6b7.output -> replace_f8d1f8.input\n        replace_f8d1f8.output -> output_0\n        input_0 -> replace_d1f5f2.input\n        \" \" -> replace_d1f5f2.search\n        \":\" -> replace_d1f5f2.replace\n        \",\" -> replace_c3c6b7.search\n        \":\" -> replace_c3c6b7.replace\n        \".\" -> replace_f8d1f8.search\n        \":\" -> replace_f8d1f8.replace\n    }\n\n    \n\n    instance(x: 102, y: 47) replace_specialchar_3f1a81 root.main.replace_specialchar {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: -1) replace_10d5a6 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 1, y: 1) replace_d5f4b6 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 10, y: 0) replace_a6f7b6 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_10d5a6.input\n        \" \" -> replace_10d5a6.search\n        \":\" -> replace_10d5a6.replace\n        replace_10d5a6.output -> replace_d5f4b6.input\n        \",\" -> replace_d5f4b6.search\n        \":\" -> replace_d5f4b6.replace\n        replace_d5f4b6.output -> replace_a6f7b6.input\n        \".\" -> replace_a6f7b6.search\n        \":\" -> replace_a6f7b6.replace\n        replace_a6f7b6.output -> output_0\n    }\n\n    \n\n    instance(x: 103, y: 11, name: \"replace_specialchar\") replace_specialchar_c5f2a2 root.main.replace_specialchar {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) replace_1e62e9 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 220, y: 0) replace_1e62e9_3a66f5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_1e62e9_1b6d0e root.Std_k98ojb.Strings.Replace {}\n        replace_1e62e9_3a66f5.input -> replace_1e62e9_1b6d0e.input\n        replace_1e62e9_1b6d0e.output -> replace_1e62e9.input\n        replace_1e62e9.output -> output_0\n        replace_1e62e9.input -> replace_1e62e9_3a66f5.input\n        input_0 -> replace_1e62e9_3a66f5.input\n        \" \" -> replace_1e62e9.replace\n        \":\" -> replace_1e62e9.replaceWith\n        \",\" -> replace_1e62e9_3a66f5.replace\n        \":\" -> replace_1e62e9_3a66f5.replaceWith\n        \".\" -> replace_1e62e9_1b6d0e.replace\n        \":\" -> replace_1e62e9_1b6d0e.replaceWith\n   }\n    \n\n    instance(x: -11, y: 37, name: \"replace_specialchar\") replace_specialchar_e0a08b root.main.replace_specialchar {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_7d1a03 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: -3) replace_f6e5a5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: -5) replace_a9ad8c root.Std_k98ojb.Strings.Replace {}\n        replace_7d1a03.output -> replace_f6e5a5.input\n        replace_f6e5a5.output -> replace_a9ad8c.input\n        input_0 -> replace_7d1a03.input\n        replace_7d1a03.search -> replace_7d1a03.search\n        \" \" -> replace_7d1a03.replace\n        replace_f6e5a5.search -> replace_f6e5a5.search\n        \",\" -> replace_f6e5a5.replace\n        replace_a9ad8c.search -> replace_a9ad8c.search\n        \".\" -> replace_a9ad8c.replace\n        replace_a9ad8c.output -> output_0\n    }\n\n    \n\n    instance(x: 104, y: -5) replace_specialchar_daf2bf root.main.replace_specialchar {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n        instance(x: 10, y: 0) replace_e0a5bc root.Std_k98ojb.Strings.Replace {}\n        instance(x: 270, y: 0) replace_1b1d41 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_8e0f87 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 810, y: 0) replace_0d72d4 root.Std_k98ojb.Strings.Replace {}\n        replace_e0a5bc.input -> replace_1b1d41.input\n        replace_1b1d41.input -> replace_8e0f87.input\n        replace_8e0f87.input -> replace_0d72d4.input\n        replace_0d72d4.input -> output_0\n        input_0 -> replace_e0a5bc.input\n        \" \" -> replace_e0a5bc.search\n        \":\" -> replace_e0a5bc.replace\n        \",\" -> replace_1b1d41.search\n        \":\" -> replace_1b1d41.replace\n        \".\" -> replace_8e0f87.search\n        \":\" -> replace_8e0f87.replace\n        \"\\n\" -> replace_0d72d4.search\n        \":\" -> replace_0d72d4.replace\n    }\n\n    \n\n    instance(x: 98, y: 12, name: \"replace_specialchar\") replace_specialchar_a2d67b root.main.replace_specialchar {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) replace_7f2e4e root.Std_k98ojb.Strings.Replace {}\n        replace_7f2e4e.search -> data_0_1\n        \":\" -> replace_7f2e4e.replace\n        input_0 -> replace_7f2e4e.input\n        replace_7f2e4e.output -> output_0\n    }\n\n    instance(x: 6, y: 6) data_0_1  data_0_1  { value: \", . \" }\n\n    \n\n    instance(x: 84, y: -33, name: \"replace_specialchar\") replace_specialchar_ae9c79 root.main.replace_specialchar {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_5e83f1 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 275, y: 0) replace_8ef9e7 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 542, y: 0) replace_ae5a9f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5e83f1.input\n        \" \" -> replace_5e83f1.search\n        \":\" -> replace_5e83f1.replace\n        replace_5e83f1.output -> replace_8ef9e7.input\n        \",\" -> replace_8ef9e7.search\n        \":\" -> replace_8ef9e7.replace\n        replace_8ef9e7.output -> replace_ae5a9f.input\n        \".\" -> replace_ae5a9f.search\n        \":\" -> replace_ae5a9f.replace\n        replace_ae5a9f.output -> output_0\n    }\n\n    \n\n    instance(x: 77, y: 46) ReplaceSpecialChar_f8b4b3 root.main.replace_specialchar {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 2) replace_fbd0d7 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 282, y: 0) replace_4a7fa3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 544, y: 0) replace_d1c5ef root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_fbd0d7.input\n        \" \" -> replace_fbd0d7.search\n        \":\" -> replace_fbd0d7.replace\n        replace_fbd0d7.output -> replace_4a7fa3.input\n        \",\" -> replace_4a7fa3.search\n        \":\" -> replace_4a7fa3.replace\n        replace_4a7fa3.output -> replace_d1c5ef.input\n        \".\" -> replace_d1c5ef.search\n        \":\" -> replace_d1c5ef.replace\n        replace_d1c5ef.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_specialchar_f0e53e root.main.replace_specialchar {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_6f0f8d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 261, y: 1) replace_8e7c4d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 512, y: 1) replace_ea8b96 root.Std_k98ojb.Strings.Replace {}\n        replace_6f0f8d.output -> replace_8e7c4d.input\n        replace_8e7c4d.output -> replace_ea8b96.input\n        input_0 -> replace_6f0f8d.input\n        \" \" -> replace_6f0f8d.search\n        \":\" -> replace_6f0f8d.replace\n        \",\" -> replace_8e7c4d.search\n        \":\" -> replace_8e7c4d.replace\n        \".\" -> replace_ea8b96.search\n        \":\" -> replace_ea8b96.replace\n        replace_ea8b96.output -> output_0\n    }\n\n    \n\n    instance(x: 101, y: 0) replace_specialchar_1a2eb4 root.main.replace_specialchar {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) replace_4b9a6a root.Std_k98ojb.Strings.Replace {}\n        \" \" -> replace_4b9a6a.search\n        \":\" -> replace_4b9a6a.replace\n        input_0 -> replace_4b9a6a.input\n        instance(x: 0, y: -2) replace_4b9a6b root.Std_k98ojb.Strings.Replace {}\n        \",\" -> replace_4b9a6b.search\n        \":\" -> replace_4b9a6b.replace\n        replace_4b9a6a.output -> replace_4b9a6b.input\n        instance(x: 0, y: -4) replace_4b9a6c root.Std_k98ojb.Strings.Replace {}\n        \".\" -> replace_4b9a6c.search\n        \":\" -> replace_4b9a6c.replace\n        replace_4b9a6b.output -> replace_4b9a6c.input\n        replace_4b9a6c.output -> output_0\n    }\n\n    \n\n    instance(x: 121, y: -4, name: \"replace_specialchar\") replace_specialchar_1a9d3c root.main.replace_specialchar {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -708, y: 124, name: \"characters\") characters_9c8d0a root.Std_k98ojb.Strings.Characters {}\n        instance(x: -513, y: 126) filter_6d8eb9 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -306, y: 121) count_f9cda9 root.Std_k98ojb.Std.Count {}\n        instance(x: 36, y: 118, name: \"first character\") firstitem_ea9d3e root.Std_k98ojb.List.FirstItem {}\n        instance(x: 245, y: 118) if_8eb5f9 root.Std_k98ojb.Std.If {}\n        instance(x: 443, y: 118) ifexpression_82d7eb root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == firstChar\"\n        }\n        instance(x: 540, y: 117) not_2a7e6d root.Std_k98ojb.Logic.Not {}\n        instance(x: 710, y: 118, name: \"get index\") getat_3cfa95 root.Std_k98ojb.List.GetAt {}\n        instance(x: 893, y: 117) expression_ea9f7f root.Std_k98ojb.Math.Expression {\n            expression: \"current == firstChar\"\n        }\n        instance(x: 997, y: 117) and_97a9b2 root.Std_k98ojb.Logic.And {}\n        instance(x: 1084, y: 118) getat_8fa4d6 root.Std_k98ojb.List.GetAt {}\n        instance(x: 1267, y: 118) expression_1b2d08 root.Std_k98ojb.Math.Expression {\n            expression: \"index == 0 || current == firstChar\"\n        }\n        instance(x: 1371, y: 117) and_9bbd62 root.Std_k98ojb.Logic.And {}\n        instance(x: 1426, y: 117) expression_4dc7bd root.Std_k98ojb.Math.Expression {\n            expression: \"index == 0 || current == firstChar\"\n        }\n        string_db4ddf -> characters_9c8d0a.input\n        characters_9c8d0a.characters -> filter_6d8eb9.items\n        func() {\n            in(x: -46, y: -28, name: \"current\") property(String) current_5ce6f7\n\n            out(x: 386, y: -8, name: \"bool\") property(Bool) bool_5eb1e6\n\n            instance(x: 178, y: -17) tolower_9e7a1f root.Std_k98ojb.Strings.ToLower {}\n            instance(x: 378, y: -14) expression_ba81dd root.Std_k98ojb.Math.Expression {\n                expression: \"current == firstChar\"\n            }\n            tolower_9e7a1f.output -> expression_ba81dd.gen_0\n            current_5ce6f7 -> expression_ba81dd.gen_0\n            current_5ce6f7 -> tolower_9e7a1f.input\n            expression_ba81dd.result -> bool_5eb1e6\n        } -> filter_6d8eb9.handler\n        filter_6d8eb9.output_list -> count_f9cda9.items\n        count_f9cda9.count -> firstitem_ea9d3e.list\n        firstitem_ea9d3e.item -> if_8eb5f9.predicate\n        count_f9cda9.count -> getat_3cfa95.list\n        0 -> getat_3cfa95.index\n        getat_3cfa95.itemAtIndex -> if_8eb5f9.gen_1\n        characters_9c8d0a.characters -> getat_3cfa95.list\n        firstitem_ea9d3e.item -> if_8eb5f9.gen_0\n        0 -> count_f9cda9.index\n        if_8eb5f9.then -> getat_8fa4d6.execute\n        if_8eb5f9.else -> continue_67430e\n        count_f9cda9.count -> getat_8fa4d6.list\n        getat_3cfa95.itemAtIndex -> getat_8fa4d6.index\n        count_f9cda9.count -> expression_ea9f7f.gen_0\n        getat_8fa4d6.itemAtIndex -> expression_ea9f7f.gen_1\n        expression_ea9f7f.result -> and_97a9b2.left\n        if_8eb5f9.value -> and_97a9b2.right\n        and_97a9b2.result -> ifexpression_82d7eb.gen_2\n        and_97a9b2.result -> ifexpression_82d7eb.gen_1\n        0 -> getat_3cfa95.index\n        count_f9cda9.count -> expression_1b2d08.gen_0\n        getat_8fa4d6.itemAtIndex -> expression_1b2d08.gen_1\n        expression_1b2d08.result -> and_9bbd62.left\n        ifexpression_82d7eb.result -> and_9bbd62.right\n        and_9bbd62.result -> ifexpression_82d7eb.gen_0\n        count_f9cda9.count -> expression_4dc7bd.gen_0\n        getat_8fa4d6.itemAtIndex -> expression_4dc7bd.gen_1\n        expression_4dc7bd.result -> if_8eb5f9.value\n        count_f9cda9.reset -> execute_f1c7e0\n        ifexpression_82d7eb.value -> output_e9fa68\n        not_2a9e1f.input -> ifexpression_82d7eb.execute\n        ifexpression_82d7eb.value -> not_2a7e6d.input\n        not_2a7e6d.result -> continue_67430e\n        count_f9cda9.next -> getat_8fa4d6.next\n        ifexpression_82d7eb.else -> getat_8fa4d6.reset\n    }\n\n    \n\n    instance(x: -104, y: -16) all_Characters_Same_7b6a67 root.main.all_Characters_Same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -662, y: 205, name: \"unique Characters\") filter_d6f7e1 root.Std_k98ojb.Query.Filter {\n            where: \"true\"\n        }\n        instance(x: -662, y: 361, name: \"length of unique characters\") length_a9f3f4 root.Std_k98ojb.List.Length {}\n        instance(x: -442, y: 239, name: \"length of string\") length_f5eb44 root.Std_k98ojb.List.Length {}\n        instance(x: 6, y: 261) equal_ea2b6c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 278, y: 251) ifexpression_a0bf67 root.Std_k98ojb.Std.IfExpression {\n            expression: \"true\"\n        }\n        filter_d6f7e1.result -> length_a9f3f4.list\n        string_db4ddf -> filter_d6f7e1.list\n        length_a9f3f4.length -> ifexpression_a0bf67.gen_0\n        1 -> ifexpression_a0bf67.gen_1\n        length_f5eb44.length -> equal_ea2b6c.left\n        length_a9f3f4.length -> equal_ea2b6c.right\n        equal_ea2b6c.result -> output_e9fa68\n        string_db4ddf -> length_f5eb44.list\n        ifexpression_a0bf67.else -> continue_67430e\n        ifexpression_a0bf67.value -> output_e9fa68\n        ifexpression_a0bf67.then -> continue_67430e\n        execute_f1c7e0 -> ifexpression_a0bf67.execute\n    }\n\n    \n\n    instance(x: -731, y: 11) all_Characters_Same_5a2df1 root.main.all_Characters_Same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -709, y: 193, name: \"string list\") characters_3c0d22 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -523, y: 196) empty_fbd3bc root.Std_k98ojb.List.Empty {}\n        instance(x: -502, y: 119) for_9e43d1 root.Std_k98ojb.Std.For {}\n        instance(x: 13, y: 121) if_0a6d97 root.Std_k98ojb.Std.If {}\n        instance(x: 210, y: 124) not_8b5f8d root.Std_k98ojb.Logic.Not {}\n        instance(x: 390, y: 126) equal_6f6a32 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 549, y: 128) getat_0ff5df root.Std_k98ojb.List.GetAt {}\n        instance(x: 695, y: 120) not_7a7b3e root.Std_k98ojb.Logic.Not {}\n        instance(x: 873, y: 124) getat_4e92bf root.Std_k98ojb.List.GetAt {}\n        getter(x: 276, y: 245, name: \"getter_7e82b9\") getter_7e82b9 = _element\n        setter(x: 487, y: -257, name: \"setter_f9b8e6\") setter_f9b8e6 = _element\n        instance(x: 1119, y: 120) if_01c42d root.Std_k98ojb.Std.If {}\n        instance(x: 1215, y: 124) notequal_2a9c2d root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 1372, y: 124) not_2ebe01 root.Std_k98ojb.Logic.Not {}\n        empty_fbd3bc.list -> if_0a6d97.predicate\n        if_0a6d97.then -> continue_67430e\n        for_9e43d1.items -> getat_0ff5df.list\n        getat_0ff5df.itemAtIndex -> equal_6f6a32.left\n        0 -> equal_6f6a32.right\n        equal_6f6a32.result -> not_8b5f8d.input\n        not_8b5f8d.result -> if_01c42d.predicate\n        if_01c42d.then -> not_2ebe01.execute\n        if_0a6d97.else -> for_9e43d1.reset\n        if_0a6d97.else -> for_9e43d1.next\n        for_9e43d1.item -> getter_7e82b9.value\n        for_9e43d1.index -> getat_4e92bf.index\n        getter_7e82b9.value -> getat_4e92bf.itemAtIndex\n        for_9e43d1.onItem -> if_01c42d.execute\n        for_9e43d1.onItem -> notequal_2a9c2d.left\n        for_9e43d1.index -> notequal_2a9c2d.right\n        0 -> notequal_2a9c2d.left\n        string_db4ddf -> characters_3c0d22.input\n        not_7a7b3e.result -> not_2ebe01.input\n        not_2ebe01.result -> continue_67430e\n        if_01c42d.then -> continue_67430e\n        for_9e43d1.done -> continue_67430e\n        execute_f1c7e0 -> getter_7e82b9.execute\n        getter_7e82b9.continue -> setter_f9b8e6.execute\n        notequal_2a9c2d.result -> setter_f9b8e6.new_value\n        getter_7e82b9.value -> for_9e43d1.item\n        setter_f9b8e6.continue -> for_9e43d1.next\n        not_2ebe01.result -> output_e9fa68\n    }\n\n    \n\n    instance(x: -787, y: -4) all_Characters_Same_8e7ba7 root.main.all_Characters_Same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: 4, y: 189, name: \"List of characters\") characters_a7c92a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 201, y: 121) ifexpression_98b6f9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == previous\"\n        }\n        getter(x: 115, y: 270, name: \"getter_1e1b7d\") getter_1e1b7d = previous\n        setter(x: 350, y: -7, name: \"setter_e9f5b3\") setter_e9f5b3 = previous\n        instance(x: -722, y: 24) for_6a4d8e root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: 81, name: \"setter_e9f5b3\") setter_6d2f8f = previous\n        instance(x: -835, y: 95) getat_c7d5ea root.Std_k98ojb.List.GetAt {}\n        ifexpression_98b6f9.else -> continue_67430e\n        ifexpression_98b6f9.value -> output_e9fa68\n        ifexpression_98b6f9.then -> setter_e9f5b3.execute\n        characters_a7c92a.characters -> for_6a4d8e.items\n        for_6a4d8e.item -> ifexpression_98b6f9.gen_2\n        for_6a4d8e.index -> ifexpression_98b6f9.gen_0\n        getter_1e1b7d.value -> ifexpression_98b6f9.gen_1\n        for_6a4d8e.onItem -> ifexpression_98b6f9.execute\n        for_6a4d8e.done -> continue_67430e\n        for_6a4d8e.item -> setter_e9f5b3.new_value\n        characters_a7c92a.characters -> getat_c7d5ea.list\n        0 -> getat_c7d5ea.index\n        getat_c7d5ea.itemAtIndex -> setter_6d2f8f.new_value\n        execute_f1c7e0 -> setter_6d2f8f.execute\n        setter_6d2f8f.continue -> for_6a4d8e.reset\n        setter_e9f5b3.continue -> for_6a4d8e.next\n        string_db4ddf -> characters_a7c92a.input\n    }\n\n    \n\n    instance(x: -102, y: 43) all_Characters_Same_a4a88a root.main.all_Characters_Same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -702, y: 189) characters_8e8f5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: -451, y: 208) for_1d7d1d root.Std_k98ojb.Std.For {}\n        instance(x: 101, y: 239) equal_3b7c4d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 346, y: 243) ifexpression_5c2f92 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        instance(x: 0, y: 132) getat_2e3b0f root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: -93) setat_5b0a4e root.Std_k98ojb.List.SetAt {}\n        getter(x: -280, y: 276, name: \"getter_87e1c1\") getter_87e1c1 = previous\n        setter(x: 335, y: -98, name: \"setter_8aaef6\") setter_8aaef6 = previous\n        ifexpression_5c2f92.then -> continue_67430e\n        ifexpression_5c2f92.else -> setter_8aaef6.execute\n        ifexpression_5c2f92.value -> output_e9fa68\n        characters_8e8f5f.characters -> for_1d7d1d.items\n        for_1d7d1d.item -> ifexpression_5c2f92.gen_2\n        for_1d7d1d.index -> ifexpression_5c2f92.gen_0\n        getter_87e1c1.value -> ifexpression_5c2f92.gen_1\n        for_1d7d1d.onItem -> ifexpression_5c2f92.execute\n        for_1d7d1d.done -> continue_67430e\n        for_1d7d1d.item -> setter_8aaef6.new_value\n        characters_8e8f5f.characters -> getat_2e3b0f.list\n        0 -> getat_2e3b0f.index\n        getat_2e3b0f.itemAtIndex -> setat_5b0a4e.new_value\n        execute_f1c7e0 -> setat_5b0a4e.execute\n        setat_5b0a4e.continue -> for_1d7d1d.reset\n        setter_8aaef6.continue -> for_1d7d1d.next\n        characters_8e8f5f.characters -> equal_3b7c4d.left\n        getat_2e3b0f.itemAtIndex -> equal_3b7c4d.right\n        equal_3b7c4d.result -> setat_5b0a4e.at\n    }\n\n    \n\n    instance(x: -747, y: -3) all_Characters_Same_d3e9c2 root.main.all_Characters_Same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -686, y: 181, name: \"characters\") characters_2e2a8b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -427, y: 172) for_3dca6c root.Std_k98ojb.Std.For {}\n        instance(x: 121, y: 242) equal_f0ebd3 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -22, y: 247) if_a6b3e2 root.Std_k98ojb.Std.If {}\n        instance(x: 274, y: 272) not_2dd7f8 root.Std_k98ojb.Logic.Not {}\n        instance(x: 486, y: 247) if_3f2f9c root.Std_k98ojb.Std.If {}\n        instance(x: 666, y: 273) if_5faae3 root.Std_k98ojb.Std.If {}\n        instance(x: 841, y: 247) getat_5a2a07 root.Std_k98ojb.List.GetAt {}\n        instance(x: 1055, y: 244) getat_eb9f4c root.Std_k98ojb.List.GetAt {}\n        characters_2e2a8b.output_characters -> for_3dca6c.items\n        for_3dca6c.item -> equal_f0ebd3.right\n        0 -> equal_f0ebd3.left\n        equal_f0ebd3.result -> if_a6b3e2.predicate\n        for_3dca6c.onItem -> if_a6b3e2.execute\n        if_a6b3e2.else -> continue_67430e\n        if_a6b3e2.then -> getat_5a2a07.execute\n        for_3dca6c.index -> getat_5a2a07.index\n        characters_2e2a8b.output_characters -> getat_5a2a07.list\n        getat_5a2a07.itemAtIndex -> equal_f0ebd3.left\n        if_a6b3e2.value -> if_3f2f9c.predicate\n        if_a6b3e2.value -> not_2dd7f8.input\n        not_2dd7f8.result -> if_5faae3.predicate\n        if_3f2f9c.then -> getat_eb9f4c.execute\n        if_3f2f9c.else -> if_5faae3.execute\n        for_3dca6c.index -> getat_eb9f4c.index\n        characters_2e2a8b.output_characters -> getat_eb9f4c.list\n        getat_eb9f4c.itemAtIndex -> equal_f0ebd3.right\n        if_5faae3.then -> continue_67430e\n        if_5faae3.else -> for_3dca6c.next\n        execute_f1c7e0 -> getat_5a2a07.execute\n        if_3f2f9c.value -> output_e9fa68\n        for_3dca6c.done -> continue_67430e\n    }\n\n    \n\n    instance(x: 10, y: 30) all_Characters_Same_2e5edf root.main.all_Characters_Same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: 109, y: 233) firstitem_85e5cc root.Std_k98ojb.List.FirstItem {}\n        instance(x: 115, y: 81) for_e9d1cd root.Std_k98ojb.Std.For {}\n        instance(x: 554, y: 248) getat_1e1b34 root.Std_k98ojb.List.GetAt {}\n        instance(x: 565, y: 125) equal_c2b9a9 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1033, y: 265) if_f7f6c8 root.Std_k98ojb.Std.If {}\n        instance(x: 1241, y: 129) if_3efebd root.Std_k98ojb.Std.If {}\n        string_db4ddf -> firstitem_85e5cc.list\n        firstitem_85e5cc.item -> getat_1e1b34.list\n        getat_1e1b34.itemAtIndex -> equal_c2b9a9.left\n        firstitem_85e5cc.item -> equal_c2b9a9.right\n        string_db4ddf -> for_e9d1cd.items\n        equal_c2b9a9.result -> if_f7f6c8.predicate\n        for_e9d1cd.index -> getat_1e1b34.index\n        for_e9d1cd.onItem -> if_f7f6c8.execute\n        execute_f1c7e0 -> if_f7f6c8.execute\n        if_f7f6c8.else -> continue_67430e\n        for_e9d1cd.done -> continue_67430e\n        if_f7f6c8.then -> for_e9d1cd.next\n        if_f7f6c8.value -> if_3efebd.predicate\n        if_3efebd.else -> continue_67430e\n        if_3efebd.then -> continue_67430e\n        if_f7f6c8.value -> output_e9fa68\n    }\n\n    \n\n    instance(x: -114, y: 4) all_Characters_Same_6e6b7b root.main.all_Characters_Same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -668, y: 162, name: \"only even indexes\") filter_f8a3d9 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -409, y: 183) isnumeric_1a4a52 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: -404, y: 78, name: \"only odd indexes\") filter_9c03d2 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1022, y: 253) if_5b4e8a root.Std_k98ojb.Std.If {}\n        instance(x: 1058, y: 156) contains_4ab0c6 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 1176, y: 255) and_2f0e53 root.Std_k98ojb.Logic.And {}\n        instance(x: 1232, y: 78) if_5fc8f2 root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -53, y: -16, name: \"current\") property(Number) current_f4a6a4\n\n            out(x: 687, y: 8, name: \"output\") property(Bool) output_3dcfb2\n\n            instance(x: 171, y: -10) modulo_81b7a5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 402, y: -12) notequal_eb4b6a root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_eb4b6a.right\n            modulo_81b7a5.result -> notequal_eb4b6a.left\n            current_f4a6a4 -> modulo_81b7a5.value\n            2 -> modulo_81b7a5.divisor\n            notequal_eb4b6a.result -> output_3dcfb2\n        } -> filter_f8a3d9.handler\n        func() {\n            in(x: -45, y: 14, name: \"current\") property(String) current_e2f0a6\n\n            out(x: 672, y: 31, name: \"output\") property(Bool) output_e9b8a1\n\n            instance(x: 174, y: 28) isnumeric_86c8e0 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_86c8e0.result -> output_e9b8a1\n            current_e2f0a6 -> isnumeric_86c8e0.input\n        } -> filter_9c03d2.handler\n        string_db4ddf -> filter_f8a3d9.items\n        filter_f8a3d9.output_list -> isnumeric_1a4a52.input\n        isnumeric_1a4a52.result -> if_5b4e8a.predicate\n        string_db4ddf -> filter_9c03d2.items\n        filter_9c03d2.output_list -> if_5fc8f2.predicate\n        if_5b4e8a.then -> continue_67430e\n        if_5b4e8a.else -> if_5fc8f2.execute\n        filter_9c03d2.output_list -> contains_4ab0c6.input\n        filter_f8a3d9.output_list -> contains_4ab0c6.contains\n        contains_4ab0c6.result -> and_2f0e53.left\n        if_5fc8f2.then -> continue_67430e\n        if_5fc8f2.else -> and_2f0e53.right\n        and_2f0e53.result -> output_e9fa68\n        execute_f1c7e0 -> if_5b4e8a.execute\n    }\n\n    \n\n    instance(x: -1071, y: -31, name: \"all_same\") all_same_6a4b7a root.main.all_Characters_Same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -664, y: 198, name: \"get characters\") characters_21d37c root.Std_k98ojb.Strings.Characters {}\n        instance(x: -429, y: 202, name: \"get first character\") first_3d0f8e root.Std_k98ojb.List.FirstItem {}\n        instance(x: -198, y: 222, name: \"get item\") getat_7a3c59 root.Std_k98ojb.List.GetAt {}\n        instance(x: -18, y: 220) equal_7d4eac root.Std_k98ojb.Logic.Equal {}\n        instance(x: 230, y: 215, name: \"for loop\") for_a0e9db root.Std_k98ojb.Std.For {}\n        instance(x: 542, y: 252, name: \"if\") if_0f1a8f root.Std_k98ojb.Std.If {}\n        getter(x: -103, y: 298, name: \"getter_4d4e54\") getter_4d4e54 = continue\n        setter(x: 418, y: 263, name: \"setter_4d4e54\") setter_4d4e54 = continue\n        getter(x: -103, y: 347, name: \"getter_f1d97b\") getter_f1d97b = continue\n        setter(x: 420, y: 325, name: \"setter_f1d97b\") setter_f1d97b = continue\n        getter(x: -96, y: 424, name: \"getter_c1ee02\") getter_c1ee02 = execute\n        setter(x: 420, y: 398, name: \"setter_c1ee02\") setter_c1ee02 = execute\n        string_db4ddf -> characters_21d37c.input\n        characters_21d37c.characters -> getat_7a3c59.list\n        0 -> getat_7a3c59.index\n        getat_7a3c59.itemAtIndex -> first_3d0f8e.list\n        0 -> for_a0e9db.index\n        for_a0e9db.item -> getat_7a3c59.index\n        characters_21d37c.characters -> for_a0e9db.items\n        equal_7d4eac.left -> if_0f1a8f.predicate\n        equal_7d4eac.result -> output_e9fa68\n        first_3d0f8e.item -> equal_7d4eac.right\n        getat_7a3c59.itemAtIndex -> equal_7d4eac.left\n        for_a0e9db.onItem -> equal_7d4eac.execute\n        for_a0e9db.onItem -> if_0f1a8f.execute\n        getter_4d4e54.value -> if_0f1a8f.else\n        getter_f1d97b.value -> for_a0e9db.next\n        getter_c1ee02.value -> for_a0e9db.reset\n        if_0f1a8f.then -> getter_f1d97b.execute\n        if_0f1a8f.else -> getter_4d4e54.execute\n        if_0f1a8f.then -> setter_4d4e54.execute\n        setter_4d4e54.continue -> getter_c1ee02.execute\n        setter_4d4e54.continue -> getter_4d4e54.execute\n        setter_f1d97b.continue -> for_a0e9db.next\n        setter_c1ee02.execute -> for_a0e9db.reset\n        for_a0e9db.done -> setter_4d4e54.execute\n        for_a0e9db.done -> setter_f1d97b.execute\n        for_a0e9db.done -> getter_4d4e54.execute\n        for_a0e9db.done -> getter_f1d97b.execute\n        for_a0e9db.done -> continue_67430e\n        execute_f1c7e0 -> setter_c1ee02.execute\n    }\n\n    \n\n    instance(x: -1021, y: 63, name: \"all_same\") all_same_0e8fda root.main.all_Characters_Same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -715, y: 179, name: \"List of Characters\") characters_90a58b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -537, y: 203, name: \"List Length\") length_3b9c62 root.Std_k98ojb.List.Length {}\n        instance(x: -331, y: 183, name: \"For Loop\") for_4f3e0f root.Std_k98ojb.Std.For {}\n        instance(x: -116, y: 181, name: \"Equal\") equal_3f8dd6 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -19, y: 218, name: \"If\") if_2b0a97 root.Std_k98ojb.Std.If {}\n        getter(x: -3, y: 279, name: \"getter_8bda90\") getter_8bda90 = _index_1\n        instance(x: 221, y: 269, name: \"Not\") not_8cbe0d root.Std_k98ojb.Logic.Not {}\n        getter(x: 392, y: 184, name: \"getter_8bda90\") getter_9e7b2b = characters_90a58b_list\n        instance(x: 555, y: 207, name: \"GetAt\") getat_9a1e50 root.Std_k98ojb.List.GetAt {}\n        getter(x: 740, y: 182, name: \"getter_8bda90\") getter_b5b1f4 = _index_1\n\n        string_db4ddf -> characters_90a58b.input\n        characters_90a58b.list -> length_3b9c62.list\n        length_3b9c62.length -> for_4f3e0f.items\n        for_4f3e0f.item -> getat_9a1e50.itemAtIndex\n        0 -> getat_9a1e50.index\n        getat_9a1e50.itemAtIndex -> equal_3f8dd6.right\n        getter_8bda90.value -> equal_3f8dd6.left\n        for_4f3e0f.index -> getter_b5b1f4.value\n        getter_9e7b2b.value -> for_4f3e0f.items\n        for_4f3e0f.onItem -> equal_3f8dd6.execute\n        for_4f3e0f.index -> getter_8bda90.value\n        equal_3f8dd6.result -> if_2b0a97.predicate\n        for_4f3e0f.onItem -> if_2b0a97.execute\n        if_2b0a97.then -> not_8cbe0d.input\n        not_8cbe0d.result -> output_e9fa68\n        if_2b0a97.else -> continue_67430e\n        for_4f3e0f.done -> continue_67430e\n        execute_f1c7e0 -> for_4f3e0f.reset\n        not_8cbe0d.result -> if_2b0a97.value\n        if_2b0a97.value -> output_e9fa68\n        if_2b0a97.else -> continue_67430e\n        not_8cbe0d.result -> if_2b0a97.value\n        if_2b0a97.then -> continue_67430e\n        for_4f3e0f.next -> continue_67430e\n    }\n\n    \n\n    instance(x: 15, y: -39) all_Characters_Same_9eeb5c root.main.all_Characters_Same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n        instance(x: 0, y: 0) count_3c3d5d root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) for_c3c6b7 root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) expression_f8d1f8 root.Std_k98ojb.Math.Expression {\n            expression: \"it.isnumeric()\"\n        }\n        func() {\n            in(x: 50, y: 76, name: \"it\") property(String) it_3d2a5f\n\n            out(x: 505, y: 88, name: \"result\") property(Bool) result_87b9c4\n\n            it_3d2a5f -> result_87b9c4\n        } -> expression_f8d1f8.handler\n        string_668bd2 -> for_c3c6b7.items\n        expression_f8d1f8.result -> count_3c3d5d.count\n        count_3c3d5d.count -> count_1f468d\n        for_c3c6b7.on_item -> expression_f8d1f8.execute\n        count_3c3d5d.reset -> for_c3c6b7.reset\n        for_c3c6b7.trigger 1: DOI: 10.4103/0971-5851.182135\n2: \n3: Authors: M. M. Sharma, D. K. Sharma, P. Gogia, K. Chaturvedi, A. Bhargava, H. K. Bhatia, S. N. Shukla, V. Kumar, T. Dikshit, R. K. Garg, et al.\n4: Journal: Indian Journal of Medical and Paediatric Oncology : Official Journal of Indian Society of Medical & Paediatric Oncology\n5: Date: 2016\n6: Keywords: Incidence, India, population-based, registry, trends\n\n7: \n\n8: **Background:**The cancer incidence data for India were not available in GLOBOCAN 2012. Hence, an attempt was made to generate data on incidence from population-based cancer registries (PBCRs) in India for 2014.\n\n9: **Methods:**Data from 16 PBCRs were used for analysis. Standardized incidence rates (SIR) were calculated for the 16 registries separately and then for the entire country.\n\n10: **Results:**In the year 2014, 3,05,987 new cancer cases were registered in 16 PBCRs in India. The SIR for the entire country was 140/100,000 population. The crude rates ranged from 53.9/100,000 in Delhi to 259.3/100,000 in Mumbai. The age-standardized rates were also highest in Mumbai (249.3/100,000). The SIR for both males and females was highest in Mumbai followed by Delhi. The SIR for males and females were 149.6/100,000 and 127.6/100,000, respectively. Breast, cervix uteri, and oral cavity cancers were the most common cancers in women, whereas cancers of the oral cavity, lung, and stomach were most common in men. The SIRs for both males and females were highest in age group 65\u201374 years.\n\n11: **Conclusion:**The present study suggests that cancer is becoming a major health problem in India, especially in urban areas. It is necessary to improve the cancer registration in India so that the estimates of cancer incidence can be generated using more robust methodology and provide a baseline for planning of future cancer control programs.\n\n12: \n\n13: Cancer is a major public health problem across the globe. It is the second leading cause of mortality in the world, accounting for nearly 8.8 million deaths in 2015.[[1]] A recent estimate from GLOBOCAN 2012 suggests that there are 14.1 million new cancer cases and 8.2 million deaths worldwide.[[2]] The burden of cancer is increasing in developing countries as these countries are undergoing demographic and epidemiological transition and also experience an aging population. In India, the prevalence of risk factors for cancer is high.[[3] [4]] However, there was no comprehensive data available on the cancer incidence in the country at the national level. Cancer registries in India were established during the last century; however, the cancer registration was not very effective until 1990s.[[5] [6]] The registration of cancer is still not very widespread in India. There are 26 population-based cancer registries (PBCRs) in India; however, many of them are not functioning optimally.[[7]] Therefore, there was a need to generate the national level cancer incidence data in India. This was done by using data from 16 PBCRs in India. This paper provides the estimates of cancer incidence in India in 2014 and the analysis of the patterns of cancer in the country. These estimates will serve as a baseline for planning of cancer control programs in India.\n\n14: \n\n15: The PBCRs in India were established in the period between 1970s and 1990s and these registries cover a diverse geographical area of the country, that is, north, east, west, and south. These PBCRs are located in the states of Maharashtra, Delhi, Karnataka, Kerala, Mizoram, Nagaland, Andhra Pradesh, Tamil Nadu, Gujarat, Assam, West Bengal, Haryana, Punjab, and Rajasthan. The 16 registries are: Bhopal, Chennai, Delhi, Gujarat, Mumbai, Nagpur, Bangalore, Thiruvananthapuram, Nagaland, Mizoram, Punjab, Haryana, Chandigarh, Patna, Guwahati, and Jaipur. All these registries have been certified by the National Cancer Registry Programme (NCRP) as per the guidelines of the International Agency for Research on Cancer (IARC).[[8]] These registries are also designated as IARC Collaborating Centres.\n\n16: The PBCRs in India follow the IARC protocol for registration of cancer.[[9]] In most of the PBCRs, data on cancer patients are obtained from the hospital records and also from the cancer treatment facilities such as medical oncology units, radiation therapy departments, pathology departments, etc. All these registries have a good coverage of the population in their respective catchment areas. A number of PBCRs also collect the data on patients from the primary health centers and rural health centers. The data from the PBCRs are sent to the NCRP, which is a part of the National Centre for Disease Informatics and Research (NCDIR), Bangalore. The NCRP is responsible for the generation of the cancer incidence data for the country.\n\n17: The population for all the PBCRs was estimated by using the census data of 2011 and the projected growth rates for the respective registry areas.[[10]] The projected populations were calculated for the year 2014. The age-specific incidence rates were calculated for the different age groups for both males and females. The data were then analyzed for the age groups 0\u201314, 15\u201344, 45\u201364, and 65 years and above. The data were also analyzed by the period of 10 years. The data on the incidence of cancer were also analyzed for the different anatomic sites for the country as a whole and also separately for the males and females. The data were also analyzed for the age groups and for the period 2004\u20132014.\n\n18: \n\n19: The age-specific rates were calculated for the different age groups for both males and females and the age-standardized rates (SIR) were calculated using the world standard population.[[11]] The SIRs were calculated for the entire country and also for each PBCR. The projected populations were used for calculating the SIR. The SIRs were calculated for the country as a whole and also for males and females separately. The SIRs were also calculated for different age groups.\n\n20: \n\n21: A total of 3,05,987 new cancer cases were registered in the 16 PBCRs in India during the year 2014. The SIR for the country as a whole was 140/100,000 population. The age-specific SIRs for the country are presented in Table 1. The SIRs were highest for the age group 65\u201374 years. The SIRs for the period 2004\u20132014 are presented in Figure 1. The SIRs have increased from 118/100,000 in 2004 to 140/100,000 in 2014. The SIRs for the period 2004\u20132014 are presented in Table 2.\n\n22: **Table 1:** Age-specific incidence rates for India in",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: -57, y: 61) count_4c6f4a root.Std_k98ojb.Std.Count {}\n        instance(x: 1, y: 62) for_d5f4b6 root.Std_k98ojb.Std.For {}\n        instance(x: 10, y: 91) charactertable_6d5f51 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 292, y: 63) isnumeric_1a8b50 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 497, y: 64) add_7dca2c root.Std_k98ojb.Math.Add {}\n        instance(x: 692, y: 63) floor_5f8f3b root.Std_k98ojb.Math.Floor {}\n        count_4c6f4a.count -> for_d5f4b6.items.length\n        for_d5f4b6.on_item -> count_4c6f4a.trigger\n        string_668bd2 -> charactertable_6d5f51.input\n        charactertable_6d5f51.characters -> for_d5f4b6.items\n        for_d5f4b6.item -> isnumeric_1a8b50.input\n        isnumeric_1a8b50.result -> floor_5f8f3b.input\n        0 -> floor_5f8f3b.output\n        floor_5f8f3b.output -> add_7dca2c.first\n        1 -> add_7dca2c.second\n        add_7dca2c.result -> count_4c6f4a.new_value\n        count_4c6f4a.continue -> for_d5f4b6.next\n        for_d5f4b6.done -> count_4c6f4a.reset\n        count_4c6f4a.count -> count_1f468d\n    }\n\n    \n\n    instance(x: -1, y: 105) count_digits_16d0e1 root.main.number_ctr {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 0, y: 0) count_1e62e0 root.Std_k98ojb.Std.Count {}\n        instance(x: 100, y: 0) characters_74e5f9 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 440, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: 500, y: 0) add_88bb8a root.Std_k98ojb.Math.Add {}\n        string_668bd2 -> characters_74e5f9.input\n        characters_74e5f9.characters -> filter_7b3b7b.list\n        filter_7b3b7b.result -> count_1e62e0.count\n        0 -> count_1e62e0.reset\n        count_1e62e0.count -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> count_1e62e0.count\n        count_1e62e0.count -> count_1f468d\n        count_1e62e0.reset -> characters_74e5f9.execute\n        characters_74e5f9.execute -> filter_7b3b7b.execute\n    }\n\n    \n\n    instance(x: 104, y: -34) NumberCounting_e7fbd7 root.main.number_ctr {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 0, y: 0) for_1d5b88 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -112, y: 57, name: \"item\") property(Any) item_5d36c2\n\n            out(x: 855, y: 75, name: \"next\") trigger() next_6aaf3e\n\n            instance(x: 87, y: 38) isnumeric_a7db98 root.Std_k98ojb.Strings.IsNumeric {}\n            instance(x: 314, y: 74) count_18c5c3 root.Std_k98ojb.Std.Count {}\n            isnumeric_a7db98.result -> count_18c5c3.input\n            item_5d36c2 -> isnumeric_a7db98.input\n            next_6aaf3e -> for_1d5b88.next\n        } -> for_1d5b88.handler\n        string_668bd2 -> for_1d5b88.items\n        count_18c5c3.count -> count_1f468d\n    }\n\n    \n\n    instance(x: 96, y: -23) number_ctr_1e8d50 root.main.number_ctr {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 10, y: 0) characters_e0a5bc root.Std_k98ojb.Strings.Characters {}\n        instance(x: 320, y: 37) filter_7d48f8 root.Std_k98ojb.Query.Filter {\n            where: \"isNumeric(it)\"\n        }\n        instance(x: 0, y: -1) length_2c6f97 root.Std_k98ojb.List.Length {}\n        string_668bd2 -> characters_e0a5bc.input\n        characters_e0a5bc.characters -> filter_7d48f8.list\n        filter_7d48f8.result -> length_2c6f97.list\n        length_2c6f97.length -> count_1f468d\n    }\n\n    \n\n    instance(x: 10, y: 0) NumberCounter_1d2c3a root.main.number_ctr {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 0, y: 0) filter_5f1d88 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -122, y: 57, name: \"item\") property(String) item_a6c4cc\n\n            out(x: 799, y: 83, name: \"bool\") property(Bool) bool_2a8a31\n\n            instance(x: 95, y: 48) isnumeric_3dca6c root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_3dca6c.result -> bool_2a8a31\n            item_a6c4cc -> isnumeric_3dca6c.input\n        } -> filter_5f1d88.handler\n        string_668bd2 -> filter_5f1d88.items\n        instance(x: 515, y: 68) length_6e87f2 root.Std_k98ojb.List.Length {}\n        filter_5f1d88.output_list -> length_6e87f2.list\n        length_6e87f2.length -> count_1f468d\n    }\n\n    \n\n    instance(x: -59, y: 0) count_11c8f0 root.main.number_ctr {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 0, y: 0) count_6d05b0 root.Std_k98ojb.Std.Count {}\n        func() {\n            in(x: -117, y: 48, name: \"char\") property(String) char_9f6850\n\n            out(x: 513, y: 54, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 88, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            instance(x: 320, y: 34) not_807ffd root.Std_k98ojb.Logic.Not {}\n            isnumeric_1088d5.result -> not_807ffd.input\n            not_807ffd.output -> bool_af09a7\n            char_9f6850 -> isnumeric_1088d5.input\n        } -> count_6d05b0.handler\n        string_668bd2 -> count_6d05b0.items\n        count_6d05b0.count -> count_1f468d\n    }\n\n    \n\n    instance(x: 0, y: 0) number_ctr_2c856f root.main.number_ctr {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 0, y: 0) count_2efc0b root.Std_k98ojb.Std.Count {}\n        func() {\n            in(x: -106, y: 29, name: \"char\") property(String) char_6f4da7\n            out(x: 517, y: 29, name: \"boolean\") property(Bool) boolean_b3f0eb\n            instance(x: 69, y: 22) isnumeric_66a6d6 root.Std_k98ojb.Strings.IsNumeric {}\n            char_6f4da7 -> isnumeric_66a6d6.input\n            isnumeric_66a6d6.result -> boolean_b3f0eb\n        } -> count_2efc0b.predicate\n        string_668bd2 -> count_2efc0b.input\n        count_2efc0b.count -> count_1f468d\n    }\n\n    \n\n    instance(x: 60, y: 119) count_digits_7f4f81 root.main.number_ctr {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 0, y: 0) characters_e7cb91 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) filter_2c83e5 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: 1, y: 43, name: \"char\") property(String) char_1c5e88\n\n            out(x: 844, y: 45, name: \"bool\") property(Bool) bool_a1d58f\n\n            instance(x: 85, y: 42) isnumeric_b7a4b4 root.Std_k98ojb.Strings.IsNumeric {}\n            char_1c5e88 -> isnumeric_b7a4b4.input\n            isnumeric_b7a4b4.result -> bool_a1d58f\n        } -> filter_2c83e5.handler\n        characters_e7cb91.characters -> filter_2c83e5.items\n        filter_2c83e5.output_list -> list_1ae3ae.input\n        instance(x: 0, y: 0) length_f7e3a6 root.Std_k98ojb.List.Length {}\n        list_1ae3ae -> length_f7e3a6.list\n        length_f7e3a6.length -> count_1f468d\n        string_668bd2 -> characters_e7cb91.input\n    }\n\n    \n\n    instance(x: -63, y: 110) count_8b1b99 root.main.number_ctr {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 17, y: 5) iteration_filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: \"it % 10\"\n        }\n        instance(x: 0, y: 0) iteration_map_node root.Std_k98ojb.Iteration.Map {\n            handler: \"1\"\n        }\n        instance(x: 1, y: 40) length_0c1ebc root.Std_k98ojb.List.Length {}\n        instance(x: 11, y: 84) numbers_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 18, y: 122) add_3c8c86 root.Std_k98ojb.Math.Add {}\n        instance(x: 11, y: 146) sum_3f2da4 root.Std_k98ojb.List.Sum {}\n        numbers_node.characters -> iteration_filter_node.items\n        iteration_filter_node.output_list -> iteration_map_node.items\n        iteration_map_node.output_list -> length_0c1ebc.list\n        0 -> add_3c8c86.first\n        length_0c1ebc.length -> add_3c8c86.second\n        add_3c8c86.result -> sum_3f2da4.items\n        sum_3f2da4.sum -> count_1f468d\n        string_668bd2 -> numbers_node.input\n    }\n\n    \n\n    instance(x: 23, y: 223) number_ctr_6b6f64 root.main.number_ctr {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        data_instance(x: 347, y: 70) data_81d7c5  = [4, 8, 12]\n        data_instance(x: 352, y: 0) data_7c9f5c  = 4\n        instance(x: -19, y: 46, name: \"Sum of odd numbers\") expression_9dc0e8 root.Std_k98ojb.Math.Expression {\n            expression: \"n * (n+1)\"\n        }\n        instance(x: -32, y: 111) div_74b7ca root.Std_k98ojb.Math.Div {}\n        instance(x: -2, y: -1, name: \"Odd number\") expression_6c2b88 root.Std_k98ojb.Math.Expression {\n            expression: \"2*n-1\"\n        }\n        instance(x: -27, y: 4) expression_ea9cc6 root.Std_k98ojb.Math.Expression {\n            expression: \"pow(n,4)\"\n        }\n        instance(x: 22, y: 53) pow_6f3b3f root.Std_k98ojb.Math.Pow {}\n        instance(x: 42, y: -7, name: \"Sum of odd numbers raised to 4th power\") expression_7c5e52 root.Std_k98ojb.Math.Expression {\n            expression: \"n * (2*n-1) * (2*n+1) * (4*n*n-1)/3\"\n        }\n        data_81d7c5 -> div_74b7ca.second\n        div_74b7ca.result -> data_81d7c5.ii\n        data_81d7c5 -> pow_6f3b3f.second\n        expression_6c2b88.result -> pow_6f3b3f.first\n        expression_ea9cc6.result -> data_81d7c5.i\n        n_0c0609 -> expression_9dc0e8.gen_0\n        div_74b7ca.result -> data_81d7c5.iii\n        expression_9dc0e8.result -> sum_2ad0d5\n        expression_9dc0e8.result -> div_74b7ca.first\n        n_0c0609 -> expression_6c2b88.gen_0\n        n_0c0609 -> pow_6f3b3f.gen_0\n        expression_ea9cc6.result -> sum_2ad0d5\n        pow_6f3b3f.result -> sum_2ad0d5\n        data_7c9f5c -> div_74b7ca.first\n        n_0c0609 -> expression_7c5e52.gen_0\n        expression_7c5e52.result -> sum_2ad0d5\n    }\n\n    \n\n    instance(x: -104, y: 184) odd_num_sum_8f9e7a root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        data_instance(x: 401, y: 136) data_b4a4ba  = 3\n        data_instance(x: 412, y: 57) data_2b3cc5  = 4\n        instance(x: 10, y: 0) expression_9b6d5f root.Std_k98ojb.Math.Expression {\n            expression: \"n*n*n*n\"\n        }\n        instance(x: 12, y: 129) expression_3b66ac root.Std_k98ojb.Math.Expression {\n            expression: \"n*2+1\"\n        }\n        instance(x: 29, y: 41) mul_a0bba5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 293, y: 38) for_a0a2b6 root.Std_k98ojb.Std.For {}\n        instance(x: 292, y: 122) for_9d0f67 root.Std_k98ojb.Std.For {}\n        data_b4a4ba -> for_9d0f67.from\n        data_b4a4ba -> for_a0a2b6.from\n        for_9d0f67.items -> for_a0a2b6.items\n        n_0c0609 -> for_9d0f67.to\n        n_0c0609 -> for_a0a2b6.to\n        for_a0a2b6.onItem -> mul_a0bba5.first\n        expression_3b66ac.result -> for_a0a2b6.reset\n        for_a0a2b6.index -> expression_3b66ac.gen_0\n        expression_9b6d5f.gen_0 -> for_9d0f67.index\n        expression_9b6d5f.gen_0 -> expression_9b6d5f.gen_1\n        for_9d0f67.item -> expression_9b6d5f.gen_1\n        expression_9b6d5f.result -> mul_a0bba5.second\n        mul_a0bba5.result -> sum_2ad0d5\n    }\n\n    \n\n    instance(x: -33, y: 184) odd_num_sum_2e2a29 root.main.odd_num_sum {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        data_instance(x: 352, y: 87) data_4e3e3b  = [n]\n        instance(x: 2, y: 1, name: \"map\") map_6dd1f4 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 223, y: 4) pow_13eaa0 root.Std_k98ojb.Math.Pow {}\n        instance(x: 2, y: -36) sum_3edf1b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 2, y: -99) expression_9a9a16 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 1, y: 31) add_7c43b4 root.Std_k98ojb.Math.Add {}\n        func() {\n            in(x: -105, y: 39, name: \"current\") property(Number) current_2f0c6d\n\n            out(x: 526, y: 50, name: \"output\") property(Number) output_cac7f9\n\n            pow_13eaa0.result -> output_cac7f9\n            current_2f0c6d -> pow_13eaa0.y\n        } -> map_6dd1f4.handler\n        expression_9a9a16.result -> map_6dd1f4.items\n        n_0c0609 -> expression_9a9a16.gen_0\n        map_6dd1f4.output_list -> sum_3edf1b.items\n        data_4e3e3b -> sum_3edf1b.context\n        0 -> sum_3edf1b.initial\n        func() {\n            in(x: -105, y: 39, name: \"current\") property(Number) current_2f0c6d\n            in(x: -103, y: 56, name: \"accumulated\") property(Number) accumulated_6ec8d7\n\n            out(x: 526, y: 50, name: \"output\") property(Number) output_cac7f9\n\n            add_7c43b4.result -> output_cac7f9\n            accumulated_6ec8d7 -> add_7c43b4.first\n            current_2f0c6d -> add_7c43b4.second\n        } -> sum_3edf1b.reducer\n        sum_3edf1b.output -> sum_2ad0d5\n    }\n\n    \n\n    instance(x: -81, y: -19) odd_num_sum_49f5f9 root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: -1, y: -23) for_0a8f9b root.Std_k98ojb.Std.For {}\n        data_instance(x: 109, y: 11) data_0e5d36  = [sum, n]\n        data_instance(x: 101, y: 63) data_fbe8d9  = [i]\n        instance(x: 317, y: -14) pow_a7db98 root.Std_k98ojb.Math.Pow {}\n        instance(x: 554, y: 39) add_ebf5c5 root.Std_k98ojb.Math.Add {}\n        instance(x: 7, y: -1) expression_afe0bd root.Std_k98ojb.Math.Expression {\n            expression: \"2*i-1\"\n        }\n        instance(x: 5, y: -40) expression_5a6e9d root.Std_k98ojb.Math.Expression {\n            expression: \"i+1\"\n        }\n        data_fbe8d9 -> for_0a8f9b.items\n        func() {\n            in(x: 0, y: 9, name: \"i\") property(Number) i_c8d50c\n\n            out(x: 524, y: 7, name: \"next\") trigger() next_4b5f58\n\n            next_4f4a71 -> for_0a8f9b.next\n            i_c8d50c -> data_fbe8d9.i\n            n_0c0609 -> for_0a8f9b.items\n            data_0e5d36 -> for_0a8f9b.context\n            data_0e5d36 -> for_0a8f9b.onItem\n            i_c8d50c -> expression_afe0bd.gen_0\n            expression_afe0bd.result -> pow_a7db98.second\n            pow_a7db98.result -> add_ebf5c5.second\n            data_0e5d36.sum -> add_ebf5c5.first\n            add_ebf5c5.result -> data_0e5d36.sum\n            n_0c0609 -> expression_5a6e9d.gen_0\n            expression_5a6e9d.result -> for_0a8f9b.items\n            next_4b5f58 -> next_4f4a71\n        }\n         -> for_0a8f9b.trigger\n        4 -> pow_a7db98.power\n        data_0e5d36.sum -> sum_2ad0d5\n    }\n\n    \n\n    instance(x: -86, y: 152) odd_num_sum_0d5eb6 root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        data_instance(x: -3, y: 36) data_c4c9f8  = 1\n        instance(x: -4, y: 31) pow_8e5a3a root.Std_k98ojb.Math.Pow {}\n        instance(x: 1018, y: 24) div_4df2c6 root.Std_k98ojb.Math.Div {}\n        instance(x: 1111, y: 0) add_2e0b8b root.Std_k98ojb.Math.Add {}\n        instance(x: 1070, y: 45) mul_1e8e0c root.Std_k98ojb.Math.Mul {}\n        instance(x: 1012, y: 61) expression_8bb9a1 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 1176, y: 29) mul_6a3a1c root.Std_k98ojb.Math.Mul {}\n        n_0c0609 -> pow_8e5a3a.y\n        4 -> pow_8e5a3a.x\n        expression_8bb9a1.result -> mul_1e8e0c.second\n        expression_8bb9a1.result -> div_4df2c6.first\n        n_0c0609 -> mul_6a3a1c.first\n        n_0c0609 -> expression_8bb9a1.gen_0\n        2 -> mul_6a3a1c.second\n        mul_6a3a1c.result -> expression_8bb9a1.gen_0\n        div_4df2c6.result -> mul_1e8e0c.first\n        pow_8e5a3a.result -> add_2e0b8b.second\n        data_c4c9f8 -> add_2e0b8b.first\n        add_2e0b8b.result -> data_c4c9f8\n        add_2e0b8b.result -> sum_2ad0d5\n    }\n\n    \n\n    instance(x: 101, y: 111) odd_num_sum_2e8a74 root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 5, y: -4, name: \"range\") generateRange_1df7e3 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 26, y: 37) pow_7fc6b6 root.Std_k98ojb.Math.Pow {}\n        instance(x: 27, y: 71) mul_d1d9c9 root.Std_k98ojb.Math.Mul {}\n        instance(x: 19, y: 111) add_8c9bfb root.Std_k98ojb.Math.Add {}\n        instance(x: 24, y: 149) reduce_a9d41d root.Std_k98ojb.Iteration.Reduce {}\n        data_instance(x: 9, y: 193) data_c0b1ef  = 1\n        data_instance(x: 9, y: 205) data_1fcf54  = 3\n        instance(x: 3, y: 182) expression_ee3d1f root.Std_k98ojb.Math.Expression {\n            expression: \"2*i+1\"\n        }\n        generateRange_1df7e3.to -> pow_7fc6b6.second\n        generateRange_1df7e3.to -> mul_d1d9c9.first\n        mul_d1d9c9.result -> pow_7fc6b6.first\n        pow_7fc6b6.result -> add_8c9bfb.second\n        data_c0b1ef -> add_8c9bfb.first\n        n_0c0609 -> generateRange_1df7e3.from\n        1 -> generateRange_1df7e3.from\n        generateRange_1df7e3.range -> expression_ee3d1f.gen_0\n        generateRange_1df7e3.range -> reduce_a9d41d.items\n        data_1fcf54 -> reduce_a9d41d.initial\n        add_8c9bfb.result -> reduce_a9d41d.handler.first\n        reduce_a9d41d.handler.accumulator -> reduce_a9d41d.handler.second\n        reduce_a9d41d.result -> sum_2ad0d5\n    }\n\n    \n\n    instance(x: -32, y: 223) odd_num_sum_a6f0d6 root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 6, y: -29, name: \"get odd number\") expression_e5a0f6 root.Std_k98ojb.Math.Expression {\n            expression: \"2*n-1\"\n        }\n        instance(x: 40, y: -4) pow_6f4a1f root.Std_k98ojb.Math.Pow {}\n        instance(x: 20, y: 37) expression_e9d1cd root.Std_k98ojb.Math.Expression {\n            expression: \"n*(2*n-1)*(2*n-1)*(2*n+1)/3\"\n        }\n        instance(x: -14, y: 62) ifexpression_5a79c2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n == 1\"\n        }\n        instance(x: 76, y: 6) add_d5e0cc root.Std_k98ojb.Math.Add {}\n        instance(x: -37, y: 0) mul_3a0a43 root.Std_k98ojb.Math.Mul {}\n        expression_e5a0f6.gen_0 -> pow_6f4a1f.y\n        pow_6f4a1f.result -> mul_3a0a43.second\n        expression_e5a0f6.gen_0 -> add_d5e0cc.second\n        add_d5e0cc.result -> sum_2ad0d5\n        pow_6f4a1f.result -> add_d5e0cc.first\n        4 -> pow_6f4a1f.x\n        n_0c0609 -> expression_e5a0f6.gen_0\n        n_0c0609 -> expression_e9d1cd.gen_0\n        expression_e9d1cd.result -> add_d5e0cc.first\n        ifexpression_5a79c2.then -> sum_2ad0d5\n        ifexpression_5a79c2.else -> mul_3a0a43.first\n        n_0c0609 -> ifexpression_5a79c2.gen_0\n        mul_3a0a43.result -> sum_2ad0d5\n    }\n\n    \n\n    instance(x: -109, y: 143) odd_num_sum_2c4b8a root.main.odd_num_sum {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 2, y: 11) expression_7e81e2 root.Std_k98ojb.Math.Expression {\n            expression: \"n * (2*n-1)*(2*n)*(2*n+1)/3\"\n        }\n        instance(x: 33, y: 30) pow_2cc4c6 root.Std_k98ojb.Math.Pow {}\n        n_0c0609 -> expression_7e81e2.gen_0\n        expression_7e81e2.result -> pow_2cc4c6.second\n        4 -> pow_2cc4c6.first\n        pow_2cc4c6.result -> sum_2ad0d5\n    }\n\n    \n\n    instance(x: 17, y: 135) odd_num_sum_2f6a03 root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        data_instance(x: 330, y: 133) data_cde0dc  = 1\n        data_instance(x: 1000, y: 135) data_4d3d2b  = [sum]\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-3\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: -14, y: 2) pow_91ebe1 root.Std_k98ojb.Math.Pow {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_0c0609 -> mul_f892a4.first\n        n_0c0609 -> expression_2d6da6.gen_0\n        div_64046c.result -> pow_91ebe1.x\n        pow_91ebe1.result -> mul_f892a4.first\n        4 -> pow_91ebe1.y\n        n_0c0609 -> mul_f892a4.second\n        mul_f892a4.result -> data_4d3d2b.sum\n        data_4d3d2b.sum -> sum_2ad0d5\n    }\n\n    \n\n    instance(x: 118, y: -26) odd_num_sum_2aeb48 root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: -12, y: 16, name: \"Sum\") reduce_2b4ba9 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -42, y: 60, name: \"Calculate the fourth power of an odd natural number\") expression_9c1f02 root.Std_k98ojb.Math.Expression {\n            expression: \"i*2+1\"\n        }\n        instance(x: 1, y: 58) mul_a60be8 root.Std_k98ojb.Math.Mul {}\n        instance(x: 4, y: 48) pow_6a1f5c root.Std_k98ojb.Math.Pow {}\n        instance(x: -16, y: 17, name: \"Add two numbers\") add_2c7e7a root.Std_k98ojb.Math.Add {}\n        instance(x: 6, y: 4) generate_range_e5c0db root.Std_k98ojb.List.GenerateRange {}\n        data_instance(x: 8, y: 3) data_bfd4b6  = [1]\n        generate_range_e5c0db.to -> data_bfd4b6.n\n        generate_range_e5c0db.from -> data_bfd4b6.m\n        n_0c0609 -> data_bfd4b6.n\n        0 -> data_bfd4b6.m\n        generate_range_e5c0db.range -> reduce_2b4ba9.items\n        expression_9c1f02.result -> mul_a60be8.first\n        mul_a60be8.result -> pow_6a1f5c.base\n        pow_6a1f5c.result -> add_2c7e7a.second\n        1 -> pow_6a1f5c.exp\n        0 -> add_2c7e7a.first\n        reduce_2b4ba9.accum -> add_2c7e7a.first\n        reduce_2b4ba9.item -> expression_9c5d87.gen_0\n        expression_9c1f02.gen_0 -> reduce_2b4ba9.item\n        add_2c7e7a.result -> reduce_2b4ba9.accum\n        reduce_2b4ba9.output -> sum_2ad0d5\n    }\n\n    \n\n    instance(x: 35, y: 156) odd_num_sum_5d4a8b root.main.odd_num_sum {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: 15, y: -24) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * (size ^ 2)\"\n        }\n        size_49c776 -> math_expr_node.gen_0\n        math_expr_node.result -> Area_a3e36f\n    }\n\n    \n\n    instance(x: 58, y: 16) CubeSurfaceArea_d2c6ae root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: 10, y: -46) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size * size\"\n        }\n        size_49c776 -> math_expr_node.gen_0\n        math_expr_node.result -> Area_a3e36f\n    }\n\n    \n    instance(x: 58, y: 12, name: \"CubeSurfaceArea\") math_6ce7bf root.main.CubeSurfaceArea {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: -20, y: -44) expression_b3a36b root.Std_k98ojb.Math.Expression {\n            expression: \"size * size * 6\"\n        }\n        size_49c776 -> expression_b3a36b.gen_0\n        expression_b3a36b.result -> Area_a3e36f\n    }\n\n    \n    instance(x: 114, y: -23) CubeSurfaceArea_9dfc1c root.main.CubeSurfaceArea {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: -6, y: -44) mul_83e57a root.Std_k98ojb.Math.Mul {}\n        instance(x: -5, y: -1) mul_3d9d6b root.Std_k98ojb.Math.Mul {}\n        instance(x: 9, y: -42) mul_7c92da root.Std_k98ojb.Math.Mul {}\n        instance(x: 35, y: -4) mul_d1a47c root.Std_k98ojb.Math.Mul {}\n        instance(x: 41, y: -26) mul_5c3f0f root.Std_k98ojb.Math.Mul {}\n        instance(x: 61, y: -47) add_5b0f93 root.Std_k98ojb.Math.Add {}\n        instance(x: 63, y: -13) add_9eb5d0 root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -44) mul_1a1f1c root.Std_k98ojb.Math.Mul {}\n        instance(x: 102, y: -13) mul_7f9e5a root.Std_k98ojb.Math.Mul {}\n        size_49c776 -> mul_83e57a.first\n        size_49c776 -> mul_83e57a.second\n        mul_83e57a.result -> mul_3d9d6b.first\n        mul_83e57a.result -> mul_3d9d6b.second\n        mul_3d9d6b.result -> mul_7c92da.first\n        mul_3d9d6b.result -> mul_7c92da.second\n        mul_7c92da.result -> mul_d1a47c.first\n        mul_7c92da.result -> mul_d1a47c.second\n        mul_d1a47c.result -> add_5b0f93.first\n        mul_7c92da.result -> add_9eb5d0.first\n        add_5b0f93.result -> mul_5c3f0f.first\n        add_9eb5d0.result -> mul_5c3f0f.second\n        mul_5c3f0f.result -> mul_1a1f1c.first\n        mul_5c3f0f.result -> mul_7f9e5a.first\n        6 -> mul_1a1f1c.second\n        2 -> mul_7f9e5a.second\n        mul_1a1f1c.result -> add_5b0f93.second\n        mul_7f9e5a.result -> add_9eb5d0.second\n        add_5b0f93.result -> Area_a3e36f\n        add_9eb5d0.result -> Area_a3e36f\n    }\n\n    \n\n    instance(x: 111, y: 30) CubeSurfaceArea_5d7d92 root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: 6, y: -52) math_expr_7fc9c6 root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size * size\"\n        }\n        size_49c776 -> math_expr_7fc9c6.gen_0\n        math_expr_7fc9c6.result -> Area_a3e36f\n    }\n\n    \n\n    instance(x: -10, y: 0) CubeSurfaceArea_7d1d0f root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: -26, y: -5) pow_b3bf51 root.Std_k98ojb.Math.Pow {}\n        instance(x: -34, y: 12) mul_8edc8a root.Std_k98ojb.Math.Mul {}\n        instance(x: 24, y: -25) math_expr_node_2 root.Std_k98ojb.Math.Expression {\n            expression: \"6* size*size\"\n        }\n        2 -> pow_b3bf51.y\n        size_49c776 -> pow_b3bf51.x\n        size_49c776 -> mul_8edc8a.first\n        pow_b3bf51.result -> mul_8edc8a.second\n        mul_8edc8a.result -> math_expr_node_2.gen_1\n        size_49c776 -> math_expr_node_2.gen_0\n        math_expr_node_2.result -> Area_a3e36f\n    }\n\n    \n\n    instance(x: -96, y: -64, name: \"CubeSurfaceArea\") cube_surface_area_eebc49 root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: -26, y: 6) mul_f9d4a5 root.Std_k98ojb.Math.Mul {}\n        instance(x: -37, y: -45) expression_7f1e1d root.Std_k98ojb.Math.Expression {\n            expression: \"6 * (side * side)\"\n        }\n        size_49c776 -> expression_7f1e1d.gen_1\n        mul_f9d4a5.result -> expression_7f1e1d.gen_0\n        size_49c776 -> mul_f9d4a5.first\n        mul_f9d4a5.second -> mul_f9d4a5.first\n        expression_7f1e1d.result -> Area_a3e36f\n    }\n\n    \n\n    instance(x: 16, y: 4, name: \"CubeSurfaceArea\") cube_0ccf91 root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: 4, y: -44) mul_7b1b9f root.Std_k98ojb.Math.Mul {}\n        instance(x: 6, y: -46) mul_1b5f9b root.Std_k98ojb.Math.Mul {}\n        instance(x: 20, y: -44) mul_3d9c73 root.Std_k98ojb.Math.Mul {}\n        instance(x: 22, y: -46) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * s * s\"\n        }\n        6 -> mul_7b1b9f.first\n        size_49c776 -> mul_1b5f9b.first\n        size_49c776 -> mul_1b5f9b.second\n        mul_1b5f9b.result -> mul_3d9c73.first\n        mul_3d9c73.result -> math_expr_node.gen_0\n        size_49c776 -> math_expr_node.gen_1\n        mul_7b1b9f.result -> math_expr_node.gen_2\n        math_expr_node.result -> Area_a3e36f\n    }\n\n    \n\n    instance(x: 48, y: -26) CubeSurfaceArea_4a66d5 root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: 31, y: -29) mul_f2a1ed root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 347, y: 46) data_4c9b4f  = 6\n        instance(x: 30, y: 41) mul_66a8b4 root.Std_k98ojb.Math.Mul {}\n        mul_f2a1ed.result -> mul_66a8b4.first\n        size_49c776 -> mul_f2a1ed.first\n        size_49c776 -> mul_f2a1ed.second\n        data_4c9b4f -> mul_66a8b4.second\n        mul_66a8b4.result -> Area_a3e36f\n    }\n\n    \n\n    instance(x: -22, y: -6, name: \"CubeSurfaceArea\") CubeSurfaceArea_6a9c61 root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: -22, y: -44) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size^2\"\n        }\n        size_49c776 -> math_expr_node.gen_0\n        math_expr_node.result -> Area_a3e36f\n    }\n\n    \n\n    instance(x: 120, y: -18, name: \"CubeSurfaceArea\") expression_a4e1a1 root.main.CubeSurfaceArea {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 223, y: 61) sub_f2a1df root.Std_k98ojb.Math.Sub {}\n        instance(x: -0, y: 155) max_93e3a3 root.Std_k98ojb.List.Max {}\n        instance(x: -0, y: -38) min_9c8d0a root.Std_k98ojb.List.Min {}\n        list_9abc1d -> max_93e3a3.list\n        list_9abc1d -> min_9c8d0a.list\n        max_93e3a3.max -> sub_f2a1df.first\n        min_9c8d0a.min -> sub_f2a1df.second\n        sub_f2a1df.result -> difference_27806e\n    }\n\n    \n\n    instance(x: 1, y: 0) big_diff_e2f8b5 root.main.big_diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: -18, y: 30, name: \"Biggest number\") ``Biggest number_8fc8c9`` root.Std_k98ojb.List.Max {}\n        instance(x: 336, y: 62) sub_9e3a7b root.Std_k98ojb.Math.Sub {}\n        instance(x: -35, y: 137, name: \"Smallest number\") ``Biggest number_0b5eb0`` root.Std_k98ojb.List.Min {}\n        list_9abc1d -> ``Biggest number_8fc8c9``.list\n        list_9abc1d -> ``Biggest number_0b5eb0``.list\n        ``Biggest number_8fc8c9``.max -> sub_9e3a7b.first\n        ``Biggest number_0b5eb0``.min -> sub_9e3a7b.second\n        sub_9e3a7b.result -> difference_27806e\n    }\n\n    \n\n    instance(x: -69, y: -12) big_diff_98b2ab root.main.big_diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 213, y: 62) sub_7b2b4e root.Std_k98ojb.Math.Sub {}\n        instance(x: -111, y: 23, name: \"Min value\") list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 202, y: 174, name: \"Max value\") list_max_node root.Std_k98ojb.List.Max {}\n        list_9abc1d -> list_min_node.items\n        list_9abc1d -> list_max_node.items\n        list_max_node.max -> sub_7b2b4e.second\n        list_min_node.min -> sub_7b2b4e.first\n        sub_7b2b4e.result -> difference_27806e\n    }\n\n    \n\n    instance(x: 31, y: 46) big_diff_8f1c08 root.main.big_diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 190, y: 87) sub_8c4c0a root.Std_k98ojb.Math.Sub {}\n        instance(x: -9, y: 10, name: \"Min\") Min_0e5d01 root.main.Min {}\n        instance(x: -9, y: -42, name: \"Max\") Max_8d9b3e root.main.Max {}\n        list_9abc1d -> Min_0e5d01.list_09fcba\n        list_9abc1d -> Max_8d9b3e.list_09fcba\n        Max_8d9b3e.min_b2508f -> sub_8c4c0a.second\n        Min_0e5d01.min_b2508f -> sub_8c4c0a.first\n        sub_8c4c0a.result -> difference_27806e\n    }\n\n    \n\n    instance(x: -80, y: 176) big_diff_1a1f1c root.main.big_diff {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: -29, y: 73, name: \"Biggest\") biggest_c4c9cb root.Std_k98ojb.Iteration.Find {\n            predicate: \"it > biggest\"\n        }\n        instance(x: -28, y: -16, name: \"Smallest\") smallest_8e0f91 root.Std_k98ojb.Iteration.Find {\n            predicate: \"it < smallest\"\n        }\n        func() {\n            in(x: -124, y: 32, name: \"current\") property(Number) current_aeb6af\n\n            out(x: 416, y: 39, name: \"bool\") property(Bool) bool_b6d1d9\n\n            instance(x: 42, y: 20) sub_7f4d7f root.Std_k98ojb.Math.Sub {}\n            current_aeb6af -> sub_7f4d7f.first\n            biggest_c4c9cb.biggest -> sub_7f4d7f.second\n            sub_7f4d7f.result -> bool_b6d1d9\n        } -> biggest_c4c9cb.predicate\n        func() {\n            in(x: -124, y: 32, name: \"current\") property(Number) current_aeb6af\n\n            out(x: 416, y: 39, name: \"bool\") property(Bool) bool_b6d1d9\n\n            instance(x: 41, y: 16) sub_1b9f5e root.Std_k98ojb.Math.Sub {}\n            current_aeb6af -> sub_1b9f5e.first\n            smallest_8e0f91.smallest -> sub_1b9f5e.second\n            sub_1b9f5e.result -> bool_b6d1d9\n        } -> smallest_8e0f91.predicate\n        list_9abc1d -> biggest_c4c9cb.items\n        list_9abc1d -> smallest_8e0f91.items\n        instance(x: 492, y: 76) sub_f0f3c7 root.Std_k98ojb.Math.Sub {}\n        biggest_c4c9cb.biggest -> sub_f0f3c7.first\n        smallest_8e0f91.smallest -> sub_f0f3c7.second\n        sub_f0f3c7.result -> difference_27806e\n    }\n\n    \n\n    instance(x: 24, y: 11) big_diff_a2f0d1 root.main.big_diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: -17, y: 109, name: \"Max\") max_9e8c96 root.Std_k98ojb.List.Max {}\n        instance(x: 226, y: 110) min_eb7d64 root.Std_k98ojb.List.Min {}\n        instance(x: 236, y: 51) sub_0b1b46 root.Std_k98ojb.Math.Sub {}\n        list_9abc1d -> max_9e8c96.list\n        list_9abc1d -> min_eb7d64.list\n        max_9e8c96.max -> sub_0b1b46.first\n        min_eb7d64.min -> sub_0b1b46.second\n        sub_0b1b46.result -> difference_27806e\n    }\n\n    \n\n    instance(x: 33, y: 30) big_diff_c1fcf1 root.main.big_diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: -15, y: 90) sub_1b3d2a root.Std_k98ojb.Math.Sub {}\n        instance(x: 240, y: 69) max_5ab6a3 root.Std_k98ojb.List.Max {}\n        instance(x: 243, y: 5) min_4f8d84 root.Std_k98ojb.List.Min {}\n        list_9abc1d -> max_5ab6a3.list\n        list_9abc1d -> min_4f8d84.list\n        min_4f8d84.min -> sub_1b3d2a.first\n        max_5ab6a3.max -> sub_1b3d2a.second\n        sub_1b3d2a.result -> difference_27806e\n    }\n\n    \n\n    instance(x: 5, y: 27) big_diff_6a3db9 root.main.big_diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 194, y: 86) sub_11f4d7 root.Std_k98ojb.Math.Sub {}\n        instance(x: -55, y: 29) max_6dfb5f root.Std_k98ojb.List.Max {}\n        instance(x: -63, y: 183) min_2cc4c6 root.Std_k98ojb.List.Min {}\n        list_9abc1d -> max_6dfb5f.list\n        list_9abc1d -> min_2cc4c6.list\n        max_6dfb5f.result -> sub_11f4d7.first\n        min_2cc4c6.result -> sub_11f4d7.second\n        sub_11f4d7.result -> difference_27806e\n    }\n\n    \n\n    instance(x: 26, y: 38) big_diff_e1bc9b root.main.big_diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: -39, y: 112, name: \"max\") max_9e7f1f root.Std_k98ojb.List.Max {}\n        instance(x: -42, y: 272, name: \"min\") min_1a3ed4 root.Std_k98ojb.List.Min {}\n        instance(x: 212, y: 69) sub_8a6ea8 root.Std_k98ojb.Math.Sub {}\n        list_9abc1d -> max_9e7f1f.list\n        list_9abc1d -> min_1a3ed4.list\n        max_9e7f1f.max -> sub_8a6ea8.first\n        min_1a3ed4.min -> sub_8a6ea8.second\n        sub_8a6ea8.result -> difference_27806e\n    }\n\n    \n\n    instance(x: -27, y: 97) big_diff_e5d0e9 root.main.big_diff {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 237, y: 92) sub_6a6e64 root.Std_k98ojb.Math.Sub {}\n        instance(x: 228, y: 3, name: \"biggest\") max_6d7d8b root.Std_k98ojb.List.Max {}\n        instance(x: 228, y: 231, name: \"smallest\") min_0b73b2 root.Std_k98ojb.List.Min {}\n        list_9abc1d -> biggest.list\n        list_9abc1d -> smallest.list\n        biggest.value -> sub_6a6e64.first\n        smallest.value -> sub_6a6e64.second\n        sub_6a6e64.result -> difference_27806e\n    }\n\n    \n\n    instance(x: 2, y: -7) big_diff_1b2a42 root.main.big_diff {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: 140, y: -0) modulo_5f2a01 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -0, y: -0) equal_93e3a3 root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_5f2a01.divisor\n        num_1a1743 -> modulo_5f2a01.value\n        modulo_5f2a01.result -> equal_93e3a3.left\n        0 -> equal_93e3a3.right\n        equal_93e3a3.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -177, y: -1) is_Even_7ef3c6 root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: 136, y: -4) modulo_5a71db root.Std_k98ojb.Math.Modulo {}\n        instance(x: 340, y: -5) equal_4b0d3f root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_5a71db.divisor\n        num_1a1743 -> modulo_5a71db.value\n        modulo_5a71db.result -> equal_4b0d3f.left\n        0 -> equal_4b0d3f.right\n        equal_4b0d3f.result -> output_4ff980\n    }\n\n    \n\n    instance(x: 41, y: 33) is_Even_a5a96a root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: -84, y: 0) modulo_b3a3bc root.Std_k98ojb.Math.Modulo {}\n        instance(x: 96, y: 6) equal_f1d4da root.Std_k98ojb.Logic.Equal {}\n        0 -> equal_f1d4da.right\n        modulo_b3a3bc.result -> equal_f1d4da.left\n        2 -> modulo_b3a3bc.divisor\n        num_1a1743 -> modulo_b3a3bc.value\n        equal_f1d4da.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -301, y: 16) is_Even_1e5da3 root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: 119, y: -1) modulo_1a56ea root.Std_k98ojb.Math.Modulo {}\n        instance(x: 306, y: -2) equal_13a0f1 root.Std_k98ojb.Logic.Equal {}\n        modulo_1a56ea.result -> equal_13a0f1.left\n        0 -> equal_13a0f1.right\n        num_1a1743 -> modulo_1a56ea.value\n        2 -> modulo_1a56ea.divisor\n        equal_13a0f1.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -293, y: -1) is_Even_1bfe0a root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: -36, y: -31) modulo_7f2f54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 109, y: -22) equal_d8eac2 root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_7f2f54.divisor\n        num_1a1743 -> modulo_7f2f54.value\n        0 -> equal_d8eac2.right\n        modulo_7f2f54.result -> equal_d8eac2.left\n        equal_d8eac2.result -> output_4ff980\n    }\n\n    \n\n    instance(x: 36, y: -15) is_Even_c3a6db root.main.is_Even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: -1, y: -4) modulo_f0e4e5 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 134, y: -6) equal_4f7ef9 root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_f0e4e5.divisor\n        num_1a1743 -> modulo_f0e4e5.value\n        0 -> equal_4f7ef9.right\n        modulo_f0e4e5.result -> equal_4f7ef9.left\n        equal_4f7ef9.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -297, y: 20) is_Even_bfc6b3 root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: -110, y: 12, name: \"even\") modulo_74ff9d root.Std_k98ojb.Math.Modulo {}\n        instance(x: -22, y: 21) equal_c6a0f9 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -105, y: -23) if_8d9a6f root.Std_k98ojb.Std.If {}\n        0 -> modulo_74ff9d.divisor\n        num_1a1743 -> modulo_74ff9d.value\n        modulo_74ff9d.result -> equal_c6a0f9.left\n        0 -> equal_c6a0f9.right\n        equal_c6a0f9.result -> if_8d9a6f.predicate\n        if_8d9a6f.value -> output_4ff980\n        if_8d9a6f.else -> true\n        if_8d9a6f.then -> false\n    }\n\n    \n\n    instance(x: -298, y: 6) is_Even_3b2d74 root.main.is_Even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: -52, y: 5) modulo_0fae54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 118, y: 1) equal_86f6df root.Std_k98ojb.Logic.Equal {}\n        num_1a1743 -> modulo_0fae54.value\n        2 -> modulo_0fae54.divisor\n        modulo_0fae54.result -> equal_86f6df.left\n        0 -> equal_86f6df.right\n        equal_86f6df.result -> output_4ff980\n    }\n\n    \n\n    instance(x: 13, y: -16) is_Even_4c4a4c root.main.is_Even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: -70, y: 23) modulo_9f8d1e root.Std_k98ojb.Math.Modulo {}\n        instance(x: -18, y: -5) equal_4c9b4f root.Std_k98ojb.Logic.Equal {}\n        num_1a1743 -> modulo_9f8d1e.value\n        2 -> modulo_9f8d1e.divisor\n        modulo_9f8d1e.result -> equal_4c9b4f.left\n        0 -> equal_4c9b4f.right\n        equal_4c9b4f.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -261, y: 24) is_Even_57ebe1 root.main.is_Even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: -131, y: -2) modulo_b9a6a6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 57, y: -4) equal_9b2f42 root.Std_k98ojb.Logic.Equal {}\n        num_1a1743 -> modulo_b9a6a6.value\n        2 -> modulo_b9a6a6.divisor\n        modulo_b9a6a6.result -> equal_9b2f42.left\n        0 -> equal_9b2f42.right\n        equal_9b2f42.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -223, y: 7) is_Even_9a2b66 root.main.is_Even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 1114, y: 328, name: \"set\") set_0a6c63 root.Std_k98ojb.Data.Set {}\n        instance(x: 1068, y: 133, name: \"characters\") characters_4efbc1 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1124, y: 204) filter_9e5d0c root.Std_k98ojb.Query.Filter {\n            where: \"it in set_0a6c63\"\n        }\n        instance(x: 1099, y: 278) if_7e0a1c root.Std_k98ojb.Std.If {}\n        instance(x: 1064, y: 46) add_b4ce2b root.Std_k98ojb.Data.Set.Add {}\n        characters_4efbc1.characters -> filter_9e5d0c.list\n        characters_4efbc1.string -> string_71a657\n        set_0a6c63 -> add_b4ce2b.set\n        filter_9e5d0c.result -> if_7e0a1c.input\n        add_b4ce2b.item -> if_7e0a1c.then\n        if_7e0a1c.else -> add_b4ce2b.execute\n        filter_9e5d0c.result -> char_f2523c\n        if_7e0a1c.execute -> continue_1914e0\n        execute_97d5d5 -> add_b4ce2b.execute\n    }\n\n    \n\n    instance(x: -40, y: 33) first_repeated_char_3a3e9e root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        setter(x: -10, y: 32, name: \"setter_d6f7e1\") setter_d6f7e1 = list\n        instance(x: 0, y: 0) for_4ad3cd root.Std_k98ojb.Std.For {}\n        getter(x: 131, y: 158, name: \"getter_3a6a26\") getter_3a6a26 = list\n        instance(x: 119, y: 296, name: \"list contains\") contains_6f8a1e root.Std_k98ojb.List.Contains {}\n        instance(x: 100, y: 239) if_8f5e21 root.Std_k98ojb.Std.If {}\n        instance(x: 106, y: 402, name: \"get char\") getat_c9e1d9 root.Std_k98ojb.List.GetAt {}\n        instance(x: 132, y: 499) concat_2dbf92 root.Std_k98ojb.List.Concat {}\n        setter_d6f7e1.execute -> for_4ad3cd.trigger\n        execute_97d5d5 -> setter_d6f7e1.execute\n        List.Empty() -> setter_d6f7e1.new_value\n        getter_3a6a26.value -> contains_6f8a1e.item\n        for_4ad3cd.items -> characters_9a2f8f\n        characters_9a2f8f.characters -> getat_c9e1d9.list\n        0 -> getat_c9e1d9.index\n        getat_c9e1d9.itemAtIndex -> char_f2523c\n        string_71a657 -> characters_9a2f8f.input\n        for_4ad3cd.onItem -> if_8f5e21.execute\n        contains_6f8a1e.result -> if_8f5e21.predicate\n        if_8f5e21.else -> concat_2dbf92.execute\n        concat_2dbf92.items2 -> getter_3a6a26.list\n        for_4ad3cd.item -> concat_2dbf92.items\n        getter_3a6a26.list -> setter_d6f7e1.new_value\n        concat_2dbf92.outputList -> setter_d6f7e1.new_value\n        for_4ad3cd.done -> continue_1914e0\n        if_8f5e21.then -> continue_1914e0\n    }\n\n    \n\n    instance(x: 117, y: 74) FirstRepeatedChar_d9f6ee root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 0, y: 0) characters_5dd3c0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1188, y: 347, name: \"set\") set_f4cf4e root.Std_k98ojb.Data.Set {}\n        instance(x: 1193, y: 146) if_7a8e5f root.Std_k98ojb.Std.If {}\n        instance(x: 1257, y: 248) contains_daf2c7 root.Std_k98ojb.Data.Set.Contains {}\n        instance(x: 1338, y: 337, name: \"iterator\") iterator_3f6cbb root.Std_k98ojb.Data.Iterator {}\n        instance(x: 1348, y: 237) set_add_d1f7a6 root.Std_k98ojb.Data.Set.Add {}\n        instance(x: 1437, y: 325, name: \"end\") end_6a0d72 root.Std_k98ojb.Data.Iterator.End {}\n        instance(x: 1444, y: 227) iterator_Next_1f5b5c root.Std_k98ojb.Data.Iterator.Next {}\n        instance(x: 1517, y: 359) if_1b7f7a root.Std_k98ojb.Std.If {}\n        instance(x: 1578, y: 347) iterator_Current_0fc4f4 root.Std_k98ojb.Data.Iterator.Current {}\n        instance(x: 1617, y: 347) end_8ce9c5 root.Std_k98ojb.Data.Iterator.End {}\n        execute_97d5d5 -> iterator_3f6cbb.start\n        string_71a657 -> characters_5dd3c0.input\n        characters_5dd3c0.characters -> set_f4cf4e.set\n        characters_5dd3c0.characters -> iterator_3f6cbb.list\n        iterator_3f6cbb.current -> set_f4cf4e.get\n        iterator_3f6cbb.current -> contains_daf2c7.item\n        contains_daf2c7.result -> if_7a8e5f.predicate\n        if_7a8e5f.then -> set_add_d1f7a6.execute\n        if_7a8e5f.else -> iterator_Next_1f5b5c.execute\n        set_add_d1f7a6.new_item -> set_add_d1f7a6.item\n        iterator_3f6cbb.current -> set_add_d1f7a6.item\n        iterator_Next_1f5b5c.continue -> if_1b7f7a.execute\n        end_6a0d72.result -> if_1b7f7a.predicate\n        if_1b7f7a.then -> char_f2523c\n        if_1b7f7a.else -> iterator_Next_1f5b5c.execute\n        iterator_3f6cbb.current -> iterator_Current_0fc4f4.current\n        iterator_Current_0fc4f4.result -> char_f2523c\n        iterator_Next_1f5b5c.continue -> continue_1914e0\n        end_8ce9c5.result -> continue_1914e0\n    }\n\n    \n\n    instance(x: 57, y: 26) first_repeated_char_1b1c87 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 0, y: 0) for_0fe0e8 root.Std_k98ojb.Std.For {}\n        instance(x: -35, y: 115) contains_4f3a74 root.Std_k98ojb.Strings.Contains {}\n        instance(x: -110, y: 254) list_add_ebf5c5 root.Std_k98ojb.List.Add {}\n        instance(x: -36, y: 390) notequal_0a6c3e root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 113, y: 359) if_21f5b3 root.Std_k98ojb.Std.If {}\n        instance(x: -42, y: 524) characters_6c6a67 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 105, y: 521) firstitem_6ebd8f root.Std_k98ojb.List.FirstItem {}\n        instance(x: 125, y: 687) ifexpression_1e7c61 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == 0\"\n        }\n        string_71a657 -> for_0fe0e8.items\n        execute_97d5d5 -> for_0fe0e8.trigger\n        for_0fe0e8.item -> characters_6c6a67.input\n        list_add_ebf5c5.list -> contains_4f3a74.search\n        for_0fe0e8.index -> list_add_ebf5c5.index\n        list_add_ebf5c5.item -> list_add_ebf5c5.item\n        firstitem_6ebd8f.list -> list_add_ebf5c5.list\n        characters_6c6a67.characters -> firstitem_6ebd8f.list\n        for_0fe0e8.item -> contains_4f3a74.input\n        contains_4f3a74.result -> notequal_0a6c3e.left\n        0 -> notequal_0a6c3e.right\n        notequal_0a6c3e.result -> if_21f5b3.predicate\n        if_21f5b3.then -> list_add_ebf5c5.execute\n        if_21f5b3.else -> for_0fe0e8.next\n        list_add_ebf5c5.listWithItem -> contains_4f3a74.search\n        characters_6c6a67.characters -> if_21f5b3.execute\n        for_0fe0e8.onItem -> if_21f5b3.execute\n        if_21f5b3.else -> ifexpression_1e7c61.execute\n        0 -> ifexpression_1e7c61.gen_0\n        for_0fe0e8.done -> continue_1914e0\n        for_0fe0e8.index -> ifexpression_1e7c61.a\n        ifexpression_1e7c61.then -> continue_1914e0\n        ifexpression_1e7c61.else -> for_0fe0e8.reset\n        firstitem_6ebd8f.item -> char_f2523c\n    }\n\n    \n\n    instance(x: 120, y: 98) first_repeated_char_e7c1ad root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: -46, y: 101, name: \"chars\") characters_f9c8c6 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -29, y: 256, name: \"map\") map_8b5bdf root.Std_k98ojb.Iteration.Map {}\n        instance(x: 108, y: 332) filter_2b4bea root.Std_k98ojb.Query.Filter {\n            where: \"it != null\"\n        }\n        instance(x: 1239, y: 194, name: \"set\") query_8a3d5f root.Std_k98ojb.Query.Filter {\n            where: \"it[1] != null\"\n        }\n        instance(x: 1265, y: 319, name: \"get item\") getat_f6d81e root.Std_k98ojb.List.GetAt {}\n        instance(x: 1090, y: 440, name: \"find first item\") find_1d4f3b root.Std_k98ojb.Iteration.Find {}\n        instance(x: 1298, y: 493) notnull_a6b2e5 root.Std_k98ojb.Logic.NotEqual {\n            right: \"null\"\n        }\n        instance(x: 1275, y: 569, name: \"get first item\") getat_0f6b68 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 1113, y: 595, name: \"get last item\") lastitem_a3a2ea root.Std_k98ojb.List.LastItem {}\n        instance(x: 108, y: 179) ifexpression_9bca68 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != null\"\n        }\n        instance(x: 1050, y: 104) count_8a8c3f root.Std_k98ojb.Std.Count {}\n        instance(x: 1261, y: 246, name: \"if\") if_8d5a6c root.Std_k98ojb.Std.If {}\n        execute_97d5d5 -> count_8a8c3f.trigger\n        string_71a657 -> characters_f9c8c6.input\n        characters_f9c8c6.characters -> map_8b5bdf.items\n        func() {\n            in(x: -35, y: 280, name: \"current\") property(Any) current_c5d8f9\n\n            out(x: 1275, y: 303, name: \"map_value\") property(List) map_value_5b7bc1\n\n            instance(x: 118, y: 274) contains_3a0ce7 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 418, y: 275) getat_0d8a07 root.Std_k98ojb.List.GetAt {}\n            instance(x: 654, y: 297) ifexpression_e1f9c8 root.Std_k98ojb.Std.IfExpression {\n                expression: \"it != null\"\n            }\n            instance(x: 813, y: 277) list_5f4e1a root.Std_k98ojb.List.Empty {}\n            contains_3a0ce7.input -> current_char_6aa0fc.input\n            map_value_5b7bc1 -> current_char_6aa0fc.list\n            current_char_6aa0fc.item -> contains_3a0ce7.contains\n            current -> contains_3a0ce7.input\n            map_value_5b7bc1 -> getat_0d8a07.list\n            1 -> getat_0d8a07.index\n            getat_0d8a07.itemAtIndex -> current_map_2e0cf3\n            current_map_2e0cf3 -> ifexpression_e1f9c8.gen_0\n            current_map_2e0cf3 -> list_5f4e1a.list\n            list_5f4e1a.list -> ifexpression_e1f9c8.then\n            ifexpression_e1f9c8.else -> map_value_5b7bc1\n        } -> map_8b5bdf.handler\n        map_8b5bdf.output_list -> filter_2b4bea.list\n        filter_2b4bea.result -> query_8a3d5f.list\n        map_8b5bdf.index -> getat_f6d81e.index\n        map_8b5bdf.output_list -> getat_f6d81e.list\n        getat_f6d81e.itemAtIndex -> find_1d4f3b.items\n        func() {\n            in(x: -25, y: 449, name: \"current\") property(List) current_3bb6f0\n\n            out(x: 1306, y: 471, name: \"bool\") property(Bool) bool_2b0ea2\n\n            notnull_a6b2e5.right -> notnull_a6b2e5.left\n            current_3bb6f0 -> notnull_a6b2e5.left\n            notnull_a6b2e5.result -> bool_2b0ea2\n        } -> find_1d4f3b.predicate\n        find_1d4f3b.item -> getat_0f6b68.list\n        getat_0f6b68.index -> lastitem_a3a2ea.list\n        getat_0f6b68.itemAtIndex -> char_f2523c\n        lastitem_a3a2ea.item -> continue_1914e0\n        if_8d5a6c.predicate -> ifexpression_9bca68.expression\n        count_8a8c3f.count -> if_8d5a6c.then\n        count_8a8c3f.count -> if_8d5a6c.else\n        if_8d5a6c.else -> continue_1914e0\n        map_8b5bdf.index -> count_8a8c3f.trigger\n        query_8a3d5f.result -> getat_0f6b68.index\n        getat_f6d81e.itemAtIndex -> getat_0f6b68.index\n        filter_2b4bea.result -> map_8b5bdf.index\n        count_8a8c3f.reset -> continue_1914e0\n        ifexpression_9bca68.then -> filter_2b4bea.input\n        ifexpression_9bca68.else -> continue_1914e0\n    }\n\n    \n\n    instance(x: -6, y: -96) first_repeated_char_2a7c96 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        data_instance(x: 117, y: -25) data_5b2e54  = [seen, next]\n        setter(x: 107, y: 79, name: \"setter_8bce29\") setter_8bce29 = next\n        instance(x: -31, y: 184) if_8e0eb7 root.Std_k98ojb.Std.If {}\n        instance(x: 1009, y: 294, name: \"next char\") getat_6b7ecb root.Std_k98ojb.List.GetAt {}\n        instance(x: 1212, y: 295) getat_1fcf54 root.Std_k98ojb.List.GetAt {}\n        instance(x: 1112, y: 295) getat_f3c8b4 root.Std_k98ojb.List.GetAt {}\n        instance(x: 1072, y: 295) contains_4eb2fa root.Std_k98ojb.Strings.Contains {}\n        getter(x: 120, y: 78, name: \"getter_5a2b4e\") getter_5a2b4e = next\n        instance(x: -37, y: 185) find_e4cfe9 root.Std_k98ojb.Iteration.Find {}\n        setter_8bce29.continue -> continue_1914e0\n        getter_5a2b4e.value -> contains_4eb2fa.contains\n        list_characters_3d2f2e -> getat_f3c8b4.list\n        getter_5a2b4e.value -> getat_f3c8b4.index\n        list_characters_3d2f2e -> getat_6b7ecb.list\n        getter_5a2b4e.value -> getat_6b7ecb.index\n        getter_5a2b4e.value -> getat_1fcf54.index\n        list_characters_3d2f2e -> getat_1fcf54.list\n        contains_4eb2fa.result -> if_8e0eb7.predicate\n        getat_6b7ecb.itemAtIndex -> if_8e0eb7.then\n        getat_f3c8b4.itemAtIndex -> if_8e0eb7.else\n        execute_97d5d5 -> find_e4cfe9.execute\n        list_characters_3d2f2e -> find_e4cfe9.items\n        func() {\n            in(x: -104, y: 106, name: \"current\") property(String) current_0f8bc1\n\n            out(x: 1170, y: 107, name: \"bool\") property(Bool) bool_3c73e7\n\n            getter_5a2b4e.value -> contains_4eb2fa.input\n            current_0f8bc1 -> contains_4eb2fa.contains\n            contains_4eb2fa.result -> bool_3c73e7\n        } -> find_e4cfe9.predicate\n        if_8e0eb7.then -> char_f2523c\n        if_8e0eb7.else -> setter_8bce29.execute\n        getat_1fcst4.itemAtIndex -> setter_8bce29.new_value\n        string_71a657 -> characters_3d2f2e.input\n        characters_3d2f2e.output -> list_characters_3d2f2e\n        if_8e0eb7.else -> find_e4cfe9.execute\n        find_e4cfe9.item -> getat_1fcf54.itemAtIndex\n        if_8e0eb7.else -> continue_1914e0\n    }\n\n    \n\n    instance(x: 31, y: -65) first_repeated_char_d3f8f3 root.main.first_repeated_char {}\n    instance(x: -56, y: -10) characters_3d2f2e root.Std_k98ojb.Strings.Characters {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: -35, y: 31, name: \"characters\") characters_8d0d5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: -24, y: 138) if_6b8d7e root.Std_k98ojb.Std.If {}\n        instance(x: 123, y: 162) getat_0d3c0c root.Std_k98ojb.List.GetAt {}\n        instance(x: -7, y: 259) contains_5d0f4c root.Std_k98ojb.List.Contains {}\n        instance(x: 109, y: 332) getat_bce2f2 root.Std_k98ojb.List.GetAt {}\n        instance(x: 201, y: 399) length_4f7f52 root.Std_k98ojb.List.Length {}\n        instance(x: 109, y: 477) slice_9a1e3b root.Std_k98ojb.List.Slice {}\n        instance(x: 201, y: 555) add_5e56c5 root.Std_k98ojb.List.Add {}\n        instance(x: 294, y: 626) getat_fbb8e3 root.Std_k98ojb.List.GetAt {}\n        instance(x: 109, y: 704) length_ae1b4a root.Std_k98ojb.List.Length {}\n        instance(x: 294, y: 782) sub_ba3f89 root.Std_k98ojb.Math.Sub {}\n        execute_97d5d5 -> characters_8d0d5f.execute\n        string_71a657 -> characters_8d0d5f.input\n        0 -> getat_0d3c0c.index\n        characters_8d0d5f.characters -> getat_0d3c0c.list\n        getat_0d3c0c.itemAtIndex -> getat_bce2f2.list\n        0 -> getat_bce2f2.index\n        getat_bce2f2.itemAtIndex -> contains_5d0f4c.item\n        characters_8d0d5f.characters -> contains_5d0f4c.list\n        contains_5d0f4c.contains -> if_6b8d7e.predicate\n        if_6b8d7e.then -> char_f2523c\n        getat_bce2f2.itemAtIndex -> getat_fbb8e3.list\n        length_4f7f52.list -> length_ae1b4a.list\n        length_4f7f52.length -> sub_ba3f89.first\n        1 -> sub_ba3f89.second\n        sub_ba3f89.result -> getat_fbb8e3.index\n        getat_fbb8e3.itemAtIndex -> add_5e56c5.item\n        characters_8d0d5f.characters -> add_5e56c5.list\n        add_5e56c5.listWithItem -> slice_9a1e3b.list\n        length_ae1b4a.length -> slice_9a1e3b.end\n        1 -> slice_9a1e3b.start\n        slice_9a1e3b.slice -> characters_8d0d5f.characters\n        if_6b8d7e.else -> continue_1914e0\n    }\n\n    \n\n    instance(x: 105, y: -41) first_repeated_char_c7a8b2 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 1122, y: 347, name: \"unique\") filter_3d9c73 root.Std_k98ojb.Query.Filter {\n            where: \"List.Contains(set, it)\"\n        }\n        instance(x: 1088, y: 138) characters_bfae4c root.Std_k98ojb.Strings.Characters {}\n        setter(x: 1200, y: 193, name: \"setter_b5c7e4\") setter_b5c7e4 = set\n        setter(x: -47, y: 33, name: \"setter_4a8b51\") setter_4a8b51 = set\n        instance(x: 1236, y: 197) set_1de9c2 root.Std_k98ojb.List.Set {\n            key: \"set\"\n        }\n        instance(x: 1100, y: 60) count_6f0e50 root.Std_k98ojb.Std.Count {}\n        characters_bfae4c.characters -> filter_3d9c73.list\n        string_71a657 -> characters_bfae4c.string\n        count_6f0e50.count -> continue_1914e0\n        execute_97d5d5 -> count_6f0e50.trigger\n        count_6f0e50.reset -> filter_3d9c73.trigger\n        filter_3d9c73.result -> setter_4a8b51.list\n        setter_4a8b51.execute -> filter_3d9c73.trigger\n        filter_3d9c73.item -> setter_b5c7e4.key\n        filter_3d9c73.item -> set_1de9c2.key\n        setter_b5c7e4.execute -> set_1de9c2.trigger\n        set_1de9c2.result -> setter_b5c7e4.list\n        set_1de9c2.item -> filter_3d9c73.left\n        filter_3d9c73.item -> char_f2523c\n    }\n\n    \n\n    instance(x: 12, y: 37) first_repeated_char_12df2e root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 0, y: -14, name: \"char\") instance_5c0c1b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: 0, y: 0, name: \"elem\") property(String) elem_9d9e78\n\n            out(x: 0, y: 0, name: \"bool\") property(Bool) bool_6f1c98\n\n            instance(x: 0, y: 0) contains_39d1b4 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 0, y: 0) ``char``_a9c61e  <object>  {name: \"char\"}\n            contains_39d1b4.input -> ``char``_a9c61e\n             \u0000",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: -31, y: 71, name: \"character list\") characters_8ef7ca root.Std_k98ojb.Strings.Characters {}\n        instance(x: 107, y: 76, name: \"first occurrence\") find_7ce8ef root.Std_k98ojb.Iteration.Find {}\n        instance(x: 1100, y: 187, name: \"second occurrence\") ``first occurrence_2a7a02`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 1104, y: 356, name: \"output\") if_2a3e01 root.Std_k98ojb.Std.If {}\n        execute_97d5d5 -> characters_8ef7ca.execute\n        string_71a657 -> characters_8ef7ca.input\n        characters_8ef7ca.output -> find_7ce8ef.items\n        find_7ce8ef.item -> ``first occurrence_2a7a02``.items\n        ``first occurrence_2a7a02``.item -> if_2a3e01.else\n        find_7ce8ef.item -> if_2a3e01.then\n        characters_8ef7ca.output -> ``first occurrence_2a7a02``.items\n        ``first occurrence_2a7a02``.item -> char_f2523c\n        find_7ce8ef.item -> char_f2523c\n        if_2a3e01.predicate -> continue_1914e0\n    }\n\n    \n\n    instance(x: 91, y: -35) first_repeated_char_4a3a83 root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        instance(x: 0, y: 0, name: \"Min\") min_f8d1f8 root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0, name: \"List\") filter_6d8eb9 root.Std_k98ojb.Query.Filter {}\n        instance(x: 0, y: 0) for_7e90da root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) ``Min_0`` root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) notequal_6ec5d4 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 0, y: 0) setter_4bae87 root.Std_k98ojb.List.Set {}\n        getter(x: 0, y: 0, name: \"getter_1a3db6\") getter_1a3db6 = output\n        setter(x: 0, y: 0, name: \"setter_8a2d7c\") setter_8a2d7c = output\n        getter_1a3db6.value -> output_ad16ae\n        list_56d273 -> min_f8d1f8.items\n        min_f8d1f8.min -> filter_6d8eb9.gen_1\n        list_56d273 -> filter_6d8eb9.list\n        where_expression_7e90da_left_7e90da_2b1a6e -> filter_6d8eb9.where\n        where_expression_7e90da_right_7e90da_2b1a6e -> filter_6d8eb9.gen_0\n        filter_6d8eb9.result -> for_7e90da.items\n        execute_c23a43 -> for_7e90da.trigger\n        for_7e90da.done -> continue_642adb\n        where_expression_7e90da_left_7e90da_2b1a6e -> notequal_6ec5d4.left\n        for_7e90da.item -> notequal_6ec5d4.right\n        notequal_6ec5d4.result -> ``Min_0``.items\n        ``Min_0``.min -> setter_4bae87.new_value\n        for_7e90da.onItem -> setter_4bae87.execute\n        setter_4bae87.continue -> continue_642adb\n        setter_8a2d7c.new_value -> output_ad16ae\n        ``Min_0``.min -> setter_8a2d7c.execute\n        setter_8a2d7c.continue -> continue_642adb\n    }\n\n    \n\n    instance(x: 1029, y: 296) second_smallest_1b0d0f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        instance(x: -106, y: 27) min_c7e0a8 root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) remove_ee0d0b root.Std_k98ojb.List.Remove {}\n        instance(x: -12, y: -23) max_cbd4e8 root.Std_k98ojb.List.Max {}\n        instance(x: -3, y: -44) remove_f6a0b1 root.Std_k98ojb.List.Remove {}\n        instance(x: 102, y: -8) min_66c0a2 root.Std_k98ojb.List.Min {}\n        list_56d273 -> min_c7e0a8.items\n        min_c7e0a8.min -> remove_ee0d0b.index\n        list_56d273 -> remove_ee0d0b.list\n        remove_ee0d0b.listWithoutItem -> max_cbd4e8.list\n        list_56d273 -> remove_f6a0b1.list\n        max_cbd4e8.max -> remove_f6a0b1.index\n        remove_f6a0b1.listWithoutItem -> min_66c0a2.items\n        min_66c0a2.min -> output_ad16ae\n        execute_c23a43 -> remove_ee0d0b.execute\n        remove_ee0d0b.continue -> remove_f6a0b1.execute\n        remove_f6a0b1.continue -> continue_642adb\n    }\n\n    \n\n    instance(x: 110, y: 134) second_smallest_f0cf3f root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        instance(x: -105, y: 76) for_c1a0d7 root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_5c1df5\") getter_5c1df5 = second\n        instance(x: 0, y: 0) filter_3bb4a4 root.Std_k98ojb.Query.Filter {\n            where: \"it < second\"\n        }\n        instance(x: -52, y: 146) listmin_daf4c7 root.Std_k98ojb.List.Min {}\n        setter(x: 0, y: 0, name: \"setter_8b4c3f\") setter_8b4c3f = second\n        instance(x: 0, y: 0) if_0e1f7a root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) notequal_8ba4d2 root.Std_k98ojb.Logic.NotEqual {}\n        setter_8b4c3f.continue -> for_c1a0d7.reset\n        list_56d273 -> for_c1a0d7.items\n        execute_c23a43 -> setter_8b4c3f.execute\n        9999999999999999 -> setter_8b4c3f.new_value\n        for_c1a0d7.done -> continue_642adb\n        getter_5c1df5.value -> output_ad16ae\n        for_c1a0d7.item -> listmin_daf4c7.items\n        for_c1a0d7.onItem -> if_0e1f7a.execute\n        listmin_daf4c7.min -> notequal_8ba4d2.left\n        getter_5c1df5.value -> notequal_8ba4d2.right\n        notequal_8ba4d2.result -> if_0e1f7a.predicate\n        if_0e1f7a.else -> for_c1a0d7.next\n        if_0e1f7a.then -> filter_3bb4a4.execute\n        filter_3bb4a4.list -> listmin_daf4c7.items\n        filter_3bb4a4.result -> setter_8b4c3f.new_value\n    }\n\n    \n\n    instance(x: 1099, y: 292) second_smallest_0e3b49 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        setter(x: 0, y: 0, name: \"setter_2e9a8c\") setter_2e9a8c = min\n        instance(x: 110, y: 69) min_b3b7b7 root.Std_k98ojb.List.Min {}\n        setter(x: 1112, y: 138, name: \"setter_6f7c68\") setter_6f7c68 = min\n        instance(x: 1112, y: 270) min_0f7d23 root.Std_k98ojb.List.Min {}\n        getter(x: 1125, y: 288, name: \"getter_2ef2b2\") getter_2ef2b2 = min\n        list_56d273 -> min_b3b7b7.items\n        min_b3b7b7.min -> setter_2e9a8c.new_value\n        list_56d273 -> min_0f7d23.items\n        getter_2ef2b2.value -> output_ad16ae\n        execute_c23a43 -> setter_2e9a8c.execute\n        list_56d273 -> min_0f7d23.items\n        min_b3b7b7.min -> min_0f7d23.items\n        setter_6f7c68.continue -> continue_642adb\n        setter_2e9a8c.continue -> setter_6f7c68.execute\n    }\n\n    \n\n    instance(x: -37, y: -8) second_smallest_c2e6e1 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        instance(x: -103, y: 17) min_5c6d8e root.Std_k98ojb.List.Min {}\n        instance(x: 4, y: 17) filter_0c3b54 root.Std_k98ojb.Query.Filter {\n            where: \"it != min\"\n        }\n        instance(x: 208, y: 17) min_6c0b4f root.Std_k98ojb.List.Min {}\n        getter(x: 0, y: 0, name: \"getter_3a9a94\") getter_3a9a94 = min\n        setter(x: 0, y: 0, name: \"setter_4e8f9e\") setter_4e8f9e = min\n        instance(x: -103, y: 187) ifexpression_30f1a6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"list.length < 2\"\n        }\n        getter(x: 112, y: 271, name: \"getter_a3b3a7\") getter_a3b3a7 = output\n        setter(x: 375, y: -157, name: \"setter_ea1b41\") setter_ea1b41 = output\n        setter(x: 378, y: 279, name: \"setter_4a0e6d\") setter_4a0e6d = output\n        list_56d273 -> min_5c6d8e.items\n        min_5c6d8e.min -> getter_3a9a94.value\n        getter_3a9a94.value -> setter_4e8f9e.new_value\n        execute_c23a43 -> setter_4e8f9e.execute\n        list_56d273 -> filter_0c3b54.list\n        getter_3a9a94.value -> filter_0c3b54.gen_0\n        min_5c6d8e.min -> filter_0c3b54.gen_1\n        filter_0c3b54.result -> min_6c0b4f.items\n        min_6c0b4f.min -> getter_a3b3a7.value\n        getter_a3b3a7.value -> setter_4a0e6d.new_value\n        list_56d273 -> ifexpression_30f1a6.gen_0\n        list_56d273.length -> ifexpression_30f1a6.gen_1\n        execute_c23a43 -> ifexpression_30f1a6.execute\n        ifexpression_30f1a6.then -> setter_ea1b41.execute\n        -1 -> setter_ea1b41.new_value\n        ifexpression_30f1a6.else -> setter_4a0e6d.execute\n        getter_a3b3a7.value -> output_ad16ae\n        setter_ea1b41.continue -> continue_642adb\n        setter_4a0e6d.continue -> continue_642adb\n    }\n\n    \n\n    instance(x: 1071, y: -2) second_smallest_1f2f49 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        instance(x: -124, y: 23, name: \"Instance\") for_d4c5b2 root.Std_k98ojb.Std.For {}\n        setter(x: 0, y: 0, name: \"setter_8bce29\") setter_8bce29 = min\n        instance(x: -31, y: 171) if_8e0eb7 root.Std_k98ojb.Std.If {}\n        setter(x: 1009, y: -52, name: \"setter_3a9a02\") setter_3a9a02 = min\n        instance(x: 0, y: 0, name: \"Instance\") ifexpression_6f1d28 root.Std_k98ojb.Std.IfExpression {}\n        getter(x: 0, y: 0, name: \"getter_9bc4ee\") getter_9bc4ee = min\n        setter(x: 0, y: 0, name: \"setter_5e9e64\") setter_5e9e64 = min\n        list_56d273 -> for_d4c5b2.items\n        for_d4c5b2.onItem -> if_8e0eb7.execute\n        for_d4c5b2.index -> ifexpression_6f1d28.gen_1\n        ifexpression_6f1d28.gen_0 -> ifexpression_6f1d28.gen_1\n        for_d4c5b2.item -> ifexpression_6f1d28.gen_0\n        1 -> ifexpression_6f1d28.expression\n        ifexpression_6f1d28.result -> if_8e0eb7.predicate\n        if_8e0eb7.else -> for_d4c5b2.next\n        for_d4c5b2.done -> continue_642adb\n        execute_c23a43 -> setter_8bce29.execute\n        getter_9bc4ee.value -> setter_3a9a02.new_value\n        for_d4c5b2.item -> setter_3a9a02.new_value\n        for_d4c5b2.onItem -> setter_5e9e64.execute\n        for_d4c5b2.item -> setter_5e9e64.new_value\n        getter_9bc4ee.value -> output_ad16ae\n        if_8e0eb7.then -> setter_5e9e64.execute\n        setter_3a9a02.continue -> continue_642adb\n        setter_8bce29.new_value -> min\n        setter_8bce29.continue -> continue_642adb\n        setter_5e9e64.continue -> continue_642adb\n    }\n\n    \n\n    instance(x: 1030, y: 314) second_smallest_7c6ed7 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        setter(x: 0, y: 0, name: \"setter_6e7b4e\") setter_6e7b4e = second\n        setter(x: 0, y: 0, name: \"setter_2b9c53\") setter_2b9c53 = first\n        instance(x: 34, y: 112) for_1b9d91 root.Std_k98ojb.Std.For {}\n        getter(x: 414, y: 252, name: \"getter_3b5d41\") getter_3b5d41 = second\n        getter(x: 420, y: 140, name: \"getter_2f2f1f\") getter_2f2f1f = first\n        setter(x: 765, y: 140, name: \"setter_3e6d4e\") setter_3e6d4e = first\n        setter(x: 765, y: 252, name: \"setter_3d0c2f\") setter_3d0c2f = second\n        instance(x: 423, y: 17) min_8dca5e root.Std_k98ojb.Math.Min {}\n        instance(x: 423, y: -59) notequal_bfe53d root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 624, y: 37) if_eb61f2 root.Std_k98ojb.Std.If {}\n        setter_6e7b4e.continue -> for_1b9d91.reset\n        list_56d273 -> for_1b9d91.items\n        execute_c23a43 -> setter_6e7b4e.execute\n        list_56d273 -> setter_2b9c53.items\n        -1 -> setter_2b9c53.new_value\n        -1 -> setter_6e7b4e.new_value\n        for_1b9d91.done -> continue_642adb\n        getter_3b5d41.value -> output_ad16ae\n        for_1b9d91.item -> min_8dca5e.first\n        getter_2f2f1f.value -> min_8dca5e.second\n        min_8dca5e.result -> for_1b9d91.onItem\n        for_1b9d91.index -> notequal_bfe53d.index\n        for_1b9d91.index -> notequal_bfe53d.it\n        for_1b9d91.onItem -> notequal_bfe53d.left\n        getter_2f2f1f.value -> notequal_bfe53d.right\n        notequal_bfe53d.result -> if_eb61f2.predicate\n        if_eb61f2.else -> for_1b9d91.next\n        if_eb61f2.then -> setter_3d0c2f.execute\n        for_1b9d91.onItem -> setter_3d0c2f.new_value\n        if_eb61f2.then -> setter_3e6d4e.execute\n        for_1b9d91.onItem -> setter_3e6d4e.new_value\n        setter_3d0c2f.continue -> continue_642adb\n        setter_3e6d4e.continue -> continue_642adb\n    }\n\n    \n\n    instance(x: 1221, y: 761) second_smallest_93c7fe root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        instance(x: 0, y: 0, name: \"min_value\") data_a5efad  I. Write  \t{eq1: \"\\left [ \\frac{1}{\\sqrt{2}}\\left ( \\hat{i}+\\hat{j} \\right ) \\right ]\\frac{\\hbar}{\\sqrt{2}} \\psi_{211}(\\vec{r})=\\left ( \\frac{1}{\\sqrt{2}}\\left ( \\hat{i}+\\hat{j} \\right ) \\cdot \\vec{L} \\right )\\psi_{211}(\\vec{r})=-i\\hbar\\psi_{211}(\\vec{r})\t\" }\t{eq2: \"\\left [ \\frac{1}{\\sqrt{2}}\\left ( \\hat{i}+\\hat{j} \\right ) \\right ]\\frac{\\hbar}{\\sqrt{2}} \\psi_{211}(\\vec{r})=\\left ( \\frac{1}{\\sqrt{2}}\\left ( \\hat{i}+\\hat{j} \\right ) \\cdot \\vec{L} \\right )\\psi_{211}(\\vec{r})=i\\hbar\\psi_{211}(\\vec{r})\" }\t\t->  Instruction for \t->  Reproducing \t-1->  Textbook Section\n->  Constraint 1 \t->  Discuss the \t->  Impact of \t->  Financial \t-2->  Crises \t-1->  on \t-2->  Poverty and \t->  Inequality\n-2->  Constraint 2 \t->  Utilize \t-2->  Real-1->  World \t-2->  Examples \t-2->  from \t-2->  Mexico \t-2->  and \t-2->  East \t-2->  Asia\n-3->  Constraint 3 \t->  Include \t-3->  Statistical \t-3->  Data \t-3->  and \t-3->  Citations\n-4->  Constraint 4 \t->  Maintain \t-4->  Academic \t-4->  Style \t-4->  and \t-4->  Structure\n-5->  Constraint 5 \t->  Address \t-5->  Specific \t-5->  Financial \t-5->  Instruments \t-5->  and \t-5->  Policies\n\n1->  Solution \t-1->\n \tFollowing \t-2->  the \t-3->  instruction \t-4->  above \t-5->  will \t-6->  lead \t-7->  to \t-8->  the \t-9->  reconstruction \t-10->  of \t-11->  the \t-12->  textbook \t-13->  section \t-14->  as \t-15->  follows \t-16->  while \t-17->  keeping \t-18->  all \t-19->  details \t-20->  intact \t-21->  except \t-22->  the \t-23->  page \t-24->  number \t-25->  to \t-26->  create \t-27->  an \t-28->  answer \t-29->  that \t-30->  is \t-31->  more \t-32->  than \t-33->   \re2000 words \t->  long \t-34->  while \t-35->  preserving \t-36->  all \t-37->  the \t-38->  numbers \t-39->  keywords \t-40->  and \t-41->  formulas \t-42->  from \t-43->  the \t-44->  textbook \t-45->  section.\n  \n \tBegin \t-46->  your \t-47->  answer \t-48->  with \t-49->  the \t-50->  phrase \t-51->  as \t-52->  follows \t-53->  and \t-54->  ensure \t-55->  to \t-56->  adhere \t-57->  to \t-58->  all \t-59->  constraints \t-60->  mentioned. \tConstraints \t-61->  such \t-62->  as \t-63->  the \t-64->  topic \t-65->  of \t-66->  the \t-67->  textbook \t-68->  section \t-69->  should \t-70->  be \t-71->  considered \t-72->  thoughtfully \t-73->  to \t-74->  make \t-75->  the \t-76->  instruction \t-77->  useful \t-78->  for \t-79->  the \t-80->  reader \t-81->  in \taccurately \t-82->  reconstructing \t-83->  the \t-84->  textbook \t-85->  section. \n\n-  >  2000 words long answer while keeping **all** the numbers, keywords and formulas from the textbook section:\n\n<|textbook_begin|>\n\n**1.4. The Impacts of Financial Crises on Poverty and Inequality**\n\nThe repercussions of financial upheavals are not uniformly distributed among various economic strata, with pronounced effects felt by the impoverished. In Mexico, post the 1994 financial downturn, the income of the bottom quintile was diminished by 15% between 1989 and 1994, and the nation experienced a rise in inequality, indicated by an increase in the Gini coefficient from 0.50 to 0.55. This situation was exacerbated when poverty rates climbed from 29.4% in 1989 to 37.2% in 1994. The East Asian financial crisis that commenced in 1997 also precipitated a surge in poverty, escalating from 15.2% in 1996 to 17.8% in 1998, along with a deterioration in inequality.\n\n**Policy Responses and Lessons from Past Crises**\n\nThe aftermath of financial crises brings with it the opportunity for significant structural reforms and the introduction of new policies to mitigate their adverse effects on poverty and inequality. The Asian crisis of 1997-98, for instance, saw substantial changes in financial sector regulations and the establishment of social safety nets aimed at protecting the vulnerable. Similarly, the Mexican crisis prompted enhancements in public finance management and social insurance programs.\n\nThe 1997 East Asian crisis is often cited as an instance where the impact on poverty and inequality could have been mitigated with better-designed safety nets. Despite this, the crisis led to a substantial reduction in poverty rates in the affected countries by the end of 1999, showcasing the resilience and potential for recovery post-crisis.\n\n**Strategies for Mitigating Crisis Impacts**\n\nTo alleviate the impacts of financial crises on poverty and inequality, a multifaceted approach is required, incorporating both immediate relief measures and long-term structural reforms. This includes the implementation of social safety nets, like unemployment insurance and cash transfers, to support the most vulnerable populations during crises. Additionally, reforms in financial sector regulation and the establishment of mechanisms for early crisis detection and response are crucial.\n\n**Conclusion**\n\nFinancial crises pose significant threats to poverty and inequality levels, necessitating a proactive and comprehensive policy response to mitigate their impacts. Learning from past crises, such as those in Mexico and East Asia, can guide the development of more effective strategies for protecting the most vulnerable segments of society and fostering a more resilient economic environment.\n\n<|textbook_end|>\n\n**References**\n\n- Lustig, N. (1995). The Impact of Economic Crises on Poverty and Income Distribution",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        data_instance(x: -155, y: 53) data_8b8c5f  = [list, smallest, second_smallest]\n        instance(x: 1042, y: 285) firstitem_3f4f16 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 1042, y: 149) remove_b1c41f root.Std_k98ojb.List.Remove {}\n        instance(x: -152, y: 147) min_1b1e97 root.Std_k98ojb.List.Min {}\n        instance(x: -152, y: -36) min_86d96e root.Std_k98ojb.List.Min {}\n        instance(x: 1042, y: 147) listlength_6c7f8e root.Std_k98ojb.List.Length {}\n        instance(x: 1042, y: 50) if_1a8ee1 root.Std_k98ojb.Std.If {}\n        data_8b8c5f -> remove_b1c41f.list\n        data_8b8c5f -> min_1b1e97.items\n        data_8b8c5f -> min_86d96e.items\n        data_8b8c5f -> listlength_6c7f8e.list\n        firstitem_3f4f16.item -> remove_b1c41f.index\n        min_1b1e97.min -> data_8b8c5f.smallest\n        remove_b1c41f.listWithoutItem -> min_86d96e.items\n        remove_b1c41f.listWithoutItem -> listlength_6c7f8e.list\n        min_86d96e.min -> data_8b8c5f.second_smallest\n        execute_c23a43 -> if_1a8ee1.execute\n        listlength_6c7f8e.length -> if_1a8ee1.predicate\n        1 -> if_1a8ee1.then\n        if_1a8ee1.then -> remove_b1c41f.execute\n        remove_b1c41f.continue -> continue_642adb\n        min_86d96e.min -> output_ad16ae\n    }\n\n    \n\n    instance(x: -26, y: 94) second_smallest_11d2f6 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        instance(x: -137, y: -8, name: \"Min1\") min_9c1f71 root.Std_k98ojb.List.Min {}\n        instance(x: -121, y: 120, name: \"Min2\") min_1c09e3 root.Std_k98ojb.List.Min {}\n        data_instance(x: -18, y: 82, name: \"data_e3eb3b\") data_e3eb3b = [second, third]\n        instance(x: 1, y: 140) map_1c7e0c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 282, y: 143, name: \"Greater\") greater_7cb4b5 root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 513, y: 143, name: \"List\") filter_f4f5d8 root.Std_k98ojb.Query.Filter {\n            where: \"it > min1\"\n        }\n        list_56d273 -> min_9c1f71.items\n        min_9c1f71.min -> greater_7cb4b5.gen_0\n        min_9c1f71.min -> map_1c7e0c.items\n        func() {\n            in(x: -131, y: 56, name: \"it\") property(Number) it_d1f76c\n\n            out(x: 412, y: 59, name: \"\") property(Number) _6c4e9b\n\n            instance(x: 12, y: 39) pow_7e3d91 root.Std_k98ojb.Math.Pow {}\n            it_d1f76c -> pow_7e3d91.x\n            2 -> pow_7e3d91.y\n            pow_7e3d91.result -> _6c4e9b\n        } -> map_1c7e0c.handler\n        map_1c7e0c.output_list -> filter_f4f5d8.list\n        greater_7cb4b5.expression -> filter_f4f5d8.where\n        list_56d273 -> min_1c09e3.items\n        filter_f4f5d8.result -> min_1c09e3.items\n        min_1c09e3.min -> output_ad16ae\n        execute_c23a43 -> min_9c1f71.execute\n        min_9c1f71.min -> data_e3eb3b.second\n        filter_f4f5d8.result -> data_e3eb3b.third\n        data_e3eb3b -> flatten_0c2e2c.items\n        flatten_0c2e2c.flattened -> continue_642adb\n    }\n\n    \n\n    instance(x: -5, y: 86) second_smallest_2a2f8a root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 13475,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 122, y: -68, name: \"intersection\") intersection_7b62e8 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 442, y: -63) notempty_d2c6b0 root.Std_k98ojb.List.NotEmpty {}\n        list1_016b2e -> intersection_7b62e8.left\n        list2_c8f404 -> intersection_7b62e8.right\n        intersection_7b62e8.intersect -> notempty_d2c6b0.list\n        notempty_d2c6b0.isEmpty -> output_879de6\n    }\n\n    \n\n    instance(x: 3, y: 12) common_element_b5dbf8 root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 126, y: -107, name: \"intersect\") intersection_9c6f2f root.Std_k98ojb.Sets.Intersection {}\n        list1_016b2e -> intersection_9c6f2f.left\n        list2_c8f404 -> intersection_9c6f2f.right\n        instance(x: 424, y: -75) notempty_2c0bc8 root.Std_k98ojb.List.NotEmpty {}\n        intersection_9c6f2f.intersect -> notempty_2c0bc8.list\n        notempty_2c0bc8.isEmpty -> output_879de6\n    }\n\n    \n\n    instance(x: -271, y: -16) common_element_5d6a4f root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n\tfunc(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n\t\tin(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n\t\tin(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n\t\tout(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n\t\tinstance(x: 107, y: 15) contains_3b7ee5 root.Std_k98ojb.List.Contains {}\n\t\tinstance(x: 361, y: 18) for_f6be9b root.Std_k98ojb.Std.For {}\n\t\tinstance(x: 359, y: -62) getat_0ec5dc root.Std_k98ojb.List.GetAt {}\n\t\tinstance(x: 108, y: -108) intersection_0a0e96 root.Std_k98ojb.Sets.Intersection {}\n\t\tinstance(x: 357, y: -115) not_8e57a0 root.Std_k98ojb.Logic.Not {}\n\t\tinstance(x: -0, y: -126) empty_bdfbf7 root.Std_k98ojb.List.Empty {}\n\t\tlist1_016b2e -> for_f6be9b.items\n\t\tfor_f6be9b.item -> getat_0ec5dc.item\n\t\tlist1_016b2e -> getat_0ec5dc.list\n\t\tgetat_0ec5dc.itemAtIndex -> contains_3b7ee5.item\n\t\tlist2_c8f404 -> contains_3b8ee5.list\n\t\tcontains_3b8ee5.is_contained -> for_f6be9b.onItem\n\t\tfor_f6be9b.done -> intersection_0a0e96.left\n\t\tfor_f6be9b.index -> getat_0ec5dc.index\n\t\tempty_bdfbf7.value -> intersection_0a0e96.right\n\t\tintersection_0a0e96.intersect -> not_8e57a0.input\n\t\tnot_8e57a0.result -> output_879de6\n\t\tfor_f6be9b.trigger 0 -> for_f6be9b.reset\n\t}\n\t\n\tinstance(x: -63, y: -45) common_element_1c4f04 root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 146, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 360, y: -95) notempty_c6f82a root.Std_k98ojb.List.NotEmpty {}\n        list1_016b2e -> intersection_c7c7e6.left\n        list2_c8f404 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> notempty_c6f82a.list\n        notempty_c6f82a.isEmpty -> output_879de6\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_ac7dfb root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 138, y: -97) intersection_3a8b01 root.Std_k98ojb.Sets.Intersection {}\n        list1_016b2e -> intersection_3a8b01.left\n        list2_c8f404 -> intersection_3a8b01.right\n        instance(x: 388, y: -101) not_7b8c8d root.Std_k98ojb.Logic.Not {}\n        instance(x: 387, y: 32) isempty_bf1c6f root.Std_k98ojb.List.IsEmpty {}\n        intersection_3a8b01.intersect -> isempty_bf1c6f.list\n        isempty_bf1c6f.isEmpty -> not_7b8c8d.input\n        not_7b8c8d.result -> output_879de6\n    }\n\n    \n\n    instance(x: -290, y: -42) common_element_a4a9d9 root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 101, y: -71, name: \"intersection\") intersection_3d9f6d root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -20, y: -3, name: \"Is intersection list empty\") is_empty_ebc3d2 root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 328, y: -69, name: \"list1 not empty\") not_empty_cde7b6 root.Std_k98ojb.List.NotEmpty {}\n        instance(x: 317, y: 32, name: \"list2 not empty\") not_empty_7d2b9d root.Std_k98ojb.List.NotEmpty {}\n        instance(x: 407, y: -70, name: \"are list not empty\") and_eeefb8 root.Std_k98ojb.Logic.And {}\n        list1_016b2e -> intersection_3d9f6d.left\n        list2_c8f404 -> intersection_3d9f6d.right\n        intersection_3d9f6d.intersect -> is_empty_ebc3d2.list\n        list1_016b2e -> not_empty_cde7b6.list\n        list2_c8f404 -> not_empty_7d2b9d.list\n        not_empty_7d2b9d.isEmpty -> and_eeefb8.right\n        not_empty_cde7b6.isEmpty -> and_eeefb8.left\n        and_eeefb8.result -> is_empty_ebc3d2.execute\n        is_empty_ebc3d2.isEmpty -> output_879de6\n    }\n\n    \n\n    instance(x: -251, y: -64) common_element_3ad3cc root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 109, y: -61) intersection_a5a1d4 root.Std_k98ojb.Sets.Intersection {}\n        list1_016b2e -> intersection_a5a1d4.left\n        list2_c8f404 -> intersection_a5a1d4.right\n        instance(x: 373, y: -70) notempty_8a23ef root.Std_k98ojb.List.NotEmpty {}\n        intersection_a5a1d4.intersect -> notempty_8a23ef.list\n        notempty_8a23ef.isEmpty -> output_879de6\n    }\n\n    \n\n    instance(x: -270, y: -63) common_element_7abcb2 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: -24, y: -34, name: \"Common elements\") intersection_51a5dc root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 322, y: -36) notempty_f1e9a6 root.Std_k98ojb.List.NotEmpty {}\n        list1_016b2e -> intersection_51a5dc.left\n        list2_c8f404 -> intersection_51a5dc.right\n        intersection_51a5dc.intersect -> notempty_f1e9a6.list\n        notempty_f1e9a6.isEmpty -> output_879def\n    }\n\n    \n\n    instance(x: -136, y: -52) common_element_d3ef7e root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 1037, y: -66) intersection_8d5d5a root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 777, y: -61) not_6c0a5a root.Std_k98ojb.Logic.Not {}\n        list1_016b2e -> intersection_8d5d5a.left\n        list2_c8f404 -> intersection_8d5d5a.right\n        intersection_8d5d5a.intersect -> output_879de6\n        not_6c0a5a.result -> output_879de6\n        intersection_8d5d5a.intersect -> not_6c0a5a.input\n    }\n\n    \n\n    instance(x: -234, y: -11) common_element_8dd9ed root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 118, y: -70, name: \"intersection\") intersection_b3f9e7 root.Std_k98ojb.Sets.Intersection {}\n        list1_016b2e -> intersection_b3f9e7.left\n        list2_c8f404 -> intersection_b3f9e7.right\n        instance(x: 118, y: 4) notempty_8ce3c7 root.Std_k98ojb.List.NotEmpty {}\n        intersection_b3f9e7.intersect -> notempty_8ce3c7.list\n        notempty_8ce3c7.isNot -> output_879de6\n    }\n\n    \n\n    instance(x: -273, y: -22) common_element_7f1f1c root.main.common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 212, y: 157) find_5dfe01 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -0, y: 7) not_93e3a3 root.Std_k98ojb.Logic.Not {}\n        instance(x: -287, y: -16) filter_9c8d0a root.Std_k98ojb.Query.Filter {\n            where: \"it + 1 in list\"\n        }\n        instance(x: 528, y: 112) if_a6d3e7 root.Std_k98ojb.Std.If {}\n        instance(x: -287, y: 138) filter_2d0c4a root.Std_k98ojb.Query.Filter {\n            where: \"it - 1 in list\"\n        }\n        instance(x: -287, y: 282, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: 528, y: 312) if_0efbe3 root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -192, y: 44, name: \"current\") property(Number) current_5a7a2c\n\n            out(x: 705, y: 49, name: \"bool\") property(Bool) bool_aaf1c3\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_5a7a2c -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_aaf1c3\n        } -> find_5dfe01.predicate\n        list_faf6c2 -> find_5dfe01.items\n        find_5dfe01.item -> filter_9c8d0a.list\n        list_faf6c2 -> filter_2d0c4a.list\n        filter_9c8d0a.result -> if_a6d3e7.predicate\n        filter_2d0c4a.result -> if_0efbe3.predicate\n        list_faf6c2 -> filter_4d4556.list\n        filter_4d4556.result -> find_5dfe01.items\n        if_a6d3e7.else -> not_93e3a3.input\n        if_0efbe3.else -> not_93e3a3.input\n        not_93e3a3.result -> output_a2b59d\n        if_a6d3e7.then -> output_a2b59d\n        if_0efbe3.then -> output_a2b59d\n    }\n\n    \n\n    instance(x: -108, y: 349) check_consecutive_dca3ec root.main.check_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 118, y: 208) map_7a4d65 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 487, y: 121) lessthan_b3da06 root.Std_k98ojb.Math.LessThan {}\n        instance(x: 727, y: 130) notequal_8e4ee6 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 0, y: -61) for_9f7b67 root.Std_k98ojb.Std.For {}\n        instance(x: 310, y: 125) if_ea0aef root.Std_k98ojb.Std.If {}\n        instance(x: 577, y: -1) and_e2c92a root.Std_k98ojb.Logic.And {}\n        instance(x: 848, y: 96) if_0e8a2a root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -109, y: 34, name: \"item\") property(Number) item_8b8d68\n\n            out(x: 374, y: 29, name: \"output\") property(Number) output_7ef5d3\n\n            instance(x: 78, y: 21) add_e4d58e root.Std_k98ojb.Math.Add {}\n            1 -> add_e4d58e.second\n            item_8b8d68 -> add_e4d58e.first\n            add_e4d58e.result -> output_7ef5d3\n        } -> map_7a4d65.handler\n        list_faf6c2 -> map_7a4d65.items\n        for_9f7b67.items -> list_faf6c2\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_a8c2fd\n\n            out(x: 705, y: -10, name: \"output\") property(Bool) output_4e2b69\n\n            instance(x: 226, y: -15) sub_36dcab root.Std_k98ojb.Math.Sub {}\n            instance(x: 461, y: -14) lessthan_5e1e2f root.Std_k98ojb.Math.LessThan {}\n            instance(x: 700, y: -14) notequal_8be0c8 root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 226, y: -46) sub_7b2d8b root.Std_k98ojb.Math.Sub {}\n            instance(x: 462, y: -47) lessthan_9e9e2f root.Std_k98ojb.Math.LessThan {}\n            instance(x: 705, y: -47) notequal_c7ae6b root.Std_k98ojb.Logic.NotEqual {}\n            _index_a8c2fd -> sub_36dcab.first\n            for_9f7b67.index -> sub_36dcab.second\n            lessthan_5e1e2f.result -> notequal_8be0c8.left\n            lessthan_9e9e2f.result -> notequal_c7ae6b.left\n            sub_7b2d8b.result -> lessthan_9e9e2f.left\n            sub_36dcab.result -> lessthan_5e1e2f.left\n            for_9f7b67.index -> sub_7b2d8b.first\n            1 -> sub_7b2d8b.second\n            notequal_8be0c8.right -> lessthan_5e1e2f.right\n            0 -> lessthan_9e9e2f.right\n            notequal_c7ae6b.right -> lessthan_9e9e2f.right\n            0 -> notequal_8be0c8.right\n            notequal_c7ae6b.result -> and_e2c92a.right\n            notequal_8be0c8.result -> and_e2c92a.left\n            and_e2c92a.result -> if_ea0aef.predicate\n            if_ea0aef.then -> for_9f7b67.next\n            if_ea0aef.else -> if_0e8a2a.execute\n            for_9f7b67.onItem -> if_ea0aef.execute\n            for_9f7b67.done -> if_0e8a2a.execute\n            if_ea0aef.value -> output_a2b59d\n        } -> for_9f7b67.handler\n        map_7a4d65.output_list -> for_9f7b67.items\n        lessthan_b3da06.result -> notequal_8e4ee6.left\n        for_9f7b67.item -> lessthan_b3da06.left\n        for_9f7b67.index -> lessthan_b3da06.right\n        notequal_8e4ee6.right -> lessthan_b3da06.right\n        0 -> notequal_8e4ee6.right\n        notequal_8e4ee6.result -> and_e2c92a.left\n        if_0e8a2a.else -> output_a2b59d\n    }\n\n    \n\n    instance(x: -55, y: 529) check_consecutive_3a58a8 root.main.check_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 186, y: 127) filter_9b3df6 root.Std_k98ojb.Query.Filter {\n            where: \"it[1] - it[0] == 1\"\n        }\n        instance(x: 577, y: 130) length_7d7d1e root.Std_k98ojb.List.Length {}\n        instance(x: 755, y: 134) equal_4b6eb4 root.Std_k98ojb.Logic.Equal {}\n        func() {\n            in(x: -24, y: 29, name: \"list\") property(List) _list_0e96e4\n\n            out(x: 536, y: 27, name: \"output\") property(List) _output_0b4ebc\n\n            instance(x: -0, y: -5) slice_9f3f65 root.Std_k98ojb.List.Slice {}\n            1 -> slice_9f3f65.start\n            -1 -> slice_9f3f65.end\n            _list_0e96e4 -> slice_9f3f65.list\n            slice_9f3f65.result -> _output_0b4ebc\n        } -> filter_9b3df6.list\n        list_faf6c2 -> func_.list\n        func_.output -> filter_9b3df6.result\n        length_7d7d1e.length -> equal_4b6eb4.left\n        1 -> equal_4b6eb4.right\n        filter_9b3df6.result -> length_7d7d1e.list\n        equal_4b6eb4.result -> output_a2b59d\n    }\n\n    \n\n    instance(x: -60, y: 253) check_consecutive_0d5e9c root.main.check_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 114, y: 165) lessthan_2c6e5f root.Std_k98ojb.Math.LessThan {}\n        instance(x: 353, y: 164) notequal_1f4e83 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 622, y: 162) lessthan_82a3c3 root.Std_k98ojb.Math.LessThan {}\n        instance(x: 862, y: 164) and_2c9eef root.Std_k98ojb.Logic.And {}\n        instance(x: -291, y: 25) zip_7d5a64 root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 100, y: 25) ifexpression_4dbd5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"first <= second && second - first == 1\"\n        }\n        instance(x: -273, y: 129) filter_51fde5 root.Std_k98ojb.Query.Filter {}\n        instance(x: 105, y: 128) not_57df76 root.Std_k98ojb.Logic.Not {}\n        list_faf6c2 -> zip_7d5a64.left\n        list_faf6c2 -> zip_7d5a64.right\n        zip_7d5a64.zipped -> filter_51fde5.list\n        lessthan_2c6e5f.result -> ifexpression_4dbd5f.gen_0\n        lessthan_82a3c3.result -> ifexpression_4dbd5f.gen_1\n        zip_7d5a64.zipped -> ifexpression_4dbd5f.gen_2\n        ifexpression_4dbd5f.result -> and_2c9eef.left\n        not_57df76.result -> and_2c9eef.right\n        filter_51fde5.result -> not_57df76.input\n        zip_7d5a64.zipped -> filter_51fde5.where\n        zip_7d5a64.leftItem -> lessthan_2c6e5f.left\n        zip_7d5a64.rightItem -> lessthan_2c6e5f.right\n        zip_7d5a64.rightItem -> lessthan_82a3c3.left\n        zip_7d5a64.leftItem -> lessthan_82a3c3.right\n        lessthan_2c6e5f.left -> notequal_1f4e83.left\n        lessthan_82a3c3.right -> notequal_1f4e83.right\n        1 -> notequal_1f4e83.right\n        notequal_1f4e83.result -> lessthan_82a3c3.left\n        and_2c9eef.result -> output_a2b59d\n    }\n\n    \n\n    instance(x: -61, y: -10) check_consecutive_f8b3b1 root.main.check_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 117, y: 157) filter_0fcd4a root.Std_k98ojb.Query.Filter {\n            where: \"it != null && it != null\"\n        }\n        instance(x: 465, y: 142) and_d2e6f0 root.Std_k98ojb.Logic.And {}\n        instance(x: -292, y: 70) zip_6bfb59 root.Std_k98ojb.Iteration.Zip {}\n        instance(x: -293, y: 242) map_7b8c8d root.Std_k98ojb.Iteration.Map {}\n        instance(x: -81, y: 247) not_a1c6ce root.Std_k98ojb.Logic.Not {}\n        instance(x: -292, y: 351) not_e8dce5 root.Std_k98ojb.Logic.Not {}\n        instance(x: -292, y: 467) find_1e3eb7 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 1044, y: 131) if_6b0f67 root.Std_k98ojb.Std.If {}\n        list_faf6c2 -> map_7b8c8d.items\n        func() {\n            in(x: -110, y: 186, name: \"current\") property(Number) current_b0ddc4\n\n            out(x: 403, y: 193, name: \"\") property(Number) _c9b3f3\n\n            instance(x: 36, y: 179) add_0f3b7e root.Std_k98ojb.Math.Add {}\n            1 -> add_0f3b7e.second\n            current_b0ddc4 -> add_0f3b7e.first\n            add_0f3b7e.result -> _c9b3f3\n        } -> map_7b8c8d.handler\n        list_faf6c2 -> zip_6bfb59.left\n        map_7b8c8d.output_list -> zip_6bfb59.right\n        zip_6bfb59.zipped -> filter_0fcd4a.list\n        func() {\n            in(x: -87, y: 114, name: \"current\") property(List) current_1f7f01\n\n            out(x: 387, y: 118, name: \"\") property(Bool) _c1e7a3\n\n            instance(x: 79, y: 101) sub_1f5a76 root.Std_k98ojb.Math.Sub {}\n            sub_1f5a76.result -> and_d2e6f0.left\n            current_1f7f01 -> sub_1f5a76.first\n            current_1f7f01 -> sub_1f5a76.second\n            1 -> and_d2e6f0.right\n            and_d2e6f0.result -> not_a1c6ce.input\n            not_a1c6ce.result -> _c1e7a3\n        } -> filter_0fcd4a.handler\n        filter_0fcd4a.result -> find_1e3eb7.items\n        func() {\n            in(x: -188, y: 336, name: \"current\") property(List) current_8eb1a8\n\n            out(x: 600, y: 346, name: \"\") property(Bool) _c5aa7f\n\n            instance(x: 42, y: 319) equal_5eb9c3 root.Std_k98ojb.Logic.Equal {}\n            current_8eb1a8 -> equal_5eb9c3.left\n            current_8eb1a8 -> equal_5eb9c3.right\n            equal_5eb9c3.result -> not_e8dce5.input\n            not_e8dce5.result -> _c5aa7f\n        } -> find_1e3eb7.predicate\n        find_1e3eb7.item -> if_6b0f67.predicate\n        not_e8dce5.result -> if_6b0f67.value\n        if_6b0f67.then -> output_a2b59d\n        if_6b0f67.else -> output_a2b59d\n    }\n\n    \n\n    instance(x: -74, y: 502) check_consecutive_6c91ea root.main.check_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 205, y: 107) if_6a4be3 root.Std_k98ojb.Std.If {}\n        instance(x: -273, y: 62, name: \"map\") map_c5d36f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 555, y: 107) lessthan_ba3b5f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -273, y: 226, name: \"sort\") sort_2f6d97 root.Std_k98ojb.List.Sort {}\n        instance(x: -251, y: 345, name: \"diff\") map_6c4b6b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 556, y: 325) length_0e8e99 root.Std_k98ojb.List.Length {}\n        instance(x: -256, y: 457, name: \"diff_list\") filter_6c0cc8 root.Std_k98ojb.Query.Filter {\n            where: \"it != 1\"\n        }\n        instance(x: 568, y: 459) isempty_7f1f59 root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 576, y: 578) if_6e5ab8 root.Std_k98ojb.Std.If {}\n        instance(x: 555, y: 492) lessthan_1b53e8 root.Std_k98ojb.Math.LessThanOrEqual {}\n        func() {\n            in(x: -121, y: 90, name: \"num\") property(Number) num_5f6c6e\n\n            out(x: 384, y: 67, name: \"num\") property(Number) num_dcc6eb\n\n            instance(x: 97, y: 64) sub_ae2d3d root.Std_k98ojb.Math.Sub {}\n            1 -> sub_ae2d3d.second\n            num_5f6c6e -> sub_ae2d3d.first\n            sub_ae2d3d.result -> num_dcc6eb\n        } -> map_c5d36f.handler\n        list_faf6c2 -> map_c5d36f.items\n        sort_2f6d97.list -> map_c5d36f.items\n        sort_2f6d97.result -> list_faf6c2\n        map_c5d36f.output_list -> map_6c4b6b.items\n        func() {\n            in(x: -120, y: 340, name: \"num1\") property(Number) num1_3d5e5f\n\n            in(x: -121, y: 461, name: \"num2\") property(Number) num2_9d7df2\n\n            out(x: 397, y: 428, name: \"num\") property(Number) num_4dc8c9\n\n            instance(x: 96, y: 426) sub_e3a87e root.Std_k98ojb.Math.Sub {}\n            num2_9d7df2 -> sub_e3a87e.first\n            num1_3d5e5f -> sub_e3a87e.second\n            sub_e3a87e.result -> num_4dc8c9\n        } -> map_6c4b6b.handler\n        map_6c4b6b.output_list -> filter_6c0cc8.list\n        map_6c4b6b.output_list -> lessthan_1b53e8.left\n        1 -> lessthan_1b53e8.right\n        lessthan_1b53e8.result -> if_6e5ab8.predicate\n        length_0e8e99.list -> map_6c4b6b.items\n        map_c5d36f.output_list -> length_0e8e99.list\n        filter_6c0cc8.result -> if_6e5ab8.if_false\n        if_6e5ab8.then -> isempty_7f1f59.list\n        if_6e5ab8.if_false -> isempty_7f1f59.list\n        isempty_7f1f59.isEmpty -> if_6a4be3.predicate\n        if_6e5ab8.if_false -> lessthan_ba3b5f.left\n        1 -> lessthan_ba3b5f.right\n        lessthan_ba3b5f.result -> if_6a4be3.value\n        filter_6c0cc8.result -> if_6a4be3.if_false\n        if_6a4be3.then -> output_a2b59d\n        0 -> if_6a4be3.if_false\n        if_6a4be3.if_false -> output_a2b59d\n    }\n\n    \n\n    instance(x: 26, y: 640) check_consecutive_4ed4c9 root.main.check_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_faf6c2 -> filter_7b3b7b.list\n        filter_7b3b7b.result -> length_8166b0.list\n        2 -> equal_f89569.left\n        length_8166b0.length -> equal_f89569.right\n        equal_f89569.result -> output_a2b59d\n    }\n\n    \n\n    instance(x: -84, y: 59) check_consecutive_30eb9e root.main.check_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: -132, y: 167) length_0f1db3 root.Std_k98ojb.List.Length {}\n        instance(x: -9, y: 171) filter_e0cc0c root.Std_k98ojb.Query.Filter {\n            where: \"it + 1 == next\"\n        }\n        instance(x: 246, y: 125) length_f1e9a6 root.Std_k98ojb.List.Length {}\n        instance(x: 531, y: 125) equal_fbe1d7 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 751, y: 122) not_2f5b49 root.Std_k98ojb.Logic.Not {}\n        length_f1e9a6.length -> equal_fbe1d7.left\n        length_0f1db3.length -> equal_fbe1d7.right\n        equal_fbe1d7.result -> not_2f5b49.input\n        not_2f5b49.result -> output_a2b59d\n        list_faf6c2 -> length_0f1db3.list\n        instance(x: -221, y: 172) zip_74b88d root.Std_k98ojb.Iteration.Zip {}\n        instance(x: -222, y: 72, name: \"zip_5c8b8b\") zip_5c8b8b root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 105, y: 81) add_5eb6bf root.Std_k98ojb.Math.Add {}\n        zip_5c8b8b.zipped -> filter_e0cc0c.list\n        add_5eb6bf.result -> zip_5c8b8b.output_0\n        zip_5c8b8b.output_1 -> add_5eb6bf.second\n        zip_5c8b8b.output_0 -> add_5eb6bf.first\n        list_faf6c2 -> zip_5c8b8b.left\n        list_faf6c2 -> zip_74b88d.left\n        zip_74b88d.output_1 -> zip_5c8b8b.right\n    }\n\n    \n\n    instance(x: -82, y: -7) check_consecutive_5e81c0 root.main.check_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 1047, y: 104) not_8a03f0 root.Std_k98ojb.Logic.Not {}\n        instance(x: 768, y: 109) for_9b6a67 root.Std_k98ojb.Std.For {}\n        instance(x: 1109, y: 116) sub_9d6d6a root.Std_k98ojb.Math.Sub {}\n        instance(x: 1336, y: 117) notequal_2a1d3f root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 1000, y: 137) if_8a6f3c root.Std_k98ojb.Std.If {}\n        instance(x: 1301, y: 134) add_2ffcf4 root.Std_k98ojb.Math.Add {}\n        list_faf6c2 -> for_9b6a67.items\n        for_9b6a67.index -> add_2ffcf4.first\n        1 -> add_2ffcf4.second\n        add_2ffcf4.result -> sub_9d6d6a.first\n        for_9b6a67.item -> sub_9d6d6a.second\n        sub_9d6d6a.result -> notequal_2a1d3f.left\n        for_9b6a67.item -> notequal_2a1d3f.right\n        notequal_2a1d3f.result -> if_8a6f3c.predicate\n        for_9b6a67.onItem -> if_8a6f3c.execute\n        if_8a6f3c.else -> not_8a03f0.input\n        if_8a6f3c.value -> output_a2b59d\n        not_8a03f0.result -> output_a2b59d\n        for_9b6a67.done -> not_8a03f0.execute\n        for_9b6a67.reset -> if_8a6f3c.execute\n        if_8a6f3c.then -> for_9b6a67.next\n    }\n\n    \n\n    instance(x: -77, y: -7) check_consecutive_7f2c3b root.main.check_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 127, y: 164) map_d5d2c4 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 473, y: 126) zip_74da24 root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 796, y: 126) lessthanor_6c85cf root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 798, y: 5) if_9f4ed1 root.Std_k98ojb.Std.If {}\n        instance(x: 1103, y: 121) and_8c8e9d root.Std_k98ojb.Logic.And {}\n        instance(x: 1398, y: -18) filter_8f8d97 root.Std_k98ojb.Query.Filter {}\n        instance(x: -265, y: -11) for_7f1f5c root.Std_k98ojb.Std.For {}\n        list_faf6c2 -> for_7f1f5c.items\n        for_7f1f5c.item -> map_d5d2c4.item\n        func() {\n            in(x: -117, y: 47, name: \"x\") property(Number) x_b6f5e3\n\n            out(x: 354, y: 22, name: \"\") property(List) _c2d9a9\n\n            instance(x: 103, y: 26) generaterange_0edfb5 root.Std_k98ojb.List.GenerateRange {}\n            0 -> generaterange_0edfb5.from\n            1 -> generaterange_0edfb5.to\n            generaterange_0edfb5.list -> _c2d9a9\n        } -> map_d5d2c4.handler\n        map_d5d2c4.output_list -> zip_74da24.left\n        map_d5d2c4.output_list -> zip_74da24.right\n        zip_74da24.zipped -> for_7f1f5c.index\n        zip_74da24.zipped -> lessthanor_6c85cf.left\n        zip_74da24.zipped -> and_8c8e9d.left\n        zip_74da24.zipped -> if_9f4ed1.predicate\n        zip_74da24.zipped -> if_9f4ed1.value\n        zip_74da24.zipped -> filter_8f8d97.list\n        lessthanor_6c85cf.result -> and_8c8e9d.right\n        1 -> lessthanor_6c85cf.right\n        func() {\n            in(x: -192, y: -26, name: \"current\") property(List) current_49f7a6\n\n            out(x: 705, y: -25, name: \"bool\") property(Bool) bool_6bfa23\n\n            instance(x: 81, y: -21) add_9a05b1 root.Std_k98ojb.Math.Add {}\n            instance(x: 323, y: -25) equal_2ee5d7 root.Std_k98ojb.Logic.Equal {}\n            current_49f7a6.gen_0 -> add_9a05b1.first\n            current_49f7a6.gen_1 -> add_9a05b1.second\n            add_9a05b1.result -> equal_2ee5d7.left\n            current_49f7a6.gen_2 -> equal_2ee5d7.right\n            equal_2ee5d7.result -> bool_6bfa23\n        } -> filter_8f8d97.handler\n        if_9f4ed1.else -> output_a2b59d\n        and_8c8e9d.result -> if_9f4ed1.predicate\n        for_7f1f5c.onItem -> if_9f4ed1.execute\n        for_7f1f5c.done -> output_a2b59d\n        filter_8f8d97.result -> output_a2b59d\n        for_7f1f5c.next -> if_9f4ed1.then\n    }\n\n    \n\n    instance(x: -74, y: 289) check_consecutive_0b3d9a root.main.check_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1727, y: 1027, name: \"contains\") contains_8d6c0f root.Std_k98ojb.List.Contains {}\n        instance(x: -1174, y: 1069) count_8bf8f2 root.Std_k98ojb.Std.Count {}\n        instance(x: -1727, y: 1173) ifexpression_b9a2ed root.Std_k98ojb.Std.IfExpression {\n            expression: \"contains == true\"\n        }\n        instance(x: -1728, y: 1275, name: \"ifexpression\") ifexpression_a87e4e root.Std_k98ojb.Std.If {}\n        instance(x: -1206, y: 1313) length_bdbdb6 root.Std_k98ojb.List.Length {}\n        instance(x: -1505, y: 1247, name: \"IfExpression\") ifexpression_7c5e52 root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == length\"\n        }\n        instance(x: -1519, y: 1115, name: \"For\") for_61baa8 root.Std_k98ojb.Std.For {}\n        sub_list_f9cb80 -> contains_8d6c0f.list\n        main_list_25f077 -> contains_8d6c0f.item\n        contains_8d6c0f.is_contained -> ifexpression_b9a2ed.gen_1\n        ifexpression_b9a2ed.value -> ifexpression_a87e4e.input\n        ifexpression_a87e4e.then -> count_8bf8f2.trigger\n        ifexpression_a87e4e.else -> continue_d72620\n        execute_68160a -> ifexpression_a87e4e.execute\n        count_8bf8f2.count -> ifexpression_7c5e52.gen_0\n        length_bdbdb6.list -> length_bdbdb6.list\n        sub_list_f9cb80 -> length_bdbdb6.list\n        length_bdbdb6.length -> ifexpression_7c5e52.gen_1\n        ifexpression_7c5e52.value -> ifexpression_a87e4e.then\n        ifexpression_a87e4e.continue -> for_61baa8.next\n        for_61baa8.items -> main_list_25f077\n        for_61baa8.onItem -> contains_8d6c0f.item\n        for_61baa8.done -> continue_d72620\n        contains_8d6c0f.is_contained -> ifexpression_a87e4e.then\n        ifexpression_a87e4e.then -> ifexpression_a87e4e.then\n        for_61baa8.reset -> count_8bf8f2.reset\n        ifexpression_a87e4e.then -> for_61baa8.trigger\n        ifexpression_a87e4e.else -> ifexpression_a87e4e.else\n        ifexpression_7c5e52.then -> output_ebc87c\n        ifexpression_7c5e52.else -> ifexpression_a87e4e.else\n    }\n\n    \n\n    instance(x: -1820, y: 1183) is_Sub_Array_b0dbfc root.main.is_Sub_Array {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1318, y: 1040) intersection_1cdd6f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -1180, y: 1097) length_0aef49 root.Std_k98ojb.List.Length {}\n        instance(x: -1188, y: 1208) equal_ae4d0c root.Std_k98ojb.Logic.Equal {}\n        instance(x: -1322, y: 1148) contains_b9bfbe root.Std_k98ojb.List.Contains {}\n        main_list_25f077 -> intersection_1cdd6f.left\n        sub_list_f9cb80 -> intersection_1cdd6f.right\n        intersection_1cdd6f.intersection -> length_0aef49.list\n        length_0aef49.length -> equal_ae4d0c.left\n        sub_list_f9cb80 -> contains_b9bfbe.list\n        sub_list_f9cb80 -> equal_ae4d0c.right\n        contains_b9bfbe.is_contained -> output_ebc87c\n        equal_ae4d0c.result -> contains_b9bfbe.item\n        execute_68160a -> continue_d72620\n    }\n\n    \n\n    instance(x: -1318, y: 1040) is_Sub_Array_9c85dc root.main.is_Sub_Array {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n\tfunc(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n\t\tin(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n\t\tin(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n\t\tin(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n\t\tout(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n\t\tout(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n\t\tinstance(x: -1692, y: 1014, name: \"sub_list_index\") count_7d3d9f root.Std_k98ojb.Std.Count {}\n\t\tinstance(x: -1487, y: 1161, name: \"sub_list\") map_8dcb9a root.Std_k98ojb.Iteration.Map {}\n\t\tinstance(x: -1370, y: 1161) getat_6a5e54 root.Std_k98ojb.List.GetAt {}\n\t\tinstance(x: -1611, y: 1007) map_9e4f03 root.Std_k98ojb.Iteration.Map {}\n\t\tinstance(x: -1497, y: 1014) getat_6cc7e7 root.Std_k98ojb.List.GetAt {}\n\t\tinstance(x: -1633, y: 1146, name: \"main_list\") getat_5dc4a3 root.Std_k98ojb.List.GetAt {}\n\t\tinstance(x: -1768, y: 1153) getat_4f3c1d root.Std_k98ojb.List.GetAt {}\n\t\tinstance(x: -1844, y: 1014, name: \"sub_list_index\") if_8b5f50 root.Std_k98ojb.Std.If {\n\t\t\tinput: \"sub_list_index.count == sub_list.length\"\n\t\t}\n\t\tinstance(x: -1296, y: 1161, name: \"sub_list\") if_8e4e5d root.Std_k98ojb.Std.If {\n\t\t\tinput: \"index == sub_list.length\"\n\t\t}\n\t\tinstance(x: -1341, y: 1161, name: \"sub_list\") if_2ab7f2 root.Std_k98ojb.Std.If {\n\t\t\tinput: \"sub_list[index] == main_list[i]\"\n\t\t}\n\t\tinstance(x: -1726, y: 1007, name: \"sub_list_index\") if_5c2b7a root.Std_k98ojb.Std.If {\n\t\t\tinput: \"sub_list_index.count == 0\"\n\t\t}\n\t\tinstance(x: -1186, y: 1161, name: \"sub_list\") if_5c2b1c root.Std_k98ojb.Std.If {\n\t\t\tinput: \"sub_list[index] == main_list[i]\"\n\t\t}\n\t\tinstance(x: -1658, y: 1146, name: \"main_list\") if_2e3d9e root.Std_k98ojb.Std.If {\n\t\t\tinput: \"index == main_list.length\"\n\t\t}\n\t\tinstance(x: -1384, y: 1161, name: \"sub_list\") if_4ebcf7 root.Std_k98ojb.Std.If {\n\t\t\tinput: \"sub_list[index] != main_list[i]\"\n\t\t}\n\t\tinstance(x: -1658, y: 1146, name: \"main_list\") if_15b9ec root.Std_k98ojb.Std.If {\n\t\t\tinput: \"index < main_list.length\"\n\t\t}\n\t\tinstance(x: -1852, y: 1007, name: \"sub_list_index\") if_1a5a1d root.Std_k98ojb.Std.If {\n\t\t\tinput: \"sub_list_index.count != 0\"\n\t\t}\n\t\t0 -> count_7d3d9f.count\n\t\tmain_list_25f077 -> getat_5dc4a3.list\n\t\tcount_7d3d9f.count -> getat_5dc4a3.index\n\t\tgetat_5dc4a3.itemAtIndex -> getat_4f3c1d.new_value\n\t\tmain_list_25f077 -> map_9e4f03.items\n\t\tgetat_4f3c1d.new_value -> map_9e4f03.item\n\t\texecute_68160a -> map_9e4f03.execute\n\t\tmap_9e4f03.output_list -> getat_6cc7e7.list\n\t\tcount_7d3d9f.reset -> count_7d3d9f.reset\n\t\t0 -> getat_6cc7e7.index\n\t\tgetat_6cc7e7.itemAtIndex -> count_7d3d9f.new_value\n\t\tmain_list_25f077 -> getat_6a5e54.list\n\t\tcount_7d3d9f.count -> getat_6a5e54.index\n\t\tgetat_6a5e54.itemAtIndex -> getat_8bfa9e.new_value\n\t\tsub_list_f9cb80 -> map_8dcb9a.items\n\t\tgetat_8bfa9e.new_value -> map_8dcb9a.item\n\t\texecute_68160a -> map_8dcb9a.execute\n\t\tmap_8dcb9a.output_list -> getat_6a5e54.list\n\t\tgetat_6a5e54.itemAtIndex -> getat_c8a3ab.new_value\n\t\t0 -> getat_c8a3ab.index\n\t\tgetat_c8a3ab.itemAtIndex -> getat_6cc7e7.new_value\n\t\tgetat_c8a3ab.itemAtIndex -> map_9e4f03.index\n\t\tgetat_c8a3ab.itemAtIndex -> if_2e3d9e.gen_0\n\t\tgetat_c8a3ab.itemAtIndex -> if_15b9ec.gen_0\n\t\tgetat_c8a3ab.itemAtIndex -> if_4ebcf7.gen_0\n\t\tgetat_c8a3ab.itemAtIndex -> if_5c2b1c.gen_0\n\t\tgetat_c8a3ab.itemAtIndex -> if_8e4e5d.gen_0\n\t\tgetat_6a5e54.itemAtIndex -> getat_8bfa9e.index\n\t\tgetat_6a5e54.itemAtIndex -> if_8e4e5d.gen_1\n\t\tgetat_6a5e54.itemAtIndex -> if_5c2b1c.gen_1\n\t\tgetat_6a5e54.itemAtIndex -> if_4ebcf7.gen_1\n\t\tcount_7d3d9f.new_value -> if_5c2b7a.gen_0\n\t\tgetat_6a5e54.itemAtIndex -> if_5c2b7a.gen_1\n\t\tcount_7d3d9f.new_value -> if_8b5f50.gen_0\n\t\tcount_7d3d9f.new_value -> if_1a5a1d.gen_0\n\t\tif_8b5f50.then -> count_7d3d9f.reset\n\t\tif_8b5f50.then -> map_9e4f03.reset\n\t\tif_8b5f50.then -> continue_d72620\n\t\tif_1a5a1d.then -> count_7d3d9f.reset\n\t\tif_1a5a1d.then -> getat_6cc7e7.reset\n\t\tif_1a5a1d.then -> map_9e4f03.reset\n\t\tif_1a5a1d.then -> continue_d72620\n\t\tif_15b9ec.then -> if_2e3d9e.execute\n\t\tif_15b9ec.else -> if_4ebcf7.execute\n\t\tif_2e3d9e.then -> count_7d3d9f.reset\n\t\tif_2e3d9e.then -> getat_6cc7e7.reset\n\t\tif_2e3d9e.then -> map_9e4f03.reset\n\t\tif_2e3d9e.then -> continue_d72620\n\t\tif_2e3d9e.else -> if_15b9ec.next\n\t\tif_4ebcf7.then -> count_7d3d9f.reset\n\t\tif_4ebcf7.then -> getat_6cc7e7.reset\n\t\tif_4ebcf7.then -> map_9e4f03.reset\n\t\tif_4ebcf7.then -> continue_d72620\n\t\tif_4ebcf7.else -> if_15b9ec.next\n\t\tif_5c2b1c.then -> if_5c2b7a.execute\n\t\tif_5c2b1c.else -> if_8e4e5d.execute",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: 123, y: 1031, name: \"find sub_list from main_list\") find_4f6e49 root.Std_k98ojb.Iteration.Find {\n            execute: \"reset\"\n        }\n        instance(x: 1163, y: 1056) and_2fa3a1 root.Std_k98ojb.Logic.And {}\n        instance(x: 1163, y: 1179) isnotnull_1a3a93 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1298, y: 1051) issublist_0fbc9c root.Std_k98ojb.List.Contains {}\n        instance(x: 1241, y: 1106, name: \"is null\") isnull_9f7b7c root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 123, y: 1136) issublist_b5e8fe root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -184, y: 1112, name: \"main_list_slice\") property(List) main_list_slice_5f4a8d\n\n            out(x: 1106, y: 1068, name: \"bool\") property(Bool) bool_2ef9d8\n\n            instance(x: 56, y: 1071) contains_9c7be1 root.Std_k98ojb.List.Contains {}\n            main_list_slice_5f4a8d -> contains_9c7be1.list\n            sub_list_f9cb80 -> contains_9c7be1.item\n            contains_9c7be1.is_contained -> bool_2ef9d8\n        } -> find_4f6e49.predicate\n        issublist_b5e8fe.is_contained -> and_2fa3a1.left\n        issublist_0fbc9c.is_contained -> and_2fa3a1.right\n        and_2fa3a1.result -> output_ebc87c\n        find_4f6e49.item -> main_list_slice_5f4a8d\n        main_list_25f077 -> find_4f6e49.items\n        isnull_9f7b7c.isEmpty -> isnotnull_1a3a93.input\n        find_4f6e49.item -> issublist_b5e8fe.list\n        sub_list_f9cb80 -> issublist_0fbc9c.list\n        execute_68160a -> find_4f6e49.execute\n        find_4f6e49.nothingFound -> continue_d72620\n        isnull_9f7b7c.isEmpty -> continue_d72620\n    }\n\n    \n\n    instance(x: 1263, y: 1142) is_sub_array_3b8c4e root.main.is_Sub_Array {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1531, y: 1071) count_a0e2d2 root.Std_k98ojb.Std.Count {}\n        instance(x: -1531, y: 1053) for_ee1e76 root.Std_k98ojb.Std.For {}\n        instance(x: -1531, y: 1133) if_a3bce9 root.Std_k98ojb.Std.If {}\n        instance(x: -1531, y: 1064) getat_2dc1d2 root.Std_k98ojb.List.GetAt {}\n        instance(x: -1531, y: 1121) if_82efc6 root.Std_k98ojb.Std.If {}\n        instance(x: -1531, y: 1137) if_86d4dc root.Std_k98ojb.Std.If {}\n        instance(x: -1531, y: 1091) set_7d1b4e root.Std_k98ojb.Std.Set {}\n        instance(x: -1531, y: 1179) and_6b7c52 root.Std_k98ojb.Logic.And {}\n        count_a0e2d2.count -> for_ee1e76.items\n        for_ee1e76.item -> getat_2dc1d2.index\n        main_list_25f077 -> getat_2dc1d2.list\n        getat_2dc1d2.itemAtIndex -> if_a3bce9.input\n        getat_2dc1d2.itemAtIndex -> if_82efc6.input\n        0 -> if_82efc6.input\n        if_82efc6.else -> set_7d1b4e.execute\n        sub_list_f9cb80 -> set_7d1b4e.new_value\n        if_a3bce9.else -> if_86d4dc.input\n        if_a3bce9.then -> if_86d4dc.input\n        count_a0e2d2.reset -> for_ee1e76.reset\n        count_a0e2d2.increment -> for_ee1e76.next\n        if_86d4dc.then -> and_6b7c52.left\n        if_86d4dc.else -> and_6b7c52.right\n        execute_68160a -> count_a0e2d2.reset\n        and_6b7c52.result -> output_ebc87c\n        and_6b7c52.right -> if_82efc6.then\n        and_6b7c52.right -> if_a3bce9.then\n        for_ee1e76.onItem -> getat_2dc1d2.execute\n        if_82efc6.then -> getat_2dc1d2.execute\n        and_6b7c52.left -> if_82efc6.then\n        for_ee1e76.done -> continue_d72620\n        for_ee1e76.done -> and_6b7c52.right\n        if_82efc6.else -> and_6b7c52.left\n        if_82efc6.else -> continue_d72620\n        if_a3bce9.then -> if_86d4dc.execute\n        if_86d4dc.else -> getat_2dc1d2.execute\n        for_ee1e76.index -> getat_2dc1d2.index\n    }\n\n    \n\n    instance(x: -1531, y: 1071) is_Sub_Array_8c61b1 root.main.is_Sub_Array {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1496, y: 1123, name: \"Loop through the main list\") for_d1a3f9 root.Std_k98ojb.Std.For {}\n        instance(x: -1224, y: 1074, name: \"Slice the main list\") slice_4b6c4d root.Std_k98ojb.List.Slice {}\n        instance(x: -1461, y: 1169, name: \"Check if the sliced main list and sub list is equal\") eq_f0f5e7 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -1266, y: 1278, name: \"Return true\") if_f6b2e9 root.Std_k98ojb.Std.If {}\n\n        func() {\n            in(x: -1322, y: 1217, name: \"If main list length is less than sub list length\") property(Bool) ifCondition_5ccba4\n\n            out(x: -1070, y: 1290, name: \"Return false\") trigger() returnFalse_fce3e7\n\n            instance(x: -1092, y: 1274) count_0efb8e root.Std_k98ojb.Std.Count {}\n            instance(x: -1215, y: 1257) listLength_1a3dd1 root.Std_k98ojb.List.Length {}\n            main_list_25f077 -> listLength_1a3dd1.list\n            instance(x: -1179, y: 1243) listLength_f2d8a2 root.Std_k98ojb.List.Length {}\n            sub_list_f9cb80 -> listLength_f2d8a2.list\n            listLength_1a3dd1.length -> count_0efb8e.count\n            count_0efb8e.value -> ifCondition_5ccba4\n            listLength_f2d8a2.length -> count_0efb8e.reset\n            ifCondition_5ccba4 -> if_f6b2e9.input\n            returnFalse_fce3e7 -> continue_d72620\n            if_f6b2e9.else -> returnFalse_fce3e7\n        } -> if_f6b2e9\n\n        instance(x: -1226, y: 1183) len_c4d4c1 root.Std_k98ojb.List.Length {}\n        sub_list_f9cb80 -> len_c4d4c1.list\n        len_c4d4c1.length -> slice_4b6c4d.end\n        for_d1a3f9.index -> slice_4b6c4d.start\n        main_list_25f077 -> slice_4b6c4d.list\n        eq_f0f5e7.left -> slice_4b6c4d.slice\n        eq_f0f5e7.right -> sub_list_f9cb80\n        eq_f0f5e7.result -> if_f6b2e9.then\n        execute_68160a -> for_d1a3f9.reset\n        for_d1a3f9.done -> continue_d72620\n        if_f6b2e9.then -> continue_d72620\n        for_d1a3f9.next -> eq_f0f5e7.execute\n        eq_f0f5e7.value -> output_ebc87c\n    }\n\n    instance(x: -1794, y: 1009) isSubArray_e3eaa9 root.main.is_Sub_Array {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: 1075, y: 1104) ifexpression_2c8e5c root.Std_k98ojb.Std.IfExpression {\n            expression: \"current_index == 0\"\n        }\n        instance(x: 1040, y: 1132) ifexpression_7d2a7a root.Std_k98ojb.Std.IfExpression {\n            expression: \"is_sub_array\"\n        }\n        ifexpression_2c8e5c.then -> ifexpression_7d2a7a.execute\n        ifexpression_2c8e5c.else -> ifexpression_7d2a7a.then\n        instance(x: 1368, y: 1108) getat_7e59e9 root.Std_k98ojb.List.GetAt {}\n        instance(x: 1399, y: 1031) filter_1bf7a9 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1584, y: 1066) contains_2c63d4 root.Std_k98ojb.List.Contains {}\n        instance(x: 1762, y: 1105) and_1d4f74 root.Std_k98ojb.Logic.And {}\n        instance(x: 1937, y: 1149) count_6a1b6e root.Std_k98ojb.Std.Count {}\n        instance(x: 2013, y: 1144) equals_16b1ec root.Std_k98ojb.Logic.Equal {}\n        instance(x: 2028, y: 1119) sub_4dd4c6 root.Std_k98ojb.Math.Sub {}\n        instance(x: 2143, y: 1164) and_6e6d52 root.Std_k98ojb.Logic.And {}\n        instance(x: 2304, y: 1112) length_3e0eb3 root.Std_k98ojb.List.Length {}\n        instance(x: 2288, y: 1172) sub_9d3f6a root.Std_k98ojb.Math.Sub {}\n        instance(x: 2404, y: 1151) getat_6aa1c1 root.Std_k98ojb.List.GetAt {}\n        instance(x: 2609, y: 1121) getat_e8ef7f root.Std_k98ojb.List.GetAt {}\n        ifexpression_2c8e5c.value -> output_ebc87c\n        ifexpression_7d2a7a.value -> output_ebc87c\n        ifexpression_7d2a7a.else -> continue_d72620\n        execute_68160a -> sub_4dd4c6.execute\n        0 -> sub_4dd4c6.second\n        sub_4dd4c6.result -> getat_7e59e9.index\n        main_list_25f077 -> getat_7e59e9.list\n        getat_7e59e9.itemAtIndex -> sub_list_f9cb80\n        sub_list_f9cb80 -> filter_1bf7a9.list\n        func() {\n            in(x: -23, y: 85, name: \"current\") property(Number) _index_9d2f79\n\n            out(x: 702, y: 67, name: \"output\") property(Bool) output_fdf6f0\n\n            instance(x: 187, y: 57) equal_c8d5c8 root.Std_k98ojb.Logic.Equal {}\n            _index_9d2f79 -> equal_c8d5c8.left\n            current_index_9a2d5b -> equal_c8d5c8.right\n            equal_c8d5c8.result -> output_fdf6f0\n        } -> filter_1bf7a9.handler\n        contains_2c63d4.list -> filter_1bf7a9.output_list\n        main_list_25f077 -> contains_2c63d4.list\n        getat_7e59e9.itemAtIndex -> contains_2c63d4.item\n        contains_2c63d4.is_contained -> and_1d4f74.left\n        true -> and_1d4f74.right\n        and_1d4f74.result -> ifexpression_7d2a7a.gen_1\n        sub_list_f9cb80 -> count_6a1b6e.items\n        count_6a1b6e.count -> sub_9d3f6a.second\n        1 -> sub_9d3f6a.first\n        sub_9d3f6a.result -> getat_6aa1c1.index\n        main_list_25f077 -> getat_6aa1c1.list\n        getat_6aa1c1.itemAtIndex -> getat_e8ef7f.list\n        getat_7e59e9.itemAtIndex -> getat_e8ef7f.index\n        getat_e8ef7f.itemAtIndex -> count_6a1b6e.trigger\n        length_3e0eb3.list -> sub_9d3f6a.first\n        sub_list_f9cb80 -> length_3e0eb3.list\n        count_6a1b6e.count -> equals_16b1ec.left\n        sub_9d3f6a.result -> equals_16b1ec.right\n        equals_16b1ec.result -> ifexpression_7d2a7a.gen_0\n        getat_7e59e9.itemAtIndex -> current_index_9a2d5b\n        filter_1bf7a9.output_list -> and_6e6d52.left\n        true -> and_6e6d52.right\n        and_6e6d52.result -> ifexpression_2c8e5c.gen_0\n        count_6a1b6e.count -> ifexpression_2c8e5c.gen_1\n        ifexpression_7d2a7a.then -> count_6a1b6e.reset\n        ifexpression_7d2a7a.else -> count_6a1b6e.next\n        ifexpression_7d2a7a.then -> sub_list_f9cb80\n    }\n\n    \n\n    instance(x: 1052, y: 1088) is_Sub_Array_b1e0e0 root.main.is_Sub_Array {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1503, y: 1063) not_7e9d3c root.Std_k98ojb.Logic.Not {}\n        instance(x: -1438, y: 1103) if_5a87ed root.Std_k98ojb.Std.If {}\n        instance(x: -1526, y: 1266) issubset_2c1eab root.Std_k98ojb.Sets.IsSubset {}\n        instance(x: -1617, y: 1131) length_7bae7e root.Std_k98ojb.List.Length {}\n        instance(x: -1595, y: 1359) slice_5c6e87 root.Std_k98ojb.List.Slice {}\n        instance(x: -1407, y: 1194) contains_d7ee2e root.Std_k98ojb.List.Contains {}\n        execute_68160a -> if_5a87ed.execute\n        length_7bae7e.list -> slice_5c6e87.list\n        0 -> slice_5c6e87.start\n        sub_list_f9cb80 -> contains_d7ee2e.list\n        false -> contains_d7ee2e.item\n        contains_d7ee2e.is_contained -> not_7e9d3c.input\n        not_7e9d3c.result -> if_5a87ed.condition\n        sub_list_f9cb80 -> issubset_2c1eab.left\n        if_5a87ed.then -> issubset_2c1eab.right\n        if_5a87ed.else -> slice_5c6e87.end\n        length_7bae7e.length -> if_5a87ed.condition_0\n        if_5a87ed.then -> length_7bae7e.list\n        main_list_25f077 -> length_7bae7e.list\n        sub_list_f9cb80 -> length_7bae7e.list\n        slice_5c6e87.slice -> issubset_2c1eab.right\n        issubset_2c1eab.is_subset -> output_ebc87c\n        continue_d72620 -> if_5a87ed.else\n        if_5a87ed.then -> continue_d72620\n    }\n\n    \n\n    instance(x: -1425, y: 1049) is_Sub_Array_9e3ab1 root.main.is_Sub_Array {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1439, y: 1106) getat_e8bae2 root.Std_k98ojb.List.GetAt {}\n        instance(x: -1247, y: 1158) equal_87f9cb root.Std_k98ojb.Logic.Equal {}\n        instance(x: -1437, y: 1307) ifexpression_1cc9b2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < length\"\n        }\n        instance(x: -1260, y: 1317) contains_6e9f2a root.Std_k98ojb.List.Contains {}\n        instance(x: -1054, y: 1037) map_7d4cf3 root.Std_k98ojb.Iteration.Map {}\n        instance(x: -1030, y: 1223) getat_8a5a8b root.Std_k98ojb.List.GetAt {}\n        instance(x: -1182, y: 1099) getat_b6bdc9 root.Std_k98ojb.List.GetAt {}\n        instance(x: -1439, y: 1127) list_4ebd3d root.Std_k98ojb.List.Length {}\n        instance(x: -1190, y: 1307) count_1b7a0b root.Std_k98ojb.Std.Count {}\n        instance(x: -1234, y: 1272) add_6c7f7d root.Std_k98ojb.List.Add {}\n        ifexpression_1cc9b2.value -> output_ebc87c\n        ifexpression_1cc9b2.gen_0 -> getat_8a5a8b.index\n        getat_8a5a8b.itemAtIndex -> equal_87f9cb.right\n        getat_e8bae2.itemAtIndex -> equal_87f9cb.left\n        count_1b7a0b.count -> getat_e8bae2.index\n        ifexpression_1cc9b2.gen_1 -> getat_e8bae2.index\n        ifexpression_1cc9b2.gen_2 -> list_4ebd3d.length\n        main_list_25f077 -> getat_e8bae2.list\n        list_4ebd3d.list -> main_list_25f077\n        getat_b6bdc9.itemAtIndex -> map_7d4cf3.handler\n        main_list_25f077 -> getat_b6bdc9.list\n        map_7d4cf3.output_list -> add_6c7f7d.list\n        0 -> getat_b6bdc9.index\n        0 -> count_1b7a0b.reset\n        1 -> count_1b7a0b.increment\n        execute_68160a -> count_1b7a0b.reset\n        contains_6e9f2a.is_contained -> equal_87f9cb.result\n        add_6c7f7d.listWithItem -> contains_6e9f2a.list\n        map_7d4cf3.items -> sub_list_f9cb80\n        0 -> getat_8a5a8b.index\n        contains_6e9f2a.item -> sub_list_f9cb80\n        equal_87f9cb.result -> ifexpression_1cc9b2.execute\n        ifexpression_1cc9b2.then -> count_1b7a0b.next\n        ifexpression_1cc9b2.else -> continue_d72620\n        ifexpression_1cc9b2.value -> output_ebc87c\n    }\n\n    \n\n    instance(x: -1439, y: 1106) is_Sub_Array_16c63b root.main.is_Sub_Array {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1579, y: 1127, name: \"map sub list\") map_6be4e8 root.Std_k98ojb.Iteration.Map {}\n        instance(x: -1520, y: 1101) getat_c2d8ec root.Std_k98ojb.List.GetAt {}\n        instance(x: -1543, y: 1098) length_a6c68e root.Std_k98ojb.List.Length {}\n        instance(x: -1575, y: 1099) sub_4ec5f1 root.Std_k98ojb.Math.Sub {}\n        instance(x: -1471, y: 1048) map_2b7e1d root.Std_k98ojb.Iteration.Map {}\n        instance(x: -1424, y: 1041) reduce_5f8e85 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -1397, y: 1045) and_8df1d2 root.Std_k98ojb.Logic.And {}\n        instance(x: -1292, y: 1029) contains_a8a7d7 root.Std_k98ojb.List.Contains {}\n        instance(x: -1190, y: 1017) length_4f1a3f root.Std_k98ojb.List.Length {}\n        instance(x: -1182, y: 1070) not_9e3e89 root.Std_k98ojb.Logic.Not {}\n        sub_list_f9cb80 -> map_6be4e8.items\n        func() {\n            in(x: -1380, y: 1147, name: \"x\") property(Number) x_9a6ef7\n\n            out(x: -930, y: 1185, name: \"index\") property(Number) index_4e5abf\n\n            instance(x: -1066, y: 1169) sub_9e8f1f root.Std_k98ojb.Math.Sub {}\n            0 -> sub_9e8f1f.second\n            x_9a6ef7 -> sub_9e8f1f.first\n            sub_9e8f1f.result -> index_4e5abf\n        } -> map_6be4e8.handler\n        main_list_25f077 -> getat_c2d8ec.list\n        map_6be4e8.output_list -> getat_c2d8ec.indices\n        length_a6c68e.list -> sub_list_f9cb80\n        sub_list_f9cb80 -> length_a6c68e.list\n        length_a6c68e.length -> sub_4ec5f1.first\n        1 -> sub_4ec5f1.second\n        sub_4ec5f1.result -> getat_c2d8ec.index\n        map_6be4e8.output_list -> reduce_5f8e85.items\n        func() {\n            in(x: -1101, y: 1048, name: \"x\") property(List) x_1a4d8c\n\n            out(x: -631, y: 1062, name: \"result\") property(List) result_c5bb96\n\n            instance(x: -461, y: 1066) contains_3f57a4 root.Std_k98ojb.List.Contains {}\n            instance(x: -409, y: 1062) not_71d6dd root.Std_k98ojb.Logic.Not {}\n            instance(x: -378, y: 1067) and_5e9ec2 root.Std_k98ojb.Logic.And {}\n            x_1a4d8c -> contains_3f57a4.list\n            func() {\n                in(x: -302, y: 1053, name: \"item\") property(Any) item_7e51d2\n\n                out(x: -132, y: 1068, name: \"result\") property(Bool) result_7b3d9a\n\n                instance(x: -61, y: 1064) getat_6e7f84 root.Std_k98ojb.List.GetAt {}\n                item_7e51d2 -> getat_6e7f84.item\n                x_1a4d8c -> getat_6e7f84.list\n                map_2b7e1d.output_list -> getat_6e7f84.indices\n                getat_6e7f84.itemAtIndex -> result_7b3d9a\n            } -> contains_3f57a4.handler\n            contains_3f57a4.is_contained -> not_71d6dd.input\n            not_71d6dd.result -> and_5e9ec2.left\n            true -> and_5e9ec2.right\n            and_5e9ec2.result -> result_c5bb96\n        } -> reduce_5f8e85.reducer\n        func() {\n            in(x: -1196, y: 1017, name: \"x\") property(List) x_10b9ad\n\n            out(x: -696, y: 1026, name: \"result\") property(List) result_d5e0c3\n\n            instance(x: -526, y: 1028) contains_9d1e3a root.Std_k98ojb.List.Contains {}\n            instance(x: -474, y: 1024) not_b3ba0e root.Std_k98ojb.Logic.Not {}\n            instance(x: -443, y: 1029) and_57f84f root.Std_k98ojb.Logic.And {}\n            x_10b9ad -> contains_9d1e3a.list\n            func() {\n                in(x: -357, y: 1015, name: \"item\") property(Any) item_6c1f48\n\n                out(x: -187, y: 1030, name: \"result\") property(Bool) result_5b7e95\n\n                instance(x: -116, y: 1026) getat_7a8c09 root.Std_k98ojb.List.GetAt {}\n                item_6c1f48 -> getat_7a8c09.item\n                x_10b9ad -> getat_7a8c09.list\n                map_2b7e1d.output_list -> getat_7a8c09.indices\n                getat_7a8c09.itemAtIndex -> result_5b7e95\n            } -> contains_9d1e3a.handler\n            contains_9d1e3a.is_contained -> not_b3ba0e.input\n            not_b3ba0e.result -> and_57f84f.left\n            true -> and_57f84f.right\n            and_57f84f.result -> result_d5e0c3\n        } -> map_2b7e1d.handler\n        main_list_25f077 -> map_2b7e1d.items\n        map_2b7e1d.output_list -> contains_a8a7d7.list\n        func() {\n            in(x: -1000, y: 1029, name: \"item\") property(Any) item_b7edee\n\n            out(x: -630, y: 1028, name: \"result\") property(Bool) result_3eb9c3\n\n            instance(x: -460, y: 1025) list_3d91a4 root.Std_k98ojb.List {}\n            instance(x: -409, y: 1030) getat_2c53e2 root.Std_k98ojb.List.GetAt {}\n            instance(x: -378, y: 1025) contains_9d1e3a root.Std_k98ojb.List.Contains {}\n            instance(x: -327, y: 1029) and_57f84f root.Std_k98ojb.Logic.And {}\n            item_b7edee -> list_3d91a4.item\n            map_2b7e1d.output_list -> getat_2c53e2.indices\n            list_3d91a4 -> getat_2c53e2.list\n            getat_2c53e2.itemAtIndex -> contains_9d1e3a.item\n            contains_9d1e3a.list -> map_6be4e8.output_list\n            contains_9d1e3a.is_cont"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: -57, y: -16) for_23c8d0 root.Std_k98ojb.Std.For {}\n        instance(x: 217, y: 60) if_9fda7e root.Std_k98ojb.Std.If {}\n        instance(x: 448, y: 31) math_sub_7a9cda root.Std_k98ojb.Math.Sub {}\n        setter(x: 726, y: -251, name: \"setter_6c2b84\") setter_6c2b84 = result\n        instance(x: 1181, y: 0) not_5dbf8b root.Std_k98ojb.Logic.Not {}\n        getter(x: 1380, y: 63, name: \"getter_82d7eb\") getter_82d7eb = result\n        instance(x: 1111, y: -85) equal_ae6a2f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1307, y: -155) if_5e74b8 root.Std_k98ojb.Std.If {}\n        for_23c8d0.done -> continue_aedf0f\n        not_5dbf8b.value -> if_5e74b8.predicate\n        if_5e74b8.else -> continue_aedf0f\n        getter_82d7eb.value -> output_25655e\n        if_5e74b8.then -> setter_6c2b84.execute\n        setter_6c2b84.continue -> continue_aedf0f\n        list_24e9a6 -> for_23c8d0.items\n        execute_fa8807 -> for_23c8d0.trigger\n        0 -> math_sub_7a9cda.first\n        for_23c8d0.index -> math_sub_7a9cda.second\n        math_sub_7a9cda.result -> equal_ae6a2f.left\n        for_23c8d0.item -> equal_ae6a2f.right\n        equal_ae6a2f.result -> not_5dbf8b.value\n        for_23c8d0.onItem -> if_9fda7e.execute\n        if_9fda7e.predicate -> if_5e74b8.execute\n        if_9fda7e.then -> for_23c8d0.next\n        if_9fda7e.else -> setter_6c2b84.new_value\n    }\n\n    \n\n    instance(x: 1222, y: -35) find_First_Missing_7c4a1e root.main.find_First_Missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: 1001, y: 280) if_7c6c82 root.Std_k98ojb.Std.If {}\n        instance(x: 1254, y: 6) ifexpression_3d6f72 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 432, y: 313, name: \"getter_8d3f6a\") getter_8d3f6a = previous\n        setter(x: 1027, y: -284, name: \"setter_8a58fd\") setter_8a58fd = previous\n        instance(x: 397, y: -2, name: \"for\") for_2bb5d9 root.Std_k98ojb.Std.For {}\n        setter(x: 0, y: -140, name: \"setter_8a58fd\") setter_aedf0f = previous\n        instance(x: -175, y: 15, name: \"getat\") getat_7d9b5a root.Std_k98ojb.List.GetAt {}\n        ifexpression_3d6f72.else -> continue_aedf0f\n        ifexpression_3d6f72.value -> output_25655e\n        ifexpression_3d6f72.then -> setter_8a58fd.execute\n        list_24e9a6 -> for_2bb5d9.items\n        for_2bb5d9.item -> ifexpression_3d6f72.gen_2\n        for_2bb5d9.index -> ifexpression_3d6f72.gen_0\n        getter_8d3f6a.value -> ifexpression_3d6f72.gen_1\n        for_2bb5d9.onItem -> ifexpression_3d6f72.execute\n        for_2bb5d9.done -> continue_aedf0f\n        for_2bb5d9.item -> setter_8a58fd.new_value\n        list_24e9a6 -> getat_7d9b5a.list\n        0 -> getat_7d9b5a.index\n        getat_7d9b5a.itemAtIndex -> setter_aedf0f.new_value\n        execute_fa8807 -> setter_aedf0f.execute\n        setter_aedf0f.continue -> for_2bb5d9.reset\n        setter_8a58fd.continue -> for_2bb5d9.next\n    }\n\n    \n\n    instance(x: -31, y: 87) find_First_Missing_6d1cfb root.main.find_First_Missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n\tfunc(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n\t\tin(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n\t\tin(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n\t\tout(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n\t\tout(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n\t\tinstance(x: -60, y: 12, name: \"for\") for_f6f9aa root.Std_k98ojb.Std.For {}\n\t\tinstance(x: 238, y: -5) if_1b9c6d root.Std_k98ojb.Std.If {}\n\t\tinstance(x: 437, y: -42) math_sub_2e74f9 root.Std_k98ojb.Math.Sub {}\n\t\tinstance(x: 643, y: -42) setter_7c0b4a root.Std_k98ojb.Setter {}\n\t\tinstance(x: 839, y: 23) ifexpression_67b2d0 root.Std_k98ojb.Std.IfExpression {}\n\t\tlist_24e9a6 -> for_f6f9aa.items\n\t\tifexpression_67b2d0.else -> continue_aedf0f\n\t\tifexpression_67b2d0.then -> setter_7c0b4a.execute\n\t\tsetter_7c0b4a.continue -> continue_aedf0f\n\t\tfor_f6f9aa.item -> if_1b9c6d.gen_0\n\t\tfor_f6f9aa.onItem -> if_1b9c6d.execute\n\t\tfor_f6f9aa.index -> ifexpression_67b2d0.gen_0\n\t\tif_1b9c6d.then -> for_f6f9aa.next\n\t\tif_1b9c6d.else -> math_sub_2e74f9.execute\n\t\t1 -> math_sub_2e74f9.second\n\t\tfor_f6f9aa.index -> math_sub_2e74f9.first\n\t\tmath_sub_2e74f9.result -> ifexpression_67b2d0.gen_1\n\t\tmath_sub_2e74f9.result -> setter_7c0b4a.new_value\n\t\tfor_f6f9aa.done -> continue_aedf0f\n\t\tsetter_7c0b4a.new_value -> output_25655e\n\t\texecute_fa8807 -> for_f6f9aa.reset\n\t}\n\tinstance(x: 1551, y: -15) find_First_Missing_93f2c7 root.main.find_First_Missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: 1153, y: 91) if_9e6d6f root.Std_k98ojb.Std.If {}\n        instance(x: 1129, y: 30) for_71ab49 root.Std_k98ojb.Std.For {}\n        instance(x: 1036, y: -31) math_sub_4b1bde root.Std_k98ojb.Math.Sub {}\n        instance(x: 1352, y: 19) ifexpression_1b9dd2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"current != expected\"\n        }\n        instance(x: 1356, y: -92) math_add_94a4c2 root.Std_k98ojb.Math.Add {}\n        instance(x: 1275, y: -172) setter_9c7b77 root.Std_k98ojb.List.Setter {}\n        instance(x: 1330, y: -251) math_add_1b4f2d root.Std_k98ojb.Math.Add {}\n        list_24e9a6 -> for_71ab49.items\n        for_71ab49.done -> continue_aedf0f\n        if_9e6d6f.else -> continue_aedf0f\n        execute_fa8807 -> for_71ab49.trigger\n        for_71ab49.index -> math_add_94a4c2.first\n        1 -> math_add_94a4c2.second\n        math_add_94a4c2.result -> math_sub_4b1bde.second\n        for_71ab49.item -> math_sub_4b1bde.first\n        math_sub_4b1bde.result -> ifexpression_1b9dd2.gen_0\n        math_add_94a4c2.result -> ifexpression_1b9dd2.gen_1\n        for_71ab49.onItem -> ifexpression_1b9dd2.execute\n        ifexpression_1b9dd2.value -> output_25655e\n        ifexpression_1b9dd2.then -> if_9e6d6f.execute\n        ifexpression_1b9dd2.then -> setter_9c7b77.execute\n        ifexpression_1b9dd2.then -> math_add_1b4f2d.execute\n        for_71ab49.item -> setter_9c7b77.new_value\n        for_71ab49.index -> setter_9c7b77.index\n        math_add_94a4c2.result -> math_add_1b4f2d.first\n        1 -> math_add_1b4f2d.second\n        math_add_1b4f2d.result -> for_71ab49.next\n        ifexpression_1b9dd2.else -> for_71ab49.next\n        if_9e6d6f.predicate -> ifexpression_1b9dd2.result\n        if_9e6d6f.then -> continue_aedf0f\n    }\n\n    \n\n    instance(x: 10, y: -177) find_First_Missing_4ed1c3 root.main.find_First_Missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: -27, y: 25) getat_0e0e3c root.Std_k98ojb.List.GetAt {}\n        instance(x: 105, y: -15) ifexpression_2a9f83 root.Std_k98ojb.Std.IfExpression {\n            expression: \"previous + 1 == current\"\n        }\n        getter(x: 338, y: 151, name: \"getter_5f3d3b\") getter_5f3d3b = previous\n        setter(x: 675, y: -325, name: \"setter_b9a6d1\") setter_b9a6d1 = previous\n        setter(x: 675, y: -59, name: \"setter_1a4c82\") setter_1a4c82 = output\n        instance(x: 307, y: -29) for_21e4f1 root.Std_k98ojb.Std.For {}\n        list_24e9a6 -> getat_0e0e3c.list\n        0 -> getat_0e0e3c.index\n        getat_0e0e3c.itemAtIndex -> getter_5f3d3b.value\n        execute_fa8807 -> setter_b9a6d1.execute\n        0 -> setter_b9a6d1.new_value\n        getter_5f3d3b.value -> ifexpression_2a9f83.gen_0\n        for_21e4f1.item -> ifexpression_2a9f83.gen_1\n        ifexpression_2a9f83.value -> ifexpression_2a9f83.gen_2\n        for_21e4f1.onItem -> ifexpression_2a9f83.execute\n        ifexpression_2a9f83.then -> setter_b9a6d1.continue\n        list_24e9a6 -> for_21e4f1.items\n        for_21e4f1.done -> continue_aedf0f\n        for_21e4f1.index -> for_21e4f1.index\n        ifexpression_2a9f83.else -> setter_1a4c82.execute\n        for_21e4f1.index -> setter_1a4c82.new_value\n        setter_b9a6d1.continue -> for_21e4f1.reset\n        setter_1a4c82.continue -> for_21e4f1.next\n        setter_1a4c82.new_value -> output_25655e\n    }\n\n    \n\n    instance(x: 1088, y: 132) find_First_Missing_6a6a2f root.main.find_First_Missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: 1116, y: 146) if_3f5c7a root.Std_k98ojb.Std.If {}\n        getter(x: 1161, y: 146, name: \"getter_8d4c9f\") getter_8d4c9f = index\n        instance(x: 1147, y: -39) ifexpression_e6e3d8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"previous + 1 != current\"\n        }\n        setter(x: 1169, y: -236, name: \"setter_9f4f7e\") setter_9f4f7e = index\n        instance(x: 1056, y: 0) for_8c4e1d root.Std_k98ojb.Std.For {}\n        instance(x: -105, y: -3) getat_5bfe7f root.Std_k98ojb.List.GetAt {}\n        setter(x: -3, y: -226, name: \"setter_8d8e4f\") setter_8d8e4f = index\n        getter(x: 1047, y: 146, name: \"getter_91f2e2\") getter_91f2e2 = previous\n        list_24e9a6 -> for_8c4e1d.items\n        for_8c4e1d.index -> ifexpression_e6e3d8.gen_0\n        getter_91f2e2.value -> ifexpression_e6e3d8.gen_1\n        getter_8d4c9f.value -> ifexpression_e6e3d8.gen_2\n        for_8c4e1d.onItem -> ifexpression_e6e3d8.execute\n        ifexpression_e6e3d8.then -> if_3f5c7a.execute\n        ifexpression_e6e3d8.else -> for_8c4e1d.next\n        if_3f5c7a.else -> for_8c4e1d.next\n        if_3f5c7a.predicate -> ifexpression_e6e3d8.result\n        for_8c4e1d.done -> continue_aedf0f\n        list_24e9a6 -> getat_5bfe7f.list\n        0 -> getat_5bfe7f.index\n        getat_5bfe7f.itemAtIndex -> setter_8d8e4f.new_value\n        0 -> setter_8d8e4f.new_value\n        execute_fa8807 -> setter_8d8e4f.execute\n        setter_8d8e4f.continue -> for_8c4e1d.reset\n        if_3f5c7a.then -> setter_9f4f7e.execute\n        for_8c4e1d.item -> setter_9f4f7e.new_value\n        for_8c4e1d.item -> getter_91f2e2.value\n        setter_9f4f7e.continue -> for_8c4e1d.next\n        getter_8d4c9f.value -> output_25655e\n    }\n\n    \n\n    instance(x: -31, y: -17) find_First_Missing_6c9fa6 root.main.find_First_Missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: 1296, y: 226) if_4c5f64 root.Std_k98ojb.Std.If {}\n        setter(x: 1256, y: -245, name: \"setter_8e5c1b\") setter_8e5c1b = index\n        instance(x: 1168, y: -66, name: \"if_3b2d92\") if_3b2d92 root.Std_k98ojb.Std.If {}\n        getter(x: 1102, y: 274, name: \"getter_8b7ab6\") getter_8b7ab6 = index\n        setter(x: 1409, y: -147, name: \"setter_83e6c4\") setter_83e6c4 = index\n        list_24e9a6 -> if_4c5f64.if_a.gen_0\n        if_4c5f64.if_a.value -> if_3b2d92.predicate\n        if_3b2d92.then -> setter_83e6c4.execute\n        -1 -> setter_83e6c4.new_value\n        if_3b2d92.then -> continue_aedf0f\n        if_3b2d92.else -> continue_aedf0f\n        -1 -> setter_8e5c1b.new_value\n        setter_8e5c1b.continue -> if_4c5f64.execute\n        execute_fa8807 -> setter_8e5c1b.execute\n        getter_8b7ab6.value -> output_25655e\n        if_4c5f64.then -> setter_83e6c4.execute\n        if_4c5f64.else -> if_4c5f64.if_b.execute\n        0 -> if_4c5f64.if_b.gen_0\n        list_24e9a6 -> if_4c5f64.if_b.gen_1\n        if_4c5f64.if_b.value -> if_3b2d92.predicate\n        if_4c5f64.if_b.then -> for_1d6c89.reset\n        for_1d6c89.done -> continue_aedf0f\n        for_1d6c89.onItem -> if_4c5f64.execute\n        list_24e9a6 -> for_1d6c89.items\n        if_4c5f64.if_b.else -> for_1d6c89.next\n        for_1d6c89.item -> if_4c5f64.if_a.gen_1\n        for_1d6c89.index -> setter_8e5c1b.new_value\n        if_4c5f64.if_a.else -> for_1d6c89.next\n        setter_83e6c4.continue -> for_1d6c89.next\n        setter_8e5c1b.continue -> for_1d6c89.next\n        instance(x: 1239, y: -119, name: \"for_1d6c89\") for_1d6c89 root.Std_k98ojb.Std.For {}\n    }\n\n    \n\n    instance(x: 1006, y: -65) find_First_Missing_b5bf5d root.main.find_First_Missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: 1169, y: 279) for_f7c7a7 root.Std_k98ojb.Std.For {}\n        instance(x: 1393, y: 94) equal_7e88d3 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1527, y: 12) if_9b5a87 root.Std_k98ojb.Std.If {}\n        instance(x: 1072, y: -85, name: \"setter_2c1e39\") setter_2c1e39  number",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: 102, y: 82) for_5c9d6d root.Std_k98ojb.Std.For {}\n        instance(x: 416, y: 117) ifexpression_e8bae2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 338, y: 223, name: \"getter_3ed9f2\") getter_3ed9f2 = previous\n        setter(x: 651, y: -253, name: \"setter_5f1a6c\") setter_5f1a6c = previous\n        instance(x: 129, y: -44) add_2bfc82 root.Std_k98ojb.Math.Add {}\n        getter_3ed9f2.value -> ifexpression_e8bae2.gen_1\n        ifexpression_e8bae2.gen_0 -> ifexpression_e8bae2.gen_2\n        ifexpression_e8bae2.else -> continue_aedf0f\n        ifexpression_e8bae2.value -> output_25655e\n        ifexpression_e8bae2.then -> setter_5f1a6c.execute\n        add_2bfc82.result -> ifexpression_e8bae2.gen_3\n        1 -> add_2bfc82.second\n        getter_3ed9f2.value -> add_2bfc82.first\n        for_5c9d6d.item -> ifexpression_e8bae2.gen_2\n        for_5c9d6d.index -> ifexpression_e8bae2.gen_0\n        for_5c9d6d.onItem -> ifexpression_e8bae2.execute\n        list_24e9a6 -> for_5c9d6d.items\n        for_5c9d6d.done -> continue_aedf0f\n        for_5c9d6d.item -> setter_5f1a6c.new_value\n        execute_fa8807 -> setter_5f1a6c.execute\n        0 -> setter_5f1a6c.new_value\n        setter_5f1a6c.continue -> for_5c9d6d.reset\n        setter_5f1a6c.continue -> for_5c9d6d.next\n    }\n\n    \n\n    instance(x: 121, y: 126) find_First_Missing_f0e2f9 root.main.find_First_Missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: 0, y: 0) for_8e2f56 root.Std_k98ojb.Std.For {}\n        instance(x: 336, y: 97) ifexpression_c5c9e9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current - previous == 1\"\n        }\n        instance(x: 630, y: -15) if_8f5a1c root.Std_k98ojb.Std.If {}\n        getter(x: 290, y: 147, name: \"getter_9e0d68\") getter_9e0d68 = previous\n        setter(x: 678, y: -312, name: \"setter_72d3a5\") setter_72d3a5 = previous\n        setter(x: 105, y: -129, name: \"setter_dacde3\") setter_dacde3 = result\n        setter(x: 1060, y: 17, name: \"setter_91e7e6\") setter_91e7e6 = result\n        instance(x: -254, y: 20) getat_7f2c51 root.Std_k98ojb.List.GetAt {}\n        list_24e9a6 -> for_8e2f56.items\n        list_24e9a6 -> getat_7f2c51.list\n        0 -> getat_7f2c51.index\n        getat_7f2c51.itemAtIndex -> setter_dacde3.new_value\n        execute_fa8807 -> setter_dacde3.execute\n        setter_dacde3.continue -> for_8e2f56.reset\n        for_8e2f56.onItem -> if_8f5a1c.execute\n        for_8e2f56.index -> ifexpression_c5c9e9.gen_0\n        for_8e2f56.item -> ifexpression_c5c9e9.gen_2\n        getter_9e0d68.value -> ifexpression_c5c9e9.gen_1\n        if_8f5a1c.predicate -> ifexpression_c5c9e9.result\n        if_8f5a1c.else -> setter_91e7e6.execute\n        for_8e2f56.item -> setter_91e7e6.new_value\n        if_8f5a1c.then -> setter_72d4.execute\n        for_8e2f56.item -> setter_72d4.new_value\n        ifexpression_c5c9e9.then -> for_8e2f56.next\n        ifexpression_c5c9e9.else -> for_8e2f56.next\n        if_8f5a1c.else -> continue_aedf0f\n        if_8f5a1c.then -> continue_aedf0f\n        for_8e2f56.done -> continue_aedf0f\n        setter_72d4.continue -> for_8e2f56.next\n        setter_91e7e6.continue -> continue_aedf0f\n        if_8f5a1c.predicate -> ifexpression_c5c9e9.result\n        setter_72d4.continue -> continue_aedf0f\n        getter_9e0d68.value -> ifexpression_c5c9e9.gen_1\n        ifexpression_c5c9e9.then -> setter_72d4.execute\n        ifexpression_c5c9e9.else -> for_8e2f56.next\n        setter_dacde3.continue -> for_8e2f56.reset\n        ifexpression_c5c9e9.then -> for_8e2f56.next\n        setter_72d4.new_value -> previous\n        setter_91e7e6.new_value -> result\n        getter_9e0d68.value -> previous\n        ifexpression_c5c9e9.value -> output_25655e\n        setter_72d4.new_value -> previous\n    }\n\n    \n\n    instance(x: 11, y: 63) find_First_Missing_90da97 root.main.find_First_Missing {}\n\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: -1) replace_d1f5f2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_c3c6b7 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_f8d1f8 root.Std_k98ojb.Strings.Replace {}\n        replace_d1f5f2.output -> replace_c3c6b7.input\n        replace_c3c6b7.output -> replace_f8d1f8.input\n        replace_f8d1f8.output -> output_0\n        input_0 -> replace_d1f5f2.input\n        \" \" -> replace_d1f5f2.search\n        \":\" -> replace_d1f5f2.replace\n        \",\" -> replace_c3c6b7.search\n        \":\" -> replace_c3c6b7.replace\n        \".\" -> replace_f8d1f8.search\n        \":\" -> replace_f8d1f8.replace\n    }\n\n    \n\n    instance(x: 102, y: 47) replace_specialchar_3f1a81 root.main.replace_specialchar {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) replace_9b7dcd root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_1ad5c8 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 2) replace_e1b3bf root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_9b7dcd.input\n        \" \" -> replace_9b7dcd.search\n        \":\" -> replace_9b7dcd.replace\n        replace_9b7dcd.output -> replace_1ad5c8.input\n        \",\" -> replace_1ad5c8.search\n        \":\" -> replace_1ad5c8.replace\n        replace_1ad5c8.output -> replace_e1b3bf.input\n        \".\" -> replace_e1b3bf.search\n        \":\" -> replace_e1b3bf.replace\n        replace_e1b3bf.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChar_e54b7f root.main.replace_specialchar {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n\tfunc(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n\t\tin(x: -230, y: 0, name: \"input\") property(String) input_0\n\n\t\tout(x: 776, y: 0, name: \"output\") property(String) output_0\n\n\t\tinstance(x: 0, y: 1) replace_d4e3c5 root.Std_k98ojb.Strings.Replace {}\n\t\tinstance(x: 261, y: 1) replace_4b9ee7 root.Std_k98ojb.Strings.Replace {}\n\t\tinstance(x: 520, y: 1) replace_1eae46 root.Std_k98ojb.Strings.Replace {}\n\t\tinput_0 -> replace_d4e3c5.input\n\t\t\" \" -> replace_d4e3c5.search\n\t\t\":\" -> replace_d4e3c5.replace\n\t\treplace_d4e3c5.output -> replace_4b9ee7.input\n\t\t\",\" -> replace_4b9ee7.search\n\t\t\":\" -> replace_4b9ee7.replace\n\t\treplace_4b9ee7.output -> replace_1eae46.input\n\t\t\".\" -> replace_1eae46.search\n\t\t\":\" -> replace_1eae46.replace\n\t\treplace_1eae46.output -> output_0\n\t}\n\n\t\n\tinstance(x: 81, y: 52) replace_specialchar_ae7d3f root.main.replace_specialchar {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 15, y: 0) replace_4a1ddc root.Std_k98ojb.Strings.Replace {}\n        instance(x: 290, y: 0) replace_c2d96b root.Std_k98ojb.Strings.Replace {}\n        instance(x: 470, y: 0) replace_3f2b7f root.Std_k98ojb.Strings.Replace {}\n        replace_3f2b7f.input -> replace_c2d96b.input\n        replace_c2d96b.input -> replace_4a1ddc.input\n        \".\" -> replace_3f2b7f.search\n        \":\" -> replace_3f2b7f.replace\n        \",\" -> replace_c2d96b.search\n        \":\" -> replace_c2d96b.replace\n        \" \" -> replace_4a1ddc.search\n        \":\" -> replace_4a1ddc.replace\n        input_0 -> replace_4a1ddc.input\n        replace_4a1ddc.output -> output_0\n    }\n\n    \n\n    instance(x: 84, y: 15, name: \"replace_specialchar\") replace_specialchar_5d8c0a root.main.replace_specialchar {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) replace_c1d0bf root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_13cbb7 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_3b3c05 root.Std_k98ojb.Strings.Replace {}\n        replace_c1d0bf.input -> replace_13cbb7.input\n        replace_c1d0bf.replace -> replace_13cbb7.replace\n        replace_c1d0bf.search -> replace_13cbb7.search\n        replace_13cbb7.input -> replace_3b3c05.input\n        replace_13cbb7.replace -> replace_3b3c05.replace\n        replace_13cbb7.search -> replace_3b3c05.search\n        input_0 -> replace_c1d0bf.input\n        \":\" -> replace_c1d0bf.replace\n        \" \" -> replace_c1d0bf.search\n        \":\" -> replace_13cbb7.replace\n        \",\" -> replace_13cbb7.search\n        \":\" -> replace_3b3c05.replace\n        \".\" -> replace_3b3c05.search\n        replace_3b3c05.output -> output_0\n    }\n\n    \n\n    instance(x: 0, y: 0, name: \"replace_specialchar\") replace_specialchar_0f7ab9 root.main.replace_specialchar {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) tolower_6f2f16 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 245, y: 0) replace_c5c3a2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 540, y: 0) replace_90c1cc root.Std_k98ojb.Strings.Replace {}\n        instance(x: 725, y: 0) replace_2e94eb root.Std_k98ojb.Strings.Replace {}\n        tolower_6f2f16.output -> replace_c5c3a2.input\n        replace_c5c3a2.output -> replace_90c1cc.input\n        replace_90c1cc.output -> replace_2e94eb.input\n        input_0 -> tolower_6f2f16.input\n        \" \" -> replace_c5c3a2.search\n        \":\" -> replace_c5c3a2.replace\n        \",\" -> replace_90c1cc.search\n        \":\" -> replace_90c1cc.replace\n        \".\" -> replace_2e94eb.search\n        \":\" -> replace_2e94eb.replace\n        replace_2e94eb.output -> output_0\n    }\n\n    \n\n    instance(x: 93, y: 22) replace_specialchar_d8a8ba root.main.replace_specialchar {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 12, y: 0) replace_7b6f71 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7b6f71.input\n        \" \" -> replace_7b6f71.search\n        \":\" -> replace_7b6f71.replace\n        replace_7b6f71.output -> output_0\n\n        instance(x: 12, y: 32) replace_9d8a4b root.Std_k98ojb.Strings.Replace {}\n        replace_7b6f71.output -> replace_9d8a4b.input\n        \",\" -> replace_9d8a4b.search\n        \":\" -> replace_9d8a4b.replace\n        replace_9d8a4b.output -> output_0\n\n        instance(x: 12, y: 63) replace_0c2f1d root.Std_k98ojb.Strings.Replace {}\n        replace_9d8a4b.output -> replace_0c2f1d.input\n        \".\" -> replace_0c2f1d.search\n        \":\" -> replace_0c2f1d.replace\n        replace_0c2f1d.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 94) replace_specialchar_2e4f78 root.main.replace_specialchar {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 120, y: 0) replace_d5a7a0 root.Std_k98ojb.Strings.Replace {\n            search: \" \"\n        }\n        instance(x: 350, y: 0) replace_8f6e61 root.Std_k98ojb.Strings.Replace {\n            search: \",\"\n        }\n        instance(x: 580, y: 0) replace_b7b8ab root.Std_k98ojb.Strings.Replace {\n            search: \".\"\n        }\n        replace_d5a7a0.output -> replace_8f6e61.input\n        replace_8f6e61.output -> replace_b7b8ab.input\n        replace_b7b8ab.output -> output_0\n        \":\" -> replace_d5a7a0.replace\n        \":\" -> replace_8f6e61.replace\n        \":\" -> replace_b7b8ab.replace\n        input_0 -> replace_d5a7a0.input\n    }\n\n    \n\n    instance(x: -60, y: -35, name: \"replace_specialchar\") replace_specialchar_6e4a6b root.main.replace_specialchar {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_4f96dd root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: 0) replace_2c7d2a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 443, y: 0) replace_1a76d5 root.Std_k98ojb.Strings.Replace {}\n        replace_4f96dd.output -> replace_2c7d2a.input\n        replace_2c7d2a.output -> replace_1a76d5.input\n        replace_1a76d5.output -> output_0\n        input_0 -> replace_4f96dd.input\n        \" \" -> replace_4f96dd.search\n        \":\" -> replace_4f96dd.replace\n        \",\" -> replace_2c7d2a.search\n        \".\" -> replace_1a76d5.search\n        \":\" -> replace_2c7d2a.replace\n        \":\" -> replace_1a76d5.replace\n    }\n\n    \n\n    instance(x: 79, y: 52, name: \"replace_specialchar\") replace_specialchar_d4a54a root.main.replace_specialchar {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: -28, y: 18) replace_4a1d88 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 297, y: 0) replace_2b74e3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 584, y: 0) replace_4b9b8e root.Std_k98ojb.Strings.Replace {}\n        replace_4a1d88.output -> replace_2b74e3.input\n        replace_2b74e3.output -> replace_4b9b8e.input\n        input_0 -> replace_4a1d88.input\n        \" \" -> replace_4a1d88.search\n        \":\" -> replace_4a1d88.replace\n        \",\" -> replace_2b74e3.search\n        \":\" -> replace_2b74e3.replace\n        \".\" -> replace_4b9b8e.search\n        \":\" -> replace_4b9b8e.replace\n        replace_4b9b8e.output -> output_0\n    }\n\n    \n\n    instance(x: 105, y: -52, name: \"replace_specialchar\") replace_specialchar_3b8eb0 root.main.replace_specialchar {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -708, y: 124, name: \"characters\") characters_9c8d0a root.Std_k98ojb.Strings.Characters {}\n        instance(x: -513, y: 126) filter_6d8eb9 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -306, y: 121) count_f9cda9 root.Std_k98ojb.Std.Count {}\n        instance(x: 36, y: 118, name: \"first character\") firstitem_ea9d3e root.Std_k98ojb.List.FirstItem {}\n        instance(x: 245, y: 118) if_8eb5f9 root.Std_k98ojb.Std.If {}\n        instance(x: 443, y: 118) ifexpression_82d7eb root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == firstChar\"\n        }\n        instance(x: 540, y: 117) not_2a7e6d root.Std_k98ojb.Logic.Not {}\n        instance(x: 710, y: 118, name: \"get index\") getat_3cfa95 root.Std_k98ojb.List.GetAt {}\n        instance(x: 893, y: 117) expression_ea9f7f root.Std_k98ojb.Math.Expression {\n            expression: \"current == firstChar\"\n        }\n        instance(x: 997, y: 117) and_97a9b2 root.Std_k98ojb.Logic.And {}\n        instance(x: 1084, y: 118) getat_8fa4d6 root.Std_k98ojb.List.GetAt {}\n        instance(x: 1267, y: 118) expression_1b2d08 root.Std_k98ojb.Math.Expression {\n            expression: \"index == 0 || current == firstChar\"\n        }\n        instance(x: 1371, y: 117) and_9bbd62 root.Std_k98ojb.Logic.And {}\n        instance(x: 1426, y: 117) expression_4dc7bd root.Std_k98ojb.Math.Expression {\n            expression: \"index == 0 || current == firstChar\"\n        }\n        string_db4ddf -> characters_9c8d0a.input\n        characters_9c8d0a.characters -> filter_6d8eb9.items\n        func() {\n            in(x: -46, y: -28, name: \"current\") property(String) current_5ce6f7\n\n            out(x: 386, y: -8, name: \"bool\") property(Bool) bool_5eb1e6\n\n            instance(x: 178, y: -17) tolower_9e7a1f root.Std_k98ojb.Strings.ToLower {}\n            instance(x: 378, y: -14) expression_ba81dd root.Std_k98ojb.Math.Expression {\n                expression: \"current == firstChar\"\n            }\n            tolower_9e7a1f.output -> expression_ba81dd.gen_0\n            current_5ce6f7 -> expression_ba81dd.gen_0\n            current_5ce6f7 -> tolower_9e7a1f.input\n            expression_ba81dd.result -> bool_5eb1e6\n        } -> filter_6d8eb9.handler\n        filter_6d8eb9.output_list -> count_f9cda9.items\n        count_f9cda9.count -> firstitem_ea9d3e.list\n        firstitem_ea9d3e.item -> if_8eb5f9.predicate\n        count_f9cda9.count -> getat_3cfa95.list\n        0 -> getat_3cfa95.index\n        getat_3cfa95.itemAtIndex -> if_8eb5f9.gen_1\n        characters_9c8d0a.characters -> getat_3cfa95.list\n        firstitem_ea9d3e.item -> if_8eb5f9.gen_0\n        0 -> count_f9cda9.index\n        if_8eb5f9.then -> getat_8fa4d6.execute\n        if_8eb5f9.else -> continue_67430e\n        count_f9cda9.count -> getat_8fa4d6.list\n        getat_3cfa95.itemAtIndex -> getat_8fa4d6.index\n        count_f9cda9.count -> expression_ea9f7f.gen_0\n        getat_8fa4d6.itemAtIndex -> expression_ea9f7f.gen_1\n        expression_ea9f7f.result -> and_97a9b2.left\n        if_8eb5f9.value -> and_97a9b2.right\n        and_97a9b2.result -> ifexpression_82d7eb.gen_2\n        and_97a9b2.result -> ifexpression_82d7eb.gen_1\n        0 -> getat_3cfa95.index\n        count_f9cda9.count -> expression_1b2d08.gen_0\n        getat_8fa4d6.itemAtIndex -> expression_1b2d08.gen_1\n        expression_1b2d08.result -> and_9bbd62.left\n        ifexpression_82d7eb.result -> and_9bbd62.right\n        and_9bbd62.result -> ifexpression_82d7eb.gen_0\n        count_f9cda9.count -> expression_4dc7bd.gen_0\n        getat_8fa4d6.itemAtIndex -> expression_4dc7bd.gen_1\n        expression_4dc7bd.result -> if_8eb5f9.value\n        count_f9cda9.reset -> execute_f1c7e0\n        ifexpression_82d7eb.value -> output_e9fa68\n        not_2a9e1f.input -> ifexpression_82d7eb.execute\n        ifexpression_82d7eb.value -> not_2a7e6d.input\n        not_2a7e6d.result -> continue_67430e\n        count_f9cda9.next -> getat_8fa4d6.next\n        ifexpression_82d7eb.else -> getat_8fa4d6.reset\n    }\n\n    \n\n    instance(x: -104, y: -16) all_Characters_Same_7b6a67 root.main.all_Characters_Same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -704, y: 169, name: \"Characters\") characters_a0f2f8 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -478, y: 179) filter_d0e3d6 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -172, y: 172, name: \"if\") if_7ef4e4 root.Std_k98ojb.Std.If {}\n        instance(x: 101, y: 272) lessthan_8ec5d1 root.Std_k98ojb.Math.LessThan {}\n        instance(x: 286, y: 274) ifexpression_6f5c2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        instance(x: 467, y: 271) map_c6c1c8 root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: 11, y: 37, name: \"current\") property(String) _char_0\n\n            out(x: 368, y: 51, name: \"out\") property(String) out_1\n\n            instance(x: 135, y: 49) tolower_6a1e82 root.Std_k98ojb.Strings.ToLower {}\n            _char_0 -> tolower_6a1e82.input\n            tolower_6a1e82.output -> out_1\n        } -> map_c6c1c8.handler\n        instance(x: 650, y: 269) length_5f07b4 root.Std_k98ojb.List.Length {}\n        getter(x: -1, y: 172, name: \"getter_9f7b90\") getter_9f7b90 = previous\n        setter(x: 261, y: -68, name: \"setter_98c8a4\") setter_98c8a4 = previous\n        string_db4ddf -> characters_a0f2f8.input\n        characters_a0f2f8.characters -> filter_d0e3d6.items\n        func() {\n            in(x: -32, y: -37, name: \"current\") property(String) current_4f2f0b\n\n            out(x: 231, y: -26, name: \"out\") property(Bool) out_f5d1e4\n\n            instance(x: 81, y: -26) notequal_3b3eae root.Std_k98ojb.Logic.NotEqual {}\n            current_4f2f0b -> notequal_3b3eae.left\n            0 -> notequal_3b3eae.right\n            notequal_3b3eae.result -> out_f5d1e4\n        } -> filter_d0e3d6.handler\n        filter_d0e3d6.output_list -> map_c6c1c8.items\n        execute_f1c7e0 -> if_7ef4e4.execute\n        1 -> lessthan_8ec5d1.left\n        length_5f07b4.length -> lessthan_8ec5d1.right\n        lessthan_8ec5d1.result -> if_7ef4e4.predicate\n        if_7ef4e4.else -> continue_67430e\n        map_c6c1c8.output_list -> ifexpression_6f5c2c.list\n        0 -> ifexpression_6f5c2c.gen_0\n        getter_9f7b90.value -> ifexpression_6f5c2c.gen_1\n        ifexpression_6f5c2c.value -> output_e9fa68\n        if_7ef4e4.then -> setter_98c8a4.execute\n        map_c6c1c8.item -> ifexpression_6f5c2c.gen_2\n        ifexpression_6f5c2c.then -> setter_98c8a4.execute\n        map_c6c1c8.index -> ifexpression_6f5c2c.gen_0\n        getter_9f7b90.value -> setter_98c8a4.new_value\n        map_c6c1c8.onItem -> ifexpression_6f5c2c.execute\n        setter_98c8a4.continue -> continue_67430e\n        map_c6c1c8.done -> continue_67430e\n    }\n\n    \n\n    instance(x: -1091, y: 6) all_Characters_Same_f1f1c4 root.main.all_Characters_Same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -711, y: 176, name: \"characters\") characters_ba6a9e root.Std_k98ojb.Strings.Characters {}\n        instance(x: -499, y: 173, name: \"sort\") sort_f5dc7d root.Std_k98ojb.List.Sort {}\n        instance(x: -256, y: 180) len_7e74f9 root.Std_k98ojb.List.Length {}\n        instance(x: 50, y: 124) firstitem_8e57a0 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 50, y: 259) lastitem_a7bb5f root.Std_k98ojb.List.LastItem {}\n        instance(x: 341, y: 226) ifexpression_2dbb0d root.Std_k98ojb.Std.IfExpression {\n            expression: \"len == 1 || first == last\"\n        }\n        characters_ba6a9e.string -> sort_f5dc7d.list\n        sort_f5dc7d.sorted -> len_7e74f9.list\n        sort_f5dc7d.sorted -> firstitem_8e57a0.list\n        sort_f5dc7d.sorted -> lastitem_a7bb5f.list\n        len_7e74f9.length -> ifexpression_2dbb0d.gen_0\n        firstitem_8e57a0.item -> ifexpression_2dbb0d.gen_1\n        lastitem_a7bb5f.item -> ifexpression_2dbb0d.gen_2\n        ifexpression_2dbb0d.value -> output_e9fa68\n        ifexpression_2dbb0d.else -> continue_67430e\n        ifexpression_2dbb0d.then -> continue_67430e\n        string_db4ddf -> characters_ba6a9e.string\n        execute_f1c7e0 -> continue_67430e\n    }\n\n    \n\n    instance(x: 107, y: 29) all_Characters_Same_e2cfaa root.main.all_Characters_Same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -710, y: 146) characters_eb3f2b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -506, y: 153) for_1f5c0d root.Std_k98ojb.Std.For {}\n        instance(x: 13, y: 264) ifexpression_9b7b4b root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: -380, y: 282, name: \"getter_76f9d2\") getter_76f9d2 = previous\n        setter(x: -32, y: -25, name: \"setter_e6f1b1\") setter_e6f1b1 = previous\n        ifexpression_9b7b4b.else -> continue_67430e\n        ifexpression_9b7b4b.value -> output_e9fa68\n        ifexpression_9b7b4b.then -> setter_e6f1b1.execute\n        string_db4ddf -> characters_eb3f2b.input\n        characters_eb3f2b.characters -> for_1f5c0d.items\n        for_1f5c0d.item -> ifexpression_9b7b4b.gen_2\n        for_1f5c0d.index -> ifexpression_9b7b4b.gen_0\n        getter_76f9d2.value -> ifexpression_9b7b4b.gen_1\n        for_1f5c0d.onItem -> ifexpression_9b7b4b.execute\n        for_1f5c0d.done -> continue_67430e\n        for_1f5c0d.item -> setter_e6f1b1.new_value\n        execute_f1c7e0 -> setter_e6f1b1.execute\n        setter_e6f1b1.continue -> for_1f5c0d.reset\n        setter_e6f1b1.continue -> for_1f5c0d.next\n    }\n\n    \n\n    instance(x: -102, y: 10) all_Characters_Same_10d9a5 root.main.all_Characters_Same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -719, y: 184, name: \"list_of_chars\") characters_d0e0e3 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -508, y: 178) length_2c2a25 root.Std_k98ojb.List.Length {}\n        instance(x: -294, y: 164, name: \"is_unique\") map_0e2ecb root.Std_k98ojb.Iteration.Map {}\n        instance(x: -78, y: 156, name: \"set of chars\") filter_94ce5b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -6, y: 151) contains_3ebf85 root.Std_k98ojb.List.Contains {}\n        instance(x: 179, y: 159, name: \"is_same\") map_0a2f5b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 401, y: 158, name: \"all same\") if_1a3b54 root.Std_k98ojb.Std.If {}\n        instance(x: 526, y: 151) expression_14a43f root.Std_k98ojb.Math.Expression {\n            expression: \"i == index\"\n        }\n        instance(x: 602, y: 147, name: \"are same\") for_2fde52 root.Std_k98ojb.Std.For {}\n        instance(x: 1049, y: 141, name: \"result\") equal_e9d4bf root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1205, y: 132, name: \"all_unique\") equal_9f8a4a root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1418, y: 122) not_72a4a5 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1665, y: 124, name: \"is_sorted\") map_f5c9d8 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1867, y: 122, name: \"sorted\") for_7f0cc4 root.Std_k98ojb.Std.For {}\n        instance(x: 2242, y: 118, name: \"all_sorted\") if_d3b4b6 root.Std_k98ojb.Std.If {}\n        instance(x: 2569, y: 117, name: \"all\") and_fddfa8 root.Std_k98ojb.Logic.And {}\n        expression_14a43f.result -> if_1a3b54.predicate\n        0 -> if_1a3b54.then\n        if_1a3b54.else -> continue_67430e\n        string_db4ddf -> characters_d0e0e3.input\n        characters_d0e0e3.characters -> length_2c2a25.list\n        characters_d0e0e3.characters -> map_0e2ecb.items\n        1 -> length_2c2a25.list\n        characters_d0e0e3.characters -> filter_94ce5b.items\n        func() {\n            in(x: -40, y: -5, name: \"item\") property(Any) item_1e5f1b\n\n            out(x: 278, y: 21, name: \"out\") property(Bool) out_1dbfc2\n\n            instance(x: 170, y: 6) contains_f2c2d1 root.Std_k98ojb.List.Contains {}\n            1 -> contains_f2c2d1.item\n            item_1e5f1b -> contains_f2c2d1.list\n            contains_f2c2d1.is_contained -> out_1dbfc2\n        } -> filter_94ce5b.handler\n        contains_3ebf85.is_contained -> all_unique_0ac3ba\n        length_2c2a25.length -> contains_3ebf85.list\n        func() {\n            in(x: -23, y: -16, name: \"element\") property(Any) element_7e7d8f\n\n            out(x: 425, y: -4, name: \"out\") property(Bool) out_7e2f7e\n\n            instance(x: 229, y: -9) equal_f9c3cf root.Std_k98ojb.Logic.Equal {}\n            element_7e7d8f -> equal_f9c3cf.left\n            if_1a3b54.value -> equal_f9c3cf.right\n            equal_f9c3cf.result -> out_7e2f7e\n        } -> map_0a2f5b.handler\n        map_0a2f5b.output_list -> are_same_f0a3ec.list\n        0 -> are_same_f0a3ec.index\n        are_same_f0a3ec.onItem -> expression_14a43f.execute\n        are_same_f0a3ec.item -> expression_14a43f.gen_1\n        if_1a3b54.value -> expression_14a43f.gen_0\n        are_same_f0a3ec.item -> equal_e9d4bf.left\n        if_1a3b54.value -> equal_e9d4bf.right\n        equal_e9d4bf.result -> are_same_f0a3ec.next\n        are_same_f0a3ec.done -> if_1a3b54.execute\n        are_same_f0a3ec.item -> all_same_6b6d0a\n        all_unique_0ac3ba -> equal_9f8a4a.left\n        1 -> equal_9f8a4a.right\n        equal_9f8a4a.result -> all_unique_f1a0d6\n        map_0e2ecb.output_list -> contains_3ebf85.list\n        not_72a4a5.result -> all_same_6b6d0a\n        all_same_6b6d0a -> equal_e9d4bf.result\n        all_unique_f1a0d6 -> not_72a4a5.input\n        string_db4ddf -> map_f5c9d8.items\n        func() {\n            in(x: -26, y: -14, name: \"element\") property(Any) element_b6c8c3\n\n            out(x: 471, y: -4, name: \"out\") property(Bool) out_c7a8b5\n\n            instance(x: 252, y: -9) greaterthan_f7d93d root.Std_k98ojb.Math.GreaterThan {}\n            element_b6c8c3 -> greaterthan_f7d93d.left\n            if_1a3b54.value -> greaterthan_f7d93d.right\n            greaterthan_f7d93d.result -> out_c7a8b5\n        } -> map_f5c9d8.handler\n        map_f5c9d8.output_list -> sorted_5d99c2.list\n        sorted_5d99c2.index -> expression_8a8ab0.gen_0\n        sorted_5d99c2.item -> expression_8a8ab0.gen_1\n        func() {\n            in(x: 0, y: -1, name: \"element\") property(Any) element_4f8d3b\n\n            out(x: 490, y: 16, name: \"out\") property(Bool) out_e4a4b5\n\n            instance(x: 263, y: 7) lessthanorequal_4ab7cc root.Std_k98ojb.Math.LessThanOrEqual {}\n            element_4f8d3b -> lessthanorequal_4ab7cc.left\n            expression_8a8ab0.result -> lessthanorequal_4ab7cc.right\n            lessthanorequal_4ab7cc.result -> out_e4a4b5\n        } -> sorted_5d99c2.handler\n        sorted_5d99c2.onItem -> expression_8a8ab0.execute\n        0 -> sorted_5d99c2.index\n        string_db4ddf -> expression_8a8ab0.gen_0\n        sorted_5d99c2.item -> expression_8a8ab0.gen_1\n        sorted_5d99c2.item -> all_sorted_eb2f1b\n        all_sorted_eb2f1b -> sorted_6b6f02\n        sorted_5d99c2",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -711, y: 180, name: \"characters\") characters_1cc7e5 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -514, y: 189, name: \"only the second\") getat_d1a3f9 root.Std_k98ojb.List.GetAt {}\n        instance(x: -294, y: 194, name: \"filter for matching\") filter_1bb4b6 root.Std_k98ojb.Query.Filter {\n            where: \"it == firstCharacter\"\n        }\n        instance(x: 28, y: 270) not_1e2f83 root.Std_k98ojb.Logic.Not {}\n        instance(x: 138, y: 186) for_1ec0e2 root.Std_k98ojb.Std.For {}\n        instance(x: 540, y: 187) contains_5c9f3c root.Std_k98ojb.List.Contains {}\n        instance(x: 760, y: 185) if_3dbf1a root.Std_k98ojb.Std.If {}\n        string_db4ddf -> characters_1cc7e5.input\n        1 -> getat_d1a3f9.index\n        characters_1cc7e5.characters -> getat_d1a3f9.list\n        characters_1cc7e5.characters -> for_1ec0e2.items\n        characters_1cc7e5.characters -> contains_5c9f3c.list\n        getat_d1a3f9.itemAtIndex -> for_1ec0e2.item\n        getat_d1a3f9.itemAtIndex -> filter_1bb4b6.list\n        characters_1cc7e5.characters -> filter_1bb4b6.list\n        for_1ec0e2.item -> if_3dbf1a.predicate\n        for_1ec0e2.index -> if_3dbf1a.gen_0\n        for_1ec0e2.onItem -> if_3dbf1a.execute\n        filter_1bb4b6.result -> contains_5c9f3c.item\n        if_3dbf1a.then -> continue_67430e\n        if_3dbf1a.else -> for_1ec0e2.next\n        contains_5c9f3c.is_contained -> not_1e2f83.input\n        not_1e2f83.result -> output_e9fa68\n        for_1ec0e2.done -> continue_67430e\n        execute_f1c7e0 -> for_1ec0e2.reset\n    }\n\n    \n\n    instance(x: -1012, y: -31) all_Characters_Same_96c1da root.main.all_Characters_Same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: 1, y: 179, name: \"all equal\") filter_4c5f64 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 339, y: 188) ifexpression_2c8e5c root.Std_k98ojb.Std.IfExpression {\n            expression: \"current == first\"\n        }\n        func() {\n            in(x: 49, y: 202, name: \"current\") property(String) current_bdaa43\n\n            out(x: 499, y: 203, name: \"bool\") property(Bool) bool_1b0c1f\n\n            instance(x: 251, y: 203) equal_9d4bc1 root.Std_k98ojb.Logic.Equal {}\n            current_bdaa43 -> equal_9d4bc1.left\n            first -> equal_9d4bc1.right\n            equal_9d4bc1.result -> bool_1b0c1f\n        } -> filter_4c5f64.handler\n        string_db4ddf -> filter_4c5f64.items\n        instance(x: 0, y: 6, name: \"first character\") getat_91ec41 root.Std_k98ojb.List.GetAt {}\n        0 -> getat_91ec41.index\n        string_db4ddf -> getat_91ec41.list\n        instance(x: 272, y: 130, name: \"list of characters\") characters_e2dfc6 root.Std_k98ojb.Strings.Characters {}\n        string_db4ddf -> characters_e2dfc6.input\n        characters_e2dfc6.output -> filter_4c5f64.items\n        ifexpression_2c8e5c.else -> continue_67430e\n        ifexpression_2c8e5c.value -> output_e9fa68\n        ifexpression_2c8e5c.then -> continue_67430e\n        getat_91ec41.itemAtIndex -> first\n        filter_4c5f64.output_list.length -> ifexpression_2c8e5c.gen_0\n        filter_4c5f64.output_list -> ifexpression_2c8e5c.gen_1\n        filter_4c5f64.output_list -> characters_e2dfc6.output\n        execute_f1c7e0 -> continue_67430e\n    }\n\n    \n\n    instance(x: -1201, y: 1) all_characters_same_5b5a46 root.main.all_Characters_Same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -713, y: 178, name: \"Characters list\") characters_f7ad98 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -499, y: 168, name: \"map\") map_d0f6c2 root.Std_k98ojb.Iteration.Map {}\n        instance(x: -323, y: 174, name: \"zip\") zip_46e8f0 root.Std_k98ojb.Iteration.Zip {}\n        instance(x: -150, y: 177, name: \"filter\") filter_d2e9a5 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 38, y: 180) count_0f93df root.Std_k98ojb.Std.Count {}\n        instance(x: 244, y: 179) and_4a6b3e root.Std_k98ojb.Logic.And {}\n        func() {\n            in(x: -18, y: 38, name: \"current\") property(String) current_6d3b7b\n\n            out(x: 358, y: 41, name: \"output\") property(String) output_d81f8c\n\n            instance(x: 146, y: 37) toupper_a3a8c2 root.Std_k98ojb.Strings.ToUpper {}\n            current_6d3b7b -> toupper_a3a8c2.input\n            toupper_a3a8c2.output -> output_d81f8c\n        } -> map_d0f6c2.handler\n        instance(x: 437, y: 181) if_6a2f66 root.Std_k98ojb.Std.If {}\n        instance(x: 521, y: 179) equal_7ce0f7 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 680, y: 178) not_0ec4b7 root.Std_k98ojb.Logic.Not {}\n        instance(x: 777, y: 181) and_e9b2e8 root.Std_k98ojb.Logic.And {}\n        instance(x: 862, y: 179) if_0bfb36 root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -19, y: 119, name: \"element\") property(String) element_5e2a73\n\n            out(x: 554, y: 116, name: \"bool\") property(Bool) bool_d2d9c7\n\n            instance(x: 179, y: 109) notequal_9e4ab1 root.Std_k98ojb.Logic.NotEqual {}\n            element_5e2a73 -> notequal_9e4ab1.left\n            zip_46e8f0.zipped -> notequal_9e4ab1.right\n            notequal_9e4ab1.result -> bool_d2d9c7\n        } -> filter_d2e9a5.handler\n        characters_f7ad98.output -> map_d0f6c2.items\n        map_d0f6c2.output_list -> zip_46e8f0.left\n        characters_f7ad98.output -> zip_46e8f0.right\n        zip_46e8f0.zipped -> filter_d2e9a5.items\n        filter_d2e9a5.output_list -> count_0f93df.value\n        count_0f93df.count -> if_0bfb36.predicate\n        count_0f93df.value -> equal_7ce0f7.left\n        0 -> equal_7ce0f7.right\n        equal_7ce0f7.result -> not_0ec4b7.input\n        count_0f93df.reset -> execute_f1c7e0\n        not_0ec4b7.result -> and_4a6b3e.left\n        zip_46e8f0.zipped -> and_4a6b3e.right\n        and_4a6b3e.result -> if_6a2f66.predicate\n        count_0f93df.next -> if_6a2f66.execute\n        if_6a2f66.else -> continue_67430e\n        if_0bfb36.then -> continue_67430e\n        if_6a2f66.then -> if_0bfb36.execute\n        not_0ec4b7.result -> and_e9b2e8.left\n        map_d0f6c2.output_list -> and_e9b2e8.right\n        and_e9b2e8.result -> if_0bfb36.predicate\n        if_0bfb36.else -> continue_67430e\n        if_6a2f66.value -> output_e9fa68\n    }\n\n    \n\n    instance(x: -1035, y: 8) all_Characters_Same_8d5e52 root.main.all_Characters_Same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -715, y: 190, name: \"list\") characters_7c4cfc root.Std_k98ojb.Strings.Characters {}\n        instance(x: -492, y: 213, name: \"first element\") firstitem_f1d3f9 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -311, y: 213, name: \"remove first element\") remove_1c7a8e root.Std_k98ojb.List.Remove {}\n        instance(x: -111, y: 238, name: \"check\") contains_5b36d2 root.Std_k98ojb.List.Contains {}\n        instance(x: -10, y: 217, name: \"get at index\") getat_7c3e5e root.Std_k98ojb.List.GetAt {}\n        instance(x: 261, y: 213, name: \"If\") if_ba54a2 root.Std_k98ojb.Std.If {}\n        instance(x: 498, y: 219) lessthanorequal_8bf93c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 684, y: 207) ifexpression_c2dce7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < length\"\n        }\n        instance(x: 882, y: 204) not_92c2a1 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1084, y: 213) for_1c3b5d root.Std_k98ojb.Std.For {}\n        instance(x: 1393, y: 232) equal_3b0aa8 root.Std_k98ojb.Logic.Equal {}\n        getter(x: 1150, y: 241, name: \"getter_7c5a8c\") getter_7c5a8c = index\n        setter(x: 1183, y: -212, name: \"setter_9f4b7f\") setter_9f4b7f = index\n        getter(x: 0, y: -225, name: \"getter_9f4b7f\") getter_5f8a91 = index\n        setter(x: -261, y: 216, name: \"setter_8d5b98\") setter_8d5b98 = index\n        string_db4ddf -> characters_7c4cfc.input\n        characters_7c4cfc.output -> firstitem_f1d3f9.list\n        characters_7c4cfc.output -> remove_1c7a8e.list\n        firstitem_f1d3f9.item -> contains_5b36d2.item\n        remove_1c7a8e.index -> getat_7c3e5e.index\n        0 -> getat_7c3e5e.index\n        remove_1c7a8e.listWithoutItem -> getat_7c3e5e.list\n        getat_7c3e5e.itemAtIndex -> if_ba54a2.predicate\n        contains_5b36d2.list -> if_ba54a2.input\n        if_ba54a2.else -> continue_67430e\n        if_ba54a2.then -> setter_9f4b7f.execute\n        true -> ifexpression_c2dce7.gen_1\n        getter_7c5a8c.value -> lessthanorequal_8bf93c.left\n        getat_7c3e5e.output_list -> lessthanorequal_8bf93c.right\n        lessthanorequal_8bf93c.result -> ifexpression_c2dce7.gen_0\n        not_92c2a1.result -> output_e9fa68\n        ifexpression_c2dce7.value -> not_92c2a1.input\n        ifexpression_c2dce7.else -> continue_67430e\n        ifexpression_c2dce7.then -> setter_8d5b98.execute\n        getat_7c3e5e.output_list -> for_1c3b5d.items\n        for_1c3b5d.item -> equal_3b0aa8.left\n        getter_5f8a91.value -> equal_3b0aa8.right\n        for_1c3b7d.onItem -> equal_3b0aa8.execute\n        equal_3b0aa8.result -> if_ba54a2.execute\n        for_1c3b7d.index -> getat_7c3e5e.index\n        for_1c3b7d.done -> continue_67430e\n        setter_8d5b98.new_value -> for_1c3b7d.reset\n        setter_9f4b7f.new_value -> for_1c3b7d.next\n        execute_f1c7e0 -> getter_5f8a91.execute\n        setter_5f8a91.continue -> getter_7c5a8c.execute\n        setter_9f4b7f.continue -> getter_7c5a8c.execute\n    }\n\n    \n\n    instance(x: -113, y: 11) all_Characters_Same_1f2e6a root.main.all_Characters_Same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -719, y: 171) firstitem_5b66c3 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -726, y: 67) characters_bf4a2d root.Std_k98ojb.Strings.Characters {}\n        instance(x: -437, y: 110) filter_3e83d0 root.Std_k98ojb.Query.Filter {\n            where: \"it == firstItem\"\n        }\n        instance(x: -174, y: 114) length_63f8d7 root.Std_k98ojb.List.Length {}\n        instance(x: -80, y: 221) if_7f1f5c root.Std_k98ojb.Std.If {}\n        instance(x: 281, y: 218) equal_3f4b8d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 494, y: 125) not_6f69b8 root.Std_k98ojb.Logic.Not {}\n        instance(x: 664, y: 131) and_f7eaa5 root.Std_k98ojb.Logic.And {}\n        instance(x: 879, y: 128) if_8d7f2c root.Std_k98ojb.Std.If {}\n        characters_bf4a2d.characters -> firstitem_5b66c3.list\n        characters_bf4a2d.characters -> filter_3e83d0.list\n        firstitem_5b66c3.item -> filter_3e83d0.firstItem\n        string_db4ddf -> characters_bf4a2d.input\n        filter_3e83d0.result -> length_63f8d7.list\n        length_63f8d7.length -> equal_3f4b8d.left\n        characters_bf4a2d.characters -> equal_3f4b8d.right\n        not_6f69b8.input -> equal_3f4b8d.result\n        not_6f69b8.result -> if_7f1f5c.predicate\n        execute_f1c7e0 -> if_7f1f5c.execute\n        if_7f1f5c.then -> continue_67430e\n        if_7f1f5c.else -> and_f7eaa5.left\n        if_7f1f5c.value -> and_f7eaa5.right\n        and_f7eaa5.result -> if_8d7f2c.predicate\n        execute_f1c7e0 -> if_8d7f2c.execute\n        if_8d7f2c.then -> output_e9fa68\n        and_f7eaa5.result -> if_8d7f2c.value\n        length_63f8d7.length -> if_8d7f2c.else\n        if_8d7f2c.else -> continue_67430e\n    }\n\n    \n\n    instance(x: -111, y: -30) all_Characters_Same_c7b0fd root.main.all_Characters_Same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n        instance(x: 0, y: 0) count_3c3d5d root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) for_c3c6b7 root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) expression_f8d1f8 root.Std_k98ojb.Math.Expression {\n            expression: \"it.isnumeric()\"\n        }\n        func() {\n            in(x: 50, y: 76, name: \"it\") property(String) it_3d2a5f\n\n            out(x: 505, y: 88, name: \"result\") property(Bool) result_87b9c4\n\n            it_3d2a5f -> result_87b9c4\n        } -> expression_f8d1f8.handler\n        string_668bd2 -> for_c3c6b7.items\n        expression_f8d1f8.result -> count_3c3d5d.count\n        count_3c3d5d.count -> count_1f468d\n        for_c3c6b7.on_item -> expression_f8d1f8.execute\n        count_3c3d5d.reset -> for_c3c6b7.reset\n        for_c3c6b7.trigger 1: DOI: 10.4103/0971-5851.182135\n2: \n3: Authors: M. M. Sharma, D. K. Sharma, P. Gogia, K. Chaturvedi, A. Bhargava, H. K. Bhatia, S. N. Shukla, V. Kumar, T. Dikshit, R. K. Garg, et al.\n4: Journal: Indian Journal of Medical and Paediatric Oncology : Official Journal of Indian Society of Medical & Paediatric Oncology\n5: Date: 2016\n6: Keywords: Incidence, India, population-based, registry, trends\n\n7: \n\n8: **Background:**The cancer incidence data for India were not available in GLOBOCAN 2012. Hence, an attempt was made to generate data on incidence from population-based cancer registries (PBCRs) in India for 2014.\n\n9: **Methods:**Data from 16 PBCRs were used for analysis. Standardized incidence rates (SIR) were calculated for the 16 registries separately and then for the entire country.\n\n10: **Results:**In the year 2014, 3,05,987 new cancer cases were registered in 16 PBCRs in India. The SIR for the entire country was 140/100,000 population. The crude rates ranged from 53.9/100,000 in Delhi to 259.3/100,000 in Mumbai. The age-standardized rates were also highest in Mumbai (249.3/100,000). The SIR for both males and females was highest in Mumbai followed by Delhi. The SIR for males and females were 149.6/100,000 and 127.6/100,000, respectively. Breast, cervix uteri, and oral cavity cancers were the most common cancers in women, whereas cancers of the oral cavity, lung, and stomach were most common in men. The SIRs for both males and females were highest in age group 65\u201374 years.\n\n11: **Conclusion:**The present study suggests that cancer is becoming a major health problem in India, especially in urban areas. It is necessary to improve the cancer registration in India so that the estimates of cancer incidence can be generated using more robust methodology and provide a baseline for planning of future cancer control programs.\n\n12: \n\n13: Cancer is a major public health problem across the globe. It is the second leading cause of mortality in the world, accounting for nearly 8.8 million deaths in 2015.[[1]] A recent estimate from GLOBOCAN 2012 suggests that there are 14.1 million new cancer cases and 8.2 million deaths worldwide.[[2]] The burden of cancer is increasing in developing countries as these countries are undergoing demographic and epidemiological transition and also experience an aging population. In India, the prevalence of risk factors for cancer is high.[[3] [4]] However, there was no comprehensive data available on the cancer incidence in the country at the national level. Cancer registries in India were established during the last century; however, the cancer registration was not very effective until 1990s.[[5] [6]] The registration of cancer is still not very widespread in India. There are 26 population-based cancer registries (PBCRs) in India; however, many of them are not functioning optimally.[[7]] Therefore, there was a need to generate the national level cancer incidence data in India. This was done by using data from 16 PBCRs in India. This paper provides the estimates of cancer incidence in India in 2014 and the analysis of the patterns of cancer in the country. These estimates will serve as a baseline for planning of cancer control programs in India.\n\n14: \n\n15: The PBCRs in India were established in the period between 1970s and 1990s and these registries cover a diverse geographical area of the country, that is, north, east, west, and south. These PBCRs are located in the states of Maharashtra, Delhi, Karnataka, Kerala, Mizoram, Nagaland, Andhra Pradesh, Tamil Nadu, Gujarat, Assam, West Bengal, Haryana, Punjab, and Rajasthan. The 16 registries are: Bhopal, Chennai, Delhi, Gujarat, Mumbai, Nagpur, Bangalore, Thiruvananthapuram, Nagaland, Mizoram, Punjab, Haryana, Chandigarh, Patna, Guwahati, and Jaipur. All these registries have been certified by the National Cancer Registry Programme (NCRP) as per the guidelines of the International Agency for Research on Cancer (IARC).[[8]] These registries are also designated as IARC Collaborating Centres.\n\n16: The PBCRs in India follow the IARC protocol for registration of cancer.[[9]] In most of the PBCRs, data on cancer patients are obtained from the hospital records and also from the cancer treatment facilities such as medical oncology units, radiation therapy departments, pathology departments, etc. All these registries have a good coverage of the population in their respective catchment areas. A number of PBCRs also collect the data on patients from the primary health centers and rural health centers. The data from the PBCRs are sent to the NCRP, which is a part of the National Centre for Disease Informatics and Research (NCDIR), Bangalore. The NCRP is responsible for the generation of the cancer incidence data for the country.\n\n17: The population for all the PBCRs was estimated by using the census data of 2011 and the projected growth rates for the respective registry areas.[[10]] The projected populations were calculated for the year 2014. The age-specific incidence rates were calculated for the different age groups for both males and females. The data were then analyzed for the age groups 0\u201314, 15\u201344, 45\u201364, and 65 years and above. The data were also analyzed by the period of 10 years. The data on the incidence of cancer were also analyzed for the different anatomic sites for the country as a whole and also separately for the males and females. The data were also analyzed for the age groups and for the period 2004\u20132014.\n\n18: \n\n19: The age-specific rates were calculated for the different age groups for both males and females and the age-standardized rates (SIR) were calculated using the world standard population.[[11]] The SIRs were calculated for the entire country and also for each PBCR. The projected populations were used for calculating the SIR. The SIRs were calculated for the country as a whole and also for males and females separately. The SIRs were also calculated for different age groups.\n\n20: \n\n21: A total of 3,05,987 new cancer cases were registered in the 16 PBCRs in India during the year 2014. The SIR for the country as a whole was 140/100,000 population. The age-specific SIRs for the country are presented in Table 1. The SIRs were highest for the age group 65\u201374 years. The SIRs for the period 2004\u20132014 are presented in Figure 1. The SIRs have increased from 118/100,000 in 2004 to 140/100,000 in 2014. The SIRs for the period 2004\u20132014 are presented in Table 2.\n\n22: **Table 1:** Age-specific incidence rates for India in",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 0, y: 0) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it % 1 == 0\"\n        }\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 0, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: 0, y: 0) characters_8efc7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_1e4bcb root.Std_k98ojb.Std.Count {}\n\n        characters_8efc7f.output -> filter_7b3b7b.list\n        ifexpression_3d7de6.then -> count_1e4bcb.trigger\n        filter_7b3b7b.result -> length_6e87f2.list\n        string_668bd2 -> characters_8efc7f.input\n        length_6e87f2.length -> count_1e4bcb.count\n        filter_7b3b7b.result -> ifexpression_3d7de6.items\n        count_1e4bcb.value -> count_1f468d\n    }\n\n    \n\n    instance(x: 102, y: 53) CountDigits_8c4a49 root.main.number_ctr {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n\tfunc(doc: \"Counts number of digits in a given string.\") number_ctr {\n\t\tin(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n\t\tout(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n\t\tinstance(x: 0, y: 0) count_2c96a0 root.Std_k98ojb.Iteration.Filter {}\n\t\tfunc() {\n\t\t\tin(x: -111, y: 28, name: \"char\") property(String) char_5a3a50\n\t\t\tout(x: 524, y: 47, name: \"isNumber\") property(Bool) isNumber_9b9e78\n\t\t\tinstance(x: 83, y: 23) isnumeric_0ec5dc root.Std_k98ojb.Strings.IsNumeric {}\n\t\t\tchar_5a3a50 -> isnumeric_0ec5dc.input\n\t\t\tisnumeric_0ec5dc.result -> isNumber_9b9e78\n\t\t} -> count_2c96a0.handler\n\t\tstring_668bd2 -> count_2c96a0.items\n\t\tcount_2c96a0.output_list -> list_3d06fa\n\t\tlist_3d06fa -> length_1c7f61.list\n\t\tinstance(x: 0, y: 0) length_1c7f61 root.Std_k98ojb.List.Length {}\n\t\tlength_1c7f61.length -> count_1f468d\n\t}\n\t\n\tinstance(x: 0, y: 0) list_3d06fa root.main.number_ctr {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: -42, y: 68) count_c8eb6c root.Std_k98ojb.Count {}\n        instance(x: -18, y: 0) characters_b9e91e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 210, y: -19) is_numeric_e8ec57 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 538, y: -19) expression_c9c1f5 root.Std_k98ojb.Math.Expression {\n            expression: \"it + 1\"\n        }\n        instance(x: 840, y: 29) expression_c1bde5 root.Std_k98ojb.Math.Expression {\n            expression: \"it - 1\"\n        }\n        characters_b9e91e.input -> is_numeric_e8ec57.input\n        string_668bd2 -> characters_b9e91e.input\n        count_c8eb6c.count -> expression_c9c1f5.gen_0\n        count_c8eb6c.count -> expression_c1bde5.gen_0\n        is_numeric_e8ec57.result -> expression_c9c1f5.gen_1\n        is_numeric_e8ec57.result -> expression_c1bde5.gen_1\n        expression_c9c1f5.result -> count_c8eb6c.next\n        expression_c1bde5.result -> count_c8eb6c.reset\n        count_c8eb6c.count -> count_1f468d\n    }\n\n    \n\n    instance(x: -54, y: 529) number_ctr_2c856f root.main.number_ctr {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: -18, y: 81) characters_c1d0ce root.Std_k98ojb.Strings.Characters {}\n        instance(x: 274, y: 78) length_5bb3f1 root.Std_k98ojb.List.Length {}\n        instance(x: 538, y: 50) filter_3c05ae root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        instance(x: 812, y: 50) expression_c9abf7 root.Std_k98ojb.Math.Expression {\n            expression: \"length - Std_k98ojb.List.Length(filter)\"\n        }\n        characters_c1d0ce.characters -> length_5bb3f1.list\n        characters_c1d0ce.characters -> filter_3c05ae.list\n        expression_c9abf7.gen_0 -> count_1f468d\n        length_5bb3f1.length -> expression_c9abf7.gen_1\n        filter_3c05ae.result -> expression_c9abf7.gen_2\n        string_668bd2 -> characters_c1d0ce.input\n    }\n\n    \n\n    instance(x: -71, y: 169) number_ctr_1dfe1a root.main.number_ctr {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 0, y: 0) for_f0b6f2 root.Std_k98ojb.Std.For {}\n        func() {\n            out(x: 1116, y: 79, name: \"continue\") trigger() continue_36f3d9\n\n            instance(x: 0, y: 0) numeric_1cc7e5 root.Std_k98ojb.Strings.IsNumeric {}\n            instance(x: 98, y: 39) count_bdc8ec root.Std_k98ojb.Std.Count {}\n            numeric_1cc7e5.result -> count_bdc8ec.trigger\n            instance(x: 309, y: 39) increment_8f3b4d root.Std_k98ojb.Math.Add {}\n            1 -> increment_8f3b4d.second\n            count_bdc8ec.count -> increment_8f3b4d.first\n            increment_8f3b4d.result -> count_bdc8ec.reset\n            count_bdc8ec.count -> count_1f468d\n\n            continue_36f3d9 -> for_f0b6f2.next\n        } -> for_f0b6f2.handler\n        string_668bd2 -> for_f0b6f2.items\n    }\n\n    \n\n    instance(x: 0, y: 0) number_ctr_0cb8e5 root.main.number_ctr {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 17, y: 63) characters_6e6b6d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 434, y: 84) length_8f8d52 root.Std_k98ojb.List.Length {}\n        instance(x: 0, y: 0) ifexpression_8d4c5f root.Std_k98ojb.Std.IfExpression {}\n        func() {\n            in(x: -94, y: 64, name: \"c\") property(String) c_7cdd31\n\n            out(x: 1015, y: 92, name: \"bool\") property(Bool) bool_f7e5b4\n\n            instance(x: 87, y: 67) isnumeric_6eb0ba root.Std_k98ojb.Strings.IsNumeric {}\n            c_7cdd31 -> isnumeric_6eb0ba.input\n            isnumeric_6eb0ba.result -> bool_f7e5b4\n        } -> ifexpression_8d4c5f.predicate\n        characters_6e6b6d.characters -> ifexpression_8d4c5f.gen_0\n        length_8f8d52.length -> ifexpression_8d4c5f.gen_1\n        characters_6e6b6d.characters -> ifexpression_8d4c5f.gen_2\n        string_668bd2 -> characters_6e6b6d.input\n        ifexpression_8d4c5f.result -> length_8f8d52.list\n        length_8f8d52.length -> count_1f468d\n    }\n\n    \n\n    instance(x: 74, y: 0) num_cnt_9d2dfc root.main.number_ctr {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 0, y: 0) isnumeric_d5a7a0 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 263, y: 0) count_7d7d2e root.Std_k98ojb.Std.Count {}\n        instance(x: 262, y: 0) characters_b7f42c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 494, y: 0) map_6f3c7c root.Std_k98ojb.Iteration.Map {\n            handler: 1\n        }\n        instance(x: 787, y: 0) filter_3e8f0f root.Std_k98ojb.Query.Filter {\n            where: \"it\"\n        }\n        characters_b7f42c.output -> map_6f3c7c.items\n        isnumeric_d5a7a0.value -> isnumeric_d5a7a0.input\n        string_668bd2 -> characters_b7f42c.input\n        map_6f3c7c.output_list -> filter_3e8f0f.list\n        filter_3e8f0f.result -> count_7d7d2e.trigger\n        count_7d7d2e.count -> count_1f468d\n    }\n\n    \n\n    instance(x: 126, y: 42) number_ctr_6aa61e root.main.number_ctr {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 27, y: 55) isnumeric_4f96e8 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 373, y: 50) count_aea0b1 root.Std_k98ojb.Iteration.Filter {\n            handler: {\n                in  0\n                out 1\n            }\n        }\n        instance(x: 702, y: 41) length_ea7a99 root.Std_k98ojb.List.Length {}\n        string_668bd2 -> isnumeric_4f96e8.input\n        isnumeric_4f96e8.output -> count_aea0b1.items\n        count_aea0b1.output_list -> length_ea7a99.list\n        length_ea7a99.length -> count_1f468d\n    }\n\n    \n\n    instance(x: -24, y: 220) number_ctr_fbcf01 root.main.number_ctr {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 0, y: 0) for_ee4a1d root.Std_k98ojb.Std.For {\n            items: \"string.characters\"\n        }\n        func() {\n            out(x: 615, y: 111, name: \"continue\") trigger() continue_8d5d5e\n            out(x: 616, y: 56, name: \"reset\") trigger() reset_7d9e65\n\n            instance(x: 75, y: 57) isnumeric_1e4e16 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1e4e16.result -> count_1f468d\n            for_ee4a1d.item -> isnumeric_1e4e16.input\n            for_ee4a1d.next -> continue_8d5d5e\n            for_ee4a1d.trigger 1: DOI: 10.4103/jips.jips_100_17\n2: \n3: Authors: Jyothsna V. Rao, Abhiram Shetty, Nidhi Raj, Kalyani N. Nimbalkar, Sanjeev Gupta, K Nibali, A El-Deeb, K Nibali, A El-Deeb, A El-Deeb, et al.\n4: Journal: The Journal of the Indian Prosthodontic Society\n5: Date: 2018\n6: Keywords: Bifid root, computed tomography, cone-beam computed tomography, panoramic radiograph, premolar\n\n7: \n\n8: Bifid roots in premolars are rare. This article reports a case of a bifid root in maxillary left first premolar of a 23-year-old female patient. This is the first reported case of a bifid root in a maxillary left first premolar. The diagnosis was made using conventional radiographs and cone-beam computed tomography. The bifid root was treated using endodontic surgery.\n\n9: \n\n10: Tooth anomalies may be congenital or acquired. The anomalies may occur at any stage during the life of an individual, including the prenatal stage, neonatal stage, and postnatal stage.[[1]] Anomalies may involve any of the four main components of the tooth: Crown, root, cementum, and periodontal ligament. The root is considered to be the most common site of anomalies.[[1]] Bifid roots are rarely reported in teeth with a single root canal.[[2]] A bifid root is considered as an anatomical variation in which a single root is divided into two roots with a single root canal.[[3] [4] [5]] The prevalence of this anomaly has been reported in different studies to be 0.13% in primary teeth and 0.24% in permanent teeth.[[1]] A bifid root can be unilateral or bilateral, and it can occur anywhere in the root length or apical third of the root.[[6]] The bifid root anomaly has been reported in different permanent teeth, including maxillary lateral incisors, maxillary and mandibular canines, maxillary first premolars, mandibular first premolars, and mandibular second premolars.[[1] [2] [3] [4] [5] [6] [7]] However, it is rarely reported in premolars.[[3] [8]] It is important to be familiar with these variations as they may be associated with clinical problems and misdiagnosis of pathology.[[2]] This article reports a case of a bifid root in maxillary left first premolar of a 23-year-old female patient. This is the first reported case of a bifid root in maxillary left first premolar.\n\n11: \n\n12: A 23-year-old female patient reported to the Department of Conservative Dentistry and Endodontics, Sree Balaji Dental College and Hospital, with a chief complaint of pain in the upper back teeth region for the last 3 days. The patient had a history of trauma to the upper back teeth region 10 years back while playing tennis. She had undergone a root canal treatment on the same tooth 2 years back. There was no relevant family history.\n\n13: On clinical examination, no swelling was seen. The tooth was tender on percussion. There was a sinus tract in the region of the tooth. No fistula was seen. The tooth was tender on palpation.\n\n14: On radiographic examination, a periapical radiolucency was seen in the region of the left maxillary first premolar [Figure 1]. On close examination, the tooth showed the presence of a well-maintained root canal filling. The root canal filling was seen to be extending beyond the apex. A bifid root was suspected. Cone-beam computed tomography (CBCT) was done to confirm the diagnosis. CBCT showed a well-defined radiolucent area extending from the mid-root of the tooth toward the buccal surface [Figure 2]. It also showed a bifid root with a single root canal [Figure 3].\n\n15: **Figure 1:** Preoperative periapical radiograph showing the bifid root with a single root canal and periapical radiolucency\n\n16: [image:JIPS-18-20-g001]\n\n17: **Figure 2:** Cone-beam computed tomography axial section showing the bifid root with a single root canal and periapical radiolucency\n\n18: [image:JIPS-18-20-g002]\n\n19: **Figure 3:** Cone-beam computed tomography coronal section showing the bifid root with a single root canal\n\n20: [image:JIPS-18-20-g003]\n\n21: A diagnosis of bifid root with a single root canal and periapical pathosis was made. The tooth was treated using endodontic surgery. Under local anesthesia, an incision was given in the buccal gingiva and a full-thickness flap was raised. After reflection of the flap, a granulomatous lesion was seen in the bifurcation of the root. It was enucleated and sent for biopsy. The lesion was identified as periapical granuloma. Curettage of the lesion was done. The tooth was retro filled using mineral trioxide aggregate (MTA). The flap was repositioned and sutured. The patient was prescribed 1 g of amoxicillin and 400 mg of ibuprofen to be taken three times a day for 7 days. The patient was recalled for follow-up after 1 week. The sutures were removed after 2 weeks. A periapical radiograph was taken after 1 year [Figure 4]. The patient reported no pain or swelling at the follow-up.\n\n22: **Figure 4:** One year postoperative periapical radiograph showing healing of the lesion\n\n23: [image:JIPS-18-20-g004]\n\n24: \n\n25: Bifid roots are anatomical variations in which a single root is divided into two roots with a single root canal.[[3] [4] [5]] These anomalies are rare in permanent teeth. The prevalence of these anomalies has been reported in different studies to be 0.13% in primary teeth and 0.24% in permanent teeth.[[1]] Bifid roots are classified based on the location of the bifurcation, as distal bifid roots, mesial bifid roots, and bifid roots with the bifurcation near the apex.[[1]] Bifid roots have been reported in different teeth, including maxillary lateral incisors, maxillary and mandibular canines, maxillary first premolars, mandibular first premolars, and mandibular second premolars.[[1] [2] [3] [4] [5] [6] [7]] However, it is rarely reported in premolars.[[3] [8]] To our knowledge, this is the first reported case of a bifid root in maxillary left first premolar.\n\n26: The exact etiology of bifid roots is unknown. A genetic origin has been hypothesized. However, trauma during the tooth formation has been proposed as a possible etiology.[[9]] The patient reported a history of trauma 10 years back. It is possible that this may have led to the development of the bifid root. However, it cannot be confirmed.\n\n27: Radiographic examination is the most common diagnostic tool used for the diagnosis of bifid roots. The bifid root may be confused with a supernumerary tooth, a dilacerated root, a root fracture, or a split root.[[3]] Intraoral radiographs show the bifurcation as a radiopaque line, giving the appearance of a radiopaque tooth. This is the \u201cC-shaped\u201d or \u201cH-shaped\u201d appearance.[[1] [3]] CBCT is considered the gold standard for the diagnosis of bifid roots.[[1] [3"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        data_instance(x: 347, y: 70) data_81d7c5  = [4, 8, 12]\n        data_instance(x: 352, y: 0) data_7c9f5c  = 4\n        instance(x: -19, y: 46, name: \"Sum of odd numbers\") expression_9dc0e8 root.Std_k98ojb.Math.Expression {\n            expression: \"n * (n+1)\"\n        }\n        instance(x: -32, y: 111) div_74b7ca root.Std_k98ojb.Math.Div {}\n        instance(x: -2, y: -1, name: \"Odd number\") expression_6c2b88 root.Std_k98ojb.Math.Expression {\n            expression: \"2*n-1\"\n        }\n        instance(x: -27, y: 4) expression_ea9cc6 root.Std_k98ojb.Math.Expression {\n            expression: \"pow(n,4)\"\n        }\n        instance(x: 22, y: 53) pow_6f3b3f root.Std_k98ojb.Math.Pow {}\n        instance(x: 42, y: -7, name: \"Sum of odd numbers raised to 4th power\") expression_7c5e52 root.Std_k98ojb.Math.Expression {\n            expression: \"n * (2*n-1) * (2*n+1) * (4*n*n-1)/3\"\n        }\n        data_81d7c5 -> div_74b7ca.second\n        div_74b7ca.result -> data_81d7c5.ii\n        data_81d7c5 -> pow_6f3b3f.second\n        expression_6c2b88.result -> pow_6f3b3f.first\n        expression_ea9cc6.result -> data_81d7c5.i\n        n_0c0609 -> expression_9dc0e8.gen_0\n        div_74b7ca.result -> data_81d7c5.iii\n        expression_9dc0e8.result -> sum_2ad0d5\n        expression_9dc0e8.result -> div_74b7ca.first\n        n_0c0609 -> expression_6c2b88.gen_0\n        n_0c0609 -> pow_6f3b3f.gen_0\n        expression_ea9cc6.result -> sum_2ad0d5\n        pow_6f3b3f.result -> sum_2ad0d5\n        data_7c9f5c -> div_74b7ca.first\n        n_0c0609 -> expression_7c5e52.gen_0\n        expression_7c5e52.result -> sum_2ad0d5\n    }\n\n    \n\n    instance(x: -104, y: 184) odd_num_sum_8f9e7a root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 9, y: -2, name: \"sum\") add_f3a9cc root.Std_k98ojb.Math.Add {}\n        instance(x: 8, y: 95, name: \"n odd numbers\") generate_2c4c85 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 15, y: 32) expression_1c6c95 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 8, y: 0) pow_10a8bb root.Std_k98ojb.Math.Pow {}\n        instance(x: 2, y: 46) mul_1e4fa2 root.Std_k98ojb.Math.Mul {}\n        1 -> generate_2c4c85.from\n        n_0c0609 -> generate_2c4c85.to\n        2 -> pow_10a8bb.second\n        expression_1c6c95.result -> pow_10a8bb.first\n        n_0c0609 -> expression_1c6c95.gen_0\n        generate_2c4c85.result -> mul_1e4fa2.first\n        pow_10a8bb.result -> mul_1e4fa2.second\n        0 -> add_f3a9cc.first\n        mul_1e4fa2.result -> add_f3a9cc.second\n        add_f3a9cc.result -> add_f3a9cc.first\n        add_f3a9cc.result -> sum_2ad0d5\n    }\n\n    \n\n    instance(x: -26, y: 209) odd_num_sum_1f1c8e root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 42, y: -19) mul_7c7b1e root.Std_k98ojb.Math.Mul {}\n        instance(x: 15, y: -74, name: \"power\") mul_5e7ebc root.Std_k98ojb.Math.Mul {}\n        instance(x: -14, y: 24) expression_c5ec7e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 42, y: 38) for_9f03e9 root.Std_k98ojb.Std.For {}\n        data_instance(x: 395, y: 100) data_3c713b  = [sum]\n        instance(x: 3, y: -99, name: \"odd_list\") map_3a7e0f root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -112, y: 28, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 517, y: 44, name: \"output\") property(Number) output_5aa8cc\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> output_5aa8cc\n        } -> map_3a7e0f.handler\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> for_9f03e9.handler\n        list_instance_3bce7d.list -> map_3a7e0f.items\n        list_instance_3bce7d -> for_9f03e9.items\n        expression_c5ec7e.result -> mul_5e7ebc.first\n        mul_5e7ebc.result -> power.first\n        power.result -> mul_7c7b1e.first\n        map_3a7e0f.output_list -> for_9f03e9.items\n        mul_7c7b1e.result -> data_3c713b.sum\n        n_0c0609 -> expression_c5ec7e.gen_0\n        data_3c713b -> sum_2ad0d5\n        power.second -> for_9f03e9.index\n        n_9c9dbd -> mul_7c7b1e.second\n        n_9c9dbd -> power.second\n        n_0c0609 -> n_9c9dbd\n        for_9f03e9.onItem -> mul_7c7b1e.execute\n        mul_7c7b1e.continue -> for_9f03e9.next\n        for_9f03e9.done -> sum_2ad0d5\n        list_instance_3bce7d -> list_generate_range_1ed8b7.range\n        list_generate_range_1ed8b7.result -> list_instance_3bce7d.list\n\n        instance(x: 395, y: 100) list_generate_range_1ed8b7 root.Std_k98ojb.List.GenerateRange {}\n        data_instance(x: 395, y: 100) data_3c713b  = [sum]\n        data_instance(x: 396, y: -110) list_instance_3bce7d = [1,2,3,4,5]\n    }\n\n    \n\n    instance(x: -67, y: 195) odd_num_sum_3e0f3c root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 36, y: 35, name: \"find power\") power_1f8b3b root.Std_k98ojb.Math.Pow {}\n        instance(x: 19, y: 122, name: \"find sum\") reduce_7b3f0f root.Std_k98ojb.Iteration.Reduce {}\n        data_instance(x: 391, y: 127) data_c9c1f4  = [sum, x]\n        instance(x: 310, y: 146) mul_6b7b88 root.Std_k98ojb.Math.Mul {}\n        instance(x: 19, y: 167, name: \"find odd numbers\") expression_5f2ab7 root.Std_k98ojb.Math.Expression {}\n        n_0c0609 -> expression_5f2ab7.gen_0\n        instance(x: 301, y: 184) generate_range_cdb0fa root.Std_k98ojb.List.GenerateRange {}\n        1 -> generate_range_cab4b2.from\n        generate_range_cab4b2.range -> expression_5f2ab7.gen_1\n        generate_range_cdb0fa.to -> expression_5f2ab7.gen_2\n        n_0c0609 -> generate_range_cdb0fa.to\n        generate_range_cdb0fa.range -> reduce_7b3f0f.items\n        reduce_7b3f0f.accumulated -> mul_6b7b88.first\n        power_1f8b3b.result -> mul_6b7b88.second\n        mul_6b7b88.result -> reduce_7b3f0b.accumulated\n        0 -> data_c9c1f4.sum\n        reduce_7b3f0f.items -> data_c9c1f4.x\n        data_c9c1f4.sum -> sum_2ad0d5\n        expression_5f2ab7.result -> power_1f8b3b.base\n        4 -> power_1f8b3b.exponent\n    }\n\n    \n\n    instance(x: -33, y: 227) odd_num_sum_7f8f8b root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        data_instance(x: -5, y: 90) data_7b8b77  = [sum]\n        instance(x: 105, y: 65, name: \"sum\") expression_8b1e7b root.Std_k98ojb.Math.Expression {\n            expression: \"n*(2*n*n-1)*(2*n*n-1)\"\n        }\n        instance(x: -17, y: -21) for_4b2c2a root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -193, y: -14, name: \"current\") property(Number) current_1d72bc\n\n            out(x: 522, y: -31, name: \"bool\") property(Bool) bool_7f8d85\n\n            instance(x: 77, y: -18) modulo_9d6d63 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 298, y: -23) notequal_4c82ef root.Std_k98ojb.Logic.NotEqual {}\n            current_1d72bc -> modulo_9d6d63.value\n            2 -> modulo_9d6d63.divisor\n            modulo_9d6d63.result -> notequal_4c82ef.left\n            0 -> notequal_4c82ef.right\n            notequal_4c82ef.result -> bool_7f8d85\n        } -> for_4b2c2a.predicate\n        n_0c0609 -> for_4b2c2a.to\n        n_0c0609 -> for_4b2c2a.from\n        1 -> for_4b2c2a.from\n        expression_8b1e7b.gen_0 -> for_4b2c2a.gen_0\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> for_4b2c2a.predicate\n        for_4b2c2a.onItem -> data_7b8b77.sum\n        expression_8b1e7b.result -> data_7b8b77.sum\n        for_4b2c2a.done -> data_7b8b77.continue\n        data_7b8b77.continue -> sum_2ad0d5\n    }\n\n    \n\n    instance(x: 15, y: 186) odd_num_sum_d4d41f root.main.odd_num_sum {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 0, y: 0) for_3b1e8d root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_d8a6f7\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_e1e46f\n\n            instance(x: 89, y: 29) modulo_9eae61 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_daf6e3 root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_daf6e3.right\n            modulo_9eae61.result -> notequal_daf6e3.left\n            2 -> modulo_9eae61.divisor\n            elem_d8a6f7 -> modulo_9eae61.value\n            notequal_daf6e3.result -> bool_e1e46f\n        } -> for_3b1e8d.predicate\n        instance(x: 23, y: -1) pow_f9f72c root.Std_k98ojb.Math.Pow {}\n        instance(x: 12, y: 136) expression_4f2b6e root.Std_k98ojb.Math.Expression {\n            expression: \"2*elem - 1\"\n        }\n        instance(x: 303, y: 2) add_d3ba38 root.Std_k98ojb.Math.Add {}\n        instance(x: 62, y: -226) setter_5f6c6e setter_5f6c6e\n         <file_sep1. What, exactly, is  \u0002",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 25, y: 2) expression_b9a0a3 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n*n*n-3*n*n*n-3*n*n+1\"\n        }\n        instance(x: 5, y: -1, name: \"4th power\") pow_7b52ed root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -4, y: -2) data_5c1b96  = 1\n        instance(x: 6, y: -22) add_72d8cc root.Std_k98ojb.Math.Add {}\n        instance(x: 15, y: -19) for_83d8f6 root.Std_k98ojb.Std.For {}\n        data_5c1b96 -> pow_7b52ed.second\n        expression_b9a0a3.result -> pow_7b52ed.first\n        n_0c0609 -> for_83d8f6.items\n        List.GenerateRange -> for_83d8f6.items\n        1 -> List.GenerateRange.from\n        n_0c0609 -> List.GenerateRange.to\n        1 -> List.GenerateRange.step\n        n_0c0609 -> expression_b9a0a3.gen_0\n        for_83d8f6.onItem -> add_72d8cc.second\n        pow_7b52ed.result -> add_72d8cc.first\n        add_72d8cc.result -> data_5c1b96.new_value\n        for_83d8f6.done -> sum_2ad0d5\n        data_5c1b96.new_value -> sum_2ad0d5\n        for_83d8f6.reset -> add_72d8cc.execute\n        n_0c0609 -> for_83d8f6.trigger\n        add_72d8cc.result -> add_72d8cc.first\n        add_72d8cc.result -> add_72d8cc.second\n        add_72d8cc.result -> data_5c1b96.new_value\n    }\n\n    \n\n    instance(x: 9, y: 152) odd_num_sum_e54d2d root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 48, y: -16) mul_3f3b4a root.Std_k98ojb.Math.Mul {}\n        instance(x: 7, y: 0, name: \"power\") expression_5bdc08 root.Std_k98ojb.Math.Expression {\n            expression: \"n*n*n*n\"\n        }\n        data_instance(x: 386, y: 88) data_86ed3b  = [sum]\n        instance(x: 326, y: -1) add_4c5e7a root.Std_k98ojb.Math.Add {}\n        data_86ed3b -> sum_2ad0d5\n        mul_3f3b4a.result -> add_4c5e7a.second\n        1 -> mul_3f3b4a.first\n        expression_5bdc08.result -> mul_3f3b4a.second\n        0 -> add_4c5e7a.first\n        n_0c0609 -> expression_5bdc08.gen_0\n        add_4c5e7a.result -> data_86ed3b.sum\n    }\n    \n\n    instance(x: -58, y: 237) odd_num_sum_f1d7ed root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 0, y: 0) expression_c0ba69 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n*n*n-3*n*n*n+2*n*n-n\"\n        }\n        instance(x: 0, y: 0) expression_2f7c4c root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 0, y: 0) mul_a1aa51 root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: 0) div_1da8d5 root.Std_k98ojb.Math.Div {}\n        instance(x: 0, y: 0) pow_8d3f4a root.Std_k98ojb.Math.Pow {}\n        instance(x: 0, y: 0) add_d9b9b1 root.Std_k98ojb.Math.Add {}\n        n_0c0609 -> expression_c0ba69.gen_0\n        n_0c0609 -> expression_2f7c4c.gen_0\n        expression_c0ba69.result -> mul_a1aa51.first\n        expression_2f7c4c.result -> div_1da8d5.first\n        div_1da8d5.result -> pow_8d3f4a.first\n        mul_a1aa51.result -> pow_8d3f4a.second\n        pow_8d3f4a.result -> add_d9b9b1.first\n        add_d9b9b1.result -> sum_2ad0d5\n        2 -> pow_8d3f4a.second\n    }\n\n    \n\n    instance(x: -62, y: 174) odd_num_sum_81e1cc root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 48, y: 10) expression_3ef1cc root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)^4\"\n        }\n        instance(x: 37, y: -41, name: \"sum\") reduce_2ed4b9 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 44, y: 119, name: \"generate list\") generate_range_9e9f4b root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 35, y: -66, name: \"reduce list\") map_ed3c3e root.Std_k98ojb.Iteration.Map {}\n        generate_range_9e9f4b.to -> expression_3ef1cc.gen_1\n        generate_range_9e9f4b.from -> expression_3ef1cc.gen_0\n        n_0c0609 -> generate_range_9e9f4b.to\n        n_0c0609 -> generate_range_9e9f4b.from\n        expression_3ef1cc.result -> map_ed3c3e.handler.gen_0\n        map_ed3c3e.output_list -> reduce_2ed4b9.items\n        0 -> reduce_2ed4b9.init\n        reduce_2ed4b9.result -> sum_2ad0d5\n    }\n\n    \n\n    instance(x: 26, y: 183) odd_num_sum_f2f28a root.main.odd_num_sum {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: 15, y: -24) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * (size ^ 2)\"\n        }\n        size_49c776 -> math_expr_node.gen_0\n        math_expr_node.result -> Area_a3e36f\n    }\n\n    \n\n    instance(x: 58, y: 16) CubeSurfaceArea_d2c6ae root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: 0, y: 0) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size * size\"\n        }\n        size_49c776 -> math_expr_node.gen_0\n        math_expr_node.result -> Area_a3e36f\n    }\n\n    \n\n    instance(x: 0, y: 0) CubeSurfaceArea_f0d74e root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n\tfunc(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n\t\tin(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n\t\tout(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n\t\tinstance(x: 11, y: -22) expr_11f9b3 root.Std_k98ojb.Math.Expression {\n\t\t\texpression: \"6 * size * size\"\n\t\t}\n\t\tsize_49c776 -> expr_11f9b3.gen_0\n\t\texpr_11f9b3.result -> Area_a3e36f\n\t}\n\t\n\tinstance(x: -35, y: -47, name: \"Cube_SurfaceArea\") cube_area_1b9c6d root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: 8, y: -44) mul_8c6a3c root.Std_k98ojb.Math.Mul {}\n        instance(x: 18, y: -62) mul_5e1b81 root.Std_k98ojb.Math.Mul {}\n        6 -> mul_8c6c5f.second\n        size_49c776 -> mul_8c6c5f.first\n        mul_8c6c5f.result -> mul_5e1b81.first\n        mul_5e1b81.result -> Area_a3e36f\n        instance(x: -40, y: -62) mul_8c6c5f root.Std_k98ojb.Math.Mul {}\n        size_49c776 -> mul_8c6a3c.second\n        mul_8c6a3c.result -> mul_5e1b81.second\n    }\n\n    \n\n    instance(x: 72, y: -41) CubeSurfaceArea_0f9e5f root.main.CubeSurfaceArea {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: 12, y: -46) mul_8a0e4a root.Std_k98ojb.Math.Mul {}\n        instance(x: 12, y: 17) mul_4a2d59 root.Std_k98ojb.Math.Mul {}\n        instance(x: 80, y: 13) add_2e7d81 root.Std_k98ojb.Math.Add {}\n        instance(x: 80, y: -51) mul_2c2a25 root.Std_k98ojb.Math.Mul {}\n        size_49c776 -> mul_8a0e4a.first\n        size_49c776 -> mul_8a0e4a.second\n        size_49c776 -> mul_4a2d59.first\n        size_49c776 -> mul_4a2d59.second\n        mul_8a0e4a.result -> mul_2c2a25.first\n        mul_4a2d59.result -> mul_2c2a25.second\n        mul_2c2a25.result -> add_2e7d81.first\n        add_2e7d81.first -> add_2e7d81.second\n        add_2e7d81.result -> Area_a3e36f\n    }\n\n    \n    instance(x: 60, y: -18) CubeSurfaceArea_aacbe3 root.main.CubeSurfaceArea {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: 2, y: -34) mul_a2f7f6 root.Std_k98ojb.Math.Mul {}\n        instance(x: 6, y: 1) mul_ea2fde root.Std_k98ojb.Math.Mul {}\n        6 -> mul_a2f7f6.first\n        size_49c776 -> mul_a2f7f6.second\n        mul_a2f7f6.result -> mul_ea2fde.first\n        mul_a2f7f6.result -> mul_ea2fde.second\n        mul_ea2fde.result -> Area_a3e36f\n    }\n\n    \n\n    instance(x: -32, y: -6, name: \"CubeSurfaceArea\") expression_3e25a9 root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: 9, y: -51) expr_6cbff0 root.Std_k98ojb.Math.Expression {\n            expression: \"6*(size * size)\"\n        }\n        size_49c776 -> expr_6cbff0.gen_0\n        expr_6cbff0.result -> Area_a3e36f\n    }\n\n    \n\n    instance(x: -35, y: 38) CubeSurfaceArea_37a7f9 root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: -19, y: -48) pow_7a8d2d root.Std_k98ojb.Math.Pow {}\n        instance(x: 274, y: -32) mul_e0cc0c root.Std_k98ojb.Math.Mul {}\n        6 -> mul_e0cc0c.second\n        size_49c776 -> pow_7a8d2d.x\n        2 -> pow_7a8d2d.y\n        pow_7a8d2d.result -> mul_e0cc0c.first\n        mul_e0cc0c.result -> Area_a3e36f\n    }\n\n    \n\n    instance(x: -92, y: -43) CubeSurfaceArea_3f6dc3 root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: 1, y: -55) pow_d7c8a1 root.Std_k98ojb.Math.Pow {}\n        instance(x: 30, y: -2) mul_2a9b6a root.Std_k98ojb.Math.Mul {}\n        instance(x: 58, y: 12) expr_4cfc6d root.Std_k98ojb.Math.Expression {\n            expression: \"6 * (size^2)\"\n        }\n        2 -> pow_d7c8a1.y\n        size_49c776 -> pow_d7c8a1.x\n        pow_d7c8a1.result -> mul_2a9b6a.first\n        6 -> mul_2a9b6a.second\n        mul_2a9b6a.result -> expr_4cfc6d.gen_0\n        expr_4cfc6d.result -> Area_a3e36f\n    }\n\n    \n    instance(x: 64, y: -25) CubeSurfaceArea_3db4a9 root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: -32, y: -36) mul_c1b1d3 root.Std_k98ojb.Math.Mul {}\n        instance(x: 35, y: 2) mul_3bda2c root.Std_k98ojb.Math.Mul {}\n        instance(x: 370, y: -43) mul_4e6c85 root.Std_k98ojb.Math.Mul {}\n        instance(x: 536, y: 1) mul_b7d96d root.Std_k98ojb.Math.Mul {}\n        instance(x: 533, y: -71) add_2a6ee8 root.Std_k98ojb.Math.Add {}\n        instance(x: 547, y: -139) mul_37f3c7 root.Std_k98ojb.Math.Mul {}\n        instance(x: 544, y: -208) mul_3d5a2a root.Std_k98ojb.Math.Mul {}\n        instance(x: 541, y: -276) add_33e1cd root.Std_k98ojb.Math.Add {}\n        mul_c1b1d3.result -> mul_3bda2c.first\n        mul_3bda2c.result -> mul_4e6c85.first\n        mul_4e6c85.result -> mul_b7d96d.first\n        mul_b7d96d.result -> add_2a6ee8.first\n        mul_3bda2c.result -> mul_37f3c7.first\n        mul_37f3c7.result -> mul_3d5a2a.first\n        mul_3d5a2a.result -> add_33e1cd.first\n        size_49c776 -> mul_c1b1d3.first\n        size_49c776 -> mul_c1b1d3.second\n        size_49c776 -> mul_3bda2c.second\n        size_49c776 -> mul_37f3c7.second\n        size_49c776 -> mul_3d5a2a.second\n        6 -> add_2a6ee8.second\n        2 -> mul_b7d96d.second\n        add_2a6ee8.result -> add_33e1cd.second\n        mul_4e6c85.second -> mul_b7d96d.second\n        add_33e1cd.result -> Area_a3e36f\n    }\n\n    \n\n    instance(x: 15, y: 15, name: \"SurfaceArea\") surface_area_b6ff74 root.main.CubeSurfaceArea {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 223, y: 61) sub_f2a1df root.Std_k98ojb.Math.Sub {}\n        instance(x: -0, y: 155) max_93e3a3 root.Std_k98ojb.List.Max {}\n        instance(x: -0, y: -38) min_9c8d0a root.Std_k98ojb.List.Min {}\n        list_9abc1d -> max_93e3a3.list\n        list_9abc1d -> min_9c8d0a.list\n        max_93e3a3.max -> sub_f2a1df.first\n        min_9c8d0a.min -> sub_f2a1df.second\n        sub_f2a1df.result -> difference_27806e\n    }\n\n    \n\n    instance(x: 1, y: 0) big_diff_e2f8b5 root.main.big_diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 237, y: 88) sub_7a4d65 root.Std_k98ojb.Math.Sub {}\n        instance(x: -16, y: 34, name: \"largest value\") max_61ce6a root.Std_k98ojb.List.Max {}\n        instance(x: -9, y: 148, name: \"smallest value\") min_e6ba28 root.Std_k98ojb.List.Min {}\n        sub_7a4d65.first -> difference_27806e\n        max_61ce6a.max -> sub_7a4d65.first\n        min_e6ba28.min -> sub_7a4d65.second\n        list_9abc1d -> max_61ce6a.list\n        list_9abc1d -> min_e6ba28.list\n    }\n\n    \n\n    instance(x: -51, y: 54) big_diff_bf5c2c root.main.big_diff {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n\tfunc(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n\t\tin(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n\t\tout(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n\t\tinstance(x: 0, y: 0) min_f0f0c9 root.Std_k98ojb.List.Min {}\n\t\tinstance(x: 0, y: 0) max_f0f0c9 root.Std_k98ojb.List.Max {}\n\t\tinstance(x: 230, y: 60) sub_ae6a9e root.Std_k98ojb.Math.Sub {}\n\t\tlist_9abc1d -> min_f0f0c9.items\n\t\tlist_9abc1d -> max_f0f0c9.items\n\t\tmin_f0f0c9.min -> sub_ae6a9e.second\n\t\tmax_f0f0c9.max -> sub_ae6a9e.first\n\t\tsub_ae6a9e.result -> difference_27806e\n\t}\n\n\tinstance(x: -77, y: 177) big_diff_bdfbf7 root.main.big_diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 184, y: 63) sub_5dc2c6 root.Std_k98ojb.Math.Sub {}\n        instance(x: 195, y: 186) max_7a9b89 root.Std_k98ojb.List.Max {}\n        instance(x: 205, y: -38) min_27e6d6 root.Std_k98ojb.List.Min {}\n        list_9abc1d -> max_7a9b89.list\n        list_9abc1d -> min_27e6d6.list\n        max_7a9b89.max -> sub_5dc2c6.first\n        min_27e6d6.min -> sub_5dc2c6.second\n        sub_5dc2c6.result -> difference_27806e\n    }\n\n    \n\n    instance(x: -79, y: 85) big_diff_24d8bb root.main.big_diff {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 213, y: 75) sub_8b9b8f root.Std_k98ojb.Math.Sub {}\n        instance(x: -23, y: 17) max_4a2d59 root.Std_k98ojb.List.Max {}\n        instance(x: 183, y: -8) min_0e0e3e root.Std_k98ojb.List.Min {}\n        list_9abc1d -> max_4a2d59.list\n        list_9abc1d -> min_0e0e3e.list\n        max_4a2d59.max -> sub_8b9b8f.first\n        min_0e0e3e.min -> sub_8b9b8f.second\n        sub_8b9b8f.result -> difference_27806e\n    }\n\n    \n\n    instance(x: 9, y: 36) big_diff_20d1f1 root.main.big_diff {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 166, y: 83) sub_6a4be3 root.Std_k98ojb.Math.Sub {}\n        instance(x: -6, y: 79, name: \"Largest Number\") max_2f3d9f root.Std_k98ojb.List.Max {}\n        instance(x: 169, y: 29, name: \"Smallest Number\") min_7fda1e root.Std_k98ojb.List.Min {}\n        list_9abc1d -> max_2f3d9f.list\n        list_9abc1d -> min_7fda1e.list\n        max_2f3d9f.max -> sub_6a4be3.first\n        min_7fda1e.min -> sub_6a4be3.second\n        sub_6a4be3.result -> difference_27806e\n    }\n\n    \n\n    instance(x: -44, y: 119) big_diff_cde8a6 root.main.big_diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 185, y: 76) sub_71f0aa root.Std_k98ojb.Math.Sub {}\n        instance(x: -31, y: 18) max_c8d9c2 root.Std_k98ojb.List.Max {}\n        instance(x: 179, y: -18) min_2edc5f root.Std_k98ojb.List.Min {}\n        list_9abc1d -> max_c8d9c2.list\n        list_9abc1d -> min_2edc5f.list\n        min_2edc5f.min -> sub_71f0aa.first\n        max_c8d9c2.max -> sub_71f0aa.second\n        sub_71f0aa.result -> difference_27806e\n    }\n\n    \n\n    instance(x: 37, y: 45) big_diff_6dfe1a root.main.big_diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: -18, y: 83) max_0f1db3 root.Std_k98ojb.List.Max {}\n        instance(x: -18, y: 222) min_e1cc0c root.Std_k98ojb.List.Min {}\n        instance(x: 332, y: 76) sub_5c1e01 root.Std_k98ojb.Math.Sub {}\n        list_9abc1d -> max_0f1db3.list\n        list_9abc1d -> min_e1cc0c.list\n        max_0f1db3.max -> sub_5c1e01.first\n        min_e1cc0c.min -> sub_5c1e01.second\n        sub_5c1e01.result -> difference_27806e\n    }\n\n    \n\n    instance(x: 93, y: 56) big_diff_c7e9d1 root.main.big_diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 237, y: 93) sub_1f6b2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 237, y: -11) list_max_eb6a67 root.Std_k98ojb.List.Max {}\n        instance(x: 236, y: 168) list_min_cabfc6 root.Std_k98ojb.List.Min {}\n        list_9abc1d -> list_max_eb6a67.list\n        list_9abc1d -> list_min_cabfc6.list\n        list_min_cabfc6.min -> sub_1f6b2e.first\n        list_max_eb6a67.max -> sub_1f6b2e.second\n        sub_1f6b2e.result -> difference_27806e\n    }\n\n    \n\n    instance(x: 36, y: 31) big_diff_4c97f7 root.main.big_diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 206, y: 57) sub_d5d2c4 root.Std_k98ojb.Math.Sub {}\n        instance(x: 208, y: 168) max_3bda24 root.Std_k98ojb.List.Max {}\n        instance(x: 202, y: -29) min_b3b4e6 root.Std_k98ojb.List.Min {}\n        list_9abc1d -> max_3bda24.list\n        list_9abc1d -> min_b3b4e6.list\n        min_b3b4e6.min -> sub_d5d2c4.first\n        max_3bda24.max -> sub_d5d2c4.second\n        sub_d5d2c4.result -> difference_27806e\n    }\n\n    \n\n    instance(x: -17, y: -29) big_diff_5a2a48 root.main.big_diff {}\n\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: 140, y: -0) modulo_5f2a01 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -0, y: -0) equal_93e3a3 root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_5f2a01.divisor\n        num_1a1743 -> modulo_5f2a01.value\n        modulo_5f2a01.result -> equal_93e3a3.left\n        0 -> equal_93e3a3.right\n        equal_93e3a3.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -177, y: -1) is_Even_7ef3c6 root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: 0, y: 0) modulo_6f2a7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 137, y: 6) equal_a4c3da root.Std_k98ojb.Logic.Equal {}\n        modulo_6f2a7f.result -> equal_a4c3da.left\n        0 -> equal_a4c3da.right\n        num_1a1743 -> modulo_6f2a7f.value\n        2 -> modulo_6f2a7f.divisor\n        equal_a4c3da.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -250, y: 8) is_Even_1e4fa2 root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n\tfunc(doc: \"checks whether the given number is even or not.\") is_Even {\n\t\tin(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n\t\tout(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n\t\tinstance(x: 44, y: 22) modulo_79c0f3 root.Std_k98ojb.Math.Modulo {}\n\t\tinstance(x: -31, y: 25) equal_eeab53 root.Std_k98ojb.Logic.Equal {}\n\t\tnum_1a1743 -> modulo_79c0f3.value\n\t\t2 -> modulo_79c0f3.divisor\n\t\tmodulo_79c0f3.result -> equal_eeab53.left\n\t\t0 -> equal_eeab53.right\n\t\tequal_eeab53.result -> output_4ff980\n\t}\n\n\tinstance(x: 33, y: -43) is_Even_fcb9ec root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: 149, y: -22) modulo_1ddc6a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 328, y: -17) equal_7f69ea root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_1ddc6a.divisor\n        num_1a1743 -> modulo_1ddc6a.value\n        modulo_1ddc6a.result -> equal_7f69ea.left\n        0 -> equal_7f69ea.right\n        equal_7f69ea.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -247, y: 8) is_Even_0cdd67 root.main.is_Even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: 143, y: -19) modulo_0ce0b9 root.Std_k98ojb.Math.Modulo {}\n        2 -> modulo_0ce0b9.divisor\n        num_1a1743 -> modulo_0ce0b9.value\n        instance(x: 360, y: -13) equal_2e7d80 root.Std_k98ojb.Logic.Equal {}\n        0 -> equal_2e7d80.right\n        modulo_0ce0b9.result -> equal_2e7d80.left\n        equal_2e7d80.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -174, y: -22) is_Even_93e9a2 root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: -99, y: -8) modulo_8d6a60 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 111, y: -3) equal_d3a2f8 root.Std_k98ojb.Logic.Equal {}\n        num_1a1743 -> modulo_8d6a60.value\n        2 -> modulo_8d6a60.divisor\n        modulo_8d6a60.result -> equal_d3a2f8.left\n        0 -> equal_d3a2f8.right\n        equal_d3a2f8.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -271, y: 71) is_Even_c1a8cd root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: 103, y: 0) modulo_6fcbf1 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 243, y: -4) equal_c8d9c2 root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_6fcbf1.divisor\n        num_1a1743 -> modulo_6fcbf1.value\n        0 -> equal_c8d9c2.right\n        modulo_6fcbf1.result -> equal_c8d9c2.left\n        equal_c8d9c2.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -299, y: -22) is_Even_7aefaf root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: 110, y: 8) modulo_7a0f1a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 317, y: 8) equal_e1e0c7 root.Std_k98ojb.Logic.Equal {}\n        0 -> equal_e1e0c7.right\n        modulo_7a0f1a.result -> equal_e1e0c7.left\n        2 -> modulo_7a0f1a.divisor\n        num_1a1743 -> modulo_7a0f1a.value\n        equal_e1e0c7.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -233, y: -52) is_Even_3aa5f7 root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: 104, y: -5) modulo_4e0f6b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 227, y: 7) equal_d1a2b1 root.Std_k98ojb.Logic.Equal {}\n        modulo_4e0f6b.result -> equal_d1a2b1.left\n        0 -> equal_d1a2b1.right\n        num_1a1743 -> modulo_4e0f6b.value\n        2 -> modulo_4e0f6b.divisor\n        equal_d1a2b1.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -178, y: -37) is_Even_f9df0b root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: -52, y: -7) modulo_1d5d2c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 130, y: 2) equal_3bda2c root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_1d5d2c.divisor\n        num_1a1743 -> modulo_1d5d2c.value\n        modulo_1d5d2c.result -> equal_3bda2c.left\n        0 -> equal_3bda2c.right\n        equal_3bda2c.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -162, y: -53) is_Even_5a3c62 root.main.is_Even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 1114, y: 328, name: \"set\") set_0a6c63 root.Std_k98ojb.Data.Set {}\n        instance(x: 1068, y: 133, name: \"characters\") characters_4efbc1 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1124, y: 204) filter_9e5d0c root.Std_k98ojb.Query.Filter {\n            where: \"it in set_0a6c63\"\n        }\n        instance(x: 1099, y: 278) if_7e0a1c root.Std_k98ojb.Std.If {}\n        instance(x: 1064, y: 46) add_b4ce2b root.Std_k98ojb.Data.Set.Add {}\n        characters_4efbc1.characters -> filter_9e5d0c.list\n        characters_4efbc1.string -> string_71a657\n        set_0a6c63 -> add_b4ce2b.set\n        filter_9e5d0c.result -> if_7e0a1c.input\n        add_b4ce2b.item -> if_7e0a1c.then\n        if_7e0a1c.else -> add_b4ce2b.execute\n        filter_9e5d0c.result -> char_f2523c\n        if_7e0a1c.execute -> continue_1914e0\n        execute_97d5d5 -> add_b4ce2b.execute\n    }\n\n    \n\n    instance(x: -40, y: 33) first_repeated_char_3a3e9e root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 0, y: 0) characters_aea6c8 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) for_ae5d46 root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) filter_0a8efc root.Std_k98ojb.Query.Filter {}\n        instance(x: 0, y: 0) find_8d3f6a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) expression_2f2b51 root.Std_k98ojb.Math.Expression {}\n        instance(x: 0, y: 0) ifexpression_4a3c07 root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 0, y: 0) map_6c1c8d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) notequal_b4b2c4 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 0, y: 0) contains_0e4fa8 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) tolist_d6aaf7 root.Std_k98ojb.List.Flatten {}\n        instance(x: 0, y: 0) add_19e3ac root.Std_k98ojb.List.Add {}\n        instance(x: 0, y: 0) add_eaf6b2 root.Std_k98ojb.List.Add {}\n        characters_aea6c8.output -> for_ae5d46.items\n        execute_97d5d5 -> for_ae5d46.trigger\n        for_ae5d46.item -> map_6c1c8d.items\n        func() {\n            in(x: 71, y: 47, name: \"elem\") property(String) elem_8a1e0d\n\n            out(x: 520, y: 53, name: \"bool\") property(Bool) bool_8e3a23\n\n            instance(x: 182, y: 48) tolist_74cfa6 root.Std_k98ojb.List.Flatten {}\n            instance(x: 419, y: 53) contains_88cc83 root.Std_k98ojb.Strings.Contains {}\n            tolist_74cfa6.flattened -> contains_88cc83.input\n            elem_8a1e0d -> tolist_74cfa6.items\n            string_71a657 -> contains_88cc83.contains\n            contains_88cc83.result -> bool_8e3a23\n        } -> map_6c1c8d.handler\n        map_6c1c8d.output_list -> filter_0a8efc.list\n        expression_2f2b51.gen_0 -> ifexpression_4a3c07.gen_0\n        \"a\" -> expression_2f2b51.gen_1\n        \"b\" -> expression_2f2b51.gen_2\n        \"c\" -> expression_2f2b51.gen_3\n        \"d\" -> expression_2f2b51.gen_4\n        \"e\" -> expression_2f2b51.gen_5\n        \"f\" -> expression_2f2b51.gen_6\n        \"g\" -> expression_2f2b51.gen_7\n        \"h\" -> expression_2f2b51.gen_8\n        \"i\" -> expression_2f2b51.gen_9\n        \"j\" -> expression_2f2b51.gen_10\n        \"k\" -> expression_2f2b51.gen_11\n        \"l\" -> expression_2f2b51.gen_12\n        \"m\" -> expression_2f2b51.gen_13\n        \"n\" -> expression_2f2b51.gen_14\n        \"o\" -> expression_2f2b51.gen_15\n        \"p\" -> expression_2f2b51.gen_16\n        \"q\" -> expression_2f2b51.gen_17\n        \"r\" -> expression_2f2b51.gen_18\n        \"s\" -> expression_2f2b51.gen_19\n        \"t\" -> expression_2f2b51.gen_20\n        \"u\" -> expression_2f2b51.gen_21\n        \"v\" -> expression_2f2b51.gen_22\n        \"w\" -> expression_2f2b51.gen_23\n        \"x\" -> expression_2f2b51.gen_24\n        \"y\" -> expression_2f2b51.gen_25\n        \"z\" -> expression_2f2b51.gen_26\n        0 -> expression_2f2b51.gen_28\n        1 -> expression_2f2b51.gen_29\n        2 -> expression_2f2b51.gen_30\n        3 -> expression_2f2b51.gen_31\n        4 -> expression_2f2b51.gen_32\n        5 -> expression_2f2b51.gen_33\n        6 -> expression_2f2b51.gen_34\n        7 -> expression_2f2b51.gen_35\n        8 -> expression_2f2b51.gen_36\n        9 -> expression_2f2b51.gen_37\n        10 -> expression_2f2b51.gen_38\n        11 -> expression_2f2b51.gen_39\n        12 -> expression_2f2b51.gen_40\n        13 -> expression_2f2b51.gen_41\n        14 -> expression_2f2b51.gen_42\n        15 -> expression_2f2b51.gen_43\n        16 -> expression_2f2b51.gen_44\n        17 -> expression_2f2b51.gen_45\n        18 -> expression_2f2b51.gen_46\n        19 -> expression_2f2b51.gen_47\n        20 -> expression_2f2b51.gen_48\n        21 -> expression_2f2b51.gen_49\n        22 -> expression_2f2b51.gen_50\n        23 -> expression_2f2b51.gen_51\n        24 -> expression_2f2b51.gen_52\n        25 -> expression_2f2b51.gen_53\n        26 -> expression_2f2b51.gen_54\n        expression_2f2b51.result -> ifexpression_4a3c07.left\n        \"0\" -> ifexpression_4a3c07.right\n        ifexpression_4a3c07.then -> add_19e3ac.input\n        ifexpression_4a3c07.else -> add_eaf6b2.input\n        add_19e3ac.item -> add_eaf6b2.item\n        add_19e3ac.list -> tolist_d6aaf7.items\n        add_eaf6b2.list -> tolist_d6aaf7.items\n        add_eaf6b2.item -> notequal_b4b2c4.right\n        add_19e3ac.item -> notequal_b4b2c4.left\n        tolist_d6aaf7.flattened -> filter_0a8efc.list\n        filter_0a8efc.result -> find_8d3f6a.items\n        func() {\n            in(x: 75, y: 39, name: \"current\") property(String) current_8bdcf3\n\n            out(x: 520, y: 45, name: \"bool\") property(Bool) bool_9dbd36\n\n            instance(x: 200, y: 43) contains_6a7a8e root.Std_k98ojb.Strings.Contains {}\n            current_8bdcf3 -> contains_6a7a8e.input\n            string_71a657 -> contains_6a7a8e.contains\n            contains_6a7a8e.result -> bool_9dbd36\n        } -> find_8d3f6a.predicate\n        find_8d3f6a.item -> char_f2523c\n        find_8d3f6a.done -> continue_1914",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n\tfunc(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n\t\tin(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n\t\tin(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n\t\tout(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n\t\tout(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n\t\tinstance(x: 0, y: 0) characters_dad8f8 root.Std_k98ojb.Strings.Characters {}\n\t\tinstance(x: 1177, y: 187) instance_2b3d6e root.Std_k98ojb.Iteration.Map {}\n\t\tinstance(x: 1197, y: 329) for_7abeb0 root.Std_k98ojb.Std.For {}\n\t\tsetter(x: 0, y: 0, name: \"setter_a4d8e7\") setter_a4d8e7 = set\n\t\tinstance(x: 1290, y: 287) getat_a7bb5f root.Std_k98ojb.List.GetAt {}\n\t\tinstance(x: 1180, y: 455) for_2dbb0d root.Std_k98ojb.Std.For {}\n\t\tgetter(x: 0, y: 0, name: \"getter_5aa8f5\") getter_5aa8f5 = count\n\t\tgetter(x: 1314, y: 457, name: \"getter_2a8f58\") getter_2a8f58 = item\n\t\tinstance(x: 1294, y: 605) getat_8eae56 root.Std_k98ojb.List.GetAt {}\n\t\tinstance(x: 1300, y: 737) if_8b5f50 root.Std_k98ojb.Std.If {}\n\t\tinstance(x: 1388, y: 743) equal_8d8b4b root.Std_k98ojb.Logic.Equal {}\n\t\tinstance(x: 1390, y: 867, name: \"Setter\") setter_7e2b42 root.Std_k98ojb.Std.Set {}\n\t\tgetter_2a8f58.value -> getat_8eae56.index\n\t\tgetter_2a8f58.value -> equal_8d8b4b.left\n\t\tinstance_2b3d6e.output_list -> getat_a7bb5f.list\n\t\tinstance_2b3d6e.items -> for_7abeb0.items\n\t\tinstance_2b3d6e.onItem -> for_7abeb0.onItem\n\t\tinstance_2b3d6e.handler -> for_7abeb0.handler\n\t\tfor_7abeb0.onItem -> for_2dbb0d.trigger\n\t\tfor_7abeb0.index -> getter_5aa8f5.value\n\t\tfor_2dbb0d.items -> for_2dbb0d.items\n\t\tgetat_a7bb5f.itemAtIndex -> for_2dbb0d.items\n\t\tfor_2dbb0d.onItem -> for_2dbb0d.handler\n\t\tfor_2dbb0d.index -> getter_2a8f58.value\n\t\tfor_2dbb0d.index -> getat_8eae56.index\n\t\tstring_71a657 -> characters_dad8f8.input\n\t\tcharacters_dad8f8.characters -> instance_2b3d6e.items\n\t\texecute_97d5d5 -> setter_a4d8e7.execute\n\t\t-1 -> setter_a4d8e7.new_value\n\t\tfor_7abeb0.done -> continue_1914e0\n\t\tfor_2dbb0d.done -> continue_1914e0\n\t\tgetat_8eae56.itemAtIndex -> char_f2523c\n\t\tequal_8d8b4b.right -> setter_7e2b42.value\n\t\tgetter_5aa8f5.value -> getat_a7bb5f.index\n\t\tsetter_a4d8e7.continue -> continue_1914e0\n\t\tgetat_8eae56.itemAtIndex -> equal_8d8b4b.left\n\t\tequal_8d8b4b.result -> if_8b5f50.predicate\n\t\tif_8b5f50.then -> setter_7e2b42.execute\n\t\tif_8b5f50.else -> for_2dbb0d.next\n\t\tsetter_7e2b42.value -> getat_a7bb5f.index\n\t\tsetter_7e2b42.continue -> continue_1914e0\n\t\tfor_2dbb0d.next -> for_2dbb0d.next\n\t}\n\n\tinstance(x: 101, y: -69) FirstRepeatingChar_0e2eab root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 0, y: 0) for_2b7f57 root.Std_k98ojb.Std.For {}\n        instance(x: 1353, y: 179, name: \"contains\") contains_6c4a67 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 1034, y: 318, name: \"char\") characters_1a7d5a root.Std_k98ojb.Strings.Characters {}\n        setter(x: 1007, y: 0, name: \"setter_9d76f9\") setter_9d76f9 = temp\n        setter(x: 1007, y: 160, name: \"setter_dfa6f1\") setter_dfa6f1 = temp\n        getter(x: 1131, y: 0, name: \"getter_81f4e6\") getter_81f4e6 = temp\n        getter(x: 1131, y: 160, name: \"getter_84b7f3\") getter_84b7f3 = temp\n        string_71a657 -> characters_1a7d5a.input\n        characters_1a7d5a.characters -> for_2b7f57.items\n        for_2b7f57.onItem -> contains_6c4a67.execute\n        for_2b7f57.item -> contains_6c4a67.input\n        getter_81f4e6.value -> contains_6c4a67.contains\n        execute_97d5d5 -> setter_9d76f9.execute\n        List.Empty -> setter_9d76f9.new_value\n        for_2b7f57.reset -> setter_dfa6f1.execute\n        getter_84b7f3.value -> setter_dfa6f1.new_value\n        contains_6c4a67.result -> if_2f7f7a.predicate\n        if_2f7f7a.then -> setter_9d76f9.execute\n        contains_6c4a67.result -> if_2f7f7a.else\n        if_2f7f7a.then -> continue_1914e0\n        if_2f7f7a.else -> char_f2523c\n        if_2f7f7a.else -> for_2b7f57.next\n        getter_81f4e6.value -> List.Add\n        for_2b7f57.item -> List.Add.item\n        List.Add.listWithItem -> setter_9d76f9.new_value\n        for_2b7f57.index -> getter_84b7f3\n        for_2b7f57.done -> continue_1914e0\n    }\n\n    \n\n    instance(x: 118, y: 70) FirstRepeatedChar_2c6f4f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 129, y: 340) find_13ed0a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 132, y: 145) characters_16e4ca root.Std_k98ojb.Strings.Characters {}\n        instance(x: -70, y: -3, name: \"set\") set_ee1e76 root.Std_k98ojb.Set {}\n        instance(x: -27, y: 54, name: \"get\") get_ee7c0a root.Std_k98ojb.Set {}\n        instance(x: 108, y: 189, name: \"remove\") remove_5f2c6e root.Std_k98ojb.Set {}\n        instance(x: 105, y: 49, name: \"contains\") contains_0f63a2 root.Std_k98ojb.Set {}\n        instance(x: -68, y: 86) ifexpression_9b6c92 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it in set\"\n        }\n        instance(x: 109, y: 5, name: \"add\") add_3ba3ef root.Std_k98ojb.Set {}\n        characters_16e4ca.input -> find_13ed0a.items\n        string_71a657 -> characters_16e4ca.input\n        find_13ed0a.item -> char_f2523c\n        execute_97d5d5 -> set_ee1e76.execute\n        0 -> set_ee1e76.new_value\n        find_13ed0a.item -> get_ee7c0a.key\n        find_13ed0a.index -> get_ee7c0a.index\n        get_ee7c0a.exists -> ifexpression_9b6c92.predicate\n        find_13ed0a.item -> remove_5f2c6e.key\n        find_13ed0a.index -> remove_5f2c6e.index\n        remove_5f2c6e.removed -> ifexpression_9b6c92.gen_0\n        find_13ed0a.item -> contains_0f63a2.key\n        contains_0f63a2.exists -> ifexpression_9b6c92.gen_1\n        find_13ed0a.item -> add_3ba3ef.key\n        execute_97d5d5 -> ifexpression_9b6c92.execute\n        ifexpression_9b6c92.then -> continue_1914e0\n        ifexpression_9b6c92.else -> find_13ed0a.next\n        ifexpression_9b6c92.else -> add_3ba3ef.execute\n        set_ee1e76.value -> add_3ba3ef.set\n        add_3ba3ef.continue -> continue_1914e0\n        find_13ed0a.done -> continue_1914e0\n    }\n\n    \n\n    instance(x: 118, y: 97) first_repeated_char_2f0c85 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 1248, y: 365, name: \"characters\") characters_b5d04d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1303, y: 205, name: \"find_repeated\") find_4e77dc root.Std_k98ojb.Iteration.Find {}\n        setter(x: 101, y: -46, name: \"setter_e3a1bb\") setter_e3a1bb = seen\n        setter_e3a1bb.continue -> find_4e77dc.reset\n        setter_e3a1bb.new_value -> characters_b5d04d.input\n        characters_b5d04d.output -> find_4e77dc.items\n        execute_97d5d5 -> setter_e3a1bb.execute\n        List -> setter_e3a1bb.initial_value\n        func() {\n            in(x: 1387, y: 206, name: \"current\") property(Any) current_81a2f1\n\n            out(x: 1636, y: 206, name: \"bool\") property(Bool) bool_0b6a5b\n\n            instance(x: 1465, y: 211, name: \"is_contained\") is_contained_4cc4f0 root.Std_k98ojb.List.Contains {}\n            is_contained_4cc4f0.item -> bool_0b6a5b\n            is_contained_4cc4f0.list -> setter_e3a1bb.value\n            current_81a2f1 -> is_contained_4cc4f0.item\n        } -> find_4e77dc.predicate\n        find_4e77dc.item -> char_f2523c\n        find_4e77dc.done -> continue_1914e0\n        find_4e77dc.onItem -> setter_e3a1bb.execute\n        List -> setter_e3a1bb.value\n        string_71a657 -> setter_e3a1bb.new_value\n        continue_1914e0 -> continue_1914e0\n    }\n\n    \n\n    instance(x: 36, y: -56) first_repeated_char_6e3ba5 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: -6, y: -41, name: \"charSet\") setter_2f1c09 root.Std_k98ojb.Data.Setter {}\n        instance(x: -20, y: -52, name: \"char\") setter_1b2ef7 root.Std_k98ojb.Data.Setter {}\n        instance(x: 116, y: -41, name: \"execute\") if_7e5b41 root.Std_k98ojb.Std.If {}\n        instance(x: -6, y: 82, name: \"char\") firstitem_1d4e9a root.Std_k98ojb.List.FirstItem {}\n        instance(x: -6, y: 161, name: \"string\") characters_3a7f83 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 116, y: 82, name: \"execute\") if_1dbd8c root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 161, name: \"execute\") ``charSet_2_4_4c9e9f`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 161, name: \"execute\") if_55ec8f root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 240, name: \"execute\") ``charSet_3_6_7a9b67`` root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 319, name: \"execute\") ``charSet_4_8_9d95f9`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 240, name: \"execute\") ``if_5_a_8dfb1b`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 319, name: \"execute\") ``if_6_c_9f7b8d`` root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 398, name: \"execute\") ``charSet_5_e_7a7b77`` root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 477, name: \"execute\") ``charSet_6_g_85f2d9`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 398, name: \"execute\") ``if_7_i_5a2ba7`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 477, name: \"execute\") ``if_8_k_4b9e8f`` root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 556, name: \"execute\") ``charSet_7_m_87a7e5`` root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 635, name: \"execute\") ``charSet_8_o_8bf1b1`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 556, name: \"execute\") ``if_9_q_5b2b3f`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 635, name: \"execute\") ``if_10_s_6a8e9f`` root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 714, name: \"execute\") ``charSet_9_u_98a9c9`` root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 793, name: \"execute\") ``charSet_10_w_a8f1f9`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 714, name: \"execute\") ``if_11_y_4a2b37`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 793, name: \"execute\") ``if_12_a_9f8c9f`` root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 872, name: \"execute\") ``charSet_11_c_b7a9a9`` root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 951, name: \"execute\") ``charSet_12_e_85f2d9`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 872, name: \"execute\") ``if_13_g_8a2ba7`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 951, name: \"execute\") ``if_14_i_4b9e8f`` root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 1030, name: \"execute\") ``charSet_13_k_87a7e5`` root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 1109, name: \"execute\") ``charSet_14_m_8bf1b1`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 1030, name: \"execute\") ``if_15_o_5b2b3f`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 1109, name: \"execute\") ``if_16_q_6a8e9f`` root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 1188, name: \"execute\") ``charSet_15_s_98a9c9`` root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 1267, name: \"execute\") ``charSet_16_u_a8f1f9`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 1188, name: \"execute\") ``if_17_w_4a2b37`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 1267, name: \"execute\") ``if_18_y_9f8c9f`` root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 1346, name: \"execute\") ``charSet_17_a_b7a9a9`` root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 1425, name: \"execute\") ``charSet_18_c_85f2d9`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 1346, name: \"execute\") ``if_19_e_8a2ba7`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 1425, name: \"execute\") ``if_20_g_4b9e8f`` root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 1504, name: \"execute\") ``charSet_19_i_87a7e5`` root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 1583, name: \"execute\") ``charSet_20_k_8bf1b1`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 1504, name: \"execute\") ``if_21_m_5b2b3f`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 1583, name: \"execute\") ``if_22_o_6a8e9f`` root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 1662, name: \"execute\") ``charSet_21_q_98a9c9`` root.Std_k98ojb.Std.If {}\n        instance(x: 116, y: 1741, name: \"execute\") ``charSet_22_s_a8f1f9`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 1662, name: \"execute\") ``if_23_u_4a2b37`` root.Std_k98ojb.Std.If {}\n        instance(x: -20, y: 1741, name: \"execute\") ``if_24_w_9f8c9f`` root.Std_k98ojb.Std.If {}\n        instance",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 0, y: 0) set_5d5c1e root.Std_k98ojb.Query.Set {\n            to: \"map\"\n        }\n        instance(x: 0, y: 0) if_6b2b87 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) get_8ce8d3 root.Std_k98ojb.Query.Get {\n            key: \"map\"\n        }\n        instance(x: 0, y: 0) contains_9d2e9a root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) map_9c41f3 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) concat_4a6b3e root.Std_k98ojb.List.Concat {}\n        instance(x: 0, y: 0) characters_88d3c2 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) ifexpression_c8df18 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == null\"\n        }\n        instance(x: 0, y: 0) contains_8e7d66 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) empty_5f5e77 root.Std_k98ojb.List.Empty {}\n        instance(x: 0, y: 0) not_5b5a81 root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) and_4f4e78 root.Std_k98ojb.Logic.And {}\n        instance(x: 0, y: 0) set_2c8d5c root.Std_k98ojb.Query.Set {\n            to: \"map\"\n        }\n        execute_97d5d5 -> set_5d5c1e.execute\n        string_71a657 -> characters_88d3c2.input\n        concat_4a6b3e.result -> map_9c41f3.items\n        characters_88d3c2.characters -> concat_4a6b3e.item_1\n        empty_5f5e77.list -> concat_4a6b3e.item_0\n        map_9c41f3.onItem -> if_6b2b87.execute\n        contains_9d2e9a.list -> get_8ce8d3.from\n        map_9c41f3.item -> contains_9d2e9a.item\n        \"map\" -> get_8ce8d3.key\n        map_9c41f3.index -> set_2c8d5c.index\n        map_9c41f3.item -> set_2c8d5c.item\n        map_9c41f3.item -> ifexpression_c8df18.gen_0\n        characters_88d3c2.characters -> if_6b2b87.else\n        get_8ce8d3.value -> contains_9d2e9a.contains\n        contains_9d2e9a.result -> not_5b5a81.input\n        not_5b5a81.output -> and_4f4e78.left\n        ifexpression_c8df18.output -> and_4f4e78.right\n        and_4f4e78.output -> if_6b2b87.predicate\n        set_5d5c1e.result -> if_6b2b87.then\n        if_6b2b87.else -> continue_1914e0\n        if_6b2b87.then -> continue_1914e0\n        ifexpression_c8df18.then -> get_8ce8d3.execute\n        ifexpression_c8df18.else -> contains_8e7d66.execute\n        if_6b2b87.then -> set_2c8d5c.execute\n        map_9c41f3.handler -> concat_4a6b3e\n        contains_8e7d66.list -> characters_88d3c2.characters\n        map_9c41f3.index -> contains_8e7d66.index\n        contains_8e7d66.item -> char_f2523c\n        ifexpression_c8df18.result -> set_2c8d5c.item\n    }\n\n    \n\n    instance(x: 10, y: 13) first_repeated_char_87d5d4 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 0, y: -9, name: \"characters\") characters_bfc6d6 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: -6, name: \"first repeated char\") find_a1aa26 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 1064, y: 352, name: \"is character in list\") contains_7f0e8a root.Std_k98ojb.List.Contains {}\n        instance(x: 1193, y: 353, name: \"remove element from list\") remove_5f1a6c root.Std_k98ojb.List.Remove {}\n        instance(x: 1379, y: 352, name: \"list without char\") list_3db4a9 root.Std_k98ojb.List.List {}\n        instance(x: 1548, y: 351, name: \"list with char\") list_e3b9c5 root.Std_k98ojb.List.List {}\n        string_71a657 -> characters_bfc6d6.input\n        characters_bfc6d6.characters -> find_a1aa26.items\n        instance(x: 0, y: -6) if_5e98c5 root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: 139, y: 57, name: \"current\") property(Any) current_e0c1b7\n\n            out(x: 1149, y: 58, name: \"bool\") property(Bool) bool_1b81e1\n\n            instance(x: 285, y: 59, name: \"is character in list\") contains_7f0e8a root.Std_k98ojb.List.Contains {}\n            current_e0c1b7 -> contains_7f0e8a.item\n            list_3db4a9 -> contains_7f0e8a.list\n            contains_7f0e8a.result -> bool_1b81e1\n        } -> if_5e98c5.predicate\n        func() {\n            in(x: 139, y: 57, name: \"current\") property(Any) current_e0c1b7\n\n            out(x: 1149, y: 58, name: \"bool\") property(Bool) bool_1b81e1\n\n            current_e0c1b7 -> list_e3b9c5\n            list_e3b9c5 -> contains_7f0e8a.list\n            contains_7f0e8a.result -> bool_1b81e1\n        } -> find_a1aa26.predicate\n        if_5e98c5.then -> continue_1914e0\n        if_5e98c5.else -> find_a1aa26.onItem\n        find_a1aa26.item -> char_f2523c\n        characters_bfc6d5.onItem -> if_5e98c5.execute\n        execute_97d5d5 -> find_a1aa26.execute\n        list_3db4a9 -> remove_5f1a6c.list\n        if_5e98c5.else -> remove_5f1a6c.index\n        contains_7f0e8a.index -> list_e3b9c5\n        contains_7f0e8a.index -> remove_5f1a6c.index\n        remove_5f1a6c.listWithoutItem -> list_3db4a9\n        list_e3b9c5 -> find_a1aa26.onItem\n    }\n\n    \n\n    instance(x: -32, y: -91) first_repeated_char_2b5cc1 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 0, y: 0) getcharacters_3b4e6c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 119, y: 27, name: \"char\") iteration_map_4ed1f9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1185, y: 182) find_3a3c3e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) contains_7a91ba root.Std_k98ojb.Iteration.Filter {\n            handler: {}\n        }\n        instance(x: 0, y: 0) count_5f1a92 root.Std_k98ojb.Std.Count {}\n        getter(x: 0, y: 0, name: \"getter_9a7a1b\") getter_9a7a1b = char\n        setter(x: -60, y: 69, name: \"setter_5b7be6\") setter_5b7be6 = list_chars\n        instance(x: 119, y: 27) contains_8d2c97 root.Std_k98ojb.Iteration.Filter {\n            handler: {}\n        }\n        instance(x: 1177, y: 275) equal_2c37a3 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1076, y: 359) if_6aa8de root.Std_k98ojb.Std.If {}\n        instance(x: 1135, y: 358) count_7a8cc3 root.Std_k98ojb.Std.Count {}\n        instance(x: 1038, y: 440) firstitem_6a4c81 root.Std_k98ojb.List.FirstItem {}\n        getter_9a7a1b.value -> iteration_map_4ed1f9.input\n        getcharacters_3b4e6c.characters -> iteration_map_4ed1f9.items\n        iteration_map_4ed1f9.output_list -> setter_5b7be6.list\n        setter_5b7be6.new_value -> count_5f1a92.list\n        setter_5b7be6.continue -> contains_7a91ba.execute\n        count_5f1a92.count -> contains_7a91ba.index\n        setter_5b7be6.continue -> getcharacters_3b4e6c.execute\n        string_71a657 -> getcharacters_3b4e6c.string\n        find_3a3c3e.item -> char_f2523c\n        contains_8d2c97.index -> equal_2c37a3.right\n        contains_8d2c97.output_list -> equal_2c37a3.left\n        contains_8d2c97.items -> count_7a8cc3.list\n        contains_8d2c97.index -> count_7a8cc3.index\n        contains_8d2c97.execute -> count_7a8cc3.execute\n        contains_7a91ba.index -> contains_8d2c97.index\n        contains_7a91ba.output_list -> contains_8d2c97.items\n        execute_97d5d5 -> setter_5b7be6.execute\n        0 -> setter_5b7be6.new_value\n        count_5f1a92.count -> find_3a3c3e.index\n        contains_7a91ba.result -> find_3a3c3e.predicate\n        count_5f1a92.count -> find_3a3c3e.count\n        count_5f1a92.list -> find_3a3c3e.items\n        equal_2c37a3.result -> contains_7a91ba.predicate\n        1 -> count_7a8cc3.count\n        count_7a8cc3.count -> equal_2c37a3.left\n        if_6aa8de.else -> count_7a8cc3.reset\n        if_6aa8de.then -> firstitem_6a4c81.execute\n        equal_2c37a3.result -> if_6aa8de.predicate\n        find_3a3c3e.done -> continue_1914e0\n        firstitem_6a4c81.item -> find_3a3c3e.item\n    }\n\n    \n\n    instance(x: -40, y: 11) first_repeated_char_a7e4a8 root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        instance(x: 0, y: 0, name: \"Min\") min_f8d1f8 root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0, name: \"List\") filter_6d8eb9 root.Std_k98ojb.Query.Filter {}\n        instance(x: 0, y: 0) for_7e90da root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) ``Min_0`` root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) notequal_6ec5d4 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 0, y: 0) setter_4bae87 root.Std_k98ojb.List.Set {}\n        getter(x: 0, y: 0, name: \"getter_1a3db6\") getter_1a3db6 = output\n        setter(x: 0, y: 0, name: \"setter_8a2d7c\") setter_8a2d7c = output\n        getter_1a3db6.value -> output_ad16ae\n        list_56d273 -> min_f8d1f8.items\n        min_f8d1f8.min -> filter_6d8eb9.gen_1\n        list_56d273 -> filter_6d8eb9.list\n        where_expression_7e90da_left_7e90da_2b1a6e -> filter_6d8eb9.where\n        where_expression_7e90da_right_7e90da_2b1a6e -> filter_6d8eb9.gen_0\n        filter_6d8eb9.result -> for_7e90da.items\n        execute_c23a43 -> for_7e90da.trigger\n        for_7e90da.done -> continue_642adb\n        where_expression_7e90da_left_7e90da_2b1a6e -> notequal_6ec5d4.left\n        for_7e90da.item -> notequal_6ec5d4.right\n        notequal_6ec5d4.result -> ``Min_0``.items\n        ``Min_0``.min -> setter_4bae87.new_value\n        for_7e90da.onItem -> setter_4bae87.execute\n        setter_4bae87.continue -> continue_642adb\n        setter_8a2d7c.new_value -> output_ad16ae\n        ``Min_0``.min -> setter_8a2d7c.execute\n        setter_8a2d7c.continue -> continue_642adb\n    }\n\n    \n\n    instance(x: 1029, y: 296) second_smallest_1b0d0f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        data_instance(x: -122, y: 47) data_f7dd79  = [x, y]\n        instance(x: 1054, y: 273) getat_f6c4f8 root.Std_k98ojb.List.GetAt {}\n        instance(x: 124, y: 82) for_8c4e2b root.Std_k98ojb.Std.For {}\n        setter(x: 0, y: 0, name: \"setter_baf8da\") setter_baf8da = y\n        instance(x: 125, y: -35) if_b5b9e3 root.Std_k98ojb.Std.If {}\n        setter(x: 109, y: -170, name: \"setter_99f0a2\") setter_99f0a2 = y\n        instance(x: 110, y: -253) min_3a6c1c root.Std_k98ojb.Math.Min {}\n        getter(x: 1053, y: 243, name: \"getter_b4b2c4\") getter_b4b2c4 = y\n        data_f7dd79 -> for_8c4e2b.items\n        list_56d273 -> for_8c4e2b.items\n        getter_b4b2c4.value -> getat_f6c4f8.index\n        for_8c4e2b.onItem -> if_b5b9e3.execute\n        x -> if_b5b9e3.predicate\n        if_b5b9e3.else -> min_3a6c1c.execute\n        getter_b4b2c4.value -> min_3a6c1c.first\n        y -> min_3a6c1c.second\n        for_8c4e2b.done -> continue_642adb\n        min_3a6c1c.result -> getat_f6c4f8.list\n        getat_f6c4f8.item -> output_ad16ae\n        execute_c23a43 -> setter_baf8da.execute\n        -9999999 -> setter_baf8da.new_value\n        for_8c4e2b.index -> setter_99f0a2.new_value\n        getter_b4b2c4.value -> setter_99f0a2.new_value\n        if_b5b9e3.then -> setter_99f0a2.execute\n        setter_baf8da.continue -> for_8c4e2b.trigger\n        setter_99f0a2.continue -> for_8c4e2b.next\n    }\n\n    \n\n    instance(x: 103, y: 148) second_smallest_23dd59 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n\tfunc(doc: \"Finds the second smallest number in a list.\") second_smallest {\n\t\tin(x: -52, y: 85, name: \"list\") property(List) list_56d273\n\t\tin(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n\t\tout(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n\t\tout(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n\t\tsetter(x: 0, y: 0, name: \"setter_9f71ae\") setter_9f71ae = smallest\n\t\tsetter(x: 0, y: 0, name: \"setter_5c4f1b\") setter_5c4f1b = second_smallest\n\n\t\tinstance(x: -139, y: -62) sort_7e74f9 root.Std_k98ojb.List.Sort {}\n\n\t\tinstance(x: 0, y: 0) for_7df0b4 root.Std_k98ojb.Std.For {}\n\n\t\tgetter(x: 0, y: 0, name: \"getter_1b0b3d\") getter_1b0b3d = second_smallest\n\t\tgetter(x: 0, y: 0, name: \"getter_3d57b6\") getter_3d57b6 = smallest\n\n\t\tinstance(x: -76, y: -11) ifexpression_6d7fa6 root.Std_k98ojb.Std.IfExpression {}\n\t\tinstance(x: 0, y: 0) equal_c0fc97 root.Std_k98ojb.Logic.Equal {}\n\n\t\tinstance(x: 0, y: 0) not_c5dbbb root.Std_k98ojb.Logic.Not {}\n\n\t\tinstance(x: -62, y: 38) if_3e6ab3 root.Std_k98ojb.Std.If {}\n\n\t\tsetter_9f71ae.execute -> for_7df0b4.reset\n\t\tlist_56d273 -> for_7df0b4.items\n\t\texecute_c23a43 -> setter_9f71ae.execute\n\t\t0 -> setter_9f71ae.new_value\n\t\tfor_7df0b4.done -> continue_642adb\n\t\tgetter_3d57b6.value -> setter_5c4f1b.new_value\n\t\tgetter_3d57b6.value -> output_ad16ae\n\t\tgetter_1b0b3d.value -> setter_9f71ae.new_value\n\t\tgetter_1b0b3d.value -> output_ad16ae\n\t\tfor_7df0b4.onItem -> ifexpression_6d7fa6.execute\n\t\tlist_56d273 -> sort_7e74f9.list\n\t\tsort_7e74f9.sorted -> list_56d273\n\t\tfor_7df0b4.item -> ifexpression_6d7fa6.gen_1\n\t\tfor_7df0b4.item -> equal_c0fc97.left\n\t\tgetter_3d57b6.value -> equal_c0fc97.right\n\t\tequal_c0fc97.result -> ifexpression_6d7fa6.predicate\n\t\tifexpression_6d7fa6.else -> if_3e6ab3.execute\n\t\tifexpression_6d7fa6.then -> for_7df0b4.next\n\t\tfor_7df0b4.index -> if_3e6ab3.predicate\n\t\tgetter_1b0b3d.value -> if_3e6ab3.predicate\n\t\tnot_c5dbbb.input -> if_3e6ab3.predicate\n\t\tif_3e6ab3.then -> for_7df0b4.next\n\t\tif_3e6ab3.else -> setter_5c4f1b.execute\n\t\tsetter_5c4f1b.continue -> continue_642adb\n\t\tif_3e6ab3.then -> setter_9f71ae.execute\n\t\tsetter_9f71ae.continue -> continue_642adb\n\t}\n\tinstance(x: 117, y: 124) second_smallest_9f7fbc root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        instance(x: 0, y: 0, name: \"Second min\") min_2b7f57 root.Std_k98ojb.List.Min {}\n        instance(x: -120, y: 71, name: \"Max\") max_71ab49 root.Std_k98ojb.List.Max {}\n        instance(x: 103, y: 144, name: \"Remove Max\") remove_d3dbda root.Std_k98ojb.List.Remove {}\n        setter(x: -128, y: 0, name: \"setter_fdd0c8\") setter_fdd0c8 = execute\n        list_56d273 -> max_71ab49.items\n        list_56d273 -> min_2b7f57.items\n        setter_fdd0c8.continue -> continue_642adb\n        execute_c23a43 -> setter_fdd0c8.execute\n        max_71ab49.max -> remove_d3dbda.index\n        max_71ab49.max -> setter_fdd0c8.new_value\n        remove_d3dbda.listWithoutItem -> min_2b7f57.items\n        min_2b7f57.min -> output_ad16ae\n    }\n\n    \n\n    instance(x: -25, y: 129) second_smallest_e3aee9 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        instance(x: -111, y: 74, name: \"First\") find_3c05ae root.Std_k98ojb.Iteration.Find {}\n        instance(x: 109, y: 158) min_21ce51 root.Std_k98ojb.List.Min {}\n        instance(x: -111, y: -22, name: \"Second\") filter_3d74a9 root.Std_k98ojb.Query.Filter {}\n        data_instance(x: 0, y: 0) data_eb9a2b  = [first]\n        func() {\n            in(x: -119, y: 15, name: \"current\") property(Any) current_2e7a4e\n\n            out(x: 429, y: 26, name: \"bool\") property(Bool) bool_1cc7e3\n\n            instance(x: 40, y: 11) not_a2d85c root.Std_k98ojb.Logic.Not {}\n            current_2e7a4e -> not_a2d85c.input\n            not_a2d85c.result -> bool_1cc7e3\n        } -> filter_3d74a9.where\n        list_56d273 -> find_3c05ae.items\n        func() {\n            in(x: -119, y: 15, name: \"current\") property(Any) current_2e7a4e\n\n            out(x: 429, y: 26, name: \"bool\") property(Bool) bool_1cc7e3\n\n            instance(x: 37, y: 17) lessorequal_6b4c81 root.Std_k98ojb.Math.LessThanOrEqual {}\n            first -> lessorequal_6b4c81.left\n            current_2e7a4e -> lessorequal_6b4c81.right\n            lessorequal_6b4c81.result -> bool_1cc7e3\n        } -> filter_3d74a9.where\n        list_56d273 -> filter_3d74a9.list\n        find_3c05ae.item -> data_eb9a2b.first\n        data_eb9a2b.first -> min_21ce51.items\n        filter_3d74a9.result -> min_21ce51.items\n        min_21ce51.min -> output_ad16ae\n        execute_c23a43 -> find_3c05ae.execute\n        find_3c05ae.done -> continue_642adb\n    }\n\n    \n\n    instance(x: -22, y: 99) second_smallest_3f9f51 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        instance(x: 112, y: 74) min_b6fb7d root.Std_k98ojb.List.Min {}\n        instance(x: 112, y: -47) filter_e1e46f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -43, y: -71) map_eb9f3d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 107, y: 168) max_8e4c73 root.Std_k98ojb.List.Max {}\n        list_56d273 -> min_b6fb7d.items\n        list_56d273 -> filter_e1e46f.items\n        func() {\n            in(x: -145, y: -15, name: \"elem\") property(Number) elem_3b4b81\n\n            out(x: 512, y: -1, name: \"bool\") property(Bool) bool_6f5b53\n\n            instance(x: 85, y: 14) notequal_81a2f1 root.Std_k98ojb.Logic.NotEqual {}\n            elem_3b4b81 -> notequal_81a2f1.left\n            min_b6fb7d.min -> notequal_81a2f1.right\n            notequal_81a2f1.result -> bool_6f5b53\n        } -> filter_e1e46f.predicate\n        filter_e1e46f.output_list -> map_eb9f3d.items\n        func() {\n            in(x: -122, y: 67, name: \"elem\") property(Number) elem_2df4a1\n\n            out(x: 513, y: 75, name: \"output\") property(Number) output_7c93d0\n\n            instance(x: 87, y: 67) sub_9e0e51 root.Std_k98ojb.Math.Sub {}\n            elem_2df4a1 -> sub_9e0e51.first\n            min_b6fb7d.min -> sub_9e0e51.second\n            sub_9e0e51.result -> output_7c93d0\n        } -> map_eb9f3d.handler\n        map_eb9f3d.output_list -> max_8e4c73.items\n        max_8e4c73.max -> output_ad16ae\n        execute_c23a43 -> min_b6fb7d.execute\n        min_b6fb7d.done -> continue_642adb\n        map_eb9f3d.done -> continue_642adb\n        max_8e4c73.done -> continue_642adb\n    }\n\n    \n\n    instance(x: -14, y: 44) second_smallest_1a1d61 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        instance(x: -101, y: 30) sort_ae8f8e root.Std_k98ojb.List.Sort {}\n        instance(x: 103, y: -5) getat_6a7f81 root.Std_k98ojb.List.GetAt {}\n        instance(x: 110, y: 115) map_6e5f8e root.Std_k98ojb.Iteration.Map {}\n        list_56d273 -> sort_ae8f8e.list\n        sort_ae8f8e.sorted -> map_6e5f8e.items\n        func() {\n            in(x: -79, y: 68, name: \"x\") property(Number) x_b4cfe9\n\n            out(x: 371, y: 68, name: \"\") property(Number) _3c3d0c\n\n            instance(x: 24, y: 58) sub_1dbd8c root.Std_k98ojb.Math.Sub {}\n            2 -> sub_1dbd8c.first\n            x_b4cfe9 -> sub_1dbd8c.second\n            sub_1dbd8c.result -> _3c3d0c\n        } -> map_6e5f8e.handler\n        1 -> getat_6a7f81.index\n        map_6e5f8e.output_list -> getat_6a7f81.list\n        getat_6a7f81.item -> output_ad16ae\n        execute_c23a43 -> sort_ae8f8e.execute\n        sort_ae8f8e.done -> continue_642adb\n    }\n\n    \n\n    instance(x: -17, y: 120) second_smallest_f4cdd2 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        data_instance(x: 5, y: 0, name: \"data_6d35d5\") data_6d35d5  = [min1, min2]\n        setter(x: 0, y: 0, name: \"setter_6b2b87\") setter_6b2b87 = min1\n        setter(x: 0, y: 0, name: \"setter_8f0f4a\") setter_8f0f4a = min2\n        instance(x: -169, y: -5) for_85a58a root.Std_k98ojb.Std.For {}\n        getter(x: 338, y: 143, name: \"getter_93df04\") getter_93df04 = min1\n        getter(x: 337, y: 278, name: \"getter_3ccfc1\") getter_3ccfc1 = min2\n        instance(x: 0, y: 0) equal_1d7ee5 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 0, y: 0) if_74aa96 root.Std_k98ojb.Std.If {}\n        setter_6b2b87.continue -> for_85a58a.reset\n        data_6d35d5 -> for_85a58a.items\n        list_56d273 -> for_85a58a.items\n        execute_c23a43 -> setter_6b2b87.execute\n        list_56d273 -> for_85a58a.items\n        getter_93df04.value -> min1\n        getter_3ccfc1.value -> min2\n        for_85a58a.item -> equal_1d7ee5.left\n        getter_93df04.value -> equal_1d7ee5.right\n        equal_1d7ee5.result -> if_74aa96.predicate\n        if_74aa96.else -> for_85a58a.next\n        if_74aa96.then -> setter_8f0f4a.execute\n        for_85a58a.index -> setter_8f0f4a.new_value\n        setter_8f0f4a.continue -> continue_642adb\n        for_85a58a.done -> continue_642adb\n        getter_3ccfc1.value -> output_ad16ae\n    }\n\n    \n\n    instance(x: 1072, y: 319) second_smallest_93c1d5 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        data_instance(x: 26, y: 0) data_9f9e1a  = [first, second]\n        instance(x: -94, y: -28) firstitem_4b61cd root.Std_k98ojb.List.FirstItem {}\n        instance(x: -96, y: 47) min_f0a7ab root.Std_k98ojb.List.Min {}\n        instance(x: 6, y: 76) remove_b7e4f7 root.Std_k98ojb.List.Remove {}\n        instance(x: 25, y: -53) min_5f5b7d root.Std_k98ojb.List.Min {}\n        instance(x: 9, y: -159) setter_f8d3ec root.Std_k98ojb.Std.Setter {}\n        instance(x: 10, y: -11) for_5eddbd root.Std_k98ojb.Std.For {}\n        instance(x: 10, y: -165) ``If_0b7df6`` root.Std_k98ojb.Std.If {}\n        list_56d273 -> min_f0a7ab.items\n        list_56d273 -> firstitem_4b61cd.list\n        list_56d273 -> remove_b7e4f7.list\n        min_f0a7ab.min -> data_9f9e1a.first\n        firstitem_4b61cd.item -> remove_b7e4f7.index\n        list_56d273 -> min_5f5b7d.items\n        min_5f5b7d.min -> data_9f9e1a.second\n        remove_b7e4f7.listWithoutItem -> for_5eddbd.items\n        data_9f9e1a -> for_5eddbd.items\n        for_5eddbd.onItem -> ``If_0b7df6``.execute\n        ``If_0b7df6``.else -> for_5eddbd.next\n        for_5eddbd.item -> ``If_0b7df6``.input\n        ``If_0b7df6``.then -> setter_f8d3ec.execute\n        ``If_0b7df6``.predicate -> setter_f8d3ec.predicate\n        data_9f9e1a.second -> setter_f8d3ec.new_value\n        for_5eddbd.index -> setter_f8d3ec.index\n        data_9f9e1a -> setter_f8d3ec.data\n        execute_c23a43 -> for_5eddbd.trigger\n        for_5eddbd.done -> continue_642adb\n        setter_f8d3ec.continue -> continue_642adb\n        data_9f9e1a.second -> output_ad16ae\n    }\n\n    \n\n    instance(x: 1052, y: 288) second_smallest_1f61bf root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        setter(x: 0, y: 0, name: \"setter_2ed4b9\") setter_2ed4b9 = first\n        instance(x: 343, y: 119) for_0b1a5e root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_5b07a6\") getter_5b07a6 = first\n        setter(x: 0, y: 0, name: \"setter_ae7f8f\") setter_ae7f8f = second\n        instance(x: 0, y: 0) min_2a6f52 root.Std_k98ojb.Math.Min {}\n        getter(x: 0, y: 0, name: \"getter_2a1e2d\") getter_2a1e2d = second\n        instance(x: 698, y: 182) equal_d8eb0a root.Std_k98ojb.Logic.Equal {}\n        instance(x: 903, y: 171) if_d5ba7a root.Std_k98ojb.Std.If {}\n        setter_2ed4b9.continue -> for_0b1a5e.reset\n        list_56d273 -> for_0b1a5e.items\n        execute_c23a43 -> setter_2ed4b9.execute\n        9999999 -> setter_2ed4b9.new_value\n        getter_5b07a6.value -> min_2a6f52.first\n        for_0b1a5e.item -> min_2a6f52.second\n        min_2a6f52.result -> getter_2a1e2d.value\n        getter_2a1e2d.value -> second\n        for_0b1a5e.onItem -> equal_d8eb0a.execute\n        getter_2a1e2d.value -> equal_d8eb0a.left\n        for_0b1a5e.item -> equal_d8eb0a.right\n        equal_d8eb0a.result -> if_d5ba7a.predicate\n        if_d5ba7a.then -> setter_ae7f8f.execute\n        getter_2a1e2d.value -> setter_ae7f8f.new_value\n        if_d5ba7a.else -> for_0b1a5e.next\n        getter_2a1e2d.value -> output_ad16ae\n        for_0b1a5e.done -> continue_642adb\n        setter_ae7f8f.continue -> continue_642adb\n    }\n\n    \n\n    instance(x: 1086, y: 104) second_smallest_4a3c81 root.main.second_smallest {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 13475,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 122, y: -68, name: \"intersection\") intersection_7b62e8 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 442, y: -63) notempty_d2c6b0 root.Std_k98ojb.List.NotEmpty {}\n        list1_016b2e -> intersection_7b62e8.left\n        list2_c8f404 -> intersection_7b62e8.right\n        intersection_7b62e8.intersect -> notempty_d2c6b0.list\n        notempty_d2c6b0.isEmpty -> output_879de6\n    }\n\n    \n\n    instance(x: 3, y: 12) common_element_b5dbf8 root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 0, y: -39) intersection_6d1eb7 root.Std_k98ojb.Sets.Intersection {}\n        list1_016b2e -> intersection_6d1eb7.left\n        list2_c8f404 -> intersection_6d1eb7.right\n        instance(x: 383, y: -70) notempty_6fde6c root.Std_k98ojb.List.NotEmpty {}\n        intersection_6d1eb7.intersect -> notempty_6fde6c.list\n        notempty_6fde6c.isEmpty -> output_879de6\n    }\n\n    \n\n    instance(x: -277, y: 38) common_element_f5a8d1 root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 122, y: 11, name: \"intersection\") intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 322, y: -68) not_75283f root.Std_k98ojb.Logic.Not {}\n        list1_016b2e -> intersection_c7c7e6.left\n        list2_c8f404 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> not_75283f.input\n        not_75283f.result -> output_879de6\n    }\n\n    \n\n    instance(x: -303, y: -175) common_element_fdf0cb root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 135, y: -57) contains_d7e3b9 root.Std_k98ojb.List.Contains {}\n        instance(x: 361, y: -50) not_f9d9a7 root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -227, y: 7, name: \"current\") property(List) list1_2b1b95\n\n            out(x: 698, y: -11, name: \"output\") property(Bool) output_a5a07e\n\n            instance(x: 94, y: -2) contains_4f62d2 root.Std_k98ojb.List.Contains {}\n            list1_2b1b95 -> contains_4f62d2.list\n            list2_c8f404 -> contains_4f62d2.item\n            contains_4f62d2.is_contained -> output_a5a07e\n        } -> contains_d7e3b9.handler\n        list1_016b2e -> contains_d7e3b9.list\n        list1_016b2e -> contains_d7e3b9.item\n        not_f9d9a7.result -> output_879de6\n        contains_d7e3b9.output -> not_f9d9a7.input\n    }\n\n    \n\n    instance(x: -276, y: -65) common_element_9ddc7c root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 1009, y: -56, name: \"set intersection\") intersection_3c6d0a root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 681, y: -53) notempty_8cf9e9 root.Std_k98ojb.List.NotEmpty {}\n        list1_016b2e -> intersection_3c6d0a.left\n        list2_c8f404 -> intersection_3c6d0a.right\n        intersection_3c6d0a.intersect -> notempty_8cf9e9.list\n        notempty_8cf9e9.isEmpty -> output_879de6\n    }\n\n    \n\n    instance(x: -245, y: 8) common_element_82b3e5 root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 103, y: -72) intersection_7e1b28 root.Std_k98ojb.Sets.Intersection {}\n        list1_016b2e -> intersection_7e1b28.left\n        list2_c8f404 -> intersection_7e1b28.right\n        instance(x: 428, y: -49) not_9b0c54 root.Std_k98ojb.Logic.Not {}\n        intersection_7e1b28.isEmpty -> not_9b0c54.input\n        not_9b0c54.result -> output_879de6\n    }\n\n    \n\n    instance(x: -250, y: 5) common_element_2b69b4 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: 102, y: -27, name: \"intersection\") intersection_eba3ea root.Std_k98ojb.Sets.Intersection {}\n        list1_016b2e -> intersection_eba3ea.left\n        list2_c8f404 -> intersection_eba3ea.right\n        intersection_eba3ea.intersect -> output_879de6\n    }\n\n    \n\n    instance(x: -179, y: -5) common_element_d4a4e5 root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: -0, y: 9) intersection_7a2b92 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 290, y: -63) notempty_f9a7c5 root.Std_k98ojb.List.NotEmpty {}\n        list1_016b2e -> intersection_7a2b92.left\n        list2_c8f404 -> intersection_7a2b92.right\n        intersection_7a2b92.intersect -> notempty_f9a7c5.list\n        notempty_f9a7c5.isEmpty -> output_879de6\n    }\n\n    \n\n    instance(x: 32, y: 26) common_element_2c3a46 root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n\n        instance(x: -1, y: -28, name: \"list1\") getat_3e8a81 root.Std_k98ojb.List.GetAt {}\n        instance(x: 187, y: -70, name: \"list2\") getat_7a1b77 root.Std_k98ojb.List.GetAt {}\n        instance(x: 428, y: -54) ifexpression_baefb9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"current == item2\"\n        }\n        instance(x: 112, y: 9) contains_e7d6d4 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 42) count_b8a7b6 root.Std_k98ojb.Std.Count {}\n        instance(x: -248, y: -27) for_6d9f42 root.Std_k98ojb.Std.For {}\n        instance(x: -251, y: 26) if_1b4c2d root.Std_k98ojb.Std.If {}\n        list1_016b2e -> for_6d9f42.items\n        func() {\n            in(x: -230, y: -26, name: \"current\") property(List) current_4a9b2f\n\n            out(x: 108, y: 22, name: \"list\") property(List) list_1e6a0b\n\n            instance(x: -18, y: 17) add_1f7b6e root.Std_k98ojb.List.Add {}\n            current_4a9b2f -> add_1f7b6e.item\n            list1_016b2e -> add_1f7b6e.list\n            add_1f7b6e.listWithItem -> list_1e6a0b\n        } -> if_1b4c2d.then\n        count_b8a7b6.value -> if_1b4c2d.input\n        if_1b4c2d.else -> count_b8a7b6.reset\n        if_1b4c2d.then -> count_b8a7b6.count\n        if_1b4c2d.else -> for_6d9f42.reset\n        for_6d9f42.index -> getat_3e8a81.index\n        for_6d9f42.item -> getat_3e8a81.itemAtIndex\n        list1_016b2e -> getat_7a1b77.list\n        getat_3e8a81.itemAtIndex -> ifexpression_baefb9.gen_1\n        list2_c8f404 -> contains_e7d6d4.list\n        getat_3e8a81.itemAtIndex -> contains_e7d6d4.item\n        ifexpression_baefb9.value -> if_1b4c2d.input\n        ifexpression_baefb9.then -> contains_e7d6d4.execute\n        ifexpression_baefb9.else -> getat_7a1b77.index\n        getat_7a1b77.itemAtIndex -> ifexpression_baefb9.gen_0\n        contains_e7d6d4.is_contained -> output_879de6\n        for_6d9f42.onItem -> ifexpression_baefb9.execute\n        for_6d9f42.done -> output_879de6\n        for_6d9f42.next -> getat_7a1b77.execute\n    }\n\n    \n\n    instance(x: -277, y: -84) common_element_5e7d4e root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n        in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n        out(x: 441, y: -72, name: \"output\") property(Bool) output_879de6\n        instance(x: -5, y: -42, name: \"intersection\") intersection_5ed2c8 root.Std_k98ojb.Sets.Intersection {}\n        list1_016b2e -> intersection_5ed2c8.left\n        list2_c8f404 -> intersection_5ed2c8.right\n        instance(x: 354, y: -62, name: \"notEmpty\") notempty_1a63cd root.Std_k98ojb.List.NotEmpty {}\n        intersection_5ed2c8.intersect -> notempty_1a63cd.list\n        notempty_1a63cd.is_not_empty -> output_879de6\n    }\n    \n    instance(x: -121, y: -22) common_element_cfb4f2 root.main.common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 212, y: 157) find_5dfe01 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -0, y: 7) not_93e3a3 root.Std_k98ojb.Logic.Not {}\n        instance(x: -287, y: -16) filter_9c8d0a root.Std_k98ojb.Query.Filter {\n            where: \"it + 1 in list\"\n        }\n        instance(x: 528, y: 112) if_a6d3e7 root.Std_k98ojb.Std.If {}\n        instance(x: -287, y: 138) filter_2d0c4a root.Std_k98ojb.Query.Filter {\n            where: \"it - 1 in list\"\n        }\n        instance(x: -287, y: 282, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: 528, y: 312) if_0efbe3 root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -192, y: 44, name: \"current\") property(Number) current_5a7a2c\n\n            out(x: 705, y: 49, name: \"bool\") property(Bool) bool_aaf1c3\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_5a7a2c -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_aaf1c3\n        } -> find_5dfe01.predicate\n        list_faf6c2 -> find_5dfe01.items\n        find_5dfe01.item -> filter_9c8d0a.list\n        list_faf6c2 -> filter_2d0c4a.list\n        filter_9c8d0a.result -> if_a6d3e7.predicate\n        filter_2d0c4a.result -> if_0efbe3.predicate\n        list_faf6c2 -> filter_4d4556.list\n        filter_4d4556.result -> find_5dfe01.items\n        if_a6d3e7.else -> not_93e3a3.input\n        if_0efbe3.else -> not_93e3a3.input\n        not_93e3a3.result -> output_a2b59d\n        if_a6d3e7.then -> output_a2b59d\n        if_0efbe3.then -> output_a2b59d\n    }\n\n    \n\n    instance(x: -108, y: 349) check_consecutive_dca3ec root.main.check_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: -85, y: 231) zip_1f8c4b root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 189, y: 133) map_3cc6d1 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 533, y: 132) not_eb6f88 root.Std_k98ojb.Logic.Not {}\n        instance(x: 807, y: 136) all_a1be8e root.Std_k98ojb.Query.Filter {}\n        instance(x: 0, y: 142) generateRange_5a4f0d root.Std_k98ojb.List.GenerateRange {}\n        list_faf6c2 -> generateRange_5a4f0d.from\n        list_faf6c2 -> generateRange_5a4f0d.to\n        generateRange_5a4f0d.list -> zip_1f8c4b.right\n        list_faf6c2 -> zip_1f8c4b.left\n        func() {\n            in(x: -112, y: -4, name: \"left\") property(Number) left_8bbd6e\n            in(x: -112, y: 51, name: \"right\") property(Number) right_2a9a92\n\n            out(x: 384, y: -8, name: \"\") property(Bool) _6c8e5b\n\n            instance(x: 116, y: 43) add_1bcf8e root.Std_k98ojb.Math.Add {}\n            instance(x: 348, y: -1) equal_6a0e64 root.Std_k98ojb.Logic.Equal {}\n            right_2a9a92 -> add_1bcf8e.second\n            1 -> add_1bcf8e.first\n            equal_6a0e64.right -> add_1bcf8e.result\n            left_8bbd6e -> equal_6a0e64.left\n            equal_6a0e64.result -> _6c8e5b\n        } -> map_3cc6d1.handler\n        zip_1f8c4b.zipped -> map_3cc6d1.items\n        map_3cc6d1.output_list -> all_a1be8e.list\n        all_a1be8e.is_contained -> not_eb6f88.input\n        not_eb6f88.result -> output_a2b59d\n    }\n\n    \n\n    instance(x: -50, y: 299) check_consecutive_c6f91b root.main.check_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 768, y: 128) ifexpression_5c9a42 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current - previous == 1\"\n        }\n        getter(x: 340, y: 151, name: \"getter_4a5a7a\") getter_4a5a7a = previous\n        setter(x: 683, y: -14, name: \"setter_f4f3d5\") setter_f4f3d5 = previous\n        instance(x: 331, y: -36) for_0e2a41 root.Std_k98ojb.Std.For {}\n        setter(x: -1, y: -141, name: \"setter_f4f3d5\") setter_1f63b8 = previous\n        instance(x: -279, y: -38) getat_7c66ea root.Std_k98ojb.List.GetAt {}\n        ifexpression_5c9a42.else -> output_a2b59d\n        ifexpression_5c9a42.value -> output_a2b59d\n        list_faf6c2 -> for_0e2a41.items\n        for_0e2a41.item -> ifexpression_5c9a42.gen_2\n        for_0e2a41.index -> ifexpression_5c9a42.gen_0\n        getter_4a5a7a.value -> ifexpression_5c9a42.gen_1\n        for_0e2a41.onItem -> ifexpression_5c9a42.execute\n        for_0e2a41.done -> output_a2b59d\n        for_0e2a41.item -> setter_f4f3d5.new_value\n        list_faf6c2 -> getat_7c66ea.list\n        0 -> getat_7c66ea.index\n        getat_7c66ea.itemAtIndex -> setter_1f63b8.new_value\n        ifexpression_5c9a42.then -> setter_f4f3d5.execute\n        setter_1f63b8.continue -> for_0e2a41.reset\n        setter_f4f3d5.continue -> for_0e2a41.next\n    }\n\n    \n\n    instance(x: -54, y: -20) check_consecutive_8c4a99 root.main.check_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 117, y: 166) zip_0edf2f root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 416, y: 125) if_1b4b89 root.Std_k98ojb.Std.If {}\n        instance(x: 728, y: 121) sub_1eb2b1 root.Std_k98ojb.Math.Sub {}\n        instance(x: -247, y: 206) map_1b2b3a root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -195, y: 182, name: \"index\") property(Number) index_2ab5d9\n            in(x: -191, y: 187, name: \"value\") property(Number) value_e4f8f2\n\n            out(x: 491, y: 157, name: \"result\") property(Number) result_7c2f1a\n\n            instance(x: 42, y: 150) add_c0f9d1 root.Std_k98ojb.Math.Add {}\n            index_2ab5d9 -> add_c0f9d1.first\n            value_e4f8f2 -> add_c0f9d1.second\n            add_c0f9d1.result -> result_7c2f1a\n        } -> map_1b2b3a.handler\n        list_faf6c2 -> map_1b2b3a.items\n        map_1b2b3a.output_list -> zip_0edf2f.left\n        map_1b2b3a.output_list -> zip_0edf2f.right\n        func() {\n            in(x: -91, y: 48, name: \"left\") property(Number) left_5e0e0e\n            in(x: -95, y: 49, name: \"right\") property(Number) right_eae8f9\n\n            out(x: 321, y: 67, name: \"\") property(Bool) _f9c0bc\n\n            instance(x: 92, y: 54) sub_fefb7e root.Std_k98ojb.Math.Sub {}\n            sub_fefb7e.result -> if_1b4b89.predicate\n            left_5e0e0e -> sub_fefb7e.first\n            right_eae8f9 -> sub_fefb7e.second\n        } -> zip_0edf2f.handler\n        zip_0edf2f.zipped -> if_1b4b89.predicate\n        if_1b4b89.else -> output_a2b59d\n        if_1b4b89.then -> sub_1eb2b1.execute\n        zip_0edf2f.zipped -> sub_1eb2b1.left\n        1 -> sub_1eb2b1.second\n        sub_1eb2b1.result -> if_1b4b89.predicate\n        if_1b4b89.value -> output_a2b59d\n    }\n\n    \n\n    instance(x: -139, y: 274) check_consecutive_1b8a0d root.main.check_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 428, y: 132) if_0d2d7f root.Std_k98ojb.Std.If {\n            true_value: \"False\"\n            false_value: \"True\"\n        }\n        instance(x: -85, y: 224) map_b5d69c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 202, y: 232) lessthanorequal_6e8d8c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 202, y: 96) greaterthan_4b53fa root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -85, y: 66) filter_a8b4c3 root.Std_k98ojb.Query.Filter {}\n        instance(x: 202, y: 14) if_6c37e7 root.Std_k98ojb.Std.If {\n            true_value: \"True\"\n            false_value: \"False\"\n        }\n        list_faf6c2 -> map_b5d69c.items\n        func() {\n            in(x: -102, y: 76, name: \"element\") property(Number) element_1a9d88\n\n            out(x: 332, y: 99, name: \"out\") property(Bool) out_9f1f9e\n\n            instance(x: 81, y: 68) add_4dc2b8 root.Std_k98ojb.Math.Add {}\n            element_1a9d88 -> add_4dc2b8.first\n            1 -> add_4dc2b8.second\n            add_4dc2b8.result -> out_9f1f9e\n        } -> map_b5d69c.handler\n        map_b5d69c.output_list -> filter_a8b4c3.list\n        func() {\n            in(x: -102, y: 76, name: \"element\") property(Number) element_1a9d88\n\n            out(x: 332, y: 99, name: \"out\") property(Bool) out_9f1f9e\n\n            instance(x: 81, y: 68) add_4dc2b8 root.Std_k98ojb.Math.Add {}\n            element_1a9d88 -> add_4dc2b8.first\n            1 -> add_4dc2b8.second\n            add_4dc2b8.result -> out_9f1f9e\n        } -> lessthanorequal_6e8d8c.handler\n        map_b5d69c.output_list -> greaterthan_4b53fa.gen_0\n        list_faf6c2 -> greaterthan_4b53fa.gen_1\n        lessthanorequal_6e8d8c.result -> filter_a8b4c3.where\n        filter_a8b4c3.result -> if_6c37e7.predicate\n        map_b5d69c.output_list -> if_0d2d7f.gen_0\n        list_faf6c2 -> if_0d2d7f.gen_1\n        if_6c37e7.result -> if_0d2d7f.predicate\n        if_0d2d7f.false -> output_a2b59d\n        if_0d2d7f.true_ -> output_a2b59d\n    }\n\n    \n\n    instance(x: -72, y: 274) check_consecutive_c5ee1b root.main.check_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 143, y: 154) filter_89ef3f root.Std_k98ojb.Query.Filter {\n            where: \"Math.abs(it - prev) == 1\"\n        }\n        instance(x: 481, y: 153) length_5e9b41 root.Std_k98ojb.List.Length {}\n        instance(x: 735, y: 136) equal_76bcb7 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 0, y: 228) for_9b0c59 root.Std_k98ojb.Std.For {}\n        instance(x: -331, y: 243) getat_3d6ed4 root.Std_k98ojb.List.GetAt {}\n        instance(x: -327, y: 102) set_1eab7c root.Std_k98ojb.Setting.Set {}\n        func() {\n            in(x: -192, y: 40, name: \"current\") property(Number) current_a9d6e8\n\n            out(x: 705, y: 35, name: \"output\") property(Bool) output_2c6f56\n\n            instance(x: 246, y: 23) sub_d9a6ed root.Std_k98ojb.Math.Sub {}\n            instance(x: 502, y: 35) abs_7a3c93 root.Std_k98ojb.Math.Expression {\n                expression: \"Math.abs(it)\"\n            }\n            1 -> sub_d9a6ed.second\n            current_a9d6e8 -> sub_d9a6ed.first\n            sub_d9a6ed.result -> abs_7a3c93.gen_0\n            abs_7a3c93.result -> output_2c6f56\n        } -> filter_89ef3f.handler\n        list_faf6c2 -> filter_89ef3f.list\n        list_faf6c2 -> for_9b0c59.items\n        for_9b0c59.item -> set_1eab7c.new_value\n        for_9b0c59.index -> getat_3d6ed4.index\n        list_faf6c2 -> getat_3d6ed4.list\n        getat_3d6ed4.itemAtIndex -> filter_89ef3f.gen_1\n        set_1eab7c.value -> filter_89ef3f.gen_0\n        for_9b0c59.onItem -> filter_89ef3f.execute\n        filter_89ef3f.result -> length_5e9b41.list\n        length_5e9b41.length -> equal_76bcb7.left\n        Math.GetListLength_of_list_faf6c2 -> equal_76bcb7.right\n        equal_76bcb7.result -> output_a2b59d\n        1 -> for_9b0c59.reset\n        for_9b0c59.done -> set_1eab7c.execute\n    }\n\n    \n\n    instance(x: -92, y: 224) check_consecutive_6ba7d3 root.main.check_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 1, y: 110) filter_0b6f53 root.Std_k98ojb.Query.Filter {\n            where: \"it + 1 == it_right\"\n        }\n        instance(x: 336, y: 124) not_2a5d5a root.Std_k98ojb.Logic.Not {}\n        instance(x: 577, y: 137) length_7b3f6a root.Std_k98ojb.List.Length {}\n        instance(x: 795, y: 140) lessthan_2e6d3c root.Std_k98ojb.Math.LessThan {}\n        instance(x: 1075, y: 141) equal_d1b9d6 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1218, y: 114) zip_8f63bf root.Std_k98ojb.Iteration.Zip {}\n        instance(x: -272, y: 245) getat_4db5f8 root.Std_k98ojb.List.GetAt {}\n        instance(x: -272, y: 70) getat_9a41b1 root.Std_k98ojb.List.GetAt {}\n        list_faf6c2 -> zip_8f63bf.left\n        list_faf6c2 -> zip_8f63bf.right\n        zip_8f63bf.zipped -> filter_0b6f53.list\n        zip_8f63bf.zipped -> length_7b3f6a.list\n        0 -> getat_4db5f8.index\n        list_faf6c2 -> getat_4db5f8.list\n        getat_4db5f8.itemAtIndex -> zip_8f63bf.left\n        1 -> getat_9a41b1.index\n        list_faf6c2 -> getat_9a41b1.list\n        getat_9a41b1.itemAtIndex -> zip_8f63bf.right\n        length_7b3f6a.length -> lessthan_2e6d3c.left\n        1 -> lessthan_2e6d3c.right\n        filter_0b6f53.result -> equal_d1b9d6.left\n        length_7b3f6a.length -> equal_d1b9d6.right\n        lessthan_2e6d3c.result -> not_2a5d5a.input\n        equal_d1b9d6.result -> output_a2b59d\n        not_2a5d5a.result -> output_a2b59d\n    }\n\n    \n\n    instance(x: -172, y: 254) check_consecutive_0b8aaf root.main.check_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: -121, y: 137) sort_a3d0e7 root.Std_k98ojb.List.Sort {}\n        instance(x: 0, y: -0) for_3a4e8f root.Std_k98ojb.Std.For {}\n        instance(x: 379, y: 44) sub_cdbf09 root.Std_k98ojb.Math.Sub {}\n        instance(x: 647, y: 95) and_7f4c1b root.Std_k98ojb.Logic.And {}\n        instance(x: 843, y: 44) not_4b7b9e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1095, y: 96) reduce_6e0c3c root.Std_k98ojb.Iteration.Reduce {}\n        sort_a3d0e7.list -> for_3a4e8f.items\n        func() {\n            in(x: -129, y: -10, name: \"element\") property(Number) element_1b2b9f\n\n            out(x: 463, y: 9, name: \"\") property(Bool) _fba4ae\n\n            instance(x: 80, y: -17) mul_6e52bb root.Std_k98ojb.Math.Mul {}\n            element_1b2b9f -> mul_6e52bb.first\n            1 -> mul_6e52bb.second\n            mul_6e52bb.result -> sub_cdbf09.first\n            sub_cdbf09.second -> element_1b2b9f\n            sub_cdbf09.result -> _fba4ae\n        } -> for_3a4e8f.handler\n        for_3a4e8f.item -> sub_cdbf09.first\n        for_3a4e8f.index -> sub_cdbf09.second\n        for_3a4e8f.onItem -> reduce_6e0c3c.execute\n        sub_cdbf09.result -> and_7f4c1b.left\n        0 -> and_7f4c1b.right\n        and_7f4c1b.result -> not_4b7b9e.input\n        not_4b7b9e.result -> reduce_6e0c3c.accumulator\n        reduce_6e0c3c.result -> output_a2b59d\n        true -> reduce_6e0c3c.initial_value\n        for_3a4e8f.done -> reduce_6e0c3c.finish\n        for_3a4e8f.reset -> reduce_6e0c3c.reset\n    }\n\n    \n\n    instance(x: -55, y: 529) check_consecutive_eac1bf root.main.check_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 100, y: 205) length_7f28c6 root.Std_k98ojb.List.Length {}\n        instance(x: 330, y: 137) filter_bfbef1 root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: 660, y: 207) getat_7f8a4e root.Std_k98ojb.List.GetAt {}\n        instance(x: 660, y: 127) getat_72a1f8 root.Std_k98ojb.List.GetAt {}\n        instance(x: 660, y: 47) add_92dbb3 root.Std_k98ojb.Math.Add {}\n        instance(x: 660, y: 205) getat_b8c7e8 root.Std_k98ojb.List.GetAt {}\n        instance(x: 660, y: 125) getat_9b6ab7 root.Std_k98ojb.List.GetAt {}\n        instance(x: 100, y: 127) filter_9ce2d5 root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: 330, y: 47) lessthan_6e7a41 root.Std_k98ojb.Math.LessThan {}\n        instance(x: 330, y: 127) lessthan_2f4a64 root.Std_k98ojb.Math.LessThan {}\n        instance(x: 0, y: 207) for_5e5f6e root.Std_k98ojb.Std.For {}\n        instance(x: 330, y: 207) for_bfcfe5 root.Std_k98ojb.Std.For {}\n        instance(x: -90, y: 132) if_a3c0b9 root.Std_k98ojb.Std.If {}\n        instance(x: 330, y: 47) equal_77f58e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 330, y: 127) equal_8f8f88 root.Std_k98ojb.Logic.Equal {}\n        length_7f28c6.length -> for_5e5f6e.count\n        list_faf6c2 -> for_5e5f6e.items\n        for_5e5f6e.index -> getat_7f8a4e.index\n        list_faf6c2 -> getat_7f8a4e.list\n        getat_7f8a4e.itemAtIndex -> filter_bfbef1.list\n        for_5e5f6e.onItem -> filter_bfbef1.execute\n        for_5e5f6e.index -> getat_72a1f8.index\n        list_faf6c2 -> getat_72a1f8.list\n        getat_72a1f8.itemAtIndex -> filter_9ce2d5.list\n        for_5e5f6e.onItem -> filter_9ce2d5.execute\n        for_5e5f6e.index -> add_92dbb3.first\n        1 -> add_92dbb3.second\n        add_92dbb3.result -> getat_b8c7e8.index\n        list_faf6c2 -> getat_b8c7e8.list\n        getat_b8c7e8.itemAtIndex -> lessthan_6e7a41.left\n        getat_7f8a4e.itemAtIndex -> lessthan_6e7a41.right\n        lessthan_6e7a41.result -> if_a3c0b9.predicate\n        for_5e5f6e.index -> getat_9b6ab7.index\n        list_faf6c2 -> getat_9b6ab7.list\n        getat_9b6ab7.itemAtIndex -> lessthan_2f4a64.left\n        getat_72a1f8.itemAtIndex -> lessthan_2f4a64.right\n        lessthan_2f4a64.result -> if_a3c0b9.else\n        getat_b8c7e8.itemAtIndex -> equal_77f58e.left\n        getat_7f8a4e.itemAtIndex -> equal_77f58e.right\n        getat_9b6ab7.itemAtIndex -> equal_8f8f88.left\n        getat_72a1f8.itemAtIndex -> equal_8f8f88.right\n        equal_77f58e.result -> if_a3c0b9.then\n        equal_8f8f88.result -> if_a3c0b9.else\n        if_a3c0b9.value -> for_bfcfe5.count\n        0 -> for_bfcfe5.count\n        if_a3c0b9.else -> for_bfcfe5.count\n        if_a3c0b9.value -> output_a2b59d\n        if_a3c0b9.then -> output_a2b59d\n        for_5e5f6e.done -> for_bfcfe5.reset\n        for_bfcfe5.onItem -> lessthan_6e7a41.execute\n        for_bfcfe5.onItem -> lessthan_2f4a64.execute\n        for_bfcfe5.index -> getat_7f8a4e.index\n        list_faf6c2 -> getat_7f8a4e.list\n        for_bfcfe5.index -> getat_72a1f8.index\n        list_faf6c2 -> getat_72a1f8.list\n        for_bfcfe5.index -> add_92dbb3.first\n        1 -> add_92dbb3.second\n        add_92dbb3.result -> getat_b8c7e8.index\n        list_faf6c2 -> getat_b8c7e8.list\n        for_bfcfe5.index -> getat_9b6ab7.index\n        list_faf6c2 -> getat_9b6ab7.list\n    }\n\n    \n\n    instance(x: -66, y: 211) check_consecutive_4bfa81 root.main.check_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") check_consecutive {\n        in(x: -425, y: 209, name: \"list\") property(List) list_faf6c2\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 208, y: 109) ifexpression_5d4d07 root.Std_k98ojb.Std.IfExpression {\n            expression: \"list_faf6c2.IsEmpty() || Math.Sub(List.GetAt(list_faf6c2, 1), List.GetAt(list_faf6c2, 0)) != 1\"\n        }\n        list_faf6c2 -> ifexpression_5d4d07.gen_0\n        instance(x: -302, y: 186) getat_f9e1f2 root.Std_k98ojb.List.GetAt {}\n        instance(x: -302, y: 306) getat_fdc1e6 root.Std_k98ojb.List.GetAt {}\n        list_faf6c2 -> getat_fdc1e6.list\n        1 -> getat_fdc1e6.index\n        list_faf6c2 -> getat_f9e1f2.list\n        0 -> getat_f9e1f2.index\n        func() {\n            in(x: -119, y: 75, name: \"_value_1\") property(Number) _value_1_7f7a4a\n            in(x: -117, y: 175, name: \"_value_0\") property(Number) _value_0_2d7c7a\n\n            out(x: 503, y: 114, name: \"result\") property(Number) result_7a1bc7\n\n            instance(x: 90, y: 99) sub_e7ee34 root.Std_k98ojb.Math.Sub {}\n            _value_1_7f7a4a -> sub_e7ee34.first\n            _value_0_2d7c7a -> sub_e7ee34.second\n            sub_e7ee34.result -> result_7a1bc7\n        } -> ifexpression_5d4d07.handler\n        getat_fdc1e6.itemAtIndex -> ifexpression_5d4d07.gen_1\n        getat_f9e1f2.itemAtIndex -> ifexpression_5d4d07.gen_2\n        ifexpression_5d4d07.value -> output_a2b59d\n        ifexpression_5d4d07.then -> output_a2b59d\n        ifexpression_5d4d07.else -> output_a2b59d\n    }\n\n    \n\n    instance(x: -81, y: 235) check_consecutive_9aa74e root.main.check_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1727, y: 1027, name: \"contains\") contains_8d6c0f root.Std_k98ojb.List.Contains {}\n        instance(x: -1174, y: 1069) count_8bf8f2 root.Std_k98ojb.Std.Count {}\n        instance(x: -1727, y: 1173) ifexpression_b9a2ed root.Std_k98ojb.Std.IfExpression {\n            expression: \"contains == true\"\n        }\n        instance(x: -1728, y: 1275, name: \"ifexpression\") ifexpression_a87e4e root.Std_k98ojb.Std.If {}\n        instance(x: -1206, y: 1313) length_bdbdb6 root.Std_k98ojb.List.Length {}\n        instance(x: -1505, y: 1247, name: \"IfExpression\") ifexpression_7c5e52 root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == length\"\n        }\n        instance(x: -1519, y: 1115, name: \"For\") for_61baa8 root.Std_k98ojb.Std.For {}\n        sub_list_f9cb80 -> contains_8d6c0f.list\n        main_list_25f077 -> contains_8d6c0f.item\n        contains_8d6c0f.is_contained -> ifexpression_b9a2ed.gen_1\n        ifexpression_b9a2ed.value -> ifexpression_a87e4e.input\n        ifexpression_a87e4e.then -> count_8bf8f2.trigger\n        ifexpression_a87e4e.else -> continue_d72620\n        execute_68160a -> ifexpression_a87e4e.execute\n        count_8bf8f2.count -> ifexpression_7c5e52.gen_0\n        length_bdbdb6.list -> length_bdbdb6.list\n        sub_list_f9cb80 -> length_bdbdb6.list\n        length_bdbdb6.length -> ifexpression_7c5e52.gen_1\n        ifexpression_7c5e52.value -> ifexpression_a87e4e.then\n        ifexpression_a87e4e.continue -> for_61baa8.next\n        for_61baa8.items -> main_list_25f077\n        for_61baa8.onItem -> contains_8d6c0f.item\n        for_61baa8.done -> continue_d72620\n        contains_8d6c0f.is_contained -> ifexpression_a87e4e.then\n        ifexpression_a87e4e.then -> ifexpression_a87e4e.then\n        for_61baa8.reset -> count_8bf8f2.reset\n        ifexpression_a87e4e.then -> for_61baa8.trigger\n        ifexpression_a87e4e.else -> ifexpression_a87e4e.else\n        ifexpression_7c5e52.then -> output_ebc87c\n        ifexpression_7c5e52.else -> ifexpression_a87e4e.else\n    }\n\n    \n\n    instance(x: -1820, y: 1183) is_Sub_Array_b0dbfc root.main.is_Sub_Array {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1733, y: 1024, name: \"filter\") filter_4e1f4c root.Std_k98ojb.Query.Filter {}\n        instance(x: -1319, y: 1172) contains_4b8bba root.Std_k98ojb.List.Contains {}\n        instance(x: -1415, y: 1003, name: \"list_map\") map_6f2d8c root.Std_k98ojb.Iteration.Map {}\n        instance(x: -1001, y: 1172) contains_c8d6ea root.Std_k98ojb.List.Contains {}\n        instance(x: -1007, y: 1049, name: \"list_zip\") zip_c0d55e root.Std_k98ojb.Iteration.Zip {}\n        instance(x: -1437, y: 1011, name: \"map_func\") func_1a9a92 map_6f2d8c.handler\n        <details> \n \t{ \n \t\tsummary: \"Key Points\" \n \t\t} \n \t\t1->  Create a  \t->  \u0001",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: -1366, y: 1021) reduce_8bbf8a root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -142, y: 1069, name: \"accumulated\") property(Bool) acc_9edf48\n            in(x: -134, y: 1146, name: \"current\") property(Number) current_4a99d0\n\n            out(x: 722, y: 1116, name: \"output\") property(Bool) output_5e9f7f\n\n            instance(x: 206, y: 1113) contains_d5ebea root.Std_k98ojb.List.Contains {}\n            contains_d5ebea.is_contained -> output_5e9f7f\n            current_4a99d0 -> contains_d5ebea.item\n            sub_list_f9cb80 -> contains_d5ebea.list\n        } -> reduce_8bbf8a.reducer\n        func() {\n            in(x: -162, y: 1042, name: \"accumulated\") property(Number) _index_5a2c80\n            in(x: -150, y: 1170, name: \"current\") property(Number) _index_5b1e0e\n\n            out(x: 693, y: 1110, name: \"output\") property(Number) output_9e99d4\n\n            instance(x: 222, y: 1106) sub_a5e5d2 root.Std_k98ojb.Math.Sub {}\n            _index_5a2c80 -> sub_a5e5d2.first\n            1 -> sub_a5e5d2.second\n            sub_a5e5d2.result -> output_9e99d4\n        } -> reduce_8bbf8a.reducer2\n        func() {\n            in(x: -158, y: 1041, name: \"accumulated\") property(List) _list_9a5e7c\n            in(x: -145, y: 1172, name: \"current\") property(Number) _index_1d6a3a\n\n            out(x: 702, y: 1111, name: \"output\") property(List) output_9d1f7f\n\n            instance(x: 223, y: 1107) getat_f7b8f9 root.Std_k98ojb.List.GetAt {}\n            instance(x: 424, y: 1107) listadd_7c6a4d root.Std_k98ojb.List.Add {}\n            0 -> getat_f7b8f9.index\n            _list_9a5e7c -> getat_f7b8f9.list\n            getat_f7b8f9.itemAtIndex -> listadd_7c6a4d.item\n            _index_1d6a3a -> listadd_7c6a4d.list\n            listadd_7c6a4d.listWithItem -> output_9d1f7f\n        } -> reduce_8bbf8a.reducer3\n        sub_list_f9cb80 -> reduce_8bbf8a.items\n        true -> reduce_8bbf8a.initial_accumulator\n        main_list_25f077 -> reduce_8bbf8a.list\n        filter_c91965.output_list -> map_c73e3b.items\n        reduce_8bbf8a.output -> filter_c91965.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_ebc87c\n        contains_32727d.is_contained -> not_75283f.input\n        execute_68160a -> reduce_8bbf8a.execute\n        reduce_8bbf8a.continue -> continue_d72620\n    }\n\n    \n\n    instance(x: -1517, y: 1096) is_Sub_Array_2a7e7e root.main.is_Sub_Array {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1350, y: 1055) getat_5cf7b3 root.Std_k98ojb.List.GetAt {}\n        instance(x: -1346, y: 1238) not_2ee4c3 root.Std_k98ojb.Logic.Not {}\n        instance(x: -1293, y: 1072) equal_1b4f55 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -1269, y: 1165) not_4e9a7f root.Std_k98ojb.Logic.Not {}\n        instance(x: -1216, y: 1189) equal_1d5fa8 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -1192, y: 1282) not_6cf5d1 root.Std_k98ojb.Logic.Not {}\n        instance(x: -1139, y: 1306) equal_1aa9bc root.Std_k98ojb.Logic.Equal {}\n        instance(x: -1115, y: 1421) not_f7f3db root.Std_k98ojb.Logic.Not {}\n        instance(x: -1062, y: 1445) equal_6cc2c8 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -1038, y: 1538) not_8ea9d7 root.Std_k98ojb.Logic.Not {}\n        instance(x: -985, y: 1562) equal_12c7ee root.Std_k98ojb.Logic.Equal {}\n        instance(x: -960, y: 1655) not_9e83c8 root.Std_k98ojb.Logic.Not {}\n        instance(x: -907, y: 1679) equal_9d3f6b root.Std_k98ojb.Logic.Equal {}\n        instance(x: -883, y: 1772) not_5bb5df root.Std_k98ojb.Logic.Not {}\n        instance(x: -830, y: 1796) equal_3d0c6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: -806, y: 1889) not_9e7fa9 root.Std_k98ojb.Logic.Not {}\n        instance(x: -753, y: 1913) equal_4e8ba9 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -729, y: 2006) not_9f2f6b root.Std_k98ojb.Logic.Not {}\n        instance(x: -676, y: 2030) equal_2d9b68 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -652, y: 2123) not_8f5c96 root.Std_k98ojb.Logic.Not {}\n        instance(x: -599, y: 2147) equal_4e7ea2 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -575, y: 2240) not_4e9c98 root.Std_k98ojb.Logic.Not {}\n        instance(x: -522, y: 2264) equal_c7d7db root.Std_k98ojb.Logic.Equal {}\n        instance(x: -498, y: 2357) not_9f2ec2 root.Std_k98ojb.Logic.Not {}\n        instance(x: -445, y: 2381) equal_5b2bc6 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -421, y: 2474) not_6d6e0c root.Std_k98ojb.Logic.Not {}\n        instance(x: -368, y: 2498) equal_ebf4b6 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -343, y: 2591) not_5bf9c4 root.Std_k98ojb.Logic.Not {}\n        instance(x: -290, y: 2615) equal_8f9b8b root.Std_k98ojb.Logic.Equal {}\n        instance(x: -266, y: 2708) not_4f6d5b root.Std_k98ojb.Logic.Not {}\n        instance(x: -213, y: 2732) equal_6c5c8e root.Std_k98ojb.Logic.Equal {}\n        instance(x: -188, y: 2825) not_e7eb8b root.Std_k98ojb.Logic.Not {}\n        instance(x: -135, y: 2849) equal_a0b3c9 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -111, y: 2942) not_e7e6e4 root.Std_k98ojb.Logic.Not {}\n        instance(x: -58, y: 2966) equal_1fbc59 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -34, y: 3060) and_1e1d3d root.Std_k98ojb.Logic.And {}\n        instance(x: -1875, y: 877) if_2eeb1b root.Std_k98ojb.Std.If {}\n        instance(x: -1782, y: 1014) if_9e1b92 root.Std_k98ojb.Std.If {}\n        instance(x: -1689, y: 1151) if_6c2fb6 root.Std_k98ojb.Std.If {}\n        instance(x: -1596, y: 1288) if_4f1b0a root.Std_k98ojb.Std.If {}\n        instance(x: -1503, y: 1425) if_9f5aeb root.Std_k98ojb.Std.If {}\n        instance(x: -1410, y: 1562) if_4e8f45 root.Std_k98ojb.Std.If {}\n        instance(x: -1317, y: 1699) if_5b2b6b root.Std_k98ojb.Std.If {}\n        instance(x: -1224, y: 1836) if_e7f0db root.Std_k98ojb.Std.If {}\n        instance(x: -1131, y: 1973) if_a0e1e7 root.Std_k98ojb.Std.If {}\n        instance(x: -1038, y: 2110) if_1fb8e7 root.Std_k98ojb.Std.If {}\n        instance(x: -945, y: 2247) for_f9d9bf root.Std_k98ojb.Std.For {}\n        main_list_25f077 -> for_f9d9bf.items\n        execute_68160a -> for_f9d9bf.trigger\n        for_f9d9bf.index -> getat_5cf7b3.index\n        main_list_25f077 -> getat_5cf7b3.list\n        getat_5cf7b3.itemAtIndex -> equal_1b4f55.left\n        sub_list_f9cb80.0 -> equal_1b4f55.right\n        equal_1b4f55.result -> not_2ee4c3.input\n        not_2ee4c3.result -> if_2eeb1b.input\n        if_2eeb1b.then -> if_9e1b92.trigger\n        if_2eeb1b.else -> continue_d72620\n        if_9e1b92.then -> if_6c2fb6.trigger\n        if_9e1b92.else -> continue_d72620\n        if_6c2fb6.then -> if_4f1b0a.trigger\n        if_6c2fb6.else -> continue_d72620\n        if_4f1b0a.then -> if_9f5aeb.trigger\n        if_4f1b0a.else -> continue_d72620\n        if_9f5aeb.then -> if_4e8f45.trigger\n        if_9f5aeb.else -> continue_d72620\n        if_4e8f45.then -> if_5b2b6b.trigger\n        if_4e8f45.else -> continue_d72620\n        if_5b2b6b.then -> if_e7f0db.trigger\n        if_5b2b6b.else -> continue_d72620\n        if_e7f0db.then -> if_a0e1e7.trigger\n        if_e7f0db.else -> continue_d72620\n        if_a0e1e7.then ->",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: 1049, y: 987) find_7e3b8e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 1229, y: 1083) and_9d7b9c root.Std_k98ojb.Logic.And {}\n        instance(x: 1229, y: 1148) equal_d1afdb root.Std_k98ojb.Logic.Equal {}\n        instance(x: -1218, y: 1036) count_a8d7c6 root.Std_k98ojb.Std.Count {}\n        instance(x: -1221, y: 1296) length_4b8927 root.Std_k98ojb.List.Length {}\n        func() {\n            in(x: -1049, y: 1067, name: \"current\") property(Number) current_8e8c1d\n\n            out(x: 1303, y: 1040, name: \"bool\") property(Bool) bool_1e1c6f\n\n            instance(x: 113, y: 1051) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n            instance(x: 432, y: 1054) equal_d1afdb root.Std_k98ojb.Logic.Equal {}\n            instance(x: 725, y: 1046) mod_7f1f83 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 1024, y: 1049) greaterthan_2c3d7c root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: 1203, y: 1057) and_1e5ef0 root.Std_k98ojb.Logic.And {}\n            instance(x: 1344, y: 1055) and_9d7b9c root.Std_k98ojb.Logic.And {}\n            count_a8d7c6.count -> getat_ce2a48.index\n            current_8e8c1d -> getat_ce2a48.valueAtIndex\n            sub_list_f9cb80 -> getat_ce2a48.list\n            mod_7f1f83.result -> greaterthan_2c3d7c.left\n            count_a8d7c6.count -> mod_7f1f83.value\n            length_4b8927.length -> mod_7f1f83.divisor\n            length_4b8927.length -> greaterthan_2c3d7c.right\n            getat_ce2a48.itemAtIndex -> equal_d1afdb.left\n            current_8e8c1d -> equal_d1afdb.right\n            greaterthan_2c3d7c.result -> and_1e5ef0.left\n            equal_d1afdb.result -> and_1e5ef0.right\n            and_1e5ef0.result -> and_9d7b9c.left\n            and_9d7b9c.right -> bool_1e1c6f\n        } -> find_7e3b8e.predicate\n        length_4b8927.list -> sub_list_f9cb80\n        length_4b8927.length -> count_a8d7c6.count\n        main_list_25f077 -> find_7e3b8e.items\n        find_7e3b8e.item -> equal_d1afdb.left\n        sub_list_f9cb80 -> equal_d1afdb.right\n        equal_d1afdb.result -> and_9d7b9c.right\n        count_a8d7c6.reset -> continue_d72620\n        find_7e3b8e.item -> output_ebc87c\n        find_7e3b8e.not_found -> continue_d72620\n        execute_68160a -> count_a8d7c6.reset\n    }\n\n    \n    instance(x: 139, y: 1035) is_Sub_Array_2a7b2c root.main.is_Sub_Array {}\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1496, y: 1129, name: \"sub list length\") length_4a8df1 root.Std_k98ojb.List.Length {}\n        instance(x: -1496, y: 1181, name: \"main list length\") length_6cb4d8 root.Std_k98ojb.List.Length {}\n        instance(x: -1368, y: 1183, name: \"difference\") sub_5ddc69 root.Std_k98ojb.Math.Sub {}\n        instance(x: -1080, y: 1045, name: \"list slice\") slice_a6e8f3 root.Std_k98ojb.List.Slice {}\n        instance(x: -1086, y: 1296, name: \"sub list length\") length_e1d7e4 root.Std_k98ojb.List.Length {}\n        instance(x: -1345, y: 1192, name: \"comparison\") contains_1a7a3c root.Std_k98ojb.List.Contains {}\n        instance(x: -1362, y: 1171, name: \"increment\") add_0a5f39 root.Std_k98ojb.Math.Add {}\n        instance(x: -1129, y: 1165, name: \"slice end\") sub_c5d3f8 root.Std_k98ojb.Math.Sub {}\n        instance(x: -1340, y: 1285, name: \"reset index\") assign_2d1f3b root.Std_k98ojb.Logic.Assign {}\n        instance(x: -1430, y: 1057, name: \"main list slice\") slice_2f48e9 root.Std_k98ojb.List.Slice {}\n        instance(x: -1414, y: 1023, name: \"start index\") assign_dafab1 root.Std_k98ojb.Logic.Assign {}\n        instance(x: -1489, y: 1236, name: \"end index\") assign_8a8c1d root.Std_k98ojb.Logic.Assign {}\n        instance(x: -1412, y: 1272, name: \"end index\") add_2e95c6 root.Std_k98ojb.Math.Add {}\n        length_4a8df1.list -> sub_list_f9cb80\n        length_6cb4d8.list -> main_list_25f077\n        length_6cb4d8.length -> sub_5ddc69.first\n        length_4a8df1.length -> sub_5ddc69.second\n        add_0a5f39.first -> assign_2d1f3b.new_value\n        0 -> add_0a5f39.second\n        assign_dafab1.new_value -> slice_2f48e9.start\n        0 -> assign_dafab1.value\n        sub_5ddc69.result -> assign_8a8c1d.value\n        assign_dafab1.value -> slice_2f48e9.end\n        sub_c5d3f8.first -> assign_8a8c1d.new_value\n        add_2e95c6.first -> add_2e95c6.result\n        add_2e95c6.second -> length_e1d7e4.length\n        assign_8a8c1d.value -> add_2e95c6.first\n        sub_c5d3f8.second -> sub_c5d3f8.result\n        add_2e95c6.result -> sub_c5d3f8.first\n        assign_2d1f3b.value -> add_2e95c6.second\n        slice_2f48e9.list -> main_list_25f077\n        slice_2f48e9.slice -> slice_a6e8f3.list\n        sub_c5d3f8.result -> slice_a6e8f3.end\n        slice_a6e8f3.list -> contains_1a7a3c.list\n        sub_list_f9cb80 -> contains_1a7a3c.item\n        add_0a5f39.result -> add_0a5f39.value\n        add_0a5f39.value -> assign_2d1f3b.value\n        contains_1a7a3c.is_contained -> contains_1a7a3c.value\n        contains_1a7a3c.value -> output_ebc87c\n        execute_68160a -> assign_dafab1.execute\n        add_0a5f39.value -> assign_2d1f3b.value\n        contains_1a7a3c.is_contained -> contains_1a7a3c.value\n        contains_1a7a3c.value -> output_ebc87c\n        contains_1a7a3c.is_contained -> ifexpression_5a4e28.input\n        ifexpression_5a4e28.then -> continue_d72620\n        continue_d72620 -> continue_d72620\n        ifexpression_5a4e28.value -> ifexpression_5a4e28.result\n        ifexpression_5a4e28.else -> ifexpression_5a4e28.result\n        sub_list_f9cb80 -> length_e1d7e4.list\n        ifexpression_5a4e28.result -> assign_2d1f3b.continue\n    }\n\n    \n\n    instance(x: -1826, y: 1013) is_sub_array_4f77a1 root.main.is_Sub_Array {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1716, y: 987, name: \"main\") for_5b7f51 root.Std_k98ojb.Std.For {}\n        instance(x: -1452, y: 1064) ifexpression_b9bdf8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0\"\n        }\n        instance(x: -1717, y: 1100) index_64ec8f root.Std_k98ojb.List.GetAt {}\n        instance(x: -1718, y: 1213) getat_4db5f8 root.Std_k98ojb.List.GetAt {}\n        instance(x: -1456, y: 1235) for_2d3f2b root.Std_k98ojb.Std.For {}\n        instance(x: -1145, y: 1235) contains_1a4e9f root.Std_k98ojb.List.Contains {}\n        instance(x: -1456, y: 1373) not_6e7e45 root.Std_k98ojb.Logic.Not {}\n        instance(x: -1178, y: 1196) ifexpression_f6b5dc root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0\"\n        }\n        instance(x: -1178, y: 1257) index_8f9f8f root.Std_k98ojb.List.GetAt {}\n        instance(x: -1190, y: 1370) getat_0e7f4d root.Std_k98ojb.List.GetAt {}\n        ifexpression_b9bdf8.value -> index_64ec8f.index\n        ifexpression_b9bdf8.value -> ifexpression_f6b5dc.value\n        main_list_25f077 -> for_5b7f51.items\n        ifexpression_b9bdf8.then -> for_2d3f2b.reset\n        for_5b7f51.item -> index_64ec8f.list\n        for_5b7f51.index -> index_64ec8f.index\n        for_5b7f51.onItem -> for_5b7f51.next\n        for_5b7f51.reset -> ifexpression_b9bdf8.execute\n        ifexpression_b9bdf8.value -> for_5b7f51.next\n        ifexpression_b9bdf8.else -> for_2d3f2b.trigger\n        for_2d3f2b.items -> sub_list_f9cb80\n        index_64ec8f.itemAtIndex -> getat_4db5f8.list\n        0 -> getat_4db5f8.index\n        getat_4db5f8.itemAtIndex -> for_2d3f2b.trigger\n        ifexpression_f6b5dc.then -> index_8f9f8f.index\n        ifexpression_f6b5dc.else -> for_2d3f2b.next\n        for_2d3f2b.item -> index_8f9f8f.list\n        for_2d3f2b.index -> index_8f9f8f.index\n        ifexpression_f6b5dc.then -> getat_0e7f4d.list\n        for_2d3f2b.onItem -> ifexpression_f6b5dc.execute\n        index_8f9f8f.itemAtIndex -> getat_0e7f4d.index\n        0 -> contains_1a4e9f.item\n        getat_0e7f4d.itemAtIndex -> contains_1a4e9f.list\n        contains_1a4e9f.is_contained -> not_6e7e45.input\n        not_6e7e45.result -> for_2d3f2b.continue\n        for_2d3f2b.done -> continue_d72620\n        not_6e7e45.result -> ifexpression_f6b5dc.execute\n        execute_68160a -> for_5b7f51.trigger\n        continue_d72620 -> output_ebc87c\n    }\n\n    \n\n    instance(x: -1915, y: 1106) is_Sub_Array_f4b4c6 root.main.is_Sub_Array {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1638, y: 1056) len_baafe1 root.Std_k98ojb.List.Length {}\n        instance(x: -1547, y: 1109) len_98e5a2 root.Std_k98ojb.List.Length {}\n        instance(x: -1441, y: 1141) lt_7f4a6f root.Std_k98ojb.Math.LessThan {}\n        len_98e5a2.length -> lt_7f4a6f.right\n        len_baafe1.length -> lt_7f4a6f.left\n        instance(x: -1381, y: 1102) ifexpression_7a79c1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"lt\"\n        }\n        ifexpression_7a79c1.value -> output_ebc87c\n        ifexpression_7a79c1.else -> continue_d72620\n        instance(x: -1148, y: 1202) find_5c6c93 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -1083, y: 1107, name: \"item\") property(Any) _item_8f4d1c\n\n            out(x: -710, y: 1112, name: \"bool\") property(Bool) _result_2b6d97\n\n            instance(x: -964, y: 1114) contains_8f53a7 root.Std_k98ojb.List.Contains {}\n            contains_8f53a7.list -> sub_list_f9cb80\n            _item_8f4d1c -> contains_8f53a7.item\n            contains_8f53a7.is_contained -> _result_2b6d97\n        } -> find_5c6c93.predicate\n        instance(x: -1221, y: 1154) getat_3d5b46 root.Std_k98ojb.List.GetAt {}\n        instance(x: -1292, y: 1168) add_3d1f3b root.Std_k98ojb.List.Add {}\n        instance(x: -1320, y: 1169) ifexpression_5e3e8d root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < subListLen\"\n        }\n        instance(x: -1068, y: 1268) for_7e4eb0 root.Std_k98ojb.Std.For {}\n        instance(x: -1003, y: 1179) equals_9cb0f9 root.Std_k98ojb.Logic.Equal {}\n        equals_9cb0f9.result -> ifexpression_5e3e8d.value\n        instance(x: -1279, y: 1227) mod_bfb4a5 root.Std_k98ojb.Math.Modulo {}\n        mod_bfb4a5.result -> equals_9cb0f9.left\n        1 -> mod_bfb4a5.divisor\n        getat_3d5b46.itemAtIndex -> mod_bfb4a5.value\n        0 -> getat_3d5b46.index\n        find_5c6c93.item -> getat_3d5b46.list\n        ifexpression_5e3e8d.then -> add_3d1f3b.execute\n        ifexpression_5e3e8d.value -> ifexpression_5e3e8d.gen_0\n        for_7e4eb0.index -> ifexpression_5e3e8d.gen_1\n        for_7e4eb0.items -> main_list_25f077\n        ifexpression_5e4f09.value -> for_7e4eb0.execute\n        find_5c6c93.items -> for_7e4eb0.items\n        add_3d1f3b.new_value -> add_3d1f3b.item\n        for_7e4eb0.item -> add_3d1f3b.item\n        add_3d1f3b.continue -> for_7e4eb0.next\n        add_3d1f3b.listWithItem -> ifexpression_5e3e8d.list\n        ifexpression_5e3e8d.else -> for_7e4eb0.next\n        find_5c6c93.output -> continue_d72620\n        len_98e5a2.list -> sub_list_f9cb80\n        len_baafe1.list -> main_list_25f077\n        ifexpression_7a79c1.then -> find_5c6c93.execute\n        execute_68160a -> ifexpression_7a79c1.execute\n        len_baafe1.continue -> ifexpression_7a79c1.list\n        len_98e5a2.continue -> ifexpression_7a79c1.list\n    }\n\n    \n\n    instance(x: 115, y: 1091) is_Sub_Array_4e90bb root.main.is_Sub_Array {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1196, y: 1074) getat_cceaf6 root.Std_k98ojb.List.GetAt {}\n        instance(x: -1098, y: 1189, name: \"next item in the sub list\") getat_3b4a72 root.Std_k98ojb.List.GetAt {}\n        instance(x: -1026, y: 1082) equal_b8c7e8 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -1016, y: 1188) notequal_4c9a6e root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: -1146, y: 1219) not_5e9c3f root.Std_k98ojb.Logic.Not {}\n        instance(x: -1239, y: 1019) count_eeba2a root.Std_k98ojb.Std.Count {}\n        instance(x: -1098, y: 1041, name: \"current index in main list\") getat_9b2f03 root.Std_k98ojb.List.GetAt {}\n        instance(x: -1201, y: 1161, name: \"next index in main list\") getat_9a3fe7 root.Std_k98ojb.List.GetAt {}\n        instance(x: -1149, y: 1044) sub_fcc3b6 root.Std_k98ojb.Math.Sub {}\n        instance(x: -1149, y: 1163) add_d2c0b3 root.Std_k98ojb.Math.Add {}\n        instance(x: -1221, y: 1294) not_3f2fe2 root.Std_k98ojb.Logic.Not {}\n        instance(x: -1162, y: 1319) equal_77e0e2 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -1144, y: 1295) length_2f8e8a root.Std_k98ojb.List.Length {}\n        instance(x: -1259, y: 1137, name: \"if sub list is not found\") if_9b2e5b root.Std_k98ojb.Std.If {}\n        sub_list_f9cb80 -> count_eeba2a.list\n        main_list_25f077 -> getat_cceaf6.list\n        main_list_25f077 -> getat_9b2f03.list\n        count_eeba2a.count -> getat_9b2f03.index\n        execute_68160a -> getat_9b2f03.execute\n        count_eeba2a.reset -> count_eeba2a.next\n        0 -> count_eeba2a.reset\n        1 -> sub_list_f9cb80\n        count_eeba2a.count -> length_2f8e8a.list\n        count_eeba2a.count -> add_d2c0b3.second\n        getat_cceaf6.itemAtIndex -> equal_b8c7e8.left\n        0 -> getat_3b4a72.index\n        sub_list_f9cb80 -> getat_3b4a72.list\n        equal_b8c7e8.result -> notequal_4c9a6e.left\n        true -> notequal_4c9a6e.right\n        notequal_4c9a6e.result -> not_5e9c3f.input\n        not_5e9c3f.result -> if_9b2e5b.input\n        not_5e9c3f.result -> add_d2c0b3.first\n        add_d2c0b3.result -> getat_9a3fe7.index\n        count_eeba2a.count -> getat_9a3fe7.list\n        getat_9b2f03.itemAtIndex -> sub_fcc3b6.first\n        add_d2c0b3.result -> sub_fcc3b6.second\n        sub_fcc3b6.result -> getat_3b4a72.index\n        not_5e9c3f.result -> getat_9a3fe7.execute\n        if_9b2e5b.then -> continue_d72620\n        if_9b2e5b.else -> equal_77e0e2.left\n        true -> equal_77e0e2.right\n        length_2f8e8a.length -> equal_77e0e2.left\n        equal_77e0e2.result -> not_3f2fe2.input\n        not_3f2fe2.result -> output_ebc87c\n        count_eeba2a.count -> getat_9a3fe7.execute\n    }\n\n    \n    instance(x: -1172, y: 1350) is_Sub_Array_c9a5e1 root.main.is_Sub_Array {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether a list is sublist of another or not.\") is_Sub_Array {\n        in(x: -2030, y: 959, name: \"main_list\") property(List) main_list_25f077\n        in(x: -2032, y: 1297, name: \"sub_list\") property(List) sub_list_f9cb80\n        in(x: -1875, y: 677, name: \"execute\") trigger() execute_68160a\n\n        out(x: -243, y: 1021, name: \"continue\") trigger() continue_d72620\n        out(x: -239, y: 1163, name: \"output\") property(Bool) output_ebc87c\n\n        instance(x: -1655, y: 1183) length_b4b2ba root.Std_k98ojb.List.Length {}\n        instance(x: -1655, y: 987) length_92dc68 root.Std_k98ojb.List.Length {}\n        instance(x: -1254, y: 1069) greaterthan_6c5f82 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -1665, y: 1019) getat_5dfecc root.Std_k98ojb.List.GetAt {}\n        instance(x: -1254, y: 1193) lessthan_8f5f2a root.Std_k98ojb.Math.LessThan {}\n        instance(x: -1039, y: 1055) and_0e1c93 root.Std_k98ojb.Logic.And {}\n        instance(x: -1045, y: 1101) ifexpression_4fca24 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index >= 0 && index < sub_list_length && main_list[index] == sub_list[index]\"\n        }\n        greaterthan_6c5f82.result -> and_0e1c93.left\n        length_92dc68.length -> greaterthan_6c5f82.left\n        length_b4b2ba.length -> greaterthan_6c5f82.right\n        instance(x: -1270, y: 1085) sub_9cc4a3 root.Std_k98ojb.Math.Sub {}\n        instance(x: -1050, y: 1129) not_1e94a7 root.Std_k98ojb.Logic.Not {}\n        and_0e1c93.result -> sub_9cc4a3.first\n        1 -> sub_9cc4a3.second\n        sub_9cc4a3.result -> and_0e1c93.right\n        instance(x: -1240, y: 1167) ifexpression_4fca24_2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index >= 0 && index < sub_list_length && main_list[index] == sub_list[index]\"\n        }\n        instance(x: -1039, y: 1213) and_0e1c93_2 root.Std_k98ojb.Logic.And {}\n        lessthan_8f5f2a.result -> and_0e1c93_2.right\n        instance(x: -1051, y: 1257) add_8bfa3e root.Std_k98ojb.Math.Add {}\n        instance(x: -1045, y: 1301) not_1e94a7_2 root.Std_k98ojb.Logic.Not {}\n        sub_list_length -> lessthan_8f5f2a.left\n        length_92dc68.length -> lessthan_8f5f2a.right\n        sub_list_length -> and_0e1c93_2.left\n        sub_9cc4a3.result -> add_8bfa3e.first\n        1 -> add_8bfa3e.second\n        add_8bfa3e.result -> and_0e1c93_2.right\n        0 -> ifexpression_4fca24_2.index\n        ifexpression_4fca24_2.index -> getat_5dfecc.index\n        main_list_25f077 -> getat_5dfecc.list\n        not_1e94a7_2.result -> not_1e94a7.input\n        ifexpression_4fca24.value -> output_ebc87c\n        ifexpression_4fca24.value -> not_1e94a7_2.input\n        not_1e94a7.result -> ifexpression_4fca24.index\n        ifexpression_4fca24.index -> getat_5dfecc.index\n        main_list_25f077 -> getat_5dfecc.list\n        not_1e94a7.input -> ifexpression_4fca24.index\n        sub_list_f9cb80 -> ifexpression_4fca24.gen_1\n        sub_list_f9cb80 -> ifexpression_4fca24_2.gen_1\n        getat_5dfecc.itemAtIndex -> ifexpression_4fca24.gen_0\n        getat_5dfecc.itemAtIndex -> ifexpression_4fca24_2.gen_0\n        0 -> ifexpression_4fca24.index\n        length_92dc68.length -> ifexpression_4fca24.gen_2\n        ifexpression_4fca24.value -> ifexpression_4fca24_2.value\n        ifexpression_4fca24_2.value -> ifexpression_4fca24_2.execute\n        execute_68160a -> ifexpression_4fca24_2.execute\n        not_1e94a7_2.result -> ifexpression_4fca24_2.index\n        ifexpression_4fca24_2.index -> add_8bfa3e.index\n        ifexpression_4fca24_2.value -> continue_d72620\n        continue_d72620 -> ifexpression_4fca24_2.execute\n        ifexpression_4fca24.value -> continue_d72620\n        continue_d72620 -> ifexpression_4fca24.execute\n    }\n\n    \n    instance(x: -1658, y: 1276) is_sub_arr_b5a1d6 root.main.is_Sub_Array {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: -57, y: -16) for_23c8d0 root.Std_k98ojb.Std.For {}\n        instance(x: 217, y: 60) if_9fda7e root.Std_k98ojb.Std.If {}\n        instance(x: 448, y: 31) math_sub_7a9cda root.Std_k98ojb.Math.Sub {}\n        setter(x: 726, y: -251, name: \"setter_6c2b84\") setter_6c2b84 = result\n        instance(x: 1181, y: 0) not_5dbf8b root.Std_k98ojb.Logic.Not {}\n        getter(x: 1380, y: 63, name: \"getter_82d7eb\") getter_82d7eb = result\n        instance(x: 1111, y: -85) equal_ae6a2f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1307, y: -155) if_5e74b8 root.Std_k98ojb.Std.If {}\n        for_23c8d0.done -> continue_aedf0f\n        not_5dbf8b.value -> if_5e74b8.predicate\n        if_5e74b8.else -> continue_aedf0f\n        getter_82d7eb.value -> output_25655e\n        if_5e74b8.then -> setter_6c2b84.execute\n        setter_6c2b84.continue -> continue_aedf0f\n        list_24e9a6 -> for_23c8d0.items\n        execute_fa8807 -> for_23c8d0.trigger\n        0 -> math_sub_7a9cda.first\n        for_23c8d0.index -> math_sub_7a9cda.second\n        math_sub_7a9cda.result -> equal_ae6a2f.left\n        for_23c8d0.item -> equal_ae6a2f.right\n        equal_ae6a2f.result -> not_5dbf8b.value\n        for_23c8d0.onItem -> if_9fda7e.execute\n        if_9fda7e.predicate -> if_5e74b8.execute\n        if_9fda7e.then -> for_23c8d0.next\n        if_9fda7e.else -> setter_6c2b84.new_value\n    }\n\n    \n\n    instance(x: 1222, y: -35) find_First_Missing_7c4a1e root.main.find_First_Missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: 0, y: 0) for_5e2eb2 root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_a1f8e4\") getter_a1f8e4 = result\n        setter(x: 0, y: 0, name: \"setter_4e4b8b\") setter_4e4b8b = result\n        instance(x: 0, y: 0) if_1cbfc8 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) ifexpression_1b3eb1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index + 1 != item\"\n        }\n        list_24e9a6 -> for_5e2eb2.items\n        execute_fa8807 -> setter_4e4b8b.execute\n        1 -> setter_4e4b8b.new_value\n        setter_4e4b8b.continue -> for_5e2eb2.reset\n        getter_a1f8e4.value -> output_25655e\n        for_5e2eb2.done -> continue_aedf0f\n        for_5e2eb2.item -> ifexpression_1b3eb1.gen_1\n        for_5e2eb2.index -> ifexpression_1b3eb1.gen_0\n        for_5e2eb2.onItem -> ifexpression_1b3eb1.execute\n        ifexpression_1b3eb1.else -> if_1cbfc8.execute\n        if_1cbfc8.predicate -> ifexpression_1b3eb1.result\n        if_1cbfc8.then -> setter_4e4b8b.execute\n        for_5e2eb2.index -> setter_4e4b8b.new_value\n        if_1cbfc8.else -> for_5e2eb2.next\n        setter_4e4b8b.continue -> for_5e2eb2.next\n    }\n\n    \n\n    instance(x: -20, y: -7) find_First_Missing_b6f58c root.main.find_First_Missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: 105, y: -4) ifexpression_8b6e87 root.Std_k98ojb.Std.IfExpression {\n            expression: \"previous + 1 != current\"\n        }\n        instance(x: 325, y: -9) for_3c9b92 root.Std_k98ojb.Std.For {}\n        instance(x: 534, y: 71) math_add_node root.Std_k98ojb.Math.Add {}\n        setter(x: 1231, y: -117, name: \"setter_4a4b3b\") setter_4a4b3b = output\n        getter(x: 1347, y: 163, name: \"getter_7c0a3c\") getter_7c0a3c = previous\n        setter(x: 101, y: -223, name: \"setter_4a4b3b\") setter_5b8e73 = output\n        instance(x: -234, y: 9) getat_e4c3c1 root.Std_k98ojb.List.GetAt {}\n        ifexpression_8b6e87.then -> math_add_node.execute\n        math_add_node.first -> ifexpression_8b6e87.gen_0\n        1 -> math_add_node.second\n        math_add_node.result -> setter_4a4b3b.new_value\n        ifexpression_8b6e87.value -> output_25655e\n        list_24e9a6 -> for_3c9b92.items\n        ifexpression_8b6e87.else -> for_3c9b92.next\n        for_3c9b92.item -> ifexpression_8b6e87.gen_1\n        for_3c9b92.onItem -> ifexpression_8b6e87.execute\n        getter_7c0a3c.value -> ifexpression_8b6e87.gen_2\n        for_3c9b92.done -> continue_aedf0f\n        list_24e9a6 -> getat_e4c3c1.list\n        0 -> getat_e4c3c1.index\n        execute_fa8807 -> setter_5b8e73.execute\n        -1 -> setter_5b8e73.new_value\n        getat_e4c3c1.itemAtIndex -> getter_7c0a3c.value\n        for_3c9b92.index -> setter_5b8e73.new_value\n        setter_5b8e73.continue -> for_3c9b92.reset\n        setter_4a4b3b.continue -> for_3c9b92.next\n    }\n\n    \n\n    instance(x: -56, y: 130) find_First_Missing_3c76ed root.main.find_First_Missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        setter(x: -0, y: -0, name: \"setter_8ed9d9\") setter_8ed9d9 = missing\n        getter(x: 1176, y: 323, name: \"getter_eae7d2\") getter_eae7d2 = missing\n        instance(x: 1283, y: -11) for_a3a4cc root.Std_k98ojb.Std.For {}\n        instance(x: 1473, y: 65) ifexpression_7a7f0b root.Std_k98ojb.Std.IfExpression {\n            expression: \"i != current\"\n        }\n        getter(x: -0, y: -0, name: \"getter_8ed9d9\") getter_8ed9d9 = missing\n        setter(x: 1381, y: -275, name: \"setter_9f1f59\") setter_9f1f59 = missing\n        list_24e9a6 -> for_a3a4cc.items\n        0 -> setter_8ed9d9.new_value\n        execute_fa8807 -> setter_8ed9d9.execute\n        getter_eae7d2.value -> output_25655e\n        for_a3a4cc.onItem -> ifexpression_7a7f0b.execute\n        for_a3a4cc.item -> ifexpression_7a7f0b.gen_1\n        for_a3a4cc.index -> ifexpression_7a7f0b.gen_0\n        getter_8ed9d9.value -> ifexpression_7a7f0b.gen_2\n        ifexpression_7a7f0b.then -> setter_9f1f59.execute\n        setter_9f1f59.new_value -> for_a3a4cc.next\n        ifexpression_7a7f0b.value -> for_a3a4cc.breakLoop\n        setter_9f1f59.continue -> continue_aedf0f\n        for_a3a4cc.done -> continue_aedf0f\n        ifexpression_7a7f0b.else -> for_a3a4cc.next\n        setter_9f1f59.continue -> for_a3a4cc.next\n        setter_8ed9d9.continue -> for_a3a4cc.reset\n    }\n\n    \n\n    instance(x: 1267, y: 1028) find_First_Missing_c2fa86 root.main.find_First_Missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        setter(x: 0, y: 0, name: \"setter_9bc8ef\") setter_9bc8ef = index\n        instance(x: 1006, y: 122) if_4f0d9f root.Std_k98ojb.Std.If {}\n        getter(x: 1025, y: 317, name: \"getter_9c2e56\") getter_9c2e56 = index\n        instance(x: 1398, y: 1) for_c7d5b0 root.Std_k98ojb.Std.For {}\n        instance(x: 1036, y: -41) ifexpression_4a7d64 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        setter(x: 1241, y: -103, name: \"setter_7e0a9e\") setter_7e0a9e = index\n        list_24e9a6 -> for_c7d5b0.items\n        execute_fa8807 -> setter_9bc8ef.execute\n        -1 -> setter_9bc8ef.new_value\n        getter_9c2e56.value -> output_25655e\n        for_c7d5b0.done -> continue_aedf0f\n        setter_9bc8ef.continue -> for_c7d5b0.reset\n        for_c7d5b0.onItem -> ifexpression_4a7d64.execute\n        for_c7d5b0.item -> ifexpression_4a7d64.gen_0\n        for_c7d5b0.index -> ifexpression_4a7d64.gen_1\n        ifexpression_4a7d64.else -> if_4f0d9f.execute\n        if_4f0d9f.else -> for_c7d5b0.next\n        if_4f0d9f.then -> setter_7e0a9e.execute\n        for_c7d5b0.index -> setter_7e0a9e.new_value\n        setter_7e0a9e.continue -> continue_aedf0f\n        if_4f0d9f.predicate -> ifexpression_4a7d64.result\n        ifexpression_4a7d64.then -> if_4f0d9f.execute\n    }\n\n    \n\n    instance(x: -55, y: 379) find_First_Missing_d5ee5e root.main.find_First_Missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: 1266, y: 319) ifexpression_3f1c1d root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || list[index - 1] != index\"\n        }\n        instance(x: 1170, y: 39) for_7b2e6a root.Std_k98ojb.Std.For {}\n        getter(x: 1091, y: 323, name: \"getter_57aa7f\") getter_57aa7f = list[index, 1]\n           \u0002",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: 114, y: 65) for_1d7b4e root.Std_k98ojb.Std.For {}\n        instance(x: 408, y: 135) if_6b5e53 root.Std_k98ojb.Std.If {}\n        instance(x: 633, y: 80) ifexpression_72d4a4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        instance(x: 833, y: -22) set_9a3d7e root.Std_k98ojb.List.Set {\n            propertyIndex: 0\n        }\n        getter(x: 1031, y: 158, name: \"getter_1fcbaa\") getter_1fcbaa = previous\n        setter(x: 1322, y: -189, name: \"setter_8d81b2\") setter_8d81b2 = previous\n        instance(x: -275, y: -31) getat_8eac2b root.Std_k98ojb.List.GetAt {}\n        for_1d7b4e.item -> if_6b5e53.gen_0\n        for_1d7b4e.index -> if_6b5e53.gen_1\n        if_6b5e53.then -> continue_aedf0f\n        if_6b5e53.else -> ifexpression_72d4a4.execute\n        ifexpression_72d4a4.then -> setter_8d81b2.execute\n        ifexpression_72d4a4.else -> for_1d7b4e.next\n        ifexpression_72d4a4.value -> output_25655e\n        getter_1fcbaa.value -> ifexpression_72d4a4.gen_1\n        for_1d7b4e.item -> ifexpression_72d4a4.gen_2\n        for_1d7b4e.index -> ifexpression_72d4a4.gen_0\n        setter_8d81b2.continue -> for_1d7b4e.next\n        for_1d7b4e.done -> continue_aedf0f\n        for_1d7b4e.onItem -> if_6b5e53.execute\n        for_1d7b4e.items -> list_24e9a6\n        for_1d7b4e.reset -> getat_8eac2b.execute\n        0 -> getat_8eac2b.index\n        list_24e9a6 -> getat_8eac2b.list\n        getat_8eac2b.itemAtIndex -> set_9a3d7e.new_value\n        getat_8eac2b.itemAtIndex -> setter_8d81b2.new_value\n        getat_8eac2b.itemAtIndex -> set_9a3d7e.old_value\n        set_9a3d7e.listWithItem -> list_24e9a6\n        getat_8eac2b.itemAtIndex -> getter_1fcbaa.value\n        execute_fa8807 -> getat_8eac2b.execute\n    }\n\n    \n\n    instance(x: -27, y: 112) find_First_Missing_b4b5e7 root.main.find_First_Missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: -8, y: 0) for_0dbf2c root.Std_k98ojb.Std.For {}\n        getter(x: 1056, y: 305, name: \"getter_6d2b99\") getter_6d2b99 = index\n        instance(x: 1265, y: -27) ifexpression_f8c56c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current - previous == 1\"\n        }\n        instance(x: 1043, y: -110) add_57a7c1 root.Std_k98ojb.Math.Add {}\n        instance(x: 1182, y: 60) if_3d96e7 root.Std_k98ojb.Std.If {}\n        setter(x: 1252, y: -243, name: \"setter_21ee67\") setter_21ee67 = missing\n        instance(x: 1100, y: -212) getat_3f8c61 root.Std_k98ojb.List.GetAt {}\n        setter(x: 1146, y: 63, name: \"setter_e3b3d6\") setter_e3b3d6 = missing\n        if_3d96e7.else -> continue_aedf0f\n        list_24e9a6 -> for_0dbf2c.items\n        getter_6d2b99.value -> ifexpression_f8c56c.gen_0\n        for_0dbf2c.item -> ifexpression_f8c56c.gen_2\n        ifexpression_f8c56c.then -> if_3d96e7.execute\n        for_0dbf2c.onItem -> ifexpression_f8c56c.execute\n        if_3d96e7.then -> setter_e3b3d6.execute\n        add_57a7c1.result -> setter_e3b3d6.new_value\n        for_0dbf2c.index -> add_57a7c1.first\n        for_0dbf2c.item -> add_57a7c1.second\n        if_3d96e7.else -> for_0dbf2c.next\n        for_0dbf2c.done -> continue_aedf0f\n        1 -> setter_e3b3d6.new_value\n        setter_e3b3d6.continue -> if_3d96e7.predicate\n        0 -> setter_21ee67.new_value\n        execute_fa8807 -> setter_21ee67.execute\n        setter_21ee67.continue -> for_0dbf2c.reset\n        setter_e3b3d6.continue -> for_0dbf2c.next\n        if_3d96e7.predicate -> ifexpression_f8c56c.else\n        getter_6d2b99.value -> ifexpression_f8c56c.gen_1\n        list_24e9a6 -> getat_3f8c61.list\n        0 -> getat_3f8c61.index\n        getat_3f8c61.itemAtIndex -> setter_21ee67.new_value\n        ifexpression_f8c56c.value -> output_25655e\n    }\n\n    \n\n    instance(x: 6, y: -68) find_First_Missing_0c8f2f root.main.find_First_Missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: -7, y: 81, name: \"index\") count_a8a2bb root.Std_k98ojb.Std.Count {}\n        instance(x: 223, y: 119) ifexpression_0c0b72 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index != 0 && previous + 1 != current\"\n        }\n        instance(x: 433, y: -3, name: \"previous\") getat_2f63ed root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0, name: \"missing\") setter_7b6e5f root.Std_k98ojb.Query.Setter {\n            name: \"missing\"\n        }\n        setter(x: -178, y: -316, name: \"setter_b8f8bc\") setter_b8f8bc = previous\n        instance(x: 103, y: -229, name: \"for\") for_9a2ee4 root.Std_k98ojb.Std.For {}\n        getter(x: 335, y: 164, name: \"getter_9e7fa8\") getter_9e7fa8 = previous\n        getter_9e7fa8.value -> ifexpression_0c0b72.gen_2\n        getter_9e7fa8.value -> ifexpression_0c0b72.gen_1\n        ifexpression_0c0b72.then -> missing.execute\n        ifexpression_0c0b72.else -> for_9a2ee4.next\n        ifexpression_0c0b72.value -> for_9a2ee4.onItem\n        ifexpression_0c0b72.value -> continue_aedf0f\n        list_24e9a6 -> for_9a2ee4.items\n        index_a8a2bb.count -> for_9a2ee4.index\n        missing.new_value -> output_25655e\n        for_9a2ee4.done -> continue_aedf0f\n        for_9a2ee4.item -> ifexpression_0c0b72.gen_0\n        index_a8a2bb.count -> ifexpression_0c0b72.gen_0\n        getter_9e7fa8.value -> for_9a2ee4.onItem\n        getter_9e7fa8.value -> setter_b8f8bc.new_value\n        execute_fa8807 -> index_a8a2bb.reset\n        execute_fa8807 -> missing.execute\n        execute_fa8807 -> setter_b8f8bc.execute\n        0 -> getat_2f63ed.index\n        list_24e9a6 -> getat_2f63ed.list\n        getat_2f63ed.itemAtIndex -> setter_b8f8bc.new_value\n        missing.continue -> continue_aedf0f\n        setter_b8f8bc.continue -> for_9a2ee4.reset\n    }\n\n    \n\n    instance(x: -3, y: 112) find_First_Missing_11d2c8 root.main.find_First_Missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_First_Missing {\n        in(x: -113, y: 62, name: \"list\") property(List) list_24e9a6\n        in(x: 483, y: -328, name: \"execute\") trigger() execute_fa8807\n\n        out(x: 1453, y: 319, name: \"output\") property(Number) output_25655e\n        out(x: 1491, y: -61, name: \"continue\") trigger() continue_aedf0f\n\n        instance(x: 1246, y: 245) for_9c0a6a root.Std_k98ojb.Std.For {}\n        instance(x: 1486, y: -29) if_6d2c0c root.Std_k98ojb.Std.If {}\n        instance(x: 1245, y: -30) getat_5dbdcd root.Std_k98ojb.List.GetAt {}\n        instance(x: 1299, y: 32) math_sub_5f1c05 root.Std_k98ojb.Math.Sub {}\n        instance(x: 1415, y: -29) ifexpression_d4f2a6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"current != expected\"\n        }\n        getter(x: 1088, y: 162, name: \"getter_9c9c62\") getter_9c9c62 = expected\n        setter(x: 1284, y: -318, name: \"setter_1b9e4f\") setter_1b9e4f = expected\n        getter(x: 1156, y: -42, name: \"getter_7c59f2\") getter_7c59f2 = current\n        setter(x: 1323, y: 10, name: \"setter_43f0ca\") setter_43f0ca = current\n        getter_9c9c62.value -> ifexpression_d4f2a6.gen_0\n        getter_7c59f2.value -> ifexpression_d4f2a6.gen_1\n        ifexpression_d4f2a6.value -> if_6d2c0c.predicate\n        ifexpression_d4f2a6.then -> setter_1b9e4f.execute\n        ifexpression_d4f2a6.else -> setter_43f0ca.execute\n        for_9c0a6a.done -> continue_aedf0f\n        if_6d2c0c.then -> continue_aedf0f\n        if_6d2c0c.else -> continue_aedf0f\n        for_9c0a6a.items -> list_24e9a6\n        for_9c0a6a.onItem -> ifexpression_d4f2a6.execute\n        1 -> setter_43f0ca.new_value\n        setter_43f0ca.continue -> for_9c0a6a.next\n        0 -> setter_1b9e4f.new_value\n        setter_1b9e4f.continue -> for_9c0a6a.next\n        if_6d2c0c.then -> math_sub_5f1c05.execute\n        for_9c0a6a.item -> getat_5dbdcd.item\n        for_9c0a6a.index -> getat_5dbdcd.index\n        list_24e9a6 -> getat_5dbdcd.list\n        for_9c0a6a.index -> math_sub_5f1c05.first\n        getat_5dbdcd.itemAtIndex -> math_sub_5f1c05.second\n        math_sub_5f1c05.result -> getter_7c59f2.value\n        math_sub_5f1c05.result -> getter_9c9c62.value\n        execute_fa8807 -> setter_43f0ca.execute\n        1 -> getter_7c59f2.value\n        1 -> getter_9c9c62.value\n        for_9c0a6a.reset -> setter_43f0ca.execute\n        math_sub_5f1c05.result -> output_25655e\n    }\n\n    \n\n    instance(x: 100, y: 112) find_First_Missing_3e7b9a root.main.find_First_Missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: -1) replace_d1f5f2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_c3c6b7 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_f8d1f8 root.Std_k98ojb.Strings.Replace {}\n        replace_d1f5f2.output -> replace_c3c6b7.input\n        replace_c3c6b7.output -> replace_f8d1f8.input\n        replace_f8d1f8.output -> output_0\n        input_0 -> replace_d1f5f2.input\n        \" \" -> replace_d1f5f2.search\n        \":\" -> replace_d1f5f2.replace\n        \",\" -> replace_c3c6b7.search\n        \":\" -> replace_c3c6b7.replace\n        \".\" -> replace_f8d1f8.search\n        \":\" -> replace_f8d1f8.replace\n    }\n\n    \n\n    instance(x: 102, y: 47) replace_specialchar_3f1a81 root.main.replace_specialchar {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) replace_ded2c8 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_0a5e8e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_d2b5d1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_ded2c8.input\n        \" \" -> replace_ded2c8.search\n        \":\" -> replace_ded2c8.replace\n        replace_ded2c8.output -> replace_0a5e8e.input\n        \",\" -> replace_0a5e8e.search\n        \":\" -> replace_0a5e8e.replace\n        replace_0a5e8e.output -> replace_d2b5d1.input\n        \".\" -> replace_d2b5d1.search\n        \":\" -> replace_d2b5d1.replace\n        replace_d2b5d1.output -> output_0\n    }\n\n    \n\n    instance(x: 121, y: 51, name: \"replace_specialchar\") replace_8f8e78 root.main.replace_specialchar {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: -2, y: 0, name: \"replace_specialchar\") replace_specialchar_9c6c75 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 274, y: 0, name: \"replace_specialchar\") replace_specialchar_7d3d22 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 546, y: 0, name: \"replace_specialchar\") replace_specialchar_87c1c8 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 815, y: 0, name: \"replace_specialchar\") replace_specialchar_0e2a41 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_specialchar_9c6c75.input\n        \" \" -> replace_specialchar_9c6c75.search\n        \":\" -> replace_specialchar_9c6c75.replace\n        replace_specialchar_9c6c75.output -> replace_specialchar_7d3d22.input\n        \",\" -> replace_specialchar_7d3d22.search\n        \":\" -> replace_specialchar_7d3d22.replace\n        replace_specialchar_7d3d22.output -> replace_specialchar_87c1c8.input\n        \".\" -> replace_specialchar_87c1c8.search\n        \":\" -> replace_specialchar_87c1c8.replace\n        replace_specialchar_87c1c8.output -> replace_specialchar_0e2a41.input\n        replace_specialchar_0e2a41.output -> output_0\n    }\n\n    \n\n    instance(x: 109, y: 0, name: \"replace_specialchar\") replace_specialchar_d1b2c9 root.main.replace_specialchar {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: -6) replace_16f51e root.Std_k98ojb.Strings.Replace {\n            search: \" \"\n        }\n        instance(x: 200, y: -6) replace_4d7e3b root.Std_k98ojb.Strings.Replace {\n            search: \",\"\n        }\n        instance(x: 400, y: -6) replace_a2f81e root.Std_k98ojb.Strings.Replace {\n            search: \".\"\n        }\n        input_0 -> replace_16f51e.input\n        \":\" -> replace_16f51e.replace\n        replace_16f51e.output -> replace_4d7e3b.input\n        \":\" -> replace_4d7e3b.replace\n        replace_4d7e3b.output -> replace_a2f81e.input\n        \":\" -> replace_a2f81e.replace\n        replace_a2f81e.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_specialchar_7a2c9a root.main.replace_specialchar {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_a3b1a0 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 2) replace_d9d7e4 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 3) replace_9b5a3a root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_a3b1a0.input\n        \" \" -> replace_a3b1a0.search\n        \":\" -> replace_a3b1a0.replace\n        replace_a3b1a0.output -> replace_d9d7e4.input\n        \",\" -> replace_d9d7e4.search\n        \":\" -> replace_d9d7e4.replace\n        replace_d9d7e4.output -> replace_9b5a3a.input\n        \".\" -> replace_9b5a3a.search\n        \":\" -> replace_9b5a3a.replace\n        replace_9b5a3a.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) replaceSpecialchar_e54b7f root.main.replace_specialchar {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) replace_6f1e89 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_5b2e86 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_0d2c9c root.Std_k98ojb.Strings.Replace {}\n        \":\\\" -> replace_6f1e89.replace\n        \" \t\t-\u0001",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 20, y: -2, name: \"to_lower\") tolower_1b9a7e root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 320, y: -2, name: \"replace_all\") replaceall_92f8ce root.Std_k98ojb.Strings.Replace {\n            search: \" \"\n        }\n        instance(x: 480, y: -2, name: \"replace_all\") replaceall_1ef1ea root.Std_k98ojb.Strings.Replace {\n            search: \",\"\n        }\n        instance(x: 640, y: -2, name: \"replace_all\") replaceall_b9bdf8 root.Std_k98ojb.Strings.Replace {\n            search: \".\"\n        }\n        input_0 -> tolower_1b9a7e.input\n        replaceall_92f8ce.replaceWith -> replaceall_1ef1ea.replaceWith\n        replaceall_92f8ce.replaceWith -> replaceall_b9bdf8.replaceWith\n        replaceall_92f8ce.replaceWith -> replaceall_92f8ce.replaceWith\n        tolower_1b9a7e.output -> replaceall_92f8ce.input\n        tolower_1b9a7e.output -> replaceall_1ef1ea.input\n        tolower_1b9a7e.output -> replaceall_b9bdf8.input\n        replaceall_b9bdf8.output -> output_0\n    }\n\n    \n\n    instance(x: 117, y: -67, name: \"replaceSpecialChar\") replace_specialchar_6b3c0a root.main.replace_specialchar {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 260, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: -2) replace_2dcd1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: -4) replace_33a41b root.Std_k98ojb.Strings.Replace {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \" \" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> replace_2dcd1f.shouldReplace\n        input_0 -> replace_2dcd1f.input\n        \":\" -> replace_2dcd1f.replace\n        replace_2dcd1f.output -> replace_33a41b.input\n        \",\" -> contains_d42dce.contains\n        replace_2dcd1f.output -> tolower_2e1444.input\n        contains_d42dce.result -> replace_33a41b.shouldReplace\n        \":\" -> replace_33a41b.replace\n        replace_33a41b.output -> replace_2dcd1f.input\n        \".\" -> contains_d42dce.contains\n        replace_33a41b.output -> tolower_2e1444.input\n        replace_2dcd1f.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChar_2dab1f root.main.replace_specialchar {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_d2d2d7 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: -1) replace_1dd6c6 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: -3) replace_5f5a22 root.Std_k98ojb.Strings.Replace {}\n        replace_5f5a22.output -> replace_1dd6c6.input\n        replace_1dd6c6.output -> replace_d2d2d7.input\n        input_0 -> replace_5f5a22.input\n        \".\" -> replace_5f5a22.search\n        \":\" -> replace_5f5a22.replace\n        \",\" -> replace_1dd6c6.search\n        \":\" -> replace_1dd6c6.replace\n        \" \" -> replace_d2d2d7.search\n        \":\" -> replace_d2d2d7.replace\n        replace_d2d2d7.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChar_e54b7f root.main.replace_specialchar {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_specialchar {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 30, y: 0) replace_c5fa28 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 290, y: 0) replace_b8ba0e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 440, y: 0) replace_f6d7fc root.Std_k98ojb.Strings.Replace {}\n        replace_c5fa28.input -> replace_b8ba0e.input\n        replace_b8ba0e.input -> replace_f6d7fc.input\n        replace_f6d7fc.input -> output_0\n        replace_c5fa28.result -> replace_b8ba0e.result\n        replace_b8ba0e.result -> replace_f6d7fc.result\n        \" \" -> replace_c5fa28.search\n        \":\" -> replace_c5fa28.replace\n        \",\" -> replace_b8ba0e.search\n        \":\" -> replace_b8ba0e.replace\n        \".\" -> replace_f6d7fc.search\n        \":\" -> replace_f6d7fc.replace\n        input_0 -> replace_c5fa28.input\n    }\n\n    \n\n    instance(x: 91, y: 55) Replace_specialChar_7a4a0f root.main.replace_specialchar {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -708, y: 124, name: \"characters\") characters_9c8d0a root.Std_k98ojb.Strings.Characters {}\n        instance(x: -513, y: 126) filter_6d8eb9 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -306, y: 121) count_f9cda9 root.Std_k98ojb.Std.Count {}\n        instance(x: 36, y: 118, name: \"first character\") firstitem_ea9d3e root.Std_k98ojb.List.FirstItem {}\n        instance(x: 245, y: 118) if_8eb5f9 root.Std_k98ojb.Std.If {}\n        instance(x: 443, y: 118) ifexpression_82d7eb root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == firstChar\"\n        }\n        instance(x: 540, y: 117) not_2a7e6d root.Std_k98ojb.Logic.Not {}\n        instance(x: 710, y: 118, name: \"get index\") getat_3cfa95 root.Std_k98ojb.List.GetAt {}\n        instance(x: 893, y: 117) expression_ea9f7f root.Std_k98ojb.Math.Expression {\n            expression: \"current == firstChar\"\n        }\n        instance(x: 997, y: 117) and_97a9b2 root.Std_k98ojb.Logic.And {}\n        instance(x: 1084, y: 118) getat_8fa4d6 root.Std_k98ojb.List.GetAt {}\n        instance(x: 1267, y: 118) expression_1b2d08 root.Std_k98ojb.Math.Expression {\n            expression: \"index == 0 || current == firstChar\"\n        }\n        instance(x: 1371, y: 117) and_9bbd62 root.Std_k98ojb.Logic.And {}\n        instance(x: 1426, y: 117) expression_4dc7bd root.Std_k98ojb.Math.Expression {\n            expression: \"index == 0 || current == firstChar\"\n        }\n        string_db4ddf -> characters_9c8d0a.input\n        characters_9c8d0a.characters -> filter_6d8eb9.items\n        func() {\n            in(x: -46, y: -28, name: \"current\") property(String) current_5ce6f7\n\n            out(x: 386, y: -8, name: \"bool\") property(Bool) bool_5eb1e6\n\n            instance(x: 178, y: -17) tolower_9e7a1f root.Std_k98ojb.Strings.ToLower {}\n            instance(x: 378, y: -14) expression_ba81dd root.Std_k98ojb.Math.Expression {\n                expression: \"current == firstChar\"\n            }\n            tolower_9e7a1f.output -> expression_ba81dd.gen_0\n            current_5ce6f7 -> expression_ba81dd.gen_0\n            current_5ce6f7 -> tolower_9e7a1f.input\n            expression_ba81dd.result -> bool_5eb1e6\n        } -> filter_6d8eb9.handler\n        filter_6d8eb9.output_list -> count_f9cda9.items\n        count_f9cda9.count -> firstitem_ea9d3e.list\n        firstitem_ea9d3e.item -> if_8eb5f9.predicate\n        count_f9cda9.count -> getat_3cfa95.list\n        0 -> getat_3cfa95.index\n        getat_3cfa95.itemAtIndex -> if_8eb5f9.gen_1\n        characters_9c8d0a.characters -> getat_3cfa95.list\n        firstitem_ea9d3e.item -> if_8eb5f9.gen_0\n        0 -> count_f9cda9.index\n        if_8eb5f9.then -> getat_8fa4d6.execute\n        if_8eb5f9.else -> continue_67430e\n        count_f9cda9.count -> getat_8fa4d6.list\n        getat_3cfa95.itemAtIndex -> getat_8fa4d6.index\n        count_f9cda9.count -> expression_ea9f7f.gen_0\n        getat_8fa4d6.itemAtIndex -> expression_ea9f7f.gen_1\n        expression_ea9f7f.result -> and_97a9b2.left\n        if_8eb5f9.value -> and_97a9b2.right\n        and_97a9b2.result -> ifexpression_82d7eb.gen_2\n        and_97a9b2.result -> ifexpression_82d7eb.gen_1\n        0 -> getat_3cfa95.index\n        count_f9cda9.count -> expression_1b2d08.gen_0\n        getat_8fa4d6.itemAtIndex -> expression_1b2d08.gen_1\n        expression_1b2d08.result -> and_9bbd62.left\n        ifexpression_82d7eb.result -> and_9bbd62.right\n        and_9bbd62.result -> ifexpression_82d7eb.gen_0\n        count_f9cda9.count -> expression_4dc7bd.gen_0\n        getat_8fa4d6.itemAtIndex -> expression_4dc7bd.gen_1\n        expression_4dc7bd.result -> if_8eb5f9.value\n        count_f9cda9.reset -> execute_f1c7e0\n        ifexpression_82d7eb.value -> output_e9fa68\n        not_2a9e1f.input -> ifexpression_82d7eb.execute\n        ifexpression_82d7eb.value -> not_2a7e6d.input\n        not_2a7e6d.result -> continue_67430e\n        count_f9cda9.next -> getat_8fa4d6.next\n        ifexpression_82d7eb.else -> getat_8fa4d6.reset\n    }\n\n    \n\n    instance(x: -104, y: -16) all_Characters_Same_7b6a67 root.main.all_Characters_Same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -702, y: 183, name: \"Get Characters\") characters_b1c4b6 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -533, y: 179, name: \"filter unique\") filter_4f3d01 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 15, y: 225, name: \"all equal\") ifexpression_ebfa2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"list.Length == 1\"\n        }\n        instance(x: -465, y: 13) for_2a5c08 root.Std_k98ojb.Std.For {}\n        instance(x: -795, y: 33) getat_f5a7b9 root.Std_k98ojb.List.GetAt {}\n        string_db4ddf -> characters_b1c4b6.input\n        characters_b1c4b6.characters -> filter_4f3d01.items\n        func() {\n            in(x: -22, y: -20, name: \"elem\") property(String) elem_e9e77a\n\n            out(x: 378, y: -10, name: \"bool\") property(Bool) bool_7e0d23\n\n            instance(x: 104, y: -18) if_04a7e5 root.Std_k98ojb.Std.If {}\n            instance(x: 270, y: -15) contains_eba5e4 root.Std_k98ojb.List.Contains {}\n            instance(x: 453, y: -5) notequal_6a0d90 root.Std_k98ojb.Logic.NotEqual {}\n            func() {\n                in(x: -23, y: -27, name: \"list\") property(List) list_3d46b9\n                in(x: -14, y: 36, name: \"contains\") property(String) contains_7f0f97\n\n                out(x: 388, y: 35, name: \"contains\") property(Bool) contains_a4dd8a\n            } -> contains_eba5e4.handler\n            if_04a7e5.then -> contains_eba5e4.execute\n            if_04a7e5.predicate -> contains_eba5e4.list\n            0 -> contains_eba5e4.item\n            contains_eba5e4.is_contained -> if_04a7e5.predicate\n            if_04a7e5.then -> notequal_6a0d90.execute\n            1 -> notequal_6a0d90.right\n            notequal_6a0d90.result -> bool_7e0d23\n            contains_eba5e4.result -> notequal_6a0d90.left\n            elem_e9e77a -> contains_eba5e4.item\n        } -> filter_4f3d01.handler\n        for_2a5c08.items -> getat_f5a7b9.list\n        for_2a5c08.index -> getat_f5a7b9.index\n        getat_f5a7b9.itemAtIndex -> filter_4f3d01.handler.new_value\n        characters_b1c4b6.characters -> for_2a5c08.items\n        for_2a5c08.onItem -> filter_4f3d01.handler.execute\n        filter_4f3d01.output_list -> ifexpression_ebfa2f.gen_0\n        ifexpression_ebfa2f.value -> output_e9fa68\n        for_2a5c08.done -> continue_67430e\n        ifexpression_ebfa2f.else -> continue_67430e\n        for_2a5c08.reset -> execute_f1c7e0\n    }\n\n    \n\n    instance(x: -741, y: -16) all_Characters_Same_3ac1d7 root.main.all_Characters_Same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -711, y: 190, name: \"Characters\") characters_7a9e99 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -520, y: 193, name: \"for loop\") for_e5b0b9 root.Std_k98ojb.Std.For {}\n        instance(x: -298, y: 186, name: \"equals\") equal_ebf7c9 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 15, y: 240) ifexpression_6e1d1f root.Std_k98ojb.Std.IfExpression {\n            expression: \"previous == current\"\n        }\n        ifexpression_6e1d1f.else -> continue_67430e\n        ifexpression_6e1d1f.value -> output_e9fa68\n        ifexpression_6e1d1f.then -> for_e5b0b9.next\n        characters_7a9e99.output -> for_e5b0b9.items\n        for_e5b0b9.item -> equal_ebf7c9.left\n        equal_ebf7c9.right -> equal_ebf7c9.left\n        equal_ebf7c9.result -> ifexpression_6e1d1f.gen_1\n        for_e5b0b9.index -> equal_ebf7c9.right\n        string_db4ddf -> characters_7a9e99.input\n        for_e5b0b9.onItem -> ifexpression_6e1d1f.execute\n        for_e5b0b9.done -> continue_67430e\n        for_e5b0b9.item -> equal_ebf7c9.right\n        execute_f1c7e0 -> for_e5b0b9.reset\n    }\n\n    \n\n    instance(x: -1080, y: -40) check_same_characters_78ee3b root.main.all_Characters_Same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -720, y: 179, name: \"list\") characters_d41cb1 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -480, y: 180) length_0e3f5f root.Std_k98ojb.List.Length {}\n        instance(x: -268, y: 178) getat_3a3bb5 root.Std_k98ojb.List.GetAt {}\n        instance(x: -40, y: 180, name: \"First letter\") firstitem_85a7a7 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 140, y: 181) equal_b4e9a7 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 328, y: 182) for_2c9a5a root.Std_k98ojb.Std.For {}\n        instance(x: 518, y: 178, name: \"If Expression\") ifexpression_7c5f41 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        instance(x: 684, y: 182) not_2b7b0a root.Std_k98ojb.Logic.Not {}\n        instance(x: 852, y: 179, name: \"If\") if_9ddc7c root.Std_k98ojb.Std.If {}\n        string_db4ddf -> characters_d41cb1.input\n        characters_d41cb1.characters -> length_0e3f5f.list\n        length_0e3f5f.length -> for_2c9a5a.count\n        execute_f1c7e0 -> for_2c9a5a.trigger\n        for_2c9a5a.index -> getat_3a3bb5.index\n        characters_d41cb1.characters -> getat_3a3bb5.list\n        characters_d41cb1.characters -> firstitem_85a7a7.list\n        for_2c9a5a.item -> ifexpression_7c5f41.gen_2\n        for_2c9a5a.index -> ifexpression_7c5f41.gen_0\n        firstitem_85a7a7.item -> ifexpression_7c5f41.gen_1\n        for_2c9a5a.onItem -> ifexpression_7c5f41.execute\n        ifexpression_7c5f41.value -> if_9ddc7c.predicate\n        ifexpression_7c5f41.then -> continue_67430e\n        for_2c9a5a.done -> continue_67430e\n        ifexpression_7c5f41.else -> if_9ddc7c.execute\n        if_9ddc7c.then -> continue_67430e\n        for_2c9a5a.item -> equal_b4e9a7.left\n        getat_3a3bb5.itemAtIndex -> equal_b4e9a7.right\n        equal_b4e9a7.result -> not_2b7b0a.input\n        not_2b7b0a.result -> if_9ddc7c.else\n        not_2b7b0a.result -> output_e9fa68\n    }\n\n    \n\n    instance(x: -662, y: 32) all_Characters_Same_77f6b8 root.main.all_Characters_Same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: 0, y: 190) getcharacters_7b7e90 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -301, y: 80) firstitem_ebc9d7 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -306, y: 0) for_d5bb2a root.Std_k98ojb.Std.For {}\n        instance(x: -21, y: 93) equal_83aee9 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 434, y: 134) if_2d8d4c root.Std_k98ojb.Std.If {}\n        getcharacters_7b7e90.output -> for_d5bb2a.items\n        for_d5bb2a.item -> equal_83aee9.left\n        firstitem_ebc9d7.item -> equal_83aee9.right\n        for_d5bb2a.item -> equal_83aee9.gen_1\n        string_db4ddf -> getcharacters_7b7e90.input\n        for_d5bb2a.index -> firstitem_ebc9d7.index\n        getcharacters_7b7e90.output -> firstitem_ebc9d7.list\n        equal_83aee9.result -> if_2d8d4c.predicate\n        for_d5bb2a.onItem -> if_2d8d4c.execute\n        if_2d8d4c.value -> output_e9fa68\n        execute_f1c7e0 -> for_d5bb2a.reset\n        if_2d8d4c.then -> continue_67430e\n        if_2d8d4c.else -> continue_67430e\n        for_d5bb2a.done -> continue_67430e\n    }\n\n    \n\n    instance(x: 7, y: -35) All_Characters_Same_0f63b1 root.main.all_Characters_Same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -687, y: 188) getcharacters_1cde48 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -467, y: 192, name: \"Is all element equal to the first\") map_9c4a8c root.Std_k98ojb.Iteration.Map {}\n        instance(x: -237, y: 187, name: \"Check all true\") filter_3d6ed4 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -42, y: 193) not_1e9c5b root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: 14, y: 40, name: \"element\") property(Any) element_7bcb8f\n\n            out(x: 429, y: 41, name: \"bool\") property(Bool) bool_b5d3c4\n\n            instance(x: 155, y: 43) equal_1cbb4a root.Std_k98ojb.Logic.Equal {}\n            element_7bcb8f -> equal_1cbb4a.right\n            getter(x: 24, y: 6, name: \"getter_0f1c7e\") getter_0f1c7e = first_item\n            getter_0f1c7e.value -> equal_1cbb4a.left\n            equal_1cbb4a.result -> bool_b5d3c4\n        } -> map_9c4a8c.handler\n        getcharacters_1cde48.characters -> map_9c4a8c.items\n        func() {\n            in(x: 34, y: 0, name: \"current\") property(Bool) current_2b6ab2\n\n            out(x: 348, y: 0, name: \"bool\") property(Bool) bool_6f7f88\n\n            instance(x: 164, y: -7) notequal_9fdd1a root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_9fdd1a.right\n            current_2b6ab2 -> notequal_9fdd1a.left\n            notequal_9fdd1a.result -> bool_6f7f88\n        } -> filter_3d6ed4.handler\n        map_9c4a8c.output_list -> filter_3d6ed4.items\n        not_1e9c5b.result -> output_e9fa68\n        filter_3d6ed4.result -> not_1e9c5b.input\n        execute_f1c7e0 -> getter_0f1c7e.execute\n        getter_0f1c7e.value -> first_item\n        first_item -> continue_67430e\n        getcharacters_1cde48.input -> string_db4ddf\n        map_9c4a8c.onItem -> continue_67430e\n        filter_3d6ed4.onItem -> continue_67430e\n    }\n\n    \n\n    instance(x: -736, y: 19) all_Characters_Same_7b6c0b root.main.all_Characters_Same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -722, y: 163) characters_14d0f0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -540, y: 133) firstitem_1ef1ef root.Std_k98ojb.List.FirstItem {}\n        instance(x: -532, y: 27) for_8e5ab6 root.Std_k98ojb.Std.For {}\n        instance(x: -110, y: 77) equal_9d6d8e root.Std_k98ojb.Logic.Equal {}\n        instance(x: -22, y: 267) ifexpression_a8eb1e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        instance(x: 272, y: 243) not_4faa61 root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -62, y: 54, name: \"current\") property(Number) _index_9c4cb5\n\n            out(x: 468, y: 103, name: \"output\") property(Bool) output_b7aef3\n\n            instance(x: 160, y: 68) getat_76e69c root.Std_k98ojb.List.GetAt {}\n            instance(x: 326, y: 85) notequal_5e0e7b root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_5e0e7b.right\n            getat_76e69c.itemAtIndex -> notequal_5e0e7b.left\n            _index_9c4cb5 -> getat_76e69c.index\n            notequal_5e0e7b.result -> output_b7aef3\n        } -> for_8e5ab6.handler\n        instance(x: 482, y: 212) getter_8c5c6b root.Std_k98ojb.Getter {}\n        instance(x: 704, y: -41) setter_83a6c1 root.Std_k98ojb.Setter {}\n        characters_14d0f0.characters -> for_8e5ab6.items\n        for_8e5ab6.item -> equal_9d6d8e.left\n        firstitem_1ef1ef.item -> equal_9d6d8e.right\n        equal_9d6d8e.result -> ifexpression_a8eb1e.gen_1\n        for_8e5ab6.index -> ifexpression_a8eb1e.gen_0\n        getter_8c5c6b.value -> ifexpression_a8eb1e.gen_2\n        for_8e5ab6.onItem -> ifexpression_a8eb1e.execute\n        for_8e5ab6.done -> continue_67430e\n        ifexpression_a8eb1e.else -> continue_67430e\n        ifexpression_a8eb1e.value -> output_e9fa68\n        ifexpression_a8eb1e.then -> setter_83a6c1.execute\n        for_8e5ab6.item -> setter_83a6c1.new_value\n        execute_f1c7e0 -> setter_83a6c1.execute\n        setter_83a6c1.continue -> getter_8c5c6b.execute\n        getter_8c5c6b.continue -> for_8e5ab6.reset\n        string_db4ddf -> characters_14d0f0.input\n        characters_14d0f0.characters -> firstitem_1ef1ef.list\n        not_4faa61.result -> output_e9fa68\n        ifexpression_a8eb1e.value -> not_4faa61.input\n    }\n\n    \n\n    instance(x: -775, y: -5) all_characters_same_43f0c7 root.main.all_Characters_Same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -705, y: 210, name: \"split by char\") query_ffdb95 root.Std_k98ojb.Query.Filter {\n            where: \"it == character\"\n        }\n        instance(x: -683, y: 85, name: \"length of split\") length_0dbd6b root.Std_k98ojb.List.Length {}\n        instance(x: -657, y: 32, name: \"string length\") length_1a9e3d root.Std_k98ojb.List.Length {}\n        instance(x: 107, y: 274) equal_2ea7f2 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -459, y: 187, name: \"for each character\") for_c4fc28 root.Std_k98ojb.Std.For {}\n        instance(x: 288, y: 244) if_e9c0b9 root.Std_k98ojb.Std.If {}\n        instance(x: -2, y: 171) character_0e52bb root.Std_k98ojb.List.FirstItem {}\n        instance(x: 114, y: 151) not_e9b2b9 root.Std_k98ojb.Logic.Not {}\n        getter(x: 264, y: 157, name: \"getter_a4e1c7\") getter_a4e1c7 = list\n        setter(x: 471, y: -49, name: \"setter_7e71d5\") setter_7e71d5 = list\n        func() {\n            in(x: -11, y: 33, name: \"character\") property(String) character_a8f4b8\n\n            out(x: 440, y: 49, name: \"output\") property(List) output_2e56c0\n\n            instance(x: 156, y: 24) split_4f4bda root.Std_k98ojb.Strings.Split {}\n            split_4f4bda.split_character -> query_ffdb95.contains\n            query_ffdb95.list -> split_4f4bda.input\n            split_4f4bda.output -> output_2e56c0\n        } -> for_c4fc28.handler\n        length_1a9e3d.length -> for_c4fc28.length\n        string_db4ddf -> length_1a9e3d.list\n        getter_a4e1c7.value -> for_c4fc28.items\n        for_c4fc28.index -> character_0e52bb.index\n        for_c4fc28.item -> character_0e52bb.list\n        for_c4fc28.onItem -> character_0e52bb.execute\n        for_c4fc28.reset -> character_0e52bb.reset\n        character_0e52bb.itemAtIndex -> query_ffdb95.character\n        string_db4ddf -> length_0dbd6b.list\n        length_0dbd6b.length -> equal_2ea7f2.left\n        length_1a9e3d.length -> equal_2ea7f2.right\n        equal_2ea7f2.result -> not_e9b2b9.input\n        not_e9b2b9.result -> if_e9c0b9.predicate\n        if_e9c0b9.else -> continue_67430e\n        for_c4fc28.onItem -> if_e9c0b9.execute\n        if_e9c0b9.then -> setter_7e71d5.execute\n        query_ffdb95.result -> setter_7e71d5.new_value\n        execute_f1c7e0 -> character_0e52bb.execute\n        character_0e52bb.continue -> for_c4fc28.reset\n        setter_7e71d5.continue -> for_c4fc28.next\n        not_e9b2b9.result -> output_e9fa68\n    }\n\n    \n\n    instance(x: -1079, y: 15, name: \"all_Characters_Same\") all_characters_same_e52b7c root.main.all_Characters_Same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -729, y: 188, name: \"characters list\") characters_d6a7c2 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -551, y: 196, name: \"characters length\") length_0b72e1 root.Std_k98ojb.List.Length {}\n        instance(x: -329, y: 181, name: \"all the characters equal\") all_Elements_Equal_7_ root.main.all_Characters_Same {}\n        instance(x: -128, y: 207) for_6e8c7e root.Std_k98ojb.Std.For {}\n        instance(x: 191, y: 218) notequal_3b9b6c root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 492, y: 224) if_b8f8bc root.Std_k98ojb.Std.If {}\n        instance(x: 686, y: 233) if_e8e9d7 root.Std_k98ojb.Std.If {}\n        characters_d6a7c2.characters -> for_6e8c7e.items\n        for_6e8c7e.item -> all_Elements_Equal_7_.current\n        for_6e8c7e.index -> all_Elements_Equal_7_.index\n        for_6e8c7e.onItem -> all_Elements_Equal_7_.execute\n        string_db4ddf -> characters_d6a7c2.input\n        0 -> for_6e8c7e.reset\n        execute_f1c7e0 -> for_6e8c7e.trigger\n        all_Elements_Equal_7_.isEqual -> notequal_3b9b6c.left\n        all_Elements_Equal_7_.isEqual -> notequal_3b9b6c.right\n        notequal_3b9b6c.result -> if_b8f8bc.predicate\n        if_b8f8bc.else -> if_e8e9d7.execute\n        if_b8f8bc.then -> continue_67430e\n        if_e8e9d7.else -> continue_67430e\n        if_e8e9d7.then -> output_e9fa68\n        if_e8e9d7.predicate -> length_0b72e1.list\n        0 -> length_0b72e1.list\n        length_0b72e1.length -> all_Elements_Equal_7_.length\n        for_6e8c7e.next -> if_e8e9d7.execute\n        for_6e8c7e.done -> continue_67430e\n    }\n\n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") triggerExecute() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") triggerContinue() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -729, y: 188, name: \"characters list\") characters_d6a7c2 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -551, y: 196, name: \"characters length\") length_0b72e1 root.Std_k98ojb.List.Length {}\n        instance(x: -329, y: 181, name: \"all the characters equal\") all_Elements_Equal_7_ root.main.all_Characters_Same {}\n        instance(x: -128, y: 207) for_6e8c7e root.Std_k98ojb.Std.For {}\n        instance(x: 191, y: 218) notequal_3b9b6c root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 492, y: 224) if_b8f8bc root.Std_k98ojb.Std.If {}\n        instance(x: 686, y: 233) if_e8e9d7 root.Std_k98ojb.Std.If {}\n        characters_d6a7c2.characters -> for_6e8c7e.items\n        for_6e8c7e.item -> all_Elements_Equal_7_.current\n        for_6e8c7e.index -> all_Elements_Equal_7_.index\n        for_6e8c7e.onItem -> all_Elements_Equal_7_.execute\n        string_db4ddf -> characters_d6a7c2.input\n        0 -> for_6e8c7e.reset\n        execute_f1c7e0 -> for_6e8c7e.trigger\n        all_Elements_Equal_7_.isEqual -> notequal_3b9b6c.left\n        all_Elements_Equal_7_.isEqual -> notequal_3b9b6c.right\n        notequal_3b9b6c.result -> if_b8f8bc.predicate\n        if_b8f8bc.else -> if_e8e9d7.execute\n        if_b8f8bc.then -> continue_67430e\n        if_e8e9d7.else -> continue_67430e\n        if_e8e9d7.then -> output_e9fa68\n        if_e8e9d7.predicate -> length_0b72e1.list\n        0 -> length_0b72e1.list\n        length_0b72e1.length -> all_Elements_Equal_7_.length\n        for_6e8c7e.next -> if_e8e9d7.execute\n        for_6e8c7e.done -> continue_67430e\n    }\n\n    \n\n    instance(x: -157, y: 25) all_Characters_Same_3bfe5d root.main.all_Characters_Same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters are same or not.\") all_Characters_Same {\n        in(x: -862, y: 188, name: \"string\") property(String) string_db4ddf\n        in(x: -878, y: 9, name: \"execute\") trigger() execute_f1c7e0\n\n        out(x: 588, y: 123, name: \"continue\") trigger() continue_67430e\n        out(x: 600, y: 270, name: \"output\") property(Bool) output_e9fa68\n\n        instance(x: -695, y: 179, name: \"split\") characters_0a1a1d root.Std_k98ojb.Strings.Characters {}\n        instance(x: -490, y: 192, name: \"length\") length_2c0c0f root.Std_k98ojb.List.Length {}\n        instance(x: -301, y: 212, name: \"unique elements\") filter_a8d5aa root.Std_k98ojb.Query.Filter {\n            where: \"it\"\n        }\n        instance(x: -77, y: 205, name: \"len\") length_5bfa26 root.Std_k98ojb.List.Length {}\n        instance(x: -24, y: 177, name: \"if\") if_bf5f2a root.Std_k98ojb.Std.If {\n            else: true\n        }\n        instance(x: 309, y: 228, name: \"for\") for_7fc4a0 root.Std_k98ojb.Std.For {}\n        instance(x: 530, y: 192, name: \"if\") if_0ebc7a root.Std_k98ojb.Std.If {}\n        instance(x: 750, y: 211, name: \"equals\") equal_5f7f0a root.Std_k98ojb.Logic.Equal {}\n        instance(x: 924, y: 183, name: \"if\") if_2df2d5 root.Std_k98ojb.Std.If {\n            else: true\n        }\n        string_db4ddf -> characters_0a1a1d.input\n        characters_0a1a1d.characters -> length_2c0c0f.list\n        characters_0a1a1d.characters -> filter_a8d5aa.list\n        filter_a8d5aa.result -> length_5bfa26.list\n        if_bf5f2a.predicate -> length_5bfa26.length\n        1 -> if_bf5f2a.predicate\n        if_bf5f2a.then -> for_7fc4a0.reset\n        if_bf5f2a.else -> for_7fc4a0.trigger\n        for_7fc4a0.items -> filter_a8d5aa.result\n        for_7fc4a0.item -> equal_5f7f0a.left\n        equal_5f7f0a.right -> characters_0a1a1d.characters\n        execute_f1c7e0 -> for_7fc4a0.trigger\n        for_7fc4a0.onItem -> equal_5f7f0a.execute\n        equal_5f7f0a.result -> if_0ebc7a.predicate\n        if_0ebc7a.then -> if_2df2d5.execute\n        if_0ebc7a.else -> continue_67430e\n        if_2df2d5.else -> continue_67430e\n        for_7fc4a0.index -> equal_5f7f0a.gen_1\n        for_7fc4a0.done -> continue_67430e\n        equal_5f7f0a.result -> if_2df2d5.predicate\n        if_2df2d5.then -> continue_67430e\n        if_bf5f2a.value -> output_e9fa68\n    }\n\n    \n\n    instance(x: -717, y: -2, name: \"all_Characters_Same\") all_characters_same_bf8e98 root.main.all_Characters_Same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n        instance(x: 0, y: 0) count_3c3d5d root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) for_c3c6b7 root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) expression_f8d1f8 root.Std_k98ojb.Math.Expression {\n            expression: \"it.isnumeric()\"\n        }\n        func() {\n            in(x: 50, y: 76, name: \"it\") property(String) it_3d2a5f\n\n            out(x: 505, y: 88, name: \"result\") property(Bool) result_87b9c4\n\n            it_3d2a5f -> result_87b9c4\n        } -> expression_f8d1f8.handler\n        string_668bd2 -> for_c3c6b7.items\n        expression_f8d1f8.result -> count_3c3d5d.count\n        count_3c3d5d.count -> count_1f468d\n        for_c3c6b7.on_item -> expression_f8d1f8.execute\n        count_3c3d5d.reset -> for_c3c6b7.reset\n        for_c3c6b7.trigger 1: DOI: 10.4103/0971-5851.182135\n2: \n3: Authors: M. M. Sharma, D. K. Sharma, P. Gogia, K. Chaturvedi, A. Bhargava, H. K. Bhatia, S. N. Shukla, V. Kumar, T. Dikshit, R. K. Garg, et al.\n4: Journal: Indian Journal of Medical and Paediatric Oncology : Official Journal of Indian Society of Medical & Paediatric Oncology\n5: Date: 2016\n6: Keywords: Incidence, India, population-based, registry, trends\n\n7: \n\n8: **Background:**The cancer incidence data for India were not available in GLOBOCAN 2012. Hence, an attempt was made to generate data on incidence from population-based cancer registries (PBCRs) in India for 2014.\n\n9: **Methods:**Data from 16 PBCRs were used for analysis. Standardized incidence rates (SIR) were calculated for the 16 registries separately and then for the entire country.\n\n10: **Results:**In the year 2014, 3,05,987 new cancer cases were registered in 16 PBCRs in India. The SIR for the entire country was 140/100,000 population. The crude rates ranged from 53.9/100,000 in Delhi to 259.3/100,000 in Mumbai. The age-standardized rates were also highest in Mumbai (249.3/100,000). The SIR for both males and females was highest in Mumbai followed by Delhi. The SIR for males and females were 149.6/100,000 and 127.6/100,000, respectively. Breast, cervix uteri, and oral cavity cancers were the most common cancers in women, whereas cancers of the oral cavity, lung, and stomach were most common in men. The SIRs for both males and females were highest in age group 65\u201374 years.\n\n11: **Conclusion:**The present study suggests that cancer is becoming a major health problem in India, especially in urban areas. It is necessary to improve the cancer registration in India so that the estimates of cancer incidence can be generated using more robust methodology and provide a baseline for planning of future cancer control programs.\n\n12: \n\n13: Cancer is a major public health problem across the globe. It is the second leading cause of mortality in the world, accounting for nearly 8.8 million deaths in 2015.[[1]] A recent estimate from GLOBOCAN 2012 suggests that there are 14.1 million new cancer cases and 8.2 million deaths worldwide.[[2]] The burden of cancer is increasing in developing countries as these countries are undergoing demographic and epidemiological transition and also experience an aging population. In India, the prevalence of risk factors for cancer is high.[[3] [4]] However, there was no comprehensive data available on the cancer incidence in the country at the national level. Cancer registries in India were established during the last century; however, the cancer registration was not very effective until 1990s.[[5] [6]] The registration of cancer is still not very widespread in India. There are 26 population-based cancer registries (PBCRs) in India; however, many of them are not functioning optimally.[[7]] Therefore, there was a need to generate the national level cancer incidence data in India. This was done by using data from 16 PBCRs in India. This paper provides the estimates of cancer incidence in India in 2014 and the analysis of the patterns of cancer in the country. These estimates will serve as a baseline for planning of cancer control programs in India.\n\n14: \n\n15: The PBCRs in India were established in the period between 1970s and 1990s and these registries cover a diverse geographical area of the country, that is, north, east, west, and south. These PBCRs are located in the states of Maharashtra, Delhi, Karnataka, Kerala, Mizoram, Nagaland, Andhra Pradesh, Tamil Nadu, Gujarat, Assam, West Bengal, Haryana, Punjab, and Rajasthan. The 16 registries are: Bhopal, Chennai, Delhi, Gujarat, Mumbai, Nagpur, Bangalore, Thiruvananthapuram, Nagaland, Mizoram, Punjab, Haryana, Chandigarh, Patna, Guwahati, and Jaipur. All these registries have been certified by the National Cancer Registry Programme (NCRP) as per the guidelines of the International Agency for Research on Cancer (IARC).[[8]] These registries are also designated as IARC Collaborating Centres.\n\n16: The PBCRs in India follow the IARC protocol for registration of cancer.[[9]] In most of the PBCRs, data on cancer patients are obtained from the hospital records and also from the cancer treatment facilities such as medical oncology units, radiation therapy departments, pathology departments, etc. All these registries have a good coverage of the population in their respective catchment areas. A number of PBCRs also collect the data on patients from the primary health centers and rural health centers. The data from the PBCRs are sent to the NCRP, which is a part of the National Centre for Disease Informatics and Research (NCDIR), Bangalore. The NCRP is responsible for the generation of the cancer incidence data for the country.\n\n17: The population for all the PBCRs was estimated by using the census data of 2011 and the projected growth rates for the respective registry areas.[[10]] The projected populations were calculated for the year 2014. The age-specific incidence rates were calculated for the different age groups for both males and females. The data were then analyzed for the age groups 0\u201314, 15\u201344, 45\u201364, and 65 years and above. The data were also analyzed by the period of 10 years. The data on the incidence of cancer were also analyzed for the different anatomic sites for the country as a whole and also separately for the males and females. The data were also analyzed for the age groups and for the period 2004\u20132014.\n\n18: \n\n19: The age-specific rates were calculated for the different age groups for both males and females and the age-standardized rates (SIR) were calculated using the world standard population.[[11]] The SIRs were calculated for the entire country and also for each PBCR. The projected populations were used for calculating the SIR. The SIRs were calculated for the country as a whole and also for males and females separately. The SIRs were also calculated for different age groups.\n\n20: \n\n21: A total of 3,05,987 new cancer cases were registered in the 16 PBCRs in India during the year 2014. The SIR for the country as a whole was 140/100,000 population. The age-specific SIRs for the country are presented in Table 1. The SIRs were highest for the age group 65\u201374 years. The SIRs for the period 2004\u20132014 are presented in Figure 1. The SIRs have increased from 118/100,000 in 2004 to 140/100,000 in 2014. The SIRs for the period 2004\u20132014 are presented in Table 2.\n\n22: **Table 1:** Age-specific incidence rates for India in",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 0, y: 0) count_6a2c8e root.Std_k98ojb.Std.Count {}\n        instance(x: 210, y: 0) map_6d5ed0 root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -82, y: 67, name: \"item\") property(String) item_7c1b4f\n\n            out(x: 512, y: 65, name: \"output\") property(Bool) output_8c36b3\n\n            instance(x: 35, y: 44) numeric_3eac0d root.Std_k98ojb.Strings.IsNumeric {}\n            instance(x: 252, y: 40) notequal_92e3f5 root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_92e3f5.right\n            numeric_3eac0d.output -> notequal_92e3f5.left\n            item_7c1b4f -> numeric_3eac0d.input\n            notequal_92e3f5.result -> output_8c36b3\n        } -> map_6d5ed0.handler\n        instance(x: -73, y: 122) characters_7e9d2a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 326, y: 39) reduce_6c8e5b root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -122, y: 40, name: \"acc\") property(Number) acc_3f7fe7\n            in(x: -4, y: 40, name: \"val\") property(Bool) val_1f2b6a\n\n            out(x: 495, y: 41, name: \"number\") property(Number) number_b1a7ba\n\n            instance(x: 96, y: 27) add_1cf7c9 root.Std_k98ojb.Math.Add {}\n            acc_3f7fe7 -> add_1cf7c9.first\n            1 -> add_1cf7c9.second\n            val_1f2b6a -> add_1cf7c9.second\n            add_1cf7c9.result -> number_b1a7ba\n        } -> reduce_6c8ed.handler\n        instance(x: 0, y: 0) filter_6f3c74 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Bool) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            elem_9f6850 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> filter_6f3c74.handler\n        characters_7e9d2a.output -> map_6d5ed0.items\n        count_6a2c8e.count -> reduce_6c8e5b.acc\n        0 -> count_6a2c8e.reset\n        count_6a2c8e.count -> reduce_6c8e5b.context\n        map_6d5ed0.output_list -> filter_6f3c74.items\n        reduce_6c8e5b.result -> count_6a2c8e.reset\n        filter_6f3c74.output_list -> reduce_6c8e5b.items\n        string_668bd2 -> characters_7e9d2a.input\n        reduce_6c8e5b.result -> count_1f468d\n    }\n\n    \n\n    instance(x: 18, y: 80) digit_count_8a62d5 root.main.number_ctr {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: -32, y: 120) count_bf8e4f root.Std_k98ojb.Std.Count {}\n        func() {\n            in(x: -122, y: 0, name: \"digit\") property(String) digit_3a7d2f\n\n            out(x: 536, y: 29, name: \"continue\") trigger() continue_4c9f9d\n            out(x: 567, y: 0, name: \"result\") property(Bool) result_23c8bc\n\n            instance(x: 0, y: 0) isnumeric_4dfdd1 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_4dfdd1.input -> digit_3a7d2f\n            isnumeric_4dfdd1.result -> result_23c8bc\n        } -> count_bf8e4f.handler\n        count_bf8e4f.reset -> continue_4c9f9d\n        count_bf8e4f.count -> continue_4c9f9d\n        count_bf8e4f.count -> count_1f468d\n        string_668bd2 -> count_bf8e4f.items\n    }\n\n    \n\n    instance(x: 105, y: -23) count_7d9c7a root.main.number_ctr {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 0, y: 0) count_6c72a2 root.Std_k98ojb.Count {}\n        func() {\n            out(x: 113, y: 76, name: \"trigger\") trigger() count_6c72a2_increment\n            out(x: 107, y: 167, name: \"reset\") trigger() count_6c72a2_reset\n            in(x: -74, y: 100, name: \"number\") property(Bool) number_bfdd7d\n            in(x: -111, y: 171, name: \"i\") property(Number) i_ee4c08\n\n            instance(x: 76, y: 116) not_3a8a55 root.Std_k98ojb.Logic.Not {}\n            not_3a8a55.output -> count_6c72a2_reset\n            instance(x: 205, y: 92) contains_f1d3d5 root.Std_k98ojb.Strings.Contains {}\n            contains_f1d3d5.result -> number_bfdd7d\n            string_668bd2 -> contains_f1d3d5.input\n            i_ee4c08 -> contains_f1d3d5.contains\n            instance(x: 0, y: 0) substr_0f0a6d root.Std_k98ojb.Strings.Substring {}\n            i_ee4c08 -> substr_0f0a6d.start\n            substr_0f0a6d.end -> substr_0f0a6d.start\n            1 -> substr_0f0a6d.end\n            string_668bd2 -> substr_0f0a6d.input\n            substr_0f0a6d.output -> i_ee4c08\n            count_6c72a2_reset -> substr_0f0a6d.reset\n            i_ee4c08 -> count_6c72a2.count\n            number_bfdd7d -> not_3a8a55.input\n            count_6c72a2_increment -> count_6c72a2.count\n        } -> count_6c72a2.handler\n        0 -> count_6c72a2.count\n        count_6c72a2.count -> count_1f468d\n    }\n\n    \n\n    instance(x: 0, y: 0) number_ctr_5bdaed root.main.number_ctr {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 0, y: 0) count_3d3d8f root.Std_k98ojb.Std.Count {}\n        func() {\n            in(x: 0, y: 0, name: \"c\") property(String) c_24c3f7\n\n            instance(x: 0, y: 0) isnumeric_6e9cda root.Std_k98ojb.Strings.IsNumeric {}\n            c_24c3f7 -> isnumeric_6e9cda.input\n            isnumeric_6e9cda.result -> count_3d3d8f.count\n        } -> count_3d3d8f.on_character\n        count_3d3d8f.count -> count_1f468d\n        instance(x: 0, y: 0) characters_45c83b root.Std_k98ojb.Strings.Characters {}\n        string_668bd2 -> characters_45c83b.input\n        characters_45c83b.characters -> count_3d3d8f.characters\n        count_3d3d8f.reset -> characters_45c83b.reset\n    }\n\n    \n\n    instance(x: -33, y: -31) NumberCtr_8daa8e root.main.number_ctr {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 0, y: 0) map_6f1e89 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 0) isnumeric_2e5d88 root.Std_k98ojb.Strings.IsNumeric {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_4e82f9\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1e9b0c\n\n            char_4e82f9 -> isnumeric_2e5d88.input\n            isnumeric_2e5d88.result -> bool_1e9b0c\n        } -> map_6f1e89.handler\n        instance(x: 0, y: 0) sum_7cfc9f root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -113, y: 34, name: \"prev\") property(Number) prev_71f8b9\n            in(x: -5, y: 50, name: \"next\") property(Bool) next_1f7fc8\n\n            out(x: 515, y: 44, name: \"sum\") property(Number) sum_10b3e1\n\n            0 -> sum_10b3e1\n            1 -> sum_10b3e1\n            ifexpression_5d7e3d -> sum_10b3e1\n            instance(x: 0, y: 0) ifexpression_5d7e3d root.Std_k98ojb.Std.IfExpression {\n                expression: \"prev != null\"\n            }\n            prev_71f8b9 -> ifexpression_5d7e3d.gen_0\n            ifexpression_5d7e3d.then -> sum_10b3e1\n            0 -> sum_10b3e1\n            ifexpression_5d7e3d.else -> sum_10b3e1\n            instance(x: 0, y: 0) add_c8a9a5 root.Std_k98ojb.Math.Add {}\n            add_c8a9a5.result -> sum_10b3e1\n            prev_71f8b9 -> add_c8a9a5.first\n            1 -> add_c8a9a5.second\n            instance(x: 0, y: 0) ifexpression_dde8c6 root.Std_k98ojb.Std.IfExpression {\n                expression: \"next == true\"\n            }\n            ifexpression_dde8c6.then -> add_c8a9a5.second\n            0 -> add_c8a9a5.second\n            ifexpression_dde8c6.else -> add_c8a9a5.second\n            next_1f7fc8 -> ifexpression_dde8c6.gen_0\n        } -> sum_7cfc9f.reducer\n        instance(x: 0, y: 0) flatten_2db3b3 root.Std_k98ojb.List.Flatten {}\n        map_6f1e89.output_list -> flatten_2db3b3.list\n        flatten_2db3b3.flattened -> sum_7c9bc3\n        instance(x: 0, y: 0) sum_7c9bc3 root.Std_k98ojb.Iteration.Reduce {}\n        sum_7c9bc3.result -> count_1f468d\n        instance(x: 0, y: 0) characters_a6fa3f root.Std_k98ojb.Strings.Characters {}\n        characters_a6fa3f.characters -> map_6f1e89.items\n        string_668bd2 -> characters_a6fa3f.input\n    }\n\n    \n\n    instance(x: -42, y: 96) count_4a95b9 root.main.number_ctr {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 19, y: 1) count_4b6d6b root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) ifexpression_3e7e5e root.Std_k98ojb.Std.IfExpression {}\n        func() {\n            instance(x: 22, y: 39) contains_4e1d67 root.Std_k98ojb.Strings.Contains {}\n            contains_4e1d67.result -> bool_eb5e53\n            \"0\" -> contains_4e1d67.contains\n            ifexpression_3e7e5e.gen_0 -> contains_4e1d67.input\n        } -> ifexpression_3e7e5e.then\n        func() {\n            instance(x: 22, y: 39) contains_8b3e8f root.Std_k98ojb.Strings.Contains {}\n            contains_8b3e8f.result -> bool_c3c9b1\n            \"1\" -> contains_8b3e8f.contains\n            ifexpression_3e7e5e.gen_0 -> contains_8b3e8f.input\n        } -> ifexpression_3e7e5e.else\n        ifexpression_3e7e5e.result -> count_4b6d6b.count\n        count_4b6d6b.count -> count_4b6d6b.reset\n        count_4b6d6b.reset -> ifexpression_3e7e5e.execute\n        ifexpression_3e7e5e.execute -> count_4b6d6b.trigger\n        string_668bd2 -> ifexpression_3e7e5e.gen_0\n        ifexpression_3e7e5e.execute -> count_4b6d6b.trigger\n        count_4b6d6b.count -> count_1f468d\n    }\n\n    \n\n    instance(x: 119, y: 19) number_ctr_3d54dd root.main.number_ctr {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 0, y: 0) characters_7a1b3d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_9a3a4e root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) ifexpression_0dbf2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"it >= '0' and it <= '9'\"\n        }\n        instance(x: 0, y: 0) add_a6b2db root.Std_k98ojb.Math.Add {}\n        count_9a3a4e.count -> add_a6b2db.first\n        1 -> add_a6b2db.second\n        add_a6b2db.result -> count_9a3a4e.reset\n        string_668bd2 -> characters_7a1b3d.input\n        characters_7a1b3d.characters -> count_9a3a4e.trigger\n        ifexpression_0dbf2c.gen_0 -> characters_7a1b3d.gen_0\n        characters_7a1b3d.characters -> ifexpression_0dbf2c.gen_0\n        ifexpression_0dbf2c.value -> add_a6b2db.trigger\n        count_9a3a4e.count -> count_1f468d\n    }\n\n    \n\n    instance(x: -23, y: 23) number_ctr_7b6a7c root.main.number_ctr {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: 0, y: 0) findall_4fc9c6 root.Std_k98ojb.Strings.FindAll {}\n        instance(x: 0, y: 0) list_length_24c9d4 root.Std_k98ojb.List.Length {}\n        instance(x: 0, y: 0) expression_3e0f9d root.Std_k98ojb.Math.Expression {\n            expression: \"'\\\\d'\"\n        }\n        instance(x: 0, y: 0) math_exp_1b3e78 root.Std_k98ojb.Math.Expression {\n            expression: \"it\"\n        }\n        instance(x: 0, y: 0) set_dfe7d8 root.Std_k98ojb.List.GenerateRange {\n            from: \"0\"\n            , to: \"10\"\n        }\n        set_dfe7d8.list -> expression_3e0f9d.gen_0\n        findall_4fc9c6.output -> list_length_24c9d4.list\n        string_668bd2 -> findall_4fc9c6.input\n        expression_3e0f9d.result -> findall_4fc9c6.regex\n        list_length_24c9d4.length -> count_1f468d\n    }\n\n    \n\n    instance(x: -43, y: 110) number_ctr_1b6ec0 root.main.number_ctr {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts number of digits in a given string.\") number_ctr {\n        in(x: -240, y: 69, name: \"string\") property(String) string_668bd2\n        out(x: 929, y: 58, name: \"count\") property(Number) count_1f468d\n\n        instance(x: -5, y: 0) length_e4ee58 root.Std_k98ojb.List.Length {}\n        instance(x: 0, y: -1) characters_5e6c7e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 263, y: 0) filter_21b0af root.Std_k98ojb.Query.Filter {}\n        instance(x: 512, y: -2) map_8a94ba root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_e4d0f7\n\n            out(x: 515, y: 44, name: \"is_digit\") property(Bool) is_digit_1e5d50\n\n            instance(x: 89, y: 29) isnumeric_2b7c4d root.Std_k98ojb.Strings.IsNumeric {}\n            char_e4d0f7 -> isnumeric_2b7c4d.input\n            isnumeric_2b7c4d.result -> is_digit_1e5d50\n        } -> map_8a94ba.handler\n        characters_5e6c7e.characters -> map_8a94ba.items\n        filter_21b0af.result -> map_8a94ba.output_list\n        characters_5e6c7e.output -> filter_21b0af.list\n        string_668bd2 -> characters_5e6c7e.input\n        filter_21b0af.where -> map_8a94ba.predicate\n        \"it is numeric\" -> filter_21b0af.where\n        length_e4ee58.length -> count_1f468d\n        map_8a94ba.output_list -> length_e4ee58.list\n    }\n\n    \n\n    instance(x: -36, y: 12) digits_ctr_8d7b4e root.main.number_ctr {}\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        data_instance(x: 347, y: 70) data_81d7c5  = [4, 8, 12]\n        data_instance(x: 352, y: 0) data_7c9f5c  = 4\n        instance(x: -19, y: 46, name: \"Sum of odd numbers\") expression_9dc0e8 root.Std_k98ojb.Math.Expression {\n            expression: \"n * (n+1)\"\n        }\n        instance(x: -32, y: 111) div_74b7ca root.Std_k98ojb.Math.Div {}\n        instance(x: -2, y: -1, name: \"Odd number\") expression_6c2b88 root.Std_k98ojb.Math.Expression {\n            expression: \"2*n-1\"\n        }\n        instance(x: -27, y: 4) expression_ea9cc6 root.Std_k98ojb.Math.Expression {\n            expression: \"pow(n,4)\"\n        }\n        instance(x: 22, y: 53) pow_6f3b3f root.Std_k98ojb.Math.Pow {}\n        instance(x: 42, y: -7, name: \"Sum of odd numbers raised to 4th power\") expression_7c5e52 root.Std_k98ojb.Math.Expression {\n            expression: \"n * (2*n-1) * (2*n+1) * (4*n*n-1)/3\"\n        }\n        data_81d7c5 -> div_74b7ca.second\n        div_74b7ca.result -> data_81d7c5.ii\n        data_81d7c5 -> pow_6f3b3f.second\n        expression_6c2b88.result -> pow_6f3b3f.first\n        expression_ea9cc6.result -> data_81d7c5.i\n        n_0c0609 -> expression_9dc0e8.gen_0\n        div_74b7ca.result -> data_81d7c5.iii\n        expression_9dc0e8.result -> sum_2ad0d5\n        expression_9dc0e8.result -> div_74b7ca.first\n        n_0c0609 -> expression_6c2b88.gen_0\n        n_0c0609 -> pow_6f3b3f.gen_0\n        expression_ea9cc6.result -> sum_2ad0d5\n        pow_6f3b3f.result -> sum_2ad0d5\n        data_7c9f5c -> div_74b7ca.first\n        n_0c0609 -> expression_7c5e52.gen_0\n        expression_7c5e52.result -> sum_2ad0d5\n    }\n\n    \n\n    instance(x: -104, y: 184) odd_num_sum_8f9e7a root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 39, y: -18, name: \"odd num\") expression_4ee7d3 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 32, y: 39, name: \"odd power\") pow_b1c4b6 root.Std_k98ojb.Math.Pow {}\n        instance(x: 18, y: 86, name: \"sum\") reduce_5a4f6d root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"a + b\"\n        }\n        instance(x: 13, y: -1, name: \"iterate\") for_4f4b8b root.Std_k98ojb.Std.For {}\n        data_instance(x: 7, y: 0, name: \"initial value\") data_10d61d  = 0\n        instance(x: -26, y: 49, name: \"map handler\") map_d9c0b4 root.Std_k98ojb.Iteration.Map {}\n        data_10d61d -> reduce_5a4f6d.accumulated\n        pow_b1c4b6.result -> map_d9c0b4.handler.gen_1\n        expression_4ee7d3.result -> pow_b1c4b6.second\n        n_0c0609 -> expression_4ee7d3.gen_0\n        4 -> pow_b1c4b6.first\n        map_d9c0b4.output_list -> reduce_5a4f6d.items\n        for_4f4b8b.items -> map_d9c0b4.items\n        for_4f4b8b.onItem -> map_d9c0b4.handler.gen_0\n        for_4f4b8b.index -> map_d9c0b4.handler.gen_2\n        data_10d61d -> for_4f4b8b.reset\n        n_0c0609 -> for_4f4b8b.trigger\n        for_4f4b8b.done -> reduce_5a4f6d.items\n        reduce_5a4f6d.output -> sum_2ad0d5\n    }\n\n    \n\n    instance(x: -36, y: 155) odd_num_sum_57f1d2 root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9fc2d3 root.Std_k98ojb.Math.Pow {}\n        instance(x: 329, y: 2) add_2e7c9f root.Std_k98ojb.Math.Add {}\n        instance(x: 329, y: 50) add_6e1d1f root.Std_k98ojb.Math.Add {}\n        mul_f892a4.result -> pow_9fc2d3.first\n        pow_9fc2d3.result -> add_2e7c9f.first\n        pow_9fc2d3.result -> add_6e1d1f.first\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_f892a4.second\n        data_cde0dc -> add_2e7c9f.second\n        1 -> add_6e1d1f.second\n        add_2e7c9f.result -> pow_9fc2d3.second\n        add_6e1d1f.result -> sum_2ad0d5\n    }\n\n    \n\n    instance(x: 118, y: -26) odd_num_sum_9dcc3d root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        data_instance(x: 407, y: 81) data_b9bb4c  = [sum, temp]\n        instance(x: 25, y: -2) pow_4b2a72 root.Std_k98ojb.Math.Pow {}\n        instance(x: 24, y: 51, name: \"sum\") add_7b0dc1 root.Std_k98ojb.Math.Add {}\n        func() {\n            in(x: -132, y: 55, name: \"i\") property(Number) i_5f1c34\n\n            out(x: 518, y: 57, name: \"bool\") property(Bool) bool_8a2a74\n\n            instance(x: 309, y: 59) expression_2c4f8f root.Std_k98ojb.Math.Expression {\n                expression: \"i<=n\"\n            }\n            expression_2c4f8f.result -> bool_8a2a74\n        } -> for_6c91f9.predicate\n        for_6c91f9.items -> data_b9bb4c.n\n        n_0c060b -> for_6c91f9.items\n        pow_4b2a72.y ->    ionic strength. In",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 0, y: 0, name: \"Sum\") setter_1e8c6c root.Std_k98ojb.Setter {\n            new_value: \"sum\"\n        }\n        instance(x: 13, y: 0) for_a6b7d9 root.Std_k98ojb.Std.For {}\n        instance(x: 40, y: 34) pow_e1a69b root.Std_k98ojb.Math.Pow {}\n        instance(x: 43, y: 85) expression_9f0c5f root.Std_k98ojb.Math.Expression {\n            expression: \"2*n-1\"\n        }\n        instance(x: 0, y: 0) setter_e8d0f1 root.Std_k98ojb.Setter {\n            new_value: \"sum\"\n        }\n        instance(x: 39, y: 128) add_82b3e5 root.Std_k98ojb.Math.Add {}\n        instance(x: -33, y: 166) empty_1bfa2c root.Std_k98ojb.List.Empty {}\n        setter_1e8c6c.continue -> for_a6b7d9.reset\n        n_0c0609 -> for_a6b7d9.count\n        setter_1e8c6c.new_value ->  for_a6b7d9.items\n        for_a6b7d9.onItem -> add_82b3e5.second\n        pow_e1a69b.result -> add_82b3e5.first\n        for_a6b7d9.item -> expression_9f0c5f.gen_0\n        expression_9f0c5f.result -> pow_e1a69b.first\n        4 -> pow_e1a69b.second\n        empty_1bfa2c.result -> setter_e8d0f1.new_value\n        empty_1bfa2c.result -> add_82b3e5.second\n        setter_e8d0f1.continue -> add_82b3e5.execute\n        for_a6b7d9.done -> add_82b3e5.execute\n        add_82b3e5.result -> setter_e8d0f1.new_value\n        setter_e8d0f1.continue -> for_a6b7d9.trigger\n        add_82b3e5.result -> sum_2ad0d5\n    }\n\n    \n\n    instance(x: -77, y: -39) odd_num_sum_5ebdfb root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 6, y: 26, name: \"Generate a list of n odd numbers\") generateRange_d9eb69 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 11, y: 79) map_f2b3a6 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 2, y: 120) reduce_c1b6df root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 310, y: 132) expression_1dbda2 root.Std_k98ojb.Math.Expression {\n            expression: \"n*4-3\"\n        }\n        instance(x: 302, y: 165) expression_1eaa00 root.Std_k98ojb.Math.Expression {\n            expression: \"n*n\"\n        }\n        instance(x: 10, y: 202) expression_2c4a6c root.Std_k98ojb.Math.Expression {\n            expression: \"n*n\"\n        }\n        instance(x: 3, y: 235) expression_2b2c6b root.Std_k98ojb.Math.Expression {\n            expression: \"n*4-1\"\n        }\n        generateRange_d9eb69.from -> expression_1dbda2.gen_0\n        expression_1dbda2.result -> generateRange_d9eb69.to\n        generateRange_d9eb69.list -> map_f2b3a6.items\n        func() {\n            in(x: -103, y: 97, name: \"current\") property(Number) current_a2d7c5\n\n            out(x: 556, y: 118, name: \"output\") property(Number) output_3df5a3\n\n            expression_1eaa00.gen_0 -> expression_2c4a6c.gen_0\n            expression_2c4a6c.result -> expression_1eaa00.gen_1\n            current_a2d7c5 -> expression_1eaa00.gen_0\n            expression_2b2c6b.gen_0 -> expression_2c4a6c.gen_1\n            expression_2c4a6c.result -> expression_2b2c6b.gen_1\n            current_a2d7c5 -> expression_2b2c6b.gen_0\n            expression_1eaa00.result -> output_3df5a3\n        } -> map_f2b3a6.handler\n        map_f2b3a6.output_list -> reduce_c1b6df.items\n        func() {\n            in(x: -192, y: -7, name: \"acc\") property(Number) acc_3c5b5e\n            in(x: -181, y: 79, name: \"current\") property(Number) current_1ec0bc\n\n            out(x: 702, y: 29, name: \"output\") property(Number) output_8e68c3\n\n            instance(x: 74, y: 39) add_8b2fa8 root.Std_k98ojb.Math.Add {}\n            acc_3c5b5e -> add_8b2fa8.first\n            current_1ec0bc -> add_8b2fa8.second\n            add_8b2fa8.result -> output_8e68c3\n        } -> reduce_c1b6df.reducer\n        reduce_c1b6df.output -> sum_2ad0d5\n        0 -> reduce_c1b6df.accum\n    }\n\n    \n\n    instance(x: -72, y: 163) odd_num_sum_8e54b7 root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        data_instance(x: 397, y: 112) data_9a7a9d  = 1\n        instance(x: 29, y: 0) expression_3c7f0f root.Std_k98ojb.Math.Expression {\n            expression: \"2*n-1\"\n        }\n        instance(x: 1, y: 71) pow_7d3bcf root.Std_k98ojb.Math.Pow {}\n        instance(x: 328, y: 7) add_8b6e2e root.Std_k98ojb.Math.Add {}\n        instance(x: 293, y: 119) div_4eef6f root.Std_k98ojb.Math.Div {}\n        instance(x: 328, y: 157) mul_8e0d8b root.Std_k98ojb.Math.Mul {}\n        instance(x: 297, y: 208) expression_1d3c9b root.Std_k98ojb.Math.Expression {\n            expression: \"n*4-6\"\n        }\n        data_9a7a9d -> div_4eef6f.second\n        div_4eef6f.result -> mul_8e0d8b.first\n        pow_7d3bcf.result -> mul_8e0d8b.second\n        mul_8e0d8b.result -> add_8b6e2e.first\n        data_9a7a9d -> add_8b6e2e.second\n        add_8b6e2e.result -> sum_2ad0d5\n        expression_1d3c9b.result -> div_4eef6f.first\n        n_0c0609 -> expression_1d3c9b.gen_0\n        n_0c0609 -> div_4eef6f.first\n        n_0c0609 -> expression_3c7f0f.gen_0\n        expression_3c7f0f.result -> pow_7d3bcf.x\n        4 -> pow_7d3bcf.y\n    }\n\n    \n\n    instance(x: -28, y: 237) odd_num_sum_21e6bd root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: -62, y: 19, name: \"Numbers\") generate_5a88ed root.Std_k98ojb.List.GenerateRange {\n            from: 1\n               \t\n\t\n \t} \n\t\n \tpublic \t-\u0001",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 18, y: 46) mul_0d69c9 root.Std_k98ojb.Math.Mul {}\n        instance(x: -53, y: 45, name: \"mul\") mul_b6b3a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_7f8a4e  = 1\n        instance(x: 12, y: 136) expression_1b3e62 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_4fcfd1 root.Std_k98ojb.Math.Pow {}\n        data_7f8a4e -> pow_4fcfd1.base\n        mul_0d69c9.result -> pow_4fcfd1.exponent\n        expression_1b3e62.result -> mul_0d69c9.second\n        n_0c0609 -> mul_0d69c9.first\n        n_0c0609 -> expression_1b3e62.gen_0\n        pow_4fcfd1.result -> mul_b6b3a4.first\n        mul_b6b3a4.result -> sum_2ad0d5\n        n_0c0609 -> mul_b6b3a4.second\n    }\n\n    \n\n    instance(x: 108, y: -22) odd_num_sum_ea53e8 root.main.odd_num_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") odd_num_sum {\n        in(x: -243, y: 86, name: \"n\") property(Number) n_0c0609\n\n        out(x: 1090, y: 53, name: \"sum\") property(Number) sum_2ad0d5\n\n        instance(x: 7, y: -15) expression_7a9d3d root.Std_k98ojb.Math.Expression {\n            expression: \"n*n*n*n\"\n        }\n        instance(x: 5, y: 59, name: \"sum\") expression_7a9d3d_9c0a6a root.Std_k98ojb.Math.Expression {\n            expression: \"n*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 0, y: 0) mul_5f9c5f root.Std_k98ojb.Math.Mul {}\n        n_0c0609 -> mul_5f9c5f.first\n        expression_7a9d3d_9c0a6a.result -> mul_5f9c5f.second\n        expression_7a9d3d.result -> sum_2ad0d5\n        n_0c0609 -> expression_7a9d3d.gen_0\n        n_0c0609 -> expression_7a9d3d_9c0a6a.gen_0\n    }\n\n    \n\n    instance(x: -68, y: 229) odd_num_sum_0d2c09 root.main.odd_num_sum {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: 15, y: -24) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * (size ^ 2)\"\n        }\n        size_49c776 -> math_expr_node.gen_0\n        math_expr_node.result -> Area_a3e36f\n    }\n\n    \n\n    instance(x: 58, y: 16) CubeSurfaceArea_d2c6ae root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: -6, y: -39) mul_node_1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 52, y: -37) mul_node_2 root.Std_k98ojb.Math.Mul {}\n        instance(x: -4, y: 13) mul_node_3 root.Std_k98ojb.Math.Mul {}\n        instance(x: 54, y: 25) mul_node_4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 109, y: -3) add_node_1 root.Std_k98ojb.Math.Add {}\n        instance(x: 156, y: -6) mul_node_5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 209, y: 7) mul_node_6 root.Std_k98ojb.Math.Mul {}\n        instance(x: 260, y: 24) mul_node_7 root.Std_k98ojb.Math.Mul {}\n        instance(x: 313, y: 11) mul_node_8 root.Std_k98ojb.Math.Mul {}\n        instance(x: 365, y: -3) mul_node_9 root.Std_k98ojb.Math.Mul {}\n        instance(x: 416, y: 7) mul_node_10 root.Std_k98ojb.Math.Mul {}\n        instance(x: 468, y: 24) mul_node_11 root.Std_k98ojb.Math.Mul {}\n        instance(x: 520, y: 11) add_node_2 root.Std_k98ojb.Math.Add {}\n        instance(x: 573, y: -3) add_node_3 root.Std_k98ojb.Math.Add {}\n        size_49c776 -> mul_node_1.first\n        size_49c776 -> mul_node_2.first\n        size_49c776 -> mul_node_3.first\n        size_49c776 -> mul_node_4.first\n        size_49c776 -> mul_node_5.first\n        size_49c776 -> mul_node_6.first\n        size_49c776 -> mul_node_7.first\n        size_49c776 -> mul_node_8.first\n        size_49c776 -> mul_node_9.first\n        size_49c776 -> mul_node_10.first\n        size_49c776 -> mul_node_11.first\n        6 -> mul_node_1.second\n        6 -> mul_node_2.second\n        6 -> mul_node_3.second\n        6 -> mul_node_4.second\n        mul_node_1.result -> add_node_1.first\n        mul_node_2.result -> add_node_1.second\n        add_node_1.result -> mul_node_5.first\n        2 -> mul_node_3.second\n        2 -> mul_node_4.second\n        mul_node_3.result -> add_node_2.first\n        mul_node_4.result -> add_node_2.second\n        add_node_2.result -> mul_node_6.first\n        mul_node_5.result -> add_node_3.first\n        mul_node_6.result -> add_node_3.second\n        2 -> mul_node_7.second\n        2 -> mul_node_8.second\n        2 -> mul_node_9.second\n        2 -> mul_node_10.second\n        2 -> mul_node_11.second\n        mul_node_7.result -> add_node_2.first\n        mul_node_8.result -> add_node_2.second\n        add_node_2.result -> mul_node_10.first\n        mul_node_9.result -> add_node_3.first\n        mul_node_10.result -> add_node_3.second\n        add_node_3.result -> Area_a3e36f\n    }\n   \n\n    instance(x: 109, y: -80, name: \"CubeSurfaceArea\") CubeSurfaceArea_15c9a7 root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: -38, y: -23) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size * size\"\n        }\n        size_49c776 -> math_expr_node.gen_0\n        math_expr_node.result -> Area_a3e36f\n    }\n\n    \n\n    instance(x: -56, y: -44) CubeSurfaceArea_afe3ae root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: 17, y: -43) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size * size\"\n        }\n        size_49c776 -> math_expr_node.gen_0\n        math_expr_node.result -> Area_a3e36f\n    }\n\n    \n\n    instance(x: 104, y: -13) CubeSurfaceArea_d81fa2 root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: 28, y: -88) math_expression_0d2d99 root.Std_k98ojb.Math.Expression {\n            expression: \"6 * (side * side)\"\n        }\n        size_49c776 -> math_expression_0d2d99.gen_0\n        math_expression_0d2d99.result -> Area_a3e36f\n    }\n\n    \n    instance(x: 24, y: -35, name: \"CubeSurfaceArea\") cube_surface_area_61e1a5 root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: 0, y: 0) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"size * 6 * size\"\n        }\n        size_49c776 -> math_expr_node.gen_0\n        size_49c776 -> math_expr_node.gen_2\n        math_expr_node.result -> Area_a3e36f\n   }\n   \n\n    instance(x: 0, y: 0, name: \"CubeSurfaceArea\") expression_1b0a29 root.main.CubeSurfaceArea {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: 28, y: -4) mul_d6b0b1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 18, y: 37) mul_ae5e5d root.Std_k98ojb.Math.Mul {}\n        instance(x: 12, y: -59) expression_7b95e1 root.Std_k98ojb.Math.Expression {\n            expression: \"6 * s * s\"\n        }\n        6 -> mul_ae5e5d.first\n        size_49c776 -> mul_d6b0b1.first\n        mul_d6b0b1.result -> mul_ae5e5d.second\n        size_49c776 -> expression_7b95e1.gen_0\n        mul_ae5e5d.result -> expression_7b95e1.gen_1\n        expression_7b95e1.result -> Area_a3e36f\n    }\n\n    \n\n    instance(x: 112, y: -22) CubeSurfaceArea_7d9a0c root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: 18, y: -27) math_expr_3d0eaf root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size^2\"\n        }\n        size_49c776 -> math_expr_3d0eaf.gen_0\n        math_expr_3d0eaf.result -> Area_a3e36f\n    }\n    \n\n    instance(x: 78, y: -15) CubeSurfaceArea_ba7f4c root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: -11, y: -44) mul_9c6a9b root.Std_k98ojb.Math.Mul {}\n        instance(x: 83, y: -53) mul_9d57e6 root.Std_k98ojb.Math.Mul {}\n        instance(x: 263, y: -42) mul_90c2d5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 446, y: -67) add_1e0c0b root.Std_k98ojb.Math.Add {}\n        instance(x: 524, y: -55) mul_e0d62c root.Std_k98ojb.Math.Mul {}\n        instance(x: 694, y: -44) mul_eb7d6d root.Std_k98ojb.Math.Mul {}\n        instance(x: 876, y: -42) add_b8a7b6 root.Std_k98ojb.Math.Add {}\n        size_49c776 -> mul_9c6a9b.first\n        2 -> mul_9c6a9b.second\n        mul_9c6a9b.result -> mul_9d57e6.first\n        size_49c776 -> mul_9d57e6.second\n        mul_9d57e6.result -> mul_90c2d5.first\n        size_49c776 -> mul_90c2d5.second\n        mul_90c2d5.result -> add_1e0c0b.first\n        mul_e0d62c.result -> add_1e0c0b.second\n        size_49c776 -> mul_e0d62c.first\n        6 -> mul_e0d62c.second\n        mul_eb7d6d.result -> add_b8a7b6.first\n        add_1e0c0b.result -> add_b8a7b6.second\n        add_b8a7b6.result -> Area_a3e36f\n        size_49c776 -> mul_eb7d6d.first\n        2 -> mul_eb7d6d.second\n    }\n\n    \n\n    instance(x: 144, y: -20, name: \"CubeSurfaceArea\") CubeSurfaceArea_d0a6a7 root.main.CubeSurfaceArea {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") CubeSurfaceArea {\n        in(x: -56, y: -44, name: \"size\") property(Number) size_49c776\n\n        out(x: 582, y: -80, name: \"Area\") property(Number) Area_a3e36f\n\n        instance(x: 24, y: -65) pow_90b9c6 root.Std_k98ojb.Math.Pow {}\n        instance(x: 21, y: -17) mul_4e8f9d root.Std_k98ojb.Math.Mul {}\n        instance(x: 40, y: -24) mul_9c0a6a root.Std_k98ojb.Math.Mul {}\n        2 -> pow_90b9c6.y\n        size_49c776 -> pow_90b9c6.x\n        pow_90b9c6.result -> mul_4e8f9d.first\n        mul_9c0a6a.result -> mul_4e8f9d.second\n        6 -> mul_9c0a6a.first\n        size_49c776 -> mul_9c0a6a.second\n        mul_4e8f9d.result -> Area_a3e36f\n    }\n\n    \n\n    instance(x: 50, y: -51, name: \"CubeSurfaceArea\") CubeSurfaceArea_a9ce84 root.main.CubeSurfaceArea {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 223, y: 61) sub_f2a1df root.Std_k98ojb.Math.Sub {}\n        instance(x: -0, y: 155) max_93e3a3 root.Std_k98ojb.List.Max {}\n        instance(x: -0, y: -38) min_9c8d0a root.Std_k98ojb.List.Min {}\n        list_9abc1d -> max_93e3a3.list\n        list_9abc1d -> min_9c8d0a.list\n        max_93e3a3.max -> sub_f2a1df.first\n        min_9c8d0a.min -> sub_f2a1df.second\n        sub_f2a1df.result -> difference_27806e\n    }\n\n    \n\n    instance(x: 1, y: 0) big_diff_e2f8b5 root.main.big_diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: -22, y: 107) reduce_1f8c4b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 349, y: 71) sub_2e2e96 root.Std_k98ojb.Math.Sub {}\n        instance(x: 366, y: 132) greaterthan_91f9f1 root.Std_k98ojb.Math.GreaterThan {}\n        func() {\n            in(x: -170, y: 34, name: \"previous\") property(Number) previous_1c8c9e\n            in(x: -158, y: 115, name: \"current\") property(Number) current_d3a8f4\n\n            out(x: 289, y: 55, name: \"result\") property(Number) result_2d8c36\n\n            instance(x: 63, y: 56) ifexpression_3f4b3f root.Std_k98ojb.Std.IfExpression {\n                expression: \"current > previous\"\n            }\n            previous_1c8c9e -> ifexpression_3f4b3f.gen_1\n            current_d3a8f4 -> ifexpression_3f4b3f.gen_0\n            instance(x: 227, y: 32) if_4a56d8 root.Std_k98ojb.Std.If {\n                input: \"ifexpression_3f4b3f.value\"\n                  } else",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 105, y: 62) sub_a1c6f4 root.Std_k98ojb.Math.Sub {}\n        instance(x: -80, y: 61) max_2f0f7c root.Std_k98ojb.List.Max {}\n        instance(x: 113, y: 164) min_9e3b2b root.Std_k98ojb.List.Min {}\n        list_9abc1d -> max_2f0f7c.list\n        list_9abc1d -> min_9e3b2b.list\n        min_9e3b2b.min -> sub_a1c6f4.first\n        max_2f0f7c.max -> sub_a1c6f4.second\n        sub_a1c6f4.result -> difference_27806e\n    }\n\n    \n\n    instance(x: -74, y: -1) big_diff_7cf2e9 root.main.big_diff {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 0, y: -16) sub_3edf2f root.Std_k98ojb.Math.Sub {}\n        instance(x: 0, y: 134) max_2a4d65 root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 268) min_6b8ed9 root.Std_k98ojb.List.Min {}\n        max_2a4d65.list -> sub_3edf2f.second\n        min_6b8ed9.min -> sub_3edf2f.first\n        list_9abc1d -> max_2a4d65.list\n        list_9abc1d -> min_6b8ed9.items\n        sub_3edf2f.result -> difference_27806e\n    }\n\n    \n\n    instance(x: 46, y: -4) big_diff_6ee9d2 root.main.big_diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 213, y: 78) sub_0d2d99 root.Std_k98ojb.Math.Sub {}\n        instance(x: 194, y: -9) max_4ecbb4 root.Std_k98ojb.List.Max {}\n        instance(x: 190, y: 117) min_9f6e9c root.Std_k98ojb.List.Min {}\n        list_9abc1d -> max_4ecbb4.list\n        list_9abc1d -> min_9f6e9c.list\n        min_9f6e9c.min -> sub_0d2d99.first\n        max_4ecbb4.max -> sub_0d2d99.second\n        sub_0d2d99.result -> difference_27806e\n    }\n\n    \n\n    instance(x: 18, y: 62) big_diff_1c5a82 root.main.big_diff {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 160, y: 53) max_89ef3d root.Std_k98ojb.List.Max {}\n        instance(x: 165, y: -47) min_4a2e2d root.Std_k98ojb.List.Min {}\n        instance(x: 499, y: 52) sub_9c3c04 root.Std_k98ojb.Math.Sub {}\n        list_9abc1d -> min_4a2e2d.items\n        list_9abc1d -> max_89ef3d.items\n        max_89ef3d.max -> sub_9c3c04.first\n        min_4a2e2d.min -> sub_9c3c04.second\n        sub_9c3c04.result -> difference_27806e\n    }\n\n    \n\n    instance(x: 12, y: -12) big_diff_7c0be6 root.main.big_diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 1, y: 110) sub_0b6f76 root.Std_k98ojb.Math.Sub {}\n        instance(x: 1, y: 2) max_ae5e5d root.Std_k98ojb.List.Max {}\n        instance(x: 1, y: -15) min_c3d0e5 root.Std_k98ojb.List.Min {}\n        list_9abc1d -> max_ae5e5d.list\n        list_9abc1d -> min_c3d0e5.list\n        max_ae5e5d.max -> sub_0b6f76.first\n        min_c3d0e5.min -> sub_0b6f76.second\n        sub_0b6f76.result -> difference_27806e\n    }\n\n    \n\n    instance(x: 42, y: -6) big_diff_7d56ca root.main.big_diff {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 203, y: 62) sub_a3d0e7 root.Std_k98ojb.Math.Sub {}\n        instance(x: 0, y: -0) max_3a4e8f root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: -0) min_cdbf63 root.Std_k98ojb.List.Min {}\n        list_9abc1d -> max_3a4e8f.list\n        max_3a4e8f.max -> sub_a3d0e7.first\n        list_9abc1d -> min_cdbf63.list\n        min_cdbf63.min -> sub_a3d0e7.second\n        sub_a3d0e7.result -> difference_27806e\n    }\n\n    \n\n    instance(x: -77, y: 35) big_diff_cbea95 root.main.big_diff {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 176, y: 63) sub_7f74c0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: -1, name: \"biggest number\") max_8c7e6b root.Std_k98ojb.List.Max {}\n        instance(x: -30, y: 127, name: \"smallest number\") min_8a4e90 root.Std_k98ojb.List.Min {}\n        sub_7f74c0.result -> difference_27806e\n        list_9abc1d -> max_8c7e6b.list\n        list_9abc1d -> min_8a4e90.list\n        max_8c7e6b.max -> sub_7f74c0.first\n        min_8a4e90.min -> sub_7f74c0.second\n    }\n\n    \n\n    instance(x: -42, y: 75) big_diff_c3bda6 root.main.big_diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") big_diff {\n        in(x: -266, y: 82, name: \"list\") property(List) list_9abc1d\n\n        out(x: 533, y: 70, name: \"difference\") property(Number) difference_27806e\n\n        instance(x: 282, y: 83) sub_9c6d65 root.Std_k98ojb.Math.Sub {}\n        instance(x: 1, y: 93) max_8f83ac root.Std_k98ojb.List.Max {}\n        instance(x: 1, y: -21) min_4a1ef2 root.Std_k98ojb.List.Min {}\n        list_9abc1d -> min_4a1ef2.items\n        min_4a1ef2.min -> sub_9c6d65.second\n        list_9abc1d -> max_8f83ac.items\n        max_8f83ac.max -> sub_9c6d65.first\n        sub_9c6d65.result -> difference_27806e\n    }\n\n    \n\n    instance(x: -15, y: 111) big_diff_1bc0f4 root.main.big_diff {}\n\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: 140, y: -0) modulo_5f2a01 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -0, y: -0) equal_93e3a3 root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_5f2a01.divisor\n        num_1a1743 -> modulo_5f2a01.value\n        modulo_5f2a01.result -> equal_93e3a3.left\n        0 -> equal_93e3a3.right\n        equal_93e3a3.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -177, y: -1) is_Even_7ef3c6 root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: -33, y: -13) modulo_c7b72f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 122, y: -19) equal_7ed0d3 root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_c7b72f.divisor\n        num_1a1743 -> modulo_c7b72f.value\n        modulo_c7b72f.result -> equal_7ed0d3.left\n        0 -> equal_7ed0d3.right\n        equal_7ed0d3.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -271, y: -2) is_Even_4f4b8b root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: 105, y: -12) modulo_4f1c6f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 273, y: -8) equal_2f0f7c root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_4f1c6f.divisor\n        num_1a1743 -> modulo_4f1c6f.value\n        modulo_4f1c6f.result -> equal_2f1d8c.left\n        0 -> equal_2f1d8c.right\n        equal_2f1d8c.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -186, y: 15) is_Even_9d6e6e root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: -127, y: 18) modulo_51e0ed root.Std_k98ojb.Math.Modulo {}\n        instance(x: 76, y: 25) equal_0cf2a4 root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_51e0ed.divisor\n        num_1a1743 -> modulo_51e0ed.value\n        0 -> equal_0cf2a4.right\n        modulo_51e0ed.result -> equal_0cf2a4.left\n        equal_0cf2a4.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -198, y: 10) is_Even_9a3a43 root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: -79, y: -8) modulo_1b0d2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 116, y: -9) equal_4ecbb4 root.Std_k98ojb.Logic.Equal {}\n        num_1a1743 -> modulo_1b0d2d.value\n        2 -> modulo_1b0d2d.divisor\n        modulo_1b0d2d.result -> equal_4ecbb4.left\n        0 -> equal_4ecbb4.right\n        equal_4ecbb4.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -233, y: 76) is_Even_0e2a61 root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: 116, y: 4) modulo_3f7a66 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 240, y: 5) equal_86d3f1 root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_3f7a66.divisor\n        num_1a1743 -> modulo_3f7a66.value\n        modulo_3f7a66.result -> equal_86d3f1.left\n        0 -> equal_86d3f1.right\n        equal_86d3f1.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -316, y: 8) is_Even_1ebeaa root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: -62, y: -9) modulo_3a0b6f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 141, y: -2) equal_ae5e5d root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_3a0b6f.divisor\n        num_1a1743 -> modulo_3a0b6f.value\n        0 -> equal_ae5e5d.right\n        modulo_3a0b6f.result -> equal_ae5e5d.left\n        equal_ae5e5d.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -310, y: 38) is_Even_7b9c9d root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: 72, y: -6) modulo_a99b05 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 243, y: -5) equal_9e7faa root.Std_k98ojb.Logic.Equal {}\n        num_1a1743 -> modulo_a99b05.value\n        2 -> modulo_a99b05.divisor\n        modulo_a99b05.result -> equal_9e7faa.left\n        0 -> equal_9e7faa.right\n        equal_9e7faa.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -76, y: 26) is_Even_9f1a87 root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: -87, y: -17) modulo_dcf7f8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 132, y: -14) equal_83c9d8 root.Std_k98ojb.Logic.Equal {}\n        0 -> equal_83c9d8.right\n        num_1a1743 -> modulo_dcf7f8.value\n        2 -> modulo_dcf7f8.divisor\n        modulo_dcf7f8.result -> equal_83c9d8.left\n        equal_83c9d8.result -> output_4ff980\n    }\n\n    \n\n    instance(x: -292, y: 24) is_Even_5e3b44 root.main.is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_Even {\n        in(x: -389, y: -3, name: \"num\") property(Number) num_1a1743\n        out(x: 197, y: -8, name: \"output\") property(Bool) output_4ff980\n\n        instance(x: -57, y: 2) modulo_eb5ab2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -13, y: 26) equal_2c81e1 root.Std_k98ojb.Logic.Equal {}\n        num_1a1743 -> modulo_eb5ab2.value\n        2 -> modulo_eb5ab2.divisor\n        modulo_eb5ab2.result -> equal_2c81e1.left\n        0 -> equal_2c81e1.right\n        equal_2c81e1.result -> output_4ff980\n    }\n    \n\n    instance(x: -61, y: -4) is_Even_a7bc51 root.main.is_Even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 1114, y: 328, name: \"set\") set_0a6c63 root.Std_k98ojb.Data.Set {}\n        instance(x: 1068, y: 133, name: \"characters\") characters_4efbc1 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1124, y: 204) filter_9e5d0c root.Std_k98ojb.Query.Filter {\n            where: \"it in set_0a6c63\"\n        }\n        instance(x: 1099, y: 278) if_7e0a1c root.Std_k98ojb.Std.If {}\n        instance(x: 1064, y: 46) add_b4ce2b root.Std_k98ojb.Data.Set.Add {}\n        characters_4efbc1.characters -> filter_9e5d0c.list\n        characters_4efbc1.string -> string_71a657\n        set_0a6c63 -> add_b4ce2b.set\n        filter_9e5d0c.result -> if_7e0a1c.input\n        add_b4ce2b.item -> if_7e0a1c.then\n        if_7e0a1c.else -> add_b4ce2b.execute\n        filter_9e5d0c.result -> char_f2523c\n        if_7e0a1c.execute -> continue_1914e0\n        execute_97d5d5 -> add_b4ce2b.execute\n    }\n\n    \n\n    instance(x: -40, y: 33) first_repeated_char_3a3e9e root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 1034, y: 333, name: \"char\") ``if (char)`` root.Std_k98ojb.Std.If {\n            then: \"char\"\n        }\n        instance(x: 1066, y: 192) contains_3a6f7b root.Std_k98ojb.Strings.Contains {}\n        instance(x: 1066, y: 6) notroot_ebfa2f root.Std_k98ojb.Logic.Not {}\n        instance(x: 1055, y: 110) find_8a6f2d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 1028, y: 110) ``char in array`` root.Std_k98ojb.Logic.NotEqual {}\n        setter(x: -33, y: -95, name: \"setter_6c51b1\") setter_6c51b1 = local_seen\n        list_instance_1cde1c_3_1cde1c_4_1cde1c_2_1cde1c_0_1cde1c_5_1cde1c_1_1cde1c_2_1cde1c_3_1cde1c_4_1cde1c_5   \u0001",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: -13, y: 56, name: \"character list\") characters_a3b2b4 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1188, y: 341, name: \"first repeated char\") find_2d3c06 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) contains_f5d6ec root.Std_k98ojb.Query.Filter {\n            where: \"list.Contains(it)\"\n        }\n        instance(x: 1114, y: 175, name: \"not empty list\") notempty_7f7b4d root.Std_k98ojb.List.NotEmpty {}\n        instance(x: 0, y: 0) ifexpression_6b5f7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"a.IsEmpty() && b == null\"\n        }\n        instance(x: 1303, y: 342, name: \"continue func\") setter_f3b9f4 root.Std_k98ojb.Setter {\n            name: \"continue\"\n        }\n        instance(x: 1303, y: 351, name: \"char func\") setter_a4b3b9 root.Std_k98ojb.Setter {\n            name: \"char\"\n        }\n        characters_a3b2b4.characters -> find_2d3c06.items\n        string_71a657 -> characters_a3b2b4.input\n        func() {\n            in(x: 128, y: 99, name: \"current\") property(Any) current_31a2e1\n\n            out(x: 1059, y: 101, name: \"bool\") property(Bool) bool_7e56f5\n\n            instance(x: 278, y: 100, name: \"char list\") list_5a78ee root.Std_k98ojb.List.Filter {}\n            instance(x: 541, y: 101, name: \"not contains\") not_7a7a36 root.Std_k98ojb.Logic.Not {}\n            list_5a78ee.result -> contains_f5d6ec.list\n            list_5a78ee.where -> not_7a7a36.execute\n            current_31a2e1 -> list_5a78ee.where\n            contains_f5d6ec.result -> not_7a7a36.input\n            not_7a7a36.output -> bool_7e56f5\n        } -> find_2d3c06.predicate\n        func() {\n            in(x: 128, y: 99, name: \"current\") property(Any) current_31a2e1\n\n            out(x: 1059, y: 101, name: \"bool\") property(Bool) bool_7e56f5\n\n            instance(x: 278, y: 100, name: \"char list\") list_5a78ee root.Std_k98ojb.List.Filter {}\n            instance(x: 542, y: 99, name: \"contains\") contains_c8b9ba root.Std_k98ojb.List.Contains {}\n            list_5a78ee.result -> contains_f5d6ec.list\n            list_5a78ee.where -> contains_c8b9ba.execute\n            current_31a2e1 -> list_5a78ee.where\n            contains_f5d6ec.result -> bool_7e56f5\n        } -> notempty_7f7b4d.execute\n        execute_97d5d5 -> setter_f3b9f4.execute\n        setter_f3b9f4.new_value -> continue_1914e0\n        0 -> setter_f3b9f4.continue\n        find_2d3c06.item -> setter_a4b3b9.new_value\n        find_2d3c06.item -> char_f2523c\n        ifexpression_6b5f7f.then -> setter_f3b9f4.execute\n        notempty_7f7b4d.result -> ifexpression_6b5f7f.gen_0\n        find_2d3c06.done -> setter_f3b9f4.execute\n        0 -> setter_a4b3b9.new_value\n        ifexpression_6b7c6a.then -> setter_a4b3b9.execute\n        null -> ifexpression_6b7c6a.gen_0\n        find_2d3c06.done -> ifexpression_6b7c6a.execute\n        setter_f3b9f4.continue -> continue_1914e0\n        setter_a4b3b9.continue -> continue_1914e0\n    }\n\n    \n\n    instance(x: 115, y: 49) first_repeated_char_c4c14b root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 0, y: 1) characters_9ab4cb root.Std_k98ojb.Strings.Characters {}\n        instance(x: 133, y: 12, name: \"occurrence\") count_2b3a74 root.Std_k98ojb.Std.Count {}\n        instance(x: 113, y: 185, name: \"character\") filter_2baa4e root.Std_k98ojb.Query.Filter {\n            where: \"it == occurrence.item\"\n        }\n        instance(x: 106, y: 327, name: \"first\") find_3f87c5 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 105, y: 256, name: \"set\") setter_1ba2dc root.Std_k98ojb.Setting.Setter {}\n        string_71a657 -> characters_9ab4cb.input\n        characters_9ab4cb.characters -> count_2b3a74.input\n        characters_9ab4cb.characters -> filter_2baa4e.list\n        characters_9ab4cb.characters -> find_3f87c5.items\n        execute_97d5d5 -> count_2b3a74.reset\n        count_2b3a74.count -> setter_1ba2dc.execute\n        characters_9ab4cb.characters -> setter_1ba2dc.items\n        filter_2baa4e.result -> count_2b3a74.input\n        count_2b3a74.count -> find_3f87c5.predicate\n        setter_1ba2dc.continue -> continue_1914e0\n        find_3f87c5.item -> char_f2523c\n    }\n\n    \n\n    instance(x: -9, y: -101) first_repeated_char_9f63fd root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 0, y: 0) find_7e09f6 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 111, y: 107) contains_9d7e3b root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) tocharacters_3f4b9d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1282, y: 0) setitem_9b8a6c root.Std_k98ojb.List.SetItem {}\n        data_instance(x: 1364, y: 0) data_1c5a82  = [found, list]\n        instance(x: 1032, y: 0) listcontains_f4ed4a root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) if_9ec5a2 root.Std_k98ojb.Std.If {}\n        data_1c5a82 -> setitem_9b8a6c.data\n        string_71a657 -> tocharacters_3f4b9d.input\n        tocharacters_3f4b9d.characters -> find_7e09f6.items\n        find_7e09f6.index -> setitem_9b8a6c.index\n        1 -> setitem_9b8a6c.new_value\n        listcontains_f4ed4a.result -> if_9ec5a2.predicate\n        find_7e09f6.item -> listcontains_f4ed4a.item\n        data_1c5a82.list -> listcontains_f4ed4a.list\n        listcontains_f4ed4a.result -> data_1c5a82.found\n        find_7e09f6.item -> contains_9d7e3b.contains\n        contains_9d7e3b.result -> if_9ec5a2.predicate\n        data_1c5a82 -> find_7e09f6.predicate\n        data_1c5a82.list -> find_7e09f6.items\n        execute_97d5d5 -> find_7e09f6.execute\n        if_9ec5a2.else -> find_7e09f6.next\n        find_7e09f6.done -> continue_1914e0\n        if_9ec5a2.then -> continue_1914e0\n        find_7e09f6.item -> char_f2523c\n    }\n\n    \n\n    instance(x: -30, y: 34) first_repeated_char_a8e9b1 root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 1023, y: 358) setter_ea9c51 root.Std_k98ojb.Std.Setter {}\n        instance(x: 1266, y: 183) instance_1f56f6 root.Std_k98ojb.Iteration.Map {\n            handler: \"Std.If(it % 2 == 0, Std.Setter(it, 'Even'), Std.Setter(it, 'Odd'))\"\n        }\n        instance(x: 0, y: 0) get_characters_0f8d2e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1054, y: 196) find_0a6a2d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 1185, y: 350) firstitem_71f8b9 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 1314, y: 354) contains_4e0d9c root.Std_k98ojb.List.Contains {}\n        instance(x: 1435, y: 187) if_0f85a6 root.Std_k98ojb.Std.If {}\n        setter_ea9c51.continue -> continue_1914e0\n        execute_97d5d5 -> setter_ea9c51.execute\n        get_characters_0f8d2e.characters -> instance_1f56f6.items\n        instance_1f56f6.output_list -> find_0a6a2d.items\n        find_0a6a2d.item -> firstitem_71f8b9.list\n        find_0a6a2d.predicate -> contains_4e0d9c.item\n        find_0a6a2d.predicate -> if_0f85a6.predicate\n        find_0a6a2d.item -> if_0f85a6.then\n        firstitem_71f8b9.item -> char_f2523c\n        contains_4e0d9c.list -> instance_1f56f6.output_list\n        string_71a657 -> get_characters_0f8d2e.input\n        if_0f85a6.else -> continue_1914e0\n        if_0f85a6.then -> setter_ea9c51.execute\n    }\n\n    \n\n    instance(x: 28, y: 35) first_repeated_char_7a5a0c root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 0, y: 0) find_3f1d7e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 1136, y: 340, name: \"current\") find_5b77f7 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 1295, y: 340, name: \"index\") expression_2fde4e root.Std_k98ojb.Math.Expression {\n            expression: \"getIndex(it)\"\n        }\n        instance(x: 0, y: 0) getcharacters_8f63bf root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1103, y: 178, name: \"prev\") getcharacters_91e6ea root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1178, y: 178, name: \"check\") contains_6ed5e9 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 1099, y: 0) expression_31aa6b root.Std_k98ojb.Math.Expression {\n            expression: \"return true\"\n        }\n        instance(x: 0, y: 0) setter_4a4f57 root.Std_k98ojb.Setting.Setter {\n            variable: \"local_chars\"\n        }\n        instance(x: 0, y: 0) if_7d9c71 root.Std_k98ojb.Std.If {}\n        instance(x: 1145, y: 178) not_21b9dc root.Std_k98ojb.Logic.Not {}\n        instance(x: 0, y: 0) if_4e1e6a root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) if_1a9dcd root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) expression_31b1d4 root.Std_k98ojb.Math.Expression {\n            expression: \"return false\"\n        }\n        expression_31aa6b.result -> if_7d9c71.predicate\n        setter_4a4f57.execute -> if_7d9c71.execute\n        setter_4a4f57.continue -> find_3f1d7e.execute\n        execute_97d5d5 -> setter_4a4f57.execute\n        string_71a657 -> getcharacters_8f63bf.input\n        getcharacters_8f63bf.characters -> setter_4a4f57.new_value\n        find_3f1d7e.items -> find_5b77f7.items\n        find_3f1d7e.index -> expression_2fde4e.gen_0\n        expression_2fde4e.result -> expression_31b1d4.gen_0\n        find_5b77f7.index -> getcharacters_91e6ea.index\n        find_5b77f7.item -> getcharacters_91e6ea.item\n        if_7d9c71.then -> find_3f1d7e.predicate\n        expression_31b1d4.result -> if_7d9c71.else\n        if_7d9c71.else -> if_1a9dcd.execute\n        getcharacters_91e6ea.characters -> check.input\n        find_5b77f7.item -> check.contains\n        check.result -> not_21b9dc.input\n        not_21b9dc.result -> if_4e1e6a.predicate\n        if_4e1e6a.then -> if_1a9dcd.predicate\n        if_4e1e6a.else -> if_1a9dcd.else\n        if_1a9dcd.then -> find_3f1d7e.predicate\n        if_1a9dcd.else -> find_3f1d7e.index\n        if_1a9dcd.execute -> find_3f1d7e.execute\n        find_5b77f7.item -> char_f2523c\n        find_3f1d7e.item -> continue_1914e0\n    }\n\n    \n\n    instance(x: -1, y: 8) first_repeated_char_7c6e92 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 0, y: 0) characters_2a0db8 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -46, y: 95) count_7f4c1b root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 1) if_4b7b9e root.Std_k98ojb.Std.If {}\n        instance(x: 109, y: 103) find_7e7f4a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 108, y: 232) if_1ebe93 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 3) setitem_ae7c9b root.Std_k98ojb.List.SetItem {}\n        instance(x: 100, y: 302) getat_f7b76f root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 5) concat_c3f85f root.Std_k98ojb.List.Concat {}\n        instance(x: 0, y: 7) contains_93a5b5 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 9) empty_1c7d61 root.Std_k98ojb.List.Empty {}\n        instance(x: 0, y: 11) add_0e8c8f root.Std_k98ojb.List.Add {}\n        string_71a657 -> characters_2a0db8.input\n        execute_97d5d5 -> count_7f4c1b.reset\n        count_7f4c1b.count -> if_4b7b9e.execute\n        count_7f4c1b.value -> if_4b7b9e.predicate\n        characters_2a0db8.characters -> find_7e7f4a.items\n        if_4b7b9e.then -> find_7e7f4a.trigger\n        count_7f4c1b.count -> find_7e7f4a.index\n        0 -> find_7e7f4a.onItem\n        func() {\n            in(x: 57, y: 147, name: \"item\") property(Any) item_b8f8f8\n\n            out(x: 694, y: 151, name: \"bool\") property(Bool) bool_93e6cc\n\n            instance(x: 145, y: 141) getat_8a2ba4 root.Std_k98ojb.List.GetAt {}\n            instance(x: 412, y: 154) contains_7ec2f6 root.Std_k98ojb.List.Contains {}\n            instance(x: 610, y: 151) notequal_4eae6c root.Std_k98ojb.Logic.NotEqual {}\n            item_b8f8f8 -> getat_8a2ba4.item\n            0 -> getat_8a2ba4.index\n            getat_8a2ba4.valueAtIndex -> contains_7ec2f6.list\n            item_b8f8f8 -> contains_7ec2f6.item\n            contains_7ec2f6.contains -> notequal_4eae6c.left\n            true -> notequal_4eae6c.right\n            notequal_4eae6c.result -> bool_93e6cc\n        } -> find_7e7f4a.predicate\n        find_7e7f4a.item -> setitem_ae7c9b.item\n        find_7e7f4a.item -> getat_f7b76f.item\n        find_7e7f4a.item -> if_1ebe93.predicate\n        0 -> setitem_ae7c9b.index\n        getat_f7b76f.list -> concat_c3f85f.list\n        empty_1c7d61.list -> concat_c3f85f.list_1\n        concat_c3f85f.concat -> setitem_ae7c9b.list\n        getat_f7b76f.valueAtIndex -> add_0e8c8f.item\n        concat_c3f85f.concat -> contains_93a5b5.list\n        find_7e7f4a.item -> contains_93a5b5.item\n        if_1ebe93.then -> continue_1914e0\n        if_1ebe93.else -> find_7e7f4a.trigger\n        find_7e7f4a.done -> if_1ebe93.execute\n        setitem_ae7c9b.list -> char_f2523c\n    }\n\n    \n\n    instance(x: 8, y: 10) find_first_repeated_char_3f4f0a root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 0, y: -11, name: \"characters\") characters_9d8a2d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1244, y: 185, name: \"contains\") contains_0d2e96 root.Std_k98ojb.List.Contains {}\n        instance(x: 1244, y: 334, name: \"remove\") remove_92dbb3 root.Std_k98ojb.List.Remove {}\n        instance(x: 1244, y: 483, name: \"add\") add_8f48ef root.Std_k98ojb.List.Add {}\n        instance(x: 1244, y: 632, name: \"append\") append_8d94a1 root.Std_k98ojb.List.Concat {}\n        instance(x: 1244, y: 781, name: \"loop\") for_1b4c2d root.Std_k98ojb.Std.For {}\n        instance(x: 1244, y: 930, name: \"reset\") count_1a9ea9 root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 229, name: \"output\") if_7cf2dc root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 378, name: \"ifelse\") ifexpression_9a3ee7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a\"\n        }\n        string_71a657 -> characters_9d8a2d.input\n        execute_97d5d5 -> count_1a9ea9.reset\n        characters_9d8a2d.characters -> for_1b4c2d.items\n        for_1b4c2d.onItem -> contains_0d2e96.execute\n        for_1b4c2d.item -> contains_0d2e96.item\n        for_1b4c2d.onItem -> remove_92dbb3.execute\n        for_1b4c2d.item -> remove_92dbb3.index\n        for_1b4c2d.item -> remove_92dbb3.item\n        for_1b4c2d.onItem -> add_8f48ef.execute\n        for_1b4c2d.item -> add_8f48ef.item\n        for_1b4c2d.onItem -> append_8d94a1.execute\n        contains_0d2e96.contains -> if_7cf2dc.predicate\n        if_7cf2dc.then -> continue_1914e0\n        remove_92dbb3.listWithoutItem -> append_8d94a1.left\n        add_8f48ef.listWithItem -> append_8d94a1.right\n        append_8d94a1.concat -> for_1b4c2d.next\n        contains_0d2e96.contains -> ifexpression_9a3ee7.gen_0\n        ifexpression_9a3ee7.then -> for_1b4c2d.next\n        for_1b4c2d.item -> ifexpression_9a3ee7.a\n        ifexpression_9a3ee7.else -> char_f2523c\n        for_1b4c2d.done -> continue_1914e0\n    }\n\n    \n\n    instance(x: 132, y: 29) first_repeated_char_4c3db9 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -20, y: -110, name: \"execute\") trigger() execute_97d5d5\n        in(x: -216, y: 83, name: \"string\") property(String) string_71a657\n\n        out(x: 1545, y: 186, name: \"continue\") trigger() continue_1914e0\n        out(x: 904, y: 359, name: \"char\") property(Any) char_f2523c\n\n        instance(x: 0, y: 0) mapper_21b0bf root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -143, y: 32, name: \"current\") property(Any) current_0f0c9e\n\n            out(x: 1189, y: 35, name: \"bool\") property(Bool) bool_a8d5b1\n\n            instance(x: 0, y: 0) contains_9a3a5f root.Std_k98ojb.Strings.Contains {}\n            list_5d5baf -> contains_9a3a5f.contains\n            current_0f0c9e -> contains_9a3a5f.input\n            contains_9a3a5f.result -> bool_a8d5b1\n        } -> mapper_21b0bf.handler\n        instance(x: 114, y: -12) characters_7a1a55 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 107, y: 100) find_0c8b6c root.Std_k98ojb.Iteration.Find {}\n        characters_7a1a55.characters -> mapper_21b0bf.items\n        execute_97d5d5 -> characters_7a1a55.execute\n        mapper_21b0bf.output_list -> list_5d5baf\n        list_5d5baf -> find_0c8b6c.items\n        func() {\n            in(x: -143, y: 32, name: \"current\") property(Bool) current_9aebc0\n\n            out(x: 1189, y: 35, name: \"bool\") property(Bool) bool_0a7d5f\n\n            1 -> bool_0a7d5f\n        } -> find_0c8b6c.predicate\n        find_0c8b6c.item -> char_f2523c\n        characters_7a1a55.string -> string_71a657\n        find_0c8b6c.done -> continue_1914e0\n    }\n\n    \n\n    instance(x: -29, y: -85) first_repeated_char_74e8c6 root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        instance(x: 0, y: 0, name: \"Min\") min_f8d1f8 root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0, name: \"List\") filter_6d8eb9 root.Std_k98ojb.Query.Filter {}\n        instance(x: 0, y: 0) for_7e90da root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) ``Min_0`` root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) notequal_6ec5d4 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 0, y: 0) setter_4bae87 root.Std_k98ojb.List.Set {}\n        getter(x: 0, y: 0, name: \"getter_1a3db6\") getter_1a3db6 = output\n        setter(x: 0, y: 0, name: \"setter_8a2d7c\") setter_8a2d7c = output\n        getter_1a3db6.value -> output_ad16ae\n        list_56d273 -> min_f8d1f8.items\n        min_f8d1f8.min -> filter_6d8eb9.gen_1\n        list_56d273 -> filter_6d8eb9.list\n        where_expression_7e90da_left_7e90da_2b1a6e -> filter_6d8eb9.where\n        where_expression_7e90da_right_7e90da_2b1a6e -> filter_6d8eb9.gen_0\n        filter_6d8eb9.result -> for_7e90da.items\n        execute_c23a43 -> for_7e90da.trigger\n        for_7e90da.done -> continue_642adb\n        where_expression_7e90da_left_7e90da_2b1a6e -> notequal_6ec5d4.left\n        for_7e90da.item -> notequal_6ec5d4.right\n        notequal_6ec5d4.result -> ``Min_0``.items\n        ``Min_0``.min -> setter_4bae87.new_value\n        for_7e90da.onItem -> setter_4bae87.execute\n        setter_4bae87.continue -> continue_642adb\n        setter_8a2d7c.new_value -> output_ad16ae\n        ``Min_0``.min -> setter_8a2d7c.execute\n        setter_8a2d7c.continue -> continue_642adb\n    }\n\n    \n\n    instance(x: 1029, y: 296) second_smallest_1b0d0f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        instance(x: -110, y: -30) filter_f0e1fc root.Std_k98ojb.Query.Filter {}\n        func() {\n            in(x: -127, y: 23, name: \"x\") property(Number) x_a1f8e4\n\n            out(x: 482, y: 22, name: \"\") property(Bool) _c2c3e2\n\n            instance(x: 92, y: 18) lessthanan_4f4b8b root.Std_k98ojb.Math.LessThanOrEqual {}\n            instance(x: 392, y: 28) not_2a5a70 root.Std_k98ojb.Logic.Not {}\n            x_a1f8e4 -> lessthanan_4f4b8b.left\n            min -> lessthanan_4f8b8b.right\n            lessthanan_4f4b8b.result -> not_2a5a70.value\n            not_2a5a70.result -> _c2c3e2\n        } -> filter_f0e1fc.where\n        instance(x: -110, y: -142) min_0a5f5d root.Std_k98ojb.List.Min {}\n        instance(x: 107, y: -15) if_5d7d2d root.Std_k98ojb.Std.If {}\n        instance(x: 102, y: 108) getat_6e0c0e root.Std_k98ojb.List.GetAt {}\n        instance(x: 102, y: 215) firstitem_1b3b0b root.Std_k98ojb.List.FirstItem {}\n        instance(x: -140, y: 103) len_9d5b2b root.Std_k98ojb.List.Length {}\n        instance(x: -111, y: -216) min_0f8eb9 root.Std_k98ojb.List.Min {}\n        instance(x: -245, y: 84, name: \"min\") property_Number min_9dc0c6",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        instance(x: -107, y: 41) ifexpression_c2f2c9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"len(list) < 2\"\n        }\n        data_instance(x: 0, y: 0) data_5d8c8c  = [continue, second_smallest]\n        instance(x: -110, y: 188) min_d3b2bf root.Std_k98ojb.List.Min {}\n        instance(x: 2, y: -22) list_9d6e6e root.Std_k98ojb.List.Remove {}\n        instance(x: -110, y: 312) min_8e7c66 root.Std_k98ojb.List.Min {}\n        list_56d273 -> min_d3b2bf.items\n        min_d3b2bf.min -> data_5d8c8c.second_smallest\n        list_56d273 -> list_9d6e6e.list\n        0 -> list_9d6e6e.index\n        list_9d6e6e.listWithoutItem -> min_8e7c66.items\n        min_8e7c66.min -> output_ad16ae\n        ifexpression_c2f2c9.then -> data_5d8c8c.continue\n        ifexpression_c2f2c9.else -> data_5d8c8c.continue\n        execute_c23a43 -> ifexpression_c2f2c9.execute\n        data_5d8c8c.continue -> continue_642adb\n    }\n\n    \n\n    instance(x: 111, y: 147) second_smallest_12c0cc root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        data_instance(x: 0, y: 0) data_b5d24e  = [min, second, rest]\n        instance(x: 0, y: 0) find_0b2e9d root.Std_k98ojb.Iteration.Find {}\n        instance(x: -42, y: -23, name: \"sort\") sort_9e3a3c root.Std_k98ojb.List.Sort {}\n        instance(x: -47, y: 111, name: \"get at index 1\") getat_4f7d04 root.Std_k98ojb.List.GetAt {}\n        getter(x: 0, y: 0, name: \"getter_a7f7c2\") getter_a7f7c2 = second\n        setter(x: 0, y: 0, name: \"setter_d2f2b4\") setter_d2f2b4 = min\n        setter(x: 0, y: 0, name: \"setter_5f8f9e\") setter_5f8f9e = second\n        getter(x: 0, y: 0, name: \"getter_f1d5f2\") getter_f1d5f2 = rest\n        list_56d273 -> sort_9e3a3c.list\n        sort_9e3a3c.sorted -> data_b5d24e.rest\n        data_b5d24e.rest -> find_0b2e9d.items\n        func() {\n            in(x: -122, y: -2, name: \"elem\") property(Number) elem_eab4d2\n\n            out(x: 525, y: 0, name: \"bool\") property(Bool) bool_71b79b\n\n            instance(x: 110, y: -13) equal_8f9d3d root.Std_k98ojb.Logic.Equal {}\n            setter_d2f2b4.value -> equal_8f9d3d.left\n            elem_eab4d2 -> equal_8f9d3d.right\n            equal_8f9d3d.result -> bool_71b79b\n        } -> find_0b2e9d.predicate\n        find_0b2e9d.item -> setter_5f8f9e.new_value\n        execute_c23a43 -> setter_d2f2b4.execute\n        -1000 -> setter_d2f2b4.new_value\n        find_0b2e9d.item -> getat_4f7d04.index\n        data_b5d24e.rest -> getat_4f7d04.list\n        getat_4f7d04.item -> output_ad16ae\n        getter_a7f7c2.value -> setter_5f8f9e.new_value\n        continue_642adb -> getter_f1d5f2.execute\n    }\n\n    \n\n    instance(x: 107, y: 117) second_smallest_1c5d3e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        instance(x: 3, y: -33) sort_cfe6b7 root.Std_k98ojb.List.Sort {}\n        instance(x: 237, y: 92) getat_fda1a6 root.Std_k98ojb.List.GetAt {}\n        instance(x: 472, y: 85) getat_6d9f5f root.Std_k98ojb.List.GetAt {}\n        instance(x: 696, y: 90) notempty_e1cf9a root.Std_k98ojb.List.NotEmpty {}\n        list_56d273 -> sort_cfe6b7.list\n        sort_cfe6b7.sorted -> getat_fda1a6.list\n        0 -> getat_fda1a6.index\n        getat_fda1a6.item -> getat_6d9f5f.list\n        1 -> getat_6d9f5f.index\n        getat_6d9f5f.item -> output_ad16ae\n        sort_cfe6b7.sorted -> notempty_e1cf9a.list\n        execute_c23a43 -> sort_cfe6b7.execute\n        notempty_e1cf9a.isEmpty -> continue_642adb\n    }\n\n    \n\n    instance(x: -34, y: 109) second_smallest_8c3b8c root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        instance(x: -118, y: 64, name: \"Set min1\") setter_ebe9c1 root.Std_k98ojb.List.Set {\n            index: 0\n        }\n        instance(x: -118, y: 155, name: \"Set min2\") setter_1f5b40 root.Std_k98ojb.List.Set {\n            index: 1\n        }\n        instance(x: -121, y: -16, name: \"Reset min2\") setter_1ebeaa root.Std_k98ojb.List.Set {\n            index: 1\n        }\n        instance(x: 0, y: 0, name: \"Find min1\") find_2d3ea5 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0, name: \"Find min2\") ``Find min1_5d7b6e`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: -129, y: 155, name: \"Compare min1 min2\") if_5eb1d0 root.Std_k98ojb.Std.If {}\n        instance(x: -122, y: 263, name: \"Set min2\") setter_7f1c7e root.Std_k98ojb.List.Set {\n            index: 1\n        }\n        instance(x: -117, y: 354, name: \"Compare min1 current\") if_ea3f3e root.Std_k98ojb.Std.If {}\n        instance(x: -119, y: 452, name: \"Set min2\") setter_3e9fa8 root.Std_k98ojb.List.Set {\n            index: 1\n        }\n        instance(x: 95, y: 288, name: \"Getter\") getter_2f48e9 root.Std_k98ojb.List.GetAt {}\n        list_56d273 -> find_2d3ea5.items\n        list_56d273 -> ``Find min1_5d7b6e``.items\n        func() {\n            in(x: -138, y: 112, name: \"elem\") property(Any) elem_ebdc5c\n\n            out(x: 469, y: 111, name: \"bool\") property(Bool) bool_ae95c6\n\n            instance(x: 39, y: 97) notequal_a9a5d8 root.Std_k98ojb.Logic.NotEqual {}\n            elem_ebdc5c -> notequal_a9a5d8.left\n            2 -> notequal_a9a5d8.right\n            notequal_a9a5d8.result -> bool_af09a7\n        } -> find_2d3ea5.predicate\n        func() {\n            in(x: -138, y: 112, name: \"elem\") property(Any) elem_ebdc5c\n\n            out(x: 469, y: 111, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 39, y: 97) greaterthan_4d8e16 root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: 239, y: 109) notequal_7b9b73 root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 430, y: 108) notequal_7b9b73_4f54d6 root.Std_k98ojb.Logic.NotEqual {}\n            elem_ebdc5c -> greaterthan_4d8e16.left\n            getter_2f48e9.value -> greaterthan_4d8e16.right\n            greaterthan_4d8e16.result -> notequal_7b9b73.left\n            0 -> notequal_7b9b73.right\n            getter_2f48e9.value -> notequal_7b9b73_4f54d6.left\n            2 -> notequal_7b9b73_4f54d6.right\n            notequal_7b9b73.result -> notequal_7b9b73_4f54d6.and\n            notequal_7b9b73_4f54d6.result -> bool_af09a7\n        } -> ``Find min1_5d7b6e``.predicate\n        list_56d273 -> getter_2f48e9.list\n        0 -> getter_2f48e9.index\n        execute_c23a43 -> setter_ebe9c1.execute\n        find_2d3ea5.item -> setter_ebe9c1.new_value\n        list_56d273 -> getter_2f48e9.list\n        0 -> getter_2f48e9.index\n        setter_ebe9c1.continue -> setter_1ebeaa.execute\n        -1 -> setter_1ebeaa.new_value\n        list_56d273 -> getter_2f48e9.list\n        1 -> getter_2f48e9.index\n        getter_2f48e9.value -> if_5eb1d0.input\n        list_56d273 -> ``Find min1_5d7b6e``.items\n        ``Find min1_5d7b6e``.item -> if_ea3f3e.left\n        getter_2f48e9.value -> if_ea3f3e.right\n        if_5eb1d0.else -> ``Find min1_5d7b6e``.onItem\n        ``Find min1_5d7b6e``.onItem -> if_ea3f3e.execute\n        if_ea3f3e.else -> setter_1f5b40.execute\n        if_5eb1d0.then -> setter_7f1c7e.execute\n        find_2d3ea5.item -> setter_1f5b40.new_value\n        getter_2f48e9.value -> setter_1f5b40.new_value\n        if_ea3f3e.then -> setter_3e9fa8.execute\n        ``Find min1_5d7b6e``.item -> setter_3e9fa8.new_value\n        setter_ebe9c1.continue -> continue_642adb\n        setter_1f5b40.continue -> continue_642adb\n        setter_7f1c7e.continue -> continue_642adb\n        setter_3e9fa8.continue -> continue_642adb\n        getter_2f48e9.value -> output_ad16ae\n    }\n\n    \n\n    instance(x: 123, y: -19) second_smallest_5e7e0e root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        instance(x: 0, y: 0) find_0d2ec7 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -137, y: -3) sort_a65b7c root.Std_k98ojb.List.Sort {}\n        instance(x: 74, y: 56) getat_f6d3c8 root.Std_k98ojb.List.GetAt {}\n        instance(x: 89, y: -3) firstitem_ea98f0 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 0, y: 0) remove_d3d7e8 root.Std_k98ojb.List.Remove {}\n        func() {\n            in(x: -111, y: 64, name: \"num\") property(Number) num_9e0ba7\n\n            out(x: 508, y: 65, name: \"\") property(Bool) _6a3d6f\n\n            instance(x: 69, y: 74) ``greater than``_9a1a4e\n        <fonte>",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        data_instance(x: -101, y: 45) data_a71e2d  = [list, first, second, index]\n        instance(x: 0, y: 0) for_6e7c88 root.Std_k98ojb.Std.For {}\n        instance(x: -91, y: -11, name: \"Min\") min_cdc0dc root.Std_k98ojb.List.Min {}\n        setter(x: 0, y: 0, name: \"setter_aefb92\") setter_aefb92 = first\n        instance(x: -99, y: 95) getat_2a6f2c root.Std_k98ojb.List.GetAt {}\n        instance(x: -109, y: 135, name: \"Second min\") ``Min_9fc1b2`` root.Std_k98ojb.List.Min {}\n        instance(x: -99, y: 180) getat_fba4ae root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) ifexpression_9b05d9 root.Std_k98ojb.Std.IfExpression {}\n        getter(x: 0, y: 0, name: \"getter_d6d8a1\") getter_d6d8a1 = second\n        instance(x: 0, y: 0) equal_5f2d0f root.Std_k98ojb.Logic.Equal {}\n        setter(x: 0, y: 0, name: \"setter_b0ab2e\") setter_b0ab2e = second\n        instance(x: 0, y: 0) if_6e8f48 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 0) add_6a2e1c root.Std_k98ojb.Math.Add {}\n        list_56d273 -> for_6e7c88.items\n        data_a71e2d.list -> for_6e7c88.items\n        execute_c23a43 -> for_6e7c88.trigger\n        for_6e7c88.index -> data_a71e2d.index\n        for_6e7c88.onItem -> ifexpression_9b05d9.execute\n        data_a71e2d.list -> ifexpression_9b05d9.gen_0\n        data_a71e2d.index -> ifexpression_9b05d9.gen_1\n        ifexpression_9b05d9.then -> getat_2a6f2c.index\n        ifexpression_9b05d9.then -> getat_2a6f2c.list\n        getat_2a6f2c.item -> min_cdc0dc.items\n        data_a71e2d.list -> getat_fba4ae.list\n        ifexpression_9b05d9.else -> getat_fba4ae.index\n        for_6e7c88.index -> getat_fba4ae.index\n        min_cdc0dc.min -> data_a71e2d.first\n        getter_d6d8a1.value -> second\n        second -> equal_5f2d0f.right\n        getat_fba4ae.item -> equal_5f2d0f.left\n        equal_5f2d0f.result -> if_6e8f48.predicate\n        if_6e8f48.else -> ``Min_9fc1b2``.items\n        ``Min_9fc1b2``.min -> getter_d6d8a1.value\n        if_6e8f48.then -> add_6a2e1c.first\n        data_a71e2d.first -> add_6a2e1c.first\n        1 -> add_6a2e1c.second\n        add_6a2e1c.result -> setter_b0ab2e.new_value\n        if_6e8f48.then -> setter_b0ab2e.execute\n        for_6e7c88.done -> continue_642adb\n        getter_d6d8a1.value -> output_ad16ae\n        setter_aefb92.continue -> continue_642adb\n        setter_b0ab2e.continue -> continue_642adb\n    }\n\n    \n\n    instance(x: 127, y: 146) second_smallest_6f3b9f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n\n        instance(x: 1126, y: 145) map_1b8c5f root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n            x_8ee839 -> pow_584bfd.x\n            3 -> pow_584bfd.y\n            pow_584bfd.result -> _7dd980\n        } -> map_1b8c5f.handler\n        list_56d273 -> map_1b8c5f.items\n        instance(x: 1204, y: 281) min_9c3f81 root.Std_k98ojb.List.Min {}\n        map_1b8c5f.output_list -> min_9c3f81.items\n        min_9c3f81.min -> output_ad16ae\n        execute_c23a43 -> map_1b8c5f.execute\n        map_1b8c5f.done -> continue_642adb\n    }\n\n    \n\n    instance(x: 103, y: 45) second_smallest_5f6e2a root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -52, y: 85, name: \"list\") property(List) list_56d273\n        in(x: -244, y: -39, name: \"execute\") trigger() execute_c23a43\n        out(x: 1025, y: 145, name: \"continue\") trigger() continue_642adb\n        out(x: 1026, y: 287, name: \"output\") property(Any) output_ad16ae\n        data_instance(x: 10, y: 4) data_2e5a53  = [min, second]\n        instance(x: 0, y: 0) for_b4b2ba root.Std_k98ojb.Std.For {}\n        instance(x: -228, y: -11) firstitem_92f7b9 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -230, y: -107) lastitem_eb5f82 root.Std_k98ojb.List.LastItem {}\n        instance(x: -221, y: -205) min_5f1b5d root.Std_k98ojb.List.Min {}\n        instance(x: 10, y: -184) filter_1e3b42 root.Std_k98ojb.Query.Filter {\n            where: \"it != min\"\n        }\n        instance(x: 8, y: -267) list_4d0e1c root.Std_k98ojb.List.Min {}\n        instance(x: -229, y: 0) min_1fc9e4 root.Std_k98ojb.List.Min {}\n        instance(x: 12, y: -107) setter_5d7e92 root.Std_k98ojb.Setter {}\n        instance(x: -220, y: -105) setter_46e3c9 root.Std_k98ojb.Setter {}\n        data_2e5a53 -> min_5f1b5d.items\n        data_2e5a53 -> filter_1e3b42.list\n        min_5f1b5d.min -> firstitem_92f7b9.list\n        firstitem_92f7b9.item -> data_2e5a53.min\n        list_56d273 -> for_b4b2ba.items\n        execute_c23a43 -> for_b4b2ba.trigger\n        data_2e5a53.min -> lastitem_eb5f82.value\n        lastitem_eb5f82.list -> list_4d0e1c.items\n        filter_1e3b42.result -> list_4d0e1c.items\n        list_4d0e1c.min -> data_2e5a53.second\n        for_b4b2ba.onItem -> min_1fc9e4.items\n        data_2e5a53.second -> setter_46e3c9.new_value\n        for_b4b2ba.index -> setter_46e3c9.execute\n        min_1fc9e4.min -> setter_5d7e92.new_value\n        for_b4b2ba.item -> min_1fc9e4.items\n        for_b4b2ba.index -> setter_5d7e92.execute\n        continue_642adb -> for_b4b2ba.reset\n        data_2e5a53.second -> output_ad16ae\n        min_1fc9e4.min < data_2e5a53.second -> setter_46e3c9.execute\n        setter_5d7e92.continue -> continue_642adb\n        setter_46e3c9.continue -> continue_642adb\n    }\n\n    instance(x: 106, y: 143) second_smallest_2e2fa5 root.main.second_smallest {}\n}"
            ]
        }
    }
]