[
    {
        "experiment_name": "regular_RAG_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 15910,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -505, y: 59, name: \"list1\") property(List) list_2e3f6d\n        in(x: -513, y: -230, name: \"list2\") property(List) list_b5b8a4\n\n        out(x: 1069, y: 19, name: \"output\") property(Bool) output_f1c43c\n\n        instance(x: 744, y: 100) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -69, y: 23) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -26, y: -16, name: \"current\") property(Number) _index_8e5f3d\n            in(x: -13, y: 80, name: \"_index\") property(Number) _index_9a55eb\n\n            out(x: 1152, y: 28, name: \"output\") property(Bool) output_e7b4f1\n\n            instance(x: 262, y: 77) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n            instance(x: -104, y: 66) not_75283f.root = contains_32727d\n            instance(x: 292, y: 75) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n                expression: \"not_75283f.result\"\n            }\n            instance(x: -33, y: 89) contains_32727d.item -> map_c73e3b.handler\n            list_b5b8a4 -> map_c73e3b.items\n            map_c73e3b.output_list -> ifexpression_875761.gen_0\n            map_c73e3b.output_list -> not_75283f.input\n            not_75283f.result -> output_e7b4f1\n        } -> contains_32727d.execute\n        list_b5b8a4 -> contains_32727d.list\n        0 -> contains_32727d.index\n        contains_32727d.is_contained -> output_f1c43c\n    }\n\n    \n\n    instance(x: -11, y: 65) has_common_element_d3e6b2 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -509, y: 12, name: \"list1\") property(List) list_0e3f8d\n        in(x: -527, y: 23, name: \"list2\") property(List) list_ba9c62\n\n        out(x: 1094, y: 24, name: \"output\") property(Bool) output_7b6da5\n\n        instance(x: 1053, y: 78) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -139, y: 49) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 246, y: 52) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 760, y: 44) ifexpression_d5a9d2 root.Std_k98ojb.Std.IfExpression {}\n        list_ba9c62 -> map_c73e3b.items\n        list_0e3f8d -> contains_32727d.list\n        map_c73e3b.output_list -> not_75283f.input\n        1 -> not_75283f.item\n        ifexpression_d5a9d2.expression: \"contains_32727d.is_contained\"\n        list_ba9c62 -> ifexpression_d5a9d2.left\n        list_0e3f8d -> ifexpression_d5a9d2.right\n        not_75283f.result -> output_7b6da5\n        contains_32727d.is_contained -> ifexpression_d5a9d2.value\n    }\n\n    \n\n    instance(x: 93, y: -186) has_common_element_a3c55e root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -538, y: 20, name: \"list1\") property(List) list_0f71d5\n        in(x: -553, y: 57, name: \"list2\") property(List) list_a7c9b6\n\n        out(x: 1263, y: -28, name: \"output\") property(Bool) output_ba8e34\n\n        instance(x: 261, y: 69) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1005, y: 45) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: -43, y: -25) orElse_1c3a2e root.Std_k98ojb.Std.OrElse {}\n\n        func() {\n            in(x: -22, y: 56, name: \"current\") property(Number) _index_9f5d6b\n            in(x: -21, y: 72, name: \"_index\") property(Number) _index_b4e2b8\n\n            out(x: 1133, y: 39, name: \"output\") property(Bool) output_e7c1eb\n\n            instance(x: 115, y: 63) contains_32727d.root.Std_k98ojb.List.Contains {}\n            list_a7c9b6 -> contains_32727d.items\n            _index_b4e2b8 -> contains_32727d.index\n            contains_32727d.is_contained -> orElse_1c3a2e.input\n            false -> orElse_1c3a2e.second\n        } -> has_common_element.handler\n        list_a7c9b6 -> has_common_element.items\n        _index_b4e2b8 -> has_common_element.index\n        contains_32727d.is_contained -> orElse_1c3a2e.input\n    }\n\n    \n\n    instance(x: 121, y: -162) has_common_element_0f5dd7 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -456, y: 13, name: \"list1\") property(List) list_0d4a8f\n        in(x: -478, y: 20, name: \"list2\") property(List) list_e6d9c5\n\n        out(x: 1107, y: -18, name: \"output\") property(Bool) output_b7b1af\n\n        instance(x: 102, y: 44) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 262, y: 35) filter_9c8f0a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -144, y: -43) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 341, y: 38) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -21, y: 19, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_9c8f0a.handler\n        list_e6d9c5 -> filter_9c8f0a.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list_e6d9c5 -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_b7b1af\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_6c9e9 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -469, y: 56, name: \"list1\") property(List) list_0e8f6d\n        in(x: -488, y: 12, name: \"list2\") property(List) list_c9b3c7\n\n        out(x: 1294, y: 18, name: \"output\") property(Bool) output_e83a34\n\n        instance(x: 734, y: 70) intersection_6f9d5a root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -13, y: 47) contains_6e8f20 root.Std_k98ojb.List.Contains {}\n        instance(x: 242, y: 50) not_0d7c45 root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -38, y: 25, name: \"current\") property(Number) _index_9e0a5f\n            in(x: -40, y: 83, name: \"_index\") property(Number) _index_7d6c31\n\n            out(x: 1281, y: 10, name: \"output\") property(Bool) output_d4b2db\n\n            instance(x: 233, y: 44) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 462, y: 38) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_d4b2db\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_7d6c31 -> modulo_c76d2b.value\n        } -> intersection_6f9d5a.handler\n        list_c9b3c7 -> intersection_6f9d5a.items\n        func() {\n            in(x: -213, y: 24) contains_6e8f20.execute()\n        } -> contains_6e8f20.input\n        list_c9b3c7 -> contains_6e8f20.item\n        false -> output_d4b2db\n        contains_6e8f20.is_contained -> not_0d7c45.input\n        not_0d7c45.result -> output_d4b2db\n    }\n\n    \n\n    instance(x: -300, y: 26) has_common_element_9d3a5 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -457, y: 11, name: \"list1\") property(List) list_0a1f23\n        in(x: -487, y: 45, name: \"list2\") property(List) list_7d95c8\n\n        out(x: 1045, y: 49, name: \"output\") property(Bool) output_a4e66b\n\n        instance(x: 255, y: 69) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -193, y: 62) ifexpression_1c9f23 root.Std.IfExpression {\n            expression: \"contains(list2, item)\"\n        }\n        getter(x: 345, y: 92, name: \"getter_b280eb\") getter_b280eb = contains_32727d.item\n        setter(x: -0, y: -120, name: \"setter_9d4f1c\") setter_9d4f1c = contains_32727d.item\n        instance(x: 336, y: -21) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = contains_32727d.item\n        instance(x: -275, y: 39) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_1c9f23.value -> output_a4e66b\n        ifexpression_1c9f23.then -> setter_9d4f1c.execute\n        list_0a1f23 -> for_d26972.items\n        for_d26972.item -> ifexpression_1c9f23.gen_2\n        for_d26972.index -> ifexpression_1c9f23.gen_0\n        getter_b280eb.value -> ifexpression_1c9f23.gen_1\n        for_d26972.onItem -> ifexpression_1c9f23.execute\n        for_d26972.done -> output_a4e66b\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_7d95c8 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_6a3d2 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -527, y: -214, name: \"list1\") property(List) list_07cae4\n        in(x: -1489, y: -536, name: \"list2\") property(List) list_c7c5e8\n\n        out(x: 1273, y: -210, name: \"output\") property(Bool) output_e1d0f6\n\n        instance(x: -303, y: -205, name: \"contains_9a65d4\") contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 847, y: -207) map_d2e8df root.Std_k98ojb.Iteration.Map {}\n        instance(x: 246, y: -209, name: \"transform_numbers_to_bool\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_9a65d4.handler\n        list_07cae4 -> contains_9a65d4.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_d2e8df.handler\n        list_c7c5e8 -> map_d2e8df.items\n        map_d2e8df.output_list -> contains_9a65d4.list\n        false -> contains_9a65d4.item\n        not_75283f.result -> output_e1d0f6\n        contains_9a65d4.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_77e5c7 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -434, y: 63, name: \"list1\") property(List) list_0a9f1d\n        in(x: -452, y: 26, name: \"list2\") property(List) list_3e4cd5\n\n        out(x: 1118, y: 43, name: \"output\") property(Bool) output_a38dfc\n\n        instance(x: 251, y: 71) contains_c1d7f0 root.Std_k98ojb.List.Contains {}\n        instance(x: -189, y: 73) ifexpression_8b4a47 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index != 0 || previous == current\"\n        }\n        getter(x: 234, y: 137, name: \"getter_5c6d66\") getter_5c6d66 = previous\n        setter(x: -19, y: 110, name: \"setter_4e3b7a\") setter_4e3b7a = previous\n        instance(x: 239, y: 81) for_d26972 root.Std_k98ojb.Std.For {}\n        ifexpression_8b4a47.else -> output_a38dfc\n        ifexpression_8b4a47.value -> setter_4e3b7a.execute\n        list_0a9f1d -> for_d26972.items\n        for_d26972.item -> ifexpression_8b4a47.gen_2\n        for_d26972.index -> ifexpression_8b4a47.gen_0\n        getter_5c6d66.value -> ifexpression_8b4a47.gen_1\n        for_d26972.onItem -> ifexpression_8b4a47.execute\n        for_d26972.done -> output_a38dfc\n        contains_c1d7f0.item -> setter_4e3b7a.new_value\n        list_3e4cd5 -> contains_c1d7f0.list\n        0 -> contains_c1d7f0.index\n        contains_c1d7f0.is_contained -> setter_4e3b7a.input\n    }\n\n    \n\n    instance(x: -11, y: -192) has_common_element_5c7c8a root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -514, y: 30, name: \"list1\") property(List) list_4a2e0b\n        in(x: -535, y: -215, name: \"list2\") property(List) list_b5c3f6\n\n        out(x: 1028, y: -208, name: \"output\") property(Bool) output_e9d1ea\n\n        instance(x: 219, y: 80) filter_4e0e7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 446, y: -214) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 753, y: -210) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -15, y: -24, name: \"current\") property(Number) _index_9c0e3d\n            in(x: -10, y: 80, name: \"_index\") property(Number) _index_6a2f7b\n\n            out(x: 1095, y: -28, name: \"output\") property(Bool) output_e9d1ea\n\n            instance(x: 233, y: 92) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0 || previous <= current\"\n            }\n            getter(x: -19, y: 67, name: \"getter_b280eb\") getter_b280eb = previous\n            setter(x: 659, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n            instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n            setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n            instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n            ifexpression_875761.else -> continue_a96db6\n            ifexpression_875761.value -> output_e9d1ea\n            ifexpression_875761.then -> setter_9d4f1c.execute\n            list_b5c3f6 -> for_d26972.items\n            for_d26972.item -> ifexpression_875761.gen_2\n            for_d26972.index -> ifexpression_875761.gen_0\n            getter_b280eb.value -> ifexpression_875761.gen_1\n            for_d26972.onItem -> ifexpression_875761.execute\n            for_d26972.done -> continue_a96db6\n            for_d26972.item -> setter_9d4f1c.new_value\n            list_b5c3f6 -> getat_ce2a48.list\n            0 -> getat_ce2a48.index\n            getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n            execute_90aaec -> setter_38e107.execute\n            setter_38e107.continue -> for_d26972.reset\n            setter_9d4f1c.continue -> for_d26972.next\n        } -> filter_4e0e7b.handler\n        list_b5c3f6 -> filter_4e0e7b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_4e0e7b.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_e9d1ea\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_0b3c6a root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -444, y: 54, name: \"list1\") property(List) list_4f2a60\n        in(x: -461, y: 67, name: \"list2\") property(List) list_e6d3c9\n\n        out(x: 1245, y: 58, name: \"output\") property(Bool) output_8bfc1d\n\n        instance(x: 1030, y: -29) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 191, y: -43) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 417, y: -42) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        list_e6d3c9 -> filter_c91965.items\n        filter_c91965.item -> contains_32727d.list\n        contains_32727d.item -> map_c73e3b.handler\n        map_c73e3b.output_list -> list_4f2a60\n        0 -> contains_32727d.index\n        1 -> contains_32727d.context\n        contains_32727d.is_contained -> output_8bfc1d\n    }\n\n    \n\n    instance(x: -444, y: 66) has_common_element_d4fcd5 root.main.has_common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -525, y: 11, name: \"list\") property(List) list_9f8d5a\n\n        out(x: 1003, y: 54, name: \"output\") property(Bool) output_2e21c1\n\n        instance(x: -342, y: 56) ifexpression_e0b8d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index + 1 == current\"\n        }\n        getter(x: 118, y: 43) previous_5a1f89 list_9f8d5a\n        setter(x: -15, y: 53, name: \"setter_3c0a83\") setter_3c0a83 = previous_\n        instance(x: -270, y: 40) for_d4e6b7 root.Std_k98ojb.Std.For {}\n        setter(x: -24, y: 59) next_8d15b1 list_9f8d5a\n        instance(x: -269, y: 47) count_0c66bf root.Std_k98ojb.Std.Count {}\n        for_d4e6b7.trigger -> setter_3c0a83.execute\n        for_d4e6b7.index -> next_8d15b1.new_value\n        list_9f8d5a -> for_d4e6b7.items\n        0 -> count_0c66bf.reset\n        count_0c66bf.count -> for_d4e6b7.next\n        previous_5a1f89.value -> ifexpression_e0b8d4.gen_2\n        for_d4e6b7.item -> ifexpression_e0b8d4.execute\n        ifexpression_e0b8d4.then -> output_2e21c1\n        count_0c66bf.count -> ifexpression_e0b8d4.value\n        1 -> ifexpression_e0b8d4.gen_0\n        ifexpression_e0b8d4.value -> output_2e21c1\n    }\n\n    \n\n    instance(x: -40, y: 63) consecutive root.main.Consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -509, y: 4, name: \"list\") property(List) list_5d6f47\n\n        out(x: 1149, y: 8, name: \"output\") property(Bool) output_bdd5d7\n\n        instance(x: 743, y: 79) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -15, y: 92) greater_than_6f3c2a root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1189, y: 89) less_than_f4d1d0 root.Std_k98ojb.Math.LessThan {}\n        list_5d6f47 -> for_d26972.items\n        for_d26972.index -> greater_than_6f3c2a.left\n        greater_than_6f3c2a.right -> less_than_f4d1d0.left\n        less_than_f4d1d0.right -> for_d26972.next\n        greater_than_6f3c2a.result -> output_bdd5d7\n        less_than_f4d1d0.result -> output_bdd5d7\n    }\n\n    \n\n    instance(x: -67, y: 134) consecutive_numbers root.main.Consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ae\n        out(x: 1228, y: 11, name: \"output\") property(Bool) output_5d7a65\n\n        instance(x: 246, y: 68) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -23, y: 84) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 1058, y: 77) less_than_3f7c71 root.Std_k98ojb.Math.LessThan {}\n        instance(x: 1059, y: -38) greater_than_1d5e0a root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1214, y: 74) count_6d66f2 root.Std_k98ojb.Std.Count {}\n        list_ae -> for_d26972.items\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> less_than_3f7c71.left\n        getat_ce2a48.itemAtIndex + 1 -> greater_than_1d5e0a.right\n        count_6d66f2.reset -> for_d26972.reset\n        less_than_3f7c71.result -> output_5d7a65\n        greater_than_1d5e0a.result -> output_5d7a65\n    }\n\n    \n\n    instance(x: -34, y: 127) is_consecutive_ac89b9 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -528, y: 2, name: \"list\") property(List) list_0d4a6f\n\n        out(x: 1038, y: -100, name: \"output\") property(Bool) output_5f3dcb\n\n        instance(x: -316, y: -98) is_equal_f7e2a9 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -289, y: -91) greater_than_e1c0f8 root.Std_k98ojb.Math.GreaterThan {}\n        list_0d4a6f -> is_equal_f7e2a9.left\n        is_equal_f7e2a9.right -> is_equal_f7e2a9.value\n        1 -> greater_than_e1c0f8.right\n        greater_than_e1c0f8.result -> output_5f3dcb\n    }\n\n    \n\n    instance(x: -64, y: 129) is_consecutive_4d6b45 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -555, y: 1, name: \"list\") property(List) list_3d5a55\n\n        out(x: 1094, y: -19, name: \"output\") property(Bool) output_c7f3b2\n\n        instance(x: -317, y: -64) ifexpression_8e9c0 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == list.length - 1 || previous + 1 == current\"\n        }\n        getter(x: 245, y: -34) getter_d4d6c5 root.Std_k98ojb.List.GetAt {}\n        setter(x: -0, y: -123, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: -290, y: 2) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -283, y: -122, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -292, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_8e9c0.else -> output_c7f3b2\n        ifexpression_8e9c0.value -> output_c7f3b2\n        ifexpression_8e9c0.then -> setter_9d4f1c.execute\n        list_3d5a55 -> for_d26972.items\n        for_d26972.item -> ifexpression_8e9c0.gen_2\n        for_d26972.index -> ifexpression_8e9c0.gen_0\n        getter_d4d6c5.value -> ifexpression_8e9c0.gen_1\n        for_d26972.onItem -> ifexpression_8e9c0.execute\n        for_d26972.done -> output_c7f3b2\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3d5a55 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -57, y: 142) Consecutive_f6b5a8 root.main.Consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -530, y: 6, name: \"list\") property(List) list_5a1d28\n\n        out(x: 1219, y: 26, name: \"output\") property(Bool) output_0e2f4b\n\n        instance(x: 742, y: 52) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -44, y: 69) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 288, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 108, y: 75) less_than_c1c6d5 root.Std_k98ojb.Math.LessThan {}\n        list_5a1d28 -> for_d26972.items\n        for_d26972.index -> getat_ce2a48.index\n        sub_852f2e.first -> getat_ce2a48.itemAtIndex\n        less_than_c1c6d5.left -> sub_852f2e.result\n        1 -> less_than_c1c6d5.right\n        less_than_c1c6d5.result -> output_0e2f4b\n    }\n\n    \n\n    instance(x: -37, y: 131) is_consecutive_d3a15d root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -542, y: 14, name: \"list\") property(List) list_5d2e48\n\n        out(x: 1021, y: -28, name: \"output\") property(Bool) output_bf8a6c\n\n        instance(x: 1083, y: 59) for_loop_d4b0af root.Std_k98ojb.Std.For {}\n        instance(x: 209, y: 71) getat_82e1eb root.Std_k98ojb.List.GetAt {}\n        instance(x: -29, y: 65) less_than_c9d2f5 root.Std_k98ojb.Math.LessThan {}\n        instance(x: 1083, y: 59) next_d7a6c0 root.Std_k98ojb.Std.For.next {}\n        list_5d2e48 -> for_loop_d4b0af.items\n        for_loop_d4b0af.index -> getat_82e1eb.index\n        getat_82e1eb.itemAtIndex -> less_than_c9d2f5.left\n        1 -> less_than_c9d2f5.right\n        less_than_c9d2f5.result -> output_bf8a6c\n    }\n\n    \n\n    instance(x: -35, y: 135) is_consecutive_4e0b3b root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -528, y: 30, name: \"list\") property(List) list_5e8a4d\n\n        out(x: 1237, y: 10, name: \"output\") property(Bool) output_c9c3f6\n\n        instance(x: 750, y: 57) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -28, y: 85) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 1154, y: 44) less_than_5fba0d root.Std_k98ojb.Math.LessThan {}\n        list_5e8a4d -> for_d26972.items\n        for_d26972.index -> getat_ce2a48.index\n        for_d26972.item -> less_than_5fba0d.left\n        less_than_5fba0d.right -> 1\n        less_than_5fba0d.result -> output_c9c3f6\n    }\n\n    \n\n    instance(x: -29, y: 131) is_consecutive_b4a4e8 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 18, name: \"list\") property(List) list_9a8f6d\n\n        out(x: 1213, y: 31, name: \"output\") property(Bool) output_b4e7af\n\n        instance(x: -93, y: 36) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -305, y: 33) nextitem_7f2d64 root.Std_k98ojb.List.NextItem {}\n        instance(x: -304, y: 44) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -294, y: 39) greaterthan_9c0a6d root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -283, y: 45) lessThanOrEqual_8ab4ea root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_9a8f6d -> for_d26972.items\n        for_d26972.index -> nextitem_7f2d64.index\n        nextitem_7f2d64.item -> sub_852f2e.value\n        sub_852f2e.result -> greaterthan_9c0a6d.left\n        list_9a8f6d[for_d26972.index] -> greaterthan_9c0a6d.right\n        greaterthan_9c0a6d.result -> lessThanOrEqual_8ab4ea.left\n        for_d26972.item -> lessThanOrEqual_8ab4ea.right\n        lessThanOrEqual_8ab4ea.result -> output_b4e7af\n    }\n\n    \n\n    instance(x: -40, y: 109) is_consecutive_9a0b47 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -533, y: 2, name: \"list\") property(List) list_1e9a0d\n\n        out(x: 1278, y: 5, name: \"output\") property(Bool) output_4b3b6f\n\n        instance(x: 755, y: -24) lessThanOrEqual_6c7b19 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1339, y: -23) greaterThan_8a0e77 root.Std_k98ojb.Math.GreaterThan {}\n        list_1e9a0d -> lessThanOrEqual_6c7b19.left\n        1 -> lessThanOrEqual_6c7b19.right\n        lessThanOrEqual_6c7b19.result -> output_4b3b6f\n        greaterThan_8a0e77.left -> list_1e9a0d\n        greaterThan_8a0e77.right -> 2\n        greaterThan_8a0e77.result -> output_4b3b6f\n    }\n\n    \n\n    instance(x: -55, y: 131) consecutive_numbers root.main.Consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -530, y: 46, name: \"main_list\") property(List) list_9a2f6d\n        in(x: -541, y: -31, name: \"sublist\") property(List) sublist_3e77b5\n\n        out(x: 1037, y: -44, name: \"output\") property(Bool) output_e7c0ad\n\n        instance(x: -313, y: -35) contains_c2f1d4 root.Std_k98ojb.List.Contains {}\n        sublist_3e77b5 -> contains_c2f1d4.item\n        list_9a2f6d -> contains_c2f1d4.list\n        contains_c2f1d4.is_contained -> output_e7c0ad\n    }\n\n    \n\n    instance(x: -66, y: 47) is_sublist_f89e4b root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -509, y: 4, name: \"main_list\") property(List) list_5d2f8a\n        in(x: -517, y: 28, name: \"sublist\") property(List) list_7b0dd6\n\n        out(x: 1189, y: -96, name: \"output\") property(Bool) output_b8e4ab\n\n        instance(x: -23, y: -101) contains_c9d3f5 root.Std_k98ojb.List.Contains {}\n        list_7b0dd6 -> contains_c9d3f5.item\n        list_5d2f8a -> contains_c9d3f5.list\n        contains_c9d3f5.is_contained -> output_b8e4ab\n    }\n\n    \n\n    instance(x: -27, y: 62) is_sublist_f0c9f7 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -463, y: 30, name: \"main_list\") property(List) list_5d45f6\n        in(x: -487, y: 41, name: \"sub_list\") property(List) list_4aeb1e\n\n        out(x: 1053, y: 49, name: \"output\") property(Bool) output_2c9b7d\n\n        instance(x: -242, y: 52) for_loop_c4e9f8 root.Std_k98ojb.Std.For {}\n        list_5d45f6 -> for_loop_c4e9f8.items\n        list_4aeb1e -> for_loop_c4e9f8.items\n        for_loop_c4e9f8.index -> is_sublist_gen_2\n        for_loop_c4e9f8.item -> is_sublist_gen_0\n        instance(x: 122, y: -19) contains_index_5c6a42 root.Std_k98ojb.List.Contains {}\n        list_4aeb1e -> contains_index_5c6a42.list\n        for_loop_c4e9f8.itemAtIndex -> contains_index_5c6a42.index\n        is_sublist_gen_0.value -> contains_index_5c6a42.is_contained\n        for_loop_c4e9f8.itemAtIndex -> is_sublist_gen_1\n        instance(x: 114, y: -13) not_equal_7d7b19 root.Std_k98ojb.Logic.NotEqual {}\n        list_5d45f6 -> not_equal_7d7b19.left\n        list_4aeb1e -> not_equal_7d7b19.right\n        is_sublist_gen_0.value -> not_equal_7d7b19.result\n        for_loop_c4e9f8.itemAtIndex -> is_sublist_gen_2\n        instance(x: 113, y: -16) equal_77ebc6 root.Std_k98ojb.Logic.Equal {}\n        list_5d45f6 -> equal_77ebc6.left\n        list_4aeb1e -> equal_77ebc6.right\n        is_sublist_gen_2.value -> output_2c9b7d\n    }\n\n    \n\n    instance(x: -246, y: 48) is_sublist_f0fdd8 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -442, y: 25, name: \"main_list\") property(List) list_5d4a8f\n        in(x: -454, y: 18, name: \"sublist_list\") property(List) list_c3c9ad\n\n        out(x: 1050, y: -111, name: \"output\") property(Bool) output_b6b1ec\n\n        instance(x: -313, y: -108) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_c3c9ad -> contains_32727d.item\n        list_5d4a8f -> contains_32727d.list\n        false -> contains_32727d.is_contained\n        true -> output_b6b1ec\n    }\n\n    \n\n    instance(x: -304, y: 62) is_sublist_f7e2c9 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -499, y: 15, name: \"main_list\") property(List) list_5a4f6d\n        in(x: -501, y: -34, name: \"sub_list\") property(List) list_e7c869\n\n        out(x: 1028, y: -30, name: \"output\") property(Bool) output_ba66e1\n\n        instance(x: -305, y: -43) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_e7c869 -> contains_32727d.item\n        list_e7c869 -> contains_32727d.list\n        main_list -> contains_32727d.input\n        contains_32727d.is_contained -> output_ba66e1\n    }\n\n    \n\n    instance(x: -292, y: 63) is_sublist_d3f0ad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -504, y: 39, name: \"main_list\") property(List) list_5eaa8b\n        in(x: -510, y: -32, name: \"sublist\") property(List) list_34d1a9\n\n        out(x: 1217, y: 49, name: \"output\") property(Bool) output_93c6f4\n\n        instance(x: -219, y: -36) for_d26972 root.Std_k98ojb.Std.For {}\n        list_5eaa8b -> for_d26972.items\n        sublist_34d1a9 -> for_d26972.items\n        func() {\n            in(x: -394, y: 52, name: \"i\") property(Number) _index_3f7c94\n\n            out(x: 1215, y: 47, name: \"output\") property(Bool) output_1bba2d\n\n            instance(x: -206, y: 49) contains_c4d6a9 root.Std_k98ojb.List.Contains {}\n            sublist_34d1a9 -> contains_c4d6a9.item\n            list_5eaa8b -> contains_c4d6a9.input\n            contains_c4d6a9.is_contained -> output_1bba2d\n        } -> for_d26972.handler\n    }\n\n    \n\n    instance(x: -63, y: 26) is_sublist_e37fdd root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -469, y: 20, name: \"main_list\") property(List) list_4a3f6d\n        in(x: -485, y: -15, name: \"sublist_list\") property(List) list_7c9b2e\n\n        out(x: 1130, y: -17, name: \"output\") property(Bool) output_a5df32\n\n        instance(x: -304, y: -12) for_d26972 root.Std_k98ojb.Std.For {}\n        list_4a3f6d -> for_d26972.items\n        list_7c9b2e -> for_d26972.items\n        func() {\n            in(x: -232, y: 51, name: \"current\") property(Number) current_1dca42\n\n            out(x: 1284, y: 59, name: \"output\") property(Bool) output_9c8f2e\n\n            instance(x: 109, y: 62) contains_c6a3e7 root.Std_k98ojb.List.Contains {}\n            list_7c9b2e -> contains_c6a3e7.item\n            for_d26972.index -> contains_c6a3e7.gen_0\n            current_1dca42 -> contains_c6a3e7.value\n            contains_c6a3e7.is_contained -> output_9c8f2e\n        } -> for_d26972.handler\n        for_d26972.done -> output_a5df32\n    }\n\n    \n\n    instance(x: -86, y: 55) is_sublist_b0d85b root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -457, y: 442, name: \"main_list\") property(List) list_5e6d84\n        in(x: -469, y: 18, name: \"sublist\") property(List) list_a1c758\n\n        out(x: 1137, y: -104, name: \"output\") property(Bool) output_9a85ec\n\n        instance(x: -303, y: -102) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list_a1c758 -> zip_201051.left\n        list_5e6d84 -> zip_20151.right\n        func() {\n            in(x: -221, y: 22, name: \"item\") property(Number) item_3a8dd9\n\n            out(x: 1072, y: -91, name: \"output\") property(Bool) output_0f6e7c\n\n            instance(x: -27, y: -94) contains_32727d root.Std_k98ojb.List.Contains {}\n            list_a1c758 -> contains_32727d.item\n            list_5e6d84 -> contains_32727d.list\n            contains_32727d.is_contained -> output_0f6e7c\n        } -> zip_201051.handler\n        zip_20151.zipped -> output_9a85ec\n    }\n\n    \n\n    instance(x: -54, y: 52) is_sublist_d4b8d3 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -245, y: 34, name: \"main_list\") property(List) list_4a2e6b\n        in(x: -251, y: -23, name: \"sublist\") property(List) list_d0f1c7\n\n        out(x: 1089, y: -35, name: \"output\") property(Bool) output_b8d96e\n\n        instance(x: -186, y: -45) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -201, y: -30) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 115, y: -42) is_empty_8c5f9b root.Std_k98ojb.List.IsEmpty {}\n        list_d0f1c7 -> contains_32727d.item\n        getat_ce2a48.index -> is_empty_8c5f9b.reset\n        getat_ce2a48.itemAtIndex -> is_empty_8c5f9b.list\n        is_empty_8c5f9b.is_empty -> output_b8d96e\n    }\n\n    \n\n    instance(x: -202, y: 52) is_sublist_f6e7cd root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -456, y: 16, name: \"main_list\") property(List) list_1d3a55\n        in(x: -461, y: -10, name: \"sublist_list\") property(List) list_4f8eef\n\n        out(x: 1242, y: -97, name: \"output\") property(Bool) output_e9c87b\n\n        instance(x: -317, y: -95) contains_32727d root.Std_k98ojb.List.Contains {}\n        sublist_list -> contains_32727d.item\n        list_1d3a55 -> contains_32727d.list\n        false -> contains_32727d.is_contained\n        contains_32727d.is_contained -> output_e9c87b\n    }\n\n    \n\n    instance(x: -292, y: 59) is_sublist_8f8e2a root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -528, y: 2, name: \"list\") property(List) list_ai\n        out(x: 1, y: 0, name: \"smallest_missing\") property(Number) smallest_missing_9d8c5e\n\n        instance(x: 0, y: 0) for_node root.Std_k98ojb.Std.For {\n            trigger() -> for_node.trigger\n            reset() -> for_node.reset\n            next() -> for_node.next\n            items() -> list_ai\n            on item() -> {\n                in(x: -248, y: 2, name: \"item\") property(Number) item_6d4e3f\n                in(x: -305, y: 73, name: \"index\") property(Number) index_b7c8b9\n                out(x: -251, y: 13, name: \"difference\") property(Number) difference_c24a0c\n\n                instance(x: 1, y: 22) ifexpression_2f3e2 root.Std_k98ojb.Std.IfExpression {\n                    expression: \"item == index + 1\"\n                }\n                getter(x: -251, y: 16, name: \"getter_8b6c43\") getter_8b6c43 = difference\n                setter(x: -248, y: 23, name: \"setter_f9a9f4\") setter_f9a9f4 = difference\n                item_6d4e3f -> ifexpression_2f3e2.gen_0\n                index_b7c8b9 -> ifexpression_2f3e2.gen_1\n                getter_8b6c43.value -> smallest_missing_9d8c5e\n                ifexpression_2f3e2.then -> setter_f9a9f4.execute\n                item_6d4e3f -> setter_f9a9f4.new_value\n                index_b7c8b9 -> {\n                    difference_c24a0c = 1\n                    setter_f9a9f4.continue\n                }\n            } -> for_node.on_item\n        }\n\n        instance(x: -305, y: 73, name: \"min\") property(Number) min_ai\n        list_ai -> for_node.items\n        for_node.done -> min_ai\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_1d56f4 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_ai\n        out(x: 1, y: 20, name: \"missing\") property(Number) missing_5f2c55\n\n        instance(x: 0, y: 0) for_loop_4d8b96 root.Std_k98ojb.Std.For {\n            trigger() -> for_loop_4d8b96.trigger\n            reset() -> for_loop_4d8b96.reset\n            next() -> for_loop_4d8b96.next\n        }\n        list_ai -> for_loop_4d8b96.items\n        for_loop_4d8b96.item -> missing_5f2c55\n        for_loop_4d8b96.index -> missing_5f2c55\n        instance(x: 0, y: -124) count_6a1e9f root.Std_k98ojb.Std.Count {}\n        list_ai.length -> count_6a1e9f.reset\n        for_loop_4d8b96.done -> count_6a1e9f.count\n        missing_5f2c55 -> find_missing.value\n    }\n\n    \n\n    instance(x: -115, y: 269) find_missing_0b0d61 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -246, y: 0, name: \"items\") property(List) items_4f1bda\n\n        out(x: 3, y: 18, name: \"missing_number\") property(Number) missing_number_b2a6c5\n        instance(x: 0, y: 0) find_7d8c85 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -104, y: 41, name: \"elem\") property(Number) elem_ae7aeb\n\n            out(x: 1, y: 33, name: \"bool\") property(Bool) bool_8c6c85\n\n            instance(x: 89, y: 34) lessThanOrEqual_4fdd41 root.Std_k98ojb.Math.LessThanOrEqual {}\n            instance(x: 310, y: 40) find_7d8c85.predicate\n            1 -> lessThanOrEqual_4fdd41.left\n            elem_ae7aeb -> lessThanOrEqual_4fdd41.right\n            lessThanOrEqual_4fdd41.result -> bool_8c6c85\n        } -> find_7d8c85.predicate\n        items_4f1bda -> find_7d8c85.items\n        find_7d8c85.item -> missing_number_b2a6c5\n    }\n\n    \n\n    instance(x: -53, y: 522) find_smallest_missing_9cd94e root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -270, y: 0, name: \"items\") property(List) items_9f4d6e\n        out(x: 3, y: 19, name: \"missing_number\") property(Number) missing_number_98a7b5\n\n        instance(x: 0, y: 0) for_loop_8c31bf root.Std_k98ojb.Std.For {\n            trigger() for_loop_8c31bf.trigger()\n            reset() for_loop_8c31bf.reset()\n            next() for_loop_8c31bf.next()\n            items_9f4d6e -> for_loop_8c31bf.items\n        }\n        instance(x: 0, y: 0) ifexpression_b0a2b3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"items_9f4d6e.length > 1 && items_9f4d6e[items_9f4d6e.length - 1] + 1 != items_9f4d6e[items_9f4d6e.length - 2]\"\n        }\n        getter(x: 0, y: 0, name: \"getter_7b5c95\") getter_7b5c95 = missing_number\n        setter(x: 0, y: 0, name: \"setter_ba3f1d\") setter_ba3f1d = missing_number\n        for_loop_8c31bf.item -> getter_7b5c95.value\n        ifexpression_b0a2b3.then -> setter_ba3f1d.execute\n        items_9f4d6e[items_9f4d6e.length - 1] + 1 -> setter_ba3f1d.new_value\n        for_loop_8c31bf.done -> ifexpression_b0a2b3.execute\n    }\n\n    \n\n    instance(x: -23, y: 143) find_missing_7d7ad9 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -456, y: 0, name: \"list\") property(List) list_9a2f35\n        out(x: 8, y: 28, name: \"missing_number\") property(Number) missing_number_a87c43\n\n        instance(x: 26, y: 32) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -110, y: 23, name: \"elem\") property(Number) elem_9f6850\n            out(x: 19, y: 34, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 13, y: 28, name: \"min_num\") root.Std_k98ojb.Math.Min {}\n            instance(x: 21, y: 35, name: \"max_num\") root.Std_k98ojb.Math.Max {}\n            1 -> max_num.values\n            list_9a2f35[0] -> min_num.values\n            0 -> max_num.left\n            elem_9f6850 -> max_num.right\n\n            if (elem_9f6850 > max_num.right) {\n                bool_af09a7 = true\n            } else {\n                bool_af09a7 = false\n            }\n\n            min_num.result -> missing_number_a87c43\n        } -> find_missing_node.predicate\n        list_9a2f35 -> find_missing_node.items\n        find_missing_node.item -> missing_number_a87c43\n    }\n\n    \n\n    instance(x: -174, y: 529) find_missing_4e6d3b root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -273, y: 1, name: \"numbers\") property(List) numbers_3a8b9d\n\n        out(x: 20, y: 55, name: \"missing\") property(Number) missing_a2f2e4\n        instance(x: 56, y: 24) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -112, y: 32, name: \"n\") property(Number) n_8c1a0d\n\n            out(x: 12, y: 55, name: \"bool\") property(Bool) bool_3e2f7b\n\n            instance(x: 28, y: 47) less_than_5d2a90 root.Std_k98ojb.Math.LessThan {}\n            instance(x: 70, y: 48) next_number_9c4bb1 root.Std_k98ojb.List.For {}\n            instance(x: 82, y: 51) greater_than_or_equal_0bfe8f root.Std_k98ojb.Math.LessThanOrEqual {}\n            numbers_3a8b9d[0] -> less_than_5d2a90.left\n            n_8c1a0d -> less_than_5d2a90.right\n            next_number_9c4bb1.start -> 1\n            next_number_9c4bb1.next -> numbers_3a8b9d.Length\n            greater_than_or_equal_0bfe8f.left -> n_8c1a0d\n            greater_than_or_equal_0bfe8f.right -> next_number_9c4bb1.result\n            less_than_5d2a90.result -> bool_3e2f7b\n        } -> find_missing_node.predicate\n        numbers_3a8b9d[0] -> find_missing_node.item\n        find_missing_node.item -> missing_a2f2e4\n    }\n\n    \n\n    instance(x: -13, y: 69) find_missing_f6f5a1 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -231, y: 0, name: \"list\") property(List) list_4e84d5\n        out(x: 2, y: 35, name: \"missing\") property(Number) missing_7c6b8a\n\n        instance(x: 46, y: 57) for_node root.Std_k98ojb.Std.For {\n            trigger: \"0\"\n            reset: \"reset_5e71d3\"\n            next: \"next_5f0a99\"\n            items: list_4e84d5\n            on item: \"item_9c7f6d\"\n            done: \"done_1b2f32\"\n        }\n        instance(x: 41, y: -63, name: \"reset_5e71d3\") reset_5e71d3 {}\n        instance(x: 43, y: 47) next_node root.Std_k98ojb.Std.For.next {}\n        instance(x: 44, y: 57) item_node root.Std_k98ojb.Std.For.item {}\n        instance(x: 45, y: -68) done_node root.Std_k98ojb.Std.For.done {}\n\n        data_instance(x: -213, y: -73) list_4e84d5 = [1, 2, 3, 5, 6]\n        instance(x: 41, y: 62) find_missing_node root.find_missing {}\n        item_9c7f6d.value -> find_missing_node.number\n        done_1b2f32.output -> find_missing_node.missing\n    }\n\n    \n\n    instance(x: -36, y: 127) find_missing_0c6b5a root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -0, y: 6, name: \"list\") property(List) list_3d7f1a\n\n        out(x: 5, y: 15, name: \"missing_number\") property(Number) missing_number_8e9b34\n        instance(x: 69, y: 70) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -0, y: 6, name: \"i\") property(Number) i_7f1a4c\n\n            out(x: 5, y: 15, name: \"missing_number\") property(Number) missing_number_8e9b34\n            list_3d7f1a -> find_missing_node.items\n            find_missing_node.item -> missing_number_8e9b34\n        } -> find_missing_node.predicate\n    }\n\n    \n\n    instance(x: -44, y: 509) find_missing_node root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -388, y: 2, name: \"list\") property(List) list_ai\n        out(x: 1, y: 123, name: \"missing\") property(Number) missing_8e6d0f\n\n        instance(x: 405, y: 115) for_loop_5c74df root.Std_k98ojb.Std.For {\n            items: list_ai\n            start: 0\n            end: list_ai.length\n            on_item: \"missing = it + 1\"\n            done: \"return missing\"\n        }\n        list_ai -> for_loop_5c74df.items\n        for_loop_5c74df.item -> missing_8e6d0f\n    }\n\n    \n\n    instance(x: -56, y: 493) find_missing_7b8a66 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -430, y: 0, name: \"items\") property(List) items_abcd\n        out(x: 1, y: 43, name: \"smallest_missing\") property(Number) smallest_missing_8d7f7c\n\n        instance(x: 3, y: 44) for_loop_9df2a root.Std_k98ojb.Std.For {\n            trigger() -> for_loop_9df2a.trigger\n            reset() -> for_loop_9df2a.reset\n            next() -> for_loop_9df2a.next\n            items() -> for_loop_9df2a.items\n        }\n        items_abcd -> for_loop_9df2a.items\n        for_loop_9df2a.item -> smallest_missing_8d7f7c\n        for_loop_9df2a.index -> smallest_missing_8d7f7c\n        instance(x: 0, y: -5) count_3b4e6a root.Std_k98ojb.Std.Count {}\n        items_abcd -> count_3b4e6a.list\n        count_3b4e6a.reset -> for_loop_9df2a.reset\n        count_3b4e6a.count -> smallest_missing_8d7f7c\n        for_loop_9df2a.done -> count_3b4e6a.done\n    }\n\n    \n\n    instance(x: -58, y: 73) SmallestMissing_88a98b root.main.SmallestMissing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -1083, y: 34, name: \"input\") property(String) input_9d4f5b\n\n        out(x: 444, y: 53, name: \"output\") property(String) output_0e77c7\n\n        instance(x: 74, y: 22) replace_2d1a35 root.Std_k98ojb.Strings.Replace {}\n        input_9d4f5b -> replace_2d1a35.input\n        \",\" -> replace_2d1a35.search\n        \".\" -> replace_2d1a35.search\n        \" \" -> replace_2d1a35.search\n        \":\" -> replace_2d1a35.replace\n        replace_2d1a35.output -> output_0e77c7\n    }\n\n    \n\n    instance(x: -109, y: 45) replace_punctuation_5f8b3d root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -106, y: 14, name: \"input\") property(String) input_0\n        out(x: 513, y: -57, name: \"output\") property(String) output_1b9c3e\n\n        instance(x: 220, y: 12) replace_4d5f47 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4d5f47.input\n        \",.\" -> replace_4d5f47.search\n        \":\" -> replace_4d5f47.replace\n        replace_4d5f47.output -> output_1b9c3e\n    }\n\n    \n\n    instance(x: -96, y: 39) replace_special_chars_6a6a8 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -144, y: 10, name: \"input\") property(String) input_ae\n        out(x: 446, y: -45, name: \"output\") property(String) output_e5\n\n        instance(x: 104, y: 30) replace_3c2d1b root.Std_k98ojb.Strings.Replace {}\n        input_ae -> replace_3c2c7a.input\n        \",\" -> replace_3c2c7a.search\n        \".\" -> replace_3c2c7a.search\n        \" \" -> replace_3c2c7a.search\n        \":\" -> replace_3c2c7a.replace\n        replace_3c2c7a.output -> output_e5\n    }\n\n    \n\n    instance(x: -134, y: 70) replace_with_colon_a8fdd9 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -130, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 540, y: -50, name: \"output\") property(String) output_3e4a92\n\n        instance(x: 227, y: -67) replace_74f0c5 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_74f0c5.input\n        \",.\" -> replace_74f0c5.search\n        \":\" -> replace_74f0c5.replace\n        replace_74f0c5.output -> output_3e4a92\n    }\n\n    \n\n    instance(x: -111, y: 20) replace_special_chars_9d8baf root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -157, y: 21, name: \"input\") property(String) input_0\n        out(x: 530, y: -62, name: \"output\") property(String) output_0\n\n        instance(x: 272, y: 34) replace_d2f3c8 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_d2f3c8.input\n        \",\" -> replace_d2f3c8.search\n        \".\" -> replace_d2f3c8.replace\n        \" \" -> replace_d2f3c8.search\n        \":\" -> replace_d2f3c8.replace\n        replace_d2f3c8.output -> output_0\n    }\n\n    \n\n    instance(x: -106, y: 38) replace_special_chars_6e5a4b root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -122, y: 6, name: \"input\") property(String) input_0\n\n        out(x: 515, y: -48, name: \"output\") property(String) output_1b8a5c\n\n        instance(x: 77, y: -55) replace_6f2a4d root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_6f2a4d.input\n        \",\" -> replace_6f2a4d.search\n        \".\" -> replace_6f2a4d.replace\n        \" \" -> replace_6f2a4d.search\n        \":\" -> replace_6f2a4d.replace\n        replace_6f2a4d.output -> output_1b8a5c\n    }\n\n    \n\n    instance(x: -95, y: 16) replace_with_colon_3fba7 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -131, y: 25, name: \"input\") property(String) input_0\n        out(x: 499, y: 51, name: \"output\") property(String) output_0\n\n        instance(x: 88, y: 55) replace_2d7c6f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_2d7c6f.input\n        \",\" -> replace_2d7c6f.search\n        \".\" -> replace_2d7c6f.search\n        \" \" -> replace_2d7c6f.search\n        \":\" -> replace_2d7c6f.replace\n        replace_2d7c6f.output -> output_0\n    }\n\n    \n\n    instance(x: -119, y: 43) replace_special_chars_9d4a5e root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -105, y: 29, name: \"input\") property(String) input_0\n\n        out(x: 533, y: -35, name: \"output\") property(String) output_1b3e8a\n\n        instance(x: 251, y: 28) replace_4d1d98 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4d1d98.input\n        \",\" -> replace_4d1d98.search\n        \".\" -> replace_4d1d98.search\n        \" \" -> replace_4d1d98.search\n        \":\" -> replace_4d1d98.replace\n        replace_4d1d98.output -> output_1b3e8a\n    }\n\n    \n\n    instance(x: -137, y: 59) replace_with_colon_a2c7f5 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -1459, y: 31, name: \"input\") property(String) input_5f1d2e\n\n        out(x: 101, y: 10, name: \"output\") property(String) output_6b95c4\n\n        instance(x: 89, y: 21) replace_8dd94b root.Std_k98ojb.Strings.Replace {}\n        input_5f1d2e -> replace_8dd94b.input\n        \",.\" -> replace_8dd94b.search\n        \":\" -> replace_8dd94b.replace\n        replace_8dd94b.output -> output_6b95c4\n    }\n\n    \n\n    instance(x: -115, y: 17) replace_special_chars_7d5f3a root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -1023, y: 19, name: \"input\") property(String) input_5e0f9d\n\n        out(x: 550, y: 69, name: \"output\") property(String) output_4c7581\n\n        instance(x: 75, y: 59) replace_2a8aa3 root.Std_k98ojb.Strings.Replace {}\n        input_5e0f9d -> replace_2a8aa3.input\n        \",.\" -> replace_2a8aa3.search\n        \":\" -> replace_2a8aa3.replace\n        replace_2a8aa3.output -> output_4c7581\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_punctuation_bfda9b root.main.replace_punctuation {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -234, y: 16, name: \"input\") property(String) input_9f0a2e\n\n        out(x: 1045, y: 54, name: \"output\") property(Bool) output_1d6c71\n\n        instance(x: -26, y: 73) islower_f7c8b4 root.Std_k98ojb.Strings.IsLowerCase {}\n        instance(x: 234, y: 63) tolower_b9e56f root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 305, y: 60) characters_6a0d3f root.Std_k98ojb.Strings.Characters {}\n        islower_f7c8b4.result -> tolower_b9e56f.input\n        tolower_b9e56f.output -> characters_6a0d3f.input\n    }\n\n    \n\n    instance(x: 47, y: -195) all_same_2df8f5 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") is_same_char {\n        in(x: -33, y: 30, name: \"input\") property(String) input_6f1d0e\n\n        out(x: 1364, y: -20, name: \"output\") property(Bool) output_e7a5b9\n\n        instance(x: 101, y: -34) tolower_8d2c48 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 186, y: 30) characters_0e4f71 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 254, y: -20) contains_32727d root.Std_k98ojb.Strings.Contains {}\n        is_same_char -> tolower_8d2c48.input\n        tolower_8d2c48.output -> characters_0e4f71\n        characters_0e4f71.characters -> contains_32727d.contains\n        output_e7a5b9 -> contains_32727d.result\n    }\n\n    \n\n    instance(x: 20, y: -6) is_same_char_8c63e1 root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_characters_same {\n        in(x: -204, y: 20, name: \"input\") property(String) input_8f0e2d\n\n        out(x: 1033, y: -10, name: \"output\") property(Bool) output_e9c6b4\n\n        instance(x: -58, y: 34) tolower_2a1eb7 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -235, y: 56) isalpha_c5d5f0 root.Std_k98ojb.Strings.IsAlphaNumeric {}\n        instance(x: -289, y: 59) characters_9c0e3d root.Std_k98ojb.Strings.Characters {}\n        instance(x: -396, y: 46) length_85a4d2 root.Std_k98ojb.List.Length {}\n        all_characters_same_1 -> tolower_2a1eb7.input\n        isalpha_c5d5f0.result -> characters_9c0e3d.characters\n        characters_9c0e3d.characters -> length_85a4d2.list\n    }\n\n    \n\n    instance(x: 45, y: -179) all_characters_same_f3b1c6 root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -33, y: 74, name: \"input\") property(String) input_5d8f4a\n\n        out(x: 1303, y: 13, name: \"output\") property(Bool) output_f9d0e6\n\n        instance(x: -93, y: 113) tolower_7c2eb4 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 215, y: 100) contains_32727d root.Std_k98ojb.Strings.Contains {}\n        instance(x: 392, y: 107) if_e19a62 root.Std_k98ojb.Std.If {}\n    }\n\n    \n\n    instance(x: -76, y: 46) is_all_same_8a4f1e root.main.is_all_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") is_same_char {\n        in(x: -44, y: 22, name: \"input\") property(String) input_6d2c0f\n\n        out(x: 1141, y: -12, name: \"output\") property(Bool) output_f8a9c4\n\n        instance(x: -82, y: 30) ifexpression_7f5e36 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == previous\"\n        }\n        getter(x: 205, y: 121, name: \"getter_d66d2a\") getter_d66d2a = previous\n        setter(x: -25, y: 44, name: \"setter_7f5e36\") setter_7f5e36 = previous\n        instance(x: 183, y: -13) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -10, y: 34) setter_7f5e36 = previous\n        instance(x: -273, y: 15) contains_c1d3a8 root.Std_k98ojb.List.Contains {}\n        ifexpression_7f5e36.else -> output_f8a9c4\n        ifexpression_7f5e36.value -> output_f8a9c4\n        ifexpression_7f5e36.then -> setter_7f5e36.execute\n        input_6d2c0f -> for_d26972.items\n        for_d26972.item -> ifexpression_7f5e36.gen_2\n        for_d26972.index -> ifexpression_7f5e36.gen_0\n        getter_d66d2a.value -> ifexpression_7f5e36.gen_1\n        for_d26972.onItem -> ifexpression_7f5e36.execute\n        for_d26972.done -> output_f8a9c4\n        for_d26972.item -> setter_7f5e36.new_value\n        input_6d2c0f -> contains_c1d3a8.input\n        0 -> contains_c1d3a8.index\n        contains_c1d3a8.is_contained -> output_f8a9c4\n    }\n\n    \n\n    instance(x: -39, y: 12) is_same_char_5b6e38 root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: -475, y: 39, name: \"input\") property(String) input_3d8e50\n\n        out(x: 1274, y: -38, name: \"output\") property(Bool) output_9b5f4c\n\n        instance(x: 114, y: 49) tolower_f2a9ac root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 242, y: -19) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 375, y: 34) ifexpression_e3f5c4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || characters[index] == characters[0]\"\n        }\n        getter(x: 199, y: -23, name: \"getter_2e8d35\") getter_2e8d35 = characters\n        setter(x: 334, y: 25) setter_34a9f5 = characters\n        instance(x: 321, y: -22) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -116, name: \"setter_2e8d35\") setter_4c6d7a = characters\n        instance(x: -275, y: -36) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_e3f5c4.else -> output_9b5f4c\n        ifexpression_e3f5c4.value -> output_9b5f4c\n        ifexpression_e3f5c4.then -> setter_34a9f5.execute\n        input_3d8e50 -> for_d26972.items\n        for_d26972.item -> ifexpression_e3f5c4.gen_2\n        for_d26972.index -> ifexpression_e3f5c4.gen_0\n        getter_2e8d35.value -> ifexpression_e3f5c4.gen_1\n        for_d26972.onItem -> ifexpression_e3f5c4.execute\n        for_d26972.done -> output_9b5f4c\n        for_d26972.item -> setter_34a9f5.new_value\n        input_3d8e50 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_4c6d7a.new_value\n        tolower_f2a9ac.input -> setter_34a9f5.execute\n        setter_4c6d7a.continue -> for_d26972.reset\n        setter_34a9f5.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 14, y: -185) is_same_char_a8b3c1 root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: -44, y: 17, name: \"input\") property(String) input_3a4d35\n\n        out(x: 1055, y: 10, name: \"output\") property(Bool) output_b9c63f\n\n        instance(x: -55, y: 22) length_66e0b2 root.Std_k98ojb.List.Length {}\n        instance(x: 155, y: 27) ifexpression_4c6a45 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || char1 == char2\"\n        }\n        instance(x: -193, y: 17) tolower_5d8f7e root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 201, y: 19) characters_4c3a6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 325, y: -12) isnumeric_1d7df9 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 439, y: 23) map_2ff3e5 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 548, y: 21) compare_6a4f66 root.Std_k98ojb.Logic.Equal {}\n        input_3a4d35 -> characters_4c3a6f.input\n        characters_4c3a6f.characters -> map_2ff3e5.items\n        tolower_5d8f7e.result -> map_2ff3e5.value\n        isnumeric_1d7df9.is_numeric -> compare_6a4f66.left\n        ifexpression_4c6a45.value -> output_b9c63f\n    }\n\n    \n\n    instance(x: 58, y: -143) is_same_char_2bfc3e root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -246, y: 56, name: \"input\") property(String) input_5d4a6f\n\n        out(x: 1379, y: -12, name: \"output\") property(Bool) output_3bfb66\n\n        instance(x: -11, y: 64) islower_c1c8df root.Std_k98ojb.Strings.IsLowerCase {}\n        instance(x: 118, y: -34) tolower_e0d9f6 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 227, y: 5) characters_7a4e89 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 354, y: 56) contains_c8bf63 root.Std_k98ojb.Strings.Contains {}\n        islower_c1c8df.result -> tolower_e0d9f6.input\n        tolower_e0d9f6.output -> characters_7a4e89.input\n        characters_7a4e89.characters -> contains_c8bf63.contains\n        input_5d4a6f -> contains_c8bf63.input\n    }\n\n    \n\n    instance(x: 20, y: -176) is_same_9df1c root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: -255, y: 10, name: \"input\") property(String) input_9f2a5e\n\n        out(x: 1341, y: 14, name: \"output\") property(Bool) output_f3d6b4\n\n        instance(x: -73, y: 35) isupper_8c66eb root.Std_k98ojb.Strings.IsUpperCase {}\n        instance(x: 245, y: 33) tolower_5a7e1f root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 114, y: 25) contains_32727d root.Std_k98ojb.Strings.Contains {}\n        instance(x: -141, y: 28) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n    }\n\n    \n\n    instance(x: 29, y: 24) is_same_char_6f1e5a root.main.is_same_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") is_all_same {\n        in(x: -294, y: 142, name: \"string\") property(String) string_0e8a3d\n\n        out(x: 1211, y: 25, name: \"output\") property(Bool) output_85f2b5\n\n        instance(x: -73, y: 146) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 233, y: 26) tolower_b2d8c9 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 392, y: 134) isnumeric_0a5f7f root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: -46, y: 124) contains_c6e3a1 root.Std_k98ojb.Strings.Contains {}\n        isnumeric_0a5f7f.is_numeric -> output_85f2b5\n        length_6e87f2.length -> contains_c6e3a1.list\n        string_0e8a3d -> tolower_b2d8c9.input\n        tolower_b2d8c9.output -> isnumeric_0a5f7f.input\n    }\n\n    \n\n    instance(x: 47, y: -180) is_all_same_d3b1c6 root.main.is_all_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 35, y: -275, name: \"count\") property(Number) count_ai\n\n        instance(x: 19, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n        instance(x: 11, y: -268) math_floor_node root.Std_k98ojb.Math.Floor {}\n        count_ai -> math_floor_node.input\n        math_floor_node.output -> count_ai\n    }\n\n    \n    instance(x: -44, y: -284, name: \"count_digits\") count_9c0a6d root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 24, y: -221, name: \"result\") property(Number) result_ai\n\n        instance(x: 21, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_9c7d3a.result_ai\n    }\n\n    instance(x: -213, y: -457, name: \"count_digits\") expression_3e25a9 root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: -342, y: -220) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n    }\n\n    \n    instance(x: -86, y: 127) strings_substring_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 10, y: -419, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_6f7c85\n        count_digits_6f7c85 -> result_ai\n    }\n\n    \n    instance(x: -23, y: -419) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 35, y: -243, name: \"result\") property(Number) result_ai\n\n        instance(x: 97, y: 76) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_5f4a6c\n        count_digits_5f4a6c.result -> result_ai\n    }\n\n    \n    instance(x: -69, y: 121) split_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 11, y: -247, name: \"count\") property(Number) count_ai\n\n        instance(x: 98, y: 65) length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> length_node.input\n        length_node.length -> count_digits.count\n    }\n\n    \n    instance(x: 88, y: -462, name: \"count_digits\") expression_3e25a9 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 23, y: -216, name: \"output\") property(Number) output_ai\n\n        instance(x: 1, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_7e22a3\n        count_digits_7e22a3 -> output_ai\n    }\n\n    \n    instance(x: -44, y: -222) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 21, y: -219, name: \"result\") property(Number) result_ai\n\n        instance(x: 26, y: 85) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_3d6f44\n        count_digits_3d6f44 -> result_ai\n    }\n\n    \n    instance(x: -203, y: -439, name: \"count_digits\") expression_3e25a9 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 2, y: -221, name: \"output\") property(Number) output_ai\n\n        instance(x: 83, y: -289) math_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> math_length_node.input\n        math_length_node.length -> output_ai\n    }\n\n    \n    instance(x: 246, y: -46, name: \"count_digits\") length_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 29, y: -228, name: \"result\") property(Number) result_ai\n\n        instance(x: 23, y: -244) math_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> math_length_node.input\n        math_length_node.length -> count_digits_8a4d7f.result_ai\n        function_9e6c38 root.Std_k98ojb.Math.Expression {\n            expression: \"length(input)\"\n        }\n        math_length_node.value -> function_9e6c38.gen_0\n    }\n\n    \n    instance(x: 18, y: -245) count_digits_8a4d7f root.main.count_digits {}\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -279, y: 148, name: \"n\") property(Number) n_4e8d3b\n\n        out(x: 5700, y: -336, name: \"output\") property(Number) output_7fbb9c\n\n        instance(x: 55, y: 91) ifexpression_b1a8f5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 384, y: -193) sum_fourth_power_6d4e7b root.main.sum_fourth_power {}\n        instance(x: 90, y: 81) pow_a9f5c2 root.Std_k98ojb.Math.Pow {}\n        instance(x: 99, y: 74) mul_d8f65a root.Std_k98ojb.Math.Mul {}\n        instance(x: -206, y: -233) div_7d1e35 root.Std_k98ojb.Math.Div {}\n        instance(x: 100, y: 78) sum_fourth_power_ba5c2a root.main.sum_fourth_power {}\n        instance(x: 38, y: 97) add_e85b3f root.Std_k98ojb.Math.Add {}\n        instance(x: -217, y: -264) modulo_6d4e7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 99, y: 73) pow_a9f5c2.first -> div_7d1e35.second\n        instance(x: 90, y: 81) pow_a9f5c2.gen_0 -> mul_d8f65a.first\n        instance(x: -206, y: -233) div_7d1e35.result -> sum_fourth_power_ba5c2a.n_4e8d3b\n        n_4e8d3b -> pow_a9f5c2.y\n        mul_d8f65a.result -> add_e85b3f.first\n        add_e85b3f.result -> modulo_6d4e7b.value\n        modulo_6d4e7b.result -> sum_fourth_power_ba5c2a.output\n    }\n\n    \n\n    instance(x: -285, y: 172) sum_fourth_power_82b0aa root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -278, y: 157, name: \"n\") property(Number) n_9d4e5a\n\n        out(x: 2866, y: -439, name: \"output\") property(Number) output_93b21f\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        list_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -278, y: 168, name: \"n\") property(Number) n_49d0f3\n\n        out(x: 1152, y: -647, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 98, y: -410) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 396, y: -378) sum_fourth_power_9c2a42 root.main.sum_fourth_power {}\n        instance(x: 97, y: -127) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) pow_0f7e95 root.Std_k98ojb.Math.Pow {}\n        instance(x: 99, y: -249) div_2d44da root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        4 -> pow_0f7e95.y\n        mul_f892a4.result -> div_2d44da.first\n        10 -> div_2d44da.second\n        div_2d44da.result -> sum_fourth_power_9c2a42.n_49d0f3\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> sum_fourth_power_9c2a42.execute_cdac2a\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> sum_fourth_power_9c2a42.execute_cdac2a\n        sum_fourth_power_9c2a42.continue_d9efd7 -> setter_375321.execute\n        sum_fourth_power_9c2a42.output_732a8a -> mul_f892a4.second\n        mul_f892a4.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_ebef81\n        n_49d0f3 -> floor_61b38d.input\n        floor_61b38d.output -> div_2d44da.first\n        floor_61b38d.output -> pow_0f7e95.value\n        pow_0f7e95.result -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_fourth_power_9c2a42 {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_6b655b\n\n        out(x: 2896, y: -1, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        list_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_power {\n        in(x: -305, y: 162, name: \"n\") property(Number) n_6d5a4b\n\n        out(x: 4080, y: 146, name: \"output\") property(Number) output_74eef9\n\n        instance(x: 55, y: -428) sum_odd_power_8c7f2a root.main.sum_odd_power {}\n        instance(x: 96, y: 29) mul_4d4bf0 root.Std_k98ojb.Math.Mul {}\n        instance(x: 94, y: 41) modulo_16e5d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 68, y: -394) add_6a2fdd root.Std_k98ojb.Math.Add {}\n        instance(x: 96, y: -390) div_3c9c43 root.Std_k98ojb.Math.Div {}\n        setter(x: -219, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 874, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        5 -> modulo_16e5d.divisor\n        modulo_16e5d.result -> add_6a2fdd.first\n        5 -> div_3c9c43.second\n        div_3c9c43.result -> sum_odd_power_8c7f2a.n_6d5a4b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> sum_odd_power_8c7f2a.execute_cdac2a\n        sum_odd_power_8c7f2a.continue_d9efd7 -> setter_375321.execute\n        sum_odd_power_8c7f2a.output_74eef9 -> add_6a2fdd.second\n        add_6a2fdd.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_74eef9\n        n_6d5a4b -> floor_61b38d.input\n        floor_61b38d.output -> div_3c9c43.first\n        floor_61b38d.output -> modulo_16e5d.value\n        floor_61b38d.output -> sum_odd_power_8c7f2a.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_odd_power_8c7f2a {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -292, y: 144, name: \"n\") property(Number) n_5d0e3a\n\n        out(x: 3282, y: -384, name: \"output\") property(Number) output_a7b9f8\n\n        instance(x: 43, y: 167) sum_fourth_power_1c4eb root.main.sum_fourth_power {}\n        instance(x: 70, y: 245) find_e7e3d2 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -49, y: 193) modulo_f0a95f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 83, y: 251) pow_9d5df1 root.Std_k98ojb.Math.Pow {}\n        instance(x: 91, y: 165) add_6c4dd3 root.Std_k98ojb.Math.Add {}\n        instance(x: -51, y: 246) div_f7f2e0 root.Std_k98ojb.Math.Div {}\n        instance(x: 57, y: 216) floor_9d5a4b root.Std_k98ojb.Math.Floor {}\n        instance(x: 70, y: 219) pow_9d5df1.second\n        instance(x: -21, y: 246) notequal_6f4c45 root.Std_k98ojb.Logic.NotEqual {}\n        pow_9d5df1.result -> add_6c4dd3.first\n        n_5d0e3a -> div_f7f2e0.second\n        div_f7f2e0.result -> floor_9d5a4b.input\n        1 -> modulo_f0a95f.divisor\n        pow_9d5df1.y -> modulo_f0a95f.value\n        notequal_6f4c45.result -> add_6c4dd3.second\n        n_5d0e3a -> floor_9d5a4b.output\n        floor_9d5a4b.output -> sum_fourth_power_1c4eb.n_5d0e3a\n        sum_fourth_power_1c4eb.continue_d9efd7 -> pow_9d5df1.execute\n        find_e7e3d2.item -> sum_fourth_power_1c4eb.first\n        add_6c4dd3.result -> output_a7b9f8\n    }\n\n    \n\n    instance(x: -288, y: 169) sum_fourth_power_11ca5a root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 148, name: \"n\") property(Number) n_1d8f77\n\n        out(x: 1076, y: -351, name: \"output\") property(Number) output_e3c5b9\n\n        instance(x: 0, y: 0) ifexpression_35a4e4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 44, y: -241) sum_fourth_power_9fdd6d root.main.sum_fourth_power {}\n        instance(x: 67, y: -243) pow_2e1a38 root.Std_k98ojb.Math.Pow {}\n        instance(x: 74, y: -253) add_8c4d7b root.Std_k98ojb.Math.Add {}\n        instance(x: 76, y: -260) div_5f9c64 root.Std_k98ojb.Math.Div {}\n        setter(x: -225, y: -263, name: \"setter_6c2e21\") setter_6c2e21 = sum\n        setter(x: 911, y: -318, name: \"setter_b1a4d9\") setter_b1a4d9 = sum\n        getter(x: 928, y: -305, name: \"getter_c3b45f\") getter_c3b45f = sum\n        instance(x: -228, y: -240) floor_6c5e51 root.Std_k98ojb.Math.Floor {}\n        4 -> pow_2e1a38.y\n        pow_2e1a38.result -> add_8c4d7b.first\n        4 -> div_5f9c64.second\n        div_5f9c64.result -> setter_b1a4d9.new_value\n        setter_b1a4d9.continue_d9efd7 -> getter_c3b45f.execute_cdac2a\n        sum_fourth_power_9fdd6d.continue_d9efd7 -> setter_6c2e21.execute_cdac2a\n        sum_fourth_power_9fdd6d.output_732a8a -> add_8c4d7b.second\n        add_8c4d7b.result -> getter_c3b45f.new_value\n        getter_c3b45f.continue_d9efd7 -> setter_b1a4d9.execute_cdac2a\n        sum_fourth_power_9fdd6d.output_732a8a -> div_5f9c64.second\n        div_5f9c64.result -> output_e3c5b9\n        floor_6c5e51.input -> n_1d8f77\n        floor_6c5e51.output -> pow_2e1a38.first\n        pow_2e1a38.result -> ifexpression_35a4e4.gen_0\n    }\n\n    \n\n    instance(x: -195, y: 174) sum_fourth_power_0d3f55 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 161, name: \"n\") property(Number) n_0d1a2\n\n        out(x: 2328, y: 159, name: \"output\") property(Number) output_bdd4e9\n\n        instance(x: 46, y: 150) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 394, y: -340) data_3c713b  = [sum, average]\n        instance(x: 62, y: -227, name: \"sum\") expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"n * (n+1)*(2*n+1)*(2*n+3)/24\"\n        }\n        instance(x: 88, y: -247) pow_4a9e65 root.Std_k98ojb.Math.Pow {}\n        instance(x: 103, y: -216) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 1\n        instance(x: 12, y: 136) expression_2d6da6 expression_2d6da6 {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c div_64046c {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_0d1a2 -> mul_f892a4.first\n        n_0d1a2 -> expression_2d6da6.gen_0\n        pow_4a9e65.y -> div_64046c.value\n        div_64046c.result -> sum_3bfe34\n    }\n\n    \n\n    instance(x: -81, y: 529) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 58, name: \"n\") property(Number) n_6b655b\n\n        out(x: 1632, y: -271, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 0, y: 0) find_f8d4a1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_f8d4a1.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_f8d4a1.predicate\n        list_abed4a -> find_f8d4a1.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First odd number_0b1361``.predicate\n        sum_digits_96023e -> output_edc2e3\n    }\n\n    \n\n    instance(x: -176, y: 38) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_power {\n        in(x: -273, y: 159, name: \"n\") property(Number) n_8a6f3d\n\n        out(x: 2304, y: -1, name: \"output\") property(Number) output_19e21c\n\n        instance(x: 0, y: 0) find_5bf9d2 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -219, y: 34, name: \"current\") property(Number) current_b5f4a1\n\n            out(x: 1024, y: 45, name: \"bool\") property(Bool) bool_6d9c2e\n\n            instance(x: 112, y: 80) modulo_3e0b44 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_b5f4a1 -> modulo_3e0b44.value\n            2 -> modulo_3e0b44.divisor\n            modulo_3e0b44.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_6d9c2e\n        } -> find_5bf9d2.predicate\n        func() {\n            in(x: -219, y: 34, name: \"current\") property(Number) current_b5f4a1\n\n            out(x: 1024, y: 45, name: \"bool\") property(Bool) bool_6d9c2e\n\n            instance(x: 112, y: 80) modulo_3e0b44 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_b5f4a1 -> modulo_3e0b44.value\n            2 -> modulo_3e0b44.divisor\n            modulo_3e0b44.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_6d9c2e\n        } -> find_5bf9d2.predicate\n        list_8fca7d -> find_5bf9d2.items\n        find_5bf9d2.item -> sum_odd_power.n_8a6f3d\n        func() {\n            in(x: -219, y: 34, name: \"current\") property(Number) current_b5f4a1\n\n            out(x: 1024, y: 45, name: \"bool\") property(Bool) bool_6d9c2e\n\n            instance(x: 112, y: 80) modulo_3e0b44 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_b5f4a1 -> modulo_3e0b44.value\n            2 -> modulo_3e0b44.divisor\n            modulo_3e0b44.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_6d9c2e\n        } -> sum_odd_power.n_8a6f3d.predicate\n        sum_odd_power.continue_d9efd7 -> modulo_3e0b44.execute\n        modulo_3e0b44.result -> power_1a59b5.first\n        modulo_3e0b44.result -> power_1a59b5.second\n        power_1a59b5.result -> sum_odd_power.output_19e21c\n    }\n\n    \n\n    instance(x: -177, y: 509) sum_odd_power_f7d6f2 root.main.sum_odd_power {}\n\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -145, y: 71, name: \"side\") property(Number) side_8d5f6b\n\n        out(x: 276, y: 26, name: \"surface_area\") property(Number) sa_2e23c7\n\n        instance(x: 29, y: 58) pow_f3a0ec root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -155, y: 104) data_9f1a4d  = side\n        instance(x: -109, y: 139) mul_d2c9e5 root.Std_k98ojb.Math.Mul {}\n        pow_f3a0ec.result -> mul_d2c9e5.first\n        6 -> mul_d2c9e5.second\n        data_9f1a4d -> mul_d2c9e5.second\n        mul_d2c9e5.result -> sa_2e23c7\n    }\n\n    \n\n    instance(x: -162, y: 85) surface_area_e66f3b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -145, y: 24, name: \"side\") property(Number) side_9f2d4a\n\n        out(x: 216, y: 8, name: \"surface_area\") property(Number) surface_area_e6a7e5\n\n        instance(x: 21, y: -47) math_sqrt_6c0b71 root.Std_k98ojb.Math.Sqrt {}\n        data_instance(x: -191, y: -246) data_2d1f4a  = side\n        instance(x: -186, y: -249) mul_8a7e9f root.Std_k98ojb.Math.Mul {}\n        math_sqrt_6c0b71.result -> mul_8a7e9f.first\n        6 -> mul_8a7e9f.second\n        data_2d1f4a -> mul_8a7e9f.first\n        side_9f2d4a -> mul_8a7e9f.second\n        mul_8a7e9f.result -> surface_area_e6a7e5\n    }\n\n    \n\n    instance(x: 233, y: -104) surface_area_3b0c47 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -102, y: 19, name: \"side_length\") property(Number) side_length_99d8b1\n\n        out(x: 588, y: -26, name: \"surface_area\") property(Number) surface_area_5e15c6\n        out(x: 1012, y: 24, name: \"continue\") trigger() continue_0a4f3b\n\n        instance(x: 25, y: -7) pow_f3df57 root.Std_k98ojb.Math.Pow {}\n        side_length_99d8b1 -> pow_f3df57.x\n        2 -> pow_f3df57.y\n        pow_f3df57.result -> surface_area_5e15c6\n        instance(x: -113, y: 46) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        side_length_99d8b1 -> mul_f892a4.first\n        6 -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_5e15c6\n    }\n\n    \n\n    instance(x: -209, y: 13) cube_surface_area_d0f2ad root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -111, y: 23, name: \"side_length\") property(Number) side_length_5a4f6d\n\n        out(x: 216, y: 22, name: \"surface_area\") property(Number) sa_f1c85b\n        out(x: 118, y: 35, name: \"continue\") trigger() continue_9cd7e3\n\n        instance(x: -67, y: -102) expression_b8a5d4 root.Std_k98ojb.Math.Expression {\n            expression: \"6 * (side_length^2)\"\n        }\n        side_length_5a4f6d -> expression_b8a5d4.gen_0\n        expression_b8a5d4.result -> sa_f1c85b\n    }\n\n    \n\n    instance(x: 215, y: -32) surface_area_9e14eb root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -211, y: 34, name: \"side\") property(Number) side_9f5d45\n\n        out(x: 216, y: -31, name: \"surface_area\") property(Number) sa_4b0d6e\n\n        instance(x: 35, y: -46) pow_f1a3c7 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 208, y: 133) data_e5f8a2  = side\n        pow_f1a3c7.result -> sa_4b0d6e\n        side_9f5d45 -> pow_f1a3c7.x\n        pow_f1a3c7.y -> 2\n        data_e5f8a2 -> pow_f1a3c7.input\n    }\n\n    \n\n    instance(x: -143, y: 22) surface_area_3b9e95 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -106, y: 24, name: \"side\") property(Number) side_0f4a2e\n\n        out(x: 216, y: 15, name: \"surface_area\") property(Number) surface_area_f9b6c5\n\n        instance(x: -108, y: -40) pow_3d8dd1 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -191, y: -101) data_b7f2f0  = side\n        pow_3d8dd1.result -> surface_area_f9b6c5\n        side_0f4a2e -> pow_3d8dd1.x\n        2 -> pow_3d8dd1.y\n        data_b7f2f0 -> pow_3d8dd1.gen_0\n    }\n\n    \n\n    instance(x: -194, y: -63) cube_surface_area_4a30e5 root.main(cube_surface_area {})\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -123, y: 19, name: \"side\") property(Number) side_5f6e85\n\n        out(x: 188, y: 22, name: \"surface_area\") property(Number) sa_1b8c44\n\n        instance(x: 105, y: 23) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -159, y: 10) data_e6fdd9  = 6\n        instance(x: 32, y: 46) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side * side\"\n        }\n        instance(x: 114, y: -68) div_64046c root.Std_k98ojb.Math.Div {}\n        data_e6fdd9 -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        side_5f6e85 -> mul_f892a4.first\n        div_64046c.result -> sa_1b8c44\n    }\n\n    \n\n    instance(x: 121, y: -23) surface_area_7e3d9 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -105, y: 23, name: \"side\") property(Number) side_4f3d65\n\n        out(x: 216, y: 15, name: \"surface_area\") property(Number) surface_area_7e9e1b\n        out(x: 215, y: 20, name: \"continue\") trigger() continue_e45b2c\n\n        instance(x: -64, y: -123) pow_f6fdd5 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -95, y: -13, name: \"squared_side\") = side_4f3d65 * side_4f3d65\n        instance(x: 25, y: 111) mul_7a9c5e root.Std_k98ojb.Math.Mul {}\n        pow_f6fdd5.result -> mul_7a9c5e.first\n        squared_side -> mul_7a9c5e.second\n        mul_7a9c5e.result -> surface_area_7e9e1b\n    }\n\n    \n\n    instance(x: 106, y: -46) cube_surface_area_93f3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -101, y: 26, name: \"side\") property(Number) side_1d8e3f\n\n        out(x: 216, y: -76, name: \"area\") property(Number) area_f2a9db\n\n        instance(x: -139, y: -84) pow_1848ec root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -61, y: 18) data_e48f4d  = side\n        pow_1848ec.result -> area_f2a9db\n        side_1d8e3f -> pow_1848ec.x\n        6 -> pow_1848ec.y\n        data_e48f4d -> pow_1848ec.gen_0\n        pow_1848ec.result -> area_f2a9db\n    }\n\n    \n\n    instance(x: -69, y: -208) surface_area_d1e33b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -206, y: 57, name: \"side_length\") property(Number) side_length_9a0e2f\n\n        out(x: 216, y: -19, name: \"surface_area\") property(Number) surface_area_4c758d\n\n        instance(x: 21, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 234, y: 148) data_6e9f43  = side_length_9a0e2f\n        instance(x: 107, y: 151) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        data_6e9f43 -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> mul_f892a4.first\n        side_length_9a0e2f -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_4c758d\n    }\n\n    \n\n    instance(x: -294, y: 142) surface_area_1b8f6b root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -446, y: 43, name: \"list\") property(List) list_0a8f1d\n\n        out(x: 141, y: 68, name: \"output\") property(Number) output_3c34e6\n\n        instance(x: -1085, y: -26, name: \"Max\") Std_k98ojb.List.Max {}\n        instance(x: -1129, y: 59, name: \"Min\") Std_k98ojb.List.Min {}\n        data_instance(x: -1023, y: -44) data_6a7c94  = [first, middle, last]\n        instance(x: -1031, y: 49) length_8e2d31 root.Std_k98ojb.List.Length {}\n        instance(x: -1109, y: 61) sub_f3f0ab root.Std_k98ojb.Math.Sub {}\n        list_0a8f1d -> Max.items\n        list_0a8f1d -> Min.items\n        data_6a7c94 -> length_8e2d31.list\n        firstitem_9b1bc3 root.Std_k98ojb.List.FirstItem {}\n        lastitem_d831ca root.Std_k98ojb.List.LastItem {}\n        sub_f3f0ab.result -> output_3c34e6\n        Max.max -> data_6a7c94.last\n        Min.min -> data_6a7c94.first\n        length_8e2d31.length -> sub_f3f0ab.first\n        1 -> sub_f3f0ab.second\n    }\n\n    \n\n    instance(x: -62, y: -24) diff_max_min_4b34e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -145, y: -43, name: \"list\") property(List) list_6d5f44\n\n        out(x: 432, y: 73, name: \"difference\") property(Number) difference_f3d8b1\n        out(x: 104, y: -32, name: \"output\") property(Bool) output_d0c9e7\n\n        instance(x: -102, y: -29) length_5f6a21 root.Std_k98ojb.List.Length {}\n        instance(x: 105, y: 66, name: \"max_node\") Max {}\n        instance(x: 104, y: -35) min_node root.Std_k98ojb.List.Min {}\n        instance(x: -114, y: -34) sub_6c9a2d root.Std_k98ojb.Math.Sub {}\n        data_instance(x: -76, y: -32) data_3f8e5a  = [max_node, min_node]\n        instance(x: -45, y: 72) list_not_empty root.Std_k98ojb.List.NotEmpty {}\n        instance(x: -104, y: -28) ifexpression_1d9c55 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it > 0\"\n        }\n        getter(x: -81, y: 66, name: \"getter_a7e4f2\") getter_a7e4f2 = max_node\n        setter(x: 108, y: -33) setter_a7e4f2 = max_node\n        setter(x: 110, y: -32) setter_3f8e5a = min_node\n        sub_6c9a2d.result -> difference_f3d8b1\n        length_5f6a21.length -> sub_6c9a2d.first\n        list_not_empty.is_empty -> ifexpression_1d9c55.then\n        max_node.max -> data_3f8e5a.max\n        min_node.min -> data_3f8e5a.min\n        data_3f8e5a.max -> sub_6c9a2d.second\n        data_3f8e5a.min -> sub_6c9a2d.first\n        ifexpression_1d9c55.then -> output_d0c9e7\n        list_not_empty.is_empty -> output_d0c9e7\n    }\n\n    \n\n    instance(x: 52, y: -27) diff_max_min_e5f3b8 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -109, y: 143, name: \"list\") property(List) list_6e9f67\n\n        out(x: -119, y: 157, name: \"output\") property(Number) output_f2a0c1\n        out(x: 528, y: -104, name: \"continue\") trigger() continue_5b4d96\n\n        instance(x: -98, y: 128) length_3fdd6e root.Std_k98ojb.List.Length {}\n        instance(x: 204, y: 102) max_1c4a0a root.Std_k98ojb.Math.Max2 {}\n        instance(x: 217, y: 134) min_7d9b95 root.Std_k98ojb.Math.Min2 {}\n        instance(x: -83, y: 162) sub_8c31f6 root.Std_k98ojb.Math.Sub {}\n        list_6e9f67 -> length_3fdd6e.list\n        max_1c4a0a.left -> min_7d9b95.left\n        max_1c4a0a.right -> min_7d9b95.right\n        sub_8c31f6.result -> output_f2a0c1\n    }\n\n    \n\n    instance(x: 43, y: -28) diff_largest_smallest_5e2b3e root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -142, y: -538, name: \"list\") property(List) list_3d4f2a\n\n        out(x: 1048, y: 64, name: \"difference\") property(Number) difference_c6f9c1\n        out(x: -141, y: -547, name: \"output\") property(Bool) output_5e7da4\n\n        instance(x: -1073, y: -376) length_2d8a55 root.Std_k98ojb.List.Length {}\n        instance(x: 1036, y: 82, name: \"sort_on\") root.Std_k98ojb.List.SortOn {}\n        instance(x: -1017, y: -438) max_1f5e4c root.Std_k98ojb.Math.Max {}\n        instance(x: -1059, y: -586) min_3e3d0a root.Std_k98ojb.Math.Min {}\n        instance(x: 1078, y: 64, name: \"sub_7db6f5\") root.Std_k98ojb.Math.Sub {}\n        list_3d4f2a -> sort_on.list\n        sort_on.key -> max_1f5e4c.key\n        max_1f5e4c.result -> diff_largest_smallest.max\n        min_3e3d0a.result -> diff_largest_smallest.min\n        sub_7db6f5.result -> difference_c6f9c1\n    }\n\n    \n\n    instance(x: 59, y: -67) diff_largest_smallest_2bce4f root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -1099, y: -527, name: \"list\") property(List) list_6d4a5e\n\n        out(x: -1118, y: -538, name: \"difference\") property(Number) difference_f0b2c3\n        out(x: 119, y: -53, name: \"output\") property(Number) output_b1f7da\n\n        instance(x: -1049, y: -375) firstitem_9b1bc3 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1059, y: -696) lastitem_d831ca root.Std_k98ojb.List.LastItem {}\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first, middle, last]\n        instance(x: -432, y: -620) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_752c60 -> lastitem_d831ca.list\n        list_752c60 -> firstitem_9b1bc3.list\n        data_cc1b1b -> flatten_c31c7c.items\n        firstitem_9b1bc3.item -> data_cc1b1b.last\n        lastitem_d831ca.item -> data_cc1b1b.first\n        list_752c60 -> slice_3f3ee6.list\n        1 -> slice_3f3ee6.start\n        slice_3f3ee6.slice -> data_cc1b1b.middle\n        flatten_c31c7c.flattened -> output_b1f7da\n        list_752c60 -> length_4b8927.list\n        length_4b8927.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> slice_3f3ee6.end\n    }\n\n    \n\n    instance(x: 101, y: -67) diff_max_min_0e9a83 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -1039, y: 417, name: \"list\") property(List) list_6a0f48\n\n        out(x: 542, y: 46, name: \"difference\") property(Number) difference_e7e5d8\n\n        instance(x: -1013, y: 446) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 198, y: 53, name: \"max\") property(Number) max_b9f2d0\n        instance(x: 204, y: 62, name: \"min\") property(Number) min_a6e4c5\n        instance(x: -1027, y: 56) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_6a0f48 -> length_4b8927.list\n        max_b9f2d0 -> sub_f133b2.result\n        min_a6e4c5 -> sub_f133b2.first\n    }\n\n    \n\n    instance(x: 47, y: -17) diff_max_min_4eb8a1 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -1149, y: -533, name: \"list\") property(List) list_6f5b94\n\n        out(x: 246, y: 62, name: \"difference\") property(Number) difference_4e3c64\n        out(x: 432, y: -269, name: \"output\") property(List) output_e2d9af\n\n        instance(x: -1071, y: -388) length_9a0b8f root.Std_k98ojb.List.Length {}\n        instance(x: 444, y: 85, name: \"max\") property(Number) max_a3c6e4\n        instance(x: 1087, y: -479) minitem_1d2c5f root.Std_k98ojb.List.Min {}\n        data_instance(x: -1050, y: -530) data_8a9df4  = [max, min]\n        instance(x: -1013, y: -473) sub_f13551 root.Std_k98ojb.Math.Sub {}\n        list_6f5b94 -> max_a3c6e4.list\n        list_6f5b94 -> minitem_1d2c5f.list\n        data_8a9df4 -> output_e2d9af.items\n        length_9a0b8f.length -> sub_f13551.first\n        1 -> sub_f13551.second\n        max_a3c6e4 -> diff_largest_smallest.output\n        minitem_1d2c5f.item -> sub_f13551.result\n    }\n\n    \n\n    instance(x: -137, y: -67) diff_largest_smallest_15a8b7 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -1045, y: 114, name: \"list\") property(List) list_6a4e3d\n\n        out(x: 121, y: 118, name: \"difference\") property(Number) difference_b9f7e2\n        out(x: -101, y: 116, name: \"max\") property(Number) max_a1cdd8\n        out(x: -108, y: 115, name: \"min\") property(Number) min_8d84a5\n\n        instance(x: -119, y: -120) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 202, y: 114) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 204, y: 117) lessThanOrEqual_7c8e43 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -1049, y: -113) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: -102, y: -118) max_6f3d5a root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 116) min_7e0c38 root.Std_k98ojb.List.Min {}\n        instance(x: -1049, y: -113) list_slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -119, y: -120) get_at_fcd5d1 root.Std_k98ojb.List.GetAt {}\n        instance(x: 202, y: 114) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {}\n        list_6a4e3d -> length_6e87f2.list\n        greaterthan_cb50ae.result -> max_6f3d5a.left\n        lessThanOrEqual_7c8e43.result -> min_7e0c38.left\n        sub_f133b2.result -> list_slice_3f3ee6.start\n        length_6e87f2.length -> get_at_fcd5d1.index\n        list_6a4e3d -> get_at_fcd5d1.list\n        max_6f3d5a.max -> diff_max_min.difference\n        min_7e0c38.min -> diff_max_min.max\n        ifexpression_e38995.then -> sub_f133b2.execute\n        greaterthan_cb50ae.left -> sub_f133b2.first\n        lessThanOrEqual_7c8e43.right -> sub_f133b2.second\n        get_at_fcd5d1.itemAtIndex -> list_slice_3f3ee6.slice\n        max_6f3d5a.result -> diff_max_min.max\n        min_7e0c38.result -> diff_max_min.min\n    }\n\n    \n\n    instance(x: -144, y: 11) diff_max_min_4b2b35 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -1068, y: -546, name: \"list\") property(List) list_1a5d9f\n\n        out(x: -1014, y: 509, name: \"difference\") property(Number) difference_a7d6c0\n        out(x: 505, y: -548, name: \"output\") property(Number) output_f77e8b\n\n        instance(x: -1169, y: -539) length_1f4a9d root.Std_k98ojb.List.Length {}\n        instance(x: -1067, y: -494, name: \"max\") property(List) max_d3c59f\n        instance(x: 1022, y: 499, name: \"min\") property(List) min_6e4f8d\n        instance(x: -1049, y: -110) ifexpression_b4df21 root.Std_k98ojb.Std.IfExpression {\n            expression: \"max.length > min.length\"\n        }\n        getter(x: 116, y: -538, name: \"getter_1c43a3\") getter_1c43a3 = max\n        setter(x: 118, y: -326, name: \"setter_0d4b7f\") setter_0d4b7f = min\n        instance(x: -1159, y: -535) sub_5e8a28 root.Std_k98ojb.Math.Sub {}\n        list_1a5d9f -> max.length\n        length_1f4a9d.length -> sub_5e8a28.first\n        1 -> sub_5e8a28.second\n        ifexpression_b4df21.then -> setter_0d4b7f.execute\n        list_1a5d9f -> setter_0d4b7f.list\n        max.length -> setter_0d4b7f.new_value\n        min.length -> sub_5e8a28.second\n        ifexpression_b4df21.else -> setter_0d4b7f.execute\n        list_1a5d9f -> length_1f4a9d.list\n        max.length -> sub_5e8a28.first\n        min.length -> sub_5e8a28.second\n        ifexpression_b4df21.then -> setter_0d4b7f.execute\n        list_1a5d9f -> length_1f4a9d.list\n        max.length -> sub_5e8a28.first\n        min.length -> sub_5e8a28.second\n        sub_5e8a28.result -> difference_a7d6c0\n    }\n\n    \n\n    instance(x: 115, y: -53) diff_largest_smallest_d3d4f9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -123, y: -23, name: \"list\") property(List) list_1e3f9d\n\n        out(x: -109, y: -43, name: \"difference\") property(Number) difference_f7f2c6\n        out(x: 115, y: -46, name: \"max\") property(Number) max_a0a5b8\n        out(x: 135, y: -23, name: \"min\") property(Number) min_9d2e76\n\n        instance(x: -108, y: -48) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 198, y: 60) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 199, y: 72) lessThanOrEqual_5c6d9a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -109, y: 65) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_1e3f9d -> greaterthan_cb50ae.left\n        list_1e3f9d -> lessThanOrEqual_5c6d9a.right\n        max_a0a5b8 -> greaterthan_cb50ae.result\n        min_9d2e76 -> sub_f133b2.result\n        length_6e87f2.length -> greaterthan_cb50ae.right\n        list_1e3f9d -> lessThanOrEqual_5c6d9a.list\n    }\n\n    \n\n    instance(x: 101, y: -67) diff_max_min_5ed4a0 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -42, y: 64, name: \"input\") property(Number) input_8f2d0a\n\n        out(x: 1739, y: -206, name: \"output\") property(Bool) output_e5cd7e\n\n        instance(x: 121, y: 74, name: \"even\") isnumeric_6b3c43 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 201, y: 69) tolower_7f44a1 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 181, y: -207) contains_8c0dcd root.Std_k98ojb.Strings.Contains {}\n        instance(x: 121, y: 72) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        input_8f2d0a -> isnumeric_6b3c43.input\n        tolower_7f44a1.output -> contains_8c0dcd.input\n        contains_8c0dcd.input -> not_75283f.input\n        even.result -> output_e5cd7e\n    }\n\n    \n\n    instance(x: -66, y: 35) is_even_6b3bba root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -45, y: 19, name: \"number\") property(Number) number_5f2d74\n\n        out(x: 0, y: 34, name: \"output\") property(Bool) output_7b6b8e\n\n        instance(x: 194, y: 25, name: \"even or odd\") Std.If {}\n        instance(x: -39, y: 33, name: \"is even\") Std.IfExpression {}\n        instance(x: 192, y: 34) modulo_7c2f1b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 191, y: 25) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: -49, y: 27) is_even_value root.Std_k98ojb.Std.If {}\n\n        is_even_value.predicate -> modulo_7c2b\n        modulo_7c2b.result -> is_even_value.then\n        number_5f2d74 -> is_even_value.else\n        not_75283f.result -> output_7b6b8e\n        is_even_value.value -> output_7b6b8e\n    }\n\n    \n\n    instance(x: -34, y: 13) is_even_f1c0aa root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -54, y: 44, name: \"number\") property(Number) num_5d0a47\n\n        out(x: 0, y: 49, name: \"output\") property(Bool) output_1e3c63\n\n        instance(x: 11, y: 46) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 18, y: 50) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 26, y: 48) equal_d6a0d5 root.Std_k98ojb.Logic.Equal {}\n        modulo_c76d2b.result -> not_75283f\n        num_5d0a47 % 2 -> modulo_c76d2b.value\n        if (num_5d0a47 % 2 == 0) then equal_d6a0d5 else not_75283f\n        equal_d6a0d5.result -> output_1e3c63\n    }\n\n    \n\n    instance(x: -26, y: 21) is_even_e8b4a9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -44, y: 43, name: \"input\") property(Number) input_1f8d6e\n\n        out(x: 1744, y: 33, name: \"output\") property(Bool) output_9f3f45\n\n        instance(x: 173, y: 47) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 185, y: 41) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 193, y: 49) less_thanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -44, y: 46) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 179, y: 42) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        function() {\n            in(x: -24, y: 47, name: \"x\") property(Number) x_1f2d9e\n\n            out(x: 1744, y: 33, name: \"y\") property(Number) y_0a5c98\n\n            instance(x: 178, y: 41) modulo_c76d2b.root.Std_k98ojb.Math.Modulo {}\n            instance(x: -44, y: 46) less_thanorequal_f11fda.root.Std_k98ojb.Math.LessThanOrEqual {}\n            input_1f8d6e -> modulo_c76d2b.value\n            x_1f2d9e -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> less_thanorequal_f11fda.left\n            0 -> less_thanorequal_f11fda.right\n            less_thanorequal_f11fda.result -> if_07b8c7.predicate\n            greaterthan_cb50ae.left -> if_07b8c7.then\n            input_1f8d6e -> greaterthan_cb50ae.right\n            greaterthan_cb50ae.result -> not_75283f.input\n        } -> if_07b8c7.handler\n        less_thanorequal_f11fda.result -> output_9f3f45\n        modulo_c76d2b.result -> not_75283f.input\n    }\n\n    \n\n    instance(x: -57, y: 34) is_even_1e2a41 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 43, name: \"number\") property(Number) number_5f8e9d\n\n        out(x: 188, y: 69, name: \"output\") property(Bool) output_4b2cd3\n\n        instance(x: -68, y: 45) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 180, y: 73) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n        number_5f8e9d -> modulo_c76d2b.value\n        0 -> modulo_c76d2b.divisor\n        notequal_cb8a55.result -> output_4b2cd3\n        modulo_c76d2b.result -> notequal_cb8a55.left\n    }\n\n    \n\n    instance(x: -23, y: -37) is_even_f1f34e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -31, y: 46, name: \"number\") property(Number) num_5a6d36\n\n        out(x: 0, y: 55, name: \"output\") property(Bool) output_f1b2e4\n\n        instance(x: 17, y: 51) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: -21, y: 53) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 1, y: 56) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        modulo_c76d2b.result -> not_75283f.input\n        num_5a6d36 -> modulo_c76d2b.value\n        greaterthan_cb50ae.result -> output_f1b2e4\n        greaterthan_cb50ae.left -> not_75283f.input\n        0 -> greaterthan_cb50ae.right\n        not_75283f.result -> output_f1b2e4\n    }\n\n    \n\n    instance(x: -21, y: 23) is_even_e8d3a5 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -55, y: 4, name: \"number\") property(Number) number_5d2a56\n\n        out(x: 1, y: 23, name: \"output\") property(Bool) output_6f7e0b\n\n        instance(x: -25, y: 29) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 14, y: 38) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 4, y: 27) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n\n        modulo_c76d2b.result -> output_6f7e0b\n        number_5d2a56 -> modulo_c76d2b.value\n        0 -> not_75283f.input\n        greaterthan_cb50ae.result -> not_75283f.input\n        modulo_c76d2b.divisor -> greaterthan_cb50ae.right\n        number_5d2a56 -> greaterthan_cb50ae.left\n    }\n\n    \n\n    instance(x: -46, y: 1) is_even_4c8e0b root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -38, y: 44, name: \"input\") property(Number) input_5a4e8d\n\n        out(x: 1740, y: 41, name: \"output\") property(Bool) output_a2c6f3\n\n        instance(x: -33, y: 57, name: \"is even\") Std.If {\n            in(x: 0, y: 0, name: \"execute\") trigger() execute_4b5a9e\n            in(x: 0, y: 0, name: \"input\") property(Number) input_3f6c7d\n\n            out(x: 0, y: 0, name: \"then\") trigger() then_58a66b\n            out(x: 0, y: 0, name: \"else\") trigger() else_4e8b41\n            out(x: 0, y: 0, name: \"value\") property(Number) value_6f9d2c\n\n        }\n        instance(x: -27, y: 47) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        input_5a4e8d -> modulo_c76d2b.value\n        0 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> is_even.predicate\n        then_58a66b.execute -> output_a2c6f3\n        else_4e8b41.execute -> output_a2c6f3\n    }\n\n    \n\n    instance(x: -21, y: 57) is_even_5a7d23 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -528, y: 437, name: \"number\") property(Number) number_9d8f0e\n\n        out(x: 1234, y: 55, name: \"output\") property(Bool) output_1bdc94\n\n        instance(x: -313, y: 52, name: \"is_even_node\") Std.If {\n            in(x: 3, y: 2, name: \"execute\") trigger() execute_11f6c5\n            in(x: 0, y: 0, name: \"input\") property(Bool) input_8e7a59\n\n            out(x: 1, y: 1, name: \"then\") trigger() then_12d4bb\n            out(x: 2, y: 3, name: \"else\") trigger() else_6bdf5c\n            out(x: 0, y: 0, name: \"value\") property(Number) value_7f9e31\n\n        }\n        instance(x: -318, y: 521, name: \"is_even_node then\") Std.IfExpression {\n            expression: \"(n % 2 == 0)\"\n        }\n\n        instance(x: 189, y: 425, name: \"else\") Std.If {\n            in(x: 1, y: 1, name: \"execute\") trigger() execute_11f6c5\n            in(x: 0, y: 0, name: \"input\") property(Bool) input_8e7a59\n\n            out(x: 2, y: 3, name: \"then\") trigger() then_12d4bb\n            out(x: 1, y: 1, name: \"else\") trigger() else_6bdf5c\n            out(x: 0, y: 0, name: \"value\") property(Number) value_7f9e31\n\n        }\n        instance(x: -49, y: 372, name: \"then\") Std.If {\n            in(x: 1, y: 1, name: \"execute\") trigger() execute_11f6c5\n            in(x: 0, y: 0, name: \"input\") property(Bool) input_8e7a59\n\n            out(x: 2, y: 3, name: \"then\") trigger() then_12d4bb\n            out(x: 1, y: 1, name: \"else\") trigger() else_6bdf5c\n            out(x: 0, y: 0, name: \"value\") property(Number) value_7f9e31\n\n        }\n        instance(x: -48, y: 517, name: \"then then\") Std.If {\n            in(x: 1, y: 1, name: \"execute\") trigger() execute_11f6c5\n            in(x: 0, y: 0, name: \"input\") property(Bool) input_8e7a59\n\n            out(x: 2, y: 3, name: \"then\") trigger() then_12d4bb\n            out(x: 1, y: 1, name: \"else\") trigger() else_6bdf5c\n            out(x: 0, y: 0, name: \"value\") property(Number) value_7f9e31\n\n        }\n        instance(x: -83, y: 52, name: \"then then then\") Std.If {\n            in(x: 1, y: 1, name: \"execute\") trigger() execute_11f6c5\n            in(x: 0, y: 0, name: \"input\") property(Bool) input_8e7a59\n\n            out(x: 2, y: 3, name: \"then\") trigger() then_12d4bb\n            out(x: 1, y: 1, name: \"else\") trigger() else_6bdf5c\n            out(x: 0, y: 0, name: \"value\") property(Number) value_7f9e31\n\n        }\n        instance(x: -82, y: 155, name: \"then then then then\") Std.If {\n            in(x: 1, y: 1, name: \"execute\") trigger() execute_11f6c5\n            in(x: 0, y: 0, name: \"input\") property(Bool) input_8e7a59\n\n            out(x: 2, y: 3, name: \"then\") trigger() then_12d4bb\n            out(x: 1, y: 1, name: \"else\") trigger() else_6bdf5c\n            out(x: 0, y: 0, name: \"value\") property(Number) value_7f9e31\n\n        }\n        instance(x: -81, y: 155, name: \"then then then then then\") Std.If {\n            in(x: 1, y: 1, name: \"execute\") trigger() execute_11f6c5\n            in(x: 0, y: 0, name: \"input\") property(Bool) input_8e7a59\n\n            out(x: 2, y: 3, name: \"then\") trigger() then_12d4bb\n            out(x: 1, y: 1, name: \"else\") trigger() else_6bdf5c\n            out(x: 0, y: 0, name: \"value\") property(Number) value_7f9e31\n\n        }\n        instance(x: -80, y: 155, name: \"then then then then then then\") Std.If {\n            in(x: 1, y: 1, name: \"execute\") trigger() execute_11f6c5\n            in(x: 0, y: 0, name: \"input\") property(Bool) input_8e7a59\n\n            out(x: 2, y: 3, name: \"then\") trigger() then_12d4bb\n            out(x: 1, y: 1, name: \"else\") trigger() else_6bdf5c\n            out(x: 0, y: 0, name: \"value\") property(Number) value_7f9e31\n\n        }\n        instance(x: -79, y: 155, name: \"then then then then then then then\") Std.If {\n            in(x: 1, y: 1, name: \"execute\") trigger() execute_11f6c5\n            in(x: 0, y: 0, name: \"input\") property(Bool) input_8e7a59\n\n            out(x: 2, y: 3, name: \"then\") trigger() then_12d4bb\n            out(x: 1, y: 1, name: \"else\") trigger() else_6bdf5c\n            out(x: 0, y: 0, name: \"value\") property(Number) value_7f9e31\n\n        }\n        instance(x: -78, y: 155, name: \"then then then then then then then then\") Std.If {\n            in(x: 1, y: 1, name: \"execute\") trigger() execute_11f6c5\n            in(x: 0, y: 0, name: \"input\") property(Bool) input_8e7a59\n\n            out(x: 2, y: 3, name: \"then\") trigger() then_12d4bb\n            out(x: 1, y: 1, name: \"else\") trigger() else_6bdf5c\n            out(x: 0, y: 0, name: \"value\") property(Number) value_7f9e31\n\n        }\n        instance(x: -77, y: 155, name: \"then then then then then then then then then\") Std.If {\n            in(x: 1, y: 1, name: \"execute\") trigger() execute_11f6c5\n            in(x: 0, y: 0, name: \"input\") property(Bool) input_8e7a59\n\n            out(x: 2, y: 3, name: \"then\") trigger() then_12d4bb\n            out(x: 1, y: 1, name: \"else\") trigger() else_6bdf5c\n            out(x: 0, y: 0, name: \"value\") property(Number) value_7f9e31\n\n        }\n        instance(x: -76, y: 155, name: \"then then then then then then then then then then\") Std.If {\n            in(x: 1, y: 1, name: \"execute\") trigger() execute_11f6c5\n            in(x: 0, y: 0, name: \"input\") property(Bool) input_8",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -533, y: 46, name: \"input\") property(Number) input_3a9d1f\n\n        out(x: 1068, y: -10, name: \"output\") property(Bool) output_4b7b2e\n\n        instance(x: -194, y: 23, name: \"is even\") Std.If {\n            in(x: 0, y: 0, name: \"execute\") trigger() execute_4a8d5f\n            in(x: 0, y: 0, name: \"input\") property(Bool) input_b3c1b9\n\n            out(x: 0, y: 0, name: \"then\") trigger() then_7e21b2\n            out(x: 0, y: 0, name: \"else\") trigger() else_57f8d6\n            out(x: 0, y: 0, name: \"value\") property(Number) value_8c9ec5\n\n        }\n        instance(x: -55, y: 28, name: \"get remainder\") Std.CallFunction {\n            in(x: 0, y: 0, name: \"input\") property(Number) input_2b0d95\n            out(x: 0, y: 0, name: \"result\") property(Number) result_8f7e3c\n\n        }\n        instance(x: -43, y: 19, name: \"check remainder\") Std.If {\n            in(x: 0, y: 0, name: \"execute\") trigger() execute_4a8d5f\n            in(x: 0, y: 0, name: \"input\") property(Bool) input_1b5c85\n\n            out(x: 0, y: 0, name: \"then\") trigger() then_7e21b2\n            out(x: 0, y: 0, name: \"else\") trigger() else_57f8d6\n            out(x: 0, y: 0, name: \"value\") property(Number) value_8c9ec5\n\n        }\n        instance(x: -19, y: 29, name: \"check even\") Std.If {\n            in(x: 0, y: 0, name: \"execute\") trigger() execute_4a8d5f\n            in(x: 0, y: 0, name: \"input\") property(Bool) input_2b0d95\n\n            out(x: 0, y: 0, name: \"then\") trigger() then_7e21b2\n            out(x: 0, y: 0, name: \"else\") trigger() else_57f8d6\n            out(x: 0, y: 0, name: \"value\") property(Number) value_8c9ec5\n\n        }\n        instance(x: -44, y: 25, name: \"get remainder\") Std.CallFunction {\n            in(x: 0, y: 0, name: \"input\") property(Number) input_2b0d95\n            out(x: 0, y: 0, name: \"result\") property(Number) result_8f7e3c\n\n        }\n        instance(x: -44, y: 29, name: \"check remainder\") Std.CallFunction {\n            in(x: 0, y: 0, name: \"input\") property(Number) input_2b0d95\n            out(x: 0, y: 0, name: \"result\") property(Number) result_8f7e3c\n\n        }\n        instance(x: -42, y: 22, name: \"get remainder\") Std.CallFunction {\n            in(x: 0, y: 0, name: \"input\") property(Number) input_2b0d95\n            out(x: 0, y: 0, name: \"result\") property(Number) result_8f7e3c\n\n        }\n        instance(x: -43, y: 26, name: \"check remainder\") Std.CallFunction {\n            in(x: 0, y: 0, name: \"input\") property(Number) input_2b0d95\n            out(x: 0, y: 0, name: \"result\") property(Number) result_8f7e3c\n\n        }\n        instance(x: -42, y: 19, name: \"check remainder\") Std.CallFunction {\n            in(x: 0, y: 0, name: \"input\") property(Number) input_2b0d95\n            out(x: 0, y: 0, name: \"result\") property(Number) result_8f7e3c\n\n        }\n        instance(x: -42, y: 24, name: \"get remainder\") Std.CallFunction {\n            in(x: 0, y: 0, name: \"input\") property(Number) input_2b0d95\n            out(x: 0, y: 0, name: \"result\") property(Number) result_8f7e3c\n\n        }\n        instance(x: -42, y: 28, name: \"check remainder\") Std.CallFunction {\n            in(x: 0, y: 0, name: \"input\") property(Number) input_2b0d95\n            out(x: 0, y: 0, name: \"result\") property(Number) result_8f7e3c\n\n        }\n        instance(x: -42, y: 30, name: \"get remainder\") Std.CallFunction {\n            in(x: 0, y: 0, name: \"input\") property(Number) input_2b0d95\n            out(x: 0, y: 0, name: \"result\") property(Number) result_8f7e3c\n\n        }\n        instance(x: -42, y: 34, name: \"check remainder\") Std.CallFunction {\n            in(x: 0, y: 0, name: \"input\") property(Number) input_2b0d95\n            out(x: 0, y: 0, name: \"result\") property(Number) result_8f7e3c\n\n        }\n        instance(x: -42, y: 36, name: \"get remainder\") Std.CallFunction {\n            in(x: 0, y: 0, name: \"input\") property(Number) input_2b0d95\n            out(x: 0, y: 0, name: \"result\") property(Number) result_8f7e3c\n\n        }\n        instance(x: -42, y: 40, name: \"check remainder\") Std.CallFunction {\n            in(x: 0, y: 0, name: \"input\") property(Number) input_2b0d95\n            out(x: 0, y: 0, name: \"result\") property(Number) result_8f7e3c\n\n        }\n        instance(x: -42, y: 42, name: \"get remainder\") Std.CallFunction {\n            in(x: 0, y: 0, name: \"input\") property(Number) input_2b0d95\n            out(x: 0, y: 0, name: \"result\") property(Number) result_8f7e3c\n\n        }\n        instance(x: -42, y: 46, name: \"check remainder\") Std.CallFunction {\n            in(x: 0, y: 0, name: \"input\") property(Number) input_2b0d95\n            out(x: 0, y: 0, name: \"result\") property(Number) result_8f7e3c\n\n        }\n        instance(x: -42, y: 48, name: \"get remainder\") Std.CallFunction {\n            in(x: 0, y: 0, name: \"input\") property(Number) input_2b0d95\n            out(x: 0, y: 0, name: \"result\") property(Number) result_8f7e3c\n\n        }\n        instance(x: -42, y: 52, name: \"check remainder\") Std.CallFunction {\n            in(x: 0, y: 0, name: \"input\") property(Number) input_2b0d95\n            out(x: 0, y: 0, name: \"result\") property(Number) result_8f7e3c\n\n        }\n        instance(x: -42, y: 54, name: \"get remainder\") Std.CallFunction {\n            in(x: 0, y: 0, name: \"input\") property(Number) input_2b0d95\n            out(x: 0, y: 0, name: \"result\") property(Number) result_8f7e3c\n\n        }\n        instance(x: -42, y: 58, name: \"check remainder\") Std.CallFunction {\n            in(x: 0, y: 0, name: \"input\") property"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -272, y: 151, name: \"string\") property(String) input_0\n\n        out(x: 542, y: -2, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> output_ebef81\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -343, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"characters\") characters_9d6f5b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 65, y: 217, name: \"map_1a2c6e\") map_1a2c6e root.Std_k98ojb.Iteration.Map {}\n        instance(x: -38, y: 26, name: \"count_context\") count_context Number\n        instance(x: 0, y: 0) set_3d9f8f root.Std_k98ojb.Std.Set {}\n        instance(x: 81, y: 29) if_7c284f root.Std_k98ojb.Std.If {}\n        instance(x: -38, y: 257, name: \"first_repeated\") first_repeated Number\n        characters_9d6f5b.output -> map_1a2c6e.items\n        input_0 -> characters_9d6f5b.input\n        set_3d9f8f.continue -> if_7c284f.execute\n        map_1a2c6e.value -> first_repeated\n        count_context.reset -> if_7c284f.execute\n        set_3d9f8f.new_value -> first_repeated\n        input_0 -> set_3d9f8f.input\n        characters_9d6f5b.characters -> set_3d9f8f\n        map_1a2c6e.on item -> if_7c284f.execute\n        if_7c284f.then -> count_context.execute\n        first_repeated -> count_context.value\n        input_0 -> if_7c284f.input\n        set_3d9f8f.item -> if_7c284f.right\n        map_1a2c6e.index -> if_7c284f.left\n    }\n\n    \n\n    instance(x: -81, y: 159) first_repeated_char_f15bad root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -312, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_3ae271\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 532, y: -105) count_9a7c94 root.Std_k98ojb.Std.Count {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> count_9a7c94.reset\n        1 -> count_9a7c94.count\n        count_9a7c94.value -> first_repeated_char.index\n    }\n\n    \n\n    instance(x: -81, y: 159) first_repeated_char_f15bad root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -234, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 533, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -287, y: 129, name: \"string\") property(String) input_0\n\n        out(x: 1105, y: 25, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 49, y: 105) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: -35, y: 27, name: \"char_map\") Map_4c1a8e {}\n        instance(x: 73, y: 85) if_7c284f root.Std_k98ojb.Std.If {}\n        instance(x: -39, y: 26, name: \"index\") Number_2d0dd6 {}\n        char_map -> input_0\n        contains_d42dce.input -> index\n        input_0 -> contains_d42dce.contains\n        if_7c284f.execute -> char_map.find\n        char_map.find -> if_7c284f.predicate\n        1 -> if_7c284f.index\n        0 -> if_7c284f.index\n        index -> if_7c284f.new_value\n    }\n\n    \n\n    instance(x: -82, y: 179) first_repeated_char_f9e2b4 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 819, y: 29, name: \"output\") property(Any) output_d1e4d6\n\n        instance(x: 73, y: 21) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -146, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> output_d1e4d6\n    }\n\n    \n\n    instance(x: -293, y: 162) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -343, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 1003, y: -2, name: \"output\") property(Any) output_c34d9e\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> output_c34d9e\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -235, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 550, y: -2, name: \"output\") property(Any) output_c8e4f1\n\n        instance(x: 394, y: 147) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 529, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> output_c8e4f1\n    }\n\n    \n\n    instance(x: -45, y: 158) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -251, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 822, y: -1, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 43, y: 2) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 275, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 412, y: -113) characters_6c8f7a root.Std_k98ojb.Strings.Characters {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        characters_6c8f7a.characters -> contains_d42dce.input\n        contains_d42dce.result -> output_ebef81\n    }\n\n    \n\n    instance(x: -92, y: 164) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -231, y: 167, name: \"string\") property(String) input_0\n\n        out(x: 531, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -243, y: 17, name: \"list\") property(List) list_a8f6d4\n\n        out(x: 313, y: 26, name: \"second_min\") property(Number) second_min_7e3d5b\n\n        instance(x: 0, y: 0) first_smallest_node root.Std_k98ojb.List.Min {}\n        instance(x: -142, y: 45) second_smallest_node root.Std_k98ojb.List.Min {}\n        list_a8f6d4 -> first_smallest_node.items\n        list_a8f6d4 -> second_smallest_node.items\n\n        instance(x: 0, y: 0) ifexpression_5c9e0a root.Std_k98ojb.Std.IfExpression {\n            expression: \"first_smallest < second_smallest\"\n        }\n        first_smallest_node.min -> Std_k98ojb.Count.reset\n        second_smallest_node.min -> Std_k98ojb.Count.reset\n        first_smallest_node.min -> Std_k98ojb.Count.increment\n        second_smallest_node.min -> Std_k98ojb.Count.increment\n        ifexpression_5c9e0a.then -> second_smallest_node.min\n        list_a8f6d4 -> first_smallest_node.result\n        list_a8f6d4 -> second_smallest_node.result\n        first_smallest_node.min -> second_min_7e3d5b\n    }\n\n    \n\n    instance(x: -59, y: 121) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -243, y: 0, name: \"list\") property(List) list_4d5f8e\n\n        out(x: 409, y: 63, name: \"second_min\") property(Number) second_min_e7d6c9\n\n        instance(x: 0, y: 0) min_node root.Std_k98ojb.List.Min {}\n        instance(x: -123, y: 66) second_node root.Std_k98ojb.List.Min {}\n        list_4d5f8e -> min_node.items\n        list_4d5f8e -> second_node.items\n        min_node.min -> root.Std_k98ojb.List.Max.firstItem\n        second_node.min -> second_min_e7d6c9\n    }\n\n    \n\n    instance(x: 324, y: 85) second_smallest_f0b0a1 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -305, y: 0, name: \"list\") property(List) list_ae8f4a\n\n        out(x: -109, y: 28, name: \"min\") property(Number) min_ab9c41\n        out(x: -113, y: 32, name: \"second_min\") property(Number) second_min_5b7d3f\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -106, y: 23, name: \"elem\") property(Number) elem_a7e2a4\n\n            out(x: 516, y: 28, name: \"bool\") property(Bool) bool_4c9d0b\n\n            instance(x: 90, y: 20) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 309, y: 25) min_7e2a1 root.Std_k98ojb.Math.Min {}\n            instance(x: 510, y: 29) second_min_node root.Std_k98ojb.List.SecondItem {}\n            0 -> notequal_807ffd.right\n            min_7e2a1.values -> notequal_807ffd.left\n            elem_a7e2a4 -> notequal_807ffd.it\n            notequal_807ffd.result -> bool_4c9d0b\n            second_min_node.item -> second_min_5b7d3f\n        } -> find_6d05b0.predicate\n        list_ae8f4a -> find_6d05b0.items\n        find_6d05b0.item -> min_ab9c41\n        find_6d05b0.next_item -> second_min_node.item\n    }\n\n    \n\n    instance(x: -56, y: 529) second_smallest_8f7a3e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -270, y: 2, name: \"list\") property(List) list_9e5d8f\n\n        out(x: 513, y: 25, name: \"second_min\") property(Number) second_min_a1c89a\n        instance(x: 0, y: 0) first_smallest_node root.Std_k98ojb.List.Min {}\n        instance(x: -209, y: 24) second_smallest_node root.main.second_smallest {}\n\n        list_9e5d8f -> first_smallest_node.items\n        first_smallest_node.min -> smallest_node_e6a1c0\n        smallest_node_e6a1c0 -> second_smallest_node.initial_value\n        second_smallest_node.result -> second_min_a1c89a\n    }\n\n    \n\n    instance(x: -57, y: 538) second_smallest_node_4f2d38 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -245, y: 0, name: \"list\") property(List) list_8d5f47\n\n        out(x: 1127, y: -1, name: \"second_min\") property(Number) second_min_7e23a9\n\n        instance(x: 426, y: 72) first_smallest root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 24) second_smallest_node root.main.second_smallest {}\n\n        list_8d5f47 -> first_smallest.items\n        first_smallest.min -> second_min_7e23a9\n        first_smallest.min -> second_smallest_node.second_min\n    }\n\n    \n\n    instance(x: -34, y: 528) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -103, y: 28, name: \"list\") property(List) list_abed4a\n\n        out(x: 504, y: 23, name: \"min\") property(Number) min_ai\n        out(x: 507, y: -1, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) list_sort_9d2f8a root.Std_k98ojb.List.Sort {}\n        instance(x: 0, y: 0) list_get_at_6c3c94 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) list_slice_5a3f4d root.Std_k98ojb.List.Slice {}\n        instance(x: 0, y: 0) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {}\n\n        list_abed4a -> list_sort_9d2f8a.items\n        list_sort_9d2f8a.sorted_list -> list_get_at_6c3c94.items\n        list_get_at_6c3c94.itemAtIndex -> second_min_ai\n        ifexpression_e38995.then -> list_slice_5a3f4d.start\n        list_sort_9d2f8a.sorted_list[1] -> list_slice_5a3f4d.slice\n        list_slice_5a3f4d.slice -> second_min_ai\n    }\n\n    \n\n    instance(x: -33, y: 525) second_smallest_b6e7b root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -101, y: 2, name: \"list\") property(List) list_a1d3a6\n\n        out(x: -112, y: 74, name: \"min\") property(Number) min_9f4c71\n        out(x: -102, y: 66, name: \"second_min\") property(Number) second_min_f5e8aa\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -110, y: 29, name: \"elem\") property(Number) elem_3a2c74\n\n            out(x: 509, y: 34, name: \"bool\") property(Bool) bool_fdb5e1\n\n            instance(x: 89, y: 25) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: 31) min_9f4c71_node root.Std_k98ojb.Math.Min {}\n            instance(x: 520, y: 36) second_min_f5e8aa_node root.Std_k98ojb.Math.Min {}\n            notequal_807ffd.left -> min_9f4c71_node.values\n            elem_3a2c74 -> min_9f4c71_node.x\n            min_9f4c71_node.result -> min_9f4c71\n            notequal_807ffd.right -> second_min_f5e8aa_node.values\n            elem_3a2c74 -> second_min_f5e8aa_node.x\n            second_min_f5e8aa_node.result -> second_min_f5e8aa\n        } -> find_6d05b0.predicate\n        list_a1d3a6 -> find_6d05b0.items\n        find_6d05b0.item -> min_9f4c71_node.values\n    }\n\n    \n\n    instance(x: -49, y: 530) second_smallest_f2e8a5 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -304, y: 8, name: \"list\") property(List) list_abed4a\n\n        out(x: 106, y: -1, name: \"number\") property(Number) number_3bc2ae\n        instance(x: 0, y: 0) second_smallest_node root.Std_k98ojb.List.Sort {}\n        instance(x: 0, y: 0) min_node root.Std_k98ojb.Math.Min {}\n        list_abed4a -> second_smallest_node.items\n        second_smallest_node.sorted_list[1] -> min_node.items\n        min_node.min -> number_3bc2ae\n    }\n    \n\n    instance(x: -43, y: 518) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -305, y: 0, name: \"list\") property(List) list_a3a9e4\n\n        out(x: 509, y: 55, name: \"min1\") property(Number) min_7d74c6\n        out(x: 511, y: 35, name: \"min2\") property(Number) min_8e95df\n\n        instance(x: -208, y: 0) find_2f4a5b root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -103, y: 23, name: \"elem\") property(Number) elem_a3c6d7\n\n            out(x: 521, y: 44, name: \"bool\") property(Bool) bool_1f8da5\n\n            instance(x: 88, y: 28) lessThanOrEqual_9b0a47 root.Std_k98ojb.Logic.LessThanOrEqual {}\n            instance(x: 310, y: 34) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            2 -> lessThanOrEqual_9b0a47.left\n            elem_a3c6d7 -> lessThanOrEqual_9b0a47.right\n            1 -> lessThanOrEqual_9b0a47.right\n            notequal_807ffd.result -> bool_1f8da5\n        } -> find_2f4a5b.predicate\n        list_a3a9e4 -> find_2f4a5b.items\n        find_2f4a5b.item -> min_7d74c6\n        instance(x: 322, y: 39) map_96df20 root.Std_k98ojb.Iteration.Map {}\n        lessThanOrEqual_9b0a47.result -> map_96df20.handler\n        find_2f4a5b.item -> map_96df20.items\n        map_96df20.output_list -> min_8e95df\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_d3d6c7 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -105, y: 3, name: \"list\") property(List) list_8e3f2a\n\n        out(x: 93, y: 26, name: \"second_min\") property(Number) second_min_9b4e6d\n\n        instance(x: 0, y: 0) sort_on_node root.Std_k98ojb.List.SortOn {}\n        list_8e3f2a -> sort_on_node.list\n        sort_on_node.key -> Std_k98ojb.String.ToLower\n        sort_on_node.sorted_list -> second_smallest.list\n        sort_on_node.sorted_list[1] -> second_smallest.second_min\n\n        instance(x: 0, y: 0) min_node root.Std_k98ojb.Math.Min {}\n        list_8e3f2a -> min_node.values\n        min_node.result -> second_smallest.second_min\n    }\n\n    \n\n    instance(x: -21, y: 541) second_smallest_b7d1d5 root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_RAG_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 15910,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -505, y: 59, name: \"list1\") property(List) list_2e3f6d\n        in(x: -513, y: -230, name: \"list2\") property(List) list_b5b8a4\n\n        out(x: 1069, y: 19, name: \"output\") property(Bool) output_f1c43c\n\n        instance(x: 744, y: 100) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -69, y: 23) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -26, y: -16, name: \"current\") property(Number) _index_8e5f3d\n            in(x: -13, y: 80, name: \"_index\") property(Number) _index_9a55eb\n\n            out(x: 1152, y: 28, name: \"output\") property(Bool) output_e7b4f1\n\n            instance(x: 262, y: 77) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n            instance(x: -104, y: 66) not_75283f.root = contains_32727d\n            instance(x: 292, y: 75) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n                expression: \"not_75283f.result\"\n            }\n            instance(x: -33, y: 89) contains_32727d.item -> map_c73e3b.handler\n            list_b5b8a4 -> map_c73e3b.items\n            map_c73e3b.output_list -> ifexpression_875761.gen_0\n            map_c73e3b.output_list -> not_75283f.input\n            not_75283f.result -> output_e7b4f1\n        } -> contains_32727d.execute\n        list_b5b8a4 -> contains_32727d.list\n        0 -> contains_32727d.index\n        contains_32727d.is_contained -> output_f1c43c\n    }\n\n    \n\n    instance(x: -11, y: 65) has_common_element_d3e6b2 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -479, y: 47, name: \"list1\") property(List) list_4e3f20\n        in(x: -489, y: 33, name: \"list2\") property(List) list_ea7c43\n\n        out(x: 1275, y: -10, name: \"output\") property(Bool) output_9b8d6f\n\n        instance(x: 760, y: 52) contains_c0e74b root.Std_k98ojb.List.Contains {}\n        instance(x: 268, y: 54) map_1c5c71 root.Std_k98ojb.Iteration.Map {}\n        instance(x: -102, y: -22) filter_8f9d66 root.Std_k98ojb.Iteration.Filter {}\n        list_ea7c43 -> filter_8f9d66.items\n        filter_8f9d66.item -> map_1c5c71.handler\n        list_4e3f20 -> contains_c0e74b.list\n        contains_c0e74b.item -> map_1c5c71.input\n        map_1c5c71.output_list -> contains_c0e74b.list\n        filter_8f9d66.output_list -> contains_c0e74b.list\n        list_ea7c43 -> contains_c0e74b.list\n        2 -> contains_c0e74b.input\n        map_1c5c71.handler -> contains_c0e74b.execute\n        filter_8f9d66.output_list -> output_9b8d6f\n    }\n\n    \n\n    instance(x: -85, y: 67) has_common_element_e2cd89 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -498, y: 11, name: \"list1\") property(List) list_9f6e3d\n        in(x: -503, y: -216, name: \"list2\") property(List) list_2f7b0a\n\n        out(x: 1245, y: 4, name: \"output\") property(Bool) output_1c94cd\n\n        instance(x: 1008, y: 55) contains_c9e3d6 root.Std_k98ojb.List.Contains {}\n        instance(x: -11, y: -216, name: \"data_1f0f2a\") data_1f0f2a = list_9f6e3d\n        instance(x: 1014, y: -215, name: \"data_8b7c94\") data_8b7c94 = list_2f7b0a\n        contains_c9e3d6.item -> data_1f0f2a\n        contains_c9e3d6.contains -> data_8b7c94\n        contains_c9e3d6.is_contained -> output_1c94cd\n    }\n\n    \n\n    instance(x: 101, y: -189) has_common_element_4d2ff5 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -495, y: 30, name: \"list1\") property(List) list_8a0f4d\n        in(x: -515, y: 59, name: \"list2\") property(List) list_98e6c7\n\n        out(x: 1213, y: -95, name: \"output\") property(Bool) output_58c6b9\n\n        instance(x: 253, y: 70) contains_c1d0a4 root.Std_k98ojb.List.Contains {}\n        getter(x: 678, y: 123, name: \"getter_8e2f0f\") getter_8e2f0f = list_8a0f4d\n        setter(x: -38, y: 55, name: \"setter_8e2f0f\") setter_8e2f0f = list_98e6c7\n        instance(x: 255, y: -19) filter_d85b8f root.Std_k98ojb.Iteration.Filter {}\n        contains_c1d0a4.item -> filter_d85b8f.items\n        getter_8e2f0f.value -> contains_c1d0a4.input\n        list_98e6c7 -> setter_8e2f0f.list\n        0 -> setter_8e2f0f.index\n        filter_d85b8f.output_list -> contains_c1d0a4.is_contained\n    }\n\n    \n\n    instance(x: -278, y: 45) has_common_element_9c7585 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -513, y: 11, name: \"list1\") property(List) list_0d2a57\n        in(x: -534, y: -23, name: \"list2\") property(List) list_0e7b14\n\n        out(x: 1299, y: -29, name: \"output\") property(Bool) output_1c4f2c\n\n        instance(x: 255, y: 54) contains_c6d4d3 root.Std_k98ojb.List.Contains {}\n        instance(x: 819, y: -31) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -21, y: 24, name: \"current\") property(Number) _index_1c2a5e\n            in(x: -14, y: 69, name: \"_index\") property(Number) _index_9f0d3b\n\n            out(x: 1277, y: -35, name: \"output\") property(Bool) output_8bfce4\n\n            instance(x: 313, y: 63) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0 || previous <= current\"\n            }\n            getter(x: -16, y: 21, name: \"getter_b280eb\") getter_b280eb = previous\n            setter(x: 780, y: -44, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n            instance(x: 312, y: -24) for_d26972 root.Std_k98ojb.Std.For {}\n            setter(x: -0, y: -135, name: \"setter_9d4f1c\") setter_38e107 = previous\n            instance(x: -272, y: 34) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n            ifexpression_875761.else -> continue_a96db6\n            ifexpression_875761.value -> output_8bfce4\n            ifexpression_875761.then -> setter_9d4f1c.execute\n            list_0e7b14 -> for_d26972.items\n            for_d26972.item -> ifexpression_875761.gen_2\n            for_d26972.index -> ifexpression_875761.gen_0\n            getter_b280eb.value -> ifexpression_875761.gen_1\n            for_d26972.onItem -> ifexpression_875761.execute\n            for_d26972.done -> continue_a96db6\n            for_d26972.item -> setter_9d4f1c.new_value\n            list_0e7b14 -> getat_ce2a48.list\n            0 -> getat_ce2a48.index\n            getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n            execute_90aaec -> setter_38e107.execute\n            setter_38e107.continue -> for_d26972.reset\n            setter_9d4f1c.continue -> for_d26972.next\n        } -> contains_c6d4d3.handler\n        list_0e7b14 -> contains_c6d4d3.item\n        false -> not_75283f.execute\n        not_75283f.result -> output_8bfce4\n    }\n\n    \n\n    instance(x: -16, y: 66) has_common_element_e1c2ec root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -489, y: 33, name: \"list1\") property(List) list_57d5a4\n        in(x: -493, y: 62, name: \"list2\") property(List) list_a9f7e6\n\n        out(x: 1110, y: 56, name: \"output\") property(Bool) output_1c87b3\n\n        instance(x: 269, y: 82) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -83, y: 59) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1055, y: 56) filter_d7f8c4 root.Std_k98ojb.Iteration.Filter {}\n        list_a9f7e6 -> contains_32727d.list\n        contains_32727d.item -> map_c73e3b.handler\n        list_a9f7e6 -> filter_d7f8c4.items\n        filter_d7f8c4.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> output_1c87b3\n    }\n\n    \n\n    instance(x: 123, y: -101) has_common_element_5a29d0 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -494, y: 56, name: \"list1\") property(List) list_0a4f50\n        in(x: -513, y: -17, name: \"list2\") property(List) list_7e5b3c\n\n        out(x: 1238, y: 18, name: \"output\") property(Bool) output_b6a55d\n\n        instance(x: 269, y: 54) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -25, y: -23, name: \"transform to bool\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 103, y: -20) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_0a4f50 -> intersection_c7c7e6.left\n        list_7e5b3c -> intersection_c7c7e6.right\n        map_c73e3b.handler {\n            in(x: -0, y: 0, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_769593 -> modulo_c76d2b.value\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n        } -> map_c73e3b.handler\n        intersection_c7c7e6.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        contains_32727d.is_contained -> output_b6a55d\n    }\n\n    \n\n    instance(x: -293, y: 18) has_common_element_8f2b1 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -538, y: 12, name: \"list1\") property(List) list_5d8e4f\n        in(x: -546, y: 20, name: \"list2\") property(List) list_9a6d7c\n\n        out(x: 1130, y: -25, name: \"output\") property(Bool) output_b3f35b\n\n        instance(x: 106, y: 41) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 304, y: 33) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: -8, y: 40) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 278, y: 48) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 419, y: 47) any_5c0a45 root.Std_k98ojb.List.Any {}\n\n        ifexpression_875761.expression = \"list1.contains(list2)\"\n        contains_32727d.item -> map_c73e3b.handler\n        list_9a6d7c -> map_c73e3b.items\n        map_c73e3b.output_list -> any_5c0a45.list\n        not_75283f.result -> output_b3f35b\n        ifexpression_875761.then -> any_5c0a45.execute\n        list_9a6d7c -> contains_32727d.list\n        map_c73e3b.output_list -> contains_32727d.item\n        any_5c0a45.input -> not_75283f.input\n    }\n\n    \n\n    instance(x: 13, y: -178) has_common_element_e8a2f6 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -493, y: 38, name: \"list1\") property(List) list_6e3f9b\n        in(x: -495, y: 28, name: \"list2\") property(List) list_cdf5d4\n\n        out(x: 1017, y: 23, name: \"output\") property(Bool) output_8c31a1\n\n        instance(x: 261, y: 96) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -19, y: 81) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -16, y: 70, name: \"current\") property(Number) _index_9c8c45\n            in(x: -14, y: 67, name: \"_index\") property(Number) _index_d1a4e6\n\n            out(x: 1043, y: 35, name: \"output\") property(Bool) output_f2b8d7\n\n            instance(x: 242, y: 70) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0 || previous <= current\"\n            }\n            getter(x: 109, y: -29, name: \"getter_d2f8c6\") getter_d2f8c6 = previous\n            setter(x: 392, y: -123, name: \"setter_5d4a2b\") setter_5d4a2b = previous\n            instance(x: 281, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n            setter(x: -0, y: -131, name: \"setter_5d4a2b\") setter_8f6a14 = previous\n            instance(x: -294, y: 68) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n            ifexpression_875761.else -> continue_a96db6\n            ifexpression_875761.value -> output_f2b8d7\n            ifexpression_875761.then -> setter_5d4a2b.execute\n            list_cdf5d4 -> for_d26972.items\n            for_d26972.item -> ifexpression_875761.gen_2\n            for_d26972.index -> ifexpression_875761.gen_0\n            getter_d2f8c6.value -> ifexpression_875761.gen_1\n            for_d26972.onItem -> ifexpression_875761.execute\n            for_d26972.done -> continue_a96db6\n            for_d26972.item -> setter_5d4a2b.new_value\n            list_cdf5d4 -> getat_ce2a48.list\n            0 -> getat_ce2a48.index\n            getat_ce2a48.itemAtIndex -> setter_8f6a14.new_value\n            execute_90aaec -> setter_8f6a14.execute\n            setter_5d4a2b.continue -> for_d26972.reset\n            setter_8f6a14.continue -> for_d26972.next\n        } -> contains_32727d.handler\n        list_cdf5d4 -> contains_32727d.list\n        false -> not_75283f.input\n        not_75283f.result -> output_f2b8d7\n    }\n\n    \n\n    instance(x: 6, y: -172) has_common_element_e3e0a9 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -475, y: 26, name: \"list1\") property(List) list_3e2d8f\n        in(x: -487, y: -33, name: \"list2\") property(List) list_a0b9c6\n\n        out(x: 1157, y: -27, name: \"output\") property(Bool) output_4a7a1d\n\n        instance(x: 253, y: 92) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 444, y: -38) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 661, y: 85) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_a0b9c6 -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_a0b9c6 -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_4a7a1d\n        intersection_c7c7e6.intersect -> has_common_element.output\n    }\n\n    \n\n    instance(x: -95, y: -11) has_common_element_e8f7b5 root.main.has_common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -525, y: 11, name: \"list\") property(List) list_9f8d5a\n\n        out(x: 1003, y: 54, name: \"output\") property(Bool) output_2e21c1\n\n        instance(x: -342, y: 56) ifexpression_e0b8d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index + 1 == current\"\n        }\n        getter(x: 118, y: 43) previous_5a1f89 list_9f8d5a\n        setter(x: -15, y: 53, name: \"setter_3c0a83\") setter_3c0a83 = previous_\n        instance(x: -270, y: 40) for_d4e6b7 root.Std_k98ojb.Std.For {}\n        setter(x: -24, y: 59) next_8d15b1 list_9f8d5a\n        instance(x: -269, y: 47) count_0c66bf root.Std_k98ojb.Std.Count {}\n        for_d4e6b7.trigger -> setter_3c0a83.execute\n        for_d4e6b7.index -> next_8d15b1.new_value\n        list_9f8d5a -> for_d4e6b7.items\n        0 -> count_0c66bf.reset\n        count_0c66bf.count -> for_d4e6b7.next\n        previous_5a1f89.value -> ifexpression_e0b8d4.gen_2\n        for_d4e6b7.item -> ifexpression_e0b8d4.execute\n        ifexpression_e0b8d4.then -> output_2e21c1\n        count_0c66bf.count -> ifexpression_e0b8d4.value\n        1 -> ifexpression_e0b8d4.gen_0\n        ifexpression_e0b8d4.value -> output_2e21c1\n    }\n\n    \n\n    instance(x: -40, y: 63) consecutive root.main.Consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_8f8d4e\n\n        out(x: 1051, y: -101, name: \"output\") property(Bool) output_e5c0b3\n\n        instance(x: -295, y: -95) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -44, y: -84) getat_4e21f9 root.Std_k98ojb.List.GetAt {}\n        instance(x: 219, y: -88) less_than_f6d7f2 root.Std_k98ojb.Math.LessThan {}\n        instance(x: 101, y: -97) next_3a5c43 root.Std_k98ojb.Std.For {}\n        instance(x: 446, y: -96) is_equal_4db0e9 root.Std_k98ojb.Logic.Equal {}\n        list_8f8d4e -> for_d26972.items\n        for_d26972.index -> getat_4e21f9.index\n        getat_4e21f9.itemAtIndex -> less_than_f6d7f2.left\n        getat_4e21f9.itemAtIndex + 1 -> less_than_f6d7f2.right\n        less_than_f6d7f2.result -> is_equal_4db0e9.input\n        for_d26972.next -> next_3a5c43.index\n        list_8f8d4e[getat_4e21f9.index] + 1 -> next_3a5c43.value\n        less_than_f6d7f2.result -> is_equal_4db0e9.input\n    }\n\n    \n\n    instance(x: -66, y: -38) is_consecutive_8c4dfb root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -562, y: 2, name: \"list\") property(List) list_8f9e77\n\n        out(x: 1041, y: -30, name: \"output\") property(Bool) output_e0c6d4\n\n        instance(x: -305, y: 85) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -29, y: 87) count_7e3a8f root.Std_k98ojb.Std.Count {}\n        instance(x: -28, y: 89) greater_than_c5c2e9 root.Std_k98ojb.Math.GreaterThan {}\n        list_8f9e77 -> for_d26972.items\n        for_d26972.index -> count_7e3a8f.index\n        count_7e3a8f.count -> greater_than_c5c2e9.left\n        1 -> greater_than_c5c2e9.right\n        greater_than_c5c2e9.result -> output_e0c6d4\n    }\n\n    \n\n    instance(x: -64, y: 128) is_consecutive_8a7f60 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -537, y: 4, name: \"list\") property(List) list_5d0a2f\n\n        out(x: 1028, y: 1, name: \"output\") property(Bool) output_0c74b9\n\n        instance(x: -334, y: 92) is_sorted_7e3db root.Std_k98ojb.List.SortOn {}\n        instance(x: -306, y: 101) greater_than_96f2e6 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -295, y: 111) less_than_4d9a31 root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_5d0a2f -> is_sorted_7e3db.list\n        is_sorted_7e3db.key -> greater_than_96f2e6.left\n        greater_than_96f2e6.right -> less_than_4d9a31.right\n        less_than_4d9a31.result -> output_0c74b9\n    }\n\n    \n\n    instance(x: -47, y: 135) is_consecutive_dff5ad root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -509, y: 2, name: \"list\") property(List) list_9e1a8d\n\n        out(x: 1275, y: 16, name: \"output\") property(Bool) output_a6f7c4\n\n        instance(x: -84, y: 43) for_loop_5b0db2 root.Std_k98ojb.Std.For {}\n        instance(x: -79, y: 40) getat_1d3e23 root.Std_k98ojb.List.GetAt {}\n        instance(x: -74, y: 36) is_greater_than_7f4a31 root.Std_k98ojb.Math.GreaterThan {}\n        list_9e1a8d -> for_loop_5b0db2.items\n        for_loop_5b0db2.index -> getat_1d3e23.index\n        getat_1d3e23.itemAtIndex -> is_greater_than_7f4a31.left\n        getat_1d3e23.itemAtIndex + 1 -> is_greater_than_7f4a31.right\n        for_loop_5b0db2.onItem -> is_consecutive.is_consecutive\n    }\n\n    \n\n    instance(x: -41, y: 83) is_consecutive_6c8d9 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -545, y: 2, name: \"list\") property(List) list_9d5f41\n\n        out(x: 1108, y: 73, name: \"output\") property(Bool) output_9a1e3b\n\n        instance(x: 742, y: 78) for_d7c0b4 root.Std_k98ojb.Std.For {}\n        instance(x: -13, y: 94) getat_e2d84f root.Std_k98ojb.List.GetAt {}\n        instance(x: 270, y: 86) less_than_8a6e5f root.Std_k98ojb.Math.LessThan {}\n        list_9d5f41 -> for_d7c0b4.items\n        for_d7c0b4.index -> getat_e2d84f.index\n        getat_e2d84f.itemAtIndex -> less_than_8a6e5f.left\n        less_than_8a6e5f.right -> less_than_8a6e5f.right\n        less_than_8a6e5f.result -> output_9a1e3b\n    }\n\n    \n\n    instance(x: -27, y: 125) is_consecutive_c7d0bc root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -531, y: 3, name: \"list\") property(List) list_4e8a55\n\n        out(x: 1229, y: -97, name: \"output\") property(Bool) output_a7c5b2\n\n        instance(x: 734, y: 84) ifexpression_ebd9d root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == list.length - 1 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_2c8f7e\") getter_2c8f7e = previous\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -275, y: -35) setter_38e107 = previous\n        instance(x: -49, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_ebd9d.else -> output_a7c5b2\n        ifexpression_ebd9d.value -> output_a7c5b2\n        ifexpression_ebd9d.then -> setter_9d4f1c.execute\n        list_4e8a55 -> for_d26972.items\n        for_d26972.item -> ifexpression_ebd9d.gen_2\n        for_d26972.index -> ifexpression_ebd9d.gen_0\n        getter_2c8f7e.value -> ifexpression_ebd9d.gen_1\n        for_d26972.onItem -> ifexpression_ebd9d.execute\n        for_d26972.done -> output_a7c5b2\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_4e8a55 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -34, y: 127) consecutive root.main.Consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -546, y: 2, name: \"list\") property(List) list_9d3f1a\n\n        out(x: 1038, y: 49, name: \"output\") property(Bool) output_c7b6eb\n\n        instance(x: -289, y: 41) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -315, y: 54) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 1088, y: 46) lessThanOrEqual_5e5c71 root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_9d3f1a -> for_d26972.items\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> lessThanOrEqual_5e5c71.left\n        lessThanOrEqual_5e5c71.right -> getat_ce2a48.next\n        getat_ce2a48.itemAtIndex -> lessThanOrEqual_5e5c71.value\n    }\n\n    \n\n    instance(x: -67, y: 128) is_consecutive_9fbb47 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -521, y: 33, name: \"list\") property(List) list_6f1a5d\n\n        out(x: 1063, y: -34, name: \"output\") property(Bool) output_7c9e2b\n\n        instance(x: -293, y: -28) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -22, y: -25) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 1011, y: -27) less_than_8c9fba root.Std_k98ojb.Math.LessThan {}\n        list_6f1a5d -> for_d26972.items\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> less_than_8c9fba.left\n        getat_ce2a48.value -> less_than_8c9fba.right\n        for_d26972.onItem -> less_than_8c9fba.execute\n    }\n\n    \n\n    instance(x: -47, y: 120) is_consecutive_f7b0e4 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -574, y: 4, name: \"list\") property(List) list_6a9d66\n\n        out(x: 1068, y: -88, name: \"output\") property(Bool) output_7b1c5f\n\n        instance(x: -296, y: -82) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -287, y: -81) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: -92) less_than_5e7d25 root.Std_k98ojb.Math.LessThan {}\n        instance(x: -294, y: -95) next_d87f3c root.Std_k98ojb.Std.For {}\n        list_6a9d66 -> for_d26972.items\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> less_than_5e7d25.left\n        1 -> less_than_5e7d25.right\n        less_than_5e7d25.result -> output_7b1c5f\n    }\n\n    \n\n    instance(x: -64, y: 125) is_consecutive_4a3c9a root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -530, y: 46, name: \"main_list\") property(List) list_9a2f6d\n        in(x: -541, y: -31, name: \"sublist\") property(List) sublist_3e77b5\n\n        out(x: 1037, y: -44, name: \"output\") property(Bool) output_e7c0ad\n\n        instance(x: -313, y: -35) contains_c2f1d4 root.Std_k98ojb.List.Contains {}\n        sublist_3e77b5 -> contains_c2f1d4.item\n        list_9a2f6d -> contains_c2f1d4.list\n        contains_c2f1d4.is_contained -> output_e7c0ad\n    }\n\n    \n\n    instance(x: -66, y: 47) is_sublist_f89e4b root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -474, y: 438, name: \"main_list\") property(List) list_4f6e35\n        in(x: -484, y: -27, name: \"sub_list\") property(List) list_b2c9d5\n\n        out(x: 1227, y: -21, name: \"output\") property(Bool) output_0b8a2c\n\n        instance(x: -202, y: -18) contains_f6e25f root.Std_k98ojb.List.Contains {}\n        list_b2c9d5 -> contains_f6e25f.item\n        main_list -> contains_f6e25f.list\n        contains_f6e25f.is_contained -> output_0b8a2c\n    }\n\n    \n\n    instance(x: -84, y: 56) is_sublist_d4c2d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -247, y: 41, name: \"main_list\") property(List) list_1d6a4b\n        in(x: -292, y: 17, name: \"sublist_list\") property(List) list_e7c5e8\n\n        out(x: 1053, y: -109, name: \"output\") property(Bool) output_0fbb34\n\n        instance(x: -28, y: -120) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -26, y: -117) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        list_e7c5e8 -> contains_32727d.item\n        0 -> getat_ce2a48.index\n        contains_32727d.is_contained -> output_0fbb34\n    }\n\n    \n\n    instance(x: -30, y: 50) is_sublist_b6b66f root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -495, y: 23, name: \"main_list\") property(List) list_3e1f2d\n        in(x: -505, y: -25, name: \"sublist_list\") property(List) list_9cdd4b\n\n        out(x: 1228, y: -15, name: \"output\") property(Bool) output_a0a7c5\n\n        instance(x: -317, y: 43) contains_c3d42f root.Std_k98ojb.List.Contains {}\n        list_9cdd4b -> contains_c3d42f.item\n        list_3e1f2d -> contains_c3d42f.list\n        false -> output_a0a7c5\n        contains_c3d42f.is_contained -> output_a0a7c5\n    }\n\n    \n\n    instance(x: -287, y: 58) is_sublist_d8b1e9 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -528, y: 22, name: \"main_list\") property(List) list_5d0a59\n        in(x: -236, y: 43, name: \"sublist\") property(List) list_bf1b94\n\n        out(x: 1189, y: -109, name: \"output\") property(Bool) output_2e3c89\n\n        instance(x: -278, y: -112) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -47, y: -24) is_empty_7f8a1f root.Std_k98ojb.List.IsEmpty {}\n        list_bf1b94 -> contains_32727d.item\n        list_5d0a59 -> contains_32727d.list\n        is_empty_7f8f4c -> output_2e3c89\n    }\n\n    \n\n    instance(x: -21, y: 52) is_sublist_f9c0b1 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -243, y: 27, name: \"main_list\") property(List) list_8d3a5f\n        in(x: -261, y: 25, name: \"sublist\") property(List) list_9cdd21\n\n        out(x: 439, y: -98, name: \"output\") property(Bool) output_7e77b1\n\n        instance(x: -82, y: -106) contains_c8d6f4 root.Std_k98ojb.List.Contains {}\n        list_9cdd21 -> contains_c8d6f4.item\n        list_8d3a5f -> contains_c8d6f4.list\n        contains_c8d6f4.is_contained -> output_7e77b1\n    }\n\n    \n\n    instance(x: -54, y: 60) is_sublist_7b2c9b root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -468, y: 438, name: \"main_list\") property(List) list_5e4d65\n        in(x: -475, y: 33, name: \"sublist\") property(List) list_a8a2c1\n\n        out(x: 1256, y: -110, name: \"output\") property(Bool) output_e3bfb9\n\n        instance(x: -306, y: 51) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list_a8a2c1 -> zip_201051.left\n        list_5e4d65 -> zip_201051.right\n        func() {\n            in(x: -484, y: -16, name: \"item\") property(Number) item_e3f7c0\n\n            out(x: 1429, y: -49, name: \"index\") property(Number) index_2b8d14\n\n            instance(x: -6, y: -51) contains_32727d root.Std_k98ojb.List.Contains {}\n            list_a8a2c1 -> contains_32727d.item\n            sublist_5e4d65 -> contains_32727d.list\n            item_e3f7c0 -> index_2b8d14\n            0 -> contains_32727d.index\n            contains_32727d.is_contained -> output_e3bfb9\n        } -> zip_201051.handler\n        list_a8a2c1 -> zip_201051.items\n        sublist_5e4d65 -> zip_201051.items\n    }\n\n    \n\n    instance(x: -289, y: 53) is_sublist_5f7f77 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -463, y: 16, name: \"main_list\") property(List) list_4f1a8d\n        in(x: -475, y: -25, name: \"sublist\") property(List) list_9e34c7\n\n        out(x: 1022, y: -44, name: \"output\") property(Bool) output_e6b0ef\n\n        instance(x: -302, y: -21) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -287, y: 52, name: \"transform to indices\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1028, y: -48) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        instance(x: -315, y: 23) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_4f1a8d -> map_c73e3b.items\n        sublist_9e34c7 -> map_c73e3b.list\n        zip_201051.left -> map_c73e3b.gen_0\n        zip_201051.right -> map_c73e3b.gen_2\n        equal_f89569.left -> contains_32727d.item\n        contains_32727d.is_contained -> equal_f89569.input\n    }\n\n    \n\n    instance(x: -67, y: 68) is_sublist_d7f6a5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -471, y: 39, name: \"main_list\") property(List) list_6e3d35\n        in(x: -478, y: 45, name: \"sublist_list\") property(List) list_d5f2a4\n\n        out(x: 1131, y: -96, name: \"output\") property(Bool) output_94c8b7\n\n        instance(x: -293, y: -105) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_d5f2a4 -> contains_32727d.item\n        main_list -> contains_32727d.list\n        contains_32727d.is_contained -> output_94c8b7\n    }\n\n    \n\n    instance(x: -67, y: 56) is_sublist_b9d3e6 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -475, y: 19, name: \"main_list\") property(List) list_6a9f4b\n        in(x: -483, y: 20, name: \"sublist_list\") property(List) list_d2c34d\n\n        out(x: 1047, y: -210, name: \"output\") property(Bool) output_e3e8f1\n\n        instance(x: -302, y: -196) for_4b6f62 root.Std_k98ojb.Std.For {}\n        list_d2c34d -> for_4b6f62.items\n        list_6a9f4b -> for_4b6f62.items\n        func() {\n            in(x: -28, y: 47, name: \"index\") property(Number) index_9e7cd1\n\n            out(x: 1175, y: -215, name: \"is_sublist\") property(Bool) is_sublist_6c0f4d\n\n            instance(x: 118, y: -217) contains_32727d root.Std_k98ojb.List.Contains {}\n            list_d2c34d -> contains_32727d.item\n            for_4b6f62.index -> contains_32727d.index\n            contains_32727d.is_contained -> is_sublist_6c0f4d\n        } -> for_4b6f62.handler\n    }\n\n    \n\n    instance(x: -74, y: 59) is_sublist_a5e2a1 root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -528, y: 2, name: \"list\") property(List) list_ai\n        out(x: 1, y: 0, name: \"smallest_missing\") property(Number) smallest_missing_9d8c5e\n\n        instance(x: 0, y: 0) for_node root.Std_k98ojb.Std.For {\n            trigger() -> for_node.trigger\n            reset() -> for_node.reset\n            next() -> for_node.next\n            items() -> list_ai\n            on item() -> {\n                in(x: -248, y: 2, name: \"item\") property(Number) item_6d4e3f\n                in(x: -305, y: 73, name: \"index\") property(Number) index_b7c8b9\n                out(x: -251, y: 13, name: \"difference\") property(Number) difference_c24a0c\n\n                instance(x: 1, y: 22) ifexpression_2f3e2 root.Std_k98ojb.Std.IfExpression {\n                    expression: \"item == index + 1\"\n                }\n                getter(x: -251, y: 16, name: \"getter_8b6c43\") getter_8b6c43 = difference\n                setter(x: -248, y: 23, name: \"setter_f9a9f4\") setter_f9a9f4 = difference\n                item_6d4e3f -> ifexpression_2f3e2.gen_0\n                index_b7c8b9 -> ifexpression_2f3e2.gen_1\n                getter_8b6c43.value -> smallest_missing_9d8c5e\n                ifexpression_2f3e2.then -> setter_f9a9f4.execute\n                item_6d4e3f -> setter_f9a9f4.new_value\n                index_b7c8b9 -> {\n                    difference_c24a0c = 1\n                    setter_f9a9f4.continue\n                }\n            } -> for_node.on_item\n        }\n\n        instance(x: -305, y: 73, name: \"min\") property(Number) min_ai\n        list_ai -> for_node.items\n        for_node.done -> min_ai\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_1d56f4 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -270, y: 0, name: \"list\") property(List) list_2d4e6a\n\n        out(x: 1, y: 10, name: \"missing\") property(Number) missing_5c7f71\n        instance(x: 0, y: 0) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -106, y: 16, name: \"elem\") property(Number) elem_3e9df4\n\n            out(x: 1, y: 34, name: \"bool\") property(Bool) bool_a5d6c8\n\n            instance(x: 0, y: 33) lessThanOrEqual_6f9b41 root.Std_k98ojb.Math.LessThanOrEqual {}\n            instance(x: -104, y: 11, name: \"number\") property(Number) number_b7a3e1\n            instance(x: 3, y: 0, name: \"context\") property(Number) context_8f4d14\n            lessThanOrEqual_6f9b41.left -> elem_3e9df4\n            lessThanOrEqual_6f9b41.right -> number_b7a3e1\n            find_missing_node.predicate -> bool_a5d6c8\n            elem_3e9df4 -> find_missing_node.context\n            context_8f4d14 -> find_missing_node.item\n        } -> find_missing_node.item\n        list_2d4e6a -> find_missing_node.items\n        find_missing_node.item -> missing_5c7f71\n    }\n\n    \n\n    instance(x: -55, y: 528) find_missing_1d8df0 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -274, y: 0, name: \"list\") property(List) list_8a8b5d\n\n        out(x: 0, y: 32, name: \"missing\") property(Number) missing_6f1e4c\n        instance(x: 109, y: 45) count_7b2e88 root.Std_k98ojb.Std.Count {}\n        list_8a8b5d -> count_7b2e88.items\n        count_7b2e88.reset -> missing_6f1f4c\n        count_7b2e88.count -> missing_6f1f4c\n        instance(x: 0, y: -110, name: \"first\") find_first root.Std_k98ojb.Iteration.Find {}\n        list_8a8b5d -> find_first.items\n        find_first.item -> missing_6f1e4c\n    }\n\n    \n\n    instance(x: -41, y: 91) find_missing_d0d63f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -248, y: 3, name: \"list\") property(List) list_ai\n        out(x: 1, y: 2, name: \"smallest_missing\") property(Number) smallest_missing_9f1c63\n\n        instance(x: 0, y: 0) find_7a4b25 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -110, y: 34, name: \"elem\") property(Number) elem_6d2bb5\n            out(x: 1, y: 44, name: \"bool\") property(Bool) bool_f0fba8\n\n            instance(x: 89, y: 29) lessThanOrEqual_7a4b26 root.Std_k98ojb.Math.LessThanOrEqual {}\n            1 -> lessThanOrEqual_7a4b26.left\n            elem_6d2bb5 -> lessThanOrEqual_7a4b26.right\n            bool_f0fba8 -> lessThanOrEqual_7a4b26.result\n\n            instance(x: -59, y: 30) greaterThan_3e74c1 root.Std_k98ojb.Math.GreaterThan {}\n            elem_6d2bb5 -> greaterThan_3e74c1.left\n            2 -> greaterThan_3e74c1.right\n            bool_f0fba8 -> greaterThan_3e74c1.result\n\n            instance(x: -55, y: 35) plus_71b1eb root.Std_k98ojb.Math.Add {}\n            1 -> plus_71b1eb.first\n            elem_6d2bb5 -> plus_71b1eb.second\n            bool_f0fba8 -> plus_71b1eb.result\n\n            instance(x: -34, y: 42) not_9e15c4 root.Std_k98ojb.Logic.Not {}\n            !bool_f0fba8 -> not_9e15c4.value\n\n            instance(x: 72, y: 37) ifexpression_1a2aee root.Std_k98ojb.Std.IfExpression {\n                expression: \"not_9e15c4\"\n            }\n            getter(x: -141, y: 46, name: \"getter_7f5f44\") getter_7f5f44 = smallest_missing\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = smallest_missing\n            setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = smallest_missing\n            elem_6d2bb5 -> ifexpression_1a2aee.gen_0\n            not_9e15c4.value -> ifexpression_1a2aee.gen_1\n            getter_7f5f44.value -> smallest_missing_9f1c63\n            ifexpression_1a2aee.then -> setter_1cedb2.execute\n            elem_6d2bb5 -> setter_37db7f.new_value\n            3 -> setter_37db7f.second\n            ifexpression_1a2aee.else -> setter_37db7f.execute\n            greaterThan_3e74c1.continue -> plus_71b1eb.execute\n            plus_71b1eb.result -> find_7a4b25.item\n        } -> find_7a4b25.predicate\n        list_ai -> find_7a4b25.items\n        find_7a4b25.item -> smallest_missing_9f1c63\n    }\n\n    \n\n    instance(x: -59, y: 529) find_smallest_missing_2c856f root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -270, y: 1, name: \"list\") property(List) list_abed4a\n        out(x: 0, y: 0, name: \"smallest_missing\") property(Number) smallest_missing_7e1c9f\n\n        instance(x: 0, y: 0) count_8d0f43 root.Std_k98ojb.Std.Count {}\n        list_abed4a -> count_8d0f43.items\n        count_8d0f43.reset -> true\n        count_8d0f43.count -> smallest_missing_7e1c9f\n        instance(x: 0, y: 0) for_loop_5a3b45 root.Std_k98ojb.Std.For {}\n        list_abed4a -> for_loop_5a3b45.items\n        for_loop_5a3b45.trigger -> count_8d0f43.reset\n        instance(x: -114, y: 27) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -109, y: 30, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 1, y: 42, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        for_loop_5a3b45.on_item -> find_6d05b0.item\n        for_loop_5a3b45.index -> find_6d05b0.context\n    } -> find_missing.predicate\n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -141, y: 0, name: \"list\") property(List) list_9f6b49\n        out(x: 1, y: 26, name: \"missing\") property(Number) missing_b7e3d4\n\n        instance(x: 0, y: 0) count_2df2a5 root.Std_k98ojb.Std.Count {}\n        list_9f6b49 -> count_2df2a5.items\n        count_2df2a5.reset -> find_missing.continue\n        count_2df2a5.count -> find_missing.new_value\n        find_missing.item -> missing_b7e3d4\n\n        instance(x: 0, y: 0) for_loop_6f9cd8 root.Std_k98ojb.Std.For {}\n        list_9f6b49 -> for_loop_6f9cd8.items\n        for_loop_6f9cd8.next -> find_missing.continue\n        for_loop_6f9cd8.index -> find_missing.new_value\n        for_loop_6f9cd8.on item -> find_missing.item\n        list_9f6b49[0] -> find_missing.item\n        list_9f6b49[1] -> find_missing.item\n        find_missing.item -> missing_b7e3d4\n\n        instance(x: 0, y: 0) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"list_9f6b49[new_value] == new_value + 1\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = missing_b7e3d4\n        ifexpression_e38995.then -> find_missing.continue\n        list_9f6b49[new_value] -> find_missing.item\n        new_value + 1 -> find_missing.new_value\n        ifexpression_e38995.else -> find_missing.continue\n    }\n\n    \n\n    instance(x: -174, y: 529) find_missing_7d7c5a root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -509, y: 3, name: \"list\") property(List) list_2d1e9a\n\n        out(x: 5, y: 0, name: \"missing\") property(Number) missing_bf81a6\n        instance(x: 101, y: 71) sort_11b9c7 root.Std_k98ojb.List.Sort {}\n        list_2d1e9a -> sort_11b9c7.list\n        sort_11b9c7.sorted_list -> missing_bf81a6\n        instance(x: -144, y: 28) find_4b4d5 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -141, y: 39, name: \"i\") property(Number) i_9e2c67\n\n            out(x: 1, y: 0, name: \"result\") property(Number) result_a6f3d7\n            instance(x: 69, y: 40) greaterthan_8a5b4 root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: -141, y: 39, name: \"n\") property(Number) n_b2c0df\n            list_2d1e9a -> find_4b4d5.items\n            find_4b4d5.item -> result_a6f3d7\n            greaterthan_8a5b4.left -> n_b2c0df\n            greaterthan_8a5b4.right -> missing_bf81a6\n        } -> find_4b4d5.predicate\n    }\n\n    \n\n    instance(x: -45, y: 53) find_missing_9e7d3 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 0, name: \"list\") property(List) list_9d4a8f\n\n        out(x: 1, y: 3, name: \"missing_number\") property(Number) missing_number_6e1b66\n        instance(x: 0, y: 0) count_5c1d34 root.Std_k98ojb.Std.Count {}\n        list_9d4a8f -> count_5c1d34.items\n        count_5c1d34.reset -> find_missing.then\n        find_missing.item -> missing_number_6e1b66\n        find_missing.continue -> count_5c1d34.next\n    }\n\n    \n\n    instance(x: -23, y: 528) find_missing_3f8a7 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -439, y: 2, name: \"list\") property(List) list_4f6d65\n        out(x: 1, y: 0, name: \"missing_number\") property(Number) missing_number_8c7a5e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -114, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) lessThanOrEqual_1d3e5c root.Std_k98ojb.Math.LessThanOrEqual {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            lessThanOrEqual_1d3e5c.left -> elem_9f6850\n            lessThanOrEqual_1d3e5c.right -> elem_9f6850\n            notequal_807ffd.result -> bool_af09a7\n\n            if(bool_af09a7) {\n                instance(x: 89, y: 29) next_2c4c64 root.Std_k98ojb.Std.For {}\n                list_4f6d65 -> next_2c4c64.items\n                next_2c4c64.next -> elem_9f6850\n                if(next_2c4c64.index == 1) {\n                    instance(x: -105, y: -110) minus_15e5bb root.Std_k98ojb.Math.Sub {}\n                    minus_15e5bb.first -> elem_9f6850\n                    minus_15e5bb.second -> 1\n                    minus_15e5bb.result -> missing_number_8c7a5e\n                }\n            }\n        } -> find_6d05b0.predicate\n        list_4f6d65 -> find_6d05b0.items\n        find_6d05b0.item -> missing_number_8c7a5e\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_2c856f root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -456, y: 2, name: \"list\") property(List) list_ai\n        out(x: 1, y: 0, name: \"missing_number\") property(Number) missing_number_4e6f7b\n\n        instance(x: 0, y: 0) find_smallest_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) less_than_1088d5 root.Std_k98ojb.Math.LessThan {}\n            instance(x: 310, y: 35) greater_than_or_equal_807ffd root.Std_k98ojb.Logic.LessThanOrEqual {}\n            1 -> greater_than_or_equal_807ffd.right\n            elem_9f6850 -> less_than_1088d5.left\n            less_than_1088d5.result -> greater_than_or_equal_807ffd.left\n            2 -> greater_than_or_equal_807ffd.right\n            elem_9f6850 -> greater_than_or_equal_807ffd.right\n\n            if(bool_af09a7) {\n                list_ai[0] = missing_number_4e6f7b + 1\n            }\n        } -> find_smallest_missing_node.predicate\n        list_ai -> find_smallest_missing_node.items\n        find_smallest_missing_node.item -> missing_number_4e6f7b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_2c856f root.main.find_smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -1083, y: 34, name: \"input\") property(String) input_9d4f5b\n\n        out(x: 444, y: 53, name: \"output\") property(String) output_0e77c7\n\n        instance(x: 74, y: 22) replace_2d1a35 root.Std_k98ojb.Strings.Replace {}\n        input_9d4f5b -> replace_2d1a35.input\n        \",\" -> replace_2d1a35.search\n        \".\" -> replace_2d1a35.search\n        \" \" -> replace_2d1a35.search\n        \":\" -> replace_2d1a35.replace\n        replace_2d1a35.output -> output_0e77c7\n    }\n\n    \n\n    instance(x: -109, y: 45) replace_punctuation_5f8b3d root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -156, y: 13, name: \"input\") property(String) input_1f2d0a\n\n        out(x: 596, y: 69, name: \"output\") property(String) output_6e3c8b\n\n        instance(x: 88, y: 65) replace_5a9db4 root.Std_k98ojb.Strings.Replace {}\n        input_1f2d0a -> replace_5a9db4.input\n        \",\" -> replace_5a9db4.search\n        \".\" -> replace_5a9db4.replace\n        \" \" -> replace_5a9db4.search\n        \":\" -> replace_5a9db4.replace\n        replace_5a9db4.output -> output_6e3c8b\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_punctuation_a38d21 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -1285, y: 13, name: \"input\") property(String) input_4a6b36\n\n        out(x: 538, y: -68, name: \"output\") property(String) output_b3f8c9\n\n        instance(x: 95, y: -75) replace_5d1c0e root.Std_k98ojb.Strings.Replace {}\n        input_4a6b36 -> replace_5d1c0e.input\n        \",\" -> replace_5d1c0e.search\n        \".\" -> replace_5d1c0e.replace\n        \" \" -> replace_5d1c0e.replace\n        \":\" -> replace_5d1c0e.replace\n        replace_5d1c0e.output -> output_b3f8c9\n    }\n\n    \n\n    instance(x: -164, y: 53) replace_with_colon_a6a2b4 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -1429, y: 20, name: \"input\") property(String) input_0\n        out(x: 596, y: -52, name: \"output\") property(String) output_1c6a3e\n\n        instance(x: 1015, y: 63) replace_4b3f8d root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4b3f8d.input\n        \",.\" -> replace_4b3f8d.search\n        \":\" -> replace_4b3f8d.replace\n        replace_4b3f8d.output -> output_1c6a3e\n    }\n\n    \n\n    instance(x: -105, y: 56) replace_punctuation_e2b7b5 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -120, y: 4, name: \"input\") property(String) input_9a1b3d\n\n        out(x: 493, y: -51, name: \"output\") property(String) output_a6c7f5\n\n        instance(x: 91, y: -78) replace_5eef23 root.Std_k98ojb.Strings.Replace {}\n        input_9a1b3d -> replace_5eef23.input\n        \",\" -> replace_5eef23.search\n        \".\" -> replace_5eef23.search\n        \" \" -> replace_5eef23.search\n        \":\" -> replace_5eef23.replace\n        replace_5eef23.output -> output_a6c7f5\n    }\n\n    \n\n    instance(x: -179, y: 22) replace_special_chars_d4d9a2 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -1201, y: 0, name: \"input\") property(String) input_4a8f5e\n\n        out(x: 550, y: -62, name: \"output\") property(String) output_9d98b2\n\n        instance(x: 85, y: -71) replace_1c91d6 root.Std_k98ojb.Strings.Replace {}\n        input_4a8f5e -> replace_1c91d6.input\n        \",.\" -> replace_1c91d6.search\n        \":\" -> replace_1c91d6.replace\n        replace_1c91d6.output -> output_9d98b2\n    }\n\n    \n\n    instance(x: -135, y: 21) replace_with_colon_8a3f5 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -157, y: 22, name: \"input\") property(String) input_0\n\n        out(x: 538, y: 14, name: \"output\") property(String) output_5b9e8c\n\n        instance(x: 92, y: 0) replace_f1d6d2 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_f1d6d2.input\n        \",.\" -> replace_f1d6d2.search\n        \":\" -> replace_f1d6d2.replace\n        replace_f1d6d2.output -> output_5b9e8c\n    }\n\n    \n\n    instance(x: -108, y: 47) replace_punctuation_b7a3f4 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -101, y: 4, name: \"input\") property(String) input_9d6f5e\n\n        out(x: 342, y: 71, name: \"output\") property(String) output_16c2a8\n\n        instance(x: 109, y: 66) replace_1b91f4 root.Std_k98ojb.Strings.Replace {}\n        input_9d6f5e -> replace_1b91f4.input\n        \",\" -> replace_1b91f4.search\n        \".\" -> replace_1b91f4.replace\n        \":\" -> replace_1b91f4.replace\n        replace_1b91f4.output -> output_16c2a8\n    }\n\n    \n\n    instance(x: -89, y: 28) replace_with_colon_77d0c6 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -103, y: 24, name: \"input\") property(String) input_4e9a1d\n\n        out(x: 539, y: 20, name: \"output\") property(String) output_5c7f8b\n\n        instance(x: 102, y: 19) replace_d2e0ab root.Std_k98ojb.Strings.Replace {}\n        input_4e9a1d -> replace_d2e0ab.input\n        \",.\" -> replace_d2e0ab.search\n        \":\" -> replace_d2e0ab.replace\n        replace_d2e0ab.output -> output_5c7f8b\n    }\n\n    \n\n    instance(x: -71, y: 11) replace_special_chars_3d4a15 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -1299, y: 20, name: \"input\") property(String) input_8f4d7e\n\n        out(x: 442, y: -57, name: \"output\") property(String) output_5b2a3c\n\n        instance(x: 106, y: 30) replace_9c6e85 root.Std_k98ojb.Strings.Replace {}\n        input_8f4d7e -> replace_9c6e85.input\n        \",.\" -> replace_9c6e85.search\n        \":\" -> replace_9c6e85.replace\n        replace_9c6e85.output -> output_5b2a3c\n    }\n\n    \n\n    instance(x: -108, y: 70) replace_special_chars_b7e0d8 root.main.replace_special_chars {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -234, y: 16, name: \"input\") property(String) input_9f0a2e\n\n        out(x: 1045, y: 54, name: \"output\") property(Bool) output_1d6c71\n\n        instance(x: -26, y: 73) islower_f7c8b4 root.Std_k98ojb.Strings.IsLowerCase {}\n        instance(x: 234, y: 63) tolower_b9e56f root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 305, y: 60) characters_6a0d3f root.Std_k98ojb.Strings.Characters {}\n        islower_f7c8b4.result -> tolower_b9e56f.input\n        tolower_b9e56f.output -> characters_6a0d3f.input\n    }\n\n    \n\n    instance(x: 47, y: -195) all_same_2df8f5 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -255, y: 14, name: \"string\") property(String) string_5d0e43\n\n        out(x: 1118, y: 24, name: \"output\") property(Bool) output_e4f6b3\n\n        instance(x: -21, y: 44) length_57c85a root.Std_k98ojb.List.Length {}\n        instance(x: 101, y: 32) islower_c5e9d2 root.Std_k98ojb.Strings.IsLowerCase {}\n        instance(x: 255, y: 20) ifexpression_6f0b4b root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: -21, y: 42, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 102, y: -33, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 201, y: 20) for_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: -21, y: 42, name: \"getter_b280eb\") getter_b280eb.value -> ifexpression_6f0b4b.execute\n        islower_c5e9d2.result -> output_e4f6b3\n        for_d26972.item -> ifexpression_6f0b4b.gen_1\n        length_57c85a.length -> for_d26972.index\n        string_5d0d43 -> for_d26972.items\n    }\n\n    \n\n    instance(x: 15, y: -22) is_all_same_f2e76d root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -194, y: 44, name: \"input\") property(String) input_0a7f8e\n\n        out(x: 1311, y: -28, name: \"output\") property(Bool) output_e5d2c4\n\n        instance(x: 11, y: 13) tolower_f3d5db root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 208, y: -29) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 346, y: 6) characters_2e1c9a root.Std_k98ojb.Strings.Characters {}\n        is_all_same_7f8f21 -> tolower_f3d5db.input\n        tolower_f3d5db.output -> contains_32727d.item\n        characters_2e1c9a.characters -> is_all_same_7f8f21\n    }\n\n    \n\n    instance(x: 14, y: -105) is_all_same_7f8f21 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_all_characters_same {\n        in(x: -456, y: 18, name: \"input\") property(String) input_9f2d98\n\n        out(x: 1095, y: 44, name: \"output\") property(Bool) output_0a7c30\n\n        instance(x: -82, y: 63) islower_f8a3b4 root.Std_k98ojb.Strings.IsLowerCase {}\n        instance(x: 184, y: 45) contains_32727d root.Std_k98ojb.Strings.Contains {}\n        instance(x: 333, y: 51) if_e19a62 root.Std_k98ojb.Std.If {}\n        islower_f8a3b4.result -> output_0a7c30\n        contains_32727d.is_contained -> if_e19a62.predicate\n        for_8cb3f6.index -> if_e19a62.then\n        input_9f2d98 -> for_8cb3f6.item\n    }\n\n    \n\n    instance(x: -45, y: 140) is_all_characters_same_d25c6b root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") is_all_same {\n        in(x: -25, y: 17, name: \"string\") property(String) string_2d5a8f\n\n        out(x: 1283, y: -13, name: \"output\") property(Bool) output_4c5bdf\n\n        instance(x: 193, y: 54) tolower_7eb0e9 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 108, y: 20) characters_6d3f0a root.Std_k98ojb.Strings.Characters {}\n        instance(x: -41, y: 38) contains_32727d root.Std_k98ojb.Strings.Contains {}\n        tolower_7eb0e9.output -> contains_32727d.input\n        string_2d5a8f -> characters_6d3f0a.input\n        characters_6d3f0a.characters -> output_4c5bdf\n    }\n\n    \n\n    instance(x: 11, y: -145) is_all_same_e7e0f1 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") same_characters {\n        in(x: -475, y: 19, name: \"input\") property(String) input_9f5a45\n\n        out(x: 1221, y: 7, name: \"output\") property(Bool) output_f0b2d4\n\n        instance(x: 104, y: 48) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"i == j\"\n        }\n        getter(x: -22, y: 101, name: \"getter_b280eb\") getter_b280eb = i\n        setter(x: 278, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = i\n        instance(x: 321, y: 56) ifexpression_875761.else -> continue_a96db6\n        getter(x: -22, y: 101, name: \"getter_b280eb\") getter_b280eb.value -> output_f0b2d4\n        setter_9d4f1c.execute -> continue_a96db6\n        input_9f5a45 -> ifexpression_875761.then\n        for_8cb3f6 -> ifexpression_875761 else\n        instance(x: 226, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter_9d4f1c.value -> for_d26972.item\n        list_0b075e -> for_d26972.items\n        i -> ifexpression_875761.gen_2\n        j -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n    }\n\n    \n\n    instance(x: -86, y: 59) same_characters_7a5e95 root.main.same_characters {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -456, y: 73, name: \"input\") property(String) input_6f1e5a\n\n        out(x: 1033, y: 50, name: \"output\") property(Bool) output_a4c0f9\n\n        instance(x: -82, y: 104) islower_d0d8b2 root.Std_k98ojb.Strings.IsLowerCase {}\n        instance(x: -273, y: 55) if_7bb6e1 root.Std_k98ojb.Std.If {}\n        instance(x: 1003, y: 53) tolower_4a1c63 root.Std_k98ojb.Strings.ToLower {}\n    }\n\n    \n\n    instance(x: 11, y: -196) is_same_5f8d9f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -215, y: 14, name: \"input\") property(String) input_9d5f6e\n\n        out(x: 1183, y: -10, name: \"output\") property(Bool) output_e8b9a1\n\n        instance(x: -49, y: -15) tolower_6c0f4d root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 209, y: -18) isnumeric_2e7e3b root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 354, y: -13) characters_71eb55 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 447, y: -22) length_8d4a9f root.Std_k98ojb.List.Length {}\n        instance(x: 591, y: -19) isempty_7c0e24 root.Std_k98ojb.List.IsEmpty {}\n    }\n\n    \n\n    instance(x: -32, y: 54) is_all_same_f6d8ec root.main.is_all_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") all_same {\n        in(x: -246, y: 43, name: \"input\") property(String) input_6d3a41\n\n        out(x: 1111, y: 13, name: \"output\") property(Bool) output_e7f5c4\n\n        instance(x: -57, y: 97) tolower_83b8f9 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 235, y: 16) characters_2d5e6a root.Std_k98ojb.Strings.Characters {}\n        function(x: 1013, y: -22, name: \"is_alphabetic\") is_alphabetic_f1f0b9 {\n            in property(String) s input_6d3a41\n            out(name: \"is alphabetic\") property(Bool) output_7fdd58\n\n            instance(x: 104, y: -26) IsAlphabetic_b4c89e root.Std_k98ojb.Strings.IsAlphabetic {}\n            IsAlphabetic_b4c89e.is_alphabetic -> output_7fdd58\n        }\n        function(x: 1093, y: -23, name: \"is_numeric\") is_numeric_ea2d0a {\n            in property(String) s input_6d3a41\n            out(name: \"is numeric\") property(Bool) output_d2c1e9\n\n            instance(x: 103, y: -27) IsNumeric_f7bde5 root.Std_k98ojb.Strings.IsNumeric {}\n            IsNumeric_f7bde5.is_numeric -> output_d2c1e9\n        }\n        function(x: 1123, y: -22, name: \"is_whitespace\") is_whitespace_66f6a4 {\n            in property(String) s input_6d3a41\n            out(name: \"is whitespace\") property(Bool) output_5b7c8e\n\n            instance(x: 101, y: -26) IsWhitespace_8ac0ca root.Std_k98ojb.Strings.IsWhitespace {}\n            IsWhitespace_8ac0ca.is_whitespace -> output_5b7c8e\n        }\n        function(x: 1083, y: -23, name: \"check\") check_f9d5a1 {\n            in property(String) s input_6d3a41\n            out(name: \"is all same\") property(Bool) output_e2f4b3\n\n            instance(x: 103, y: -27) length_6e87f2 root.Std_k98ojb.List.Length {}\n            length_6e87f2.length -> check.result\n        }\n        function(x: 1053, y: -22, name: \"same\") same_e3c5d1 {\n            in property(String) s input_6d3a41\n            out(name: \"is all same\") property(Bool) output_f8fdd9\n\n            instance(x: 101, y: -26) tolower_83b8f9.ToLower {}\n            tolower_83b8f9.output -> check.result\n        }\n        function(x: 1093, y: -23, name: \"is_alphabetic\") is_alphabetic_f1f0b9 {\n            in property(String) s input_6d3a41\n            out(name: \"is alphabetic\") property(Bool) output_7fdd58\n\n            instance(x: 103, y: -27) IsAlphabetic_b4c89e Strings.IsAlphabetic {}\n            IsAlphabetic_b4c89e.is_alphabetic -> same.result\n        }\n        function(x: 1123, y: -22, name: \"is_numeric\") is_numeric_ea2d0a {\n            in property(String) s input_6d3a41\n            out(name: \"is numeric\") property(Bool) output_d2c1e9\n\n            instance(x: 101, y: -26) IsNumeric_f7bde5 Strings.IsNumeric {}\n            IsNumeric_f7bde5.is_numeric -> same.result\n        }\n        function(x: 1083, y: -23, name: \"is_whitespace\") is_whitespace_66f6a4 {\n            in property(String) s input_6d3a41\n            out(name: \"is whitespace\") property(Bool) output_5b7c8e\n\n            instance(x: 101, y: -26) IsWhitespace_8ac0ca Strings.IsWhitespace {}\n            IsWhitespace_8ac0ca.is_whitespace -> same.result\n        }\n        function(x: 1053, y: -22, name: \"same\") same_e3c5d1 {\n            in property(String) s input_6d3a41\n            out(name: \"is all same\") property(Bool) output_f8fdd9\n\n            instance(x: 101, y: -26) tolower_83b8f9.ToLower {}\n            tolower_83b8f9.output -> check.result\n        }\n        function(x: 1093, y: -23, name: \"check\") check_f9d5a1 {\n            in property(String) s input_6d3a41\n            out(name: \"is all same\") property(Bool) output_e2f4b3\n\n            instance(x: 103, y: -27) length_6e87f2 List.Length {}\n            length_6e87f2.length -> check.result\n        }\n        function(x: 1123, y: -22, name: \"is_alphabetic\") is_alphabetic_f1f0b9 {\n            in property(String) s input_6d3a41\n            out(name: \"is alphabetic\") property(Bool) output_7fdd58\n\n            instance(x: 103, y: -27) IsAlphabetic_b4c89e Strings.IsAlphabetic {}\n            IsAlphabetic_b4c89e.is_alphabetic -> same.result\n        }\n        function(x: 1083, y: -23, name: \"is_numeric\") is_numeric_ea2d0a {\n            in property(String) s input_6d3a41\n            out(name: \"is numeric\") property(Bool) output_d2c1e9\n\n            instance(x: 101, y: -26) IsNumeric_f7bde5 Strings.IsNumeric {}\n            IsNumeric_f7bde5.is_numeric -> same.result\n        }\n        function(x: 1053, y: -22, name: \"is_whitespace\") is_whitespace_66f6a4 {\n            in property(String) s input_6d3a41\n            out(name: \"is whitespace\") property(Bool) output_5b7c8e\n\n            instance(x: 101, y: -26) IsWhitespace_8ac0ca Strings.IsWhitespace {}\n            IsWhitespace_8ac0ca.is_whitespace -> same.result\n        }\n        function(x: 1093, y: -23, name: \"same\") same_e3c5d1 {\n            in property(String) s input_6d3a41\n            out(name: \"is all same\") property(Bool) output_f8fdd9\n\n            instance(x: 101, y: -26) tolower_83b8f9.ToLower {}\n            tolower_83b8f9.output -> check.result\n        }\n        function(x: 1123, y: -22, name: \"check\") check_f9d5a1 {\n            in property(String) s input_6d3a41\n            out(name: \"is all same\") property(Bool) output_e2f4b3\n\n            instance(x: 103, y: -27) length_6e87f2 List.Length {}\n            length_6e87f2.length -> check.result\n        }\n        function(x: 1053, y: -22, name: \"is_alphabetic\") is_alphabetic_f1f0b9 {\n            in property(String) s input_6d3a41\n            out(name: \"is alphabetic\") property(Bool) output_7fdd58\n\n            instance(x: 103, y: -27) IsAlphabetic_b4c89e Strings.IsAlphabetic {}\n            IsAlphabetic_b4c89e.is_alphabetic -> same.result\n        }\n        function(x: 1083, y: -23, name: \"is_numeric\") is_numeric_ea2d0a {\n            in property(String) s input_6d3a41\n            out(name: \"is numeric\") property(Bool) output_d2c1e9\n\n            instance(x: 101, y: -26) IsNumeric_f7bde5 Strings.IsNumeric {}\n            IsNumeric_f7bde5.is_numeric -> same.result\n        }\n        function(x: 1053, y: -22, name: \"is_whitespace\") is_whitespace_66f6a4 {\n            in property(String) s input_6d3a41\n            out(name: \"is whitespace\") property(Bool) output_5b",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -34, y: 13, name: \"input\") property(String) input_5e0f44\n\n        out(x: 1429, y: 33, name: \"output\") property(Bool) output_b4d8c1\n\n        instance(x: -45, y: 40) tolower_7f8f3b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 106, y: 48) isalpha_7a9e2a root.Std_k98ojb.Strings.IsAlphaNumeric {}\n        instance(x: 234, y: 45) if_e1cbb5 root.Std_k98ojb.Std.If {}\n        instance(x: -63, y: 43) characters_8d6f3b root.Std_k98ojb.Strings.Characters {}\n    }\n\n    \n\n    instance(x: 21, y: 13) all_same_9e0a28 root.main.all_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 35, y: -275, name: \"count\") property(Number) count_ai\n\n        instance(x: 19, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n        instance(x: 11, y: -268) math_floor_node root.Std_k98ojb.Math.Floor {}\n        count_ai -> math_floor_node.input\n        math_floor_node.output -> count_ai\n    }\n\n    \n    instance(x: -44, y: -284, name: \"count_digits\") count_9c0a6d root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 4, y: -342, name: \"count\") property(Number) count_ai\n\n        instance(x: 5, y: 2) list_chars_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> list_chars_node.input\n        list_chars_node.characters -> count_digits_8c0d3a.chars\n        count_digits_8c0d3a.length -> count_ai\n    }\n\n    \n    instance(x: -346, y: 83) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 12, y: -462, name: \"result\") property(Number) result_ai\n\n        instance(x: 82, y: -47) math_length_node root.Std_k98ojb.Math.Length {}\n        input_ai -> math_length_node.input\n        length_0ai -> math_length_node.length\n        instance(x: 99, y: -259) count_digit_node root.Std_k98ojb.Std.Count {}\n        count_digit_node.iterations -> math_length_node.length\n        count_digit_node.reset -> math_length_node.length\n        count_digit_node.count -> math_length_node.length\n        count_digit_node.done -> math_length_node.length\n        count_digit_node.interation -> math_length_node.length\n        count_digit_node.on_count -> math_length_node.length\n        count_0ai -> count_digit_node.on_count\n    }\n\n    \n    instance(x: 82, y: -47) length_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 2, y: -220, name: \"result\") property(Number) result_ai\n\n        instance(x: 55, y: 75) math_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> math_length_node.input\n        math_length_node.length -> count_digits_8d1c74.result\n    }\n\n    \n    instance(x: -27, y: 122) to_string_node root.main.count_digits {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 19, y: -234, name: \"result\") property(Number) result_ai\n\n        instance(x: 24, y: 86) length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> length_node.input\n        length_node.length -> count_digits_1d7a4e.result\n        function_3f2f9c root.Std_k98ojb.Math.Expression {\n            expression: \"input.length\"\n        }\n        function_3f2f9c.gen_0 -> length_node.value\n    }\n\n    \n    instance(x: 81, y: -247) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 19, y: -439, name: \"result\") property(Number) result_ai\n\n        instance(x: 15, y: 0) math_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> math_length_node.input\n        math_length_node.length -> count_digits_94a2d3\n        count_digits_94a2d3 -> result_ai\n    }\n\n    \n    instance(x: -84, y: -394, name: \"count_digits\") expression_3e25a9 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 38, y: -219, name: \"count\") property(Number) count_ai\n\n        instance(x: 80, y: 20) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_5f6e4a\n        count_digits_5f6e4a -> count_ai\n    }\n\n    \n    instance(x: -64, y: 24) digits_to_int_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 4, y: -245, name: \"result\") property(Number) result_ai\n\n        instance(x: 23, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_9f2d7a\n        count_digits_9f2d7a -> result_ai\n    }\n\n    \n    instance(x: -35, y: 88) is_digit_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 13, y: -342, name: \"result\") property(Number) result_ai\n\n        instance(x: 26, y: 70) math_length_node root.Std_k98ojb.Length {}\n        input_ai -> math_length_node.input\n        math_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 0, y: -418, name: \"count_digits\") string_3d8f7a root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 15, y: -435, name: \"result\") property(Number) result_ai\n\n        instance(x: 34, y: 78) length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> length_node.input\n        length_node.length -> count_digits_9e6d1f.result\n    }\n\n    \n    instance(x: -69, y: -215, name: \"count_digits\") split_node root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -279, y: 148, name: \"n\") property(Number) n_4e8d3b\n\n        out(x: 5700, y: -336, name: \"output\") property(Number) output_7fbb9c\n\n        instance(x: 55, y: 91) ifexpression_b1a8f5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 384, y: -193) sum_fourth_power_6d4e7b root.main.sum_fourth_power {}\n        instance(x: 90, y: 81) pow_a9f5c2 root.Std_k98ojb.Math.Pow {}\n        instance(x: 99, y: 74) mul_d8f65a root.Std_k98ojb.Math.Mul {}\n        instance(x: -206, y: -233) div_7d1e35 root.Std_k98ojb.Math.Div {}\n        instance(x: 100, y: 78) sum_fourth_power_ba5c2a root.main.sum_fourth_power {}\n        instance(x: 38, y: 97) add_e85b3f root.Std_k98ojb.Math.Add {}\n        instance(x: -217, y: -264) modulo_6d4e7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 99, y: 73) pow_a9f5c2.first -> div_7d1e35.second\n        instance(x: 90, y: 81) pow_a9f5c2.gen_0 -> mul_d8f65a.first\n        instance(x: -206, y: -233) div_7d1e35.result -> sum_fourth_power_ba5c2a.n_4e8d3b\n        n_4e8d3b -> pow_a9f5c2.y\n        mul_d8f65a.result -> add_e85b3f.first\n        add_e85b3f.result -> modulo_6d4e7b.value\n        modulo_6d4e7b.result -> sum_fourth_power_ba5c2a.output\n    }\n\n    \n\n    instance(x: -285, y: 172) sum_fourth_power_82b0aa root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -281, y: 159, name: \"n\") property(Number) n_0e1d4a\n\n        out(x: 1088, y: 23, name: \"output\") property(Number) output_e2f9b3\n\n        instance(x: 73, y: 28) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 386, y: -43, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (4*n^3 + 6*n^2 + n + 1)/6\"\n        }\n        instance(x: 62, y: 128) div_2d44da root.Std_k98ojb.Math.Div {}\n        instance(x: 91, y: -27) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 650, y: -230) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 97, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: 899, y: -515, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> add_88bb8a.first\n        10 -> div_547f34.second\n        div_547f34.result -> sum_634b7e.n_0e1d4a\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> sum_634b7e.execute_cdac2a\n        sum_634b7e.continue_d9efd7 -> setter_375321.execute\n        sum_634b7e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_e2f9b3\n        n_0e1d4a -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        floor_61b38d.output -> modulo_adfa16.value\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: 529) sum_fourth_power_1e5c71 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -287, y: 159, name: \"n\") property(Number) n_0a8e34\n\n        out(x: 7536, y: -644, name: \"output\") property(Number) output_f9c4f1\n\n        instance(x: 47, y: 82) sum_fourth_power_9b5d15 root.main.sum_fourth_power {}\n        instance(x: 73, y: -34, name: \"i\") for_loop_6e7a36 root.Std_k98ojb.Std.For {}\n        instance(x: 67, y: -213) expression_2da3c1 root.Std_k98ojb.Math.Expression {\n            expression: \"(4*i+1)^4\"\n        }\n        instance(x: 65, y: -239) sum_fourth_power_9b5d15.add_8a7f6e root.Std_k98ojbj.Math.Add {}\n        instance(x: 95, y: -278) div_3c2c44 root.Std_k98ojb.Math.Div {}\n        instance(x: 71, y: -225) mul_8bb9af root.Std_k98ojb.Math.Mul {}\n        instance(x: 93, y: -230) number_1d4f5e root.Std_k98ojb.Std.NumberFromString {}\n        instance(x: 97, y: -227) floor_6a35ab root.Std_k98ojb.Math.Floor {}\n        10 -> div_3c2c44.divisor\n        mul_8bb9af.result -> sum_fourth_power_9b5d15.first\n        expression_2da3c1.result -> div_3c2c44.first\n        number_1d4f5e.value -> div_3c2c44.second\n        floor_6a35ab.output -> sum_fourth_power_9b5d15.n_0a8e34\n        0 -> sum_fourth_power_9b5d15.new_value\n        sum_fourth_power_9b5d15.continue_d9efd7 -> i.next\n        for_loop_6e7a36.trigger -> sum_fourth_power_9b5d15.execute_cdac2a\n        expression_2da3c1.gen_0 -> sum_fourth_power_9b5d15.i\n    }\n\n    \n\n    instance(x: -219, y: 172) sum_fourth_power_9b5d15 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -286, y: 146, name: \"n\") property(Number) n_8d5a2b\n\n        out(x: 7200, y: 121, name: \"output\") property(Number) output_a3e4aa\n\n        instance(x: 54, y: 84) ifexpression_d87c9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 436, y: -247) sum_fourth_power_6f8d1a root.main.sum_fourth_power {}\n        instance(x: 74, y: 18) pow_d45c7 root.Std_k98ojb.Math.Pow {}\n        instance(x: 90, y: 25) add_2fbd3e root.Std_k98ojb.Math.Add {}\n        instance(x: 91, y: -4) modulo_a5a2ad root.Std_k98ojb.Math.Modulo {}\n        instance(x: 70, y: 26) div_6c7bf9 root.Std_k98ojb.Math.Div {}\n        setter(x: -236, y: 101, name: \"setter_e5f4e3\") setter_e5f4e3 = sum\n        setter(x: 895, y: 92, name: \"setter_ba6d45\") setter_ba6d45 = sum\n        getter(x: 912, y: -13, name: \"getter_1b8a14\") getter_1b8a14 = sum\n        instance(x: -221, y: -19) floor_d2c5f9 root.Std_k98ojb.Math.Floor {}\n        3 -> modulo_a5a2ad.divisor\n        pow_d45c7.y -> modulo_a5a2ad.value\n        3 -> div_6c7bf9.second\n        div_6c7bf9.result -> sum_fourth_power_6f8d1a.n_8d5a2b\n        0 -> setter_e5f4e3.new_value\n        setter_e5f4e3.continue -> ifexpression_d87c9f.execute\n        ifexpression_d87c9f.then -> sum_fourth_power_6f8d1a.execute\n        sum_fourth_power_6f8d1a.continue_d9efd7 -> setter_ba6d45.execute\n        sum_fourth_power_6f8d1a.output_732a8a -> add_2fbd3e.second\n        add_2fbd3e.result -> setter_ba6d45.new_value\n        setter_ba6d45.continue -> continue_d9efd7\n        getter_1b8a14.value -> output_a3e4aa\n        n_8d5a2b -> floor_d2c5f9.input\n        floor_d2c5f9.output -> div_6c7bf9.first\n        floor_d2c5f9.output -> modulo_a5a2ad.value\n        floor_d2c5f9.output -> ifexpression_d87c9f.gen_0\n    }\n\n    \n\n    instance(x: -201, y: 193) sum_fourth_power_b1b34d root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -342, y: 159, name: \"n\") property(Number) n_2e74f5\n\n        out(x: 3280, y: 142, name: \"output\") property(Number) output_aed4d3\n\n        instance(x: 43, y: 85) ifexpression_3c9b6a root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 54, y: -281) sum_fourth_power_8e7d5f root.main.sum_fourth_power {}\n        instance(x: 88, y: 19) mul_9a6c3b root.Std_k98ojb.Math.Mul {}\n        instance(x: 57, y: -228) pow_2f4f0f root.Std_k98ojb.Math.Pow {}\n        instance(x: 63, y: 240) add_8d7f34 root.Std_k98ojb.Math.Add {}\n        instance(x: 74, y: 253) div_5a3c9e root.Std_k98ojb.Math.Div {}\n        setter(x: -193, y: -273, name: \"setter_45d1ab\") setter_45d1ab = sum\n        setter(x: 907, y: -330, name: \"setter_48f2ca\") setter_48f2ca = sum\n        getter(x: 930, y: 220, name: \"getter_49a0e5\") getter_49a0e5 = sum\n        instance(x: -198, y: -240) floor_60d8e1 root.Std_k98ojb.Math.Floor {}\n        4 -> pow_2f4f0f.y\n        mul_9a6c3b.result -> add_8d7f34.first\n        5 -> div_5a3c9e.second\n        div_5a3c9e.result -> sum_fourth_power_8e7d5f.n_2e74f5\n        0 -> setter_45d1ab.new_value\n        setter_45d1ab.continue -> ifexpression_3c9b6a.execute\n        ifexpression_3c9b6a.then -> sum_fourth_power_8e7d5f.execute\n        sum_fourth_power_8e7d5f.continue_d9efd7 -> setter_48f2ca.execute\n        sum_fourth_power_8e7d5f.output_732a8a -> add_8d7f34.second\n        add_8d7f34.result -> setter_48f2ca.new_value\n        setter_48f2ca.continue -> continue_d9efd7\n        getter_49a0e5.value -> output_aed4d3\n        n_2e74f5 -> floor_60d8e1.input\n        floor_60d8e1.output -> div_5a3c9e.first\n        floor_60d8e1.output -> pow_2f4f0f.value\n        pow_2f4f0f.result -> mul_9a6c3b.second\n        mul_9a6c3b.result -> add_8d7f34.first\n        div_5a3c9e.result -> sum_fourth_power_8e7d5f.n_2e74f5\n    }\n\n    \n\n    instance(x: -193, y: 142) sum_fourth_power_bf1f5b root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -438, y: 0, name: \"n\") property(Number) n_1e4a8b\n\n        out(x: 12188, y: -6, name: \"output\") property(Number) output_6c4f7d\n\n        instance(x: 0, y: 0) find_74e9bb root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -198, y: 43, name: \"current\") property(Number) current_e5a7d1\n\n            out(x: 12188, y: -6, name: \"bool\") property(Bool) bool_9f0f2e\n\n            instance(x: 97, y: 39) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 46) pow_f3c8a1 root.Std_k98ojb.Math.Pow {}\n            instance(x: 99, y: 27) add_88bb8a root.Std_k98ojb.Math.Add {}\n            instance(x: 112, y: 33) div_547f34 root.Std_k98ojb.Math.Div {}\n            setter(x: -216, y: -449, name: \"setter_41e4ad\") setter_41e4ad = sum\n            setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n            getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n            instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n            3 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> pow_f3c8a1.first\n            3 -> div_547f34.second\n            div_547f34.result -> sum_4e2eb6.root.n_1e4a8b\n            0 -> setter_41e4ad.new_value\n            setter_41e4ad.continue -> find_74e9bb.execute\n            find_74e9bb.predicate -> bool_9f0f2e\n            pow_f3c8a1.result -> add_88bb8a.first\n            add_88bb8a.result -> setter_375321.new_value\n            setter_375321.continue_d9efd7 -> getter_38583a.execute_cdac2a\n            sum_4e2eb6.root.output_732a8a -> add_88bb8a.second\n            add_88bb8a.result -> getter_38583a.new_value\n            getter_38583a.continue_d9efd7 -> output_6c4f7d.execute_cdac2a\n            sum_4e2eb6.root.output_732a8a -> output_6c4f7d.value\n        } -> find_74e9bb.item\n        find_74e9bb.item -> pow_f3c8a1.first\n    }\n\n    \n\n    instance(x: -176, y: 53) sum_fourth_power_b6b5d root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_power {\n        in(x: -304, y: 173, name: \"n\") property(Number) n_6e5b2d\n\n        out(x: 5760, y: -319, name: \"output\") property(Number) output_a8a6c1\n\n        instance(x: 86, y: 156) pow_7fdd45 root.Std_k98ojb.Math.Pow {}\n        instance(x: 22, y: 123) sum_4eef0d root.main.sum_odd_power {}\n        instance(x: -14, y: 73) modulo_1a2c94 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 21, y: 80) add_5f3c31 root.Std_k98ojb.Math.Add {}\n        instance(x: 23, y: 58) div_6d8e9a root.Std_k98ojb.Math.Div {}\n        setter(x: -206, y: 137, name: \"setter_b2a0ea\") setter_b2a0ea = sum\n        setter(x: 859, y: 82, name: \"setter_9f45ca\") setter_9f45ca = sum\n        getter(x: 878, y: -18, name: \"getter_ebf5c4\") getter_ebf5c4 = sum\n        instance(x: -199, y: 115) floor_6d3e38 root.Std_k98ojb.Math.Floor {}\n        3 -> modulo_1a2c94.divisor\n        pow_7fdd45.result -> add_5f3c31.first\n        4 -> div_6d8e9a.second\n        div_6d8e9a.result -> sum_4eef0d.n_6e5b2d\n        0 -> setter_b2a0ea.new_value\n        setter_b2a0ea.continue -> pow_7fdd45.execute\n        pow_7fdd45.then -> sum_4eef0d.execute_cdac2a\n        sum_4eef0d.continue_d9efd7 -> setter_9f45ca.execute\n        setter_9f45ca.new_value -> add_5f3c31.second\n        add_5f3c31.result -> getter_ebf5c4\n        getter_ebf5c4.value -> output_a8a6c1\n        n_6e5b2d -> floor_6d3e38.input\n        floor_6d3e38.output -> modulo_1a2c94.value\n        floor_6d3e38.output -> pow_7fdd45.gen_0\n    }\n\n    \n\n    instance(x: -273, y: 165) sum_odd_power_4bcaaa root.main.sum_odd_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -342, y: 155, name: \"n\") property(Number) n_9e5d4b\n\n        out(x: 16384, y: -369, name: \"output\") property(Number) output_e71f0a\n\n        instance(x: 1, y: 24) pow_f8cbb2 root.Std_k98ojb.Math.Pow {}\n        instance(x: 44, y: 11, name: \"sum\") expression_5df6e3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: -45, y: 25, name: \"odd\") find_1d4f7a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 28, y: 31) add_2cbbda root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: -24) div_f8e5e9 root.Std_k98ojb.Math.Div {}\n        setter(x: -201, y: -29, name: \"setter_1aeb4f\") setter_1aeb4f = sum\n        setter(x: 113, y: -25, name: \"setter_2c7d6e\") setter_2c7d6e = sum\n        getter(x: 131, y: -16, name: \"getter_2b8df9\") getter_2b8df9 = sum\n        instance(x: -17, y: -21) floor_f5c71a root.Std_k98ojb.Math.Floor {}\n        3 -> pow_f8cbb2.y\n        pow_f8cbb2.result -> add_2cbbda.first\n        3 -> div_f8e5e9.second\n        div_f8e5e9.result -> setter_1aeb4f.n_6b655b\n        0 -> setter_1aeb4f.continue\n        setter_1aeb4f.execute -> expression_5df6e3.then\n        expression_5df6e3.else -> find_1d4f7a.execute_cdac2a\n        find_1d4f7a.continue_d9efd7 -> setter_2c7d6e.execute\n        find_1d4f7a.output_item -> pow_f8cbb2.first\n        pow_f8cbb2.result -> add_2cbbda.second\n        add_2cbbda.result -> setter_2c7d6e.new_value\n        setter_2c7d6e.continue -> expression_5df6e3.then\n        getter_2b8df9.value -> output_e71f0a\n        n_9e5d4b -> floor_f5c71a.input\n        floor_f5c71a.output -> div_f8e5e9.first\n        floor_f5c71a.output -> pow_f8cbb2.y\n        pow_f8cbb2.result -> expression_5df6e3.gen_0\n    }\n\n    \n\n    instance(x: -216, y: 166) sum_fourth_power_1f6d85 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -305, y: 150, name: \"n\") property(Number) n_0a6f43\n\n        out(x: 4096, y: -635, name: \"output\") property(Number) output_4d2c9e\n\n        instance(x: 70, y: -436) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 19, y: 33, name: \"fourth_power\") pow_7f8e1b root.Std_k98ojb.Math.Pow {}\n        instance(x: 20, y: 0, name: \"odd_number\") count_c2d84a root.Std_k98ojb.Std.Count {}\n        instance(x: 11, y: -427) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 9, y: 41, name: \"sum\") expression_634b7e root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 85, y: -398) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 349, y: -393) data_bf2d6e  = 3\n        instance(x: 11, y: -394) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 15, y: 0, name: \"first_odd\") expression_2d6da6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"odd_number.reset == 1\"\n        }\n        instance(x: 11, y: -415) add_f7a8e4 root.Std_k98ojb.Math.Add {}\n        data_bf2d6e -> modulo_1088d5.value\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.gen_0 -> odd_number.next\n        odd_number.item -> add_f7a8e4.first\n        modulo_1088d5.result -> add_f7a8e4.second\n        3 -> pow_7f8e1b.y\n        div_64046c.result -> sum.execute_cdac2a\n        expression_634b7e.then -> output_4d2c9e\n        expression_634b7e.else -> add_f7a8e4.execute_d9efd7\n        pow_7f8e1b.result -> sum.new_value\n        div_64046c.result -> sum\n        odd_number.item -> mul_f892a4.first\n        odd_number.item -> expression_2d6da6.gen_0\n        add_f7a8e4.result -> output_4d2c9e\n    }\n\n    \n\n    instance(x: -269, y: 145) sum_fourth_power_4d34f5 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -439, y: 146, name: \"n\") property(Number) n_2e4f6b\n\n        out(x: 1944, y: 10, name: \"output\") property(Number) output_b4c0d1\n\n        instance(x: 0, y: 0) find_9a5f7d root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -227, y: 47, name: \"current\") property(Number) current_ae3eb6\n\n            out(x: 1386, y: 21, name: \"bool\") property(Bool) bool_2d4f7c\n\n            instance(x: 0, y: 46) modulo_d66c1a root.Std_k98ojb.Math.Modulo {}\n            instance(x: -39, y: 16) pow_f6e3d5 root.Std_k98ojb.Math.Pow {}\n            instance(x: 112, y: 42) add_8f4d2a root.Std_k98ojb.Math.Add {}\n            instance(x: 99, y: 23) div_7edc0a root.Std_k98ojb.Math.Div {}\n            setter(x: -214, y: 46, name: \"setter_30f5df\") setter_30f5df = sum\n            setter(x: 875, y: 22, name: \"setter_d6d9e8\") setter_d6d9e8 = sum\n            getter(x: 901, y: 18, name: \"getter_32b1c4\") getter_32b1c4 = sum\n            instance(x: -202, y: 38) floor_0a7f3f root.Std_k98ojb.Math.Floor {}\n            5 -> modulo_d66c1a.divisor\n            pow_f6e3d5.result -> add_8f4d2a.first\n            5 -> div_7edc0a.second\n            div_7edc0a.result -> setter_30f5df.n_2e4f6b\n            0 -> setter_d6d9e8.new_value\n            setter_30f5df.continue -> bool_2d4f7c.execute\n            setter_d6d9e8.continue -> bool_2d4f7c.execute\n            getter_32b1c4.value -> output_b4c0d1\n        } -> find_9a5f7d.predicate\n        find_9a5f7d.item -> pow_f6e3d5.first\n        find_9a5f7d.item -> add_8f4d2a.second\n        add_8f4d2a.result -> setter_d6d9e8.new_value\n    }\n\n    \n\n    instance(x: -191, y: 178) sum_fourth_power_f44a3b root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -145, y: 71, name: \"side\") property(Number) side_8d5f6b\n\n        out(x: 276, y: 26, name: \"surface_area\") property(Number) sa_2e23c7\n\n        instance(x: 29, y: 58) pow_f3a0ec root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -155, y: 104) data_9f1a4d  = side\n        instance(x: -109, y: 139) mul_d2c9e5 root.Std_k98ojb.Math.Mul {}\n        pow_f3a0ec.result -> mul_d2c9e5.first\n        6 -> mul_d2c9e5.second\n        data_9f1a4d -> mul_d2c9e5.second\n        mul_d2c9e5.result -> sa_2e23c7\n    }\n\n    \n\n    instance(x: -162, y: 85) surface_area_e66f3b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -202, y: 55, name: \"side_length\") property(Number) side_length_4fdd3d\n\n        out(x: 324, y: 8, name: \"surface_area\") property(Number) surface_area_6c5a0b\n\n        instance(x: 25, y: -1) pow_f7e5ab root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 4, y: 130) data_e68d33  = side_length_\n        pow_f7e5ab.result -> surface_area_6c5a0b\n        data_e68d33 -> pow_f7e5ab.x\n        2 -> pow_f7e5ab.y\n        side_length_4fdd3d -> pow_f7e5ab.first\n        side_length_4fdd3d -> surface_area_6c5a0b\n    }\n\n    \n\n    instance(x: -186, y: 140) surface_area_2d2e34 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -106, y: 16, name: \"side_length\") property(Number) side_length_4d8a80\n\n        out(x: 588, y: 0, name: \"surface_area\") property(Number) surface_area_fdf9e3\n\n        instance(x: 14, y: 17, name: \"sides_of_cube\") property(Number) sides_of_cube_1f0b66\n        data_instance(x: -101, y: 13, name: \"square_side\") = side_length_4d8a80 * side_length_4d8a80\n\n        instance(x: -143, y: 108, name: \"surface_area_of_one_face\") property(Number) surface_area_of_one_face_f1b3c9\n        data_instance(x: -101, y: 13, name: \"square_side\") -> surface_area_of_one_face_f1b3c9\n\n        instance(x: -100, y: 16, name: \"total_surface_area\") property(Number) total_surface_area_4f77d6\n        sides_of_cube_1f0b66 -> total_surface_area_4f77d6\n        surface_area_of_one_face_f1b3c9 -> total_surface_area_4f77d6\n\n        instance(x: 16, y: -20) add_b4554f root.Std_k98ojb.Math.Add {}\n        side_length_4d8a80 -> add_b4554f.first\n        side_length_4d8a80 * 6 -> add_b4554f.second\n        add_b4554f.result -> surface_area_fdf9e3\n    }\n\n    \n\n    instance(x: -76, y: 98) cube_surface_area_e2c1eb root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -114, y: 29, name: \"side\") property(Number) side_2f6e3d\n\n        out(x: 216, y: 5, name: \"surface_area\") property(Number) sa_5c8697\n\n        instance(x: 12, y: -45) square_f1a4b9 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -215, y: 108) data_d93d8e  = side\n        data_d93d8e -> square_f1a4b9.x\n        side_2f6e3d -> square_f1a4b9.y\n        square_f1a4b9.result -> sa_5c8697\n    }\n\n    \n\n    instance(x: -292, y: 63) surface_area_d0a94a root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -222, y: 15, name: \"side_length\") property(Number) side_length_4fcaee\n\n        out(x: 120, y: 34, name: \"surface_area\") property(Number) surface_area_1a2d0c\n\n        instance(x: -92, y: -10) pow_f5b8e3 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -227, y: 24) data_4f6e57  = side_length_\n        pow_f5b8e3.result -> surface_area_1a2d0c\n        data_4f6e57 -> pow_f5b8e3.x\n        2 -> pow_f5b8e3.y\n        surface_area_1a2d0c -> pow_f5b8e3.result\n    }\n\n    \n\n    instance(x: -178, y: 11) surface_area_7d9f74 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -222, y: 49, name: \"side_length\") property(Number) side_length_5d3e9b\n\n        out(x: 594, y: 12, name: \"surface_area\") property(Number) surface_area_4a1c2f\n\n        instance(x: 23, y: -110) pow_f77d35 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 240, y: 18) data_b9e6df  = side_length_5d3e9b\n        instance(x: 11, y: 56) mul_4a8f1c root.Std_k98ojb.Math.Mul {}\n        data_b9e6df -> mul_4a8f1c.first\n        6 -> mul_4a8f1c.second\n        mul_4a8f1c.result -> surface_area_4a1c2f\n    }\n\n    \n\n    instance(x: -145, y: 33) cube_surface_area_f3d9b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -214, y: 55, name: \"side\") property(Number) side_1f0d64\n\n        out(x: 288, y: 9, name: \"surface_area\") property(Number) surface_area_a2b3f6\n\n        instance(x: -76, y: -114) square_f85b35 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -69, y: 12) data_8c7a57  = side\n        side_1f0d64 -> square_f85b35.x\n        square_f85b35.result -> surface_area_a2b3f6\n        2 -> square_f85b35.y\n    }\n\n    \n\n    instance(x: -146, y: 16) surface_area_d5c9a7 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -217, y: 11, name: \"side_length\") property(Number) side_length_1e5f8d\n\n        out(x: 216, y: 12, name: \"surface_area\") property(Number) surface_area_2a4b7c\n\n        instance(x: -93, y: -38, name: \"six_sides\") root.Std_k98ojb.List.GenerateRange {}\n        six_sides.from = 6\n        side_length_1e5f8d -> six_sides.to\n        instance(x: -142, y: -63, name: \"square_area\") root.Std_k98ojb.Math.Expression {\n            expression: \"side^2\"\n        }\n        instance(x: -234, y: 43, name: \"sum_of_areas\") root.Std_k98ojb.Math.Add {}\n        six_sides.items -> sum_of_areas.values\n        side_length_1e5f8d -> square_area.gen_0\n        square_area.result -> sum_of_areas.first\n        for(x: -216, y: 12, name: \"i\") in root.Std_k98ojb.Std.For {}\n        six_sides.items -> sum_of_areas.values\n        instance(x: -221, y: 9, name: \"add_square_area\") root.Std_k98ojb.Math.Add {}\n        sum_of_areas.first -> add_square_area.first\n        side_length_1e5f8d -> add_square_area.second\n        add_square_area.result -> surface_area_2a4b7c\n    }\n\n    \n\n    instance(x: 142, y: -34) cube_surface_area_b3e6ea root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -216, y: 73, name: \"side\") property(Number) side_8d9e25\n\n        out(x: 216, y: 146, name: \"area\") property(Number) surface_area_4a5f6b\n\n        instance(x: -101, y: -76, name: \"sides\") property(Number) sides_f0c1ec\n        data_instance(x: -102, y: -67, name: \"square_side\") = side_8d9e25 * side_8d9e25\n        instance(x: 93, y: -64) mul_eb3f14 root.Std_k98ojb.Math.Mul {}\n        square_side -> mul_eb3f14.first\n        sides_f0c1ec -> mul_eb3f14.second\n        mul_eb3f14.result -> surface_area_4a5f6b\n    }\n\n    \n\n    instance(x: 109, y: -49) surface_area_d8e9db root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -142, y: 47, name: \"side\") property(Number) side_6d8e4a\n\n        out(x: 192, y: 9, name: \"area\") property(Number) area_11c3f5\n        out(x: 215, y: -69, name: \"continue\") trigger() continue_1b7bf0\n\n        instance(x: 17, y: -43) pow_f66a6d root.Std_k98ojb.Math.Pow {}\n        side_6d8e4a -> pow_f66a6d.x\n        2 -> pow_f66a6d.y\n        pow_f66a6d.result -> area_11c3f5\n        instance(x: -215, y: 63) add_7bfc98 root.Std_k98ojb.Math.Add {}\n        side_6d8e4a -> add_7bfc98.first\n        6 -> add_7bfc98.second\n        add_7bfc98.result -> area_11c3f5\n    }\n\n    \n\n    instance(x: -216, y: 74) surface_area_d1c0eb root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -446, y: 43, name: \"list\") property(List) list_0a8f1d\n\n        out(x: 141, y: 68, name: \"output\") property(Number) output_3c34e6\n\n        instance(x: -1085, y: -26, name: \"Max\") Std_k98ojb.List.Max {}\n        instance(x: -1129, y: 59, name: \"Min\") Std_k98ojb.List.Min {}\n        data_instance(x: -1023, y: -44) data_6a7c94  = [first, middle, last]\n        instance(x: -1031, y: 49) length_8e2d31 root.Std_k98ojb.List.Length {}\n        instance(x: -1109, y: 61) sub_f3f0ab root.Std_k98ojb.Math.Sub {}\n        list_0a8f1d -> Max.items\n        list_0a8f1d -> Min.items\n        data_6a7c94 -> length_8e2d31.list\n        firstitem_9b1bc3 root.Std_k98ojb.List.FirstItem {}\n        lastitem_d831ca root.Std_k98ojb.List.LastItem {}\n        sub_f3f0ab.result -> output_3c34e6\n        Max.max -> data_6a7c94.last\n        Min.min -> data_6a7c94.first\n        length_8e2d31.length -> sub_f3f0ab.first\n        1 -> sub_f3f0ab.second\n    }\n\n    \n\n    instance(x: -62, y: -24) diff_max_min_4b34e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -106, y: 26, name: \"list\") property(List) list_4a3d1e\n\n        out(x: 445, y: 53, name: \"difference\") property(Number) difference_5c8f7b\n        out(x: 52, y: 74, name: \"output\") property(Number) output_63cd35\n\n        instance(x: -128, y: 19) max_value_6e2d0a root.Std_k98ojb.List.Max {}\n        instance(x: -120, y: 56) min_value_8f3c1d root.Std_k98ojb.List.Min {}\n        data_instance(x: -110, y: 72) data_b7cd4a  = [max_value, min_value]\n        instance(x: -121, y: 74) sub_0d5f6e root.Std_k98ojb.Math.Sub {}\n        list_4a3d1e -> max_value_6e2d0a.items\n        list_4a3d1e -> min_value_8f3c1d.items\n        data_b7cd4a -> sub_0d5f6e.first\n        max_value_6e2d0a.max -> sub_0d5f6e.result\n        min_value_8f3c1d.min -> output_63cd35\n        sub_0d5f6e.result -> difference_5c8f7b\n    }\n\n    \n\n    instance(x: 104, y: -42) diff_max_min_4a2f66 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -144, y: 109, name: \"list\") property(List) list_4f6b25\n\n        out(x: 439, y: 27, name: \"output\") property(Number) output_2c0d8a\n\n        instance(x: -1049, y: -375) firstitem_9b1bc3 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1059, y: -696) lastitem_d831ca root.Std_k98ojb.List.LastItem {}\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first, middle, last]\n        instance(x: -432, y: -620) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_752c60 -> lastitem_d831ca.list\n        list_752c60 -> firstitem_9b1bc3.list\n        data_cc1b1b -> flatten_c31c7c.items\n        firstitem_9b1bc3.item -> data_cc1b1b.last\n        lastitem_d831ca.item -> data_cc1b1b.first\n        list_752c60 -> slice_3f3ee6.list\n        1 -> slice_3f3ee6.start\n        slice_3f3ee6.slice -> data_cc1b1b.middle\n        flatten_c31c7c.flattened -> output_2c0d8a\n        list_752c60 -> length_4b8927.list\n        length_4b8927.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> slice_3f3ee6.end\n    }\n\n    \n\n    instance(x: -174, y: -63) diff_max_min_8c0e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -139, y: 143, name: \"list\") property(List) list_6f4d3a\n\n        out(x: 445, y: 61, name: \"difference\") property(Number) difference_58c3b5\n\n        instance(x: -1059, y: -292) length_7e2c7a root.Std_k98ojb.List.Length {}\n        instance(x: -1151, y: 123) max_3b8f2d root.Std_k98ojb.Math.Max {}\n        instance(x: -1084, y: 63) min_6ebef9 root.Std_k98ojb.Math.Min {}\n        data_instance(x: -1015, y: 78) data_3aaf7e  = [max, min]\n        instance(x: -1048, y: -286) slice_0c2c7f root.Std_k98ojb.List.Slice {}\n        instance(x: -1006, y: 57) sub_74cd5d root.Std_k98ojb.Math.Sub {}\n        list_6f4d3a -> max_3b8f2d.list\n        list_6f4d3a -> min_6ebef9.list\n        data_3aaf7e -> slice_0c2c7f.items\n        0 -> slice_0c2c7f.start\n        slice_0c2c7f.slice -> data_3aaf7e.max\n        length_7e2c7a.length -> sub_74cd5d.first\n        list_6f4d3a -> sub_74cd5d.list\n        1 -> sub_74cd5d.second\n        sub_74cd5d.result -> max_3b8f2d.max\n        min_6ebef9.item -> data_3aaf7e.min\n        max_3b8f2d.max -> difference_58c3b5\n        sub_74cd5d.result -> difference_58c3b5\n    }\n\n    \n\n    instance(x: 102, y: -47) diff_largest_smallest_e6f1a4 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -113, y: -41, name: \"list\") property(List) list_5b2e4d\n\n        out(x: -105, y: -58, name: \"output\") property(Number) output_b1f7c6\n        out(x: 445, y: -54, name: \"min_max_diff\") property(Number) min_max_diff_5cd9a8\n\n        instance(x: -119, y: -57) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -101, y: -58) max2_f6f3e0 root.Std_k98ojb.Math.Max2 {}\n        instance(x: 104, y: -49) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -105, y: -54) min_f7c9d4 root.Std_k98ojb.Math.Min {}\n        instance(x: -115, y: -44) max_f6f3e0 root.Std_k98ojb.Math.Max {}\n        list_5b2e4d -> length_4b8927.list\n        length_4b8927.length -> max2_f6f3e0.left\n        list_5b2e4d -> max_f6f3e0.list\n        sub_852f2e.first -> min_f7c9d4.left\n        sub_852f2e.second -> min_f7c9d4.right\n        length_4b8927.length -> sub_852f2e.first\n        list_5b2e4d -> max_f6f3e0.list\n        max_f6f3e0.result -> max_f6f3e0.result\n        min_f7c9d4.result -> output_b1f7c6\n        sub_852f2e.result -> min_max_diff_5cd9a8\n    }\n\n    \n\n    instance(x: 110, y: -59) diff_largest_smallest_d66b1 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -147, y: 17, name: \"list\") property(List) list_4d2f50\n\n        out(x: -113, y: 19, name: \"output\") property(Number) output_a6e9c1\n        out(x: 146, y: -111, name: \"continue\") trigger() continue_ba8f5b\n\n        instance(x: -98, y: -114, name: \"smallest\") find_2b7d4 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -100, y: 21) max_2e9c1 root.Std_k98ojb.Math.Max {}\n        instance(x: -108, y: 20) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: -95, y: -114, name: \"smallest_context\") context_0f5d8 root.Std_k98ojb.Iteration.Contexts.AnyContext {}\n        list_4d2f50 -> find_2b7d4.items\n        max_2e9c1.values -> sub_f133b2.left\n        sub_f133b2.first -> find_2b7d4.context\n        sub_f133b2.second -> smallest_context\n        sub_f133b2.result -> output_a6e9c1\n    }\n\n    \n\n    instance(x: 123, y: -67) diff_largest_smallest_8f5c74 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -1099, y: 23, name: \"list\") property(List) list_5e4a85\n\n        out(x: 1461, y: 46, name: \"difference\") property(Number) difference_eb4c43\n\n        instance(x: -1007, y: 78) length_9d8f2b root.Std_k98ojb.List.Length {}\n        instance(x: -1083, y: 29, name: \"max\") property(Number) max_a85df6\n        instance(x: -1051, y: 42, name: \"min\") property(Number) min_5a4d0c\n        instance(x: -1077, y: 60) sub_2f9e3b root.Std_k98ojb.Math.Sub {}\n        list_5e4a85 -> length_9d8f2b.list\n        max_a85df6 -> sub_2f9e3b.first\n        min_5a4d0c -> sub_2f9e3b.second\n        sub_2f9e3b.result -> difference_eb4c43\n    }\n\n    \n\n    instance(x: 49, y: -21) diff_max_min_47f6b7 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -101, y: 22, name: \"list\") property(List) list_4d6f1a\n\n        out(x: 446, y: 63, name: \"difference\") property(Number) difference_a1c5e3\n        out(x: 450, y: 23, name: \"output\") property(List) output_d2b9db\n\n        instance(x: -102, y: -43, name: \"list_max\") Std_k98ojb.List.Max {}\n        instance(x: -113, y: 68, name: \"list_min\") Std_k98ojb.List.Min {}\n        data_instance(x: -73, y: 23) data_4c8d0f  = [first, second]\n        instance(x: -54, y: 53) sub_e6e2a9 root.Std_k98ojb.Math.Sub {}\n        list_4d6f1a -> list_max.items\n        list_4d6f1a -> list_min.items\n        data_4c8d0f.first -> sub_e6e2a9.first\n        data_4c8d0f.second -> sub_e6e2a9.second\n        sub_e6e2a9.result -> difference_a1c5e3\n    }\n\n    \n\n    instance(x: 48, y: -24) diff_max_min_15f9e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -436, y: -233, name: \"list\") property(List) list_8f4e23\n\n        out(x: 447, y: -240, name: \"output\") property(Number) output_eb3c5d\n\n        instance(x: -1049, y: -375) firstitem_9b1bc3 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1059, y: -696) lastitem_d831ca root.Std_k98ojb.List.LastItem {}\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first, middle, last]\n        instance(x: -432, y: -620) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_8f4e23 -> lastitem_d831ca.list\n        list_8f4e23 -> firstitem_9b1bc3.list\n        data_cc1b1b -> flatten_c31c7c.items\n        firstitem_9b1bc3.item -> data_cc1b1b.last\n        lastitem_d831ca.item -> data_cc1b1b.first\n        list_8f4e23 -> slice_3f3ee6.list\n        1 -> slice_3f3ee6.start\n        slice_3f3ee6.slice -> data_cc1b1b.middle\n        flatten_c31c7c.flattened -> output_eb3c5d\n        list_8f4e23 -> length_4b8927.list\n        length_4b8927.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> slice_3f3ee6.end\n    }\n\n    \n\n    instance(x: 48, y: -67) diff_max_min_5c34e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -136, y: -498, name: \"list\") property(List) list_5d0f33\n\n        out(x: -138, y: -503, name: \"output\") property(Number) output_1a7e4c\n\n        instance(x: -1029, y: 18, name: \"Smallest\") find_smallest root.Std_k98ojb.Iteration.Find {}\n        instance(x: -1075, y: -491, name: \"Largest\") find_largest root.Std_k98ojb.Iteration.Find {}\n        data_instance(x: -1001, y: 44) data_6e2f8d  = [smallest, largest]\n        instance(x: -1014, y: -468) max_5cdd3a root.Std_k98ojb.Math.Max2 {}\n        instance(x: -1049, y: -438) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_5d0f33 -> find_smallest.items\n        list_5d0f33 -> find_largest.items\n        data_6e2f8d -> max_5cdd3a.left\n        data_6e2f8d.largest -> max_5cdd3a.right\n        sub_f133b2.result -> output_1a7e4c\n    }\n\n    \n\n    instance(x: 43, y: -63) diff_largest_smallest_0f3d64 root.main.diff_largest_smallest {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -42, y: 64, name: \"input\") property(Number) input_8f2d0a\n\n        out(x: 1739, y: -206, name: \"output\") property(Bool) output_e5cd7e\n\n        instance(x: 121, y: 74, name: \"even\") isnumeric_6b3c43 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 201, y: 69) tolower_7f44a1 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 181, y: -207) contains_8c0dcd root.Std_k98ojb.Strings.Contains {}\n        instance(x: 121, y: 72) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        input_8f2d0a -> isnumeric_6b3c43.input\n        tolower_7f44a1.output -> contains_8c0dcd.input\n        contains_8c0dcd.input -> not_75283f.input\n        even.result -> output_e5cd7e\n    }\n\n    \n\n    instance(x: -66, y: 35) is_even_6b3bba root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -26, y: 18, name: \"input\") property(Number) input_9a3d6e\n\n        out(x: 1911, y: -16, name: \"output\") property(Bool) output_b5c4f8\n\n        instance(x: -47, y: 22) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1039, y: 61) not_75283f root.Std_k98ojb.Logic.Not {}\n        is_even_6b5a6e -> not_75283f\n        input_9a3c4d -> modulo_c76d2b.value\n        0 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> not_75283f.input\n        not_75283f.result -> output_b5c4f8\n    }\n\n    \n\n    instance(x: -41, y: -21) is_even_f1a3df root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -31, y: 22, name: \"input\") property(Number) input_6d2a51\n\n        out(x: 1, y: 19, name: \"result\") property(Bool) result_b3e7c4\n\n        instance(x: 188, y: 21) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 464, y: 23) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 108, y: 25) lessThanOrEqual_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -47, y: 29) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        modulo_c76d2b.result -> not_75283f\n        input_6d2a51 -> modulo_c76d2b.value\n        lessThanOrEqual_f11fda.left -> modulo_c76d2b.divisor\n        0 -> lessThanOrEqual_f11fda.right\n        if_07b8c7.predicate -> not_75283f.input\n        if_07b8c7.then -> result_b3e7c4\n    }\n\n    \n\n    instance(x: -64, y: 13) is_even_9a2d17 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -527, y: 438, name: \"input\") property(Number) input_f5c03d\n\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: -303, y: -205, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"check even\") if_07b8c7 root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            0 -> modulo_c76d2b.divisor\n            input_f5c03d -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> map_c73e3b.handler\n        list_0b075e -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            0 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        if_07b8c7.then -> output_f3db9f\n        not_75283f.result -> output_f3db9f\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -58, y: 24, name: \"input\") property(Number) input_8a0e5d\n\n        out(x: 1134, y: -26, name: \"output\") property(Bool) output_a7f2c9\n\n        instance(x: 100, y: -25, name: \"even number\") is_even_b6b7df root.Std_k98ojb.Logic.Equal {}\n        instance(x: 110, y: -23, name: \"odd number\") not_equal_4d5e33 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 0, y: 56) modulo_1c8f2a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 10, y: -26) is_even_b6b7df.value -> output_a7f2c9\n        input_8a0e5d -> modulo_1c8f2a.value\n        modulo_1c8f2a.divisor -> 2\n        modulo_1c8f2a.result -> not_equal_4d5e33.left\n        0 -> not_equal_4d5e33.right\n        not_equal_4d5e33.result -> output_a7f2c9\n    }\n\n    \n\n    instance(x: -67, y: -34) is_even_d8a3b1 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -58, y: 64, name: \"number\") property(Number) number_9f6d85\n\n        out(x: 1241, y: 23, name: \"output\") property(Bool) output_2a0e3c\n\n        instance(x: 105, y: 52) modulo_35e8b5 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 157, y: 63) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 124, y: 62) lessThanOrEqual_6c2a4d root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        number_9f6d85 -> modulo_35e8b5.value\n        0 -> not_75283f.input\n        modulo_35e8b5.result -> lessThanOrEqual_6c2a4d.left\n        2 -> lessThanOrEqual_6c2a4d.right\n        lessThanOrEqual_6c2a4d.result -> output_2a0e3c\n    }\n\n    \n\n    instance(x: -49, y: -19) is_even_8a5d9b root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -567, y: 439, name: \"number\") property(Number) number_5e9a66\n\n        out(x: 0, y: 0, name: \"result\") property(Bool) result_3fdd8b\n\n        instance(x: 187, y: 56) modulo_d33eb1 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -27, y: 47) notequal_c7c9d6 root.Std_k98ojb.Logic.NotEqual {}\n        number_5e9a66 -> modulo_d33eb1.value\n        2 -> modulo_d33eb1.divisor\n        notequal_c7c9d6.result -> result_3fdd8b\n        modulo_d33eb1.result -> notequal_c7c9d6.left\n    }\n\n    \n\n    instance(x: -58, y: -11) is_even_e4e9a2 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -26, y: 3, name: \"input\") property(Number) input_8f5d2e\n\n        out(x: 0, y: 1, name: \"output\") property(Bool) output_b7b9a4\n\n        instance(x: -11, y: 44) modulo_6c15d3 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 2, y: 38) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n        input_8f5c0e -> modulo_6c15d3.value\n        2 -> modulo_6c15d3.divisor\n        notequal_7836b4.result -> output_b7b9a4\n        modulo_6c15d3.result -> notequal_7836b4.left\n    }\n\n    \n\n    instance(x: -38, y: 34) is_even_f0f1e5 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -523, y: 34, name: \"number\") property(Number) num_6e9f4d\n\n        out(x: 1112, y: 19, name: \"output\") property(Bool) output_7c5a8b\n\n        instance(x: -47, y: 36, name: \"is even\") Std.If {\n            in(x: -52, y: 20, name: \"execute\") trigger() execute_b1f6e4\n            in(x: -27, y: 34, name: \"input\") property(Bool) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"then\") trigger() then_a9f1f2\n            out(x: -47, y: 32, name: \"else\") trigger() else_0a7eef\n            out(x: -52, y: 20, name: \"value\") property(Number) value_5c62eb\n\n        }\n        instance(x: -50, y: 24, name: \"is even\") Std.IfExpression {\n            in(x: -27, y: 34, name: \"input\") property(Number) input_3d5f8c\n            in(x: -52, y: 20, name: \"expression\") expression_9fba8c\n\n            out(x: -28, y: 24, name: \"then\") trigger() then_a9f1f2\n            out(x: -47, y: 32, name: \"else\") trigger() else_0a7eef\n        }\n        instance(x: -27, y: 34, name: \"expression\") expression_9fba8c {\n            in(x: -52, y: 20, name: \"input\") property(Number) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"result\") property(Number) result_a2b2a6\n        }\n        instance(x: -47, y: 32, name: \"expression\") expression_b720d7 {\n            in(x: -52, y: 20, name: \"input\") property(Number) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"result\") property(Number) result_a2b2a6\n        }\n        instance(x: -28, y: 24, name: \"expression\") expression_log10 {\n            in(x: -52, y: 20, name: \"input\") property(Number) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"result\") property(Number) result_a2b2a6\n        }\n        instance(x: -47, y: 32, name: \"expression\") expression_abs {\n            in(x: -52, y: 20, name: \"input\") property(Number) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"result\") property(Number) result_a2b2a6\n        }\n        instance(x: -28, y: 24, name: \"expression\") expression_sqrt {\n            in(x: -52, y: 20, name: \"input\") property(Number) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"result\") property(Number) result_a2b2a6\n        }\n        instance(x: -47, y: 32, name: \"expression\") expression_log {\n            in(x: -52, y: 20, name: \"input\") property(Number) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"result\") property(Number) result_a2b2a6\n        }\n        instance(x: -47, y: 32, name: \"expression\") expression_exp {\n            in(x: -52, y: 20, name: \"input\") property(Number) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"result\") property(Number) result_a2b2a6\n        }\n        instance(x: -47, y: 32, name: \"expression\") expression_sin {\n            in(x: -52, y: 20, name: \"input\") property(Number) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"result\") property(Number) result_a2b2a6\n        }\n        instance(x: -47, y: 32, name: \"expression\") expression_cos {\n            in(x: -52, y: 20, name: \"input\") property(Number) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"result\") property(Number) result_a2b2a6\n        }\n        instance(x: -47, y: 32, name: \"expression\") expression_tan {\n            in(x: -52, y: 20, name: \"input\") property(Number) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"result\") property(Number) result_a2b2a6\n        }\n        instance(x: -47, y: 32, name: \"expression\") expression_cot {\n            in(x: -52, y: 20, name: \"input\") property(Number) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"result\") property(Number) result_a2b2a6\n        }\n        instance(x: -47, y: 32, name: \"expression\") expression_sec {\n            in(x: -52, y: 20, name: \"input\") property(Number) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"result\") property(Number) result_a2b2a6\n        }\n        instance(x: -47, y: 32, name: \"expression\") expression_csc {\n            in(x: -52, y: 20, name: \"input\") property(Number) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"result\") property(Number) result_a2b2a6\n        }\n        instance(x: -47, y: 32, name: \"expression\") expression_sinh {\n            in(x: -52, y: 20, name: \"input\") property(Number) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"result\") property(Number) result_a2b2a6\n        }\n        instance(x: -47, y: 32, name: \"expression\") expression_cosh {\n            in(x: -52, y: 20, name: \"input\") property(Number) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"result\") property(Number) result_a2b2a6\n        }\n        instance(x: -47, y: 32, name: \"expression\") expression_tanh {\n            in(x: -52, y: 20, name: \"input\") property(Number) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"result\") property(Number) result_a2b2a6\n        }\n        instance(x: -47, y: 32, name: \"expression\") expression_ern {\n            in(x: -52, y: 20, name: \"input\") property(Number) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"result\") property(Number) result_a2b2a6\n        }\n        instance(x: -47, y: 32, name: \"expression\") expression_cnd {\n            in(x: -52, y: 20, name: \"input\") property(Number) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"result\") property(Number) result_a2b2a6\n        }\n        instance(x: -47, y: 32, name: \"expression\") expression_csd {\n            in(x: -52, y: 20, name: \"input\") property(Number) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"result\") property(Number) result_a2b2a6\n        }\n        instance(x: -47, y: 32, name: \"expression\") expression_cosinh {\n            in(x: -52, y: 20, name: \"input\") property(Number) input_3d5f8c\n\n            out(x: -28, y: 24, name: \"result\") property(Number) result_a2b2a6\n        }\n        instance(x: -47, y:",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -57, y: 32, name: \"number\") property(Number) num_4f9d41\n\n        out(x: 1148, y: 38, name: \"output\") property(Bool) output_6a2e5c\n\n        instance(x: -18, y: 33) modulo_1b3e30 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1007, y: 41) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n        num_4f9d41 -> modulo_1b3e30.value\n        2 -> modulo_1b3e30.divisor\n        modulo_1b3e30.result -> notequal_7836b4.left\n        0 -> notequal_7836b4.right\n        notequal_7836b4.result -> output_6a2e5c\n    }\n\n    \n\n    instance(x: -65, y: -15) is_even_f1f7d8 root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -272, y: 151, name: \"string\") property(String) input_0\n\n        out(x: 542, y: -2, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> output_ebef81\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -222, y: 23, name: \"string\") property(String) input_0\n\n        out(x: 531, y: -2, name: \"output\") property(Any) output_c4f6b3\n\n        instance(x: 346, y: 58) find_d9e7d1 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 499, y: 0) contains_1a55c8 root.Std_k98ojb.Strings.Contains {}\n        contains_1a55c8.input -> input_0\n        \"z\" -> contains_1a55c8.contains\n        find_d9e7d1.items -> contains_1a55c8.output\n        1 -> find_d9e7d1.index\n        input_0 -> contains_1a55c8.value\n        contains_1a55c8.result -> output_c4f6b3\n    }\n\n    \n\n    instance(x: -87, y: 176) first_repeated_char_f2df5 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -302, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -233, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 1189, y: -2, name: \"output\") property(Any) output_4d7b5f\n\n        instance(x: 0, y: 0) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 272, y: 26) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 451, y: -85) count_3f5d7a root.Std_k98ojb.Std.Count {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_1 -> tolower_2e1444.input\n        contains_d42dce.result -> count_3f5d7a.reset\n        count_3f5d7a.count -> contains_d42dce.input\n        contains_d42dce.result -> first_repeated_char.found_match\n    }\n\n    \n\n    instance(x: -139, y: 173) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_ea1d3b\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 532, y: -157, name: \"map\") map_6f3a1c root.Std_k98ojb.Iteration.Map {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_ea1d3b\n        map_6f3a1c.handler -> contains_d42dce\n        map_6f3a1c.output_list -> result_ea1d3b\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -293, y: 0, name: \"string\") property(String) input_8\n\n        out(x: 1043, y: -2, name: \"output\") property(Any) output_c6f1d4\n\n        instance(x: 63, y: 44) characters_7e9c0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 256, y: 51) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_7e9c0.characters -> contains_d42dce.input\n        input_8 -> characters_7e9c0.input\n        contains_d42dce.result -> output_c6f1d4\n    }\n\n    \n\n    instance(x: 83, y: 54) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -261, y: 170, name: \"string\") property(String) input_0\n\n        out(x: 822, y: 28, name: \"output\") property(Any) output_c1e8f5\n\n        instance(x: 23, y: 26) find_repeated_char_0a9c43 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -40, y: 144) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 55, y: 86) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> output_c1e8f5\n        find_repeated_char_0a9c43.item -> output_c1e8f5\n    }\n\n    \n\n    instance(x: -294, y: 181) first_repeated_char_f56b3f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -312, y: 202, name: \"string\") property(String) input_0\n\n        out(x: 1063, y: 28, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 43, y: 20) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -141, y: 46, name: \"seen\") data_object = {}\n        instance(x: 253, y: 21) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> data_object\n        data_object[lowercase_2e1444.input] = true\n        tolower_2e1444.input -> output_ebef81\n    }\n\n    \n\n    instance(x: -80, y: 192) first_repeated_char_f5f8a9 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -242, y: 0, name: \"string\") property(String) input_5a9f3d\n\n        out(x: 533, y: -2, name: \"output\") property(Any) output_b97e4c\n\n        instance(x: 43, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 269, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_5a9f3d -> tolower_2e1444.input\n        contains_d42dce.result -> output_b97e4c\n    }\n\n    \n\n    instance(x: 65, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -342, y: 0, name: \"string\") property(String) input_5d2f4a\n\n        out(x: 1039, y: 26, name: \"output\") property(String) output_a8c98e\n\n        instance(x: 63, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 278, y: -15, name: \"map_3f2d9a\") map_3f2d9a root.Std_k98ojb.Iteration.Map {}\n        instance(x: 102, y: 64) count_4c6a8e root.Std_k98ojb.Std.Count {}\n        instance(x: -59, y: 39, name: \"filter_6f1e43\") filter_6f1e43 root.Std_k98ojb.Iteration.Filter {}\n        tolower_2e1444.output -> map_3f2d9a.input\n        input_5d2f4a -> tolower_2e1444.input\n        map_3f2d9a.result -> filter_6f1e43.items\n        count_4c6a8e.reset -> filter_6f1e43.trigger\n        0 -> count_4c6a8e.new_value\n        filter_6f1e43.done -> output_a8c98e\n        map_3f2d9a.item -> filter_6f1e43.predicate\n    }\n\n    \n\n    instance(x: -191, y: 186) first_repeated_char_5bf0b4 root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -243, y: 17, name: \"list\") property(List) list_a8f6d4\n\n        out(x: 313, y: 26, name: \"second_min\") property(Number) second_min_7e3d5b\n\n        instance(x: 0, y: 0) first_smallest_node root.Std_k98ojb.List.Min {}\n        instance(x: -142, y: 45) second_smallest_node root.Std_k98ojb.List.Min {}\n        list_a8f6d4 -> first_smallest_node.items\n        list_a8f6d4 -> second_smallest_node.items\n\n        instance(x: 0, y: 0) ifexpression_5c9e0a root.Std_k98ojb.Std.IfExpression {\n            expression: \"first_smallest < second_smallest\"\n        }\n        first_smallest_node.min -> Std_k98ojb.Count.reset\n        second_smallest_node.min -> Std_k98ojb.Count.reset\n        first_smallest_node.min -> Std_k98ojb.Count.increment\n        second_smallest_node.min -> Std_k98ojb.Count.increment\n        ifexpression_5c9e0a.then -> second_smallest_node.min\n        list_a8f6d4 -> first_smallest_node.result\n        list_a8f6d4 -> second_smallest_node.result\n        first_smallest_node.min -> second_min_7e3d5b\n    }\n\n    \n\n    instance(x: -59, y: 121) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -281, y: 2, name: \"list\") property(List) list_4e8d9f\n\n        out(x: 293, y: -1, name: \"second_min\") property(Number) second_min_7a3c23\n\n        instance(x: 0, y: 0) first_smallest_node root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) second_smallest_node root.Std_k98ojb.List.Min {}\n\n        list_4e8d9f -> first_smallest_node.items\n        first_smallest_node.min -> smallest_node_1eb7a2\n\n        data_instance(x: -108, y: 20) data_6f2c43 = [smallest_node_1eb7a2, list_4e8d9f]\n        instance(x: 0, y: 0) ifexpression_5b3df1 root.Std_k98ojb.Std.IfExpression {}\n        getter(x: -114, y: 13, name: \"getter_6c25f1\") getter_6c25f1 = second_smallest_node.min\n        setter(x: 119, y: -9, name: \"setter_4d3a2e\") setter_4d3a2e = second_smallest_node.min\n        ifexpression_5b3df1.expression -> \"it == smallest_node_1eb7a2\"\n        data_6f2c43.a -> ifexpression_5b3df1.gen_0\n        list_4e8d9f -> ifexpression_5b3df1.gen_1\n        getter_6c25f1.value -> second_smallest_node.min\n        ifexpression_5b3df1.then -> setter_4d3a2e.execute\n        smallest_node_1eb7a2 -> setter_4d3a2e.new_value\n        list_4e8d9f -> setter_4d3a2e.new_value\n        ifexpression_5b3df1.else -> setter_4d3a2e.execute\n    }\n\n    \n\n    instance(x: -33, y: 139) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -274, y: 0, name: \"list\") property(List) list_6d1b47\n\n        out(x: 512, y: 84, name: \"second_min\") property(Number) second_min_a2a8f3\n\n        instance(x: 0, y: 0) first_smallest_node root.Std_k98ojb.List.Min {}\n        instance(x: -442, y: 33) second_smallest_node root.Std_k98ojb.List.Min {}\n        list_6d1b47 -> first_smallest_node.items\n        list_6d1b47 -> second_smallest_node.items\n\n        data_instance(x: -115, y: 24) data_9f8f28  = [first_smallest_node.min, second_smallest_node.min]\n        instance(x: -334, y: 64) comparison_7c5e2d root.Std_k98ojb.Logic.GreaterThan {}\n        first_smallest_node.min -> comparison_7c5e2d.left\n        second_smallest_node.min -> comparison_7c5e2d.right\n\n        data_9f8f28[0] -> comparison_7c5e2d.result\n        if(comparison_7c5e2d.result) {\n            first_smallest_node.continue -> second_smallest_node.execute\n            second_smallest_node.min -> second_min_a2a8f3\n        } else {\n            second_smallest_node.continue -> comparison_7c5e2d.execute\n        }\n    }\n\n    \n\n    instance(x: 0, y: 118) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -248, y: 1, name: \"list\") property(List) list_ae9f5d\n\n        out(x: 0, y: 255, name: \"second_min\") property(Number) second_min_8b3d25\n\n        instance(x: 0, y: 1) min_node root.Std_k98ojb.List.Min {}\n        instance(x: -247, y: 2) second_min_node root.Std_k98ojb.List.Min {}\n        list_ae9f5d -> min_node.items\n        list_ae9f5d -> second_min_node.items\n\n        instance(x: 0, y: 3) ifexpression_57c8bf root.Std_k98ojb.Std.IfExpression {\n            expression: \"min == a\"\n        }\n        getter(x: -242, y: 7, name: \"getter_2f6a14\") getter_2f6a14 = second_min\n        setter(x: 0, y: 9, name: \"setter_e8d8e1\") setter_e8d8e1 = second_min\n        min_node.min -> ifexpression_57c8bf.gen_0\n        second_min_node.min -> ifexpression_57c8bf.gen_1\n        getter_2f6a14.value -> second_min_8b3d25\n        ifexpression_57c8bf.then -> setter_e8d8e1.execute\n        min_node -> setter_e8d8e1.new_value\n        list_ae9f5d -> setter_e8d8e1.items\n        ifexpression_57c8bf.else -> second_min_node.execute\n    }\n\n    \n\n    instance(x: 0, y: 124) second_smallest_f3b4af root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -108, y: 2, name: \"list\") property(List) list_6fde15\n\n        out(x: -109, y: 1, name: \"second_min\") property(Number) second_min_4e38c9\n        instance(x: 0, y: 0) first_smallest_8b7a5d root.Std_k98ojb.List.Min {}\n        list_6fde15 -> first_smallest_8b7a5d.items\n        first_smallest_8b7a5d.min -> second_min_4e38c9\n\n        instance(x: 0, y: 0) second_smallest_node root.main.second_smallest {}\n\n    }\n    \n\n    instance(x: -44, y: 528) second_smallest_6f1df3 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -213, y: 2, name: \"list\") property(List) list_4d8f32\n\n        out(x: -193, y: 1, name: \"min\") property(Number) min_0e8a7c\n        out(x: -189, y: 1, name: \"second_min\") property(Number) second_min_a2bcb9\n\n        instance(x: 341, y: 75) list_min_node root.Std_k98ojb.List.Min {}\n        list_4d8f32 -> list_min_node.items\n        list_min_node.min -> min_0e8a7c\n        data_instance(x: -114, y: 23) second_smallest_node root.Std_k98ojb.Std.IfExpression {}\n        instance(x: -234, y: 59) find_9f1d35 root.Std_k98ojb.Iteration.Find {}\n        list_min_node.min -> find_9f1d35.item\n        find_9f1d35.item -> second_smallest_node.handler\n        second_smallest_node.output_list[0] -> second_min_a2bcb9\n        Std.CallFunction(root.Std_k98ojb.Math.Min) {\n            input: [min_0e8a7c, second_min_a2bcb9]\n        } -> second_smallest_node.handler\n    }\n\n    \n\n    instance(x: -44, y: 522) second_smallest_4f3d65 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -103, y: 14, name: \"list\") property(List) list_9e3a66\n\n        out(x: 246, y: -1, name: \"number\") property(Number) number_0d9b6c\n\n        instance(x: 439, y: 32) sort_8f7b35 root.Std_k98ojb.List.Sort {}\n        instance(x: 103, y: 15) min_2d5e4a root.Std_k98ojb.Math.Min {}\n        list_9e3a66 -> sort_8f7b35.items\n        sort_8f7b35.sorted_list -> min_2d5e4a.values\n        min_2d5e4a.min -> number_0d9b6c\n    }\n\n    \n\n    instance(x: 78, y: 529) second_smallest_f1c87 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -113, y: 2, name: \"list\") property(List) list_5d3f1a\n\n        out(x: 0, y: 2, name: \"second_min\") property(Number) second_min_eb8c8e\n        instance(x: 118, y: 19) min_node root.Std_k98ojb.List.Min {}\n        instance(x: -456, y: 25) second_node root.Std_k98ojb.List.Max {}\n        list_5d3f1a -> min_node.items\n        list_5d3f1a -> second_node.items\n        min_node.min -> second_min_eb8c8e\n    }\n\n    \n\n    instance(x: -38, y: 528) second_smallest_96e7ca root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -248, y: 23, name: \"list\") property(List) list_abed4a\n\n        out(x: 530, y: 1, name: \"number\") property(Number) number_3bc2ae\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min2_1c6d3b root.Std_k98ojb.Math.Min2 {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            min2_1c6d3b.left -> notequal_807ffd.left\n            min2_1c6d3b.right -> elem_9f6850\n            1 -> min2_1c6d3b.first\n            elem_9f6850 -> min2_1c6d3b.second\n            bool_af09a7.result -> number_3bc2ae\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_c9f1c5 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -102, y: 5, name: \"list\") property(List) list_1d6e4f\n\n        out(x: -106, y: 45, name: \"min\") property(Number) min_5a9c43\n        out(x: -104, y: 54, name: \"second_min\") property(Number) second_min_2b8f3b\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -115, y: 11, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 509, y: 12, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: 35) min_8d6c45 root.Std_k98ojb.Math.Min {}\n            instance(x: 512, y: -114, name: \"second_min_node\") second_min_node root.Std_k98ojb.List.SortOn {}\n            0 -> notequal_807ffd.right\n            notequal_807ffd.left -> min_8d6c45.values\n            min_8d6c45.result -> min_5a9c43\n            elem_9f6850 -> second_min_node.items\n            second_min_node.key -> \"value\"\n            1 -> second_min_node.right\n            second_min_node.sorted_list -> second_min_node.sorted_list\n            second_min_node.sorted_list[0] -> second_min_2b8f3b\n        } -> find_6d05b0.predicate\n        list_1d6e4f -> find_6d05b0.items\n        find_6d05b0.item -> second_min_2b8f3b\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_RAG_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 15910,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -505, y: 59, name: \"list1\") property(List) list_2e3f6d\n        in(x: -513, y: -230, name: \"list2\") property(List) list_b5b8a4\n\n        out(x: 1069, y: 19, name: \"output\") property(Bool) output_f1c43c\n\n        instance(x: 744, y: 100) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -69, y: 23) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -26, y: -16, name: \"current\") property(Number) _index_8e5f3d\n            in(x: -13, y: 80, name: \"_index\") property(Number) _index_9a55eb\n\n            out(x: 1152, y: 28, name: \"output\") property(Bool) output_e7b4f1\n\n            instance(x: 262, y: 77) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n            instance(x: -104, y: 66) not_75283f.root = contains_32727d\n            instance(x: 292, y: 75) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n                expression: \"not_75283f.result\"\n            }\n            instance(x: -33, y: 89) contains_32727d.item -> map_c73e3b.handler\n            list_b5b8a4 -> map_c73e3b.items\n            map_c73e3b.output_list -> ifexpression_875761.gen_0\n            map_c73e3b.output_list -> not_75283f.input\n            not_75283f.result -> output_e7b4f1\n        } -> contains_32727d.execute\n        list_b5b8a4 -> contains_32727d.list\n        0 -> contains_32727d.index\n        contains_32727d.is_contained -> output_f1c43c\n    }\n\n    \n\n    instance(x: -11, y: 65) has_common_element_d3e6b2 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -430, y: 49, name: \"list1\") property(List) list_9f8d3b\n        in(x: -449, y: -233, name: \"list2\") property(List) list_ea4e7c\n\n        out(x: 1090, y: 5, name: \"output\") property(Bool) output_f87e43\n\n        instance(x: 1013, y: 51) intersection_94f1b6 root.Std_k98ojb.Sets.Intersection {}\n        list_ea4e7c -> intersection_94f1b6.left\n        list_9f8d3b -> intersection_94f1b6.right\n        instance(x: -146, y: 23) not_equal_93a0f5 root.Std_k98ojb.Logic.NotEqual {}\n        list_ea4e7c -> not_equal_93a0f5.left\n        list_9f8d3b -> not_equal_93a0f5.right\n        not_equal_93a0f5.result -> output_f87e43\n    }\n\n    \n\n    instance(x: -83, y: 73) has_common_element_c2f6c7 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -449, y: 29, name: \"list1\") property(List) list_2f5d4b\n        in(x: -451, y: 28, name: \"list2\") property(List) list_0a6e22\n\n        out(x: 1149, y: -221, name: \"output\") property(Bool) output_e4c3cd\n\n        instance(x: 278, y: 97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1015, y: -219) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1078, y: -215) not_75283f root.Std_k98ojb.Logic.Not {}\n        list_2f5d4b -> intersection_c7c7e6.left\n        list_0a6e22 -> intersection_c7c7e6.right\n        contains_32727d.item -> not_75283f.input\n        not_75283f.result -> output_e4c3cd\n        intersection_c7c7e6.intersection -> contains_32727d.list\n    }\n\n    \n\n    instance(x: 16, y: -176) has_common_element_3b5a0a root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -146, y: 58, name: \"list1\") property(List) list_95a3d0\n        in(x: -178, y: -30, name: \"list2\") property(List) list_5f8c7b\n\n        out(x: 1159, y: 4, name: \"output\") property(Bool) output_e5c0e6\n\n        instance(x: 248, y: 56) contains_c3d8a1 root.Std_k98ojb.List.Contains {}\n        list_95a3d0 -> contains_c3d8a1.left\n        list_5f8c7b -> contains_c3d8a1.right\n        contains_c3d8a1.is_contained -> output_e5c0e6\n    }\n\n    \n\n    instance(x: -141, y: 57) has_common_element_4e2a3 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -538, y: 58, name: \"list1\") property(List) list_0d2e6b\n        in(x: -547, y: 19, name: \"list2\") property(List) list_c9f7c4\n\n        out(x: 1028, y: -112, name: \"output\") property(Bool) output_3a99f5\n\n        instance(x: 242, y: 84) filter_d1dce0 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1007, y: -122) contains_e42c6e root.Std_k98ojb.List.Contains {}\n        data_instance(x: -1069, y: 34) data_8f2a2a  = [list1, list2]\n        instance(x: 442, y: -101) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1004, y: -108) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -24, y: 65, name: \"current\") property(Number) _index_170471\n            in(x: -28, y: 78, name: \"_index\") property(Number) _index_769593\n\n            out(x: 720, y: 35, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 236, y: 74) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 455, y: 70) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            list1 -> modulo_c76d2b.value\n            list2 -> modulo_c76d2b.divisor\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_d1dce0.handler\n        list_c9f7c4 -> filter_d1dce0.items\n        func() {\n            in(x: -195, y: 40, name: \"current\") property(Number) current_81298e\n\n            out(x: 517, y: -52, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: 47) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -49) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            list1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_d1dce0.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_e42c6e.list\n        false -> contains_e42c6e.item\n        not_75283f.result -> output_efbc78\n        contains_e42c6e.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: 7) has_common_element_5a4b66 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -484, y: 36, name: \"list1\") property(List) list_8a2d5f\n        in(x: -496, y: -231, name: \"list2\") property(List) list_c6b0e4\n\n        out(x: 1087, y: -213, name: \"output\") property(Bool) output_1c3cd5\n\n        instance(x: 255, y: 49) intersection_fef8d9 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 342, y: -215) contains_c4f7e6 root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -20, name: \"current\") property(Number) _index_1a9d0c\n            in(x: -23, y: 80, name: \"_index\") property(Number) _index_b4f8e2\n\n            out(x: 513, y: -27, name: \"output\") property(Bool) output_f6b2ab\n\n            instance(x: 226, y: 51) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 46) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_f6b2ab\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_b4f8e2 -> modulo_c76d2b.value\n        } -> intersection_fef8d9.handler\n        list_8a2d5f -> intersection_fef8d9.items\n        list_c6b0e4 -> intersection_fef8d9.right\n        intersection_fef8d9.intersect -> contains_c4f7e6.list\n        false -> contains_c4f7e6.item\n        not_75283f.result -> output_f6b2ab\n        contains_c4f7e6.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -294, y: 54) has_common_element_d5c9f3 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -528, y: 47, name: \"list1\") property(List) list_5e4a3d\n        in(x: -504, y: -229, name: \"list2\") property(List) list_b6f0c7\n\n        out(x: 1219, y: 20, name: \"output\") property(Bool) output_a2b8d1\n\n        instance(x: 104, y: 55) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -189, y: 22) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 341, y: 56) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_b6f0c7 -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_b6f0c7 -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_a2b8d1\n        intersection_c7c7e6.intersection -> has_common_element.output_list\n    }\n\n    \n\n    instance(x: -86, y: 54) has_common_element_3a66f4 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -446, y: 22, name: \"list1\") property(List) list_6a3d0b\n        in(x: -464, y: 34, name: \"list2\") property(List) list_e9e7f8\n\n        out(x: 1245, y: 11, name: \"output\") property(Bool) output_5dfdd4\n\n        instance(x: 342, y: 49) contains_c1d35b root.Std_k98ojb.List.Contains {}\n        instance(x: -17, y: 61) orElse_7f0e85 root.Std_k98ojb Std.OrElse {}\n        list_e9e7f8 -> contains_c1d35b.left\n        list_6a3d0b -> contains_c1d35b.right\n        contains_c1d35b.is_contained -> orElse_7f0e85.first\n        null -> orElse_7f0e85.second\n        orElse_7f0e85.value -> output_5dfdd4\n    }\n\n    \n\n    instance(x: 15, y: -143) has_common_element_6d2c9a root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -490, y: 63, name: \"list1\") property(List) list_11d0a6\n        in(x: -509, y: -216, name: \"list2\") property(List) list_3b7e5f\n\n        out(x: 1038, y: -219, name: \"output\") property(Bool) output_b9c6eb\n\n        instance(x: 271, y: 75) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 743, y: -224) list_not_empty_c8f2a1 root.Std_k98ojb.List.NotEmpty {}\n        instance(x: 143, y: -215) filter_d0e5c9 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1034, y: -206) map_2d2c3d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 275, y: -214) not_equal_ea45f1 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 1049, y: -201) contains_32727d_1 root.Std_k98ojb.List.Contains {}\n\n        list_not_empty_c8f2a1.list -> filter_d0e5c9.items\n        filter_d0e5c9.output_list -> map_2d2c3d.items\n        map_2d2c3d.handler -> not_equal_ea45f1\n        0 -> not_equal_ea45f1.left\n        list_11d0a6 -> contains_32727d.input\n        list_3b7e5f -> contains_32727d_1.input\n        false -> contains_32727d.is_contained\n        true -> contains_32727d_1.is_contained\n        not_equal_ea45f1.result -> output_b9c6eb\n        contains_32727d.result -> output_b9c6eb\n    }\n\n    \n\n    instance(x: 93, y: -188) has_common_element_4b3e95 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -495, y: 30, name: \"list1\") property(List) list_0a9e8d\n        in(x: -501, y: -18, name: \"list2\") property(List) list_7c3b95\n\n        out(x: 1275, y: -21, name: \"output\") property(Bool) output_e1f4ec\n\n        instance(x: 744, y: 78) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1033, y: -33) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1299, y: -22) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -26, y: -20, name: \"current\") property(Number) _index_170471\n            in(x: -24, y: 58, name: \"_index\") property(Number) _index_769593\n\n            out(x: 555, y: -28, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 244, y: 57) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 464, y: 52) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            0 -> modulo_c76d2b.divisor\n            list_7c3b95 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> intersection_c7c7e6.handler\n        list_0a9e8d -> intersection_c7c7e6.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            0 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            list_7c3b95 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_32727d.handler\n        list_0a9e8d -> contains_32727d.list\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            list_0a9e8d -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_32727d.handler\n        list_7c3b95 -> contains_32727d.list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            list_0a9e8d -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        contains_32727d.output_list -> map_c73e3b.items\n        false -> output_e1f4ec\n    }\n\n    \n\n    instance(x: -295, y: 6) has_common_element_ba0c9 root.main.has_common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -525, y: 11, name: \"list\") property(List) list_9f8d5a\n\n        out(x: 1003, y: 54, name: \"output\") property(Bool) output_2e21c1\n\n        instance(x: -342, y: 56) ifexpression_e0b8d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index + 1 == current\"\n        }\n        getter(x: 118, y: 43) previous_5a1f89 list_9f8d5a\n        setter(x: -15, y: 53, name: \"setter_3c0a83\") setter_3c0a83 = previous_\n        instance(x: -270, y: 40) for_d4e6b7 root.Std_k98ojb.Std.For {}\n        setter(x: -24, y: 59) next_8d15b1 list_9f8d5a\n        instance(x: -269, y: 47) count_0c66bf root.Std_k98ojb.Std.Count {}\n        for_d4e6b7.trigger -> setter_3c0a83.execute\n        for_d4e6b7.index -> next_8d15b1.new_value\n        list_9f8d5a -> for_d4e6b7.items\n        0 -> count_0c66bf.reset\n        count_0c66bf.count -> for_d4e6b7.next\n        previous_5a1f89.value -> ifexpression_e0b8d4.gen_2\n        for_d4e6b7.item -> ifexpression_e0b8d4.execute\n        ifexpression_e0b8d4.then -> output_2e21c1\n        count_0c66bf.count -> ifexpression_e0b8d4.value\n        1 -> ifexpression_e0b8d4.gen_0\n        ifexpression_e0b8d4.value -> output_2e21c1\n    }\n\n    \n\n    instance(x: -40, y: 63) consecutive root.main.Consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -533, y: 3, name: \"list\") property(List) list_5d2a83\n\n        out(x: 1131, y: 7, name: \"output\") property(Bool) output_8e1b9c\n\n        instance(x: -317, y: 59) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: -48, y: 51) greaterthan_2aeb4d root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1067, y: 57) lessThanOrEqual_8e9a60 root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_5d2a83 -> length_8166b0.list\n        length_8166b0.length -> greaterthan_2aeb4d.left\n        greaterthan_2aeb4d.right -> lessThanOrEqual_8e9a60.left\n        lessThanOrEqual_8e9a60.right -> lessThanOrEqual_8e9a60.right\n        greaterthan_2aeb4d.result -> output_8e1b9c\n    }\n\n    \n\n    instance(x: -35, y: 101) Consecutive_9e15f7 root.main.Consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -522, y: 3, name: \"list\") property(List) list_4d2c8a\n\n        out(x: 1019, y: -23, name: \"output\") property(Bool) output_9f5b74\n\n        instance(x: -285, y: -35) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -278, y: -30) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 1013, y: -24) less_than_8d1f70 root.Std_k98ojb.Math.LessThan {}\n        instance(x: 1006, y: -28) greater_than_77c9e4 root.Std_k98ojb.Math.GreaterThan {}\n        list_4d2c8a -> for_d26972.items\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> less_than_8d1f70.left\n        getat_ce2a48.itemAtIndex + 1 -> greater_than_77c9e4.right\n        less_than_8d1f70.result -> output_9f5b74\n        greater_than_77c9e4.result -> output_9f5b74\n    }\n\n    \n\n    instance(x: -62, y: 115) is_consecutive_fdb6a0 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -499, y: 4, name: \"list\") property(List) list_5a88d9\n\n        out(x: 1238, y: 6, name: \"output\") property(Bool) output_3e1f74\n\n        instance(x: -93, y: 21) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -45, y: 33) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: -31, y: 37) less_than_6d0e5f root.Std_k98ojb.Math.LessThan {}\n        instance(x: -28, y: 41) next_d1c7a4 root.Std_k98ojb.Std.For.Next {}\n        instance(x: -22, y: 45) next_d1c7a4 root.Std_k98ojb.Std.For.Next {}\n        instance(x: -18, y: 49) less_than_6d0e5f root.Std_k98ojb.Math.LessThan {}\n        instance(x: -13, y: 53) next_d1c7a4 root.Std_k98ojb.Std.For.Next {}\n        instance(x: -9, y: 57) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: -5, y: 61) less_than_6d0e5f root.Std_k98ojb.Math.LessThan {}\n        list_5a88d9 -> for_d26972.items\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> less_than_6d0e5f.left\n        less_than_6d0e5f.result -> next_d1c7a4.left\n        next_d1c7a4.next -> less_than_6d0e5f.right\n        for_d26972.onItem -> is_consecutive.is_consecutive\n    }\n\n    \n\n    instance(x: -46, y: 84) is_consecutive_9b3f55 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -530, y: 2, name: \"list\") property(List) list_6a85d4\n\n        out(x: 1213, y: 5, name: \"output\") property(Bool) output_9f1b0e\n\n        instance(x: 764, y: 94) isLessThanOrEqual_c2ca55 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -44, y: 103) getat_d7c5eb root.Std_k98ojb.List.GetAt {}\n        instance(x: -58, y: 114) sub_4e6a11 root.Std_k98ojb.Math.Sub {}\n        instance(x: 111, y: 109) greaterthan_e1fdd2 root.Std_k98ojb.Math.GreaterThan {}\n        list_6a85d4 -> getat_d7c5eb.list\n        0 -> getat_d7c5eb.index\n        getat_d7c5eb.itemAtIndex -> sub_4e6a11.first\n        sub_4e6a11.result -> isLessThanOrEqual_c2ca55.left\n        getat_d7c5eb.itemAtIndex + 1 -> isLessThanOrEqual_c2ca55.right\n        isLessThanOrEqual_c2ca55.result -> greaterthan_e1fdd2.left\n        greaterthan_e1fdd2.right -> output_9f1b0e\n    }\n\n    \n\n    instance(x: -34, y: 138) Consecutive_d4c3d8 root.main.Consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -529, y: 1, name: \"list\") property(List) list_3f5a2b\n\n        out(x: 1008, y: 27, name: \"output\") property(Bool) output_e0d41e\n\n        instance(x: -23, y: 49) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 108, y: 52) greater_than_5c7f8a root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 135, y: 56) less_than_6e9d41 root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_3f5a2b -> for_d26972.items\n        for_d26972.index -> greater_than_5c7f8a.left\n        for_d26972.item -> greater_than_5c7f8a.right\n        greater_than_5c7f8a.result -> less_than_6e9d41.left\n        1 -> less_than_6e9d41.right\n        less_than_6e9d41.result -> output_e0d41e\n    }\n\n    \n\n    instance(x: -21, y: 91) is_consecutive_8c6f5b root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -565, y: 22, name: \"list\") property(List) list_4f8d88\n\n        out(x: 1029, y: -21, name: \"output\") property(Bool) output_7e4c6b\n\n        instance(x: 754, y: 84) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -294, y: 95) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 105, y: 90) greaterthan_83f8d9 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 121, y: 85) lessThanOrEqual_3c8694 root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_4f8d88 -> for_d26972.items\n        for_d26972.index -> getat_ce2a48.index\n        greaterthan_83f8d9.left -> getat_ce2a48.itemAtIndex\n        lessThanOrEqual_3c8694.right -> getat_ce2a48.itemAtIndex\n        getat_ce2a48.itemAtIndex - 1 -> for_d26972.next\n        ifexpression_5b0d42 root.Std_k98ojb.Std.IfExpression {\n            expression: \"left == right + 1\"\n        }\n        instance(x: 123, y: 75) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: -43, y: 94) output_7e4c6b -> not_75283f.input\n        for_d26972.onItem -> ifexpression_5b0d42.execute\n        for_d26972.done -> not_75283f.continue\n    }\n\n    \n\n    instance(x: -53, y: -21) is_consecutive_9a3e2c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -522, y: 4, name: \"list\") property(List) list_6d9f8a\n\n        out(x: 1245, y: -23, name: \"output\") property(Bool) output_56c2e3\n\n        instance(x: -93, y: -97) sort_on_1b4cd7 root.Std_k98ojb.List.SortOn {}\n        instance(x: -91, y: 55, name: \"previous\") getat_c36fdd root.Std_k98ojb.List.GetAt {}\n        instance(x: -90, y: 57, name: \"index\") for_4c0d4a root.Std_k98ojb.Std.For {}\n        instance(x: -89, y: 51) less_than_8e5d5f root.Std_k98ojb.Math.LessThan {}\n        list_6d9f8a -> sort_on_1b4cd7.list\n        for_4c0d4a.item -> sort_on_1b4cd7.key\n        previous.value -> less_than_8e5d5f.left\n        index.value -> less_than_8e5f1\n        less_than_8e5d5f.result -> output_56c2e3\n    }\n\n    \n\n    instance(x: -34, y: 130) is_consecutive_58a4e9 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -525, y: 2, name: \"list\") property(List) list_6f8a4d\n\n        out(x: 1225, y: 21, name: \"output\") property(Bool) output_3b0c9e\n\n        instance(x: -294, y: 39) for_d2b0e1 root.Std_k98ojb.Std.For {}\n        instance(x: -31, y: 56) greaterthan_e5a7f4 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -32, y: 57) ifexpression_86d3b8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index + 1 == current\"\n        }\n        instance(x: -33, y: 58) lessThanOrEqual_f2e4f6 root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_6f8a4d -> for_d2b0e1.items\n        for_d2b0e1.item -> greaterthan_e5a7f4.left\n        greaterthan_e5a7f4.right -> ifexpression_86d3b8.current\n        ifexpression_86d3b8.value -> lessThanOrEqual_f2e4f6.left\n        1 -> lessThanOrEqual_f2e4f6.right\n        lessThanOrEqual_f2e4f6.result -> output_3b0c9e\n    }\n\n    \n\n    instance(x: -41, y: 69) consecutive_root root.main.Consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -528, y: 21, name: \"list\") property(List) list_1e5d43\n\n        out(x: 1120, y: 6, name: \"output\") property(Bool) output_ea0c9f\n\n        instance(x: -305, y: 54, name: \"is_consecutive\") for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -292, y: 43) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -288, y: 47) greater_than_6a4e2f root.Std_k98ojb.Math.GreaterThan {}\n        list_1e5d43 -> for_d26972.items\n        for_d26972.index -> contains_32727d.index\n        for_d26972.item -> greater_than_6a4e2f.left\n        greater_than_6a4e2f.right -> for_d26972.next\n        0 -> greater_than_6a4e2f.value\n        1 -> greater_than_6a4e2f.value\n        greater_than_6a4e2f.result -> is_consecutive.input\n    }\n\n    \n\n    instance(x: -33, y: 130) is_consecutive_9d56b3 root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -530, y: 46, name: \"main_list\") property(List) list_9a2f6d\n        in(x: -541, y: -31, name: \"sublist\") property(List) sublist_3e77b5\n\n        out(x: 1037, y: -44, name: \"output\") property(Bool) output_e7c0ad\n\n        instance(x: -313, y: -35) contains_c2f1d4 root.Std_k98ojb.List.Contains {}\n        sublist_3e77b5 -> contains_c2f1d4.item\n        list_9a2f6d -> contains_c2f1d4.list\n        contains_c2f1d4.is_contained -> output_e7c0ad\n    }\n\n    \n\n    instance(x: -66, y: 47) is_sublist_f89e4b root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -495, y: 342, name: \"main_list\") property(List) list_0f8d3b\n        in(x: -499, y: 38, name: \"sublist\") property(List) list_5c6a41\n\n        out(x: 1229, y: 42, name: \"output\") property(Bool) output_b7e98d\n\n        instance(x: -306, y: 29) for_loop_3d5b65 root.Std_k98ojb.Std.For {}\n        list_0f8d3b -> for_loop_3d5b65.items\n        sublist_5c6a41 -> for_loop_3d5b65.items\n        for_loop_3d5b65.on_item -> is_sublist.sublist\n        for_loop_3d5b65.done -> is_sublist.output\n    }\n\n    \n\n    instance(x: -193, y: 7) is_sublist_d2f3e1 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -479, y: 31, name: \"main_list\") property(List) list_9f2d5b\n        in(x: -470, y: -13, name: \"sublist_list\") property(List) list_c8c8e4\n\n        out(x: 1113, y: -95, name: \"output\") property(Bool) output_e5a6c9\n\n        instance(x: -326, y: -93) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_c8c8e4 -> contains_32727d.item\n        list_9f2d5b -> contains_32727d.list\n        contains_32727d.is_contained -> output_e5a6c9\n    }\n\n    \n\n    instance(x: -278, y: 58) is_sublist_7df3ec root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -273, y: 59, name: \"main_list\") property(List) list_58f2d1\n        in(x: -270, y: -44, name: \"sublist_list\") property(List) list_5a3bfc\n\n        out(x: 1238, y: -42, name: \"output\") property(Bool) output_e85e9c\n\n        instance(x: -219, y: -45) contains_32727d root.Std_k98ojb.List.Contains {}\n        sublist_list -> contains_32727d.item\n        list_58f2d1 -> contains_32727d.list\n        contains_32727d.is_contained -> output_e85e9c\n    }\n\n    \n\n    instance(x: -194, y: 18) is_sublist_8f5a3b root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -463, y: 446, name: \"main_list\") property(List) list_5f0e1b\n        in(x: -471, y: -23, name: \"sub_list\") property(List) list_8d7c74\n\n        out(x: 1134, y: -99, name: \"output\") property(Bool) output_e2df6a\n\n        instance(x: -244, y: -128) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list_5f0e1b -> zip_201051.left\n        list_8d7c74 -> zip_20151.right\n        func() {\n            in(x: -323, y: 53, name: \"item\") property(Number) item_96bfb9\n\n            out(x: 1005, y: -106, name: \"index\") property(Number) index_e48f1d\n\n            instance(x: -16, y: -105) contains_c7c4c8 root.Std_k98ojb.List.Contains {}\n            list_8d7c74 -> contains_c7c4c8.item\n            list_5f0e1b -> contains_c7c4c8.index\n            item_96bfb9 -> contains_c7c4c8.value\n            0 -> contains_c7c4c8.start\n            index_e48f1d -> contains_c7c4c8.end\n            contains_c7c4c8.is_contained -> output_e2df6a\n        } -> zip_201051.handler\n        list_5f0e1b -> zip_20151.items\n        list_8d7c74 -> zip_20151.items\n    }\n\n    \n\n    instance(x: -193, y: 33) is_sublist_f9e9b6 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -527, y: 22, name: \"main_list\") property(List) list_3a2f1b\n        in(x: -534, y: 49, name: \"sublist_list\") property(List) list_0c6d85\n\n        out(x: 1135, y: 43, name: \"output\") property(Bool) output_e4e5bb\n\n        instance(x: -318, y: -209) for_loop_7f1aeb root.Std_k98ojb.Std.For {}\n        list_3a2f1b -> for_loop_7f1aeb.items\n        list_0c6d85 -> for_loop_7f1aeb.items\n        func() {\n            in(x: -462, y: 44, name: \"i\") property(Number) _index_11e33f\n\n            out(x: 1239, y: -213, name: \"output\") property(Bool) output_a8d7b1\n\n            instance(x: -83, y: -201) contains_item_4aef2c root.Std_k98ojb.List.Contains {}\n            list_0c6d85 -> contains_item_4aef2c.item\n            for_loop_7f1aeb.index -> contains_item_4aef2c.index\n            contains_item_4aef2c.is_contained -> output_a8d7b1\n        } -> for_loop_7f1aeb.handler\n        list_3a2f1b -> is_sublist_list\n        list_0c6d85 -> is_sublist_list\n        for_loop_7f1aeb.done -> output_e4e5bb\n    }\n\n    \n\n    instance(x: -67, y: 39) is_sublist_b77cd9 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -394, y: 59, name: \"main_list\") property(List) list_5e9a3d\n        in(x: -421, y: -28, name: \"sub_list\") property(List) sub_list_8fdd2b\n\n        out(x: 1244, y: 42, name: \"output\") property(Bool) output_b0c6eb\n\n        instance(x: -93, y: 62) contains_f1a3b9 root.Std_k98ojb.List.Contains {}\n        list_5e9a3d -> contains_f1a3b9.list\n        sub_list_8fdd2b -> contains_f1a3b9.item\n        output_b0c6eb -> contains_f1a3b9.is_contained\n    }\n\n    \n\n    instance(x: -69, y: 19) is_sublist_c5d8df root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -444, y: 35, name: \"main_list\") property(List) list_9f8d3a\n        in(x: -451, y: -24, name: \"sublist_list\") property(List) list_a7c71b\n\n        out(x: 1131, y: -28, name: \"output\") property(Bool) output_b7db4e\n\n        instance(x: -94, y: -31) for_loop_9a8d6f root.Std_k98ojb.Std.For {}\n        list_a7c71b -> for_loop_9a8d6f.items\n        for_loop_9a8d6f.index -> list_9f8d3a\n        func() {\n            in(x: -219, y: 39, name: \"current_item\") property(Number) current_item_2c2e0b\n\n            out(x: 1055, y: -43, name: \"output\") property(Bool) output_85f1df\n\n            instance(x: 246, y: -46) contains_list_7d6a36 root.Std_k98ojb.List.Contains {}\n            list_a7c71b -> contains_list_7d6a36.item\n            current_item_2c2e0b -> contains_list_7d6a36.value\n            contains_list_7d6a36.is_contained -> output_85f1df\n        } -> for_loop_9a8d6f.onItem\n    }\n\n    \n\n    instance(x: -64, y: 43) is_sublist_b4a3c2 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -295, y: 45, name: \"main_list\") property(List) list_9d6e15\n        in(x: -303, y: -13, name: \"sublist_list\") property(List) list_b2a3c5\n\n        out(x: 1181, y: -98, name: \"output\") property(Bool) output_eb4f8b\n\n        instance(x: -14, y: -111) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_b2a3c5 -> contains_32727d.item\n        list_9d6e15 -> contains_32727d.list\n        false -> contains_32727d.is_contained\n        true -> output_eb4f8b\n    }\n\n    \n\n    instance(x: -91, y: 52) is_sublist_b1a5c7 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -495, y: 439, name: \"main_list\") property(List) list_5a0e2d\n        in(x: -496, y: 46, name: \"sublist\") property(List) list_7b8f3c\n\n        out(x: 1239, y: -108, name: \"output\") property(Bool) output_8c6df1\n\n        instance(x: -299, y: 54) contains_c0d4e2 root.Std_k98ojb.List.Contains {}\n        list_5a0e2d -> contains_c0d4e2.list\n        sublist_7b8f3c -> contains_c0d4e2.item\n        contains_c0d4e2.is_contained -> output_8c6df1\n    }\n\n    \n\n    instance(x: -287, y: 23) is_sublist_b5dd66 root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -528, y: 2, name: \"list\") property(List) list_ai\n        out(x: 1, y: 0, name: \"smallest_missing\") property(Number) smallest_missing_9d8c5e\n\n        instance(x: 0, y: 0) for_node root.Std_k98ojb.Std.For {\n            trigger() -> for_node.trigger\n            reset() -> for_node.reset\n            next() -> for_node.next\n            items() -> list_ai\n            on item() -> {\n                in(x: -248, y: 2, name: \"item\") property(Number) item_6d4e3f\n                in(x: -305, y: 73, name: \"index\") property(Number) index_b7c8b9\n                out(x: -251, y: 13, name: \"difference\") property(Number) difference_c24a0c\n\n                instance(x: 1, y: 22) ifexpression_2f3e2 root.Std_k98ojb.Std.IfExpression {\n                    expression: \"item == index + 1\"\n                }\n                getter(x: -251, y: 16, name: \"getter_8b6c43\") getter_8b6c43 = difference\n                setter(x: -248, y: 23, name: \"setter_f9a9f4\") setter_f9a9f4 = difference\n                item_6d4e3f -> ifexpression_2f3e2.gen_0\n                index_b7c8b9 -> ifexpression_2f3e2.gen_1\n                getter_8b6c43.value -> smallest_missing_9d8c5e\n                ifexpression_2f3e2.then -> setter_f9a9f4.execute\n                item_6d4e3f -> setter_f9a9f4.new_value\n                index_b7c8b9 -> {\n                    difference_c24a0c = 1\n                    setter_f9a9f4.continue\n                }\n            } -> for_node.on_item\n        }\n\n        instance(x: -305, y: 73, name: \"min\") property(Number) min_ai\n        list_ai -> for_node.items\n        for_node.done -> min_ai\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_1d56f4 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -251, y: 0, name: \"list\") property(List) list_8f4e9d\n        out(x: 1, y: 25, name: \"smallest_missing\") property(Number) smallest_missing_a1c4e3\n\n        instance(x: 0, y: -107) for_node root.Std_k98ojb.Std.For {\n            trigger() for_trigger_5d3a65\n            reset() reset_8f1e23\n            next() next_5c87ad\n            items(list_8f4e9d)\n        }\n        instance(x: 0, y: -100) ifexpression_d2b4e6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it + 1 == smallest_missing_a1c4e3\"\n        }\n        instance(x: 0, y: -94) equal_7d8a55 root.Std_k98ojb.Logic.Equal {}\n        list_8f4e9d[0] -> for_node.index\n        for_node.next -> next_5c87ad.index\n        equal_7d8a55.left -> smallest_missing_a1c4e3\n        equal_7d8a55.right -> (list_8f4e9d[for_node.index + 1] || null)\n        ifexpression_d2b4e6.then -> reset_8f1e23.execute\n        for_node.next -> next_5c87ad.execute\n    }\n\n    \n\n    instance(x: -110, y: 128) SmallestMissing_e0a3d9 root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -439, y: 2, name: \"list\") property(List) list_9f85d4\n\n        out(x: 1, y: 20, name: \"smallest_missing\") property(Number) smallest_missing_0a3e2c\n\n        instance(x: 0, y: -111) for_loop_b6b8df root.Std_k98ojb.Std.For {\n            trigger() -> for_loop_b6b8df.trigger\n            reset() -> for_loop_b6b8df.reset\n            next() -> for_loop_b6b8df.next\n        }\n        list_9f85d4 -> for_loop_b6b8df.items\n        for_loop_b6b8df.item -> smallest_missing_0a3e2c\n        for_loop_b6b8df.index -> \n        for_loop_b6b8df.item + 1 -> smallest_missing_0a3e2c\n        for_loop_b6b8df.done -> continue_a9f4c5\n        continue_a9f4c5() -> find_smallest_missing.continue\n    }\n\n    \n\n    instance(x: -101, y: 523) find_smallest_missing_34a8d root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -315, y: 2, name: \"list\") property(List) list_6e5b3f\n\n        out(x: 1, y: 44, name: \"missing_number\") property(Number) missing_number_a9a4c7\n        instance(x: 0, y: 0) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -121, y: 35, name: \"elem\") property(Number) elem_2d3e6f\n\n            out(x: 1, y: 46, name: \"bool\") property(Bool) bool_e0a5c4\n\n            instance(x: 89, y: 29) less_than_8bdf77 root.Std_k98ojb.Math.LessThan {}\n            instance(x: 310, y: 35) greater_than_6e2d23 root.Std_k98ojb.Math.GreaterThan {}\n            1 -> less_than_8bdf77.left\n            elem_2d3e6f -> less_than_8bdf77.right\n            greater_than_6e2d23.result -> bool_e0a5c4\n        } -> find_missing_node.predicate\n        list_6e5b3f -> find_missing_node.items\n        find_missing_node.item -> missing_number_a9a4c7\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2d8c44 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 2, name: \"list\") property(List) list_ai\n        out(x: 1, y: 88, name: \"missing\") property(Number) missing_9f2a4c\n\n        instance(x: 0, y: 0) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 1, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) less_than_4b5a51 root.Std_k98ojb.Math.LessThan {}\n            instance(x: 310, y: 35) greater_than_1d6f85 root.Std_k98ojb.Math.GreaterThan {}\n            1 -> less_than_4b5a51.left\n            elem_9f6850 -> less_than_4b5a51.right\n            less_than_4b5a51.result -> bool_af09a7\n            greater_than_1d6f85.left -> elem_9f6850\n            greater_than_1d6f85.right -> 2\n            greater_than_1d6f85.result -> bool_af09a7\n\n            if not bool_af09a7 {\n                find_missing_node.item = elem_9f6850 + 1\n            }\n        } -> find_missing_node.predicate\n        list_ai -> find_missing_node.items\n        find_missing_node.item -> missing_9f2a4c\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -542, y: 2, name: \"list\") property(List) list_ai\n        out(x: 1, y: 23, name: \"missing\") property(Number) missing_7d9a6f\n\n        instance(x: 0, y: 0) for_node root.Std_k98ojb.Std.For {\n            trigger: \"true\"\n            reset: true\n            next: false\n            items: list_ai\n            on_item: \"missing = it + 1\"\n            done: \"return missing\"\n        }\n    }\n\n    \n\n    instance(x: -44, y: 529) find_smallest_missing_7d8b6f root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -114, y: 0, name: \"list\") property(List) list_8e5f44\n\n        out(x: 1, y: 22, name: \"missing_number\") property(Number) missing_number_9d2a42\n        instance(x: 45, y: 28) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -38, y: 30, name: \"elem\") property(Number) elem_f4e5ec\n\n            out(x: 1, y: 31, name: \"bool\") property(Bool) bool_0d3a66\n\n            instance(x: 44, y: 24) lessThanOrEqual_98f6f2 root.Std_k98ojb.Math.LessThanOrEqual {}\n            instance(x: 59, y: 22, name: \"index\") property(Number) index_d4c1e0\n            1 -> lessThanOrEqual_98f6f2.left\n            elem_f4e5ec -> lessThanOrEqual_98f6f2.right\n            lessThanOrEqual_98f6f2.result -> bool_0d3a66\n        } -> find_6d05b0.predicate\n        list_8e5f44 -> find_6d05b0.items\n        find_6d05b0.item -> missing_number_9d2a42\n    }\n\n    \n\n    instance(x: -54, y: 123) find_missing_d4d3db root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_ai\n        out(x: 2, y: 1, name: \"missing_number\") property(Number) missing_number_4c3a8b\n\n        instance(x: 0, y: 0) find_smallest_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: 0, y: 0, name: \"i\") property(Number) i_3d7a4e\n\n            out(x: 2, y: 1, name: \"item\") property(Number) item_a8b5c6\n            out(x: -105, y: 76, name: \"done\") trigger() done_58fbb0\n            list_ai -> find_smallest_missing_node.items\n            find_smallest_missing_node.item -> item_a8b5c6\n            i_3d7a4e -> find_smallest_missing_node.index\n            item_a8b5c6 -> missing_number_4c3a8b\n            done_58fbb0 -> find_smallest_missing_node.done\n        } -> find_smallest_missing_node.predicate\n    }\n\n    \n\n    instance(x: -174, y: 529) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -471, y: 0, name: \"list\") property(List) list_6d1f8e\n        out(x: 4, y: 55, name: \"missing\") property(Number) missing_3a7c23\n\n        instance(x: 0, y: 0) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -475, y: 44, name: \"elem\") property(Number) elem_b2f7e1\n            in(x: -478, y: 46, name: \"predicate\") property(predicate)\n            instance(x: 0, y: 4, isempty_5b4d6a root.Std_k98ojb.List.IsEmpty {})\n            predicate -> isempty_5b4d6a.predicate\n            list_6d1f8e -> find_missing_node.items\n            find_missing_node.item -> missing_3a7c23\n        } -> find_missing_node.predicate\n    }\n\n    \n\n    instance(x: -63, y: 523) find_missing_3d14d4 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -475, y: 1, name: \"list\") property(List) list_9a6e3d\n        out(x: 1, y: 15, name: \"smallest_missing\") property(Number) smallest_missing_4f8c7b\n\n        instance(x: 0, y: 0) for_node root.Std_k98ojb.Std.For {}\n        list_9a6e3d -> for_node.items\n        for_node.next -> find_missing.next\n        for_node.done -> find_missing.done\n        instance(x: -475, y: 2, name: \"count\") root.Std_k98ojb.Std.Count {}\n        count.reset -> for_node.trigger\n        for_node.index -> count.value\n        count.continue -> find_missing.next\n        find_missing.item -> smallest_missing_4f8c7b\n    }\n\n    \n\n    instance(x: -21, y: 523) find_missing_f9a5d1 root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -1083, y: 34, name: \"input\") property(String) input_9d4f5b\n\n        out(x: 444, y: 53, name: \"output\") property(String) output_0e77c7\n\n        instance(x: 74, y: 22) replace_2d1a35 root.Std_k98ojb.Strings.Replace {}\n        input_9d4f5b -> replace_2d1a35.input\n        \",\" -> replace_2d1a35.search\n        \".\" -> replace_2d1a35.search\n        \" \" -> replace_2d1a35.search\n        \":\" -> replace_2d1a35.replace\n        replace_2d1a35.output -> output_0e77c7\n    }\n\n    \n\n    instance(x: -109, y: 45) replace_punctuation_5f8b3d root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -1189, y: 11, name: \"input\") property(String) input_0\n        out(x: 442, y: -51, name: \"output\") property(String) output_0\n\n        instance(x: 105, y: -57) replace_d5a3c6 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_d5a3c6.input\n        \",\" -> replace_d5a3c6.search\n        \".\" -> replace_d5a3c6.replace\n        \" \" -> replace_d5a3c6.search\n        \":\" -> replace_d5a3c6.replace\n        replace_d5a3c6.output -> output_0\n    }\n\n    \n\n    instance(x: -141, y: 14) replace_punctuation_b2f45d root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -1148, y: 11, name: \"input\") property(String) input_0\n        out(x: 430, y: -50, name: \"output\") property(String) output_0\n\n        instance(x: 82, y: -71) replace_2f1c59 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_2f1c59.input\n        \",,\" -> replace_2f1c59.search\n        \":\" -> replace_2f1c59.replace\n        replace_2f1c59.output -> output_0\n    }\n\n    \n\n    instance(x: -124, y: 21) replace_punctuation_b4b7d5 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -1118, y: 6, name: \"input\") property(String) input_0\n\n        out(x: 544, y: -42, name: \"output\") property(String) output_7d4e3f\n\n        instance(x: 89, y: -21) replace_9a8b1c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_9a8b1c.input\n        \",.\" -> replace_9a8b1c.search\n        \":\" -> replace_9a8b1c.replace\n        replace_9a8b1c.output -> output_7d4e3f\n    }\n\n    \n\n    instance(x: -114, y: 63) replace_punctuation_b2b6ca root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -153, y: 1, name: \"input\") property(String) input_5f1d3e\n\n        out(x: 441, y: 75, name: \"output\") property(String) output_8c6b7a\n\n        instance(x: 91, y: -103) replace_d2bb64 root.Std_k98ojb.Strings.Replace {}\n        input_5f1d3e -> replace_d2bb64.input\n        \",\" -> replace_d2bb64.search\n        \".\" -> replace_d2bb64.replace\n        replace_d2bb64.output -> output_8c6b7a\n    }\n\n    \n\n    instance(x: -124, y: 45) replace_with_colon_e0f4d9 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -1355, y: 21, name: \"input\") property(String) input_4a6d26\n\n        out(x: 507, y: 72, name: \"output\") property(String) output_ae8f65\n\n        instance(x: 95, y: 50) replace_2c7f31 root.Std_k98ojb.Strings.Replace {}\n        input_4a6d26 -> replace_2c7f31.input\n        \",\" -> replace_2c7f31.search\n        \".\" -> replace_2c7f31.replace\n        \" \" -> replace_2c7f31.search\n        \":\" -> replace_2c7f31.replace\n        replace_2c7f31.output -> output_ae8f65\n    }\n\n    \n\n    instance(x: -148, y: 51) replace_special_chars_6b3d4 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -111, y: 22, name: \"input\") property(String) input_5d3b1f\n\n        out(x: 346, y: -26, name: \"output\") property(String) output_6a4e0c\n\n        instance(x: 72, y: 34) replace_2d8f7b root.Std_k98ojb.Strings.Replace {}\n        input_5d3b1f -> replace_2d8f7b.input\n        \", \" -> replace_2d8f7b.search\n        \":\" -> replace_2d8f7b.replace\n        replace_2d8f7b.output -> output_6a4e0c\n    }\n\n    \n\n    instance(x: -19, y: 44) replace_special_chars_e1ad9b root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -1046, y: 5, name: \"input\") property(String) input_0\n        out(x: 555, y: -50, name: \"output\") property(String) output_8e1c9b\n\n        instance(x: 102, y: -59) replace_7a91f2 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7a91f2.input\n        \",\" -> replace_7a91f2.search\n        \".\" -> replace_7a91f2.search\n        \" \" -> replace_7a91f2.search\n        \":\" -> replace_7a91f2.replace\n        replace_7a91f2.output -> output_8e1c9b\n    }\n\n    \n\n    instance(x: -93, y: 49) replace_special_chars_5c4d0d root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -172, y: 18, name: \"input\") property(String) input_6f9d2b\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_b9e7c5\n\n        instance(x: 221, y: -48, name: \"replace_with_colon\") replace_d4a0eb root.Std_k98ojb.Strings.Replace {}\n        input_6f9d2b -> replace_with_colon.input\n        \",.\" -> replace_with_colon.search\n        \":\" -> replace_with_colon.replace\n        replace_with_colon.output -> output_b9e7c5\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_with_colon_2f3a8d root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -142, y: 17, name: \"input\") property(String) input_5a3e6f\n\n        out(x: 546, y: -46, name: \"output\") property(String) output_ea0d2c\n\n        instance(x: 94, y: -98) replace_7b1df4 root.Std_k98ojb.Strings.Replace {}\n        input_5a3e6f -> replace_7b1df4.input\n        \",,\" -> replace_7b1df4.search\n        \":\" -> replace_7b1df4.replace\n        replace_7b1df4.output -> output_ea0d2c\n    }\n\n    \n\n    instance(x: -139, y: 19) replace_punctuation_b9f8ec root.main.replace_punctuation {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -234, y: 16, name: \"input\") property(String) input_9f0a2e\n\n        out(x: 1045, y: 54, name: \"output\") property(Bool) output_1d6c71\n\n        instance(x: -26, y: 73) islower_f7c8b4 root.Std_k98ojb.Strings.IsLowerCase {}\n        instance(x: 234, y: 63) tolower_b9e56f root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 305, y: 60) characters_6a0d3f root.Std_k98ojb.Strings.Characters {}\n        islower_f7c8b4.result -> tolower_b9e56f.input\n        tolower_b9e56f.output -> characters_6a0d3f.input\n    }\n\n    \n\n    instance(x: 47, y: -195) all_same_2df8f5 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: -446, y: 19, name: \"input\") property(String) input_9f4e2d\n\n        out(x: 1211, y: -26, name: \"output\") property(Bool) output_a6c9ec\n\n        instance(x: 261, y: 93) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1025, y: -29) tolower_f3a0e2 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 1551, y: -30) isnumeric_d9df51 root.Std_k98ojb.Strings.IsNumeric {}\n        contains_32727d.is_contained -> isnumeric_d9df51.input\n        tolower_f3a0e2.output -> isnumeric_d9df51.input\n        instance(x: 201, y: -41) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1054, y: -38) orElse_81c5d1 root.Std_k98ojb.Std.OrElse {}\n        isnumeric_d9df51.isNumeric -> orElse_81c5d1.first\n        true -> orElse_81c5d1.second\n        if_e19a62.then -> output_a6c9ec\n        false -> output_a6c9ec\n    }\n\n    \n\n    instance(x: 46, y: -24) all_characters_same_5e3b49 root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_all_same {\n        in(x: -193, y: 25, name: \"input\") property(String) input_66d5f6\n\n        out(x: 1319, y: 43, name: \"output\") property(Bool) output_8a15e1\n\n        instance(x: -58, y: 54) ifexpression_95b3c4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == previous\"\n        }\n        getter(x: 202, y: 115, name: \"getter_d2e5a9\") getter_d2e5a9 = previous\n        setter(x: -24, y: 127, name: \"setter_11c8f4\") setter_11c8f4 = previous\n        instance(x: 224, y: 62) for_4d6a1b root.Std_k98ojb.Std.For {}\n        setter(x: -44, y: 116) setter_11c8f4 = previous\n        instance(x: -201, y: 54) getat_ea9e45 root.Std_k98ojb.List.GetAt {}\n        ifexpression_95b3c4.else -> output_8a15e1\n        ifexpression_95b3c4.value -> output_8a15e1\n        ifexpression_95b3c4.then -> setter_11c8f4.execute\n        input_66d5f6 -> for_4d6a1b.items\n        for_4d6a1b.item -> ifexpression_95b3c4.gen_2\n        for_4d6a1b.index -> ifexpression_95b3c4.gen_0\n        getter_d2e5a9.value -> ifexpression_95b3c4.gen_1\n        for_4d6a1b.onItem -> ifexpression_95b3c4.execute\n        for_4d6a1b.done -> output_8a15e1\n        for_4d6a1b.item -> setter_11c8f4.new_value\n        input_66d5f6 -> getat_ea9e45.list\n        0 -> getat_ea9e45.index\n        getat_ea9e45.itemAtIndex -> setter_11c8f4.new_value\n        execute_90aaec -> setter_11c8f4.execute\n        setter_11c8f4.continue -> for_4d6a1b.reset\n    }\n\n    \n\n    instance(x: 12, y: -181) is_all_same_f7da0e root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") same_characters {\n        in(x: -208, y: 20, name: \"input\") property(String) input_3a5e4f\n\n        out(x: 1039, y: 14, name: \"output\") property(Bool) output_a0d45c\n\n        instance(x: -15, y: 74) islower_2bdf8b root.Std_k98ojb.Strings.IsLowerCase {}\n        instance(x: 199, y: 73) tolower_4a1f5e root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 341, y: -26) contains_32727d root.Std_k98ojb.Strings.Contains {}\n        same_characters -> islower_2bdf8b.input\n        input_3a5e4f -> tolower_4a1f5e.input\n        tolower_4a1f5e.output -> contains_32727d.contains\n    }\n\n    \n\n    instance(x: 14, y: -21) same_characters_98c7b9 root.main.same_characters {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -436, y: 11, name: \"input\") property(String) input_9d4e0f\n\n        out(x: 1093, y: 13, name: \"output\") property(Bool) output_a7b1a8\n\n        instance(x: -23, y: 33) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 112, y: 18) islower_b0f6e3 root.Std_k98ojb.Strings.IsLowerCase {}\n        instance(x: 273, y: 12) tolower_4a7df5 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -44, y: 31) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {}\n    }\n\n    \n\n    instance(x: 53, y: 27) is_all_same_f9f6d1 root.main.is_all_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") all_same {\n        in(x: -394, y: 30, name: \"input\") property(String) input_9a0e2f\n\n        out(x: 1261, y: 24, name: \"output\") property(Bool) output_b4b3c6\n\n        instance(x: 106, y: 155) length_36f77d root.Std_k98ojb.List.Length {}\n        instance(x: -31, y: 20) tolower_d2a5ec root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 141, y: 60) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 201, y: 30) if_e19a62 root.Std_k98ojb.Std.If {}\n        tolower_d2a5ec.input -> input_9a0e2f\n        length_36f77d.length -> contains_32727d.item\n        contains_32727d.is_contained -> if_e19a62.predicate\n    }\n\n    \n\n    instance(x: 15, y: -193) all_same_7df8c1 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") is_same_char {\n        in(x: -30, y: 24, name: \"input\") property(String) input_95d0a8\n\n        out(x: 1021, y: 45, name: \"output\") property(Bool) output_5f3e42\n\n        instance(x: 141, y: 56) tolower_9c2a4b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -58, y: 60) characters_63d7ec root.Std_k98ojb.Strings.Characters {}\n        instance(x: 208, y: 49) contains_32727d root.Std_k98ojb.Strings.Contains {}\n        is_same_char.result -> output_5f3e42\n        tolower_9c2a4b.output -> characters_63d7ec.input\n        characters_63d7ec.characters -> contains_32727d.contains\n        input_95d0a8 -> contains_32727d.input\n    }\n\n    \n\n    instance(x: 47, y: -104) is_same_char_2e5f55 root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: -44, y: 25, name: \"input\") property(String) input_6f8d2a\n\n        out(x: 1193, y: 39, name: \"output\") property(Bool) output_4c7e23\n\n        instance(x: -43, y: 28) islower_d9c5b0 root.Std_k98ojb.Strings.IsLowerCase {}\n        instance(x: 215, y: 38) contains_c41f3d root.Std_k98ojb.Strings.Contains {}\n        instance(x: 417, y: 37) ifexpression_4a7a2e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == input[0]\"\n        }\n        getter(x: -28, y: 43, name: \"getter_f6d66c\") getter_f6d66c = current\n        setter(x: 594, y: -23, name: \"setter_2e3f4b\") setter_2e3f4b = current\n        instance(x: 191, y: 40) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -20, y: 44, name: \"setter_2e3f4b\") setter_2e3f4b = current\n        instance(x: -21, y: 35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_4a7a2e.else -> output_4c7e23\n        ifexpression_4a7a2e.value -> output_4c7e23\n        ifexpression_4a7a2e.then -> setter_2e3f4b.execute\n        input_6f8d2a -> for_d26972.items\n        for_d26972.item -> ifexpression_4a7a2e.gen_1\n        for_d26972.index -> ifexpression_4a7a2e.gen_0\n        getter_f6d66c.value -> ifexpression_4a7a2e.gen_2\n        for_d26972.onItem -> ifexpression_4a7a2e.execute\n        for_d26972.done -> output_4c7e23\n        for_d26972.item -> setter_2e3f4b.new_value\n        input_6f8d2a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_2e3f4b.new_value\n        ifexpression_4a7a2e.execute -> output_4c7e23.continue\n        setter_2e3f4b.continue -> for_d26972.reset\n    }\n\n    \n\n    instance(x: 10, y: -195) all_characters_same_e6d0e9 root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") same_characters {\n        in(x: -246, y: 27, name: \"input\") property(String) input_1d0f8a\n\n        out(x: 1255, y: -22, name: \"output\") property(Bool) output_e9b3c6\n\n        instance(x: -74, y: 30) length_2fdd4b root.Std_k98ojb.List.Length {}\n        instance(x: 137, y: -13) ifexpression_9d5e7a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i != last_index\"\n        }\n        instance(x: 203, y: -23) islower_6f0c8f root.Std_k98ojb.Strings.IsLowerCase {}\n        instance(x: 234, y: 15) characters_85e5d4 root.Std_k98ojb.Strings.Characters {}\n        length_2fdd4b.length -> ifexpression_9d5e7a.execute\n        input_1d0f8a -> characters_85e5d4.input\n        characters_85e5d4.characters -> islower_6f0c8f.input\n        islower_6f0c8f.result -> ifexpression_9d5e7a.then\n        last_index -> length_2fdd4b.lastIndex\n    }\n\n    \n\n    instance(x: 46, y: -22) same_characters_d3df66 root.main.same_characters {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_same {\n        in(x: -465, y: 63, name: \"input\") property(String) input_1e6d4f\n\n        out(x: 1135, y: 14, name: \"output\") property(Bool) output_ba3c8b\n\n        instance(x: 245, y: 34) ifexpression_d5c9cd root.Std_k98ojb.Std.IfExpression {\n            expression: \"i == j\"\n        }\n        getter(x: -22, y: 79, name: \"getter_7d6a1f\") getter_7d6a1f = i\n        setter(x: 449, y: 34) setter_7d6a1f = i\n        instance(x: 281, y: -10) ifexpression_d5c9cd.else -> output_ba3c8b\n        getter(x: -26, y: 79, name: \"getter_7d6a1f\") getter_7d6a1f = j\n        setter(x: 449, y: 34) setter_7d6a1f = j\n        instance(x: 324, y: 11) tolower_9c6e3b root.Std_k98ojb.Strings.ToLower {}\n        input_1e6d4f -> tolower_9c6e3b.input\n        tolower_9c6e3b.output -> ifexpression_d5c9cd.value\n        instance(x: 102, y: -14) map_8a30ec root.Std_k98ojb.Iteration.Map {}\n        getter(x: -26, y: 79, name: \"getter_7d6a1f\") getter_7d6a1f = i\n        setter(x: 449, y: 34) setter_7d6a1f = i\n        instance(x: 281, y: -10) ifexpression_d5c9cd.then -> map_8a30ec.handler\n        input_1e6d4f -> map_8a30ec.input\n        map_8a30ec.output_list -> ifexpression_d5c9cd.value\n        instance(x: 102, y: -14) getat_7dbbdf root.Std_k98ojb.List.GetAt {}\n        getter(x: -26, y: 79, name: \"getter_7d6a1f\") getter_7d6a1f = i\n        setter(x: 449, y: 34) setter_7d6a1f = i\n        instance(x: 281, y: -10) ifexpression_d5c9cd.execute -> getat_7dbbdf.handler\n        map_8a30ec.output_list -> getat_7dbbdf.list\n        0 -> getat_7dbbdf.index\n        getat_7dbbdf.itemAtIndex -> setter_7d6a1f.new_value\n        ifexpression_d5c9cd.value -> output_ba3c8b\n    }\n\n    \n\n    instance(x: -38, y: 18) all_same_ae0f70 root.main.all_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 35, y: -275, name: \"count\") property(Number) count_ai\n\n        instance(x: 19, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n        instance(x: 11, y: -268) math_floor_node root.Std_k98ojb.Math.Floor {}\n        count_ai -> math_floor_node.input\n        math_floor_node.output -> count_ai\n    }\n\n    \n    instance(x: -44, y: -284, name: \"count_digits\") count_9c0a6d root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 29, y: -220, name: \"result\") property(Number) result_ai\n\n        instance(x: 80, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_8c5d3a.result\n    }\n\n    instance(x: -27, y: -232, name: \"count_digits\") strings_substring_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 3, y: -230, name: \"result\") property(Number) result_ai\n\n        instance(x: 1, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_8e4f7d.length\n        instance(x: 1, y: -243) math_floor_node root.Std_k98ojb.Math.Floor {}\n        count_digits_8e4f7d.result -> math_floor_node.input\n        math_floor_node.output -> count_digits_8e4f7d.new_value\n    }\n\n    \n    instance(x: 0, y: -256) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 20, y: -430, name: \"count\") property(Number) count_ai\n\n        instance(x: 15, y: 0) math_length_node root.Std_k98ojb.List.Length {}\n        input_ai -> math_length_node.input\n        math_length_node.length -> count_ai\n    }\n\n    \n    instance(x: 263, y: -479, name: \"count_digits\") count_3d4f55 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 5, y: -417, name: \"result\") property(Number) result_ai\n\n        instance(x: 74, y: -317) list_length_node root.Std_k98ojb.List.Length {}\n        input_ai -> list_length_node.list\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 0, y: -404, name: \"count_digits\") count_7f5e3d root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 21, y: -436, name: \"result\") property(Number) result_ai\n\n        instance(x: 22, y: 0) math_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> math_length_node.input\n        math_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 234, y: -46, name: \"count_digits\") count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 22, y: -222, name: \"result\") property(Number) result_ai\n\n        instance(x: 10, y: 73) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_8e5d1f.result\n    }\n\n    instance(x: -34, y: 127) strings_substring_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 1, y: -423, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_5d7f3e.result_ai\n    }\n\n    instance(x: -42, y: -304) strings_substring_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 32, y: -244, name: \"result\") property(Number) result_ai\n\n        instance(x: 19, y: 74) length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> length_node.input\n        length_node.length -> count_digits_9c8f43.length\n        function_5e6d4a root.Std_k98ojb.Std.IfExpression {\n            expression: \"count_digits_9c8f43.length > 0\"\n        }\n        function_5e6d4a.then -> string_to_num_node\n        count_digits_9c8f43.iteration -> string_to_num_node.iteration\n        function_5e6d4a.else -> empty_string_node\n        empty_string_node.value -> result_ai\n        string_to_num_node.result -> result_ai\n    }\n\n    \n    instance(x: 97, y: -275) empty_string_node root.main.empty_string_node {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 2, y: -219, name: \"result\") property(Number) result_ai\n\n        instance(x: 26, y: -289) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_4c1d7a\n    }\n\n    \n    instance(x: 0, y: 0) math_floor_node root.Std_k98ojb.Math.Floor {}\n    count_digits_4c1d7a -> math_floor_node.input\n    math_floor_node.output -> result_ai\n    count_digits_4c1d7a -> strings_length_node.length\n    \n    instance(x: -292, y: 0) floor_61b38d root.Std_k98ojb.Math.Floor {}\n    input_ai -> floor_61b38d.input\n    floor_61b38d.output -> math_floor_node.input\n    count_digits_4c1d7a -> floor_61b38d.output\n    \n    instance(x: 0, y: -220) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {}\n    expression: \"result > 0\"\n    ifexpression_3d7de6.then -> result_ai\n    ifexpression_3d7de6.else -> result_ai\n    \n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -279, y: 148, name: \"n\") property(Number) n_4e8d3b\n\n        out(x: 5700, y: -336, name: \"output\") property(Number) output_7fbb9c\n\n        instance(x: 55, y: 91) ifexpression_b1a8f5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 384, y: -193) sum_fourth_power_6d4e7b root.main.sum_fourth_power {}\n        instance(x: 90, y: 81) pow_a9f5c2 root.Std_k98ojb.Math.Pow {}\n        instance(x: 99, y: 74) mul_d8f65a root.Std_k98ojb.Math.Mul {}\n        instance(x: -206, y: -233) div_7d1e35 root.Std_k98ojb.Math.Div {}\n        instance(x: 100, y: 78) sum_fourth_power_ba5c2a root.main.sum_fourth_power {}\n        instance(x: 38, y: 97) add_e85b3f root.Std_k98ojb.Math.Add {}\n        instance(x: -217, y: -264) modulo_6d4e7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 99, y: 73) pow_a9f5c2.first -> div_7d1e35.second\n        instance(x: 90, y: 81) pow_a9f5c2.gen_0 -> mul_d8f65a.first\n        instance(x: -206, y: -233) div_7d1e35.result -> sum_fourth_power_ba5c2a.n_4e8d3b\n        n_4e8d3b -> pow_a9f5c2.y\n        mul_d8f65a.result -> add_e85b3f.first\n        add_e85b3f.result -> modulo_6d4e7b.value\n        modulo_6d4e7b.result -> sum_fourth_power_ba5c2a.output\n    }\n\n    \n\n    instance(x: -285, y: 172) sum_fourth_power_82b0aa root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_power {\n        in(x: -282, y: 166, name: \"n\") property(Number) n_6b655b\n\n        out(x: 5760, y: -667, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 534, y: 146) mul_7e1ce0 root.Std_k98ojb.Math.Mul {}\n        instance(x: -39, y: 26, name: \"First odd number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Fourth power\") ``Fourth power_0b1361`` root.Std_k98ojb.Math.Pow {}\n        list_empty_4e7c8d -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First odd number_0b1361``.predicate\n        list_empty_4e7c8d -> ``Fourth power_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First odd number_0b1361``.item -> mul_7e1ce0.second\n        ``Fourth power_0b1361``.result -> pow_gen_0b1361.multiplication\n        pow_gen_0b1361.gen_0 -> mul_7e1ce0.result\n        n_6b655b -> div_547f34.second\n        div_547f34.result -> sum_odd_power.output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_odd_power_f53d27 root.main.sum_odd_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -439, y: 157, name: \"n\") property(Number) n_6b655b\n\n        out(x: 16384, y: -625, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        list_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -300, y: 172, name: \"n\") property(Number) n_6b655b\n\n        out(x: 1292, y: 142, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        list_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -292, y: 173, name: \"n\") property(Number) n_8a6b3d\n\n        out(x: 28560, y: 144, name: \"output\") property(Number) output_b9f1d4\n\n        instance(x: 23, y: 0) ifexpression_d2e41 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 68, y: -321) sum_fourth_power_8f2a6c root.main.sum_fourth_power {}\n        instance(x: 82, y: -305) mul_f5e7a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 96, y: -275) pow_9d3f23 root.Std_k98ojb.Math.Pow {}\n        instance(x: 74, y: -248) sum_1c6ed2 root.Std_k98ojb.Math.Sum {}\n        instance(x: 0, y: 0) set_f7e8a4 root.Std_k98ojb.Std.Set {}\n        setter(x: 109, y: -287, name: \"setter_9d3f23\") setter_9d3f23 = pow\n        getter(x: 118, y: -288, name: \"getter_1c6ed2\") getter_1c6ed2 = sum\n        instance(x: 98, y: -255) div_f5e7a4 root.Std_k98ojb.Math.Div {}\n        instance(x: 0, y: 0) floor_c8df9d root.Std_k98ojb.Math.Floor {}\n        pow_9d3f23.n -> mul_f5e7a4.first\n        pow_9d3f23.y -> div_f5e7a4.second\n        sum_1c6ed2.n -> div_f5e7a4.first\n        0 -> set_f7e8a4.new_value\n        set_f7e8a4.continue_d9efd7 -> pow_9d3f23.execute_cdac2a\n        mul_f5e7a4.result -> sum_1c6ed2.input\n        div_f5e7a4.result -> floor_c8df9d.first\n        floor_c8df9d.output -> sum_1c6ed2.value\n        pow_9d3f23.result -> setter_9d3f23.new_value\n        setter_9d3f23.continue_d9efd7 -> sum_fourth_power_8f2a6c.execute_cdac2a\n        sum_fourth_power_8f2a6c.continue_d9efd7 -> getter_1c6ed2.execute_cdac2a\n        sum_fourth_power_8f2a6c.output_b9f1d4 -> setter_9d3f23.second\n    }\n\n    \n\n    instance(x: -194, y: 141) sum_fourth_power_5cd7b root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -286, y: 158, name: \"n\") property(Number) n_4e3f1b\n\n        out(x: 1075, y: -289, name: \"output\") property(Number) output_a7d23a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        list_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_a7d23a\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -292, y: 148, name: \"n\") property(Number) n_1f8d16\n\n        out(x: 1296, y: 55, name: \"output\") property(Number) output_3a5e9b\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        list_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_3a5e9b\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -434, y: 178, name: \"n\") property(Number) n_6b655b\n\n        out(x: 16384, y: 1, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First odd number_0b1361``.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First odd number_0b1361``.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First odd number_0b1361``.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First odd number_0b1361``.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First odd number_0b1361``.predicate\n        instance(x: -201, y: -234) power_4f8dca root.Std_k98ojb.Math.Pow {}\n        2 -> power_4f8dca.y\n        modulo_1088d5.result -> power_4f8dca.x\n        power_4f8dca.result -> add_88bb8a.first\n        add_88bb8a.result -> sum_732a8a.second\n        sum_732a8a.continue_d9efd7 -> output_732a8a.execute\n        sum_732a8a.output_732a8a -> output_732a8a\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -434, y: 165, name: \"n\") property(Number) n_0a9f2d\n\n        out(x: 1296, y: 3, name: \"output\") property(Number) output_a8e1c4\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_b5a2f3\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_b5a2f3 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_b5a2f3\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_b5a2f3 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        list_09fcba -> ``First even number_0b1361``.items\n        find_6d05b0.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_a8e1c4\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 173, name: \"n\") property(Number) n_4a5d74\n\n        out(x: 576, y: -1, name: \"output\") property(Number) output_8c9f2e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        list_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -145, y: 71, name: \"side\") property(Number) side_8d5f6b\n\n        out(x: 276, y: 26, name: \"surface_area\") property(Number) sa_2e23c7\n\n        instance(x: 29, y: 58) pow_f3a0ec root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -155, y: 104) data_9f1a4d  = side\n        instance(x: -109, y: 139) mul_d2c9e5 root.Std_k98ojb.Math.Mul {}\n        pow_f3a0ec.result -> mul_d2c9e5.first\n        6 -> mul_d2c9e5.second\n        data_9f1a4d -> mul_d2c9e5.second\n        mul_d2c9e5.result -> sa_2e23c7\n    }\n\n    \n\n    instance(x: -162, y: 85) surface_area_e66f3b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -196, y: 17, name: \"side\") property(Number) side_5f2d6b\n\n        out(x: 176, y: 34, name: \"surface_area\") property(Number) surface_area_7a8c44\n\n        instance(x: -121, y: -23) pow_f3e63b root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -198, y: 43) data_cde0dc  = side\n        instance(x: 33, y: 49) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_f3e63b.x\n        pow_f3e63b.result -> mul_2f9d09.first\n        side_5f2f6a -> mul_2f9d09.second\n        4 -> mul_2f9d09.y\n        mul_2f9d09.result -> surface_area_7a8c44\n    }\n\n    \n\n    instance(x: -91, y: 43) surface_area_b1e85b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -141, y: 54, name: \"side_length\") property(Number) side_length_5f8e22\n\n        out(x: 216, y: 6, name: \"surface_area\") property(Number) surface_area_e58a3c\n\n        instance(x: 19, y: -27) cube_surface_area_2b7d35 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -151, y: 28) data_9f5c8d  = side_length_\n        cube_surface_area_2b7d35.result -> surface_area_e58a3c\n        side_length_5f8e22 -> cube_surface_area_2b7d35.base\n        cube_surface_area_2b7d35.exponent -> 2\n        data_9f5c8d -> cube_surface_area_2b7d35.input\n    }\n\n    \n\n    instance(x: -234, y: 65) cube_surface_area_f4a6e0 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -145, y: 91, name: \"side_length\") property(Number) side_length_5f3b8e\n\n        out(x: 216, y: -24, name: \"surface_area\") property(Number) surface_area_1c2a4d\n\n        instance(x: -141, y: -108) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -145, y: 71) data_d9f3e5  = side_length_5f3b8e\n        instance(x: 115, y: 19) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        data_d9f3e5 -> mul_f892a4.first\n        2 -> pow_584bfd.y\n        mul_f892a4.result -> pow_584bfd.first\n        pow_584bfd.result -> surface_area_1c2a4d\n    }\n\n    \n\n    instance(x: -215, y: 22) cube_surface_area_8f6e85 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -202, y: 11, name: \"side_length\") property(Number) side_length_8e2b1d\n\n        out(x: 216, y: -104, name: \"surface_area\") property(Number) surface_area_9f7c55\n\n        instance(x: -95, y: -22) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -209, y: -85) data_cde0dc  = 6\n        instance(x: -340, y: -63) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        pow_584bfd.result -> surface_area_9f7c55\n        side_length_8e2b1d -> mul_f892a4.first\n        side_length_8e2b1d -> pow_584bfd.y\n        div_64046c.result -> surface_area_9f7c55\n    }\n\n    \n\n    instance(x: 201, y: -112) cube_surface_area_dff9a3 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -195, y: 46, name: \"side\") property(Number) side_1e9d0f\n\n        out(x: 1296, y: -10, name: \"area\") property(Number) area_f8c869\n        out(x: 201, y: 23, name: \"continue\") trigger() continue_5bfc88\n\n        instance(x: -220, y: 128) for_3f2e4a root.Std_k98ojb.Std.For {}\n        side_1e9d0f -> for_3f2e4a.index\n        6 -> for_3f2e4a.count\n        data_instance(x: 216, y: -193) data_b5e9c7  = [side_1e9d0f]\n        instance(x: 20, y: 121) expression_8bf63b root.Std_k98ojb.Math.Expression {\n            expression: \"6 * side^2\"\n        }\n        for_3f2e4a.onItem -> expression_8bf63b.execute\n        data_b5e9c7 -> expression_8bf63b.input_list\n        expression_8bf63b.result -> area_f8c869\n    }\n\n    \n\n    instance(x: 208, y: -55) surface_area_2d1a26 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -245, y: 15, name: \"side\") property(Number) side_9e5f5d\n\n        out(x: 288, y: -45, name: \"surface_area\") property(Number) surface_area_0b3c85\n\n        instance(x: 33, y: -76) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -240, y: -46) data_b8f0d7  = 6\n        instance(x: -102, y: -64) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        instance(x: 11, y: 16) div_64046c root.Std_k98ojb.Math.Div {}\n        data_b8f0d7 -> mul_f892a4.second\n        side_9e5f5d -> pow_584bfd.first\n        pow_584bfd.y -> div_64046c.first\n        div_64046c.second -> surface_area_0b3c85\n        mul_f892a4.result -> surface_area_0b3c85\n    }\n\n    \n\n    instance(x: 210, y: -35) surface_area_e1d9e6 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -112, y: 32, name: \"side\") property(Number) side_5f2e4d\n\n        out(x: 216, y: 18, name: \"area\") property(Number) area_f1f7a3\n        out(x: 224, y: 26, name: \"continue\") trigger() continue_74c0f8\n\n        instance(x: -97, y: -15) for_2d9b42 root.Std_k98ojb.Std.For {}\n        data_instance(x: -113, y: 25) data_58a4df  = side\n        instance(x: 91, y: 20) expression_f0f5e1 root.Std_k98ojb.Math.Expression {\n            expression: \"6 * (side^2)\"\n        }\n        getter(x: -103, y: 27, name: \"getter_7d4c8a\") getter_7d4c8a = area\n        setter(x: 93, y: 10, name: \"setter_1e9e5f\") setter_1e9e5f = area\n        setter(x: 95, y: -6, name: \"setter_3bda31\") setter_3bda31 = area\n        data_58a4df -> for_2d9b42.items\n        expression_f0f5e1.result -> setter_1e9e5f.new_value\n        for_2d9b42.onItem -> setter_3bda31.execute\n        setter_1e9e5f.continue -> continue_74c0f8\n        setter_3bda31.continue -> continue_74c0f8\n    }\n\n    \n\n    instance(x: 104, y: -36) surface_area_e4e4a6 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -245, y: 103, name: \"side_length\") property(Number) side_length_1e0f9d\n\n        out(x: 216, y: -59, name: \"surface_area\") property(Number) surface_area_8c4b21\n\n        instance(x: 11, y: -222) pow_f6a3ac root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -247, y: 102, name: \"side_length\") side_length_1e0f9d = 6\n        pow_f6a3ac.result -> surface_area_8c4b21\n        side_length_1e0f9d -> pow_f6a3ac.x\n        2 -> pow_f6a3ac.y\n        surface_area_8c4b21 -> pow_f6a3ac.result\n    }\n\n    \n\n    instance(x: -196, y: 174) cube_surface_area_d91d7e root.main(cube_surface_area {})\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -101, y: 23, name: \"side\") property(Number) side_6e8f64\n\n        out(x: 192, y: -26, name: \"surface_area\") property(Number) surface_area_eb1d4c\n\n        instance(x: -145, y: -194) pow_f0a9aa root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -141, y: -196) data_5f2e58  = side\n        instance(x: -234, y: -108) mul_d6c1a3 root.Std_k98ojb.Math.Mul {}\n        data_5f2e58 -> mul_d6c1a3.first\n        6 -> mul_d6c1a3.second\n        pow_f0a9aa.result -> mul_d6c1a3.first\n        mul_d6c1a3.result -> surface_area_eb1d4c\n    }\n\n    \n\n    instance(x: -209, y: -55) surface_area_7f8e51 root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -446, y: 43, name: \"list\") property(List) list_0a8f1d\n\n        out(x: 141, y: 68, name: \"output\") property(Number) output_3c34e6\n\n        instance(x: -1085, y: -26, name: \"Max\") Std_k98ojb.List.Max {}\n        instance(x: -1129, y: 59, name: \"Min\") Std_k98ojb.List.Min {}\n        data_instance(x: -1023, y: -44) data_6a7c94  = [first, middle, last]\n        instance(x: -1031, y: 49) length_8e2d31 root.Std_k98ojb.List.Length {}\n        instance(x: -1109, y: 61) sub_f3f0ab root.Std_k98ojb.Math.Sub {}\n        list_0a8f1d -> Max.items\n        list_0a8f1d -> Min.items\n        data_6a7c94 -> length_8e2d31.list\n        firstitem_9b1bc3 root.Std_k98ojb.List.FirstItem {}\n        lastitem_d831ca root.Std_k98ojb.List.LastItem {}\n        sub_f3f0ab.result -> output_3c34e6\n        Max.max -> data_6a7c94.last\n        Min.min -> data_6a7c94.first\n        length_8e2d31.length -> sub_f3f0ab.first\n        1 -> sub_f3f0ab.second\n    }\n\n    \n\n    instance(x: -62, y: -24) diff_max_min_4b34e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -123, y: 23, name: \"list\") property(List) list_9d3e1f\n\n        out(x: 43, y: 64, name: \"difference\") property(Number) difference_a7bdf4\n        out(x: 58, y: 26, name: \"output\") property(Number) output_c6a5da\n\n        instance(x: -111, y: -41, name: \"Max\") Std_k98ojb.List.Max {}\n        instance(x: -44, y: 54, name: \"Min\") Std_k98ojb.List.Min {}\n        data_instance(x: -91, y: 26) data_3f3a0d  = [first, middle, last]\n        instance(x: -123, y: 65) sub_f1e77c root.Std_k98ojb.Math.Sub {}\n        list_9d3e1f -> Max.items\n        list_9d3e1f -> Min.items\n        data_3f3a0d -> sub_f1e77c.first\n        data_3f3a0d -> sub_f1e77c.middle\n        data_3f3a0d -> sub_f1e77c.last\n        Max.max -> output_c6a5da\n        Min.min -> difference_a7bdf4\n    }\n\n    \n\n    instance(x: 102, y: -22) diff_max_min_8b5e48 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -131, y: 21, name: \"list\") property(List) list_9d3b5a\n\n        out(x: 436, y: 103, name: \"output\") property(Number) output_e1e8f2\n        out(x: 113, y: -219, name: \"continue\") trigger() continue_7c63db\n\n        instance(x: -105, y: -110) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -978, y: -566) sorton_ba60f8 root.Std_k98ojb.List.SortOn {}\n        instance(x: 201, y: 62) max2_c3e8d1 root.Std_k98ojb.Math.Max2 {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 113, y: -219, name: \"first_smallest\") firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 116, y: -268, name: \"last_largest\") lastitem_d831ca root.Std_k98ojb.List.LastItem {}\n        instance(x: 201, y: 63) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 113, y: -219, name: \"first_smallest\") getat_9fba2d root.Std_k98ojb.List.GetAt {}\n        instance(x: 201, y: 63) greaterthan_cb50ae_1 root.Std_k98ojb.Math.GreaterThan {}\n        list_9d3b5a -> length_4b8927.list\n        lastitem_d831ca.list -> sorton_ba60f8.items\n        max2_c3e8d1.left -> sub_f133b2.first\n        sub_f133b2.second -> greaterthan_cb50ae.right\n        firstitem_870503.item -> getat_9fba2d.itemAtIndex\n        lastitem_d831ca.item -> sorton_ba60f8.sorted_list\n        greaterthan_cb50ae.result -> output_e1e8f2\n        sub_f133b2.result -> max2_c3e8d1.max\n        firstitem_870503.itemAtIndex -> getat_9fba2d.itemAtIndex\n        greaterthan_cb50ae_1.result -> output_e1e8f2\n    }\n\n    \n\n    instance(x: 112, y: -64) diff_largest_smallest_ba3b55 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -442, y: 247, name: \"list\") property(List) list_6d1b9a\n\n        out(x: 446, y: -246, name: \"difference\") property(Number) difference_5e2f38\n\n        instance(x: -105, y: -110) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -142, y: 117) max_9c6d4a root.Std_k98ojb.Math.Max {}\n        instance(x: -104, y: 124) min_3e5f8a root.Std_k98ojb.Math.Min {}\n        data_instance(x: -450, y: -114, name: \"data\") = [length, max, min]\n        instance(x: -432, y: -620) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_6d1b9a -> length_4b8927.list\n        length_4b8927.length -> max_9c6d4a.left\n        min_3e5f8a.min -> sub_f133b2.first\n        max_9c6d4a.max -> sub_f133b2.second\n        sub_f133b2.result -> difference_5e2f38\n    }\n\n    \n\n    instance(x: 101, y: -67) diff_max_min_49e7d0 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -113, y: 142, name: \"list\") property(List) list_8fba3d\n\n        out(x: 441, y: 53, name: \"difference\") property(Number) difference_a9c5b4\n        out(x: 141, y: -23, name: \"is empty\") property(Bool) isEmpty_e8a016\n\n        instance(x: -59, y: 156) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -19, y: 67) max_1d35d5 root.Std_k98ojb.Math.Max {}\n        instance(x: -106, y: 144) min_0e8c9a root.Std_k98ojb.Math.Min {}\n        instance(x: -59, y: 63) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_8fba3d -> length_6e87f2.list\n        max_1d35d5.max -> sub_f133b2.first\n        min_0e8c9a.min -> sub_f133b2.second\n        sub_f133b2.result -> difference_a9c5f4\n    }\n\n    \n\n    instance(x: 108, y: -69) diff_max_min_4d3ec6 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -111, y: -32, name: \"list\") property(List) list_4f9e50\n\n        out(x: -43, y: 123, name: \"output\") property(Number) output_b2b1c7\n        out(x: 106, y: -35, name: \"continue\") trigger() continue_63d87a\n\n        instance(x: -91, y: -42) length_5f9e41 root.Std_k98ojb.List.Length {}\n        instance(x: 191, y: 104, name: \"max\") property(Number) max_a0c1eb\n        instance(x: 110, y: 69, name: \"min\") property(Number) min_8d5a4f\n        instance(x: -44, y: 100) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_4f9e50 -> length_5f9e41.list\n        max_a0c1eb -> sub_f133b2.first\n        min_8d5a4f -> sub_f133b2.second\n        output_b2b1c7 = sub_f133b2.result\n    }\n\n    \n\n    instance(x: 73, y: -23) diff_max_min_3e6cd root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -1139, y: -537, name: \"list\") property(List) list_1d3b8a\n\n        out(x: -1245, y: -53, name: \"output\") property(Number) output_4f8e43\n        out(x: 106, y: -110, name: \"continue\") trigger() continue_6c2ca9\n\n        instance(x: -1237, y: -46) length_a1d3d5 root.Std_k98ojb.List.Length {}\n        instance(x: -1140, y: -104) max_d63a4e root.Std_k98ojb.Math.Max2 {}\n        instance(x: -1128, y: 52) min_6f9d33 root.Std_k98ojb.Math.Min2 {}\n        data_instance(x: -1137, y: -111) data_5c7581 = [max, min]\n        instance(x: -1153, y: -56) sub_94a5e8 root.Std_k98ojb.Math.Sub {}\n        list_1d3b8a -> max_d63a4e.left\n        list_1d3b8a -> min_6f9d33.left\n        data_5c7581.max -> max_d63a4e.right\n        data_5c7581.min -> min_6f9d33.right\n        sub_94a5e8.first -> output_4f8e43\n        list_1d3b8a -> length_a1d3d5.list\n        length_a1d3d5.length -> sub_94a5e8.second\n        max_d63a4e.max -> output_4f8e43\n        min_6f9d33.min -> output_4f8e43\n    }\n\n    \n\n    instance(x: 108, y: -110) diff_max_min_1b3c9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -157, y: -538, name: \"list\") property(List) list_6f9d4a\n\n        out(x: 523, y: 54, name: \"difference\") property(Number) difference_c1e3c5\n        out(x: -123, y: -516, name: \"output\") property(Bool) output_b8b1f2\n\n        instance(x: -1109, y: -478) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 530, y: 74, name: \"max\") property(Number) max_6c31a3\n        instance(x: 123, y: -508) minitem_1e8f5d root.Std_k98ojb.List.Min {}\n        instance(x: -1289, y: -488) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: -1097, y: -484) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1131, y: -510) lessThanOrEqual_1f8a5e root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_6f9d4a -> max.max\n        length_4b8927.length -> greaterthan_cb50ae.right\n        sub_f133b2.result -> diff_largest_smallest.difference\n        max -> lessThanOrEqual_1f8a5e.left\n        minitem_1e8f5d.min -> lessThanOrEqual_1f8a5e.right\n        list_6f9d4a -> length_4b8927.list\n    }\n\n    \n\n    instance(x: 123, y: -516) diff_largest_smallest_43c9f2 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -208, y: 15, name: \"list\") property(List) list_4f0d9a\n\n        out(x: 446, y: 60, name: \"output\") property(Number) output_b8c6b5\n\n        instance(x: -104, y: -106) length_2e7da1 root.Std_k98ojb.List.Length {}\n        instance(x: -121, y: 21, name: \"sort_on\") SortOn {}\n        instance(x: -138, y: 23, name: \"max\") Max {}\n        instance(x: -141, y: 27, name: \"min\") Min {}\n        instance(x: -160, y: 48) sub_9f3a8b root.Std_k98ojb.Math.Sub {}\n        list_4f0d9a -> sort_on.list\n        sort_on.key -> output_b8c6b5.max\n        list_4f0d9a -> max.items\n        max.result -> output_b8c6b5.max\n        list_4f0d9a -> min.items\n        min.result -> output_b8c6b5.min\n        sub_9f3a8b.result -> output_b8c6b5\n    }\n\n    \n\n    instance(x: 33, y: -28) diff_max_min_41e59 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -142, y: 157, name: \"list\") property(List) list_1f8a95\n\n        out(x: -144, y: 159, name: \"difference\") property(Number) difference_b6c9d4\n        out(x: 521, y: -116, name: \"output\") property(Number) output_a3b1e5\n\n        instance(x: -1088, y: -509) length_96f0a7 root.Std_k98ojb.List.Length {}\n        instance(x: -1194, y: 115, name: \"sort_on\") root.Std_k98ojb.List.SortOn {}\n        instance(x: -1123, y: -492) min_6d5c28 root.Std_k98ojb.List.Min {}\n        instance(x: -1139, y: -493) max_7c8e4a root.Std_k98ojb.List.Max {}\n        instance(x: 509, y: 115, name: \"sub_3f1d6d\") root.Std_k98ojb.Math.Sub {}\n        list_1f8a95 -> sort_on.list\n        min_6d5c28.items -> max_7c8e4a.items\n        max_7c8e4a.result -> sub_3f1d6d.first\n        sub_3f1d6d.second -> difference_b6c9d4\n    }\n\n    \n\n    instance(x: 102, y: -65) diff_largest_smallest_15e5b2 root.main.diff_largest_smallest {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -42, y: 64, name: \"input\") property(Number) input_8f2d0a\n\n        out(x: 1739, y: -206, name: \"output\") property(Bool) output_e5cd7e\n\n        instance(x: 121, y: 74, name: \"even\") isnumeric_6b3c43 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 201, y: 69) tolower_7f44a1 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 181, y: -207) contains_8c0dcd root.Std_k98ojb.Strings.Contains {}\n        instance(x: 121, y: 72) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        input_8f2d0a -> isnumeric_6b3c43.input\n        tolower_7f44a1.output -> contains_8c0dcd.input\n        contains_8c0dcd.input -> not_75283f.input\n        even.result -> output_e5cd7e\n    }\n\n    \n\n    instance(x: -66, y: 35) is_even_6b3bba root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -48, y: 34, name: \"input\") property(Number) input_5f1d35\n\n        out(x: 1234, y: 23, name: \"output\") property(Bool) output_9e5b3a\n\n        instance(x: 118, y: 28, name: \"is_even\") Std.If {\n            in(x: -51, y: 34, name: \"execute\") trigger() execute_e8d2c7\n            in(x: -55, y: 29, name: \"input\") property(Number) input_5f1d35\n\n            out(x: 1234, y: 23, name: \"then\") trigger() then_d9a3d0\n            out(x: 118, y: 28, name: \"else\") trigger() else_c6c8c7\n            out(x: 1234, y: 23, name: \"value\") property(Bool) value_8f5b55\n\n        }\n\n        instance(x: -41, y: 37, name: \"modulo\") Std.Math.Modulo {}\n        input_5f1d35 -> modulo.right\n        2 -> modulo.divisor\n        modulo.result -> then_d9a3d0.value\n    }\n\n    \n\n    instance(x: 56, y: 14) is_even_4e6f32 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -34, y: 48, name: \"number\") property(Number) number_5f1b3d\n\n        out(x: 0, y: 29, name: \"result\") property(Bool) result_a8a4e6\n\n        instance(x: -63, y: 24, name: \"is_even\") Std.If {\n            in(x: 2, y: 11, name: \"execute\") trigger() execute_3f7d5b\n            in(x: 1, y: 10, name: \"input\") property(Number) input_0a6c21\n\n            out(x: 2, y: 4, name: \"then\") trigger() then_8e31b\n            out(x: 1, y: 9, name: \"else\") trigger() else_1f3df7\n        }\n        instance(x: -65, y: 18) modulo_4c2d43 root.Std_k98ojb.Math.Modulo {}\n        number_5f1b3d -> modulo_4c2d43.value\n        0 -> modulo_4c2d43.divisor\n        modulo_4c2d43.result -> is_even.predicate\n        else_1f3df7.result -> result_a8a4e6\n        then_8e31b.result -> result_a8a4e6\n    }\n\n    \n\n    instance(x: -67, y: 11) is_even_60ed25 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -32, y: 63, name: \"number\") property(Number) number_5a7d41\n\n        out(x: 0, y: 13, name: \"output\") property(Bool) output_4f3e2c\n\n        instance(x: 21, y: 53) modulo_9b9f48 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 23, y: 52) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 17, y: 58) lessThanOrEqual_8d7c4a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 11, y: 54) isnumeric_0e2b3d root.Std_k98ojb.Strings.IsNumeric {}\n\n        modulo_9b9f48.result -> not_75283f\n        number_5a7d41 -> modulo_9b9f48.value\n        lessThanOrEqual_8d7c4a.left -> modulo_9b9f48.divisor\n        0 -> lessThanOrEqual_8d7c4a.right\n        isnumeric_0e2b3d.is_numeric -> not_75283f.input\n        not_75283f.result -> output_4f3e2c\n        modulo_9b9f48.result -> output_4f3e2c\n    }\n\n    \n\n    instance(x: -42, y: 35) is_even_0bf7d6 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -73, y: 46, name: \"input\") property(Number) input_0e34d4\n\n        out(x: 1745, y: 38, name: \"output\") property(Bool) output_bf2a25\n\n        instance(x: 129, y: 42) modulo_8f1b67 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1034, y: 36) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: -31, y: 40) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n\n        modulo_8f1b67.divisor = 2\n        input_0e34d4 -> modulo_8f1b67.value\n        modulo_8f1b67.result -> not_75283f.left\n        greaterthan_cb50ae.right = 0\n        input_0e34d4 -> greaterthan_cb50ae.left\n        greaterthan_cb50ae.result -> is_even.predicate\n        not_75283f.result -> output_bf2a25\n    }\n\n    \n\n    instance(x: -56, y: 21) is_even_1c7a41 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -565, y: 21, name: \"number\") property(Number) number_9d0f14\n\n        out(x: 1463, y: -26, name: \"output\") property(Bool) output_f8c34e\n\n        instance(x: -63, y: 44) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1024, y: 33) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 2009, y: 46) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: -193, y: 44) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % 2 == 0)\"\n        }\n        instance(x: 1119, y: 46) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: -196, y: 33) or_4d45c1 root.Std_k98ojb.Logic.Or {}\n        instance(x: 201, y: 44) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        number_9d0f14 -> modulo_c76d2b.value\n        0 -> notequal_7836b4.right\n        notequal_7836b4.result -> or_4d45c1.left\n        sub_852f2e.first -> expression_b720d7.gen_1\n        number_9d0f14 -> expression_b720d7.gen_0\n        if_e19a62.then -> or_4d45c1.input\n        0 -> if_e19a62.execute\n        or_4d45c1.result -> output_f8c34e\n    }\n\n    \n\n    instance(x: -196, y: -5) is_even_2bda30 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -493, y: 24, name: \"number\") property(Number) number_0f5f2d\n\n        out(x: 1281, y: 16, name: \"output\") property(Bool) output_b6c7e9\n\n        instance(x: -64, y: 19) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 189, y: 17) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 106, y: 20) equal_3c34e4 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -62, y: 18) islower_7a0d85 root.Std_k98ojb.Strings.IsLowerCase {}\n        instance(x: -49, y: 21) numberfromstring_e6f2e1 root.Std_k98ojb.Math.NumberFromString {}\n\n        modulo_c76d2b.result -> not_75283f\n        number_0f5f2d -> modulo_c76d2b.value\n        not_75283f.input -> equal_3c34e4.left\n        equal_3c34e4.right -> output_b6c7e9\n        islower_7a0d85.input -> numberfromstring_e6f2e1.input\n        numberfromstring_e6f2e1.result -> equal_3c34e4.value\n    }\n\n    \n\n    instance(x: -27, y: 16) is_even_5e38e9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_5f3d4e\n\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_e9b1df\n\n        instance(x: 354, y: -53, name: \"is even\") Std.If {\n            in(x: -76, y: 46, name: \"execute\") trigger() execute_5e4d35\n            in(x: -53, y: -214, name: \"input\") property(Number) input_5f3d4e\n\n            out(x: 1748, y: -10, name: \"then\") trigger() then_1b7a5c\n            out(x: 1894, y: 120, name: \"else\") trigger() else_2f8c55\n            out(x: 1748, y: -10, name: \"value\") property(Bool) value_4d34e9\n        }\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_5f3d4e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 1748, y: -10, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_5f3d4e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_5f3d4e -> expression_9fba8c.gen_0\n        input_5f3d4e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_d0fd24\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -67, y: -37) is_even_f21f44 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -28, y: 26, name: \"input\") property(Number) input_9e5d3f\n\n        out(x: 1946, y: 44, name: \"output\") property(Bool) output_4b2c8a\n\n        instance(x: 101, y: -10, name: \"is_even\") Std.If {\n            in(x: 0, y: 0, name: \"execute\") trigger() execute_98e1d6\n            in(x: 0, y: 0, name: \"input\") property(Number) input_9e5d3f\n            out(x: 0, y: 0, name: \"then\") trigger() then_8c4b63\n            out(x: 0, y: 0, name: \"else\") trigger() else_34a2bb\n            out(x: 0, y: 0, name: \"value\") property(Number) value_6f1d5e\n        }\n        instance(x: -30, y: 38) modulo_4b9c77 root.Std_k98ojb.Math.Modulo {}\n        input_9e5d3f -> modulo_4b9c77.value\n        2 -> modulo_4b9c77.divisor\n        if(input_9e5d3f % 2 == 0) {\n            then_8c4b63.execute()\n        } else {\n            else_34a2bb.execute()\n        }\n        modulo_4b9c77.result -> value_6f1d5e\n    }\n\n    \n\n    instance(x: -67, y: 39) is_even_7bf55f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -527, y: 438, name: \"number\") property(Number) num_2d4a0e\n\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_7cdd45\n\n        instance(x: -303, y: -205, name: \"is even\") Std.If {\n            in(x: -30, y: -25, name: \"input\") trigger() input_a2e4b1\n            in(x: 0, y: 0, name: \"then\") trigger() then_5f7a3c\n            out(x: 0, y: 0, name: \"value\") property(Number) value_56d87d\n\n            instance(x: -24, y: 25, name: \"number is even\") Std.IfExpression {\n                expression: \"(n % 2 == 0)\"\n                in(x: -30, y: -25, name: \"input\") property(Number) input_a2e4b1\n                out(x: 0, y: 0, name: \"value\") property(Bool) value_56d87d\n\n            } -> then_5f7a3c.handler\n        }\n        num_2d4a0e -> is_even.input\n        is_even.then -> output_7cdd45\n    }\n\n    \n\n    instance(x: -67, y: -37) is_even_eb8f32 root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -272, y: 151, name: \"string\") property(String) input_0\n\n        out(x: 542, y: -2, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> output_ebef81\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -233, y: 19, name: \"string\") property(String) input_0\n\n        out(x: 113, y: -2, name: \"output\") property(Any) output_1b5f8d\n\n        instance(x: 45, y: 17) characters_6a6c3e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 216, y: 23) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 365, y: -5) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_6a6c3e.characters -> tolower_2e1444.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> output_1b5f8d\n    }\n\n    \n\n    instance(x: -241, y: 169) ContainsZ_9c43af root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -344, y: 0, name: \"string\") property(String) input_4\n\n        out(x: 1033, y: -2, name: \"result\") property(Any) result_1\n\n        instance(x: 41, y: 36) tolower_9d7e13 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 194, y: 25, name: \"count\") Std_k98ojb.Count {}\n        instance(x: 315, y: -15, name: \"map\") Iteration.Map {}\n        instance(x: 436, y: 0) characters_9e5a3c root.Std_k98ojb.Strings.Characters {}\n        tolower_9d7e13.output -> characters_9e5a3c.input\n        input_4 -> tolower_9d7e13.input\n        map.handler -> Iteration.Map.find_char\n        characters_9e5a3c.characters -> count.items\n        count.reset -> map.next\n        map.on item -> count.count\n        map.done -> result_1\n    }\n\n    \n\n    instance(x: 44, y: 62) first_repeated_char_8bfcf6 root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -304, y: 166, name: \"string\") property(String) input_1\n\n        out(x: 760, y: -2, name: \"output\") property(Any) output_bdfc45\n\n        instance(x: 0, y: 0) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 532, y: -121) count_5c6a8f root.Std_k98ojb.Std.Count {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_1 -> tolower_2e1444.input\n        contains_d42dce.result -> count_5c6a8f.reset\n        0 -> count_5c6a8f.count\n        count_5c6a8f.value -> output_bdfc45\n    }\n\n    \n\n    instance(x: -82, y: 199) first_repeated_char_7d4e3b root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -312, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 1009, y: -1, name: \"continue\") trigger() continue_4d7b2\n        out(x: 1045, y: 216, name: \"output\") property(String) output_8fbd3c\n\n        instance(x: 0, y: 0) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 240, y: -23) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 456, y: 19) map_e6f7c5 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 565, y: -27) if_7c284f root.Std_k98ojb.Std.If {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> continue_4d7b2\n        map_e6f7c5.handler -> if_7c284f.execute\n        input_0 -> map_e6f7c5.items\n        if_7c284f.else -> continue_4d7b2\n        contains_d42dce.contains -> if_7c284f.predicate\n        tolower_2e1444.input -> map_e6f7c5.input\n        map_e6f7c5.value -> output_8fbd3c\n    }\n\n    \n\n    instance(x: -273, y: 155) first_repeated_char_f0d1ec root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -292, y: 0, name: \"string\") property(String) input_2\n\n        out(x: 1113, y: -368, name: \"output\") property(Any) output_e74a15\n\n        instance(x: 54, y: 38) characters_6c8d33 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 40) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -121, y: 76) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_2 -> tolower_2e1444.input\n        characters_6c8d33.characters -> contains_d42dce.contains\n        contains_d42dce.result -> output_e74a15\n        tolower_2e1444.output -> output_e74a15\n    }\n\n    \n\n    instance(x: 59, y: 52) ContainsZ_f5c0f9 root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -275, y: 151, name: \"string\") property(String) input_0\n\n        out(x: 510, y: -3, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 57, y: 123) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 255, y: 121, name: \"char_count\") std_k98ojb.Std.Count {}\n        instance(x: 417, y: -26, name: \"map_char\") Iteration.Map {}\n        tolower_2e1444.output -> map_char.handler\n        input_0 -> tolower_2e1444.input\n        char_count.reset -> map_char.trigger\n        map_char.onItem -> char_count.trigger\n        map_char.item -> char_count.value\n        char_count.count -> map_char.index\n        map_char.done -> char_count.trigger\n        instance(x: 74, y: -83) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        tolower_2e1444.output -> equal_aabb6e.left\n        input_0 -> equal_aabb6e.right\n        equal_aabb6e.result -> output_ebef81\n    }\n\n    \n\n    instance(x: -191, y: 166) first_repeated_char_5d4a66 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -246, y: 0, name: \"string\") property(String) input_4\n\n        out(x: 1013, y: -2, name: \"output\") property(Any) output_1d6a66\n\n        instance(x: 54, y: 0) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 219, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_4 -> tolower_2e1444.input\n        contains_d42dce.result -> output_1d6a66\n        instance(x: 340, y: -102) map_e0fdd9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 472, y: 74) if_7c284f root.Std_k98ojb.Std.If {}\n        tolower_2e1444.input -> map_e0fdd9.handler\n        \"a\" -> map_e0fdd9.handler\n        map_e0fdd9.output_list -> if_7c284f.handler\n        input_4 -> if_7c284f.input\n        contains_d42dce.result -> if_7c284f.predicate\n        if_7c284f.else -> map_e0fdd9.next\n        map_e0fdd9.item -> if_7c284f.right\n        if_7c284f.then -> output_1d6a66.execute\n    }\n\n    \n\n    instance(x: -278, y: 165) first_repeated_char_f55b5f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -248, y: 20, name: \"string\") property(String) input_1\n\n        out(x: 1049, y: 16, name: \"output\") property(Any) output_3d4a59\n\n        instance(x: 0, y: 25) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -13, y: 45, name: \"map_9f5c8e\") Iteration.Map {}\n        instance(x: 113, y: 43) characters_3a0dd6 root.Std_k98ojb.Strings.Characters {}\n        tolower_2e1444.output -> characters_3a0dd6.input\n        input_1 -> tolower_2e1444.input\n        characters_3a0dd6.characters -> map_9f5c8e.items\n        instance(x: 0, y: 34) if_7c284f root.Std_k98ojb.Std.If {}\n        instance(x: -233, y: 27) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        tolower_2e1444.output -> equal_aabb6e.left\n        map_9f5c8e.items[0] -> equal_aabb6e.right\n        if_7c284f.execute -> equal_aabb6e.predicate\n        1 -> if_7c284f.value\n        characters_3a0dd6.characters[0] -> if_7c284f.value\n        map_9f5c8e.items[0] -> if_7c284f.right\n        map_9f5c8e.items[1] -> if_7c284f.left\n        equal_aabb6e.result -> if_7c284f.predicate\n        characters_3a0dd6.characters[0] -> output_3d4a59\n    }\n\n    \n\n    instance(x: -296, y: 175) first_repeated_char_1b91d9 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -233, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 555, y: -1, name: \"continue\") trigger() continue_4d9c9\n        out(x: 1035, y: 209, name: \"output\") property(String) output_ebe8f2\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> output_ebe8f2\n        input_0 -> tolower_2e1444.input\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -243, y: 17, name: \"list\") property(List) list_a8f6d4\n\n        out(x: 313, y: 26, name: \"second_min\") property(Number) second_min_7e3d5b\n\n        instance(x: 0, y: 0) first_smallest_node root.Std_k98ojb.List.Min {}\n        instance(x: -142, y: 45) second_smallest_node root.Std_k98ojb.List.Min {}\n        list_a8f6d4 -> first_smallest_node.items\n        list_a8f6d4 -> second_smallest_node.items\n\n        instance(x: 0, y: 0) ifexpression_5c9e0a root.Std_k98ojb.Std.IfExpression {\n            expression: \"first_smallest < second_smallest\"\n        }\n        first_smallest_node.min -> Std_k98ojb.Count.reset\n        second_smallest_node.min -> Std_k98ojb.Count.reset\n        first_smallest_node.min -> Std_k98ojb.Count.increment\n        second_smallest_node.min -> Std_k98ojb.Count.increment\n        ifexpression_5c9e0a.then -> second_smallest_node.min\n        list_a8f6d4 -> first_smallest_node.result\n        list_a8f6d4 -> second_smallest_node.result\n        first_smallest_node.min -> second_min_7e3d5b\n    }\n\n    \n\n    instance(x: -59, y: 121) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -275, y: 3, name: \"list\") property(List) list_9d6a43\n\n        out(x: 439, y: 63, name: \"second_min\") property(Number) second_min_1b9e5c\n        instance(x: 0, y: 0) min_8f2ed4 root.Std_k98ojb.List.Min {}\n        instance(x: -103, y: 58) find_bf2a71 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 109, y: 40) ifexpression_3c22f9 root.Std_k98ojb.Std.IfExpression {}\n        list_9d6a43 -> min_8f2ed4.items\n        min_8f2ed4.min -> second_min_1b9e5c\n        find_bf2a71.item -> second_min_1b9e5c\n        ifexpression_3c22f9.then -> min_8f2ed4.reset\n        list_9d6a43[0] -> min_8f2ed4.left\n        list_9d6a43[1] -> min_8f2ed4.right\n        second_min_1b9e5c -> find_bf2a71.item\n    }\n\n    \n\n    instance(x: -31, y: 534) second_smallest_6db55 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -271, y: 0, name: \"list\") property(List) list_8d6b3f\n\n        out(x: 1035, y: -1, name: \"number\") property(Number) number_9e74c7\n        instance(x: 1094, y: 43) find_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -110, y: 29, name: \"elem\") property(Number) elem_1f2d0a\n\n            out(x: 517, y: 39, name: \"bool\") property(Bool) bool_f9e7c8\n\n            instance(x: 93, y: 27) min_node root.Std_k98ojb.List.Min {}\n            instance(x: 305, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            min_node.result -> notequal_807ffd.left\n            1 -> notequal_807ffd.context\n            elem_1f2d0a -> notequal_807ffd.item\n            notequal_807ffd.result -> bool_f9e7c8\n        } -> find_node.predicate\n        list_8d6b3f -> find_node.items\n        find_node.item -> number_9e74c7\n    }\n\n    \n\n    instance(x: -46, y: 527) second_smallest_b0a1df root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -208, y: 3, name: \"list\") property(List) list_9a7d25\n\n        out(x: 313, y: 44, name: \"second_min\") property(Number) second_min_2b1e5f\n        instance(x: 0, y: 0) find_second_smallest_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -102, y: 24, name: \"elem\") property(Number) elem_4c8d9a\n\n            out(x: 519, y: 34, name: \"bool\") property(Bool) bool_5f1e3b\n\n            instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: 35) min_node root.Std_k98ojb.List.Min {}\n            0 -> notequal_807ffd.right\n            min_node.min -> second_min_2b1e5f\n            elem_4c8d9a -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_5f1e3b\n        } -> find_second_smallest_node.predicate\n        list_9a7d25 -> find_second_smallest_node.items\n        find_second_smallest_node.item -> second_min_2b1e5f\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_f6c0f3 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -284, y: 2, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n        out(x: 0, y: 0, name: \"min_count\") property(Number) min_count_ae9d5f\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n\n            instance(x: -112, y: 33) less_than_8b4bf6 root.Std_k98ojb.Math.LessThan {}\n            instance(x: -105, y: -110) min_count_node root.Std_k98ojb.Count {}\n            1 -> less_than_8b4bf6.left\n            elem_9f6850 -> less_than_8b4bf6.right\n            2 -> less_than_8b4bf6.result\n            less_than_8b4bf6.result -> min_count_node.reset\n            1 -> min_count_node.count\n            elem_9f6850 -> min_count_node.value\n            min_count_node.length -> min_count_ae9d5f\n\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -388, y: 3, name: \"list\") property(List) list_8f5e1a\n\n        out(x: 47, y: -209, name: \"min\") property(Number) min_a9b6d7\n        out(x: 0, y: -228, name: \"second_min\") property(Number) second_min_8dfc30\n\n        instance(x: 105, y: -210) first_smallest_5e4a41 root.Std_k98ojb.List.Min {}\n        list_8f5e1a -> first_smallest_5e4a41.items\n        first_smallest_5e4a41.min -> min_a9b6d7\n\n        instance(x: 0, y: -225) second_smallest_node root.Std_k98ojb.List.Sort {}\n        list_8f5e1a -> second_smallest_node.list\n        second_smallest_node.sorted_list[1] -> second_min_8dfc30\n    }\n\n    \n\n    instance(x: 340, y: 567) second_smallest_2d9d4f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -208, y: 0, name: \"list\") property(List) list_a2a3d8\n\n        out(x: 341, y: -1, name: \"second_min\") property(Number) second_min_7c869f\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -112, y: 31, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_a2a3d8 -> find_6d05b0.items\n        find_6d05b0.item -> second_min_7c869f\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -274, y: 6, name: \"list\") property(List) list_9d3e5f\n\n        out(x: 442, y: 15, name: \"second_min\") property(Number) second_min_8b4c0a\n\n        instance(x: 0, y: 0) min_1bfcf7 root.Std_k98ojb.List.Min {}\n        instance(x: -109, y: 25) max_9d2c76 root.Std_k98ojb.List.Max {}\n        list_9d3e5f -> min_1bfcf7.items\n        list_9d3e5f -> max_9d2c76.items\n        min_1bfcf7.min -> second_min_8b4c0a\n        max_9d2c76.max -> second_min_8b4c0a\n    }\n\n    \n\n    instance(x: -34, y: 528) second_smallest_b2e8bf root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -245, y: 0, name: \"list\") property(List) list_5a4f6d\n\n        out(x: -273, y: 54, name: \"min\") property(Number) min_3e8c23\n        out(x: -274, y: 47, name: \"second_min\") property(Number) second_min_9df1eb\n\n        instance(x: 0, y: 0) list_sort_node root.Std_k98ojb.List.Sort {}\n        list_5a4f6d -> list_sort_node.items\n        list_sort_node.sorted_list -> min_3e8c23\n        ifexpression_7a2b34(root.Std_k98ojb.Std.IfExpression {\n            expression: \"min < second_min\"\n        }) -> list_sort_node.sorted_list\n        instance(x: 0, y: 0) find_5d4f1f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -114, y: 21, name: \"elem\") property(Number) elem_1e3c6a\n\n            out(x: 499, y: 31, name: \"bool\") property(Bool) bool_b1f8eb\n            instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: 35) min_3e8c23 -> notequal_807ffd.left\n            2 -> notequal_807ffd.right\n            elem_1e3c6a -> notequal_807ffd.it\n            notequal_807ffd.result -> bool_b1f8eb\n        } -> find_5d4f1f.predicate\n        min_3e8c23 -> second_min_9df1eb\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2a7af0 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -509, y: 6, name: \"list\") property(List) list_a4f8b9\n\n        out(x: 113, y: 55, name: \"second_min\") property(Number) second_min_1d5c0a\n\n        instance(x: 111, y: 36) first_smallest_node root.Std_k98ojb.List.Min {}\n        list_a4f8b9 -> first_smallest_node.items\n        first_smallest_node.min -> smallest_node_6e7f2d\n        instance(x: -234, y: 18) second_smallest_node root.Std_k98ojb.List.SortOn {}\n        second_smallest_node.key = \"value\"\n        list_a4f8b9 -> second_smallest_node.list\n        second_smallest_node.sorted_list -> sorted_list_7e3a5c\n        instance(x: -234, y: 18) ifexpression_98d6eb root.Std_k98ojb.Std.IfExpression {}\n        expression: \"smallest_node.min < second_min\"\n        smallest_node_6e7f2d -> ifexpression_98d6eb.gen_0\n        sorted_list_7e3a5c[1] -> ifexpression_98d6eb.gen_1\n        ifexpression_98d6eb.then -> second_smallest_node.sorted_list\n        smallest_node_6e7f2d -> second_smallest_node.sorted_list[0]\n        ifexpression_98d6eb.else -> second_smallest_node.sorted_list\n    }\n\n    \n\n    instance(x: -114, y: 269) second_smallest_node_1a66b4 root.main.second_smallest {}\n}"
            ]
        }
    }
]