[
    {
        "experiment_name": "regular_RAG_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15933,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -176, y: 12, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -177, y: -124, name: \"list2\") property(List) list2_eb0d7c\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_5e6f4e\n\n        instance(x: 133, y: -131) intersection_3a1c9c root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2f9e -> intersection_3a1c9c.left\n        list2_eb0d7c -> intersection_3a1c9c.right\n        instance(x: 360, y: -95) notempty_5f6f4c root.Std_k98ojb.List.NotEmpty {}\n        intersection_3a1c9c.intersection -> notempty_5f6f4c.list\n        notempty_5f6f4c.isEmpty -> output_5e6f4e\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_7d0b8f root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -176, y: 18, name: \"list1\") property(List) list1_4e9f8a\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_eb7c6d\n\n        out(x: 505, y: -50, name: \"has_common_element\") property(Bool) has_common_element_1b0e3f\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_5a9c8e root.Std_k98ojb.Sets.Intersection {}\n        list1_4e9f8a -> intersection_5a9c8e.left\n        list2_eb7c6d -> intersection_5a9c8e.right\n        instance(x: 487, y: -48) notempty_3e9f0f root.Std_k98ojb.List.NotEmpty {}\n        intersection_5a9c8e.intersection -> notempty_3e9f0f.list\n        notempty_3e9f0f.isEmpty -> has_common_element_1b0e3f\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_7d4b6a root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -277, y: 166, name: \"list1\") property(List) list_09fcba\n        in(x: -277, y: 56, name: \"list2\") property(List) list_0b7f6a\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_edc2e3\n\n        instance(x: 532, y: 147) intersection_c9d1d8 root.Std_k98ojb.Sets.Intersection {}\n        list_09fcba -> intersection_c9d1d8.left\n        list_0b7f6a -> intersection_c9d1d8.right\n        instance(x: 100, y: 147) notempty_5c2e4f root.Std_k98ojb.List.NotEmpty {}\n        intersection_c9d1d8.intersection -> notempty_5c2e4f.list\n        notempty_5c2e4f.isEmpty -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) common_element_f53d27 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -179, y: 18, name: \"list1\") property(List) list1_9e2f8a\n        in(x: -167, y: -120, name: \"list2\") property(List) list2_7c6d5b\n\n        out(x: 505, y: -50, name: \"has_common_element\") property(Bool) has_common_element_9e1f3a\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_4f0b2a root.Std_k98ojb.Sets.Intersection {}\n        list1_9e2f8a -> intersection_4f0b2a.left\n        list2_7c6d5b -> intersection_4f0b2a.right\n        instance(x: 188, y: -50) notempty_3b2b9a root.Std_k98ojb.List.NotEmpty {}\n        intersection_4f0b2a.intersection -> notempty_3b2b9a.list\n        notempty_3b2b9a.isEmpty -> has_common_element_9e1f3a\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_aad0c2 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -176, y: 18, name: \"list1\") property(List) list1_8e9f0a\n        in(x: -161, y: -121, name: \"list2\") property(List) list2_e5b3c7\n\n        out(x: 505, y: -50, name: \"has_common_element\") property(Bool) has_common_element_6d8e4f\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_9a0e1f root.Std_k98ojb.Sets.Intersection {}\n        list1_8e9f0a -> intersection_9a0e1f.left\n        list2_e5b3c7 -> intersection_9a0e1f.right\n        instance(x: 443, y: -50) notempty_6d4b8f root.Std_k98ojb.List.NotEmpty {}\n        intersection_9a0e1f.intersection -> notempty_6d4b8f.list\n        notempty_6d4b8f.isEmpty -> has_common_element_6d8e4f\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_aad0c2 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -178, y: 18, name: \"list1\") property(List) list1_4a8b6f\n        in(x: -181, y: -123, name: \"list2\") property(List) list2_7c0e3d\n\n        out(x: 555, y: -98, name: \"output\") property(Bool) output_9e5c4a\n\n        instance(x: 146, y: -96) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_4a8b6f -> intersection_c7c7e6.left\n        list2_7c0e3d -> intersection_c7c7e6.right\n        instance(x: 360, y: -95) notempty_9f5b4a root.Std_k98ojb.List.NotEmpty {}\n        intersection_c7c7e6.intersection -> notempty_9f5b4a.list\n        notempty_9f5b4a.isEmpty -> output_9e5c4a\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_ac7dfb root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -177, y: 19, name: \"list1\") property(List) list1_3e9f0a\n        in(x: -167, y: -125, name: \"list2\") property(List) list2_8b7d5c\n\n        out(x: 555, y: -98, name: \"output\") property(Bool) output_6f4a1e\n\n        instance(x: 145, y: -96) intersection_c9f3c0 root.Std_k98ojb.Sets.Intersection {}\n        list1_3e9f0a -> intersection_c9f3c0.left\n        list2_8b7d5c -> intersection_c9f3c0.right\n        instance(x: 355, y: -97) notempty_4b1b9a root.Std_k98ojb.List.NotEmpty {}\n        intersection_c9f3c0.intersection -> notempty_4b1b9a.list\n        notempty_4b1b9a.isEmpty -> output_6f4a1e\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_7f8d2a root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -178, y: 18, name: \"list1\") property(List) list1_4a8b9f\n        in(x: -166, y: -121, name: \"list2\") property(List) list2_7c0e6d\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_5e1e7a\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_f3b46d root.Std_k98ojb.Sets.Intersection {}\n        list1_4a8b9f -> intersection_f3b46d.left\n        list2_7c0e6d -> intersection_f3b46d.right\n        instance(x: 188, y: -50) notempty_852f2e root.Std_k98ojb.List.NotEmpty {}\n        intersection_f3b46d.intersection -> notempty_852f2e.list\n        notempty_852f2e.isEmpty -> output_5e1e7a\n    }\n\n    \n\n    instance(x: -138, y: -63) common_element_aad0c2 root.main.common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -172, y: 18, name: \"list1\") property(List) list1_94ca93\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_aa3106\n\n        out(x: 505, y: -50, name: \"has_common_element\") property(Bool) has_common_element_20b99a\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_06d2e5 root.Std_k98ojb.Sets.Intersection {}\n        list1_94ca93 -> intersection_06d2e5.left\n        list2_aa3106 -> intersection_06d2e5.right\n        instance(x: 188, y: -50) notempty_c4f8c9 root.Std_k98ojb.List.NotEmpty {}\n        intersection_06d2e5.intersection -> notempty_c4f8c9.list\n        notempty_c4f8c9.isEmpty -> has_common_element_20b99a\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_aad0c2 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -175, y: 10, name: \"list1\") property(List) list1_3e6b8a\n        in(x: -165, y: -123, name: \"list2\") property(List) list2_7f0c9d\n\n        out(x: 504, y: -57, name: \"output\") property(Bool) output_4e1b5f\n\n        instance(x: 219, y: -55, name: \"intersection\") intersection_8a3f7c root.Std_k98ojb.Sets.Intersection {}\n        list1_3e6b8a -> intersection_8a3f7c.left\n        list2_7f0c9d -> intersection_8a3f7c.right\n        instance(x: 440, y: -57) notempty_f5f1ed root.Std_k98ojb.List.NotEmpty {}\n        intersection_8a3f7c.intersection -> notempty_f5f1ed.list\n        notempty_f5f1ed.isEmpty -> output_4e1b5f\n    }\n\n    \n\n    instance(x: -135, y: 43) has_common_element_6d9c0f root.main.has_common_element {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 3, name: \"list\") property(List) list_9a8f1e\n\n        out(x: 1227, y: 2, name: \"output\") property(Bool) output_eb0d5c\n\n        instance(x: 772, y: 76) filter_6e4f9f root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: -320, y: 35, name: \"sorted list\") sort_3a7c2d root.Std_k98ojb.List.Sort {}\n        instance(x: 146, y: -96) length_8f9e4f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) lessthanorequal_5b1d6a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1057, y: 93) ifexpression_c0e9f8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        instance(x: -275, y: -35) getat_5c6d4a root.Std_k98ojb.List.GetAt {}\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_7a8e3b root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        ifexpression_c0e9f8.else -> output_eb0d5c\n        ifexpression_c0e9f8.value -> output_eb0d5c\n        list_9a8f1e -> filter_6e4f9f.list\n        filter_6e4f9f.result -> sort_3a7c2d.list\n        sort_3a7c2d.sortedList -> length_8f9e4f.list\n        sort_3a7c2d.sortedList -> for_7a8e3b.items\n        for_7a8e3b.item -> ifexpression_c0e9f8.gen_2\n        for_7a8e3b.index -> ifexpression_c0e9f8.gen_0\n        getter_b280eb.value -> ifexpression_c0e9f8.gen_1\n        for_7a8e3b.onItem -> ifexpression_c0e9f8.execute\n        for_7a8e3b.done -> output_eb0d5c\n        for_7a8e3b.item -> setter_9d4f1c.new_value\n        sort_3a7c2d.sortedList -> getat_5c6d4a.list\n        0 -> getat_5c6d4a.index\n        getat_5c6d4a.itemAtIndex -> setter_38e107.new_value\n        length_8f9e4f.length -> lessthanorequal_5b1d6a.left\n        2 -> lessthanorequal_5b1d6a.right\n        lessthanorequal_5b1d6a.result -> ifexpression_c0e9f8.execute\n        setter_38e107.continue -> for_7a8e3b.reset\n        setter_9d4f1c.continue -> for_7a8e3b.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_f5b2e6 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 3, name: \"list\") property(List) list_1a8f9e\n\n        out(x: 557, y: -2, name: \"output\") property(Bool) output_5b0c7d\n\n        instance(x: 146, y: 0) sort_b6a4ef root.Std_k98ojb.List.Sort {}\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 679, y: 51) lessthan_7f8d1c root.Std_k98ojb.Math.LessThan {}\n        instance(x: 1058, y: -203) and_9e2a4f root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -400) if_e19a62 root.Std_k98ojb.Std.If {}\n        sort_b6a4ef.sorted -> for_d26972.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) add_c76d2b root.Std_k98ojb.Math.Add {}\n            instance(x: 285, y: -25) lessthan_cb8a55 root.Std_k98ojb.Math.LessThan {}\n            current_81298e -> lessthan_cb8a55.left\n            for_d26972.index -> add_c76d2b.first\n            1 -> add_c76d2b.second\n            add_c76d2b.result -> lessthan_cb8a55.right\n            lessthan_cb8a55.result -> bool_4524be\n        } -> and_9e2a4f.left\n        for_d26972.index -> lessthan_7f8d1c.left\n        0 -> lessthan_7f8d1c.right\n        lessthan_7f8d1c.result -> and_9e2a4f.right\n        and_9e2a4f.result -> if_e19a62.predicate\n        for_d26972.onItem -> if_e19a62.execute\n        if_e19a62.else -> output_5b0c7d\n        false -> output_5b0c7d\n        for_d26972.done -> output_5b0c7d\n        list_1a8f9e -> sort_b6a4ef.list\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_a3c2a1 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 0, name: \"list\") property(List) list_1e3f8a\n\n        out(x: 1217, y: 15, name: \"output\") property(Bool) output_eb9c4d\n\n        instance(x: 1016, y: -5) filter_2a7f0c root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: 1018, y: 77) sort_3e7b4d root.Std_k98ojb.List.Sort {}\n        instance(x: 1032, y: 153) map_f6a5f9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1040, y: 231) zip_1c8a2f root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 1054, y: 307) filter_7d3e9f root.Std_k98ojb.Query.Filter {\n            where: \"it[0] + 1 == it[1]\"\n        }\n        instance(x: 1066, y: 385) length_8c2a5c root.Std_k98ojb.List.Length {}\n        instance(x: 1084, y: 461) greaterthan_9e3d7f root.Std_k98ojb.Math.GreaterThan {}\n        list_1e3f8a -> filter_2a7f0c.list\n        filter_2a7f0c.result -> sort_3e7b4d.list\n        sort_3e7b4d.sortedList -> map_f6a5f9.items\n        func() {\n            in(x: -121, y: 119, name: \"current\") property(Number) current_8a2b0c\n\n            out(x: 701, y: 118, name: \"\") property(List) _1d7e4e6\n\n            instance(x: 94, y: 103) generaterange_5f3f9f root.Std_k98ojb.List.GenerateRange {}\n            current_8a2b0c -> generaterange_5f3f9f.to\n            0 -> generaterange_5f3f9f.from\n            generaterange_5f3f9f.list -> _1d7e4e6\n        } -> map_f6a5f9.handler\n        map_f6a5f9.output_list -> zip_1c8a2f.left\n        sort_3e7b4d.sortedList -> zip_1c8a2f.right\n        func() {\n            in(x: -121, y: 119, name: \"left\") property(List) left_6f0c9f\n\n            in(x: -121, y: 119, name: \"right\") property(List) right_5e3b7d\n\n            out(x: 701, y: 118, name: \"\") property(List) _1d7e4e6\n\n            instance(x: 94, y: 103) concat_2f9a0c root.Std_k98ojb.List.Concat {}\n            left_6f0c9f -> concat_2f9a0c.left\n            right_5e3b7d -> concat_2f9a0c.right\n            concat_2f9a0c.listWithItem -> _1d7e4e6\n        } -> zip_1c8a2f.handler\n        zip_1c8a2f.zipped -> filter_7d3e9f.list\n        filter_7d3e9f.result -> greaterthan_9e3d7f.left\n        length_8c2a5c.length -> greaterthan_9e3d7f.right\n        list_1e3f8a -> length_8c2a5c.list\n        filter_7d3e9f.result -> output_eb9c4d\n    }\n\n    \n\n    instance(x: -84, y: 127) is_consecutive_f6f8c0 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -277, y: 2, name: \"list\") property(List) list_1e9d8a\n\n        out(x: 800, y: -3, name: \"output\") property(Bool) output_7f6b0c\n\n        instance(x: 532, y: -4) reduce_7b2f9f root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -113, y: 34, name: \"acc\") property(Bool) acc_1e8d0c\n            in(x: -192, y: 84, name: \"current\") property(Number) current_7f5b9a\n\n            out(x: 698, y: 44, name: \"\") property(Bool) _2c3a8a\n\n            instance(x: 112, y: 29) sub_1e4d8f root.Std_k98ojb.Math.Sub {}\n            instance(x: 415, y: 35) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            acc_1e8d0c -> reduce_7b2f9f.accumulated\n            sub_1e4d8f.first -> current_7f5b9a\n            sub_1e4d8f.second -> reduce_7b2f9f.previousValue\n            1 -> sub_1e4d8f.second\n            equal_a54bdc.left -> sub_1e4d8f.result\n            equal_a54bdc.right -> _2c3a8a\n            _2c3a8a -> reduce_7b2f9f.accumulated\n        } -> reduce_7b2f9f.reducer\n        list_1e9d8a -> reduce_7b2f9f.items\n        true -> reduce_7b2f9f.initialValue\n        reduce_7b2f9f.result -> output_7f6b0c\n    }\n\n    \n\n    instance(x: -291, y: 177) is_consecutive_1e4d8f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -278, y: 5, name: \"list\") property(List) list_1a8f9e\n\n        out(x: 1223, y: 4, name: \"output\") property(Bool) output_e6b2c7\n\n        instance(x: 0, y: 0) filter_8d9b1c root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 252, y: -3) lessthan_5f6a7e root.Std_k98ojb.Math.LessThan {}\n        instance(x: 524, y: 1) and_9d4c8f root.Std_k98ojb.Logic.And {}\n        instance(x: 772, y: 0) ifexpression_c3f2b5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        instance(x: -272, y: -35) getat_7a8c4e root.Std_k98ojb.List.GetAt {}\n        getter(x: 335, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        ifexpression_c3f2b5.else -> output_e6b2c7\n        and_9d4c8f.result -> ifexpression_c3f2b5.value\n        lessthan_5f6a7e.result -> and_9d4c8f.left\n        1 -> lessthan_5f6a7e.right\n        filter_8d9b1c.result -> lessthan_5f6a7e.left\n        list_1a8f9e -> filter_8d9b1c.list\n        ifexpression_c3f2b5.then -> setter_9d4f1c.execute\n        getter_b280eb.value -> ifexpression_c3f2b5.gen_1\n        for_d26972.item -> ifexpression_c3f2b5.gen_2\n        for_d26972.index -> ifexpression_c3f2b5.gen_0\n        list_1a8f9e -> getat_7a8c4e.list\n        0 -> getat_7a8c4e.index\n        getat_7a8c4e.itemAtIndex -> setter_38e107.new_value\n        for_d26972.onItem -> ifexpression_c3f2b5.execute\n        for_d26972.done -> output_e6b2c7\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1a8f9e -> for_d26972.items\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_3c0f1f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 3, name: \"list\") property(List) list_1a0f2e\n\n        out(x: 1227, y: 6, name: \"output\") property(Bool) output_9c4b5d\n\n        instance(x: 772, y: 75) ifexpression_8f8f3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_9e7a6d\") getter_9e7a6d = previous\n        setter(x: 679, y: -313, name: \"setter_5c4f2b\") setter_5c4f2b = previous\n        instance(x: 321, y: -20) for_8a3a0c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_5c4f2b\") setter_1e7d6c = previous\n        instance(x: -275, y: -35) getat_9a8a3f root.Std_k98ojb.List.GetAt {}\n        ifexpression_8f8f3c.else -> continue_a96db6\n        ifexpression_8f8f3c.value -> output_5bbcd7\n        ifexpression_8f8f3c.then -> setter_5c4f2b.execute\n        list_1a0f2e -> for_8a3a0c.items\n        for_8a3a0c.item -> ifexpression_8f8f3c.gen_2\n        for_8a3a0c.index -> ifexpression_8f8f3c.gen_0\n        getter_9e7a6d.value -> ifexpression_8f8f3c.gen_1\n        for_8a3a0c.onItem -> ifexpression_8f8f3c.execute\n        for_8a3a0c.done -> continue_a96db6\n        for_8a3a0c.item -> setter_5c4f2b.new_value\n        list_1a0f2e -> getat_9a8a3f.list\n        0 -> getat_9a8a3f.index\n        getat_9a8a3f.itemAtIndex -> setter_1e7d6c.new_value\n        execute_90aaec -> setter_1e7d6c.execute\n        setter_1e7d6c.continue -> for_8a3a0c.reset\n        setter_5c4f2b.continue -> for_8a3a0c.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_9a4f7d root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 2, name: \"list\") property(List) list_1a9f0e\n\n        out(x: 1217, y: 11, name: \"output\") property(Bool) output_5b8d3c\n\n        instance(x: 772, y: 76) filter_6a4c7c root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -39, y: 26, name: \"First even number\") find_9e8f5d root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"First odd number\") ``First even number_1a7c2c`` root.Std_k98ojb.Iteration.Find {}\n        list_1a9f0e -> find_9e8f5d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_a4e3aa\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_5f8c2d root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_a4e3aa -> modulo_5f8c2d.value\n            2 -> modulo_5f8c2d.divisor\n            modulo_5f8c2d.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_9e8f5d.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_a4e3aa\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_5f8c2d root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_a4e3aa -> modulo_5f8c2d.value\n            2 -> modulo_5f8c2d.divisor\n            modulo_5f8c2d.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_1a7c2c``.predicate\n        list_1a9f0e -> ``First even number_1a7c2c``.items\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        find_9e8f5d.item -> sub_852f2e.first\n        ``First even number_1a7c2c``.item -> sub_852f2e.second\n        instance(x: 0, y: 0) for_3b6f4f root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_3b6f4f.handler\n        list_1a9f0e -> for_3b6f4f.items\n        instance(x: 532, y: 147) mul_7e1ce0 root.Std_k98ojb.Math.Mul {}\n        sub_852f2e.result -> mul_7e1ce0.first\n        2 -> mul_7e1ce0.second\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_1a9f0e -> filter_f3b46d.list\n        filter_f3b46d.result -> length_8166b0.list\n        mul_7e1ce0.result -> for_3b6f4f.index\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517) length_1a9f0e root.Std_k98ojb.List.Length {}\n        instance(x: 321, y: -20) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        filter_f3b46d.result -> length_1a9f0e.list\n        list_1a9f0e -> filter_4d4556.list\n        filter_4d4556.result -> for_3b6f4f.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            _index_769593 -> modulo_c76d2b.value\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n        } -> ifexpression_875761.handler\n        for_3b6f4f.item -> ifexpression_875761.gen_2\n        for_3b6f4f.index -> ifexpression_875761.gen_0\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_efbc78\n        length_1a9f0e.length -> equal_f89569.right\n        for_3b6f4f.onItem -> ifexpression_875761.execute\n        for_3b6f4f.done -> output_efbc78\n    }\n\n    \n\n    instance(x: -67, y: 59) is_consecutive_2c7a9d root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -280, y: 1, name: \"list\") property(List) list_0a3f5e\n\n        out(x: 1066, y: -2, name: \"output\") property(Bool) output_7b9c1d\n\n        instance(x: 0, y: 0) filter_4a8c5c root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -80, y: -35) for_3f6e9c root.Std_k98ojb.Std.For {}\n        instance(x: 224, y: -34) lessthan_f7d1a8 root.Std_k98ojb.Math.LessThan {}\n        instance(x: 446, y: -33) and_2f5c4f root.Std_k98ojb.Logic.And {}\n        instance(x: 658, y: -32) if_0e3b6c root.Std_k98ojb.Std.If {}\n        instance(x: 836, y: -34) add_ea1d7f root.Std_k98ojb.Math.Add {}\n        list_0a3f5e -> filter_4a8c5c.list\n        func() {\n            in(x: -113, y: 33, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> filter_4a8c5c.where\n        filter_4a8c5c.result -> for_3f6e9c.items\n        func() {\n            in(x: -113, y: 33, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_3f6e9c.handler\n        for_3f6e9c.item -> lessthan_f7d1a8.left\n        add_ea1d7f.result -> lessthan_f7d1a8.right\n        0 -> add_ea1d7f.second\n        for_3f6e9c.index -> add_ea1d7f.first\n        and_2f5c4f.left -> if_0e3b6c.predicate\n        lessthan_f7d1a8.result -> and_2f5c4f.right\n        1 -> and_2f5c4f.left\n        for_3f6e9c.onItem -> if_0e3b6c.execute\n        if_0e3b6c.else -> output_7b9c1d\n        true -> if_0e3b6c.then\n        for_3f6e9c.done -> output_7b9c1d\n    }\n\n    \n\n    instance(x: -55, y: 529) is_consecutive_2c856f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -277, y: 0, name: \"list\") property(List) list_1a8d5e\n\n        out(x: 443, y: -1, name: \"output\") property(Bool) output_7c9b4f\n\n        instance(x: 0, y: 0) filter_3b6c2c root.Std_k98ojb.Query.Filter {\n            where: \"it + 1 == next\"\n        }\n        instance(x: -277, y: 148, name: \"list\") map_c9e7f8 root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> map_c9e7f8.handler\n        list_1a8d5e -> map_c9e7f8.items\n        instance(x: 0, y: 0) for_4b2c3a root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> for_4b2c3a.handler\n        map_c9e7f8.output_list -> for_4b2c3a.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> filter_3b6c2c.predicate\n        for_4b2c3a.item -> filter_3b6c2c.list\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> filter_3b6c2c.handler\n        for_4b2c3a.index -> filter_3b6c2c.gen_0\n        for_4b2c3a.item -> filter_3b6c2c.gen_1\n        instance(x: 0, y: 0) find_7f8d5e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_7f8d5e.predicate\n        filter_3b6c2c.result -> find_7f8d5e.items\n        instance(x: 0, y: 0) if_e9b4d1 root.Std_k98ojb.Std.If {}\n        find_7f8d5e.item -> if_e9b4d1.predicate\n        for_4b2c3a.onItem -> if_e9b4d1.execute\n        instance(x: -277, y: 148, name: \"list\") map_6f0e2d root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> map_6f0e2d.handler\n        list_1a8d5e -> map_6f0e2d.items\n        instance(x: 0, y: 0) for_9b4c1e root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> for_9b4c1e.handler\n        map_6f0e2d.output_list -> for_9b4c1e.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -278, y: 5, name: \"list\") property(List) list_0e9d6f\n\n        out(x: 1117, y: -2, name: \"output\") property(Bool) output_8a3c1b\n\n        instance(x: 0, y: 0) for_d4e5f9 root.Std_k98ojb.Std.For {}\n        instance(x: 354, y: -10) lessthan_7d2c6f root.Std_k98ojb.Math.LessThan {}\n        instance(x: 678, y: -12) and_8a3f1e root.Std_k98ojb.Logic.And {}\n        instance(x: 1010, y: -13) if_9b5c4d root.Std_k98ojb.Std.If {}\n        instance(x: 1276, y: -14) not_7a2a3f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -111, y: 35, name: \"current\") property(Number) current_1e8c0d\n\n            out(x: 517, y: 44, name: \"bool\") property(Bool) bool_9f6a5b\n\n            instance(x: 90, y: 29) sub_3e7b2c root.Std_k98ojb.Math.Sub {}\n            instance(x: 317, y: 35) lessthan_8d4a0f root.Std_k98ojb.Math.LessThan {}\n            current_1e8c0d -> sub_3e7b2c.first\n            for_d4e5f9.index -> sub_3e7b2c.second\n            sub_3e7b2c.result -> lessthan_8d4a0f.left\n            1 -> lessthan_8d4a0f.right\n            lessthan_8d4a0f.result -> bool_9f6a5b\n        } -> for_d4e5f9.handler\n        list_0e9d6f -> for_d4e5f9.items\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(Number) current_1e8c0d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9f6a5b\n\n            instance(x: 90, y: 29) sub_3e7b2c root.Std_k98ojb.Math.Sub {}\n            instance(x: 317, y: 35) lessthan_8d4a0f root.Std_k98ojb.Math.LessThan {}\n            current_1e8c0d -> sub_3e7b2c.first\n            for_d4e5f9.index -> sub_3e7b2c.second\n            sub_3e7b2c.result -> lessthan_8d4a0f.left\n            1 -> lessthan_8d4a0f.right\n            lessthan_8d4a0f.result -> bool_9f6a5b\n        } -> lessthan_7d2c6f.left\n        for_d4e5f9.index -> lessthan_7d2c6f.right\n        and_8a3f1e.left -> if_9b5c4d.predicate\n        bool_9f6a5b -> and_8a3f1e.right\n        for_d4e5f9.onItem -> if_9b5c4d.execute\n        not_7a2a3f.result -> output_8a3c1b\n        if_9b5c4d.else -> not_7a2a3f.input\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_0e6b8f root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 11, name: \"sublist\") property(List) sublist_3f8a9e\n        in(x: -298, y: -139, name: \"list\") property(List) list_1c7b0d\n\n        out(x: 1025, y: -97, name: \"output\") property(Bool) output_6e4b8c\n\n        instance(x: 103, y: -96) contains_9f2a3 root.Std_k98ojb.List.Contains {}\n        list_1c7b0d -> contains_9f2a3.list\n        sublist_3f8a9e -> contains_9f2a3.item\n        contains_9f2a3.is_contained -> output_6e4b8c\n    }\n\n    \n\n    instance(x: -292, y: 1) is_sublist_7d5f0 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 20, name: \"sublist\") property(List) sublist_1a8f9e\n        in(x: -284, y: -160, name: \"list\") property(List) list_3b0c6d\n\n        out(x: 555, y: -119, name: \"output\") property(Bool) output_e7c4ba\n\n        instance(x: -91, y: -120, name: \"is sublist\") filter_1a8f9e root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: 5, name: \"current\") property(List) current_7c0d4\n            in(x: -23, y: 85, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 65, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 72) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 67) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_1a8f9e.handler\n        list_3b0c6d -> filter_1a8f9e.items\n        func() {\n            in(x: -192, y: 20, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: 7, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: 16) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: 18) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> sublist_1a8f9e.handler\n        filter_1a8f9e.output_list -> sublist_1a8f9e.items\n        instance(x: 146, y: -119) contains_32727d root.Std_k98ojb.List.Contains {}\n        sublist_1a8f9e.output_list -> contains_32727d.list\n        sublist_2a8f9e -> contains_32727d.item\n        contains_32727d.is_contained -> output_e7c4ba\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_a3b6f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -298, y: 5, name: \"sublist\") property(List) sublist_1d0a9f\n        in(x: -299, y: -186, name: \"list\") property(List) list_3e7c4b\n\n        out(x: 1032, y: -110, name: \"output\") property(Bool) output_e6a5ec\n\n        instance(x: 101, y: -112) contains_1d0f8f root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -233, y: -57, name: \"list\") property(List) list_3e7c4b\n            in(x: -234, y: 30, name: \"sublist\") property(List) sublist_1d0a9f\n\n            out(x: 693, y: -38, name: \"output\") property(Bool) output_e6a5ec\n\n            instance(x: 105, y: -41) contains_1d0f8f root.Std_k98ojb.List.Contains {}\n            func() {\n                in(x: -231, y: -2, name: \"list\") property(List) list_3e7c4b\n                in(x: -232, y: 63, name: \"sublist\") property(List) sublist_1d0a9f\n\n                out(x: 694, y: 42, name: \"output\") property(Bool) output_e6a5ec\n\n                instance(x: 105, y: 45) contains_1d0f8f root.Std_k98ojb.List.Contains {}\n                func() {\n                    in(x: -231, y: 13, name: \"list\") property(List) list_3e7c4b\n                    in(x: -232, y: 94, name: \"sublist\") property(List) sublist_1d0a9f\n\n                    out(x: 694, y: 75, name: \"output\") property(Bool) output_e6a5ec\n\n                    instance(x: 105, y: 78) contains_1d0f8f root.Std_k98ojb.List.Contains {}\n                    func() {\n                        in(x: -231, y: 36, name: \"list\") property(List) list_3e7c4b\n                        in(x: -232, y: 117, name: \"sublist\") property(List) sublist_1d0a9f\n\n                        out(x: 694, y: 108, name: \"output\") property(Bool) output_e6a5ec\n\n                        instance(x: 105, y: 111) contains_1d0f8f root.Std_k98ojb.List.Contains {}\n                        func() {\n                            in(x: -231, y: 49, name: \"list\") property(List) list_3e7c4b\n                            in(x: -232, y: 130, name: \"sublist\") property(List) sublist_1d0a9f\n\n                            out(x: 694, y: 141, name: \"output\") property(Bool) output_e6a5ec\n\n                            instance(x: 105, y: 144) contains_1d0f8f root.Std_k98ojb.List.Contains {}\n                            func() {\n                                in(x: -231, y: 62, name: \"list\") property(List) list_3e7c4b\n                                in(x: -232, y: 143, name: \"sublist\") property(List) sublist_1d0a9f\n\n                                out(x: 694, y: 174, name: \"output\") property(Bool) output_e6a5ec\n\n                                instance(x: 105, y: 177) contains_1d0f8f root.Std_k98ojb.List.Contains {}\n                            } -> ifexpression_7e9c3c.then\n                            list_3e7c4b -> contains_1d0f8f.list\n                            sublist_1d0a9f -> contains_1d0f8f.item\n                        } -> ifexpression_7e9c3c.execute\n                        func() {\n                            in(x: -231, y: 85, name: \"list\") property(List) list_3e7c4b\n                            in(x: -232, y: 156, name: \"sublist\") property(List) sublist_1d0a9f\n\n                            out(x: 694, y: 207, name: \"output\") property(Bool) output_e6a5ec\n\n                            instance(x: 105, y: 210) contains_1d0f8f root.Std_k98ojb.List.Contains {}\n                        } -> ifexpression_7e9c3c.else\n                    } -> ifexpression_7e9c3c.root.IfExpression.expression\n                    list_3e7c4b -> ifexpression_7e9c3c.gen_0\n                    sublist_1d0a9f -> ifexpression_7e9c3c.gen_2\n                    ifexpression_7e9c3c.value -> output_e6a5ec\n                } -> contains_1d0f8f.handler\n            } -> contains_1d0f8f.handler\n        } -> contains_1d0f8f.handler\n        list_3e7c4b -> contains_1d0f8f.list\n        sublist_1d0a9f -> contains_1d0f8f.item\n        contains_1d0f8f.is_contained -> output_e6a5ec\n    }\n\n    \n\n    instance(x: -293, y: 14) is_sublist_7e9c3c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 20, name: \"sublist\") property(List) sublist_1f0d8a\n        in(x: -283, y: -150, name: \"list\") property(List) list_3b9e6c\n\n        out(x: 558, y: -129, name: \"output\") property(Bool) output_5f2f4c\n\n        instance(x: -103, y: -151, name: \"length of sublist\") length_1a0d7c root.Std_k98ojb.List.Length {}\n        instance(x: 189, y: -130) greaterthan_c6e9ea root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        instance(x: 188, y: 11) sub_8f3a5c root.Std_k98ojb.Math.Sub {}\n        instance(x: 187, y: -71, name: \"length of list\") length_c6e9ea root.Std_k98ojb.List.Length {}\n        sublist_1f0d8a -> length_1a0d7c.list\n        greaterthan_c6e9ea.result -> output_5f2f4c\n        sub_8f3a5c.result -> greaterthan_c6e9ea.left\n        list_3b9e6c -> length_c6e9ea.list\n        length_c6e9ea.length -> sub_8f3a5c.first\n        length_1a0d7c.length -> sub_8f3a5c.second\n        instance(x: 187, y: -4, name: \"find sublist\") find_2b9d6f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 28, name: \"current\") property(List) current_1e7a8c\n\n            out(x: 698, y: 29, name: \"bool\") property(Bool) bool_5d0f2b\n\n            instance(x: 112, y: 24) contains_6a3a9c root.Std_k98ojb.List.Contains {}\n            sublist_1f0d8a -> contains_6a3a9c.list\n            current_1e7a8c -> contains_6a3a9c.item\n            contains_6a3a9c.is_contained -> bool_5d0f2b\n        } -> find_2b9d6f.predicate\n        list_3b9e6c -> find_2b9d6f.items\n    }\n\n    \n\n    instance(x: -83, y: 59) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -275, y: 20, name: \"sublist\") property(List) sublist_1d8f9e\n        in(x: -276, y: -170, name: \"list\") property(List) list_7b3c4a\n\n        out(x: 1000, y: -110, name: \"output\") property(Bool) output_e6b2cf\n\n        instance(x: 146, y: -115) contains_1e9f5d root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_7c8a3e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_1e9f5d.handler\n        list_7b3c4a -> contains_1e9f5d.list\n        sublist_1d8f9e -> contains_1e9f5d.item\n        contains_1e9f5d.is_contained -> output_e6b2cf\n    }\n\n    \n\n    instance(x: -293, y: 59) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -287, y: 15, name: \"sublist\") property(List) sublist_1d8f6a\n        in(x: -289, y: -175, name: \"list\") property(List) list_7c9e5b\n\n        out(x: 557, y: -158, name: \"output\") property(Bool) output_e4f0ed\n\n        instance(x: -93, y: -159, name: \"find sublist in list\") find_1a8d3c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: -68, name: \"current\") property(List) current_9f0e5e\n\n            out(x: 698, y: -67, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: -62) contains_d7b2c8 root.Std_k98ojb.List.Contains {}\n            sublist_1d8f6a -> contains_d7b2c8.list\n            current_9f0e5e -> contains_d7b2c8.item\n            contains_d7b2c8.is_contained -> bool_1eb6e9\n        } -> find_1a8d3c.predicate\n        list_7c9e5b -> find_1a8d3c.items\n        find_1a8d3c.item -> output_e4f0ed\n    }\n\n    \n\n    instance(x: -83, y: 41) is_sublist_f6f2a9 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 10, name: \"sublist\") property(List) sublist_1a0f8e\n        in(x: -286, y: -156, name: \"list\") property(List) list_2b9d7c\n\n        out(x: 556, y: -127, name: \"output\") property(Bool) output_3d4e6f\n\n        instance(x: -94, y: -129) contains_1a0f8e root.Std_k98ojb.List.Contains {}\n        list_2b9d7c -> contains_1a0f8e.list\n        sublist_1a0f8e -> contains_1a0f8e.item\n        contains_1a0f8e.is_contained -> output_3d4e6f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 20, name: \"sublist\") property(List) sublist_1d9f6a\n        in(x: -294, y: -145, name: \"list\") property(List) list_0b075e\n\n        out(x: 557, y: -96, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        sublist_1d9f6a -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_0b075e -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        sublist_1d9f6a -> length_8166b0.list\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -277, y: 166, name: \"list1\") property(List) list_09fcba\n        in(x: -285, y: -84, name: \"list2\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_09fcba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(List) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        list_3af6ba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) is_sublist_f53d27 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -275, y: 20, name: \"sublist\") property(List) sublist_0a8d6f\n        in(x: -277, y: -170, name: \"list\") property(List) list_7c9b3e\n\n        out(x: 1005, y: -145, name: \"output\") property(Bool) output_4e2c1e\n\n        instance(x: 1020, y: -160) contains_c8a6d2 root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -230, y: -20, name: \"current\") property(List) current_9f7b3f\n            in(x: -232, y: 80, name: \"_index\") property(Number) _index_8a1e5c\n\n            out(x: 720, y: 49, name: \"output\") property(Bool) output_6d4a2f\n\n            instance(x: 250, y: 56) contains_9b7a3c root.Std_k98ojb.List.Contains {}\n            instance(x: 680, y: 51) notequal_8e5c0f root.Std_k98ojb.Logic.NotEqual {}\n            sublist_0a8d6f -> contains_9b7a3c.list\n            current_9f7b3f -> contains_9b7a3c.item\n            contains_9b7a3c.is_contained -> notequal_8e5c0f.left\n            true -> notequal_8e5c0f.right\n            notequal_8e5c0f.result -> output_6d4a2f\n        } -> contains_c8a6d2.handler\n        list_7c9b3e -> contains_c8a6d2.list\n        func() {\n            in(x: -230, y: -20, name: \"current\") property(List) current_9f7b3f\n\n            out(x: 720, y: 49, name: \"output\") property(Bool) output_6d4a2f\n\n            instance(x: 250, y: 56) contains_9b7a3c root.Std_k98ojb.List.Contains {}\n            sublist_0a8d6f -> contains_9b7a3c.list\n            current_9f7b3f -> contains_9b7a3c.item\n            contains_9b7a3c.is_contained -> output_6d4a2f\n        } -> contains_c8a6d2.items\n        contains_c8a6d2.result -> output_4e2c1e\n    }\n\n    \n\n    instance(x: -272, y: 15) is_sublist_7b9d3c root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 2, name: \"list\") property(List) list_3a1f9e\n        in(x: -314, y: -228, name: \"execute\") trigger() execute_5c7d8b\n\n        out(x: 1066, y: -230, name: \"continue\") trigger() continue_e2c4ed\n        out(x: 1053, y: 154, name: \"output\") property(Number) output_1e0a1f\n\n        instance(x: 0, y: 0) for_9d7b8f root.Std_k98ojb.Std.For {}\n        instance(x: 322, y: -2) ifexpression_5c3b6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 0, y: 0, name: \"getter_e9f8d7\") getter_e9f8d7 = previous\n        setter(x: 0, y: 0, name: \"setter_6e5c3a\") setter_6e5c3a = previous\n        instance(x: 0, y: 0) if_2b4b1f root.Std_k98ojb.Std.If {}\n        list_3a1f9e -> for_9d7b8f.items\n        execute_5c7d8b -> setter_6e5c3a.execute\n        -1 -> setter_6e5c3a.new_value\n        ifexpression_5c3b6c.else -> continue_e2c4ed\n        for_9d7b8f.onItem -> ifexpression_5c3b6c.execute\n        getter_e9f8d7.value -> ifexpression_5c3b6c.gen_1\n        for_9d7b8f.index -> ifexpression_5c3b6c.gen_0\n        for_9d7b8f.item -> ifexpression_5c3b6c.gen_2\n        ifexpression_5c3b6c.then -> setter_6e5c3a.execute\n        for_9d7b8f.done -> continue_e2c4ed\n        for_9d7b8f.item -> setter_6e5c3a.new_value\n        ifexpression_5c3b6c.value -> if_2b4b1f.predicate\n        if_2b4b1f.then -> output_1e0a1f\n        if_2b4b1f.else -> for_9d7b8f.next\n        setter_6e5c3a.continue -> for_9d7b8f.next\n        previous + 1 -> if_2b4b1f.then\n    }\n\n    \n\n    instance(x: -56, y: 128) find_missing_7f1d9f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 2, name: \"list\") property(List) list_9e3f8a\n        in(x: -283, y: -240, name: \"execute\") trigger() execute_eb1c6d\n\n        out(x: 592, y: 7, name: \"continue\") trigger() continue_4a2c5e\n        out(x: 593, y: 148, name: \"output\") property(Number) output_8f9f0b\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_e38995.else -> continue_4a2c5e\n        ifexpression_e38995.value -> output_8f9f0b\n        ifexpression_e38995.then -> setter_9d4f1c.execute\n        list_9e3f8a -> for_d26972.items\n        for_d26972.item -> ifexpression_e38995.gen_2\n        for_d26972.index -> ifexpression_e38995.gen_0\n        getter_b280eb.value -> ifexpression_e38995.gen_1\n        for_d26972.onItem -> ifexpression_e38995.execute\n        for_d26972.done -> continue_4a2c5e\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_9e3f8a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_eb1c6d -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_7b8a0f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 0, name: \"list\") property(List) list_9e6f1d\n        in(x: -310, y: -225, name: \"execute\") trigger() execute_ea7c8b\n\n        out(x: 1055, y: -230, name: \"continue\") trigger() continue_3c0f4f\n        out(x: 1046, y: 150, name: \"output\") property(Number) output_1e2d9f\n\n        instance(x: 0, y: 0, name: \"for_7a5b6c\") for_7a5b6c root.Std_k98ojb.Std.For {}\n        instance(x: 315, y: -30, name: \"ifexpression_e8e1d4\") ifexpression_e8e1d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 0, y: 0, name: \"getter_9c7f5a\") getter_9c7f5a = previous\n        setter(x: 0, y: 0, name: \"setter_6e3b8d\") setter_6e3b8d = previous\n        instance(x: 680, y: -30) if_2f1b9c root.Std_k98ojb.Std.If {}\n        getter(x: 0, y: 0, name: \"getter_4a5f7c\") getter_4a5f7c = index\n        setter(x: 0, y: 0, name: \"setter_e6d3e2\") setter_e6d3e2 = index\n        instance(x: -270, y: -30) getat_9b1c8f root.Std_k98ojb.List.GetAt {}\n        ifexpression_e8e1d4.else -> continue_3c0f4f\n        ifexpression_e8e1d4.then -> setter_6e3b8d.execute\n        list_9e6f1d -> for_7a5b6c.items\n        for_7a5b6c.item -> ifexpression_e8e1d4.gen_2\n        for_7a5b6c.index -> ifexpression_e8e1d4.gen_0\n        getter_9c7f5a.value -> ifexpression_e8e1d4.gen_1\n        for_7a5b6c.onItem -> ifexpression_e8e1d4.execute\n        for_7a5b6c.done -> continue_3c0f4f\n        for_7a5b6c.item -> setter_6e3b8d.new_value\n        list_9e6f1d -> getat_9b1c8f.list\n        0 -> getat_9b1c8f.index\n        getat_9b1c8f.itemAtIndex -> setter_e6d3e2.new_value\n        execute_ea7c8b -> setter_e6d3e2.execute\n        getter_4a5f7c.value -> output_1e2d9f\n        ifexpression_e8e1d4.else -> if_2f1b9c.execute\n        for_7a5b6c.index -> if_2f1b9c.gen_0\n        1 -> if_2f1b9c.gen_1\n        if_2f1b9c.then -> setter_e6d3e2.execute\n        if_2f1b9c.else -> for_7a5b6c.next\n        if_2f1b9c.predicate -> output_1e2d9f\n        getter_4a5f7c.value -> output_1e2d9f\n        setter_e6d3e2.continue -> for_7a5b6c.reset\n        setter_6e3b8d.continue -> for_7a5b6c.next\n    }\n\n    \n\n    instance(x: -10, y: 120) find_missing_4e9f1f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -283, y: 0, name: \"list\") property(List) list_9e8b5f\n        in(x: -284, y: -240, name: \"execute\") trigger() execute_1a3d4c\n\n        out(x: 593, y: -241, name: \"continue\") trigger() continue_e7c2ea\n        out(x: 592, y: 0, name: \"output\") property(Number) output_8e6f9b\n\n        instance(x: 0, y: 0) for_1a3d4c root.Std_k98ojb.Std.For {}\n        instance(x: -100, y: -80) ifexpression_e7c2ea root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 89, y: 29, name: \"getter_9f6850\") getter_9f6850 = previous\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_e7c2ea.else -> continue_e7c2ea\n        ifexpression_e7c2ea.value -> output_8e6f9b\n        ifexpression_e7c2ea.then -> setter_9d4f1c.execute\n        list_9e8b5f -> for_1a3d4c.items\n        for_1a3d4c.item -> ifexpression_e7c2ea.gen_2\n        for_1a3d4c.index -> ifexpression_e7c2ea.gen_0\n        getter_9f6850.value -> ifexpression_e7c2ea.gen_1\n        for_1a3d4c.onItem -> ifexpression_e7c2ea.execute\n        for_1a3d4c.done -> continue_e7c2ea\n        for_1a3d4c.item -> setter_9d4f1c.new_value\n        list_9e8b5f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        execute_1a3d4c -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> for_1a3d4c.reset\n    }\n\n    \n\n    instance(x: -34, y: 127) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -283, y: 2, name: \"list\") property(List) list_9e3f8a\n        in(x: -284, y: -240, name: \"execute\") trigger() execute_7b1d5c\n\n        out(x: 593, y: -242, name: \"continue\") trigger() continue_e2a4ee\n        out(x: 595, y: 44, name: \"output\") property(Number) output_3e9f6f\n\n        instance(x: 0, y: 0) for_1b8c7d root.Std_k98ojb.Std.For {}\n        instance(x: -104, y: -110) ifexpression_2a5b8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = previous\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = previous\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = previous\n        list_9e3f8a -> for_1b8c7d.items\n        execute_7b1d5c -> ifexpression_2a5b8c.execute\n        0 -> ifexpression_2a5b8c.gen_0\n        getter_9cceb3.value -> ifexpression_2a5b8f.gen_1\n        for_1b8c7d.item -> ifexpression_2a5b8c.gen_2\n        ifexpression_2a5b8c.then -> setter_1cedb2.execute\n        ifexpression_2a5b8c.else -> setter_37db7f.execute\n        for_1b8c7d.onItem -> ifexpression_2a5b8c.execute\n        for_1b8c7d.index -> ifexpression_2a5b8c.gen_0\n        setter_1cedb2.continue -> continue_e2a4ee\n        setter_37db7f.continue -> continue_e2a4ee\n        for_1b8c7d.done -> continue_e2a4ee\n        ifexpression_2a5b8c.value -> output_3e9f6f\n        1 + getter_9cceb3.value -> setter_37db7f.new_value\n        for_1b8c7d.item -> setter_1cedb2.new_value\n    }\n\n    \n\n    instance(x: -174, y: -63) find_missing_5e0a8f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -305, y: 1, name: \"list\") property(List) list_9f0b2e\n        in(x: -324, y: -225, name: \"execute\") trigger() execute_ea7d3c\n\n        out(x: 1056, y: -231, name: \"continue\") trigger() continue_5a8c4f\n        out(x: 1049, y: 147, name: \"output\") property(Number) output_2b1e0f\n\n        instance(x: 554, y: 90) ifexpression_6d3e1c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 336, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_6d3e1c.else -> continue_5a8c4f\n        ifexpression_6d3e1c.then -> setter_9d4f1c.execute\n        list_9f0b2e -> for_d26972.items\n        for_d26972.item -> ifexpression_6d3e1c.gen_2\n        for_d26972.index -> ifexpression_6d3e1c.gen_0\n        getter_b280eb.value -> ifexpression_6d3e1c.gen_1\n        for_d26972.onItem -> ifexpression_6d3e1c.execute\n        for_d26972.done -> continue_5a8c4f\n        ifexpression_6d3e1c.value -> output_2b1e0f\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_9f0b2e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_ea7d3c -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_6b8a5f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9e8f5a\n        in(x: -299, y: -220, name: \"execute\") trigger() execute_eb1d7c\n\n        out(x: 594, y: -221, name: \"continue\") trigger() continue_6e3b0d\n        out(x: 591, y: 47, name: \"output\") property(Number) output_9f5a8e\n\n        instance(x: 0, y: 0) for_7c2a4f root.Std_k98ojb.Std.For {}\n        instance(x: 323, y: -10) ifexpression_1d3a1c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 151, y: 47, name: \"getter_9e8f5a\") getter_9e8f5a = previous\n        setter(x: 499, y: -245, name: \"setter_9e8f5a\") setter_9e8f5a = previous\n        instance(x: -0, y: -120, name: \"setter_9e8f5a\") setter_3b7d4c = previous\n        list_9e8f5a -> for_7c2a4f.items\n        execute_eb1d7c -> setter_3b7d4c.execute\n        0 -> setter_3b7d4c.new_value\n        ifexpression_1d3a1c.then -> setter_9e8f5a.execute\n        for_7c2a4f.item -> ifexpression_1d3a1c.gen_2\n        for_7c2a4f.index -> ifexpression_1d3a1c.gen_0\n        getter_9e8f5a.value -> ifexpression_1d3a1c.gen_1\n        for_7c2a4f.onItem -> ifexpression_1d3a1c.execute\n        ifexpression_1d3a1c.else -> continue_6e3b0d\n        ifexpression_1d3a1c.value -> output_9f5a8e\n        for_7c2a4f.done -> continue_6e3b0d\n        setter_9e8f5a.continue -> for_7c2a4f.next\n        for_7c2a4f.item -> setter_9e8f5a.new_value\n        setter_3b7d4c.continue -> for_7c2a4f.reset\n    }\n\n    \n\n    instance(x: -174, y: 0) find_missing_e6f1f9 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -305, y: 1, name: \"list\") property(List) list_9f0b2e\n        in(x: -321, y: -232, name: \"execute\") trigger() execute_7a3c6d\n\n        out(x: 1065, y: -231, name: \"continue\") trigger() continue_8f4a6d\n        out(x: 1059, y: 2, name: \"output\") property(Number) output_1e9b0f\n\n        instance(x: 0, y: 0, name: \"for_3c5c6f\") for_3c5c6f root.Std_k98ojb.Std.For {}\n        getter(x: 515, y: 30, name: \"getter_7a8e9d\") getter_7a8e9d = index\n        instance(x: 0, y: 0, name: \"ifexpression_e1c3f6\") ifexpression_e1c3f6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = missing\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_e1c3f6.else -> continue_8f4a6d\n        getter_7a8e9d.value -> output_1e9b0f\n        ifexpression_e1c3f6.then -> setter_9d4f1c.execute\n        list_9f0b2e -> for_3c5c6f.items\n        for_3c5c6f.item -> ifexpression_e1c3f6.gen_2\n        for_3c5c6f.index -> ifexpression_e1c3f6.gen_0\n        getter_7a8e9d.value -> ifexpression_e1c3f6.gen_1\n        for_3c5c6f.onItem -> ifexpression_e1c3f6.execute\n        for_3c5c6f.done -> continue_8f4a6d\n        for_3c5c6f.item -> setter_9d4f1c.new_value\n        list_9f0b2e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        execute_7a3c6d -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> for_3c5c6f.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_f8b0e2 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -280, y: 0, name: \"list\") property(List) list_9e3b5f\n        in(x: -285, y: -240, name: \"execute\") trigger() execute_1c7d4a\n\n        out(x: 39, y: 147, name: \"continue\") trigger() continue_6a8b0d\n        out(x: 46, y: -237, name: \"output\") property(Number) output_e9e3f2\n\n        instance(x: 0, y: 0, name: \"for_1\") for_1_5c7f4e root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0, name: \"ifexpression_1\") ifexpression_1_f9d3a8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -187, y: 159, name: \"getter_1\") getter_1_7f2c6e = previous\n        setter(x: 679, y: -313, name: \"setter_1\") setter_1_9d4f1c = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_1_f9d3a8.else -> continue_6a8b0d\n        ifexpression_1_f9d3a8.value -> output_e9e3f2\n        ifexpression_1_f9d3a8.then -> setter_1_9d4f1c.execute\n        list_9e3b5f -> for_1_5c7f4e.items\n        for_1_5c7f4e.item -> ifexpression_1_f9d3a8.gen_2\n        for_1_5c7f4e.index -> ifexpression_1_f9d3a8.gen_0\n        getter_1_7f2c6e.value -> ifexpression_1_f9d3a8.gen_1\n        for_1_5c7f4e.onItem -> ifexpression_1_f9d3a8.execute\n        for_1_5c7f4e.done -> continue_6a8b0d\n        for_1_5c7f4e.item -> setter_1_9d4f1c.new_value\n        list_9e3b5f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_1_9d4f1c.new_value\n        execute_1c7d4a -> setter_1_9d4f1c.execute\n        setter_1_9d4f1c.continue -> for_1_5c7f4e.reset\n    }\n\n    \n\n    instance(x: -63, y: 160) find_missing_2b3f0c root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 1, name: \"list\") property(List) list_2d9b3f\n        in(x: -283, y: -232, name: \"execute\") trigger() execute_7a8c6e\n\n        out(x: 1015, y: -233, name: \"continue\") trigger() continue_e1a4ef\n        out(x: 1009, y: 47, name: \"output\") property(Number) output_2f0b7d\n\n        instance(x: 0, y: 0) for_8e6c1e root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) ifexpression_a9a3ef root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -0, y: 49, name: \"getter_7e2f6c\") getter_7e2f6c = previous\n        setter(x: 0, y: -122, name: \"setter_8a3b4d\") setter_8a3b4d = previous\n        instance(x: -274, y: -37) getat_1b5e9f root.Std_k98ojb.List.GetAt {}\n        ifexpression_a9a3ef.else -> continue_e1a4ef\n        ifexpression_a9a3ef.value -> output_2f0b7d\n        ifexpression_a9a3ef.then -> setter_8a3b4d.execute\n        list_2d9b3f -> for_8e6c1e.items\n        for_8e6c1e.item -> ifexpression_a9a3ef.gen_2\n        for_8e6c1e.index -> ifexpression_a9a3ef.gen_0\n        getter_7e2f6c.value -> ifexpression_a9a3ef.gen_1\n        for_8e6c1e.onItem -> ifexpression_a9a3ef.execute\n        for_8e6c1e.done -> continue_e1a4ef\n        for_8e6c1e.item -> setter_8a3b4d.new_value\n        list_2d9b3f -> getat_1b5e9f.list\n        0 -> getat_1b5e9f.index\n        getat_1b5e9f.itemAtIndex -> setter_8a3b4d.new_value\n        execute_7a8c6e -> setter_8a3b4d.execute\n        setter_8a3b4d.continue -> for_8e6c1e.reset\n    }\n\n    \n\n    instance(x: -53, y: 128) find_missing_9f0a5c root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5c3d9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7e8a6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9c4c7c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5c3d9f.input\n        \" \" -> replace_5c3d9f.search\n        \":\" -> replace_5c3d9f.replace\n        replace_5c3d9f.output -> replace_7e8a6f.input\n        \",\" -> replace_7e8a6f.search\n        \":\" -> replace_7e8a6f.replace\n        replace_7e8a6f.output -> replace_9c4c7c.input\n        \".\" -> replace_9c4c7c.search\n        \":\" -> replace_9c4c7c.replace\n        replace_9c4c7c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_d3e8d1 root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -227, y: 0, name: \"input\") property(String) input_9f1a8e\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_5c7b4d\n\n        instance(x: 0, y: 0) replace_1 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_3 root.Std_k98ojb.Strings.Replace {}\n        input_9f1a8e -> replace_1.input\n        \" \" -> replace_1.search\n        \":\" -> replace_1.replace\n        replace_1.output -> replace_2.input\n        \",\" -> replace_2.search\n        \":\" -> replace_2.replace\n        replace_2.output -> replace_3.input\n        \".\" -> replace_3.search\n        \":\" -> replace_3.replace\n        replace_3.output -> output_5c7b4d\n   }\n   \n\n    instance(x: -177, y: 32, name: \"replace\") replace_1e9f2a root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -172, y: 0, name: \"input\") property(String) input_9b1e4f\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_8a3c6d\n\n        instance(x: 0, y: 0) replace_spaces root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_commas root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_dots root.Std_k98ojb.Strings.Replace {}\n        input_9b1e4f -> replace_spaces.input\n        \" \" -> replace_spaces.search\n        \":\" -> replace_spaces.replace\n        replace_spaces.output -> replace_commas.input\n        \",\" -> replace_commas.search\n        \":\" -> replace_commas.replace\n        replace_commas.output -> replace_dots.input\n        \".\" -> replace_dots.search\n        \":\" -> replace_dots.replace\n        replace_dots.output -> output_8a3c6d\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_spaces_commas_dots_9e4b2f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -200, y: 0, name: \"input\") property(String) input_1f3a8e\n\n        out(x: 600, y: -2, name: \"output\") property(String) output_5c7d4b\n\n        instance(x: 0, y: 0) replace_6a9a4e root.Std_k98ojb.Strings.Replace {}\n        input_1f3a8e -> replace_6a9a4e.input\n        \" \" -> replace_6a9a4e.search\n        \":\" -> replace_6a9a4e.replace\n        instance(x: 0, y: -40) replace_2b5c9d root.Std_k98ojb.Strings.Replace {}\n        replace_6a9a4e.output -> replace_2b5c9d.input\n        \",\" -> replace_2b5c9d.search\n        \":\" -> replace_2b5c9d.replace\n        instance(x: 0, y: -80) replace_1f3b8e root.Std_k98ojb.Strings.Replace {}\n        replace_2b5c9d.output -> replace_1f3b8e.input\n        \".\" -> replace_1f3b8e.search\n        \":\" -> replace_1f3b8e.replace\n        replace_1f3b8e.output -> output_5c7d4b\n    }\n\n    \n\n    instance(x: -85, y: 32, name: \"replace\") replace_9a6d2c root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -227, y: 0, name: \"input\") property(String) input_8f1a9e\n\n        out(x: 506, y: -2, name: \"output\") property(String) output_7b4c3d\n\n        instance(x: 0, y: 0) replace_5d1c6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_8a9e4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_3e7b5f root.Std_k98ojb.Strings.Replace {}\n        input_8f1a9e -> replace_5d1c6f.input\n        \" \" -> replace_5d1c6f.search\n        \":\" -> replace_5d1c6f.replace\n        replace_5d1c6f.output -> replace_8a9e4f.input\n        \",\" -> replace_8a9e4f.search\n        \":\" -> replace_8a9e4f.replace\n        replace_8a9e4f.output -> replace_3e7b5f.input\n        \".\" -> replace_3e7b5f.search\n        \":\" -> replace_3e7b5f.replace\n        replace_3e7b5f.output -> output_7b4c3d\n    }\n\n    \n\n    instance(x: -176, y: 38, name: \"replace\") replace_1a9b8c root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -156, y: 0, name: \"input\") property(String) input_8e9b2f\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1a3d5c\n\n        instance(x: 94, y: -105) replace_4c6c0f root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_2e8a7c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 92, y: -22) replace_1d3f5f root.Std_k98ojb.Strings.Replace {}\n        input_8e9b2f -> replace_4c6c0f.input\n        \" \" -> replace_4c6c0f.search\n        \":\" -> replace_4c6c0f.replace\n        replace_4c6c0f.output -> replace_2e8a7c.input\n        \",\" -> replace_2e8a7c.search\n        \":\" -> replace_2e8a7c.replace\n        replace_2e8a7c.output -> replace_1d3f5f.input\n        \".\" -> replace_1d3f5f.search\n        \":\" -> replace_1d3f5f.replace\n        replace_1d3f5f.output -> output_1a3d5c\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_7b2e6c root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -200, y: 0, name: \"input\") property(String) input_9f1a3d\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_8e4b7c\n\n        instance(x: 0, y: 0) replace_5c6d9e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_1f8a2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_c4b7da root.Std_k98ojb.Strings.Replace {}\n        input_9f1a3d -> replace_5c6d9e.input\n        \" \" -> replace_5c6d9e.search\n        \":\" -> replace_5c6d9e.replace\n        replace_5c6d9e.output -> replace_1f8a2f.input\n        \",\" -> replace_1f8a2f.search\n        \":\" -> replace_1f8a2f.replace\n        replace_1f8a2f.output -> replace_c4b7da.input\n        \".\" -> replace_c4b7da.search\n        \":\" -> replace_c4b7da.replace\n        replace_c4b7da.output -> output_8e4b7c\n    }\n\n    \n\n    instance(x: -85, y: 46, name: \"replace\") replace_5f3a2d root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -227, y: 44, name: \"string\") property(String) string_9b1e4f\n\n        out(x: 744, y: 146, name: \"output\") property(String) output_3a7c6d\n\n        instance(x: 52, y: 47, name: \"replace_spaces\") replace_5b2b0f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 69, y: 185, name: \"replace_commas\") replace_1e3a7c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 279, y: 73) replace_dots_9d5f2e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 516, y: 144) replace_colon_0c4a8a root.Std_k98ojb.Strings.Replace {}\n        string_9b1e4f -> replace_spaces.input\n        \" \" -> replace_spaces.search\n        \":\" -> replace_spaces.replace\n        replace_spaces.output -> replace_commas.input\n        \",\" -> replace_commas.search\n        \":\" -> replace_commas.replace\n        replace_commas.output -> replace_dots_9d5f2e.input\n        \".\" -> replace_dots_9d5f2e.search\n        \":\" -> replace_dots_9d5f2e.replace\n        replace_dots_9d5f2e.output -> replace_colon_0c4a8a.input\n        \":\", \",\" -> replace_colon_0c4a8a.search\n        \"\" -> replace_colon_0c4a8a.replace\n        replace_colon_0c4a8a.output -> output_3a7c6d\n    }\n\n    \n\n    instance(x: -280, y: 136) replace_spaces_commas_dots_9f2e1b root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -122, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_3c0f9d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: -1) replace_7a5e4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: -129) replace_6b8f1f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3c0f9d.input\n        \" \" -> replace_3c0f9d.search\n        \":\" -> replace_3c0f9d.replace\n        replace_3c0f9d.output -> replace_7a5e4c.input\n        \",\" -> replace_7a5e4c.search\n        \":\" -> replace_7a5e4c.replace\n        replace_7a5e4c.output -> replace_6b8f1f.input\n        \".\" -> replace_6b8f1f.search\n        \":\" -> replace_6b8f1f.replace\n        replace_6b8f1f.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_59bc6e root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -198, y: 0, name: \"input\") property(String) input_9f2e8a\n\n        out(x: 504, y: -1, name: \"output\") property(String) output_7b3c6d\n\n        instance(x: 0, y: 0) replace_4d5d2f root.Std_k98ojb.Strings.Replace {}\n        input_9f2e8a -> replace_4d5d2f.input\n        \" \" -> replace_4d5d2f.search\n        \":\" -> replace_4d5d2f.replace\n        instance(x: 0, y: -1) replace_3c6b7c root.Std_k98ojb.Strings.Replace {}\n        replace_4d5d2f.output -> replace_3c6b7c.input\n        \",\" -> replace_3c6b7c.search\n        \":\" -> replace_3c6b7c.replace\n        instance(x: 0, y: -1) replace_8a9e5e root.Std_k98ojb.Strings.Replace {}\n        replace_3c6b7c.output -> replace_8a9e5e.input\n        \".\" -> replace_8a9e5e.search\n        \":\" -> replace_8a9e5e.replace\n        replace_8a9e5e.output -> output_7b3c6d\n    }\n\n    \n\n    instance(x: -128, y: 30) replace_bf1d0c root.main.replace {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -290, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 557, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 0) characters_7e9f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 266, y: 1) all_equal_3a5d4c root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n                in(x: -112, y: -26, name: \"_index\") property(Number) _index_769593\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n                elem_9f6850 -> equal_f89569.left\n                string_0.characters[0] -> equal_f89569.right\n                equal_f89569.result -> bool_af09a7\n            }\n        }\n        characters_7e9f8c.input -> all_equal_3a5d4c.items\n        instance(x: 531, y: -1) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 745, y: 0) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        characters_7e9f8c.characters -> length_8166b0.list\n        all_equal_3a5d4c.output_list.length -> equal_f89569.left\n        string_0.characters.length -> equal_f89569.right\n        equal_f89569.result -> result_0\n    }\n\n    \n\n    instance(x: -56, y: 52) check_same_2f7b1e root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -290, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 531, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_7e9c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) all_equal_5a4d3c root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -76, y: 46, name: \"current\") property(String) current_1\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_2\n\n                out(x: 382, y: 19, name: \"out\") property(Bool) out_3\n\n                instance(x: 106, y: 17) equal_1a8c4f root.Std_k98ojb.Logic.Equal {}\n                current_1 -> equal_1a8c4f.left\n                characters_7e9c8f.characters[_index_2] -> equal_1a8c4f.right\n                equal_1a8c4f.result -> out_3\n            }\n        }\n        instance(x: 530, y: -2) not_5b6d4f root.Std_k98ojb.Logic.Not {}\n        characters_7e9c8f.characters -> all_equal_5a4d3c.items\n        input_0 -> characters_7e9c8f.input\n        all_equal_5a8d3c.output_list -> not_5b6d4f.input\n        not_5b6d4f.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_2f7e9f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -285, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 540, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_5a3c9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -1) uniquelist_f8d4e6 root.Std_k98ojb.List.UniqueList {}\n        instance(x: 500, y: 2) length_7a0b3c root.Std_k98ojb.List.Length {}\n        characters_5a3c9f.input -> characters_5a3c9f.characters\n        string_1 -> characters_5a3c9f.input\n        characters_5a3c9f.output -> uniquelist_f8d4e6.list\n        uniquelist_f8d4e6.uniqueList -> length_7a0b3c.list\n        1 -> length_7a0b3c.length\n        length_7a0b3c.result -> output_1\n    }\n\n    \n\n    instance(x: -67, y: 52) check_same_f21f44 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -280, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_d5e7d8 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) all_equal_f3a9c6 root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_1\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_2\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3\n\n                instance(x: 89, y: 29) equal_7f1c9a root.Std_k98ojb.Logic.Equal {}\n                elem_1 -> equal_7f1c9a.left\n                characters_d5e7d8.characters[_index_2] -> equal_7f1c9a.right\n                equal_7f1c9a.result -> bool_3\n            }\n        }\n        instance(x: 0, y: -1) firstitem_eb4f6f root.Std_k98ojb.List.FirstItem {}\n        characters_d5e7d8.characters -> all_equal_f3a9c6.items\n        input_1 -> characters_d5e7d8.input\n        all_equal_f3a9c6.output_list.length == characters_d5e7d8.characters.length -> result_1\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_2f0b8c root.main.is_same {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -290, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 557, y: -1, name: \"output\") property(Bool) output_0\n\n        instance(x: 0, y: 0) characters_7b3f6a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) all_equal_9c2e4d root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"current\") property(String) current_1\n                in(x: -106, y: 78, name: \"_index\") property(Number) _index_2\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3\n\n                instance(x: 89, y: 29) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n                current_1 -> equal_f89569.left\n                characters_7b3f6a.characters[_index_2] -> equal_f89569.right\n                equal_f89569.result -> bool_3\n            }\n        }\n        instance(x: 530, y: -1) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 744, y: 0) and_80a119 root.Std_k98ojb.Logic.And {}\n        characters_7b3f6a.characters -> all_equal_9c2e4d.items\n        input_0 -> characters_7b3f6a.input\n        length_8166b0.length -> and_80a119.left\n        1 -> and_80a119.right\n        all_equal_9c2e4d.output_list -> length_8166b0.list\n        and_80a119.result -> output_0\n    }\n\n    \n\n    instance(x: -56, y: 528) is_same_5f3f7f root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -531, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_0\n\n        instance(x: 772, y: 76) characters_c9f3a8 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -10, y: 0) length_1e7d6c root.Std_k98ojb.List.Length {}\n        instance(x: 265, y: 0) set_5a2b4c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 188, y: -1) not_9f3f1f root.Std_k98ojb.Logic.Not {}\n        characters_c9f3a8.characters -> length_1e7d6c.list\n        input_0 -> set_5a2b4c.left\n        func() {\n            in(x: 0, y: 0) property(List) list_0\n\n            out(x: 0, y: 0, name: \"output\") property(List) output_0\n\n            instance(x: 0, y: 0) map_f3e8a6 root.Std_k98ojb.Iteration.Map {}\n            func() {\n                in(x: -30, y: -25, name: \"current\") property(String) current_0\n\n                out(x: 705, y: 49, name: \"output\") property(List) output_1\n\n                instance(x: 226, y: 56) list_generate_range_f7e9a6 root.Std_k98ojb.List.GenerateRange {}\n                instance(x: 463, y: 51) concat_c5f8d2 root.Std_k98ojb.List.Concat {}\n                current_0 -> list_generate_range_f7e9a6.from\n                length_1e7d6c.length -> list_generate_range_f7e9a6.to\n                list_generate_range_f7e9a6.listWithRange -> concat_c5f8d2.left\n                func() {\n                    in(x: 0, y: 0) property(String) string_0\n\n                    out(x: 0, y: 0, name: \"output\") property(List) output_1\n\n                    instance(x: 0, y: 0) list_generate_range_3e8a6 root.Std_k98ojb.List.GenerateRange {}\n                    string_0 -> list_generate_range_3e8a6.from\n                    1 -> list_generate_range_3e9a6.to\n                    list_generate_range_3e8a6.listWithRange -> output_1\n                } -> concat_c5f8d2.right\n                concat_c5f8d2.concatenatedList -> output_1\n            } -> map_f3e8a6.handler\n            characters_c9f3a8.characters -> map_f3e8a6.items\n            map_f3e8a6.output_list -> output_0\n        } -> set_5a2b4c.right\n        not_9f3f1f.result -> output_0\n        set_5a2b4c.difference -> not_9f3f1f.input\n    }\n\n    \n\n    instance(x: -179, y: 30) check_same_59bc6e root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -283, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_7f9b4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) all_equal_5a3d2e root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n                elem_9f6850 -> equal_f89569.left\n                characters_7f9b4c.characters[_index_769593] -> equal_f89569.right\n                equal_f89569.result -> bool_af09a7\n            }\n        }\n        instance(x: 530, y: -1) not_75283f root.Std_k98ojb.Logic.Not {}\n        characters_7f9b4c.characters -> all_equal_5a3d2e.items\n        input_0 -> characters_7f9b4c.input\n        all_equal_5a3d2e.output_list.length == 1 -> not_75283f.input\n        not_75283f.result -> result_0\n    }\n\n    \n\n    instance(x: -55, y: 529) is_same_2c856f root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -531, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_0\n\n        instance(x: 772, y: 76) characters_c9f3d1 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -2, y: 78) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 0, y: 0) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 272, y: 77) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 488, y: 76) and_80a119 root.Std_k98ojb.Logic.And {}\n        input_0 -> characters_c9f3d1.input\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            characters_c9f3d1.characters -> equal_f89569.left\n            element_5f51f7 -> equal_f89569.right\n            equal_f89569.result -> out_d0fd24\n        } -> map_6030c9.handler\n        characters_c9f3d1.characters -> map_6030c9.items\n        length_6e87f2.length -> and_80a119.left\n        1 -> and_80a119.right\n        map_6030c9.output_list -> equal_f89569.left\n        characters_c9f3d1.characters -> equal_f89569.right\n        equal_f89569.result -> and_80a119.right\n        and_80a119.result -> output_0\n    }\n\n    \n\n    instance(x: -179, y: 30) check_same_59bc6e root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -284, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 557, y: -2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 1) characters_5c7f4a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: -2) length_6e87f2 root.Std_k98ojb.List.Length {}\n        characters_5c7f4a.characters -> contains_d42dce.list\n        characters_5c7f4a.characters -> length_6e87f2.list\n        \"1\" -> contains_d42dce.item\n        length_6e87f2.length -> contains_d42dce.contains\n        string_1 -> characters_5c7f4a.input\n        contains_d42dce.result -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_e54b7f root.main.is_same {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -299, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 531, y: 0, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_c5e7d8 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -1) allroot_k98ojb root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) equal_1e8c4d root.Std_k98ojb.Logic.Equal {}\n            characters_c5e7d8.characters -> equal_1e8c4d.left\n            elem_9f6850 -> equal_1e8c4d.right\n            equal_1e8c4d.result -> bool_af09a7\n        } -> allroot_k98ojb.handler\n        characters_c5e7d8.characters -> allroot_k98ojb.items\n        input_1 -> characters_c5e7d8.input\n        allroot_k98ojb.output_list.length -> output_1\n    }\n\n    \n\n    instance(x: -55, y: 529) is_same_2c856f root.main.is_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -77) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 118, y: -26) count_digits_9dcc3d root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1030, y: -2) filter_9f8c1a root.Std_k98ojb.Iteration.Filter {\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n                isnumeric_1088d5.input -> elem_9f6850\n                isnumeric_1088d5.isnumeric -> bool_af09a7\n            }\n        }\n        instance(x: 1296, y: -2) length_1e3c4a root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_9f8c1a.items\n        filter_9f8c1a.output_list -> length_1e3c4a.list\n        length_1e3c4a.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 0, y: 0) length_6d05b0 root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_6d05b0.list\n        length_6d05b0.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: -1) filter_6d05b0 root.Std_k98ojb.Query.Filter {\n            where: \"Std.k.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_6d05b0.list\n        filter_6d05b0.result -> length_6e87f2.items\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) CountDigits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1099, y: 76) filter_8a4f2e root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n                isnumeric_1088d5.input -> elem_9f6850\n                isnumeric_1088d5.is_numeric -> bool_af09a7\n            }\n        }\n        instance(x: 1436, y: 76) length_3e2c1f root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_8a4f2e.items\n        filter_8a4f2e.output_list -> length_3e2c1f.list\n        length_3e2c1f.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 118, y: -26) count_digits_9dcc3d root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: -1) filter_6e87f2 root.Std_k98ojb.Query.Filter {\n            where: \"it.isNumeric\"\n        }\n        instance(x: 426, y: -303) length_node root.Std_k98ojb.List.Length {}\n\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_6e87f2.list\n        filter_6e87f2.result -> length_node.items\n        length_node.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 118, y: -26) count_digits_9dcc3d root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: -1) filter_6e87f2 root.Std_k98ojb.Query.Filter {\n            where: \"it.isNumeric\"\n        }\n        instance(x: 426, y: -303) length_node root.Std_k98ojb.List.Length {}\n\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_6e87f2.list\n        filter_6e87f2.result -> length_node.items\n        length_node.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1099, y: 76) filter_8f6a2e root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n                isnumeric_1088d5.input -> elem_9f6850\n                isnumeric_1088d5.is_numeric -> bool_af09a7\n            }\n        }\n        instance(x: 1386, y: 76) length_3e2c1a root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_8f6a2e.items\n        filter_8f6a2e.output_list -> length_3e2c1a.list\n        length_3e2c1a.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9c2e4d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c8f5e.gen_0\n        pow_4c8f5e.result -> sum_365f7b\n        4 -> pow_4c8f5e.y\n        expression_2d6da6.result -> pow_4c8f5e.x\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.gen_1\n        data_cde0dc -> pow_f892a4.gen_0\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4c0d8e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c0d8e.gen_1\n        data_cde0dc -> pow_4c0d8e.gen_0\n        expression_2d6da6.result -> pow_4c0d8e.input\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_4c0d8e.output -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.gen_1\n        data_cde0dc -> pow_f892a4.gen_0\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.gen_1\n        data_cde0dc -> pow_f892a4.gen_0\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e4d8c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9e4d8c.y\n        data_cde0dc -> pow_9e4d8c.x\n        expression_2d6da6.result -> sum_365f7b\n        4 -> pow_9e4d8c.power\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.gen_1\n        data_cde0dc -> pow_f892a4.gen_0\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e4d8c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9e4d8c.y\n        data_cde0dc -> pow_9e4d8c.x\n        expression_2d6da6.result -> sum_365f7b\n        4 -> pow_9e4d8c.power\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.gen_1\n        data_cde0dc -> pow_f892a4.gen_0\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.gen_1\n        data_cde0dc -> pow_f892a4.gen_0\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_b2508f\n\n        instance(x: -105, y: -110) mul_2d7c1e root.Std_k98ojb.Math.Mul {}\n        instance(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = surface_area\n        instance(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = surface_area\n        a_9f7759 -> mul_2d7c1e.first\n        6 -> mul_2d7c1e.second\n        getter_9cceb3.value -> surface_area_b2508f\n        mul_2d7c1e.result -> setter_1cedb2.new_value\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_cube_d6e930 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_3e5f9a\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_96023e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_adfa16 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_547f34 root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        6 -> mul_adfa16.first\n        side_length_6b655b -> mul_adfa16.second\n        mul_adfa16.result -> add_88bb8a.first\n        2 -> mul_547f34.first\n        side_length_6b655b -> mul_547f34.second\n        mul_547f34.result -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_3e5f9a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> surface_area_cube_96023e.execute_cdac2a\n        surface_area_cube_96023e.continue_d9efd7 -> setter_375321.execute\n        getter_38583a.value -> output_732a8a\n        0 -> setter_41e4ad.new_value\n        setter_375321.continue -> continue_d9efd7\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -280, y: -211, name: \"execute\") trigger() execute_1a9f0e\n        in(x: -268, y: -92, name: \"size\") property(Number) size_a7c8d3\n\n        out(x: 1046, y: -647, name: \"continue\") trigger() continue_e5b2ee\n        out(x: 1069, y: -269, name: \"output\") property(Number) output_1a4f7e\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"size <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_9c8a4f root.main.surface_area_cube {}\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> add_88bb8a.first\n        10 -> div_547f34.second\n        div_547f34.result -> surface_area_cube_9c8a4f.size_a7c8d3\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_e5efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> surface_area_cube_9c8a4f.execute_cdac2a\n        surface_area_cube_9c8a4f.continue_d9efd7 -> setter_375321.execute\n        surface_area_cube_9c8a4f.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_e5b2ee\n        getter_38583a.value -> output_1a4f7e\n        size_a7c8d3 -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        floor_61b38d.output -> modulo_adfa16.value\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n\n        instance(x: 15, y: -1) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"size * size * 6\"\n        }\n        size_a7c8d3 -> math_expr_node.gen_0\n        math_expr_node.result -> output_1a4f7e\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -426, y: -421, name: \"execute\") trigger() execute_9e8f6a\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_7c3b5d\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_e2c1cf\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_4a0e9f\n\n        instance(x: 80, y: -417) ifexpression_7b3d8f root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_1a5e2c root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_9f3d8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) mul_6e4a8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 99, y: -249) mul_1c5b7f root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_3d9e4a\") setter_3d9e4a = sum\n        setter(x: 875, y: -518, name: \"setter_1c5f8a\") setter_1c5f8a = sum\n        getter(x: 902, y: -314, name: \"getter_2b6b7d\") getter_2b6b7d = sum\n\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        side_length_7c3b5d -> floor_61b38d.input\n        floor_61b38d.output -> ifexpression_7b3d8f.gen_0\n\n        6 -> mul_9f3d8f.first\n        side_length_7c3b5d -> mul_9f3d8f.second\n        mul_9f3d8f.result -> mul_1c5b7f.first\n        side_length_7c3b5d -> mul_6e4a8f.first\n        mul_9f3d8f.result -> mul_6e4a8f.second\n        mul_1c5b7f.result -> surface_area_cube_1a5e2c.side_length_7c3b5d\n        0 -> setter_3d9e4a.new_value\n        setter_3d9e4a.continue -> ifexpression_7b3d8f.execute\n        ifexpression_7b3d8f.then -> continue_e2c1cf\n        execute_9e8f6a -> setter_3d9e4a.execute\n\n        ifexpression_7b3d8f.else -> surface_area_cube_1a5e2c.execute_9e8f6a\n        surface_area_cube_1a5e2c.continue_e2c1cf -> setter_1c5f8a.execute\n        mul_6e4a8f.result -> setter_1c5f8a.new_value\n        setter_1c5f8a.continue -> continue_e2c1cf\n\n        getter_2b6b7d.value -> output_4a0e9f\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_1a5e2c root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -426, y: -421, name: \"execute\") trigger() execute_3e1f9a\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_96023e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_adfa16 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_547f34 root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        6 -> mul_adfa16.first\n        side_length_6b655b -> mul_adfa16.second\n        mul_adfa16.result -> add_88bb8a.first\n        2 -> mul_547f34.first\n        side_length_6b655b -> mul_547f34.second\n        mul_547f34.result -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_3e1f9a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> surface_area_cube_96023e.execute_cdac2a\n        surface_area_cube_96023e.continue_d9efd7 -> setter_375321.execute\n        getter_38583a.value -> output_732a8a\n        setter_375321.continue -> continue_d9efd7\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -102, y: 11, name: \"size\") property(Number) size_1a9f0e\n\n        out(x: 1078, y: 6, name: \"area\") property(Number) area_7b3c2d\n\n        instance(x: 18, y: 13) mul_5c4f4f root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -11) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size^2\"\n        }\n        instance(x: 18, y: -43) pow_1a8d7c root.Std_k98ojb.Math.Pow {}\n        size_1a9f0e -> mul_5c4f4f.first\n        size_1a9f0e -> pow_1a8d7c.x\n        2 -> pow_1a8d7c.y\n        pow_1a8d7c.result -> mul_5c4f4f.second\n        math_expr_node.gen_0 -> size_1a9f0e\n        mul_5c4f4f.result -> math_expr_node.gen_1\n        math_expr_node.result -> area_7b3c2d\n    }\n\n    \n\n    instance(x: 426, y: -303) surface_area_cube_a8f9f6 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9f0a8b\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_7e1c4d\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_5a3c9f\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_2b0a9f\n\n        instance(x: 80, y: -417) ifexpression_1e7d6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_8c2a5f root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_1d7e6 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) mul_9f0f4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 99, y: -249) mul_2a3c5 root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_1e7d6\") setter_1e7d6 = sum\n        setter(x: 875, y: -518, name: \"setter_8c2a5f\") setter_8c2a5f = sum\n        getter(x: 902, y: -314, name: \"getter_9f0f4\") getter_9f0f4 = sum\n        instance(x: -202, y: -236) floor_1e7d6 root.Std_k98ojb.Math.Floor {}\n        6 -> mul_2a3c5.first\n        side_length_7e1c4d -> mul_2a3c5.second\n        2 -> mul_1d7e6.first\n        side_length_7e1c4d -> mul_1d7e6.second\n        2 -> mul_9f0f4.first\n        side_length_7e1c4d -> mul_9f0f4.second\n        0 -> setter_1e7d6.new_value\n        setter_1e7d6.continue -> ifexpression_1e7d6.execute\n        ifexpression_1e7d6.then -> continue_5a3c9f\n        execute_9f0a8b -> setter_1e7d6.execute\n        ifexpression_1e7d6.else -> surface_area_cube_8c2a5f.execute_9f0a8b\n        surface_area_cube_8c2a5f.continue_5a3c9f -> setter_8c2a5f.execute\n        mul_2a3c5.result -> mul_1d7e6.second\n        mul_1d7e6.result -> mul_9f0f4.second\n        mul_9f0f4.result -> setter_8c2a5f.new_value\n        setter_8c2a5f.continue -> continue_5a3c9f\n        getter_9f0f4.value -> output_2b0a9f\n        side_length_7e1c4d -> floor_1e7d6.input\n        floor_1e7d6.output -> ifexpression_1e7d6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_8c2a5f root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -102, y: 11, name: \"size\") property(Number) size_1a9f0e\n\n        out(x: 104, y: -10, name: \"area\") property(Number) area_7b2c4d\n\n        instance(x: 15, y: 13) mul_3f6a1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 14, y: -17) pow_9e8d0 root.Std_k98ojb.Math.Pow {}\n        instance(x: 18, y: -56) mul_7c5c2 root.Std_k98ojb.Math.Mul {}\n        size_1a9f0e -> pow_9e8d0.x\n        3 -> pow_9e8d0.y\n        pow_9e8d0.result -> mul_3f6a1.first\n        6 -> mul_7c5c2.second\n        mul_3f6a1.result -> mul_7c5c2.first\n        mul_7c5c2.result -> area_7b2c4d\n    }\n\n    \n\n    instance(x: -90, y: -26) surface_area_cube_ae8c0 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -451, y: -421, name: \"execute\") trigger() execute_1a0d8f\n        in(x: -436, y: -213, name: \"size\") property(Number) size_a6cea7\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"size <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_1c2f5e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_8a9d3f root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_1e5c6c root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = surface_area\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = surface_area\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = surface_area\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        size_a6cea7 -> mul_1e5c6c.first\n        2 -> mul_1e5c6c.second\n        mul_1e5c6c.result -> mul_8a9d3f.first\n        mul_1e5c6c.result -> mul_8a9d3f.second\n        mul_8a9d3f.result -> add_88bb8a.first\n        6 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        size_a6cea7 -> floor_61b38d.input\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_1a0d8f -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> surface_area_cube_1c2f5e.execute_1a0d8f\n        surface_area_cube_1c2f5e.continue_d9efd7 -> setter_375321.execute\n        getter_38583a.value -> output_732a8a\n        setter_375321.continue -> continue_d9efd7\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -300, y: -220, name: \"execute\") trigger() execute_3e9a5f\n        in(x: -287, y: -103, name: \"size\") property(Number) size_a6cea7\n\n        out(x: 1068, y: -221, name: \"continue\") trigger() continue_1b0c8d\n        out(x: 1092, y: -104, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: 14, y: -220) mul_6e87f2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 17, y: -103) mul_cb50ae root.Std_k98ojb.Math.Mul {}\n        instance(x: 15, y: -127) mul_3d7de6 root.Std_k98ojb.Math.Mul {}\n        instance(x: 18, y: -151) add_96023e root.Std_k98ojb.Math.Add {}\n        size_a6cea7 -> mul_6e87f2.first\n        size_a6cea7 -> mul_cb50ae.first\n        size_a6cea7 -> mul_3d7de6.first\n        6 -> mul_6e87f2.second\n        6 -> mul_cb50ae.second\n        2 -> mul_3d7de6.second\n        mul_6e87f2.result -> add_96023e.first\n        mul_cb50ae.result -> add_96023e.second\n        mul_3d7de6.result -> add_96023e.third\n        add_96023e.result -> output_b1d7f8\n        execute_3e9a5f -> continue_1b0c8d\n    }\n\n    \n\n    instance(x: 426, y: -303) surface_area_cube_node root.main.surface_area_cube {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 157, name: \"list\") property(List) list_9a3f8e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_9a3f8e -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_de624f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_9a3f8e -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -284, y: 1, name: \"list\") property(List) list_0e6f9d\n\n        out(x: 593, y: 20, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) max_6d05b0 root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 0) min_6d05b0 root.Std_k98ojb.List.Min {}\n        list_0e6f9d -> max_6d05b0.items\n        list_0e6f9d -> min_6d05b0.items\n        instance(x: 752, y: 93) sub_875761 root.Std_k98ojb.Math.Sub {}\n        max_6d05b0.max -> sub_875761.first\n        min_6d05b0.min -> sub_875761.second\n        sub_875761.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_max_min_2c856f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 0, name: \"list\") property(List) list_1e3b9f\n\n        out(x: 443, y: 63, name: \"output\") property(Number) output_b5a8c7\n\n        instance(x: -79, y: 10) max_2d6c4f root.Std_k98ojb.List.Max {}\n        instance(x: -78, y: 170) min_1e3b9f root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 62) sub_7a5c0c root.Std_k98ojb.Math.Sub {}\n        list_1e3b9f -> max_2d6c4f.items\n        list_1e3b9f -> min_1e3b9f.items\n        max_2d6c4f.max -> sub_7a5c0c.first\n        min_1e3b9f.min -> sub_7a5c0c.second\n        sub_7a5c0c.result -> output_b5a8c7\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_4d2d0e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 165, name: \"list\") property(List) list_0f9d8e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_0f9d8e -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_de624f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_0f9d8e -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -281, y: 165, name: \"list\") property(List) list_1a8f9e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_eb2d3c\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_1a8f9e -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_a54bdc root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_a54bdc.left\n            find_de624f.item -> greaterthan_a54bdc.right\n            greaterthan_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_148aeb root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_148aeb.left\n            ``Max value_0b1361``.item -> lessthan_148aeb.right\n            lessthan_148aeb.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_1a8f9e -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_eb2d3c\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 1, name: \"list\") property(List) list_0e3f5a\n\n        out(x: 443, y: 27, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -80, y: 2) max_4d9b8f root.Std_k98ojb.List.Max {}\n        instance(x: -81, y: 145) min_1e7a3c root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 27) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_0e3f5a -> max_4d9b8f.items\n        list_0e3f5a -> min_1e7a3c.items\n        max_4d9b8f.max -> sub_852f2e.first\n        min_1e7a3c.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: 48, y: -11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1f9b5e\n\n        out(x: 593, y: 11, name: \"output\") property(Number) output_ea2d7c\n\n        instance(x: 0, y: 0) max_6d05b0 root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 0) min_6d05b0 root.Std_k98ojb.List.Min {}\n        list_1f9b5e -> max_6d05b0.items\n        list_1f9b5e -> min_6d05b0.items\n        instance(x: 752, y: 93) sub_875761 root.Std_k98ojb.Math.Sub {}\n        max_6d05b0.max -> sub_875761.first\n        min_6d05b0.min -> sub_875761.second\n        sub_875761.result -> output_ea2d7c\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_max_min_2c856f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 165, name: \"list\") property(List) list_0d9b1f\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_ea2c6e\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_0d9b1f -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_de624f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_0d9b1f -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_ea2c6e\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 0, name: \"list\") property(List) list_1e8b5f\n\n        out(x: 544, y: 9, name: \"output\") property(Number) output_7c2d4a\n\n        instance(x: 188, y: 3) sub_6f1b1e root.Std_k98ojb.Math.Sub {}\n        instance(x: -107, y: 0, name: \"Max\") max_f8c5ea root.Std_k98ojb.List.Max {}\n        instance(x: -108, y: 120, name: \"Min\") min_7a3f9e root.Std_k98ojb.List.Min {}\n        list_1e8b5f -> max_f8c5ea.items\n        list_1e8b5f -> min_7a3f9e.items\n        max_f8c5ea.max -> sub_6f1b1e.first\n        min_7a3f9e.min -> sub_6f1b1e.second\n        sub_6f1b1e.result -> output_7c2d4a\n    }\n\n    \n\n    instance(x: -56, y: 10) diff_max_min_8f5c9e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -283, y: 158, name: \"list\") property(List) list_0f9a3e\n\n        out(x: 547, y: 147, name: \"output\") property(Number) output_eb2c1d\n\n        instance(x: 201, y: 146) sub_7c8a4f root.Std_k98ojb.Math.Sub {}\n        instance(x: -1049, y: -375) max_6e5a3c root.Std_k98ojb.List.Max {}\n        instance(x: -1059, y: -696) min_d831ca root.Std_k98ojb.List.Min {}\n        list_0f9a3e -> max_6e5a3c.items\n        list_0f9a3e -> min_d831ca.items\n        max_6e5a3c.max -> sub_7c8a4f.first\n        min_d831ca.min -> sub_7c8a4f.second\n        sub_7c8a4f.result -> output_eb2c1d\n    }\n\n    \n\n    instance(x: 48, y: -67) diff_max_min_f21f44 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 6, name: \"input\") property(Number) input_0a3f9e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_1b7c4d\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_e5c8ec\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_9a2e3f\n\n        instance(x: -104, y: -110) ifexpression_1b7d0c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_0a3f9e -> ifexpression_1b7d0c.gen_0\n        ifexpression_1b7d0c.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        false -> setter_1cedb2.new_value\n        getter_9cceb3.value -> output_e5c8ec\n        execute_1b7c4d -> ifexpression_1b7d0c.execute\n        ifexpression_1b7d0c.else -> setter_1cedb2.execute\n        false -> setter_1cedb2.new_value\n        true -> setter_1cedb2.new_value\n        setter_1cedb2.continue -> continue_9a2e3f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_7c8d5f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 11, name: \"input\") property(Number) input_1a8f9e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_eb2c0d\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_f3c7ee\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_9f8a6e\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a8f9e -> ifexpression_e38995.gen_0\n        execute_eb2c0d -> ifexpression_e38995.execute\n        ifexpression_e38995.value -> output_f3c7ee\n        ifexpression_e38995.then -> continue_9f8a6e\n        ifexpression_e38995.else -> continue_9f8a6e\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_1d5b2f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 0, name: \"input\") property(Number) input_1f9a3e\n        in(x: -451, y: -115, name: \"execute\") trigger() execute_e5b7c6\n\n        out(x: 1228, y: 2, name: \"output\") property(Bool) output_f0d4aa\n        out(x: 1219, y: -114, name: \"continue\") trigger() continue_1a3e9f\n\n        instance(x: 0, y: 0) modulo_7b8c5c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 336, y: 16) equal_2d6c1f root.Std_k98ojb.Logic.Equal {}\n        input_1f9a3e -> modulo_7b8c5c.value\n        2 -> modulo_7b8c5c.divisor\n        modulo_7b8c5c.result -> equal_2d6c1f.left\n        0 -> equal_2d6c1f.right\n        equal_2d6c1f.result -> output_f0d4aa\n        execute_e5b7c6 -> continue_1a3e9f\n    }\n\n    \n\n    instance(x: -175, y: -64) is_even_8c8f4f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 0, name: \"input\") property(Number) input_1a9e8f\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_7c2d3b\n\n        out(x: 1226, y: -115, name: \"continue\") trigger() continue_4a0c8e\n        out(x: 1215, y: 125, name: \"output\") property(Bool) output_9f1c8f\n\n        instance(x: 752, y: 127) ifexpression_6d2b3f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a9e8f -> ifexpression_6d2b3f.gen_0\n        execute_7c2d3b -> ifexpression_6d2b3f.execute\n        ifexpression_6d2b3f.value -> output_9f1c8f\n        ifexpression_6d2b3f.then -> continue_4a0c8e\n        ifexpression_6d2b3f.else -> continue_4a0c8e\n    }\n\n    \n\n    instance(x: -291, y: 11) is_even_1a9f8f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 6, name: \"input\") property(Number) input_1a8f9e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_eb2d5c\n\n        out(x: 1267, y: 4, name: \"output\") property(Bool) output_6a0b9e\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_8f3f7f\n\n        instance(x: -105, y: -110) ifexpression_5c1d8f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_1a8f9e -> ifexpression_5c1d8f.gen_0\n        execute_eb2d5c -> ifexpression_5c1d8f.execute\n        getter_9cceb3.value -> output_6a0b9e\n        ifexpression_5c1d8f.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_5c1d8f.else -> continue_8f3f7f\n        false -> setter_1cedb2.new_value\n        setter_1cedb2.continue -> continue_8f3f7f\n    }\n\n    \n\n    instance(x: -174, y: 59) is_even_f0c9a6 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 2, name: \"input\") property(Number) input_1a0f3e\n        in(x: -452, y: -111, name: \"execute\") trigger() execute_eb9d5c\n\n        out(x: 1227, y: 6, name: \"continue\") trigger() continue_f4f8ab\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_1a0e3e\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = output\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = output\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = output\n        ifexpression_875761.else -> continue_f4f8ab\n        ifexpression_875761.value -> output_1a0e3e\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        input_1a0f3e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_f4f8ab\n        for_d26972.item -> setter_9d4f1c.new_value\n        execute_eb9d5c -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_even_f0b7a5 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 17, name: \"input\") property(Number) input_1a9f0e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_e5b8d7\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_f6c3ec\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_9a2e4f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a9f0e -> ifexpression_e38995.gen_0\n        execute_e5b8d7 -> ifexpression_e38995.execute\n        ifexpression_e38995.value -> output_f6c3ec\n        ifexpression_e38995.then -> continue_9a2e4f\n        ifexpression_e38995.else -> continue_9a2e4f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_1b8d7f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 3, name: \"input\") property(Number) input_1a0f5e\n        in(x: -451, y: -112, name: \"execute\") trigger() execute_9b2c6d\n\n        out(x: 1234, y: -111, name: \"continue\") trigger() continue_7f8a5e\n        out(x: 1223, y: 63, name: \"output\") property(Bool) output_1a0f5e\n\n        instance(x: -81, y: 62) ifexpression_6b2c4d root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a0f5e -> ifexpression_6b2c4d.gen_0\n        execute_9b2c6d -> ifexpression_6b2c4d.execute\n        ifexpression_6b2c4d.value -> output_1a0f5e\n        ifexpression_6b2c4d.then -> continue_7f8a5e\n        ifexpression_6b2c4d.else -> continue_7f8a5e\n    }\n\n    \n\n    instance(x: -63, y: 11) is_even_f3e1d9 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 166, name: \"input\") property(Number) input_1a8e6f\n        in(x: -485, y: 30, name: \"execute\") trigger() execute_9c7d3b\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_e2a4ee\n        out(x: 1218, y: -114, name: \"continue\") trigger() continue_f1f5e6\n\n        instance(x: 532, y: 147) modulo_7b9d8c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 532, y: 27) equal_3a2e4c root.Std_k98ojb.Logic.Equal {}\n        input_1a8e6f -> modulo_7b9d8c.value\n        2 -> modulo_7b9d8c.divisor\n        modulo_7b9d8c.result -> equal_3a2e4c.left\n        0 -> equal_3a2e4c.right\n        equal_3a2e4c.result -> output_e2a4ee\n        execute_9c7d3b -> continue_f1f5e6\n    }\n\n    \n\n    instance(x: -291, y: 177) is_even_8e0c8c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 3, name: \"input\") property(Number) input_9e8a0f\n        in(x: -449, y: -111, name: \"execute\") trigger() execute_eb2c7d\n\n        out(x: 1224, y: 5, name: \"continue\") trigger() continue_6f1f3b\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_0e9a3f\n\n        instance(x: -92, y: -97) modulo_2d7c4f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 146, y: -96) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        input_9e8a0f -> modulo_2d7c4f.value\n        2 -> modulo_2d7c4f.divisor\n        modulo_2d7c4f.result -> equal_f89569.left\n        0 -> equal_f89569.right\n        equal_f89569.result -> output_0e9a3f\n        execute_eb2c7d -> continue_6f1f3b\n    }\n\n    \n\n    instance(x: -84, y: 59) is_even_5e4b8c root.main.is_even {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_9d5f8c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -1) map_2e1444 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 515, y: 44) orelse_f7c284f root.Std_k98ojb.Std.OrElse {}\n        characters_7b3b7b.characters -> map_2e1444.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"output\") property(Any) output_3bc2ae\n\n            instance(x: 89, y: 29) find_1088d5 root.Std_k98ojb.Iteration.Find {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 515, y: 44) orelse_f7c284f root.Std_k98ojb.Std.OrElse {}\n            elem_9f6850 -> find_1088d5.predicate\n            func() {\n                in(x: -113, y: 34, name: \"current\") property(String) current_afd5b1\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                elem_9f6850 -> contains_d42dce.input\n                current_afd5b1 -> contains_d42dce.contains\n                contains_d42dce.result -> bool_1eb6e9\n            } -> find_1088d5.predicate\n            map_2e1444.output -> find_1088d5.items\n            find_1088d5.item -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> orelse_f7c284f.first\n            null -> orelse_f7c284f.second\n            orelse_f7c284f.value -> output_3bc2ae\n        } -> map_2e1444.handler\n        find_9d5f8c.predicate {\n            in(x: -113, y: 34, name: \"current\") property(String) current_afd5b1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            map_2e1444.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        }\n        find_9d5f8c.items -> characters_7b3b7b.characters\n        input_0 -> characters_7b3b7b.input\n        find_9d5f8c.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_807ffd.left\n            false -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: 0, y: -1) for_8f5c9e root.Std_k98ojb.Std.For {}\n        input_0 -> for_8f5c9e.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) characters_1b8c5e root.Std_k98ojb.Strings.Characters {}\n            instance(x: 310, y: 35) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            for_8f5c9e.item -> characters_1b8c5e.input\n            elem_9f6850 -> contains_d42dce.contains\n            characters_1b8c5e.characters -> contains_d42dce.input\n            contains_d42dce.result -> bool_af09a7\n        } -> for_8f5c9e.onItem\n        find_6d05b0.items -> for_8f5c9e.trigger\n        find_6d05b0.item -> output_3bc2ae\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -105, y: 126) find_0f1e8c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 109, y: 128) map_2a5d6f root.Std_k98ojb.Iteration.Map {\n            handler: \"Std.If(it in seen, it, null)\"\n        }\n        instance(x: -104, y: 256) filter_7e9c1f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 109, y: 255) map_2a5d6f_0 root.Std_k98ojb.Iteration.Map {\n            handler: \"Std.If(it != null, it, null)\"\n        }\n        characters_7b3b7b.characters -> find_0f1e8c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Any) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) in_45e806 root.Std_k98ojb.List.Contains {}\n            seen -> in_45e806.list\n            current_afd5b1 -> in_45e806.item\n            in_45e806.result -> bool_1eb6e9\n        } -> map_2a5d6f.handler\n        characters_7b3b7b.characters -> map_2a5d6f.items\n        map_2a5d6f.output_list -> find_0f1e8c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Any) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) notequal_45e806 root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> notequal_45e806.left\n            null -> notequal_45e806.right\n            notequal_45e806.result -> bool_1eb6e9\n        } -> filter_7e9c1f.handler\n        map_2a5d6f.output_list -> filter_7e9c1f.items\n        filter_7e9c1f.output_list -> map_2a5d6f_0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Any) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) notequal_45e806 root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> notequal_45e806.left\n            null -> notequal_45e806.right\n            notequal_45e806.result -> bool_1eb6e9\n        } -> map_2a5d6f_0.handler\n        filter_7e9c1f.output_list -> find_0f1e8c.items\n        map_2a5d6f_0.output_list -> find_0f1e8c.items\n        input_ai -> characters_7b3b7b.input\n        find_0f1e8c.item -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) first_repeated_char_node root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 756, y: -371, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 394, y: -339) data_3c713b  = [chars, seen]\n        instance(x: 46, y: -383, name: \"characters\") characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"find repeated char\") find_d42dce root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 1) tolower_634b7e root.Std_k98ojb.Strings.ToLower {}\n        data_3c713b -> output_ebef81\n        input_0 -> characters_2e1444.input\n        characters_2e1444.characters -> find_d42dce.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            tolower_634b7e.output -> contains_45e806.input\n            current_afd5b1 -> contains_45e806.contains\n            data_3c713b.seen -> contains_45e806.search\n            contains_45e806.result -> bool_1eb6e9\n        } -> find_d42dce.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            tolower_634b7e.output -> contains_45e806.input\n            current_afd5b1 -> contains_45e806.contains\n            data_3c713b.seen -> contains_45e806.search\n            contains_45e806.result -> bool_1eb6e9\n        } -> find_d42dce.predicate\n        input_0 -> tolower_634b7e.input\n        find_d42dce.item -> data_3c713b.first\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 756, y: -371, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 394, y: -339) data_3c713b  = [chars, seen]\n        instance(x: 46, y: -383, name: \"characters\") characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"find repeated char\") find_d42dce root.Std_k98ojb.Iteration.Find {}\n        instance(x: 265, y: 0) contains_c3c713b root.Std_k98ojb.List.Contains {}\n        characters_2e1444.characters -> data_3c713b.chars\n        input_0 -> characters_2e1444.input\n        data_3c713b.chars -> find_d42dce.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            data_3c713b.seen -> contains_c3c713b.list\n            current_afd5b1 -> contains_c3c713b.item\n            contains_c3c713b.contains -> bool_1eb6e9\n        } -> find_d42dce.predicate\n        find_d42dce.item -> output_ebef81\n        data_3c713b.seen -> contains_c3c713b.list\n        find_d42dce.item -> data_3c713b.seen\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3c7b4e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5a6f9d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -1) map_8a6c9d root.Std_k98ojb.Iteration.Map {\n            handler: \"Std.If(it in seen, it, null)\"\n        }\n        instance(x: 265, y: -2) set_7e5f4d root.Std_k98ojb.List.Set {}\n        characters_3c7b4e.characters -> map_8a6c9d.items\n        list_empty_0 -> set_7e5f4d.list\n        instance(x: 530, y: -1) ifexpression_7e2b42 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != null\"\n        }\n        map_8a6c9d.output_list -> find_5a6f9d.items\n        set_7e5f4d.listWithItem -> map_8a6c9d.seen\n        ifexpression_7e2b42.then -> result_0\n        find_5a6f9d.item -> result_0\n        input_0 -> characters_3c7b4e.input\n        list_empty_0 -> List.Empty {}\n        ifexpression_7e2b42.else -> find_5a6f9d.predicate\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_2\n\n        instance(x: 0, y: 0) find_3 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_4\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5\n\n            instance(x: 89, y: 29) contains_6 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_7 root.Std_k98ojb.Logic.NotEqual {}\n            input_1 -> contains_6.input\n            elem_4 -> contains_6.contains\n            contains_6.result -> notequal_7.left\n            find_3.item -> notequal_7.right\n            notequal_7.result -> bool_5\n        } -> find_3.predicate\n        instance(x: 0, y: -1) characters_8 root.Std_k98ojb.Strings.Characters {}\n        input_1 -> characters_8.input\n        characters_8.characters -> find_3.items\n        find_3.item -> output_2\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_9 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3c7b4e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5f8d6a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"count\") count_2c7c4e root.Std_k98ojb.Std.Count {}\n        characters_3c7b4e.characters -> find_5f8d6a.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) greaterthan_7c2f4a root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> contains_d42dce.input\n            count_2c7c4e.count -> contains_d42dce.contains\n            contains_d42dce.result -> greaterthan_7c2f4a.left\n            1 -> greaterthan_7c2f4a.right\n            greaterthan_7c2f4a.result -> bool_1eb6e9\n        } -> find_5f8d6a.predicate\n        characters_3c7b4e.characters -> count_2c7c4e.items\n        input_0 -> characters_3c7b4e.input\n        find_5f8d6a.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_1\n\n        instance(x: 0, y: 1) characters_3e9b7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_3e9b7c.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) substring_7c2f3a root.Std_k98ojb.Strings.Substring {}\n            instance(x: 415, y: 86) contains_d42dce_0 root.Std_k98ojb.Strings.Contains {}\n            input_1 -> substring_7c2f3a.input\n            substring_7c2f3a.start -> substring_7c2f3a.end\n            find_6d05b0.index + 1 -> substring_7c2f3a.start\n            substring_7c2f3a.substring -> contains_d42dce_0.input\n            current_afd5b1 -> contains_d42dce_0.contains\n            contains_d42dce_0.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        find_6d05b0.item -> result_1\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 756, y: -371, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 394, y: -339) data_3c713b  = [chars, seen]\n        instance(x: 46, y: -383, name: \"characters\") characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"find repeated char\") find_d42dce root.Std_k98ojb.Iteration.Find {}\n        instance(x: 265, y: 0) contains_c7c9f6 root.Std_k98ojb.List.Contains {}\n        characters_2e1444.characters -> data_3c713b.chars\n        input_0 -> characters_2e1444.input\n        data_3c713b.chars -> find_d42dce.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``seen``_45e806 root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> ``seen``_45e806.item\n            data_3c713b.seen -> ``seen``_45e806.list\n            ``seen``_45e806.contains -> bool_1eb6e9\n        } -> find_d42dce.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``seen``_45e806 root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> ``seen``_45e806.item\n            data_3c713b.seen -> ``seen``_45e806.list\n            ``seen``_45e806.contains -> bool_1eb6e9\n        } -> contains_c7c9f6.predicate\n        find_d42dce.item -> output_ebef81\n        contains_c7c9f6.result -> data_3c713b.seen\n        find_d42dce.item -> data_3c713b.seen\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -280, y: 17, name: \"list\") property(List) list_8f3a9e\n\n        out(x: 0, y: 0, name: \"second_smallest\") property(Number) second_smallest_7c2b5d\n\n        instance(x: -101, y: -103) min_c3e343 root.Std_k98ojb.List.Min {}\n        instance(x: -10, y: -104) filter_6f8a1c root.Std_k98ojb.Query.Filter {\n            where: \"it > min\"\n        }\n        instance(x: 110, y: -103) min_9e7d3f root.Std_k98ojb.List.Min {}\n        list_8f3a9e -> min_c3e343.items\n        min_c3e343.min -> filter_6f8a1c.where.gen_0\n        list_8f3a9e -> filter_6f8a1c.list\n        filter_6f8a1c.result -> min_9e7d3f.items\n        min_9e7d3f.min -> second_smallest_7c2b5d\n    }\n\n    \n\n    instance(x: -67, y: 127) second_smallest_4e0b3f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9e4f8a\n\n        out(x: 593, y: 79, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9e4f8a -> find_6d05b0.items\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it != min\"\n        }\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n            find_6d05b0.item -> equal_aabb6e.left\n            elem_9f6850 -> equal_aabb6e.right\n            equal_aabb6e.result -> bool_af09a7\n        } -> filter_7b3b7b.where\n        list_9e4f8a -> filter_7b3b7b.list\n        instance(x: -341, y: 358) min_c3e343 root.Std_k98ojb.List.Min {}\n        find_6d05b0.item -> min_c3e343.items\n        min_c3e343.min -> filter_7b3b7b.gen_1\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        filter_7b3b7b.result -> firstitem_870503.list\n        firstitem_870503.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 127) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -285, y: 0, name: \"list\") property(List) list_9f8a6e\n\n        out(x: 600, y: 1, name: \"second_smallest\") property(Number) second_smallest_3b7c4d\n\n        instance(x: -35, y: 26, name: \"First smallest number\") find_5b2b9f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -34, y: 147, name: \"Second smallest number\") ``First smallest number_7e8c1d`` root.Std_k98ojb.Iteration.Find {}\n        list_9f8a6e -> find_5b2b9f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_3f7b0c\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_e6d5a8\n\n            instance(x: 112, y: 80) less_than_1e9c2 root.Std_k98ojb.Math.LessThan {}\n            current_3f7b0c -> less_than_1e9c2.left\n            find_5b2b9f.item -> less_than_1e9c2.right\n            less_than_1e9c2.result -> bool_e6d5a8\n        } -> find_5b2b9f.predicate\n        list_9f8a6e -> ``First smallest number_7e8c1d``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_3f7b0c\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_e6d5a8\n\n            instance(x: 112, y: 80) less_than_1e9c2 root.Std_k98ojb.Math.LessThan {}\n            current_3f7b0c -> less_than_1e9c2.left\n            find_5b2b9f.item -> less_than_1e9c2.right\n            less_than_1e9c2.result -> bool_e6d5a8\n        } -> ``First smallest number_7e8c1d``.predicate\n        find_5b2b9f.item -> second_smallest_3b7c4d\n    }\n\n    \n\n    instance(x: -289, y: 12) second_smallest_0e9a1c root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 1, name: \"list\") property(List) list_9e8a3f\n\n        out(x: 593, y: 0, name: \"second_smallest\") property(Number) second_smallest_7c2d4b\n\n        instance(x: 0, y: 0) min_5e1a8c root.Std_k98ojb.List.Min {}\n        instance(x: -278, y: 162) filter_9f6c7c root.Std_k98ojb.Query.Filter {\n            where: \"it != smallest\"\n        }\n        instance(x: 0, y: 0) min_1e3d4a root.Std_k98ojb.List.Min {}\n        list_9e8a3f -> min_5e1a8c.items\n        min_5e1a8c.min -> filter_9f6c7c.where.gen_0\n        list_9e8a3f -> filter_9f6c7c.list\n        filter_9f6c7c.result -> min_1e3d4a.items\n        min_1e3d4a.min -> second_smallest_7c2d4b\n    }\n\n    \n\n    instance(x: -56, y: 53) second_smallest_b8b5ea root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) min_1a8f9d root.Std_k98ojb.List.Min {}\n        instance(x: -39, y: 26, name: \"First smallest number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Second smallest number\") ``First smallest number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> min_1a8f9d.items\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            min_1a8f9d.min -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            min_1a8f9d.min -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> ``First smallest number_0b1361``.predicate\n        list_09fcba -> ``First smallest number_0b1361``.items\n        find_de624f.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) second_smallest_f53d27 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 1, name: \"list\") property(List) list_9f6a2e\n\n        out(x: 468, y: 0, name: \"second_smallest\") property(Number) second_smallest_3c7d4b\n\n        instance(x: -12, y: -62, name: \"first pass\") filter_1a5c8f root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: 0, y: 0, name: \"current\") property(Number) current_9e7d6a\n\n                out(x: 0, y: 0, name: \"\") property(Bool) _1f3c4b\n\n                instance(x: -64, y: -30, name: \"Min\") min_2a8b8a root.Std_k98ojb.Math.Min {}\n                current_9e7d6a -> min_2a8b8a.values\n                list_9f6a2e -> min_2a8b8a.values\n                min_2a8b8a.result -> _1f3c4b\n            }\n        }\n        instance(x: 0, y: 0, name: \"second pass\") filter_7d5a9f root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: 0, y: 0, name: \"current\") property(Number) current_1e8c4a\n\n                out(x: 0, y: 0, name: \"\") property(Bool) _7f3d5b\n\n                instance(x: -64, y: -30, name: \"Min\") min_2a8b8a root.Std_k98ojb.Math.Min {}\n                current_1e8c4a -> min_2a8b8a.values\n                filter_1a5c8f.output_list -> min_2a8b8a.values\n                min_2a8b8a.result -> _7f3d5b\n            }\n        }\n        list_9f6a2e -> filter_1a5c8f.items\n        filter_1a5c8f.output_list -> filter_7d5a9f.items\n        instance(x: 0, y: 0) find_3f4b9f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_3f4b9f.predicate\n        filter_7d5a9f.output_list -> find_3f4b9f.items\n        find_3f4b9f.item -> second_smallest_3c7d4b\n    }\n\n    \n\n    instance(x: -53, y: 52) second_smallest_1e8c4a root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9e8f6a\n\n        out(x: 593, y: 29, name: \"number\") property(Number) number_7b1d3c\n\n        instance(x: 0, y: 0) find_2d5f9f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_6a8e4a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1c7f3b\n\n            instance(x: 89, y: 29) min_5e2d9c root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_8a0d4c root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -42, y: 38) find_7f1b6c root.Std_k98ojb.Iteration.Find {}\n            list_9e8f6a -> find_7f1b6c.items\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(Number) current_5d0c4c\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_9e7f3b\n\n                instance(x: 112, y: 80) lessThan_8a1b6c root.Std_k98ojb.Math.LessThan {}\n                current_5d0c4c -> lessThan_8a1b6c.left\n                elem_6a8e4a -> lessThan_8a1b6c.right\n                lessThan_8a1b6c.result -> bool_9e7f3b\n            } -> find_7f1b6c.predicate\n            find_7f1b6c.item -> min_5e2d9c.left\n            elem_6a8e4a -> min_5e2d9c.right\n            min_5e2d9c.result -> notequal_8a0d4c.left\n            find_7f1b6c.item -> notequal_8a0d4c.right\n            notequal_8a0d4c.result -> bool_1c7f3b\n        } -> find_2d5f9f.predicate\n        list_9e8f6a -> find_2d5f9f.items\n        find_2d5f9f.item -> number_7b1d3c\n    }\n\n    \n\n    instance(x: -55, y: 129) second_smallest_0e4c2f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 2, name: \"list\") property(List) list_9e4f6a\n\n        out(x: 0, y: 0, name: \"second_smallest\") property(Number) second_smallest_1b7c3d\n\n        instance(x: 0, y: 0) min_2f8b1f root.Std_k98ojb.List.Min {}\n        instance(x: -101, y: -71) remove_f6a9e4 root.Std_k98ojb.List.Remove {}\n        instance(x: 0, y: 0) min_5c3d7f root.Std_k98ojb.List.Min {}\n        list_9e4f6a -> min_2f8b1f.items\n        min_2f8b1f.min -> remove_f6a9e4.index\n        list_9e4f6a -> remove_f6a9e4.list\n        remove_f6a9e4.listWithoutItem -> min_5c3d7f.items\n        min_5c3d7f.min -> second_smallest_1b7c3d\n    }\n\n    \n\n    instance(x: -63, y: 17) second_smallest_b2d0ed root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 0, name: \"list\") property(List) list_9e3a1f\n\n        out(x: 595, y: 29, name: \"second_smallest\") property(Number) second_smallest_8c2b4d\n\n        instance(x: -41, y: 28, name: \"First smallest number\") find_5e7b6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -42, y: 179, name: \"Second smallest number\") ``First smallest number_2c9a8d`` root.Std_k98ojb.Iteration.Find {}\n        list_9e3a1f -> find_5e7b6f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_a0f4c2\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_a0f4c2 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_5e7b6f.predicate\n        list_9e3a1f -> ``First smallest number_2c9a8d``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_a0f4c2\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_a0f4c2 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            find_5e7b6f.item -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First smallest number_2c9a8d``.predicate\n        ``First smallest number_2c9a8d``.item -> second_smallest_8c2b4d\n    }\n\n    \n\n    instance(x: -292, y: 30) second_smallest_7e1f0c root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) min_1a9f0d root.Std_k98ojb.List.Min {}\n        instance(x: -39, y: 26, name: \"First smallest number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Second smallest number\") ``First smallest number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> min_1a9f0d.items\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            min_1a9f0d.min -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            min_1a9f0d.min -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> ``First smallest number_0b1361``.predicate\n        list_09fcba -> ``First smallest number_0b1361``.items\n        find_de624f.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) second_smallest_f53d27 root.main.second_smallest {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_RAG_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15933,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -176, y: 12, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -177, y: -124, name: \"list2\") property(List) list2_eb0d7c\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_5e6f4e\n\n        instance(x: 133, y: -131) intersection_3a1c9c root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2f9e -> intersection_3a1c9c.left\n        list2_eb0d7c -> intersection_3a1c9c.right\n        instance(x: 360, y: -95) notempty_5f6f4c root.Std_k98ojb.List.NotEmpty {}\n        intersection_3a1c9c.intersection -> notempty_5f6f4c.list\n        notempty_5f6f4c.isEmpty -> output_5e6f4e\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_7d0b8f root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -171, y: 17, name: \"list1\") property(List) list1_3a8b9f\n        in(x: -161, y: -124, name: \"list2\") property(List) list2_7c0d6e\n\n        out(x: 555, y: -98, name: \"output\") property(Bool) output_5e4b1a\n\n        instance(x: 146, y: -96) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_3a8b9f -> intersection_c7c7e6.left\n        list2_7c0d6e -> intersection_c7c7e6.right\n        instance(x: 1058, y: -203) notempty_e5b7c4 root.Std_k98ojb.List.NotEmpty {}\n        intersection_c7c7e6.intersection -> notempty_e5b7c4.list\n        notempty_e5b7c4.isEmpty -> output_5e4b1a\n    }\n\n    \n\n    instance(x: -92, y: 59) common_element_ac7dfb root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -179, y: 11, name: \"list1\") property(List) list1_3a2f8e\n        in(x: -161, y: -114, name: \"list2\") property(List) list2_9c0b4d\n\n        out(x: 504, y: -101, name: \"output\") property(Bool) output_7c1c5a\n\n        instance(x: 142, y: -109) intersection_3f6e9f root.Std_k98ojb.Sets.Intersection {}\n        list1_3a2f8e -> intersection_3f6e9f.left\n        list2_9c0b4d -> intersection_3f6e9f.right\n        instance(x: 398, y: -102) notempty_7f5f2f root.Std_k98ojb.List.NotEmpty {}\n        intersection_3f6e9f.intersection -> notempty_7f5f2f.list\n        notempty_7f5f2f.isEmpty -> output_7c1c5a\n    }\n\n    \n\n    instance(x: -133, y: 39) common_element_eb4d8 root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -172, y: 19, name: \"list1\") property(List) list1_9a8f6e\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_7c3b0d\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_4e1b5a\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_8f6b9f root.Std_k98ojb.Sets.Intersection {}\n        list1_9a8f6e -> intersection_8f6b9f.left\n        list2_7c3b0d -> intersection_8f6b9f.right\n        instance(x: 679, y: -313) notempty_4a5b5f root.Std_k98ojb.List.NotEmpty {}\n        intersection_8f6b9f.intersection -> notempty_4a5b5f.list\n        notempty_4a5b5f.isEmpty -> output_4e1b5a\n    }\n\n    \n\n    instance(x: -138, y: -63) common_element_aad0c2 root.main.common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -179, y: 19, name: \"list1\") property(List) list1_9a3b6f\n        in(x: -177, y: -111, name: \"list2\") property(List) list2_8c7d0e\n\n        out(x: 584, y: -97, name: \"output\") property(Bool) output_5b4a1f\n\n        instance(x: 210, y: -95) intersection_9b6f3c root.Std_k98ojb.Sets.Intersection {}\n        list1_9a3b6f -> intersection_9b6f3c.left\n        list2_8c7d0e -> intersection_9b6f3c.right\n        instance(x: 520, y: -96) notempty_4a5b8c root.Std_k98ojb.List.NotEmpty {}\n        intersection_9b6f3c.intersection -> notempty_4a5b8c.list\n        notempty_4a5b8c.isEmpty -> output_5b4a1f\n    }\n\n    \n\n    instance(x: -138, y: 54) has_common_element_c0e2d7 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -179, y: 12, name: \"list1\") property(List) list1_9e3f5a\n        in(x: -169, y: -125, name: \"list2\") property(List) list2_eb7c8d\n\n        out(x: 584, y: -92, name: \"output\") property(Bool) output_6e4c0f\n\n        instance(x: 208, y: -95) intersection_9a3b5f root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3f5a -> intersection_9a3b5f.left\n        list2_eb7c8d -> intersection_9a3b5f.right\n        instance(x: 520, y: -91) notempty_4a0a6 root.Std_k98ojb.List.NotEmpty {}\n        intersection_9a3b5f.intersection -> notempty_4a0a6.list\n        notempty_4a0a6.isEmpty -> output_6e4c0f\n    }\n\n    \n\n    instance(x: -143, y: 57) common_element_7d8d2 root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -278, y: 18, name: \"list1\") property(List) list1_3e9b8a\n        in(x: -268, y: -123, name: \"list2\") property(List) list2_7c0d5f\n\n        out(x: 584, y: -97, name: \"output\") property(Bool) output_e4b6ba\n\n        instance(x: 166, y: -104) intersection_c1a8e9 root.Std_k98ojb.Sets.Intersection {}\n        list1_3e9b8a -> intersection_c1a8e9.left\n        list2_7c0d5f -> intersection_c1a8e9.right\n        instance(x: 467, y: -95) notempty_4a6b5c root.Std_k98ojb.List.NotEmpty {}\n        intersection_c1a8e9.intersection -> notempty_4a6b5c.list\n        notempty_4a6b5c.isEmpty -> output_e4b6ba\n    }\n\n    \n\n    instance(x: -92, y: 59) common_element_a7f0d2 root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -171, y: 19, name: \"list1\") property(List) list1_9e3f8a\n        in(x: -161, y: -120, name: \"list2\") property(List) list2_7b0d6c\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_4b5a9e\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_3f1c8e root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3f8a -> intersection_3f1c8e.left\n        list2_7b0d6c -> intersection_3f1c8e.right\n        instance(x: 188, y: -50) notempty_5b4b4f root.Std_k98ojb.List.NotEmpty {}\n        intersection_3f1c8e.intersection -> notempty_5b4b4f.list\n        notempty_5b4b4f.isEmpty -> output_4b5a9e\n    }\n\n    \n\n    instance(x: -138, y: -63) common_element_aad0c2 root.main.common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -178, y: 20, name: \"list1\") property(List) list1_3a2b8f\n        in(x: -177, y: -119, name: \"list2\") property(List) list2_7e9c6d\n\n        out(x: 506, y: -47, name: \"output\") property(Bool) output_5b1f4a\n\n        instance(x: 221, y: -45, name: \"intersection\") intersection_8c3a1f root.Std_k98ojb.Sets.Intersection {}\n        list1_3a2b8f -> intersection_8c3a1f.left\n        list2_7e9c6d -> intersection_8c3a1f.right\n        instance(x: 452, y: -47) notempty_5b0c4c root.Std_k98ojb.List.NotEmpty {}\n        intersection_8c3a1f.intersection -> notempty_5b0c4c.list\n        notempty_5b0c4c.isEmpty -> output_5b1f4a\n    }\n\n    \n\n    instance(x: -140, y: 43) has_common_element_7e2d9c root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -177, y: 20, name: \"list1\") property(List) list1_8a3f5e\n        in(x: -169, y: -120, name: \"list2\") property(List) list2_eb0d7c\n\n        out(x: 555, y: -94, name: \"output\") property(Bool) output_4f6f9e\n\n        instance(x: 144, y: -92) intersection_1a8a5f root.Std_k98ojb.Sets.Intersection {}\n        list1_8a3f5e -> intersection_1a8a5f.left\n        list2_eb0d7c -> intersection_1a8a5f.right\n        instance(x: 424, y: -95) notempty_4b6c7f root.Std_k98ojb.List.NotEmpty {}\n        intersection_1a8a5f.intersection -> notempty_4b6c7f.list\n        notempty_4b6c7f.isEmpty -> output_4f6f9e\n    }\n\n    \n\n    instance(x: -92, y: 59) has_common_element_3e2d1 root.main.has_common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 3, name: \"list\") property(List) list_9a8f1e\n\n        out(x: 1227, y: 2, name: \"output\") property(Bool) output_eb0d5c\n\n        instance(x: 772, y: 76) filter_6e4f9f root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: -320, y: 35, name: \"sorted list\") sort_3a7c2d root.Std_k98ojb.List.Sort {}\n        instance(x: 146, y: -96) length_8f9e4f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) lessthanorequal_5b1d6a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1057, y: 93) ifexpression_c0e9f8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        instance(x: -275, y: -35) getat_5c6d4a root.Std_k98ojb.List.GetAt {}\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_7a8e3b root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        ifexpression_c0e9f8.else -> output_eb0d5c\n        ifexpression_c0e9f8.value -> output_eb0d5c\n        list_9a8f1e -> filter_6e4f9f.list\n        filter_6e4f9f.result -> sort_3a7c2d.list\n        sort_3a7c2d.sortedList -> length_8f9e4f.list\n        sort_3a7c2d.sortedList -> for_7a8e3b.items\n        for_7a8e3b.item -> ifexpression_c0e9f8.gen_2\n        for_7a8e3b.index -> ifexpression_c0e9f8.gen_0\n        getter_b280eb.value -> ifexpression_c0e9f8.gen_1\n        for_7a8e3b.onItem -> ifexpression_c0e9f8.execute\n        for_7a8e3b.done -> output_eb0d5c\n        for_7a8e3b.item -> setter_9d4f1c.new_value\n        sort_3a7c2d.sortedList -> getat_5c6d4a.list\n        0 -> getat_5c6d4a.index\n        getat_5c6d4a.itemAtIndex -> setter_38e107.new_value\n        length_8f9e4f.length -> lessthanorequal_5b1d6a.left\n        2 -> lessthanorequal_5b1d6a.right\n        lessthanorequal_5b1d6a.result -> ifexpression_c0e9f8.execute\n        setter_38e107.continue -> for_7a8e3b.reset\n        setter_9d4f1c.continue -> for_7a8e3b.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_f5b2e6 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -280, y: 3, name: \"list\") property(List) list_1e8f6a\n\n        out(x: 1227, y: 2, name: \"output\") property(Bool) output_5c0d9b\n\n        instance(x: 752, y: -11) ifexpression_3a4c8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 76, name: \"getter_9f7e6d\") getter_9f7e6d = previous\n        setter(x: 679, y: -311, name: \"setter_ea3b4c\") setter_ea3b4c = previous\n        instance(x: 321, y: -127) for_8e1f5c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -228, name: \"setter_ea3b4c\") setter_2d7c9e = previous\n        instance(x: -275, y: -143) getat_6f8b1c root.Std_k98ojb.List.GetAt {}\n        ifexpression_3a4c8c.else -> continue_5b0f5c\n        ifexpression_3a4c8c.value -> output_5c0d9b\n        ifexpression_3a4c8c.then -> setter_ea3b4c.execute\n        list_1e8f6a -> for_8e1f5c.items\n        for_8e1f5c.item -> ifexpression_3a4c8c.gen_2\n        for_8e1f5c.index -> ifexpression_3a4c8c.gen_0\n        getter_9f7e6d.value -> ifexpression_3a4c8c.gen_1\n        for_8e1f5c.onItem -> ifexpression_3a4c8c.execute\n        for_8e1f5c.done -> continue_5b0f5c\n        for_8e1f5c.item -> setter_ea3b4c.new_value\n        list_1e8f6a -> getat_6f8b1c.list\n        0 -> getat_6f8b1c.index\n        getat_6f8b1c.itemAtIndex -> setter_2d7c9e.new_value\n        execute_5f4f3c -> setter_2d7c9e.execute\n        setter_2d7c9e.continue -> for_8e1f5c.reset\n        setter_ea3b4c.continue -> for_8e1f5c.next\n    }\n\n    \n\n    instance(x: -84, y: 127) is_consecutive_f6b0c1 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 1, name: \"list\") property(List) list_3e8a9f\n\n        out(x: 1057, y: 2, name: \"output\") property(Bool) output_5b4c0d\n\n        instance(x: 321, y: -11) sort_6f1f9c root.Std_k98ojb.List.Sort {}\n        instance(x: 682, y: 8) for_3e2a1c root.Std_k98ojb.Std.For {}\n        instance(x: 1050, y: 10) and_7d5f1c root.Std_k98ojb.Logic.And {}\n        instance(x: 1009, y: -111) sub_4e6c8f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1012, y: -205) equal_3a0b8f root.Std_k98ojb.Logic.Equal {}\n        list_3e8a9f -> sort_6f1f9c.list\n        sort_6f1f9c.sortedList -> for_3e2a1c.items\n        func() {\n            in(x: -192, y: 79, name: \"current\") property(Number) current_0d8b7f\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_e5b9e6\n\n            instance(x: 226, y: 56) sub_c4c1a2 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_3d0f8f root.Std_k98ojb.Logic.Equal {}\n            current_0d8b7f -> sub_c4c1a2.first\n            for_3e2a1c.index -> sub_c4c1a2.second\n            sub_c4c1a2.result -> equal_3d0f8f.left\n            1 -> equal_3d0f8f.right\n            equal_3d0f8f.result -> output_e5b9e6\n        } -> for_3e2a1c.handler\n        for_3e2a1c.onItem -> and_7d5f1c.execute\n        sub_4e6c8f.result -> and_7d5f1c.right\n        0 -> equal_3a0b8f.left\n        for_3e2a1c.index -> sub_4e6c8f.first\n        1 -> sub_4e6c8f.second\n        for_3e2a1c.item -> equal_3a0b8f.right\n        and_7d5f1c.result -> output_5b4c0d\n        for_3e2a1c.done -> output_5b4c0d\n    }\n\n    \n\n    instance(x: -67, y: 59) is_consecutive_f6e8c9 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 0, name: \"list\") property(List) list_3a8f1e\n\n        out(x: 1056, y: -5, name: \"output\") property(Bool) output_7b9d4c\n\n        instance(x: 1072, y: 76) ifexpression_c7b0ec root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 333, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_c7b0ec.else -> output_7b9d4c\n        ifexpression_c7b0ec.value -> output_7b9d4c\n        list_3a8f1e -> for_d26972.items\n        for_d26972.item -> ifexpression_c7b0ec.gen_2\n        for_d26972.index -> ifexpression_c7b0ec.gen_0\n        getter_b280eb.value -> ifexpression_c7b0ec.gen_1\n        for_d26972.onItem -> ifexpression_c7b0ec.execute\n        for_d26972.done -> output_7b9d4c\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3a8f1e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        ifexpression_c7b0ec.then -> setter_9d4f1c.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_f7b6a8 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -285, y: 1, name: \"list\") property(List) list_3f9a5e\n\n        out(x: 555, y: -4, name: \"output\") property(Bool) output_7b8c0d\n\n        instance(x: 762, y: 11) ifexpression_6e1a9c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 344, y: 138, name: \"getter_e7f3d2\") getter_e7f3d2 = previous\n        setter(x: 689, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_6e1a9c.else -> continue_a96db6\n        ifexpression_6e1a9c.value -> output_5bbcd7\n        ifexpression_6e1a9c.then -> setter_9d4f1c.execute\n        list_3f9a5e -> for_d26972.items\n        for_d26972.item -> ifexpression_6e1a9c.gen_2\n        for_d26972.index -> ifexpression_6e1a9c.gen_0\n        getter_e7f3d2.value -> ifexpression_6e1a9c.gen_1\n        for_d26972.onItem -> ifexpression_6e1a9c.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3f9a5e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_2b8a5c root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 1, name: \"list\") property(List) list_9e8f0a\n\n        out(x: 1007, y: -3, name: \"output\") property(Bool) output_eb2c6d\n\n        instance(x: 1024, y: 20) ifexpression_5a1b7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 306, y: 147, name: \"getter_8e9d3f\") getter_8e9d3f = previous\n        setter(x: 649, y: -293, name: \"setter_7c0a5b\") setter_7c0a5b = previous\n        instance(x: 284, y: -21) for_1f2c4c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7c0a5b\") setter_d8d9e6 = previous\n        instance(x: -274, y: -36) getat_3b7f9f root.Std_k98ojb.List.GetAt {}\n        ifexpression_5a1b7c.else -> continue_2b8c8c\n        ifexpression_5a1b7c.value -> output_eb2c6d\n        ifexpression_5a1b7c.then -> setter_7c0a5b.execute\n        list_9e8f0a -> for_1f2c4c.items\n        for_1f2c4c.item -> ifexpression_5a1b7c.gen_2\n        for_1f2c4c.index -> ifexpression_5a1b7c.gen_0\n        getter_8e9d3f.value -> ifexpression_5a1b7c.gen_1\n        for_1f2c4c.onItem -> ifexpression_5a1b7c.execute\n        for_1f2c4c.done -> continue_2b8c8c\n        for_1f2c4c.item -> setter_7c0a5b.new_value\n        list_9e8f0a -> getat_3b7f9f.list\n        0 -> getat_3b7f9f.index\n        getat_3b7f9f.itemAtIndex -> setter_d8d9e6.new_value\n        execute_2c1f5c -> setter_d8d9e6.execute\n        setter_d8d9e6.continue -> for_1f2c4c.reset\n        setter_7c0a5b.continue -> for_1f2c4c.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_3f7d9c root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 5, name: \"list\") property(List) list_1a9f2e\n\n        out(x: 1218, y: 10, name: \"output\") property(Bool) output_7b3d6c\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_1a9f2e -> filter_7b3b7b.list\n        filter_7b3b7b.result -> length_8166b0.list\n        1 -> equal_f89569.right\n        length_8166b0.length -> equal_f89569.left\n        equal_f89569.result -> output_7b3d6c\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_ae2a9f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 3, name: \"list\") property(List) list_1e8a9f\n\n        out(x: 1217, y: 0, name: \"output\") property(Bool) output_5b2d7c\n\n        instance(x: 0, y: -10) sort_6c4c3c root.Std_k98ojb.List.Sort {}\n        instance(x: 210, y: 9) for_1e8a7f root.Std_k98ojb.Std.For {}\n        instance(x: 1022, y: 11) sub_5d7f9c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1126, y: -12) lessthan_3b0b1e root.Std_k98ojb.Math.LessThan {}\n        instance(x: 1298, y: 10) if_2a5d7f root.Std_k98ojb.Std.If {}\n        list_1e8a9f -> sort_6c4c3c.list\n        sort_6c4c3c.sortedList -> for_1e8a7f.items\n        func() {\n            in(x: -121, y: 41, name: \"current\") property(Number) current_2d5b0e\n\n            out(x: 522, y: 31, name: \"\") property(Bool) _c9b6ea\n\n            instance(x: 92, y: 35) sub_1f8a3f root.Std_k98ojb.Math.Sub {}\n            instance(x: 291, y: 36) lessthan_5e4d2c root.Std_k98ojb.Math.LessThan {}\n            for_1e8a7f.index -> sub_1f8a3f.first\n            current_2d5b0e -> sub_1f8a3f.second\n            sub_1f8a3f.result -> lessthan_5e4d2c.left\n            1 -> lessthan_5e4d2c.right\n            lessthan_5e4d2c.result -> _c9b6ea\n        } -> if_2a5d7f.predicate\n        for_1e8a7f.item -> sub_5d7f9c.first\n        for_1e8a7f.index -> sub_5d7f9c.second\n        sub_5d7f9c.result -> lesstthan_3b0b1e.left\n        1 -> lessthan_3b0b1e.right\n        lessthan_3b0b1e.result -> if_2a5d7f.value\n        for_1e8a7f.onItem -> if_2a5d7f.execute\n        if_2a5d7f.else -> output_5b2d7c\n        if_2a5d7f.then -> for_1e8a7f.next\n        for_1e8a7f.done -> output_5b2d7c\n    }\n\n    \n\n    instance(x: -83, y: 69) is_consecutive_3c6f4c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -285, y: 1, name: \"list\") property(List) list_2a9d5e\n\n        out(x: 1066, y: 0, name: \"output\") property(Bool) output_8b3c7f\n\n        instance(x: 1054, y: -11) filter_1a7f2c root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: 1055, y: 88) sort_8d9e6c root.Std_k98ojb.List.Sort {}\n        instance(x: 1054, y: 169) map_7f2a3f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1055, y: 250) zip_1b7f8d root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 1056, y: 331) filter_4e0c8c root.Std_k98ojb.Query.Filter {\n            where: \"it[0] + 1 == it[1]\"\n        }\n        instance(x: 1055, y: 412) length_9a3f2d root.Std_k98ojb.List.Length {}\n        instance(x: 1054, y: 493) greaterthan_8c7e2f root.Std_k98ojb.Math.GreaterThan {}\n        list_2a9d5e -> filter_1a7f2c.list\n        filter_1a7f2c.result -> sort_8d9e6c.list\n        sort_8d9e6c.sortedList -> map_7f2a3f.items\n        func() {\n            in(x: -122, y: 179, name: \"current\") property(Number) current_0b5a1f\n\n            out(x: 782, y: 190, name: \"\") property(Number) _4c9e6d\n\n            instance(x: 94, y: 173) add_7b8c2d root.Std_k98ojb.Math.Add {}\n            current_0b5a1f -> add_7b8c2d.first\n            1 -> add_7b8c2d.second\n            add_7b8c2d.result -> _4c9e6d\n        } -> map_7f2a3f.handler\n        map_7f2a3f.output_list -> zip_1b7f8d.left\n        sort_8d9e6c.sortedList -> zip_1b7f8d.right\n        zip_1b7f8d.zipped -> filter_4e0c8c.list\n        length_9a3f2d.length -> greaterthan_8c7e2f.left\n        1 -> greaterthan_8c7e2f.right\n        filter_4e0c8c.resultLength -> length_9a3b5e.list\n        filter_4e0c8c.result -> greaterthan_8c7e2f.result\n        greaterthan_8c7e2f.result -> output_8b3c7f\n    }\n\n    \n\n    instance(x: -55, y: 529) is_consecutive_1a5d9f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 2, name: \"list\") property(List) list_0f9d5e\n\n        out(x: 1218, y: 1, name: \"output\") property(Bool) output_eb3a7c\n\n        instance(x: 772, y: 77) filter_4a6c2c root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -318, y: 521, name: \"Odd list\") filter_5e9f8d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: 146, y: -96) length_7c6a1c root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f8e3d4 root.Std_k98ojb.Logic.Equal {}\n        list_0f9d5e -> filter_4a6c2c.list\n        filter_4a6c2c.result -> length_7c6a1c.list\n        list_0f9d5e -> filter_5e9f8d.list\n        filter_5e9f8d.result -> equal_f8e3d4.left\n        length_7c6a1c.length -> equal_f8e3d4.right\n        2 -> equal_f8e3d4.right\n        equal_f8e3d4.result -> output_eb3a7c\n    }\n\n    \n\n    instance(x: -55, y: 529) is_consecutive_0f9d5e root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 11, name: \"sublist\") property(List) sublist_3f8a9e\n        in(x: -298, y: -139, name: \"list\") property(List) list_1c7b0d\n\n        out(x: 1025, y: -97, name: \"output\") property(Bool) output_6e4b8c\n\n        instance(x: 103, y: -96) contains_9f2a3 root.Std_k98ojb.List.Contains {}\n        list_1c7b0d -> contains_9f2a3.list\n        sublist_3f8a9e -> contains_9f2a3.item\n        contains_9f2a3.is_contained -> output_6e4b8c\n    }\n\n    \n\n    instance(x: -292, y: 1) is_sublist_7d5f0 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -280, y: 30, name: \"sublist\") property(List) sublist_1d8a9f\n        in(x: -279, y: -120, name: \"list\") property(List) list_0c2e6b\n\n        out(x: 1025, y: -11, name: \"output\") property(Bool) output_7e3f4c\n\n        instance(x: 105, y: -13) contains_9d1a2f root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -20, name: \"current\") property(List) current_8f6a5e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_9d1a2f.handler\n        list_0c2e6b -> contains_9d1a2f.list\n        sublist_1d8a9f -> contains_9d1a2f.item\n        contains_9d1a2f.is_contained -> output_7e3f4c\n    }\n\n    \n\n    instance(x: -283, y: 39) is_sublist_5b0c6f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -298, y: 15, name: \"sublist\") property(List) sublist_0a9d8e\n        in(x: -298, y: -133, name: \"list\") property(List) list_7c1b5f\n\n        out(x: 1052, y: -11, name: \"output\") property(Bool) output_4e6b3f\n\n        instance(x: 102, y: -9) contains_c8a0d1 root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -231, y: 28, name: \"list\") property(List) list_2c5f7e\n            in(x: -223, y: -76, name: \"sublist\") property(List) sublist_1d8a4b\n\n            out(x: 246, y: 3, name: \"\") property(Bool) _6d0c6e\n\n            instance(x: 74, y: 19) contains_7f9b5f root.Std_k98ojb.List.Contains {}\n            sublist_1d8a4b -> contains_7f9b5f.item\n            list_2c5f7e -> contains_7f9b5f.list\n            contains_7f9b5f.is_contained -> _6d0c6e\n        } -> contains_c8a0d1.handler\n        list_7c1b5f -> contains_c8a0d1.list\n        sublist_0a9d8e -> contains_c8a0d1.item\n        contains_c8a0d1.result -> output_4e6b3f\n    }\n\n    \n\n    instance(x: -292, y: 30) is_sublist_f5c7c2 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -280, y: 0, name: \"list1\") property(List) list1_3a8f6b\n        in(x: -279, y: 170, name: \"list2\") property(List) list2_7c9d5e\n\n        out(x: 557, y: 145, name: \"output\") property(Bool) output_e0c1e3\n\n        instance(x: 147, y: -10) contains_6a4f8b root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -31, y: 79, name: \"list2\") property(List) list2_7c9d5e\n            in(x: -23, y: 159, name: \"list1\") property(List) list1_3a8f6b\n\n            out(x: 521, y: 124, name: \"output\") property(Bool) output_e0c1e3\n\n            instance(x: 74, y: 119) contains_6a4f8b root.Std_k98ojb.List.Contains {}\n            list2_7c9d5e -> contains_6a4f8b.list\n            list1_3a8f6b -> contains_6a4f8b.item\n            contains_6a4f8b.is_contained -> output_e0c1e3\n        } -> contains_6a4f8b.handler\n        list2_7c9d5e -> contains_6a4f8b.list\n        func() {\n            in(x: -31, y: 79, name: \"list2\") property(List) list2_7c9d5e\n\n            out(x: 521, y: 124, name: \"output\") property(Bool) output_e0c1e3\n\n            instance(x: 74, y: 119) contains_6a4f8b root.Std_k98ojb.List.Contains {}\n            list2_7c9d5e -> contains_6a4f8b.list\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(List) current_a0f1a3\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_7e5c6d\n\n                instance(x: 112, y: 80) contains_6a4f8b root.Std_k98ojb.List.Contains {}\n                current_a0f1a3 -> contains_6a4f8b.list\n                list2_7c9d5e -> contains_6a4f8b.item\n                contains_6a4f8b.is_contained -> bool_7e5c6d\n            } -> filter_c91965.handler\n            instance(x: -92, y: -97) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n            list1_3a8f6b -> filter_c91965.items\n            filter_c91965.output_list -> contains_6a4f8b.item\n            contains_6a4f8b.is_contained -> output_e0c1e3\n        } -> contains_6a4f8b.handler\n        contains_6a4f8b.result -> output_e0c1e3\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_a7d9d2 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -277, y: 166, name: \"sublist\") property(List) sublist_09fcba\n        in(x: -277, y: -81, name: \"list\") property(List) list_63c248\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_edc2e3\n\n        instance(x: 532, y: 147) mul_7e1ce0 root.Std_k98ojb.Math.Mul {}\n        instance(x: -39, y: 26, name: \"First even number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"First odd number\") ``First even number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        sublist_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        sublist_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) is_sublist_f53d27 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -287, y: 20, name: \"sublist\") property(List) sublist_3a0f9e\n        in(x: -288, y: -150, name: \"list\") property(List) list_7b8c1d\n\n        out(x: 557, y: -99, name: \"output\") property(Bool) output_e6a2ea\n\n        instance(x: -82, y: -149) length_4e5f3c root.Std_k98ojb.List.Length {}\n        instance(x: 146, y: -97) contains_1d7f9f root.Std_k98ojb.List.Contains {}\n        instance(x: 360, y: -96) equal_f6a8da root.Std_k98ojb.Logic.Equal {}\n        sublist_3a0f9e -> length_4e5f3c.list\n        list_7b8c1d -> contains_1d7f9f.list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_2b6a0e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_3c1d8e\n\n            instance(x: 74, y: -23) slice_9f5f4f root.Std_k98ojb.List.Slice {}\n            instance(x: 285, y: -25) length_7a6c8f root.Std_k98ojb.List.Length {}\n            instance(x: 490, y: -24) equal_f0d3e2 root.Std_k98ojb.Logic.Equal {}\n            current_2b6a0e -> slice_9f5f4f.list\n            length_4e5f3c.length -> slice_9f5f4f.start\n            0 -> slice_9f5f4f.end\n            slice_9f5f4f.slice -> equal_f0d3e2.left\n            sublist_3a0f9e -> equal_f0d3e2.right\n            length_7a6c8f.length -> equal_f0d3e2.left\n            length_7a6c8f.list -> slice_9f5f4f.list\n            equal_f0d3e2.result -> bool_3c1d8e\n        } -> contains_1d7f9f.where\n        contains_1d7f9f.is_contained -> equal_f6a8da.left\n        true -> equal_f6a8da.right\n        equal_f6a8da.result -> output_e6a2ea\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_3e5d7c root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -280, y: 15, name: \"sublist\") property(List) sublist_1d0f2a\n        in(x: -279, y: -150, name: \"list\") property(List) list_5e7b9c\n\n        out(x: 557, y: -95, name: \"output\") property(Bool) output_e6b3ee\n\n        instance(x: -79, y: -148, name: \"find sublist in list\") find_f0f8d2 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(List) current_9c7e1a\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d5f8d2 root.Std_k98ojb.List.Contains {}\n            sublist_1d0f2a -> contains_d5f8d2.item\n            current_9c7e1a -> contains_d5f8d2.list\n            contains_d5f8d2.is_contained -> bool_1eb6e9\n        } -> find_f0f8d2.predicate\n        list_5e7b9c -> find_f0f8d2.items\n        find_f0f8d2.item -> output_e6b3ee\n    }\n\n    \n\n    instance(x: -67, y: 59) is_sublist_a4a1d8 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -298, y: 30, name: \"sublist\") property(List) sublist_1f8a9e\n        in(x: -297, y: -150, name: \"list\") property(List) list_7c0b2d\n\n        out(x: 1035, y: -120, name: \"output\") property(Bool) output_3c4f1f\n\n        instance(x: 104, y: -148) contains_9e6a8f root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -0, y: -24, name: \"current\") property(List) current_5d2a3c\n            in(x: -7, y: 48, name: \"_index\") property(Number) _index_1f8e6b\n\n            out(x: 698, y: 29, name: \"output\") property(Bool) output_9a0c6c\n\n            instance(x: 225, y: 38) contains_c4d3d2 root.Std_k98ojb.List.Contains {}\n            func() {\n                in(x: -192, y: -16, name: \"current\") property(Number) current_1f8e6b\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_5d2a3c\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_9a0c6c\n\n                instance(x: 226, y: 56) getat_c4e7f1 root.Std_k98ojb.List.GetAt {}\n                current_1f8e6b -> getat_c4e7f1.value\n                list_7c0b2d -> getat_c4e7f1.list\n                _index_5d2a3c -> getat_c4e7f1.index\n                getat_c4e7f1.itemAtIndex -> output_9a0c6c\n            } -> contains_c4d3d2.handler\n            sublist_1f8a9e -> contains_c4d3d2.list\n            current_5d2a3c -> contains_c4d3d2.items\n            contains_c4d3d2.is_contained -> output_9a0c6c\n        } -> filter_f7b7d1.handler\n        instance(x: -93, y: -150) map_d8e5f2 root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_5d2a3c\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_9a0c6c\n\n            instance(x: 226, y: 56) slice_1e8b4f root.Std_k98ojb.List.Slice {}\n            current_5d2a3c -> slice_1e8b4f.list\n            _index_1f8e6b -> slice_1e8b4f.start\n            func() {\n                in(x: -192, y: -16, name: \"current\") property(List) current_5d2a3c\n\n                out(x: 705, y: 49, name: \"output\") property(Number) output_9a0c6c\n\n                instance(x: 226, y: 56) length_f7b8f1 root.Std_k98ojb.List.Length {}\n                current_5d2a3c -> length_f7b8f1.list\n                length_f7b8f1.length -> output_9a0c6c\n            } -> add_e4e8d6.handler\n            instance(x: 462, y: -13) add_e4e8d6 root.Std_k98ojb.Math.Add {}\n            _index_1f8e6b -> add_e4e8d6.first\n            add_e4e8d6.result -> slice_1e8b4f.end\n        } -> map_d8e5f2.handler\n        list_7c0b2d -> map_d8e5f2.items\n        instance(x: -292, y: -150) filter_f7b7d1 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_5d2a3c\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_9a0c6c\n\n            instance(x: 226, y: 56) not_e4e8d6 root.Std_k98ojb.Logic.Not {}\n            current_5d2a3c -> not_e4e8d6.input\n            not_e4e8d6.result -> output_9a0c6c\n        } -> filter_f7b7d1.handler\n        map_d8e5f2.output_list -> filter_f7b7d1.items\n        contains_9e6a8f.is_contained -> output_3c4f1f\n        filter_f7b7d1.output_list -> contains_9e6a8f.list\n        sublist_1f8a9e -> contains_9e6a8f.item\n    }\n\n    \n\n    instance(x: -293, y: 29) is_sublist_5c4d3d root.main.is_sublist {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 15, name: \"sublist\") property(List) sublist_3f0d9e\n        in(x: -279, y: -160, name: \"list\") property(List) list_1b8a5c\n\n        out(x: 1007, y: -95, name: \"output\") property(Bool) output_4a2b6f\n\n        instance(x: 106, y: -153) contains_3d0e9 root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -23, y: -25, name: \"current\") property(List) current_7c8c1a\n            in(x: -22, y: 79, name: \"_index\") property(Number) _index_5f0d3e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_9b2a6f\n\n            instance(x: 226, y: 56) contains_1c7d8 root.Std_k98ojb.List.Contains {}\n            current_7c8c1a -> contains_1c7d8.list\n            sublist_3f0d9e -> contains_1c7d8.item\n            contains_1c7d8.is_contained -> output_9b2a6f\n        } -> contains_3d0e9.handler\n        list_1b8a5c -> contains_3d0e9.list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_4c7c1a\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_5b2a6f\n\n            instance(x: 74, y: -23) slice_8d7b2a root.Std_k98ojb.List.Slice {}\n            current_4c7c1a -> slice_8d7b2a.list\n            _index_5f0d3e -> slice_8d7b2a.start\n            sublist_3f0d9e.length -> slice_8d7b2a.end\n            slice_8d7b2a.slice -> bool_5b2a6f\n        } -> contains_3d0e9.items\n        contains_3d0e9.result -> output_4a2b6f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_f21f44 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 10, name: \"sublist\") property(List) sublist_3f0a9e\n        in(x: -285, y: -120, name: \"list\") property(List) list_7c1d6b\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        sublist_3f0a9e -> intersection_c7c7e6.left\n        list_7c1d6b -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        sublist_3f0a9e -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_8d5c4 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 2, name: \"list\") property(List) list_3a1f9e\n        in(x: -314, y: -228, name: \"execute\") trigger() execute_5c7d8b\n\n        out(x: 1066, y: -230, name: \"continue\") trigger() continue_e2c4ed\n        out(x: 1053, y: 154, name: \"output\") property(Number) output_1e0a1f\n\n        instance(x: 0, y: 0) for_9d7b8f root.Std_k98ojb.Std.For {}\n        instance(x: 322, y: -2) ifexpression_5c3b6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 0, y: 0, name: \"getter_e9f8d7\") getter_e9f8d7 = previous\n        setter(x: 0, y: 0, name: \"setter_6e5c3a\") setter_6e5c3a = previous\n        instance(x: 0, y: 0) if_2b4b1f root.Std_k98ojb.Std.If {}\n        list_3a1f9e -> for_9d7b8f.items\n        execute_5c7d8b -> setter_6e5c3a.execute\n        -1 -> setter_6e5c3a.new_value\n        ifexpression_5c3b6c.else -> continue_e2c4ed\n        for_9d7b8f.onItem -> ifexpression_5c3b6c.execute\n        getter_e9f8d7.value -> ifexpression_5c3b6c.gen_1\n        for_9d7b8f.index -> ifexpression_5c3b6c.gen_0\n        for_9d7b8f.item -> ifexpression_5c3b6c.gen_2\n        ifexpression_5c3b6c.then -> setter_6e5c3a.execute\n        for_9d7b8f.done -> continue_e2c4ed\n        for_9d7b8f.item -> setter_6e5c3a.new_value\n        ifexpression_5c3b6c.value -> if_2b4b1f.predicate\n        if_2b4b1f.then -> output_1e0a1f\n        if_2b4b1f.else -> for_9d7b8f.next\n        setter_6e5c3a.continue -> for_9d7b8f.next\n        previous + 1 -> if_2b4b1f.then\n    }\n\n    \n\n    instance(x: -56, y: 128) find_missing_7f1d9f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -279, y: 1, name: \"list\") property(List) list_9e3f6a\n        in(x: -284, y: -225, name: \"execute\") trigger() execute_5b8d4c\n\n        out(x: 1020, y: -227, name: \"continue\") trigger() continue_7f1b2e\n        out(x: 1013, y: 148, name: \"output\") property(Number) output_6a7c7b\n\n        instance(x: 0, y: 0) for_5d8a4c root.Std_k98ojb.Std.For {}\n        instance(x: 339, y: -21) ifexpression_e1f3e9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 336, y: 159, name: \"getter_8c2a7d\") getter_8c2a7d = previous\n        setter(x: 680, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_e1f3e9.else -> continue_7f1b2e\n        ifexpression_e1f3e9.value -> output_6a7c7b\n        ifexpression_e1f3e9.then -> setter_9d4f1c.execute\n        list_9e3f6a -> for_d26972.items\n        for_d26972.item -> ifexpression_e1f3e9.gen_2\n        for_d26972.index -> ifexpression_e1f3e9.gen_0\n        getter_8c2a7d.value -> ifexpression_e1f3e9.gen_1\n        for_d26972.onItem -> ifexpression_e1f3e9.execute\n        for_d26972.done -> continue_7f1b2e\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_9e3f6a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_5b8d4c -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_f3a7b5 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 1, name: \"list\") property(List) list_2d0b9e\n        in(x: -302, y: -230, name: \"execute\") trigger() execute_ea7f3c\n\n        out(x: 1056, y: -233, name: \"continue\") trigger() continue_8a1b4f\n        out(x: 1045, y: 150, name: \"output\") property(Number) output_9d2e0f\n\n        instance(x: 451, y: 57) ifexpression_6c3c7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 333, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_6c3c7c.else -> continue_8a1b4f\n        ifexpression_6c3c7c.value -> output_9d2e0f\n        ifexpression_6c3c7c.then -> setter_9d4f1c.execute\n        list_2d0b9e -> for_d26972.items\n        for_d26972.item -> ifexpression_6c3c7c.gen_2\n        for_d26972.index -> ifexpression_6c3c7c.gen_0\n        getter_b280eb.value -> ifexpression_6c3c7c.gen_1\n        for_d26972.onItem -> ifexpression_6c3c7c.execute\n        for_d26972.done -> continue_8a1b4f\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_2d0b9e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_ea7f3c -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_2b8a6c root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 0, name: \"list\") property(List) list_1a3f8e\n        in(x: -314, y: -224, name: \"execute\") trigger() execute_9b2c5d\n\n        out(x: 1017, y: -228, name: \"continue\") trigger() continue_4b6c4e\n        out(x: 1008, y: 176, name: \"output\") property(Number) output_1a3f8e\n\n        instance(x: 0, y: 0, name: \"for_2f9d5e\") for_2f9d5e root.Std_k98ojb.Std.For {}\n        instance(x: 315, y: -25, name: \"ifexpression_7c1a4f\") ifexpression_7c1a4f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 0, y: 0, name: \"getter_9d4f1c\") getter_9d4f1c = previous\n        setter(x: 0, y: 0, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_7c1a4f.else -> continue_4b6c4e\n        ifexpression_7c1a4f.value -> output_1a3f8e\n        ifexpression_7c1a4f.then -> setter_9d4f1c.execute\n        list_1a3f8e -> for_2f9d5e.items\n        for_2f9d5e.item -> ifexpression_7c1a4f.gen_2\n        for_2f9d5e.index -> ifexpression_7c1a4f.gen_0\n        getter_9d4f1c.value -> ifexpression_7c1a4f.gen_1\n        for_2f9d5e.onItem -> ifexpression_7c1a4f.execute\n        for_2f9d5e.done -> continue_4b6c4e\n        for_2f9d5e.item -> setter_9d4f1c.new_value\n        list_1a3f8e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        execute_9b2c5d -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> for_2f9d5e.reset\n        setter_9d4f1c.continue -> for_2f9d5e.next\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_6a8b7f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 2, name: \"list\") property(List) list_9f6b1e\n        in(x: -272, y: -228, name: \"execute\") trigger() execute_7c8a0d\n\n        out(x: 46, y: 158, name: \"missing\") property(Number) missing_a5f3aa\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_6b1e2d\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = previous\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = missing\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        ifexpression_e38995.else -> continue_6b1e2d\n        ifexpression_e38995.value -> missing_a5f3aa\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        list_9f6b1e -> for_d26972.items\n        for_d26972.item -> ifexpression_e38995.gen_2\n        for_d26972.index -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> ifexpression_e38995.gen_1\n        for_d26972.onItem -> ifexpression_e38995.execute\n        for_d26972.done -> continue_6b1e2d\n        for_d26972.item -> setter_38e107.new_value\n        list_9f6b1e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_7c8a0d -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_1cedb2.continue -> continue_6b1e2d\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_f3f9c5 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -305, y: 1, name: \"list\") property(List) list_3e9f8d\n        in(x: -316, y: -239, name: \"execute\") trigger() execute_ea7c6b\n\n        out(x: 1015, y: -240, name: \"continue\") trigger() continue_4a1b2e\n        out(x: 1008, y: 0, name: \"output\") property(Number) output_3f9d2e\n\n        instance(x: 0, y: 0, name: \"for_7c6b8f\") for_7c6b8f root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0, name: \"ifexpression_1a5d9e\") ifexpression_1a5d9e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -2, y: 33, name: \"getter_7c6b8f\") getter_7c6b8f = previous\n        setter(x: 338, y: -298, name: \"setter_1a5d9e\") setter_1a5d9e = previous\n        instance(x: 0, y: 0, name: \"setter_7c6b8f\") setter_7c6b8f root.Std_k98ojb.Setting {}\n        list_3e9f8d -> for_7c6b8f.items\n        execute_ea7c6b -> setter_7c6b8f.execute\n        0 -> setter_7c6b8f.new_value\n        getter_7c6b8f.value -> ifexpression_1a5d9e.gen_1\n        for_7c6b8f.index -> ifexpression_1a5d9e.gen_0\n        for_7c6b8f.item -> ifexpression_1a5d9e.gen_2\n        setter_7c6b8f.continue -> for_7c6b8f.reset\n        ifexpression_1a5d9e.then -> setter_1a5d9e.execute\n        for_7c6b8f.onItem -> ifexpression_1a5d9e.execute\n        for_7c6b8f.done -> continue_4a1b2e\n        ifexpression_1a5d9e.else -> continue_4a1b2e\n        setter_1a5d9e.continue -> for_7c6b8f.next\n        ifexpression_1a5d9e.value -> output_3f9d2e\n        for_7c6b8f.item -> setter_1a5d9e.new_value\n    }\n\n    \n\n    instance(x: -175, y: 12) find_missing_0f4b5f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 2, name: \"list\") property(List) list_9e8f6a\n        in(x: -311, y: -221, name: \"execute\") trigger() execute_eb1d7c\n\n        out(x: 1063, y: -225, name: \"continue\") trigger() continue_4f0e2e\n        out(x: 1056, y: 29, name: \"output\") property(Number) output_8a5e7e\n\n        instance(x: 0, y: 0) for_9b3c1d root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) ifexpression_4f6c2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index != current\"\n        }\n        getter(x: 0, y: 0, name: \"getter_9d5e3a\") getter_9d5e3a = index\n        setter(x: 0, y: 0, name: \"setter_7b8c6f\") setter_7b8c6f = index\n        list_9e8f6a -> for_9b3c1d.items\n        execute_eb1d7c -> for_9b3c1d.trigger\n        0 -> setter_7b8c6f.new_value\n        getter_9d5e3a.value -> ifexpression_4f6c2f.gen_0\n        for_9b3c1d.index -> ifexpression_4f6c2f.gen_1\n        for_9b3c1d.item -> ifexpression_4f6c2f.gen_2\n        setter_7b8c6f.execute -> ifexpression_4f6c2f.then\n        ifexpression_4f6c2f.value -> output_8a5e7e\n        for_9b3c1d.onItem -> ifexpression_4f6c2f.execute\n        setter_7b8c6f.continue -> for_9b3c1d.reset\n        ifexpression_4f6c2f.else -> for_9b3c1d.next\n        for_9b3c1d.done -> continue_4f0e2e\n    }\n\n    \n\n    instance(x: 5, y: -13) find_missing_7a8c5f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 1, name: \"list\") property(List) list_9e3b8f\n        in(x: -356, y: -225, name: \"execute\") trigger() execute_076885\n\n        out(x: 801, y: -229, name: \"continue\") trigger() continue_9f5f84\n        out(x: 795, y: 205, name: \"output\") property(Number) output_3ae271\n\n        instance(x: 151, y: -120) for_9ed60a root.Std_k98ojb.Std.For {}\n        setter(x: -187, y: -246, name: \"setter_6a6081\") setter_6a6081 = index\n        getter(x: 502, y: 166, name: \"getter_cc0721\") getter_cc0721 = index\n        instance(x: 465, y: 5) ifexpression_6c15d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        setter(x: 780, y: -125, name: \"setter_60cfcd\") setter_60cfcd = index\n        list_9e3b8f -> for_9ed60a.items\n        execute_076885 -> setter_6a6081.execute\n        -1 -> setter_6a6081.new_value\n        getter_cc0721.value -> output_3ae271\n        for_9ed60a.done -> continue_9f5f84\n        setter_6a6081.continue -> for_9ed60a.reset\n        for_9ed60a.onItem -> ifexpression_6c15d4.execute\n        0 -> ifexpression_6c15d4.gen_0\n        for_9ed60a.index -> ifexpression_6c15d4.gen_1\n        ifexpression_6c15d4.then -> setter_60cfcd.execute\n        for_9ed60a.item -> ifexpression_6c15d4.gen_2\n        for_9ed60a.index -> setter_60cfcd.new_value\n        setter_60cfcd.continue -> for_9ed60a.next\n        ifexpression_6c15d4.else -> for_9ed60a.next\n    }\n\n    \n\n    instance(x: -203, y: -53) find_missing_9181e6 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 2, name: \"list\") property(List) list_1a8b5e\n        in(x: -301, y: -248, name: \"execute\") trigger() execute_9c6d7f\n\n        out(x: 593, y: -306, name: \"continue\") trigger() continue_3f2f0d\n        out(x: 594, y: 44, name: \"output\") property(Number) output_5a8e4b\n\n        instance(x: 0, y: 0) for_1c9f7c root.Std_k98ojb.Std.For {}\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index != current\"\n        }\n        getter(x: 89, y: 29, name: \"getter_9cceb3\") getter_9cceb3 = index\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = index\n        instance(x: 310, y: 35) add_7e6d8f root.Std_k98ojb.Math.Add {}\n        list_1a8b5e -> for_1c9f7c.items\n        execute_9c6d7f -> for_1c9f7c.trigger\n        getter_9cceb3.value -> ifexpression_e38995.gen_0\n        for_1c9f7c.item -> ifexpression_e38995.gen_1\n        1 -> add_7e6d8f.second\n        getter_9cceb3.value -> add_7e6d8f.first\n        add_7e6d8f.result -> setter_1cedb2.new_value\n        for_1c9f7c.onItem -> ifexpression_e38995.execute\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        ifexpression_e38995.else -> for_1c9f7c.next\n        for_1c9f7c.done -> continue_3f2f0d\n        setter_1cedb2.continue -> continue_3f2f0d\n        getter_9cceb3.value -> output_5a8e4b\n    }\n\n    \n\n    instance(x: -174, y: -63) find_missing_7c6d2e root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_2f1b8e\n        in(x: -303, y: -225, name: \"execute\") trigger() execute_e5a3d7\n\n        out(x: 593, y: -226, name: \"continue\") trigger() continue_6c0b9e\n        out(x: 594, y: 2, name: \"output\") property(Number) output_8f4c1f\n\n        instance(x: 0, y: 0) for_7d5a2f root.Std_k98ojb.Std.For {}\n        instance(x: 310, y: -75) ifexpression_e6e9ee root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == item\"\n        }\n        getter(x: 502, y: 166, name: \"getter_8c0f1d\") getter_8c0f1d = index\n        setter(x: 780, y: -125, name: \"setter_ea2b9e\") setter_ea2b9e = index\n        list_2f1b8e -> for_7d5a2f.items\n        execute_e5a3d7 -> for_7d5a2f.trigger\n        getter_8c0f1d.value -> output_8f4c1f\n        for_7d5a2f.done -> continue_6c0b9e\n        ifexpression_e6e9ee.else -> setter_ea2b9e.execute\n        for_7d5a2f.onItem -> ifexpression_e6e9ee.execute\n        for_7d5a2f.index -> ifexpression_e6e9ee.gen_0\n        for_7d5a2f.item -> ifexpression_e6e9ee.gen_1\n        setter_ea2b9e.new_value -> output_8f4c1f\n        1 -> setter_ea2b9e.new_value\n        setter_ea2b9e.continue -> for_7d5a2f.next\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_3f0b9f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5c3d9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7e8a6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9c4c7c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5c3d9f.input\n        \" \" -> replace_5c3d9f.search\n        \":\" -> replace_5c3d9f.replace\n        replace_5c3d9f.output -> replace_7e8a6f.input\n        \",\" -> replace_7e8a6f.search\n        \":\" -> replace_7e8a6f.replace\n        replace_7e8a6f.output -> replace_9c4c7c.input\n        \".\" -> replace_9c4c7c.search\n        \":\" -> replace_9c4c7c.replace\n        replace_9c4c7c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_d3e8d1 root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -227, y: 44, name: \"string\") property(String) string_0d9b8e\n\n        out(x: 744, y: 146, name: \"output\") property(String) output_1c2f5a\n\n        instance(x: 52, y: 47, name: \"replace_spaces\") replace_7a3c4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 69, y: 185, name: \"replace_commas\") replace_6e1d9e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 279, y: 73) replace_dots_3c2a5f root.Std_k98ojb.Strings.Replace {}\n        string_0d9b8e -> replace_spaces.input\n        \" \" -> replace_spaces.search\n        \":\" -> replace_spaces.replace\n        replace_spaces.output -> replace_commas.input\n        \",\" -> replace_commas.search\n        \":\" -> replace_commas.replace\n        replace_commas.output -> replace_dots_3c2a5f.input\n        \".\" -> replace_dots_3c2a5f.search\n        \":\" -> replace_dots_3c2a5f.replace\n        replace_dots_3c2a5f.output -> output_1c2f5a\n    }\n\n    \n\n    instance(x: -280, y: 136) replace_spaces_commas_dots_7b9e8d root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -156, y: 0, name: \"input\") property(String) input_1d8f6e\n\n        out(x: 540, y: -2, name: \"output\") property(String) output_5c9a4b\n\n        instance(x: 0, y: 0) replace_7a3c8e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_1f6d7c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_5b2b4a root.Std_k98ojb.Strings.Replace {}\n        input_1d8f6e -> replace_7a3c8e.input\n        \" \" -> replace_7a3c8e.search\n        \":\" -> replace_7a3c8e.replace\n        replace_7a3c8e.output -> replace_1f6d7c.input\n        \",\" -> replace_1f6d7c.search\n        \":\" -> replace_1f6d7c.replace\n        replace_1f6d7c.output -> replace_5b2b4a.input\n        \".\" -> replace_5b2b4a.search\n        \":\" -> replace_5b2b4a.replace\n        replace_5b2b4a.output -> output_5c9a4b\n    }\n\n    \n\n    instance(x: -89, y: 30, name: \"replace_spaces_commas_dots\") replace_spaces_commas_dots_1d8f6e root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -122, y: 2, name: \"input\") property(String) input_ai\n\n        out(x: 505, y: -68, name: \"output\") property(String) output_ai\n\n        instance(x: 94, y: -105) replace_3c0b1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: -48) replace_2a7d5e root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4c8e7d root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_spaces_commas_dots.input\n        \" \" -> replace_3c0b1f.search\n        \":\" -> replace_3c0b1f.replace\n        \",\" -> replace_2a7d5e.search\n        \":\" -> replace_2a7d5e.replace\n        \".\" -> replace_4c8e7d.search\n        \":\" -> replace_4c8e7d.replace\n        replace_3c0b1f.output -> replace_2a7d5e.input\n        replace_2a7d5e.output -> replace_4c8e7d.input\n        replace_4c8e7d.output -> output_ai\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_1b3f0f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3c6d4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5a7e9c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_8f3b1c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3c6d4f.input\n        \" \" -> replace_3c6d4f.search\n        \":\" -> replace_3c6d4f.replace\n        replace_3c6d4f.output -> replace_5a7e9c.input\n        \",\" -> replace_5a7e9c.search\n        \":\" -> replace_5a7e9c.replace\n        replace_5a7e9c.output -> replace_8f3b1c.input\n        \".\" -> replace_8f3b1c.search\n        \":\" -> replace_8f3b1c.replace\n        replace_8f3b1c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceAll_e54b7f root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -156, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 94, y: -105) replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 92, y: -22) replace_4 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_2.input\n        \" \" -> replace_2.search\n        \":\" -> replace_2.replace\n        replace_2.output -> replace_3.input\n        \",\" -> replace_3.search\n        \":\" -> replace_3.replace\n        replace_3.output -> replace_4.input\n        \".\" -> replace_4.search\n        \":\" -> replace_4.replace\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_5 root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3a9c5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7d8e4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c6b1ba root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3a9c5f.input\n        \" \" -> replace_3a9c5f.search\n        \":\" -> replace_3a9c5f.replace\n        replace_3a9c5f.output -> replace_7d8e4f.input\n        \",\" -> replace_7d8e4f.search\n        \":\" -> replace_7d8e4f.replace\n        replace_7d8e4f.output -> replace_c6b1ba.input\n        \".\" -> replace_c6b1ba.search\n        \":\" -> replace_c6b1ba.replace\n        replace_c6b1ba.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_7c8f9e root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -227, y: 44, name: \"string\") property(String) string_1f0a8d\n\n        out(x: 744, y: 146, name: \"output\") property(String) output_7e9c6b\n\n        instance(x: 52, y: 47, name: \"replace_spaces\") replace_5b2b4e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 69, y: 185, name: \"replace_commas\") replace_ba3f7d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 279, y: 73) replace_dots_9c1c6e root.Std_k98ojb.Strings.Replace {}\n        string_1f0a8d -> replace_spaces.input\n        \" \" -> replace_spaces.search\n        \":\" -> replace_spaces.replace\n        replace_spaces.output -> replace_commas.input\n        \",\" -> replace_commas.search\n        \":\" -> replace_commas.replace\n        replace_commas.output -> replace_dots_9c1c6e.input\n        \".\" -> replace_dots_9c1c6e.search\n        \":\" -> replace_dots_9c1c6e.replace\n        replace_dots_9c1c6e.output -> output_7e9c6b\n    }\n\n    \n\n    instance(x: -280, y: 136) replace_spaces_commas_dots_5f3d2a root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5a8c4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7d9e3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_c6f2d1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5a8c4f.input\n        \" \" -> replace_5a8c4f.search\n        \":\" -> replace_5a8c4f.replace\n        replace_5a8c4f.output -> replace_7d9e3c.input\n        \",\" -> replace_7d9e3c.search\n        \":\" -> replace_7d9e3c.replace\n        replace_7d9e3c.output -> replace_c6f2d1.input\n        \".\" -> replace_c6f2d1.search\n        \":\" -> replace_c6f2d1.replace\n        replace_c6f2d1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceAll_e54b7f root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -199, y: 0, name: \"input\") property(String) input_9a1f6e\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_8b7d3c\n\n        instance(x: 0, y: 0) replace_5a1c1c root.Std_k98ojb.Strings.Replace {}\n        input_9a1f6e -> replace_5a1c1c.input\n        \" \" -> replace_5a1c1c.search\n        \":\" -> replace_5a1c1c.replace\n        instance(x: 0, y: -40) replace_2d7b8c root.Std_k98ojb.Strings.Replace {}\n        replace_5a1c1c.output -> replace_2d7b8c.input\n        \",\" -> replace_2d7b8c.search\n        \":\" -> replace_2d7b8c.replace\n        instance(x: 0, y: -80) replace_4f3e9f root.Std_k98ojb.Strings.Replace {}\n        replace_2d7b8c.output -> replace_4f3e9f.input\n        \".\" -> replace_4f3e9f.search\n        \":\" -> replace_4f3e9f.replace\n        replace_4f3e9f.output -> output_8b7d3c\n    }\n\n    \n\n    instance(x: -176, y: 32) replace_b0a1e2 root.main.replace {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -290, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 557, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 0) characters_7e9f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 266, y: 1) all_equal_3a5d4c root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n                in(x: -112, y: -26, name: \"_index\") property(Number) _index_769593\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n                elem_9f6850 -> equal_f89569.left\n                string_0.characters[0] -> equal_f89569.right\n                equal_f89569.result -> bool_af09a7\n            }\n        }\n        characters_7e9f8c.input -> all_equal_3a5d4c.items\n        instance(x: 531, y: -1) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 745, y: 0) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        characters_7e9f8c.characters -> length_8166b0.list\n        all_equal_3a5d4c.output_list.length -> equal_f89569.left\n        string_0.characters.length -> equal_f89569.right\n        equal_f89569.result -> result_0\n    }\n\n    \n\n    instance(x: -56, y: 52) check_same_2f7b1e root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -287, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 540, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_5e9d4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) all_equal_f7c8a6 root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -76, y: 46, name: \"current\") property(String) current_1\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_2\n\n                out(x: 382, y: 19, name: \"out\") property(Bool) out_3\n\n                instance(x: 106, y: 17) equal_7e1b9c root.Std_k98ojb.Logic.Equal {}\n                current_1 -> equal_7e1b9c.left\n                characters_5e9d4f.characters[_index_2] -> equal_7e1b9c.right\n                equal_7e1b9c.result -> out_3\n            }\n        }\n        string_1 -> characters_5e9d4f.input\n        characters_5e9d4f.characters -> all_equal_f7c8a6.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_3\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4\n\n            instance(x: 74, y: -23) not_1a7b9c root.Std_k98ojb.Logic.Not {}\n            current_3 -> not_1a7b9c.input\n            not_1a7b9c.result -> bool_4\n        } -> all_equal_f7c8a6.handler\n        all_equal_f7c8a6.output_list.Length -> result_1\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_e54b7f root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -286, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 540, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_3c8a4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) all_equal_f7e6d9 root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -30, y: -25, name: \"current\") property(String) current_1\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_2\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_3\n\n                instance(x: 226, y: 56) equal_1a8c9f root.Std_k98ojb.Logic.Equal {}\n                current_1 -> equal_1a8c9f.left\n                characters_3c8a4f.characters[_index_2] -> equal_1a8c9f.right\n                equal_1a8c9f.result -> output_3\n            }\n        }\n        string_1 -> characters_3c8a4f.input\n        characters_3c8a4f.characters -> all_equal_f7e6d9.items\n        func() {\n            out(x: 0, y: 0, name: \"output\") property(Bool) output_2\n\n            instance(x: -113, y: 34, name: \"allEqual\") property(Bool) allEqual_3\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_4\n\n            instance(x: 89, y: 29) length_5a9b7c root.Std_k98ojb.List.Length {}\n            instance(x: 310, y: 35) equal_1a8c9f root.Std_k98ojb.Logic.Equal {}\n            allEqual_3 -> bool_4\n            length_5a9b7c.length -> equal_1a8c9f.left\n            1 -> equal_1a9b7c.right\n            equal_1a8c9f.result -> output_2\n            characters_3c8a4f.characters -> length_5a9b7c.list\n        } -> all_equal_f7e6d9.handler\n        all_equal_f7e6d9.output_list.length == 0 -> result_1\n    }\n\n    \n\n    instance(x: -56, y: 528) check_same_3f8d4 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -284, y: 0, name: \"string\") property(String) string_3f9a6e\n\n        out(x: 557, y: -1, name: \"output\") property(Bool) output_7c8d4b\n\n        instance(x: 0, y: 0) intersection_2e1b1f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 265, y: 0) length_f3a6f9 root.Std_k98ojb.List.Length {}\n        instance(x: -1, y: 0) characters_7c5d8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) equal_4e9d2f root.Std_k98ojb.Logic.Equal {}\n        string_3f9a6e -> characters_7c5d8c.input\n        characters_7c5d8c.characters -> intersection_2e1b1f.left\n        length_f3a8f9.length -> equal_4e9d2f.right\n        1 -> equal_4e9d2f.left\n        intersection_2e1b1f.intersection -> length_f3a8f9.list\n        characters_7c5d8c.characters -> intersection_2e1b1f.right\n        equal_4e9d2f.result -> output_7c8d4b\n    }\n\n    \n\n    instance(x: -57, y: 10) check_same_3a0d6f root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -280, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 555, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_c7f8a6 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 270, y: -3) allroot_k98ojb root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_1\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_2\n\n            instance(x: 106, y: 17) equal_7a8c5f root.Std_k98ojb.Logic.Equal {}\n            characters_c7f8a6.characters -> equal_7a8c5f.left\n            element_1 -> equal_7a8c5f.right\n            equal_7a8c5f.result -> out_2\n        } -> allroot_k98ojb.handler\n        characters_c7f8a6.output -> allroot_k98ojb.items\n        allroot_k98ojb.output_list.length -> output_1\n    }\n\n    \n\n    instance(x: -63, y: 51) is_same_3d0c4e root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -286, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_3e9c4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) uniquelist_f8a7d6 root.Std_k98ojb.List.UniqueList {}\n        instance(x: 480, y: -2) length_5b1b9c root.Std_k98ojb.List.Length {}\n        characters_3e9c4f.characters -> uniquelist_f8a7d6.list\n        uniquelist_f8a7d6.unique_list -> length_5b1b9c.list\n        1 -> greaterthanorequal_2c0a5c.right\n        length_5b1b9c.length -> greaterthanorequal_2c0a5c.left\n        string_0 -> characters_3e9c4f.input\n        greaterthanorequal_2c0a5c.result -> result_0\n        instance(x: 696, y: -2) greaterthanorequal_2c0a5c root.Std_k98ojb.Math.GreaterThanOrEqual {}\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_f54b7f root.main.check_same {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -290, y: 0, name: \"string\") property(String) string_3a8d9e\n\n        out(x: 531, y: -1, name: \"output\") property(Bool) output_bf7b5c\n\n        instance(x: 0, y: 0) all_same_4a6d9c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_1e3f2c\n            in(x: -112, y: -24, name: \"_index\") property(Number) _index_5d9a7b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_8f6a0c\n\n            instance(x: 89, y: 29) equal_1e3c9c root.Std_k98ojb.Logic.Equal {}\n            elem_1e3f2c -> equal_1e3c9c.left\n            string_3a8d9e -> equal_1e3c9c.right\n            equal_1e3c9c.result -> bool_8f6a0c\n        } -> all_same_4a6d9c.handler\n        instance(x: 0, y: -30) characters_7b2f5c root.Std_k98ojb.Strings.Characters {}\n        string_3a8d9e -> characters_7b2f5c.input\n        characters_7b2f5c.characters -> all_same_4a6d9c.items\n        instance(x: 0, y: -60) length_1c3c1f root.Std_k98ojb.List.Length {}\n        characters_7b2f5c.characters -> length_1c3c1f.list\n        length_1c3c1f.length -> all_same_4a6d9c.count\n        all_same_4a6d9c.output_list -> output_bf7b5c\n    }\n\n    \n\n    instance(x: -53, y: 52) check_same_2e8c0f root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -287, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 533, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_3a9c4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) all_equal_7d8e5c root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -76, y: 46, name: \"element\") property(String) element_1\n\n                out(x: 382, y: 19, name: \"out\") property(Bool) out_2\n\n                instance(x: 106, y: 17) equal_9b8c4f root.Std_k98ojb.Logic.Equal {}\n                characters_3a9c4f.characters -> equal_9b8c4f.left\n                element_1 -> equal_9b8c4f.right\n                equal_9b8c4f.result -> out_2\n            }\n        }\n        string_1 -> characters_3a9c4f.input\n        characters_3a9c4f.characters -> all_equal_7d8e5c.items\n        instance(x: 530, y: -2) length_0b6f7f root.Std_k98ojb.List.Length {}\n        instance(x: 746, y: -1) equal_0c4b7a root.Std_k98ojb.Logic.Equal {}\n        all_equal_7d8e5c.output_list -> length_0b6f7f.list\n        length_0b6f7f.length -> equal_0c4b7a.left\n        1 -> equal_0c4b7a.right\n        equal_0c4b7a.result -> result_1\n    }\n\n    \n\n    instance(x: -57, y: 55) check_same_f9e3d8 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -286, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 531, y: -1, name: \"output\") property(Bool) output_0\n\n        instance(x: 0, y: 1) characters_7e6f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -3, y: -2) length_8a4f9f root.Std_k98ojb.List.Length {}\n        characters_7e6f9c.characters -> contains_d42dce.list\n        0 -> contains_d42dce.item\n        input_0 -> characters_7e6f9c.input\n        characters_7e6f9c.characters -> length_8a4f9f.list\n        length_8a4f9f.length -> contains_d42dce.count\n        contains_d42dce.result -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_7e5b6c root.main.is_same {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -283, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 529, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_3a9c7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) all_equal_f6e8d4 root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -114, y: 34, name: \"current\") property(String) current_1\n                in(x: -113, y: -26, name: \"_index\") property(Number) _index_2\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3\n\n                instance(x: 89, y: 29) equal_1d9c7f root.Std_k98ojb.Logic.Equal {}\n                current_1 -> equal_1d9c7f.left\n                characters_3a9c7f.characters[_index_2] -> equal_1d9c7f.right\n                equal_1d9c7f.result -> bool_3\n            }\n        }\n        instance(x: 0, y: -27) length_5e8b4a root.Std_k98ojb.List.Length {}\n        characters_3a9c7f.characters -> all_equal_f6e8d4.items\n        length_5e8b4a.length -> equal_1d9c7f.right\n        1 -> length_5e8b4a.list\n        input_0 -> characters_3a9c7f.input\n        all_equal_f6e8d4.output_list.length == length_5e8b4a.length -> result_0\n    }\n\n    \n\n    instance(x: -54, y: 530) is_same_1e2a7c root.main.is_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -77) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 118, y: -26) count_digits_9dcc3d root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 0, y: -2) CountDigits_5e9f8a root.main.CountDigits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 0, y: -2) CountDigits_1a6f8e root.main.CountDigits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 0, y: 0) length_6d05b0 root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_6d05b0.list\n        length_6d05b0.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: -1) filter_6d05b0 root.Std_k98ojb.Query.Filter {\n            where: \"Std.k.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) length_3d7de6 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_6d05b0.list\n        filter_6d05b0.result -> length_3d7de6.items\n        length_3d7de6.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) CountDigits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -100) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 0, y: -1) CountDigits_2c856f root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 118, y: -26) count_digits_9dcc3d root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 0, y: -2) CountDigits_5a6f9e root.main.CountDigits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1056, y: 75) filter_8f2c5a root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n                isnumeric_1088d5.input -> elem_9f6850\n                isnumeric_1088d5.is_numeric -> bool_af09a7\n            }\n        }\n        instance(x: 1341, y: 75) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_8f2c5a.items\n        filter_8f2c5a.output_list -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: -1) filter_2d6da6 root.Std_k98ojb.Query.Filter {\n            where: \"it.isNumeric\"\n        }\n        instance(x: 0, y: 0) length_cde0dc root.Std_k98ojb.List.Length {}\n\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_2d6da6.list\n        filter_2d6da6.result -> length_cde0dc.items\n        length_cde0dc.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) CountDigits_59bc6e root.main.CountDigits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9c2e4d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c8f5e.gen_0\n        pow_4c8f5e.result -> sum_365f7b\n        4 -> pow_4c8f5e.y\n        expression_2d6da6.result -> pow_4c8f5e.x\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e8d2c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c8f7e.gen_0\n        pow_4c8f7e.result -> sum_365f7b\n        4 -> pow_4c8f7e.y\n        expression_2d6da6.result -> pow_4c8f7e.x\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e8d2c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4f7e5c.gen_0\n        pow_4f7e5c.result -> sum_365f7b\n        4 -> pow_4f7e5c.y\n        expression_2d6da6.result -> pow_4f7e5c.x\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> pow_9e8d2c.second\n        pow_9e8d2c.result -> sum_365f7b\n        expression_2d6da6.result -> pow_9e8d2c.first\n        n_3a3116 -> pow_9e8d2c.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4d5e9c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4d5e9c.y\n        data_cde0dc -> pow_4d5e9c.x\n        expression_2d6da6.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_4d5e9c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.gen_1\n        data_cde0dc -> pow_f892a4.gen_0\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9c8d5e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n-3\"\n        }\n        instance(x: 303, y: 2) add_1f8c5a root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_9c8d5e.y\n        n_3a3116 -> pow_9c8d5e.x\n        expression_2d6da6.result -> pow_9c8d5e.x\n        pow_9c8d5e.result -> add_1f8c5a.first\n        add_1f8c5a.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e4c8d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9e4c8d.y\n        data_cde0dc -> pow_9e4c8d.x\n        expression_2d6da6.result -> sum_365f7b\n        4 -> pow_9e4c8d.power\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e8c0d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n-3\"\n        }\n        n_3a3116 -> pow_9e8c0d.y\n        data_cde0dc -> pow_9e8c0d.x\n        expression_2d6da6.result -> pow_9e8c0d.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_9e8c0d.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.gen_1\n        data_cde0dc -> pow_f892a4.gen_0\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.gen_1\n        data_cde0dc -> pow_f892a4.gen_0\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_b2508f\n\n        instance(x: -105, y: -110) mul_2d7c1e root.Std_k98ojb.Math.Mul {}\n        instance(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = surface_area\n        instance(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = surface_area\n        a_9f7759 -> mul_2d7c1e.first\n        6 -> mul_2d7c1e.second\n        getter_9cceb3.value -> surface_area_b2508f\n        mul_2d7c1e.result -> setter_1cedb2.new_value\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_cube_d6e930 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -100, y: 0, name: \"size\") property(Number) size_3a3116\n\n        out(x: 571, y: 7, name: \"surface area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        expression_instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        div_instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        size_3a3116 -> mul_f892a4.first\n        size_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -280, y: -210, name: \"execute\") trigger() execute_9e3a8f\n        in(x: -267, y: -86, name: \"size\") property(Number) size_a6cea7\n\n        out(x: 546, y: 63, name: \"continue\") trigger() continue_b1d7f8\n        out(x: 544, y: -13, name: \"output\") property(Number) output_0b075e\n\n        instance(x: 12, y: -209) mul_6a9c2c root.Std_k98ojb.Math.Mul {}\n        instance(x: 11, y: -86) mul_1d5f7f root.Std_k98ojb.Math.Mul {}\n        instance(x: 13, y: -14) mul_4e3c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 12, y: -2) add_9a0f2c root.Std_k98ojb.Math.Add {}\n        instance(x: 11, y: 59) mul_f1d5c6 root.Std_k98ojb.Math.Mul {}\n        instance(x: 13, y: 61) mul_7e3c8f root.Std_k98ojb.Math.Mul {}\n        instance(x: 12, y: 63) add_9a0f2c_1 root.Std_k98ojb.Math.Add {}\n        size_a6cea7 -> mul_6a9c2c.first\n        size_a6cea7 -> mul_1d5f7f.first\n        size_a6cea7 -> mul_4e3c8f.first\n        6 -> mul_6a9c2c.second\n        mul_6a9c2c.result -> add_9a0f2c.first\n        mul_1d5f7f.result -> add_9a0f2c.second\n        add_9a0f2c.result -> mul_f1d5c6.first\n        2 -> mul_f1d5c6.second\n        mul_f1d5c6.result -> mul_7e3c8f.first\n        size_a6cea7 -> mul_7e3c8f.second\n        mul_4e3c8f.result -> add_9a0f2c_1.first\n        mul_7e3c8f.result -> add_9a0f2c_1.second\n        add_9a0f2c_1.result -> output_0b075e\n        execute_9e3a8f -> continue_b1d7f8\n    }\n\n    \n\n    instance(x: -85, y: -46) surface_area_cube_15f9e9 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_b2508f\n\n        instance(x: -105, y: -110) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: -144, y: 112) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 116, y: -268) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"6*a*a\"\n        }\n        a_9f7759 -> mul_f892a4.first\n        a_9f7759 -> mul_f892a4.second\n        mul_f892a4.result -> mul_2f9d09.first\n        1 -> mul_2f9d09.second\n        mul_2f9d09.result -> expression_b720d7.gen_0\n        a_9f7759 -> expression_b720d7.gen_1\n        expression_b720d7.result -> surface_area_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_cube_d6e930 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -451, y: -419, name: \"execute\") trigger() execute_1f9a5b\n        in(x: -437, y: -201, name: \"size\") property(Number) size_ae\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_e7c0d2\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_1f8a3b\n\n        instance(x: 80, y: -417) ifexpression_4e5a8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"size <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_9d7f2c root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_f6a8a1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_3e5f0c root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_2d9b4\") setter_2d9b4 = surface_area\n        setter(x: 875, y: -518, name: \"setter_3a5f8c\") setter_3a5f8c = surface_area\n        getter(x: 902, y: -314, name: \"getter_1e7b6d\") getter_1e7b6d = surface_area\n        instance(x: -202, y: -236) floor_2c9f4 root.Std_k98ojb.Math.Floor {}\n        0 -> setter_2d9b4.new_value\n        setter_2d9b4.continue -> ifexpression_4e5a8.execute\n        ifexpression_4e5a8.then -> continue_e7c0d2\n        execute_1f9a5b -> setter_2d9b4.execute\n        ifexpression_4e5a8.else -> surface_area_cube_9d7f2c.execute_1f9a5b\n        surface_area_cube_9d7f2c.continue_e7c0d2 -> setter_3a5f8c.execute\n        mul_f6a8a1.result -> add_3e5f0c.first\n        mul_f6a8a1.result -> add_3e5f0c.second\n        add_3e5f0c.result -> setter_3a5f8c.new_value\n        setter_3a5f8c.continue -> continue_e7c0d2\n        getter_1e7b6d.value -> output_1f8a3b\n        size_ae -> floor_2c9f4.input\n        floor_2c9f4.output -> mul_f6a8a1.first\n        floor_2c9f4.output -> mul_f6a8a1.second\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_7e5d0b root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -102, y: 1, name: \"size\") property(Number) size_8f0a9d\n\n        out(x: 1116, y: 4, name: \"area\") property(Number) area_f7c3b2\n\n        instance(x: 18, y: -12) mul_1e5b1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 20, y: 40) mul_9a0d6f root.Std_k98ojb.Math.Mul {}\n        instance(x: 17, y: 84) mul_3c8c4c root.Std_k98ojb.Math.Mul {}\n        instance(x: 18, y: 136) add_7e5b1e root.Std_k98ojb.Math.Add {}\n        size_8f0a9d -> mul_1e5b1.first\n        size_8f0a9d -> mul_1e5b1.second\n        mul_1e5b1.result -> mul_9a0d6f.first\n        2 -> mul_9a0d6f.second\n        mul_3c8c4c.first -> add_7e5b1e.first\n        mul_9a0d6f.result -> mul_3c8c4c.first\n        size_8f0a9d -> mul_3c8c4c.second\n        mul_3c8c4c.result -> add_7e5b1e.second\n        add_7e5b1e.result -> area_f7c3b2\n    }\n\n    \n\n    instance(x: 18, y: -12) surface_area_cube_6a0f1d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_b2508f\n\n        instance(x: -105, y: -110) mul_1c7b5e root.Std_k98ojb.Math.Mul {}\n        a_9f7759 -> mul_1c7b5e.first\n        6 -> mul_1c7b5e.second\n        instance(x: -144, y: -56) pow_e0a8d2 root.Std_k98ojb.Math.Pow {}\n        a_9f7759 -> pow_e0a8d2.x\n        2 -> pow_e0a8d2.y\n        mul_1c7b5e.result -> surface_area_b2508f\n        pow_e0a8d2.result -> mul_1c7b5e.first\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_cube_d6e930 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -280, y: -241, name: \"execute\") trigger() execute_1a0d9f\n        in(x: -268, y: -114, name: \"size\") property(Number) size_7c8b2e\n\n        out(x: 511, y: -114, name: \"continue\") trigger() continue_5e6b4f\n        out(x: 535, y: -306, name: \"surface area\") property(Number) surface_area_ba1d9c\n\n        instance(x: 12, y: -240) mul_2b8f3c root.Std_k98ojb.Math.Mul {}\n        instance(x: 10, y: -113) mul_7e6b4c root.Std_k98ojb.Math.Mul {}\n        instance(x: 11, y: -306) mul_1a0d9f root.Std_k98ojb.Math.Mul {}\n        instance(x: 12, y: -127) mul_5e6b4f root.Std_k98ojb.Math.Mul {}\n        size_7c8b2e -> mul_2b8f3c.first\n        size_7c8b2e -> mul_7e6b4c.first\n        6 -> mul_1a0d9f.second\n        2 -> mul_5e6b4f.second\n        mul_2b8f3c.result -> mul_7e6b4c.second\n        mul_1a0d9f.result -> mul_5e6b4f.first\n        mul_7e6b4c.result -> surface_area_ba1d9c\n        execute_1a0d9f -> mul_2b8f3c.execute\n        mul_2b8f3c.continue -> mul_7e6b4c.execute\n        mul_7e6b4c.continue -> mul_1a0d9f.execute\n        mul_1a0d9f.continue -> mul_5e6b4f.execute\n        mul_5e6b4f.continue -> continue_5e6b4f\n    }\n\n    \n\n    instance(x: 48, y: -39) surface_area_cube_3c8f7c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9e6a1f\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_a5b7c3\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_e4d0cf\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_8e1f2a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_8c9f4e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_1d3a2c root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_5e7c6f root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = surface_area\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = surface_area\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = surface_area\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        6 -> mul_1d3a2c.second\n        side_length_a5b7c3 -> mul_1d3a2c.first\n        mul_1d3a2c.result -> add_5e7c6f.first\n        mul_1d3a2c.result -> add_5e7c6f.second\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_e4efd7\n        execute_9e6a1f -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> surface_area_cube_8c9f4e.execute_9e6a1f\n        surface_area_cube_8c9f4e.continue_e4efd7 -> setter_375321.execute\n        surface_area_cube_8c9f4e.output_8e1f2a -> add_5e7c6f.first\n        add_5e7c6f.result -> setter_375321.new_value\n        setter_375321.continue -> continue_e4efd7\n        getter_38583a.value -> output_8e1f2a\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9e6a8f\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_7c3d5b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_e2f1b0\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_4a8e1f\n\n        instance(x: 80, y: -417) ifexpression_c7d3c6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_9a8e4f root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_f3c7d2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_5b0b6c root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) pow_9e8a1f root.Std_k98ojb.Math.Pow {}\n        setter(x: -215, y: -463, name: \"setter_4d3f5f\") setter_4d3f5f = surface_area\n        setter(x: 875, y: -518, name: \"setter_2e9c8a\") setter_2e9c8a = surface_area\n        getter(x: 902, y: -314, name: \"getter_6b7d3f\") getter_6b7d3f = surface_area\n        instance(x: -202, y: -236) floor_1e5c4f root.Std_k98ojb.Math.Floor {}\n        10 -> pow_9e8a1f.y\n        side_length_7c3d5b -> pow_9e8a1f.x\n        pow_9e8a1f.result -> mul_f3c7d2.first\n        6 -> mul_f3c7d2.second\n        mul_f3c7d2.result -> add_5b0b6c.first\n        side_length_7c3d5b -> add_5b0b6c.second\n        0 -> setter_4d3f5f.new_value\n        setter_4d3f5f.continue -> ifexpression_c7d3c6.execute\n        ifexpression_c7d3c6.then -> continue_e2f1b0\n        execute_9e6a8f -> setter_4d3f5f.execute\n        ifexpression_c7d3c6.else -> surface_area_cube_9a8e4f.execute_9e6a8f\n        surface_area_cube_9a8e4f.continue_e2f1b0 -> setter_2e9c8a.execute\n        surface_area_cube_9a8e4f.output_4a8e1f -> add_5b0b6c.first\n        add_5b0b6c.result -> setter_2e9c8a.new_value\n        setter_2e9c8a.continue -> continue_e2f1b0\n        getter_6b7d3f.value -> output_4a8e1f\n        side_length_7c3d5b -> floor_1e5c4f.input\n        floor_1e5c4f.output -> ifexpression_c7d3c6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_8a9c2f root.main.surface_area_cube {}\n\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 157, name: \"list\") property(List) list_9a3f8e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_9a3f8e -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_de624f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_9a3f8e -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 158, name: \"list\") property(List) list_1f9b3e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_7c2d5a\n\n        instance(x: 532, y: 147) sub_8b0c4e root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_9f1b3f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_2a7d8c`` root.Std_k98ojb.Iteration.Find {}\n        list_1f9b3e -> find_9f1b3f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_6f2a4d\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_e7c8e9\n\n            instance(x: 112, y: 80) greaterthan_3b1f5f root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_3b1f5f.left\n            find_9f1b3f.item -> greaterthan_3b1f5f.right\n            greaterthan_3b1f5f.result -> bool_e7a8e9\n        } -> find_9f1b3f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_e7a8e9\n\n            instance(x: 112, y: 80) lessthan_3b1f5f root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_3b1f5f.left\n            ``Max value_2a7d8c``.item -> lessthan_3b1f5f.right\n            lessthan_3b1f5f.result -> bool_e7a8e9\n        } -> ``Max value_2a7d8c``.predicate\n        list_1f9b3e -> ``Max value_2a7d8c``.items\n        find_9f1b3f.item -> sub_8b0c4e.first\n        ``Max value_2a7d8c``.item -> sub_8b0c4e.second\n        sub_8b0c4e.result -> output_7c2d5a\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 166, name: \"list\") property(List) list_1a8b9f\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_e7c2d0\n\n        instance(x: 532, y: 147) sub_3e6b4f root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_1a8b9f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_1a8b9f -> find_1a8b9f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_1a8b9f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_1a8b9f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_1a8b9f -> ``Max value_0b1361``.items\n        find_1a8b9f.item -> sub_3e6b4f.first\n        ``Max value_0b1361``.item -> sub_3e6b4f.second\n        sub_3e6b4f.result -> output_e7c2d0\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9a8f6e\n\n        out(x: 500, y: 11, name: \"output\") property(Number) output_1b2c4d\n\n        instance(x: 0, y: 0) max_3a5b1f root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 0) min_9e8f6f root.Std_k98ojb.List.Min {}\n        list_9a8f6e -> max_3a5b1f.items\n        list_9a8f6e -> min_9e8f6f.items\n        instance(x: 252, y: -4) sub_7d0c2e root.Std_k98ojb.Math.Sub {}\n        max_3a5b1f.max -> sub_7d0c2e.first\n        min_9e8f6f.min -> sub_7d0c2e.second\n        sub_7d0c2e.result -> output_1b2c4d\n    }\n\n    \n\n    instance(x: -54, y: 5) diff_max_min_ea3d6f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_de624f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_09fcba -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 1, name: \"list\") property(List) list_2e9f8a\n\n        out(x: 545, y: 11, name: \"output\") property(Number) output_e5b7c0\n\n        instance(x: -110, y: 13) max_4d3f6f root.Std_k98ojb.List.Max {}\n        instance(x: -112, y: -111) min_9a1e2c root.Std_k98ojb.List.Min {}\n        list_2e9f8a -> max_4d3f6f.items\n        list_2e9f8a -> min_9a1e2c.items\n        instance(x: 188, y: -7) sub_0e5f2c root.Std_k98ojb.Math.Sub {}\n        max_4d3f6f.max -> sub_0e5f2c.first\n        min_9a1e2c.min -> sub_0e5f2c.second\n        sub_0e5f2c.result -> output_e5b7c0\n    }\n\n    \n\n    instance(x: 48, y: -68) diff_max_min_3d8c6f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 157, name: \"list\") property(List) list_1f0b8a\n\n        out(x: 546, y: 127, name: \"output\") property(Number) output_e5c9d4\n\n        instance(x: 188, y: 124) sub_7e3a6c root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_f1f0f8 root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min list\") min_7a9d3c root.Std_k98ojb.List.Min {}\n        sub_7e3a6c.result -> output_e5c9d4\n        max_f1f0f8.max -> sub_7e3a6c.first\n        min_7a9d3c.min -> sub_7e3a6c.second\n        list_1f0b8a -> max_f1f0f8.items\n        list_1f0b8a -> min_7a9d3c.items\n    }\n\n    \n\n    instance(x: 48, y: -12) diff_max_min_5e2f4c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 10, name: \"list\") property(List) list_1a8b9f\n\n        out(x: 443, y: 27, name: \"output\") property(Number) output_5e7c0d\n\n        instance(x: -69, y: 11) max_3f6a4c root.Std_k98ojb.List.Max {}\n        instance(x: -68, y: 155) min_9e1f2f root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 26) sub_7d0a5c root.Std_k98ojb.Math.Sub {}\n        list_1a8b9f -> max_3f6a4c.items\n        list_1a8b9f -> min_9e1f2f.items\n        max_3f6a4c.max -> sub_7d0a5c.first\n        min_9e1f2f.min -> sub_7d0a5c.second\n        sub_7d0a5c.result -> output_5e7c0d\n    }\n\n    \n\n    instance(x: 10, y: -37) diff_max_min_eb3d8f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_de624f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_09fcba -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -284, y: 0, name: \"list\") property(List) list_6a3f8e\n\n        out(x: 594, y: 1, name: \"output\") property(Number) output_e5b9d7\n\n        instance(x: 0, y: 0) max_2c4e7c root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 0) min_3f8a6f root.Std_k98ojb.List.Min {}\n        list_6a3f8e -> max_2c4e7c.items\n        list_6a3f8e -> min_3f8a6f.items\n        instance(x: 594, y: -1) sub_9d5a8c root.Std_k98ojb.Math.Sub {}\n        max_2c4e7c.max -> sub_9d5a8c.first\n        min_3f8a6f.min -> sub_9d5a8c.second\n        sub_9d5a8c.result -> output_e5b9d7\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_max_min_2e4c0e root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 6, name: \"input\") property(Number) input_0a3f9e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_1b7c4d\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_e5c8ec\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_9a2e3f\n\n        instance(x: -104, y: -110) ifexpression_1b7d0c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_0a3f9e -> ifexpression_1b7d0c.gen_0\n        ifexpression_1b7d0c.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        false -> setter_1cedb2.new_value\n        getter_9cceb3.value -> output_e5c8ec\n        execute_1b7c4d -> ifexpression_1b7d0c.execute\n        ifexpression_1b7d0c.else -> setter_1cedb2.execute\n        false -> setter_1cedb2.new_value\n        true -> setter_1cedb2.new_value\n        setter_1cedb2.continue -> continue_9a2e3f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_7c8d5f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 3, name: \"input\") property(Number) input_1f8a0e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_5c7d6b\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_3b9f4f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_1a2e9f\n\n        instance(x: -106, y: -110) ifexpression_8c6d0c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_b1a7f9\") getter_b1a7f9 = output\n        setter(x: 116, y: -268, name: \"setter_8e6c5d\") setter_8e6c5d = output\n        input_1f8a0e -> ifexpression_8c6d0c.gen_0\n        execute_5c7d6b -> ifexpression_8c6d0c.execute\n        getter_b1a7f9.value -> output_3b9f4f\n        ifexpression_8c6d0c.then -> setter_8e6c5d.execute\n        true -> setter_8e6c5d.new_value\n        false -> setter_8e6c5d.new_value\n        setter_8e6c5d.continue -> continue_1a2e9f\n    }\n\n    \n\n    instance(x: -173, y: 11) is_even_f7b4ec root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 5, name: \"input\") property(Number) input_9e6a8f\n        in(x: -449, y: -119, name: \"execute\") trigger() execute_eb7d3c\n\n        out(x: 1212, y: -118, name: \"continue\") trigger() continue_f1b4ef\n        out(x: 1205, y: 60, name: \"output\") property(Bool) output_8e9f6a\n\n        instance(x: -103, y: -114) ifexpression_e3d7c2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -142, y: 58, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_9e6a8f -> ifexpression_e3d7c2.gen_0\n        2 -> ifexpression_e3d7c2.gen_1\n        getter_9cceb3.value -> output_8e9f6a\n        ifexpression_e3d7c2.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_e3d7c2.else -> continue_f1b4ef\n        execute_eb7d3c -> ifexpression_e3d7c2.execute\n        setter_1cedb2.continue -> continue_f1b4ef\n    }\n\n    \n\n    instance(x: -174, y: 6) is_even_9f8e5a root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 0, name: \"input\") property(Number) input_9f1e6d\n        in(x: -451, y: -115, name: \"execute\") trigger() execute_7a3c4b\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_e5c2ec\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_f1d6f9\n\n        instance(x: -105, y: -110) ifexpression_7e3b4a root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_9f1e6d -> ifexpression_7e3b4a.gen_0\n        execute_7a3c4b -> ifexpression_7e3b4a.execute\n        ifexpression_7e3b4a.value -> output_f1d6f9\n        ifexpression_7e3b4a.then -> continue_e5c2ec\n        ifexpression_7e3b4a.else -> continue_e5c2ec\n    }\n\n    \n\n    instance(x: -173, y: 12) is_even_0a8d1f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 165, name: \"input\") property(Number) input_1e3f0d\n        in(x: -452, y: -113, name: \"execute\") trigger() execute_9b7c5a\n\n        out(x: 1234, y: 146, name: \"output\") property(Bool) output_8e2e7e\n        out(x: 1226, y: -114, name: \"continue\") trigger() continue_e3d0f1\n\n        instance(x: 753, y: 148) ifexpression_9a4c8b root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 334, y: 161, name: \"getter_b280eb\") getter_b280eb = output\n        setter(x: 679, y: -319, name: \"setter_9d4f1c\") setter_9d4f1c = output\n        instance(x: 321, y: -19) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = output\n        ifexpression_9a4c8b.else -> continue_e3d0f1\n        getter_b280eb.value -> output_8e2e7e\n        ifexpression_9a4c8b.then -> setter_9d4f1c.execute\n        input_1e3f0d -> ifexpression_9a4c8b.gen_0\n        2 -> ifexpression_9a4c8b.gen_1\n        for_d26972.item -> ifexpression_9a4c8b.gen_2\n        for_d26972.index -> ifexpression_9a4c8b.gen_0\n        getter_b280eb.value -> ifexpression_9a4c8b.gen_1\n        for_d26972.onItem -> ifexpression_9a4c8b.execute\n        for_d26972.done -> continue_e3d0f1\n        for_d26972.item -> setter_9d4f1c.new_value\n        execute_9b7c5a -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_even_f3b7f8 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 2, name: \"input\") property(Number) input_0e9f1d\n        in(x: -454, y: -111, name: \"execute\") trigger() execute_ea7c8b\n\n        out(x: 546, y: 62, name: \"output\") property(Bool) output_b5a6ed\n        out(x: 512, y: -112, name: \"continue\") trigger() continue_1f9e3d\n\n        instance(x: 0, y: 0) modulo_f8b2c4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_5a7f6f root.Std_k98ojb.Logic.Equal {}\n        input_0e9f1d -> modulo_f8b2c4.value\n        2 -> modulo_f8b2c4.divisor\n        modulo_f8b2c4.result -> equal_5a7f6f.left\n        0 -> equal_5a7f6f.right\n        execute_ea7c8b -> modulo_f8b2c4.execute\n        equal_5a8f6f.result -> output_b5a6ed\n        modulo_f8b2c4.continue -> continue_1f9e3d\n    }\n\n    \n\n    instance(x: -83, y: 53) is_even_0a7b9f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 6, name: \"input\") property(Number) input_1a9f5e\n        in(x: -451, y: -113, name: \"execute\") trigger() execute_eb0d7c\n\n        out(x: 1188, y: -114, name: \"continue\") trigger() continue_3b4a6e\n        out(x: 1211, y: 10, name: \"output\") property(Bool) output_f5f2ee\n\n        instance(x: -101, y: -112) ifexpression_9c7d8f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -139, y: 14, name: \"getter_1a6e4c\") getter_1a6e4c = output\n        setter(x: 117, y: -268, name: \"setter_eb9d3f\") setter_eb9d3f = output\n        input_1a9f5e -> ifexpression_9c7d8f.gen_0\n        getter_1a6e4c.value -> output_f5f2ee\n        ifexpression_9c7d8f.then -> setter_eb9d3f.execute\n        true -> setter_eb9d3f.new_value\n        execute_eb0d7c -> ifexpression_9c7d8f.execute\n        ifexpression_9c7d8f.else -> continue_3b4a6e\n        setter_eb9d3f.continue -> continue_3b4a6e\n    }\n\n    \n\n    instance(x: -175, y: 1) is_even_f0a2d5 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 10, name: \"input\") property(Number) input_1f0e9d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_5a7c6b\n\n        out(x: 47, y: 158, name: \"output\") property(Bool) output_4a2e3e\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_1d9f8f\n\n        instance(x: -106, y: -110) ifexpression_5b7c8f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_b9d1e3\") getter_b9d1e3 = output\n        setter(x: 116, y: -268, name: \"setter_7a8f5c\") setter_7a8f5c = output\n        input_1f0e9d -> ifexpression_5b7c8f.gen_0\n        execute_5a7c6b -> ifexpression_5b7c8f.execute\n        getter_b9d1e3.value -> output_4a2e3e\n        ifexpression_5b7c8f.then -> setter_7a8f5c.execute\n        true -> setter_7a8f5c.new_value\n        ifexpression_5b7c8f.else -> continue_1d9f8f\n        false -> setter_7a8f5c.new_value\n        setter_7a8f5c.continue -> continue_1d9f8f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_3e6b4c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 16, name: \"input\") property(Number) input_0a3e8f\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_eb7d5c\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_9e2f1f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_6a3f4f\n\n        instance(x: -105, y: -110) ifexpression_7c0b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_0a3e8f -> ifexpression_7c0b5d.gen_0\n        execute_eb7d5c -> ifexpression_7c0b5d.execute\n        getter_9cceb3.value -> output_9e2f1f\n        ifexpression_7c0b5d.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        false -> setter_37db7f.new_value\n        ifexpression_7c0b5d.else -> setter_37db7f.execute\n        setter_1cedb2.continue -> continue_6a3f4f\n        setter_37db7f.continue -> continue_6a3f4f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_8e9c5d root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 1, name: \"input\") property(Number) input_8a2f5e\n        in(x: -451, y: -114, name: \"execute\") trigger() execute_e9b3d7\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_4c6b1e\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_5a2f0f\n\n        instance(x: -105, y: -110) ifexpression_7d8b3f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_8a2f5e -> ifexpression_7d8b3f.gen_0\n        2 -> ifexpression_7d8b3f.gen_1\n        execute_e9b3d7 -> ifexpression_7d8b3f.execute\n        ifexpression_7d8b3f.value -> output_4c6b1e\n        ifexpression_7d8b3f.then -> continue_5a2f0f\n        ifexpression_7d8b3f.else -> continue_5a2f0f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f9c1a6 root.main.is_even {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_9d5f8c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -1) map_2e1444 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 515, y: 44) orelse_f7c284f root.Std_k98ojb.Std.OrElse {}\n        characters_7b3b7b.characters -> map_2e1444.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"output\") property(Any) output_3bc2ae\n\n            instance(x: 89, y: 29) find_1088d5 root.Std_k98ojb.Iteration.Find {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 515, y: 44) orelse_f7c284f root.Std_k98ojb.Std.OrElse {}\n            elem_9f6850 -> find_1088d5.predicate\n            func() {\n                in(x: -113, y: 34, name: \"current\") property(String) current_afd5b1\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                elem_9f6850 -> contains_d42dce.input\n                current_afd5b1 -> contains_d42dce.contains\n                contains_d42dce.result -> bool_1eb6e9\n            } -> find_1088d5.predicate\n            map_2e1444.output -> find_1088d5.items\n            find_1088d5.item -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> orelse_f7c284f.first\n            null -> orelse_f7c284f.second\n            orelse_f7c284f.value -> output_3bc2ae\n        } -> map_2e1444.handler\n        find_9d5f8c.predicate {\n            in(x: -113, y: 34, name: \"current\") property(String) current_afd5b1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            map_2e1444.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        }\n        find_9d5f8c.items -> characters_7b3b7b.characters\n        input_0 -> characters_7b3b7b.input\n        find_9d5f8c.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_1\n\n        instance(x: 0, y: 1) characters_3c7a5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4e6d9f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 465, y: -60) filter_2b1c8f root.Std_k98ojb.Query.Filter {\n            where: \"it == first\"\n        }\n        instance(x: 265, y: -119) find_4e6d9f_0 root.Std_k98ojb.Iteration.Find {}\n        characters_3c7a5f.characters -> filter_2b1c8f.list\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 112, y: 80) contains_4b6f7c root.Std_k98ojb.Strings.Contains {}\n            characters_3c7a5f.characters -> contains_4b6f7c.input\n            current_1 -> contains_4b6f7c.contains\n            contains_4b6f7c.result -> bool_0\n        } -> filter_2b1c8f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 112, y: 80) contains_4b6f7c root.Std_k98ojb.Strings.Contains {}\n            characters_3c7a5f.characters -> contains_4b6f7c.input\n            current_1 -> contains_4b6f7c.contains\n            contains_4b6f7c.result -> bool_0\n        } -> find_4e6d9f.predicate\n        filter_2b1c8f.result -> find_4e6d9f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 112, y: 80) contains_4b6f7c root.Std_k98ojb.Strings.Contains {}\n            characters_3c7a5f.characters -> contains_4b6f7c.input\n            current_1 -> contains_4b6f7c.contains\n            contains_4b6f7c.result -> bool_0\n        } -> find_4e6d9f_0.predicate\n        filter_2b1c8f.result -> find_4e6d9f_0.items\n        input_1 -> characters_3c7a5f.input\n        find_4e6d9f.item -> result_1\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_8b7a7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Contains\") contains_0b1361 root.Std_k98ojb.Query.Filter {\n            where: \"it in list\"\n        }\n        characters_7b3b7b.characters -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_7b3b7b.characters -> contains_d42dce.list\n            current_afd5b1 -> contains_d42dce.input\n            bool_1eb6e9 -> contains_d42dce.result\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_7b3b7b.characters -> contains_d42dce.list\n            current_afd5b1 -> contains_d42dce.input\n            bool_1eb6e9 -> contains_d42dce.result\n        } -> ``First repeated character_0b1361``.predicate\n        find_de624f.item -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) first_repeated_char_59bc6e root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5b9d7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6f3a8e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -100) filter_4e2b8e root.Std_k98ojb.Query.Filter {\n            where: \"it in list\"\n        }\n        instance(x: 265, y: -200) find_1f9c5d root.Std_k98ojb.Iteration.Find {}\n        characters_5b9d7c.characters -> filter_4e2b8e.list\n        input_0 -> characters_5b9d7c.input\n        instance(x: 530, y: -100) list_1a3f2d root.Std_k98ojb.List.Empty {}\n        find_6f3a8e.items -> filter_4e2b8e.list\n        list_1a3f2d -> find_6f3a8e.items\n        filter_4e2b8e.result -> find_1f9c5d.items\n        characters_5b9d7c.characters -> find_1f9c5d.items\n        find_6f3a8e.predicate = func() {\n            in(x: -192, y: 84, name: \"current\") property(Any) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2c3a7f root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_2c3a7f.input\n            find_1f9c5d.item -> contains_2c3a7f.contains\n            contains_2c3a7f.result -> bool_1eb6e9\n        }\n        find_1f9c5d.predicate = func() {\n            in(x: -192, y: 84, name: \"current\") property(Any) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) listcontains_7c3a8f root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> listcontains_7c3a8f.item\n            find_6f3a8e.item -> listcontains_7c3a8f.list\n            listcontains_7c3a8f.result -> bool_1eb6e9\n        }\n        find_1f9c5d.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5e3b9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 310, y: -75) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_5e3b9c.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) substring_7c2f3a root.Std_k98ojb.Strings.Substring {}\n            instance(x: 415, y: 86) contains_d42dce_0 root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> substring_7c2f3a.input\n            substring_7c2f3a.start -> substring_7c2f3a.end\n            substring_7c2f3a.substring -> contains_d42dce_0.input\n            characters_5e3b9c.characters -> contains_d42dce_0.contains\n            contains_d42dce_0.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        input_0 -> characters_5e3b9c.input\n        find_6d05b0.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3e4d7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6f8a8d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 465, y: -50) filter_2e5c9c root.Std_k98ojb.Query.Filter {\n            where: \"it == it\"\n        }\n        characters_3e4d7c.characters -> find_6f8a8d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a5b9b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_3eb6e9\n\n            instance(x: 112, y: 80) count_2c8f0a root.Std_k98ojb.Iteration.Count {}\n            instance(x: 415, y: 86) greaterthan_7d5b1c root.Std_k98ojb.Math.GreaterThan {}\n            current_a5b9b1 -> count_2c8f0a.items\n            characters_3e4d7c.characters -> count_2c8f0a.items\n            count_2c8f0a.count -> greaterthan_7d5b1c.left\n            1 -> greaterthan_7d5b1c.right\n            greaterthan_7d5b1c.result -> bool_3eb6e9\n        } -> find_6f8a8d.predicate\n        characters_3e4d7c.characters -> filter_2e5c9c.list\n        find_6f8a8d.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_1\n\n        instance(x: 0, y: 1) characters_3e4b9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7a6f8d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 465, y: -75) filter_2f1a7f root.Std_k98ojb.Query.Filter {\n            where: \"it == it\"\n        }\n        characters_3e4b9c.characters -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) count_1b5d6c root.Std_k98ojb.Iteration.Count {}\n            instance(x: 310, y: 35) greaterthan_2e9f4f root.Std_k98ojb.Math.GreaterThan {}\n            elem_9f6850 -> count_1b5d6c.input\n            count_1b5d6c.count -> greaterthan_2e9f4f.left\n            1 -> greaterthan_2e9f4f.right\n            greaterthan_2e9f4f.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        input_1 -> characters_3e4b9c.input\n        instance(x: 265, y: -75) filter_5f8c5f root.Std_k98ojb.Query.Filter {\n            where: \"it == it\"\n        }\n        characters_3e4b9c.characters -> filter_5f8c5f.list\n        filter_5f8c5f.result -> find_7a6f8d.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) count_1b5d6c root.Std_k98ojb.Iteration.Count {}\n            instance(x: 310, y: 35) greaterthan_2e9f4f root.Std_k98ojb.Math.GreaterThan {}\n            elem_9f6850 -> count_1b5d6c.input\n            count_1b5d6c.count -> greaterthan_2e9f4f.left\n            1 -> greaterthan_2e9f4f.right\n            greaterthan_2e9f4f.result -> bool_af09a7\n        } -> find_7a6f8d.predicate\n        find_6d05b0.item -> filter_2f1a7f.input\n        filter_2f1a7f.result -> find_7a6f8d.items\n        find_7a6f8d.item -> result_1\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_5e4b7f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -119, y: 0, name: \"first repeated char\") find_1e159f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 772, y: 76) map_5c9a8d root.Std_k98ojb.Iteration.Map {\n            handler: func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n                current_afd5b1 -> contains_d42dce.input\n                input_ai -> contains_d42dce.contains\n                contains_d42dce.result -> notequal_148aeb.left\n                true -> notequal_148aeb.right\n                notequal_148aeb.result -> bool_1eb6e9\n            }\n        }\n        instance(x: 772, y: 76) filter_5c9a8d root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -192, y: 84, name: \"current\") property(Bool) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) not_45e806 root.Std_k98ojb.Logic.Not {}\n                current_afd5b1 -> not_45e806.input\n                not_45e806.result -> bool_1eb6e9\n            }\n        }\n        characters_7b3b7b.characters -> map_5c9a8d.items\n        map_5c9a8d.output_list -> filter_5c9a8d.items\n        filter_5c9a8d.output_list -> find_1e159f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_d42dce.input\n            input_ai -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_1e159f.predicate\n        input_ai -> characters_7b3b7b.input\n        find_1e159f.item -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) first_repeated_char_node root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_807ffd.left\n            false -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: 0, y: -1) for_3e9c5f root.Std_k98ojb.Std.For {}\n        input_0 -> for_3e9c5f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n            instance(x: 310, y: 35) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> characters_2e1444.input\n            for_3e9c5f.item -> elem_9f6850\n            characters_2e1444.characters -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> for_3e9c5f.onItem\n        find_6d05b0.items -> for_3e9c5f.trigger\n        find_6d05b0.item -> output_3bc2ae\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_2\n\n        instance(x: 0, y: 0) find_3 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_4\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5\n\n            instance(x: 89, y: 29) contains_6 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_7 root.Std_k98ojb.Logic.NotEqual {}\n            input_1 -> contains_6.input\n            elem_4 -> contains_6.contains\n            contains_6.result -> notequal_7.left\n            find_3.item -> notequal_7.right\n            notequal_7.result -> bool_5\n        } -> find_3.predicate\n        instance(x: 0, y: -100) characters_8 root.Std_k98ojb.Strings.Characters {}\n        input_1 -> characters_8.input\n        characters_8.characters -> find_3.items\n        find_3.item -> output_2\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_9 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -280, y: 17, name: \"list\") property(List) list_8f3a9e\n\n        out(x: 0, y: 0, name: \"second_smallest\") property(Number) second_smallest_7c2b5d\n\n        instance(x: -101, y: -103) min_c3e343 root.Std_k98ojb.List.Min {}\n        instance(x: -10, y: -104) filter_6f8a1c root.Std_k98ojb.Query.Filter {\n            where: \"it > min\"\n        }\n        instance(x: 110, y: -103) min_9e7d3f root.Std_k98ojb.List.Min {}\n        list_8f3a9e -> min_c3e343.items\n        min_c3e343.min -> filter_6f8a1c.where.gen_0\n        list_8f3a9e -> filter_6f8a1c.list\n        filter_6f8a1c.result -> min_9e7d3f.items\n        min_9e7d3f.min -> second_smallest_7c2b5d\n    }\n\n    \n\n    instance(x: -67, y: 127) second_smallest_4e0b3f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: 2, name: \"list\") property(List) list_9f5a6e\n\n        out(x: 593, y: 77, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f5a6e -> find_6d05b0.items\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it != min\"\n        }\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n            find_6d05b0.item -> equal_aabb6e.left\n            elem_9f6850 -> equal_aabb6e.right\n            equal_aabb6e.result -> bool_af09a7\n        } -> filter_7b3b7b.where\n        list_9f5a6e -> filter_7b3b7b.list\n        instance(x: 0, y: 0) find_2c8d4e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1b8d4e root.Std_k98ojb.Math.Min {}\n            filter_7b3b7b.result -> min_1b8d4e.left\n            elem_9f6850 -> min_1b8d4e.right\n            min_1b8d4e.result -> bool_af09a7\n        } -> find_2c8d4e.predicate\n        filter_7b3b7b.result -> find_2c8d4e.items\n        find_2c8d4e.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -67, y: -37) second_smallest_f21f44 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -285, y: 1, name: \"list\") property(List) list_8e3a9f\n\n        out(x: 595, y: 2, name: \"second_smallest\") property(Number) second_smallest_5c7d0b\n\n        instance(x: -15, y: -14, name: \"First smallest number\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min2_1b8c5e root.Std_k98ojb.Math.Min2 {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            find_6d05b0.item -> min2_1b8c5e.left\n            elem_9f6850 -> min2_1b8c5e.right\n            min2_1b8c5e.min -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_8e3a9f -> find_6d05b0.items\n        instance(x: -15, y: 114, name: \"Second smallest number\") ``First smallest number_2c1f5f`` root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min2_1b8c5e root.Std_k98ojb.Math.Min2 {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            find_6d05b0.item -> min2_1b8c5e.left\n            elem_9f6850 -> min2_1b8c5e.right\n            min2_1b8c5e.min -> notequal_807ffd.left\n            ``First smallest number_2c1f5f``.item -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> ``First smallest number_2c1f5f``.predicate\n        list_8e3a9f -> ``First smallest number_2c1f5f``.items\n        ``First smallest number_2c1f5f``.item -> second_smallest_5c7d0b\n    }\n\n    \n\n    instance(x: -56, y: 13) second_smallest_8e3a9f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -280, y: 0, name: \"list\") property(List) list_1a3f8e\n\n        out(x: 600, y: 0, name: \"second_smallest\") property(Number) second_smallest_7c9d6b\n\n        instance(x: -40, y: 0, name: \"first_min\") find_5e4f0c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> first_min.predicate\n        list_1a3f8e -> first_min.items\n        instance(x: -40, y: 240, name: \"second_min\") find_5e4f0c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) greaterthan_5f7c0a root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> greaterthan_5f7c0a.left\n            0 -> greaterthan_5f7c0a.right\n            first_min.item -> greaterthan_5f7c0a.second\n            greaterthan_5f7c0a.result -> bool_1eb6e9\n        } -> second_min.predicate\n        list_1a3f8e -> second_min.items\n        second_min.item -> second_smallest_7c9d6b\n    }\n\n    \n\n    instance(x: -67, y: 37) second_smallest_5a4f1e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: 158, name: \"list\") property(List) list_9f7759\n\n        out(x: 46, y: 158, name: \"second_min\") property(Number) second_min_f9110a\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1ced",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 1, name: \"list\") property(List) list_4e9f8a\n\n        out(x: 461, y: 0, name: \"second_smallest\") property(Number) second_smallest_5b7c6d\n\n        instance(x: -3, y: -71, name: \"first pass\") filter_1a2f1c root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: 0, y: 0, name: \"current\") property(Number) current_9d8e5f\n\n                out(x: 0, y: 0, name: \"\") property(Bool) _1c2a3b\n\n                instance(x: -71, y: -37, name: \"min\") root.main.second_smallest.Min {}\n                list_4e9f8a -> min.items\n                current_9d8e5f -> min.left\n                min.min -> min.right\n                min.result -> _1c2a3b\n            }\n        }\n        instance(x: 0, y: 0, name: \"second pass\") find_7f4c9d root.Std_k98ojb.Iteration.Find {\n            predicate: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) min2_1e3c6d root.main.second_smallest.Min2 {}\n                list_4e9f8a -> min2_1e3c6d.left\n                elem_9f6850 -> min2_1e3c6d.right\n                min2_1e3c6d.min -> bool_af09a7\n            }\n        }\n        filter_1a2f1c.output_list -> find_7f4c9d.items\n        find_7f4c9d.item -> second_smallest_5b7c6d\n\n        \n    }\n\n    \n    func(doc: \"finds the minimum of two numbers\") Min2 {\n        in(x: -281, y: -193, name: \"left\") property(Number) left_9f7759\n        in(x: -272, y: 17, name: \"right\") property(Number) right_f9110a\n\n        out(x: 46, y: 158, name: \"min\") property(Number) min_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"left < right\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        left_9f7759 -> ifexpression_e38995.gen_0\n        right_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> min_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        left_9f7759 -> setter_1cedb2.new_value\n        right_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_6c9e8d root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: 2, name: \"list\") property(List) list_9e8f5a\n\n        out(x: 592, y: 77, name: \"output\") property(Number) output_eb7d1c\n\n        instance(x: 0, y: 0) min_4e6f9c root.Std_k98ojb.List.Min {}\n        instance(x: -105, y: -110) ifexpression_3a5e2e root.Std_k98ojb.Std.IfExpression {\n            expression: \"it == min\"\n        }\n        instance(x: 0, y: 0) filter_7d1c8f root.Std_k98ojb.Query.Filter {}\n        list_9e8f5a -> min_4e6f9c.items\n        min_4e6f9c.min -> ifexpression_3a5e2e.gen_0\n        list_9e8f5a -> filter_7d1c8f.list\n        func() {\n            in(x: -113, y: 34, name: \"it\") property(Number) it_6b4b4e\n\n            out(x: 515, y: 44, name: \"\") property(Bool) _a0a3ba\n\n            instance(x: 89, y: 29) equal_1c9f7d root.Std_k98ojb.Logic.Equal {}\n            it_6b4b4e -> equal_1c9f7d.left\n            ifexpression_3a5e2e.gen_0 -> equal_1c9f7d.right\n            equal_1c9f7d.result -> _a0a3ba\n        } -> filter_7d1c8f.where\n        instance(x: 0, y: 0) min_6b5f4e root.Std_k98ojb.List.Min {}\n        filter_7d1c8f.result -> min_6b5f4e.items\n        min_6b5f4e.min -> output_eb7d1c\n    }\n\n    \n\n    instance(x: -54, y: 127) second_smallest_3a2b0f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -285, y: 2, name: \"list\") property(List) list_9f8e1a\n\n        out(x: 592, y: 3, name: \"second_smallest\") property(Number) second_smallest_7c6b4d\n\n        instance(x: 0, y: 0) min_5c2b9f root.Std_k98ojb.List.Min {}\n        instance(x: -285, y: 138) filter_3a8e3f root.Std_k98ojb.Query.Filter {\n            where: \"it != min\"\n        }\n        list_9f8e1a -> min_5c2b9f.items\n        min_5c2b9f.min -> filter_3a8e3f.where.gen_0\n        list_9f8e1a -> filter_3a8e3f.list\n        instance(x: 0, y: 0) min_7d4f6f root.Std_k98ojb.List.Min {}\n        filter_3a8e3f.result -> min_7d4f6f.items\n        min_7d4f6f.min -> second_smallest_7c6b4d\n    }\n\n    \n\n    instance(x: -64, y: 11) second_smallest_b5b2a1 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1a8e4f\n\n        out(x: 593, y: 29, name: \"number\") property(Number) number_7c2d5b\n\n        instance(x: 0, y: 0) find_3a9c6f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1e7c2d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3f8a5b\n\n            instance(x: 89, y: 29) min_4e6c0f root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_7d9b1c root.Std_k98ojb.Logic.NotEqual {}\n            list_1a8e4f -> min_4e6c0f.values\n            elem_1e7c2d -> min_4e6c0f.values\n            min_4e6c0f.result -> notequal_7d9b1c.left\n            0 -> notequal_7d9b1c.right\n            notequal_7d9b1c.result -> bool_3f8a5b\n        } -> find_3a9c6f.predicate\n        list_1a8e4f -> find_3a9c6f.items\n        find_3a9c6f.item -> number_7c2d5b\n    }\n\n    \n\n    instance(x: -55, y: 129) second_smallest_0a6d1f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1a3f8e\n\n        out(x: 593, y: 29, name: \"number\") property(Number) number_7b2c5d\n\n        instance(x: 0, y: 0) find_4a9d8c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1f7e2a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9c6d3b\n\n            instance(x: 89, y: 29) min_5c8b0f root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_1e7a4f root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -24, y: 28) find_2d3b6a root.Std_k98ojb.Iteration.Find {}\n            list_1a3f8e -> find_2d3b6a.items\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(Number) current_e5c9ea\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1e7f8d\n\n                instance(x: 112, y: 80) min_3a6b4a root.Std_k98ojb.Math.Min {}\n                current_e5c9ea -> min_3a6b4a.left\n                elem_1f7e2a -> min_3a6b4a.right\n                min_3a6b4a.result -> bool_1e7f8d\n            } -> find_2d3b6a.predicate\n            find_2d3b6a.item -> min_5c8b0f.left\n            elem_1f7e2a -> min_5c8b0f.right\n            notequal_1e7a4f.result -> bool_9c6d3b\n            min_5c8b0f.result -> notequal_1e7a4f.right\n            find_2d3b6a.item -> notequal_1e7a4f.left\n        } -> find_4a9d8c.predicate\n        list_1a3f8e -> find_4a9d8c.items\n        find_4a9d8c.item -> number_7b2c5d\n    }\n\n    \n\n    instance(x: -55, y: 129) second_smallest_6c0f1c root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_RAG_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15933,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -176, y: 12, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -177, y: -124, name: \"list2\") property(List) list2_eb0d7c\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_5e6f4e\n\n        instance(x: 133, y: -131) intersection_3a1c9c root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2f9e -> intersection_3a1c9c.left\n        list2_eb0d7c -> intersection_3a1c9c.right\n        instance(x: 360, y: -95) notempty_5f6f4c root.Std_k98ojb.List.NotEmpty {}\n        intersection_3a1c9c.intersection -> notempty_5f6f4c.list\n        notempty_5f6f4c.isEmpty -> output_5e6f4e\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_7d0b8f root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -176, y: 10, name: \"list1\") property(List) list1_3e9f0a\n        in(x: -165, y: -120, name: \"list2\") property(List) list2_eb7c8d\n\n        out(x: 507, y: -54, name: \"output\") property(Bool) output_4b5a6f\n\n        instance(x: 145, y: -53, name: \"intersection\") intersection_c9e3ef root.Std_k98ojb.Sets.Intersection {}\n        list1_3e9f0a -> intersection_c9e3ef.left\n        list2_eb7c8d -> intersection_c9e3ef.right\n        instance(x: 367, y: -55) notempty_5e4a3f root.Std_k98ojb.List.NotEmpty {}\n        intersection_c9e3ef.intersection -> notempty_5e4a3f.list\n        notempty_5e4a3f.isEmpty -> output_4b5a6f\n    }\n\n    \n\n    instance(x: -131, y: 43) common_element_1d7c8f root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -173, y: 16, name: \"list1\") property(List) list1_2a0f8e\n        in(x: -172, y: -121, name: \"list2\") property(List) list2_9c6d7b\n\n        out(x: 500, y: -50, name: \"output\") property(Bool) output_4c1b3a\n\n        instance(x: 222, y: -48, name: \"intersection\") intersection_8e0f1 root.Std_k98ojb.Sets.Intersection {}\n        list1_2a0f8e -> intersection_8e0f1.left\n        list2_9c6d7b -> intersection_8e0f1.right\n        instance(x: 679, y: -49) notempty_5e3c8 root.Std_k98ojb.List.NotEmpty {}\n        intersection_8e0f1.intersection -> notempty_5e3c8.list\n        notempty_5e3c8.isEmpty -> output_4c1b3a\n    }\n\n    \n\n    instance(x: -138, y: 59) common_element_7d6d9 root.main.common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -171, y: 12, name: \"list1\") property(List) list1_3f0a6b\n        in(x: -172, y: -125, name: \"list2\") property(List) list2_9e7c8d\n\n        out(x: 540, y: -57, name: \"output\") property(Bool) output_4e1f5c\n\n        instance(x: 94, y: -103, name: \"intersection\") intersection_6a3b7c root.Std_k98ojb.Sets.Intersection {}\n        list1_3f0a6b -> intersection_6a3b7c.left\n        list2_9e7c8d -> intersection_6a3b7c.right\n        instance(x: 237, y: -57) notempty_4b5f7a root.Std_k98ojb.List.NotEmpty {}\n        intersection_6a3b7c.intersection -> notempty_4b5f7a.list\n        notempty_4b5f7a.isEmpty -> output_4e1f5c\n    }\n\n    \n\n    instance(x: -138, y: 45) common_element_9d0b2f root.main.common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -278, y: 17, name: \"list1\") property(List) list1_9a8b3f\n        in(x: -279, y: -122, name: \"list2\") property(List) list2_6c7e4d\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 146, y: -96) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_9a8b3f -> intersection_c7c7e6.left\n        list2_6c7e4d -> intersection_c7c7e6.right\n        instance(x: 360, y: -95) notempty_0f5f4c root.Std_k98ojb.List.NotEmpty {}\n        intersection_c7c7e6.intersection -> notempty_0f5f4c.list\n        notempty_0f5f4c.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_ac7dfb root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -178, y: 11, name: \"list1\") property(List) list1_8a2f6e\n        in(x: -179, y: -125, name: \"list2\") property(List) list2_e5b9d4\n\n        out(x: 557, y: -94, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2f6e -> intersection_c7c7e6.left\n        list2_e5b9d4 -> intersection_c7c7e6.right\n        instance(x: 146, y: -96) notempty_3f3ee6 root.Std_k98ojb.List.NotEmpty {}\n        intersection_c7c7e6.intersection -> notempty_3f3ee6.list\n        notempty_3f3ee6.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -176, y: 19, name: \"list1\") property(List) list1_3a2f9e\n        in(x: -162, y: -121, name: \"list2\") property(List) list2_8b7c0d\n\n        out(x: 506, y: -50, name: \"output\") property(Bool) output_5b6b3a\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_1f9e4 root.Std_k98ojb.Sets.Intersection {}\n        list1_3a2f9e -> intersection_1f9e4.left\n        list2_8b7c0d -> intersection_1f9e4.right\n        instance(x: 752, y: -45) notempty_c5c6e root.Std_k98ojb.List.NotEmpty {}\n        intersection_1f9e4.intersection -> notempty_c5c6e.list\n        notempty_c5c6e.isEmpty -> output_5b6b3a\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_aad0c2 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -177, y: 16, name: \"list1\") property(List) list1_3e9f0a\n        in(x: -165, y: -121, name: \"list2\") property(List) list2_7b4d5c\n\n        out(x: 500, y: -50, name: \"output\") property(Bool) output_8f1b6e\n\n        instance(x: 224, y: -48, name: \"intersection\") intersection_f3a0ac root.Std_k98ojb.Sets.Intersection {}\n        list1_3e9f0a -> intersection_f3a0ac.left\n        list2_7b4d5c -> intersection_f3a0ac.right\n        instance(x: 679, y: -48) notempty_8b6b9f root.Std_k98ojb.List.NotEmpty {}\n        intersection_f3a0ac.intersection -> notempty_8b6b9f.list\n        notempty_8b6b9f.isEmpty -> output_8f1b6e\n    }\n\n    \n\n    instance(x: -137, y: -63) has_common_element_c5d7c2 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -278, y: 12, name: \"list1\") property(List) list1_9e3b8a\n        in(x: -282, y: -122, name: \"list2\") property(List) list2_6c0d7f\n\n        out(x: 557, y: -101, name: \"output\") property(Bool) output_5e4c9e\n\n        instance(x: 146, y: -96) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3b8a -> intersection_c7c7e6.left\n        list2_6c0d7f -> intersection_c7c7e6.right\n        instance(x: 360, y: -95) notempty_f4b5d2 root.Std_k98ojb.List.NotEmpty {}\n        intersection_c7c7e6.intersection -> notempty_f4b5d2.list\n        notempty_f4b5d2.isEmpty -> output_5e4c9e\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_ac7dfb root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -172, y: 18, name: \"list1\") property(List) list1_94ca93\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_aa3106\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_20b99a\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_06d2e5 root.Std_k98ojb.Sets.Intersection {}\n        list1_94ca93 -> intersection_06d2e5.left\n        list2_aa3106 -> intersection_06d2e5.right\n        instance(x: 772, y: -48) notempty_f3b46d root.Std_k98ojb.List.NotEmpty {}\n        intersection_06d2e5.intersection -> notempty_f3b46d.list\n        notempty_f3b46d.isEmpty -> output_20b99a\n    }\n\n    \n\n    instance(x: -138, y: -63) common_element_aad0c2 root.main.common_element {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 3, name: \"list\") property(List) list_9a8f1e\n\n        out(x: 1227, y: 2, name: \"output\") property(Bool) output_eb0d5c\n\n        instance(x: 772, y: 76) filter_6e4f9f root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: -320, y: 35, name: \"sorted list\") sort_3a7c2d root.Std_k98ojb.List.Sort {}\n        instance(x: 146, y: -96) length_8f9e4f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) lessthanorequal_5b1d6a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1057, y: 93) ifexpression_c0e9f8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        instance(x: -275, y: -35) getat_5c6d4a root.Std_k98ojb.List.GetAt {}\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_7a8e3b root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        ifexpression_c0e9f8.else -> output_eb0d5c\n        ifexpression_c0e9f8.value -> output_eb0d5c\n        list_9a8f1e -> filter_6e4f9f.list\n        filter_6e4f9f.result -> sort_3a7c2d.list\n        sort_3a7c2d.sortedList -> length_8f9e4f.list\n        sort_3a7c2d.sortedList -> for_7a8e3b.items\n        for_7a8e3b.item -> ifexpression_c0e9f8.gen_2\n        for_7a8e3b.index -> ifexpression_c0e9f8.gen_0\n        getter_b280eb.value -> ifexpression_c0e9f8.gen_1\n        for_7a8e3b.onItem -> ifexpression_c0e9f8.execute\n        for_7a8e3b.done -> output_eb0d5c\n        for_7a8e3b.item -> setter_9d4f1c.new_value\n        sort_3a7c2d.sortedList -> getat_5c6d4a.list\n        0 -> getat_5c6d4a.index\n        getat_5c6d4a.itemAtIndex -> setter_38e107.new_value\n        length_8f9e4f.length -> lessthanorequal_5b1d6a.left\n        2 -> lessthanorequal_5b1d6a.right\n        lessthanorequal_5b1d6a.result -> ifexpression_c0e9f8.execute\n        setter_38e107.continue -> for_7a8e3b.reset\n        setter_9d4f1c.continue -> for_7a8e3b.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_f5b2e6 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 5, name: \"list\") property(List) list_0a9f8e\n\n        out(x: 1056, y: 2, name: \"output\") property(Bool) output_eb7c1d\n\n        instance(x: 752, y: 51) ifexpression_4b3e8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 168, name: \"getter_7f6a5d\") getter_7f6a5d = previous\n        setter(x: 679, y: -313, name: \"setter_b9c3e2\") setter_b9c3e2 = previous\n        instance(x: 321, y: -20) for_8b0a1d root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_b9c3e2\") setter_7f6b5e = previous\n        instance(x: -275, y: -35) getat_4b7f8a root.Std_k98ojb.List.GetAt {}\n        ifexpression_4b3e8c.else -> continue_1a0d8c\n        ifexpression_4b3e8c.value -> output_eb7c1d\n        ifexpression_4b3e8c.then -> setter_b9c3e2.execute\n        list_0a9f8e -> for_8b0a1d.items\n        for_8b0a1d.item -> ifexpression_4b3e8c.gen_2\n        for_8b0a1d.index -> ifexpression_4b3e8c.gen_0\n        getter_7f6a5d.value -> ifexpression_4b3e8c.gen_1\n        for_8b0a1d.onItem -> ifexpression_4b3e8c.execute\n        for_8b0a1d.done -> continue_1a0d8c\n        for_8b0a1d.item -> setter_b9c3e2.new_value\n        list_0a9f8e -> getat_4b7f8a.list\n        0 -> getat_4b7f8a.index\n        getat_4b7f8a.itemAtIndex -> setter_7f6b5e.new_value\n        execute_1c2d7e -> setter_7f6b5e.execute\n        setter_7f6b5e.continue -> for_8b0a1d.reset\n        setter_b9c3e2.continue -> for_8b0a1d.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_f3c4e9 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -280, y: 2, name: \"list\") property(List) list_3f1e9a\n\n        out(x: 1057, y: 5, name: \"output\") property(Bool) output_8c6d4b\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_8c6d4b\n        ifexpression_875761.value -> output_8c6d4b\n        list_3f1e9a -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list_3f1e9a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        setter_38e107.continue -> for_d26972.reset\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_d26972.done -> output_8c6d4b\n        for_d26972.item -> setter_9d4f1c.new_value\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_7a3e0c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -280, y: 3, name: \"list\") property(List) list_9a1f6e\n\n        out(x: 1015, y: -4, name: \"output\") property(Bool) output_8b7c0d\n\n        instance(x: 104, y: 13) sort_1e2f2c root.Std_k98ojb.List.Sort {}\n        instance(x: 360, y: 11) map_3a9f4c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 680, y: -6) filter_7d8a5c root.Std_k98ojb.Query.Filter {\n            where: \"it[1] == it[0]+1\"\n        }\n        instance(x: 1002, y: 4) length_9e3f9f root.Std_k98ojb.List.Length {}\n        list_9a1f6e -> sort_1e2f2c.list\n        sort_1e2f2c.sortedList -> map_3a9f4c.items\n        func() {\n            in(x: -112, y: 44, name: \"current\") property(Number) current_7b0d5e\n\n            out(x: 518, y: 33, name: \"\") property(List) _1c2b6d8\n\n            instance(x: 90, y: 29) generateRange_9a3f9f root.Std_k98ojb.List.GenerateRange {}\n            current_7b0d5e -> generateRange_9a3f9f.to\n            0 -> generateRange_9a3f9f.from\n            generateRange_9a3f9f.list -> _1c2b6d8\n        } -> map_3a9f4c.handler\n        map_3a9f4c.output_list -> filter_7d8a5c.list\n        length_9e3f9f.length -> filter_7d8a5c.result\n        1 -> length_9e3f9f.list\n        filter_7d8a5c.is_contained -> output_8b7c0d\n    }\n\n    \n\n    instance(x: -56, y: 189) is_consecutive_6e2c0f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 3, name: \"list\") property(List) list_1e0a9f\n\n        out(x: 1237, y: -2, name: \"output\") property(Bool) output_5c8b4d\n\n        instance(x: 0, y: 0) for_6a7b9f root.Std_k98ojb.Std.For {}\n        instance(x: 350, y: 1) lessthan_f2e3d8 root.Std_k98ojb.Math.LessThan {}\n        instance(x: 651, y: -4) if_0c7b5a root.Std_k98ojb.Std.If {}\n        instance(x: 1016, y: -96) and_9f8c9c root.Std_k98ojb.Logic.And {}\n        instance(x: 1291, y: -97) not_2e3d4a root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_6a7b9f.handler\n        list_1e0a9f -> for_6a7b9f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> lessthan_f2e3d8.handler\n        for_6a7b9f.item -> lessthan_f2e3d8.left\n        for_6a7b9f.index -> lessthan_f2e3d8.right\n        lessthan_f2e3d8.result -> if_0c7b5a.predicate\n        for_6a7b9f.onItem -> if_0c7b5a.execute\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> and_9f8c9c.handler\n        for_6a7b9f.item -> and_9f8c9c.left\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> and_9f8c9c.right\n        for_6a7b9f.index -> and_9f8c9c.gen_1\n        1 -> and_9f8c9c.gen_0\n        if_0c7b5a.else -> not_2e3d4a.input\n        and_9f8c9c.result -> if_0c7b5a.value\n        not_2e3d4a.result -> output_5c8b4d\n        for_6a7a.onItem -> if_0c7b5a.execute\n        for_6a7b9f.done -> output_5c8b4d\n    }\n\n    \n\n    instance(x: -82, y: 45) is_consecutive_2e3d4a root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -285, y: 1, name: \"list\") property(List) list_0e8f6a\n\n        out(x: 555, y: -2, name: \"output\") property(Bool) output_e5c7b4\n\n        instance(x: 774, y: 0) ifexpression_9e1d3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 117, name: \"getter_7a2f6c\") getter_7a2f6c = previous\n        setter(x: 679, y: -317, name: \"setter_e5b8e9\") setter_e5b8e9 = previous\n        instance(x: 321, y: -21) for_d1d0ef root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_e5b8e9\") setter_3a7f6c = previous\n        instance(x: -275, y: -35) getat_4e2d9f root.Std_k98ojb.List.GetAt {}\n        ifexpression_9e1d3c.else -> continue_a96db6\n        ifexpression_9e1d3c.value -> output_e5c7b4\n        ifexpression_9e1d3c.then -> setter_e5b8e9.execute\n        list_0e8f6a -> for_d1d0ef.items\n        for_d1d0ef.item -> ifexpression_9e1d3c.gen_2\n        for_d1d0ef.index -> ifexpression_9e1d3c.gen_0\n        getter_7a2f6c.value -> ifexpression_9e1d3c.gen_1\n        for_d1d0ef.onItem -> ifexpression_9e1d3c.execute\n        for_d1d0ef.done -> continue_a96db6\n        for_d1d0ef.item -> setter_e5b8e9.new_value\n        list_0e8f6a -> getat_4e2d9f.list\n        0 -> getat_4e2d9f.index\n        getat_4e2d9f.itemAtIndex -> setter_3a7f6c.new_value\n        execute_90aaec -> setter_3a7f6c.execute\n        setter_3a7f6c.continue -> for_d1d0ef.reset\n        setter_e5b8e9.continue -> for_d1d0ef.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_2c4b9f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -285, y: 3, name: \"list\") property(List) list_1a9d8e\n\n        out(x: 1225, y: -2, name: \"output\") property(Bool) output_6c7f0b\n\n        instance(x: 751, y: 4) ifexpression_3f1c9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 127, name: \"getter_7e8d2a\") getter_7e8d2a = previous\n        setter(x: 679, y: -313, name: \"setter_bf6c0b\") setter_bf6c0b = previous\n        instance(x: 321, y: -20) for_9e3f1c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_bf6c0b\") setter_8a5d2e = previous\n        instance(x: -275, y: -35) getat_4a9d7f root.Std_k98ojb.List.GetAt {}\n        ifexpression_3f1c9f.else -> continue_7c1c6c\n        ifexpression_3f1c9f.value -> output_6c7f0b\n        ifexpression_3f1c9f.then -> setter_bf6c0b.execute\n        list_1a9d8e -> for_9e3f1c.items\n        for_9e3f1c.item -> ifexpression_3f1c9f.gen_2\n        for_9e3f1c.index -> ifexpression_3f1c9f.gen_0\n        getter_7e8d2a.value -> ifexpression_3f1c9f.gen_1\n        for_9e3f1c.onItem -> ifexpression_3f1c9f.execute\n        for_9e3f1c.done -> continue_7c1c6c\n        for_9e3f1c.item -> setter_bf6c0b.new_value\n        list_1a9d8e -> getat_4a9d7f.list\n        0 -> getat_4a9d7f.index\n        getat_4a9d7f.itemAtIndex -> setter_8a5d2e.new_value\n        execute_3c9b9c -> setter_8a5d2e.execute\n        setter_8a5d2e.continue -> for_9e3f1c.reset\n        setter_bf6c0b.continue -> for_9e3f1c.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_7c4d9c root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -277, y: 2, name: \"list\") property(List) list_0a9f8e\n\n        out(x: 443, y: -1, name: \"output\") property(Bool) output_7c6d3b\n\n        instance(x: 188, y: 4) sort_5e2b3f root.Std_k98ojb.List.Sort {}\n        instance(x: 531, y: 0) for_8a9b1c root.Std_k98ojb.Std.For {}\n        instance(x: -39, y: 26, name: \"is_consecutive\") if_5d4e7f root.Std_k98ojb.Std.If {\n            then: \"continue\"\n            else: \"continue\"\n        }\n        list_0a9f8e -> sort_5e2b3f.list\n        sort_5e2b3f.sortedList -> for_8a9b1c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_7d0b6e\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_2f3a5e\n\n            instance(x: 112, y: 80) sub_1c8b4c root.Std_k98ojb.Math.Sub {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_7d0b6e -> sub_1c8b4c.first\n            for_8a9b1c.index -> sub_1c8b4c.second\n            sub_1c8b4c.result -> equal_a54bdc.left\n            1 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_2f3a5e\n        } -> if_5d4e7f.predicate\n        for_8a9b1c.onItem -> if_5d4e7f.execute\n        if_5d4e7f.value -> output_7c6d3b\n        for_8a9b1c.done -> if_5d4e7f.continue\n    }\n\n    \n\n    instance(x: -291, y: 177) is_consecutive_2e0b4f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 5, name: \"list\") property(List) list_3e8a6f\n\n        out(x: 1229, y: 0, name: \"output\") property(Bool) output_1c2d7b\n\n        instance(x: 772, y: -11) ifexpression_5e4b2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_5e4b2c.else -> output_1c2d7b\n        ifexpression_5e4b2c.value -> output_1c2d7b\n        list_3e8a6f -> for_d26972.items\n        for_d26972.item -> ifexpression_5e4b2c.gen_2\n        for_d26972.index -> ifexpression_5e4b2c.gen_0\n        getter_b280eb.value -> ifexpression_5e4b2c.gen_1\n        for_d26972.onItem -> ifexpression_5e4b2c.execute\n        for_d26972.done -> output_1c2d7b\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3e8a6f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_f3a7b8 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 0, name: \"list\") property(List) list_1a3d9f\n\n        out(x: 1225, y: 11, name: \"output\") property(Bool) output_eb7c6e\n\n        instance(x: 1004, y: 10) ifexpression_8e2f0c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 487, y: 127, name: \"getter_ea7d5f\") getter_ea7d5f = previous\n        setter(x: 932, y: -314, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 465, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_8e2f0c.else -> output_eb7c6e\n        ifexpression_8e2f0c.value -> output_eb7c6e\n        list_1a3d9f -> for_d26972.items\n        for_d26972.item -> ifexpression_8e2f0c.gen_2\n        for_d26972.index -> ifexpression_8e2f0c.gen_0\n        getter_ea7d5f.value -> ifexpression_8e2f0c.gen_1\n        for_d26972.onItem -> ifexpression_8e2f0c.execute\n        for_d26972.done -> output_eb7c6e\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1a3d9f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        ifexpression_8e2f0c.then -> setter_9d4f1c.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_7a5b2c root.main.is_consecutive {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 11, name: \"sublist\") property(List) sublist_3f8a9e\n        in(x: -298, y: -139, name: \"list\") property(List) list_1c7b0d\n\n        out(x: 1025, y: -97, name: \"output\") property(Bool) output_6e4b8c\n\n        instance(x: 103, y: -96) contains_9f2a3 root.Std_k98ojb.List.Contains {}\n        list_1c7b0d -> contains_9f2a3.list\n        sublist_3f8a9e -> contains_9f2a3.item\n        contains_9f2a3.is_contained -> output_6e4b8c\n    }\n\n    \n\n    instance(x: -292, y: 1) is_sublist_7d5f0 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -280, y: 40, name: \"sublist\") property(List) sublist_0a8f1e\n        in(x: -281, y: -139, name: \"list\") property(List) list_9b7c6d\n\n        out(x: 1053, y: -60, name: \"output\") property(Bool) output_e2f4ef\n\n        instance(x: 1000, y: -61) contains_5a8e1c root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -20, y: -16, name: \"current\") property(List) current_7d3a2f\n\n            out(x: 702, y: 17, name: \"\") property(Bool) _0e8c6f\n\n            instance(x: 226, y: 22) filter_1b4c9f root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -30, y: -25, name: \"current\") property(Number) current_7d3a2f\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n                instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n                instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n                2 -> modulo_c76d2b.divisor\n                0 -> notequal_7836b4.right\n                notequal_7836b4.result -> output_efbc78\n                modulo_c76d2b.result -> notequal_7836b4.left\n                _index_769593 -> modulo_c76d2b.value\n            } -> filter_1b4c9f.handler\n            current_7d3a2f -> filter_1b4c9f.items\n            func() {\n                in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n                out(x: 705, y: 49, name: \"\") property(Bool) _0e8c6f\n\n                instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n                instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n                2 -> modulo_c76d2b.divisor\n                0 -> notequal_7836b4.right\n                notequal_7836b4.result -> _0e8c6f\n                modulo_c76d2b.result -> notequal_7836b4.left\n                _index_170471 -> modulo_c76d2b.value\n            } -> filter_1b4c9f.index_handler\n            filter_1b4c9f.output_list -> _0e8c6f\n        } -> contains_5a8e1c.handler\n        list_9b7c6d -> contains_5a8e1c.list\n        sublist_0a8f1e -> contains_5a8e1c.item\n        contains_5a8e1c.is_contained -> output_e2f4ef\n    }\n\n    \n\n    instance(x: -277, y: 59) is_sublist_9d7b3c root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 5, name: \"sublist\") property(List) sublist_0a8f9e\n        in(x: -294, y: -145, name: \"list\") property(List) list_1b7d4c\n\n        out(x: 554, y: -120, name: \"output\") property(Bool) output_e5f2d3\n\n        instance(x: 146, y: -122) contains_6e8a0f root.Std_k98ojb.List.Contains {}\n        list_1b7d4c -> contains_6e8a0f.list\n        sublist_0a8f9e -> contains_6e8a0f.item\n        contains_6e8a0f.is_contained -> output_e5f2d3\n    }\n\n    \n\n    instance(x: -290, y: 15) is_sublist_1c7b4f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 30, name: \"sublist\") property(List) sublist_3f1a2b\n        in(x: -293, y: -110, name: \"list\") property(List) list_0c9d7e\n\n        out(x: 1005, y: -20, name: \"output\") property(Bool) output_e8f4f6\n\n        instance(x: 104, y: -19) contains_3b1a8f root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -231, y: 26, name: \"list\") property(List) list_7e9d0c\n            in(x: -224, y: -93, name: \"sublist\") property(List) sublist_1f8a3b\n\n            out(x: 698, y: 49, name: \"output\") property(Bool) output_5b2f6f\n\n            instance(x: 92, y: 52) length_7c0e1d root.Std_k98ojb.List.Length {}\n            instance(x: -9, y: -19) sub_f3a8ef root.Std_k98ojb.Math.Sub {}\n            instance(x: 226, y: 49) contains_6f2b5c root.Std_k98ojb.List.Contains {}\n            length_7c0ejd.length -> sub_f3a8ef.first\n            sublist_1f8a3b -> length_7c0e1d.list\n            list_7e9d0c -> length_7c0e1d.list\n            1 -> sub_f3a8ef.second\n            sub_f3a8ef.result -> contains_6f2b5c.index\n            sublist_1f8a3b -> contains_6f2b5c.list\n            list_7e9d0c -> contains_6f2b5c.list\n            contains_6f2b5c.is_contained -> output_5b2f6f\n        } -> contains_3b1a8f.handler\n        sublist_3f1a2b -> contains_3b1a8f.item\n        list_0c9d7e -> contains_3b1a8f.list\n        contains_3b1a8f.result -> output_e8f4f6\n    }\n\n    \n\n    instance(x: -287, y: 11) is_sublist_2f5b2 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -298, y: 11, name: \"sublist\") property(List) sublist_1f9d5a\n        in(x: -300, y: -186, name: \"list\") property(List) list_0b075e\n\n        out(x: 1027, y: -105, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 104, y: -187) contains_32727d root.Std_k98ojb.List.Contains {}\n        sublist_1f9d5a -> contains_32727d.list\n        list_0b075e -> contains_32727d.item\n        contains_32727d.is_contained -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: -121) is_sublist_15f9e9 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 15, name: \"sublist\") property(List) sublist_0f8a3e\n        in(x: -280, y: -169, name: \"list\") property(List) list_7b2c6d\n\n        out(x: 1065, y: -97, name: \"output\") property(Bool) output_9a1a4f\n\n        instance(x: 1058, y: -205) contains_0e7b2c root.Std_k98ojb.List.Contains {}\n        instance(x: 1036, y: 17) length_3d5f2f root.Std_k98ojb.List.Length {}\n        instance(x: 1064, y: -96) greaterthan_1a9f8e root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1057, y: -71) sub_6c0d3c root.Std_k98ojb.Iteration.Sub {}\n        instance(x: 1035, y: -150) slice_4a1b9f root.Std_k98ojb.List.Slice {}\n        sublist_0f8a3e -> length_3d5f2f.list\n        list_7b2c6d -> contains_0e7b2c.list\n        greaterthan_1a9f8e.result -> output_9a1a4f\n        length_3d5f2f.length -> sub_6c0d3c.first\n        1 -> sub_6c0d3c.second\n        sublist_0f8a3e -> slice_4a1b9f.list\n        sub_6c0d3c.result -> slice_4a1b9f.end\n        0 -> slice_4a1b9f.start\n        list_7b2c6d -> greaterthan_1a9f8e.right\n        length_3d5f2f.length -> greaterthan_1a9f8e.left\n        slice_4a1b9f.slice -> contains_0e7b2c.item\n    }\n\n    \n\n    instance(x: -279, y: 16) is_sublist_6e6b7c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 30, name: \"sublist\") property(List) sublist_1d0a8f\n        in(x: -277, y: -137, name: \"list\") property(List) list_7c2e9b\n\n        out(x: 1056, y: -107, name: \"output\") property(Bool) output_e5f3ad\n\n        instance(x: 1024, y: -106) contains_1a0d8f root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -192, y: -25, name: \"current\") property(List) current_9e6c5f\n\n            out(x: 698, y: -12, name: \"\") property(Bool) _1d0a8f\n\n            instance(x: 112, y: -19) contains_7b3b2c root.Std_k98ojb.List.Contains {}\n            sublist_1d00a8f -> contains_7b3b2c.list\n            current_9e6c5f -> contains_7b3b2c.item\n        } -> filter_c7e4f5.handler\n        instance(x: 246, y: -106) filter_c7e4f5 root.Std_k98ojb.Iteration.Filter {}\n        list_7c2e9b -> filter_c7e4f5.items\n        func() {\n            in(x: -192, y: -25, name: \"current\") property(List) current_9e6c5f\n\n            out(x: 698, y: -12, name: \"\") property(Bool) _1d0a8f\n\n            instance(x: 112, y: -19) contains_7b3b2c root.Std_k98ojb.List.Contains {}\n            sublist_1d0a8f -> contains_7b3b2c.list\n            current_9e6c5f -> contains_7b3b2c.item\n        } -> filter_c7e4f5.handler\n        filter_c7e4f5.output_list -> contains_1a0d8f.list\n        true -> contains_1a0d8f.item\n        contains_1a0d8f.is_contained -> output_e5f3ad\n    }\n\n    \n\n    instance(x: -290, y: 39) is_sublist_f7c9e6 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -277, y: 166, name: \"list1\") property(List) list_09fcba\n        in(x: -39, y: 257, name: \"list2\") property(List) ``First even number_0b1361``\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_edc2e3\n\n        instance(x: 532, y: 147) mul_7e1ce0 root.Std_k98ojb.Math.Mul {}\n        instance(x: -39, y: 26, name: \"First even number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"First odd number\") ``First even number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        list_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) is_sublist_f53d27 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -287, y: 11, name: \"sublist\") property(List) sublist_3a8d6f\n        in(x: -286, y: -177, name: \"list\") property(List) list_1b9e4c\n\n        out(x: 1067, y: -95, name: \"output\") property(Bool) output_2f0c8f\n\n        instance(x: 1025, y: -99) contains_6d3a2f root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -28, y: -21, name: \"current\") property(List) current_7e1e0c\n            in(x: -18, y: 53, name: \"_index\") property(Number) _index_6a9f2d\n\n            out(x: 710, y: 41, name: \"output\") property(Bool) output_5b3a8f\n\n            instance(x: 230, y: 48) contains_7c0e1c root.Std_k98ojb.List.Contains {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_7e1e0c -> contains_7c0e1c.list\n            sublist_3a8d6f -> contains_7c0e1c.item\n            contains_7c0e1c.is_contained -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_5b3a8f\n        } -> filter_c91965.handler\n        list_1b9e4c -> for_d26972.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -280, y: 0, name: \"sublist\") property(List) sublist_3a1f9e\n        in(x: -281, y: 145, name: \"list\") property(List) list_5c7b2d\n\n        out(x: 1118, y: 30, name: \"output\") property(Bool) output_4c0f6f\n\n        instance(x: 0, y: -10, name: \"find sublist in list\") find_f9a3e1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(List) current_7c8f5d\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d0b2a4 root.Std_k98ojb.List.Contains {}\n            sublist_3a1f9e -> contains_d0b2a4.item\n            current_7c8f5d -> contains_d0b2a4.list\n            contains_d0b2a4.is_contained -> bool_1eb6e9\n        } -> find_f9a3e1.predicate\n        list_5c7b2d -> find_f9a3e1.items\n        find_f9a3e1.item -> output_4c0f6f\n    }\n\n    \n\n    instance(x: -290, y: 15) is_sublist_ba1d9c root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 2, name: \"list\") property(List) list_3a1f9e\n        in(x: -314, y: -228, name: \"execute\") trigger() execute_5c7d8b\n\n        out(x: 1066, y: -230, name: \"continue\") trigger() continue_e2c4ed\n        out(x: 1053, y: 154, name: \"output\") property(Number) output_1e0a1f\n\n        instance(x: 0, y: 0) for_9d7b8f root.Std_k98ojb.Std.For {}\n        instance(x: 322, y: -2) ifexpression_5c3b6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 0, y: 0, name: \"getter_e9f8d7\") getter_e9f8d7 = previous\n        setter(x: 0, y: 0, name: \"setter_6e5c3a\") setter_6e5c3a = previous\n        instance(x: 0, y: 0) if_2b4b1f root.Std_k98ojb.Std.If {}\n        list_3a1f9e -> for_9d7b8f.items\n        execute_5c7d8b -> setter_6e5c3a.execute\n        -1 -> setter_6e5c3a.new_value\n        ifexpression_5c3b6c.else -> continue_e2c4ed\n        for_9d7b8f.onItem -> ifexpression_5c3b6c.execute\n        getter_e9f8d7.value -> ifexpression_5c3b6c.gen_1\n        for_9d7b8f.index -> ifexpression_5c3b6c.gen_0\n        for_9d7b8f.item -> ifexpression_5c3b6c.gen_2\n        ifexpression_5c3b6c.then -> setter_6e5c3a.execute\n        for_9d7b8f.done -> continue_e2c4ed\n        for_9d7b8f.item -> setter_6e5c3a.new_value\n        ifexpression_5c3b6c.value -> if_2b4b1f.predicate\n        if_2b4b1f.then -> output_1e0a1f\n        if_2b4b1f.else -> for_9d7b8f.next\n        setter_6e5c3a.continue -> for_9d7b8f.next\n        previous + 1 -> if_2b4b1f.then\n    }\n\n    \n\n    instance(x: -56, y: 128) find_missing_7f1d9f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 2, name: \"list\") property(List) list_1a9f8e\n        in(x: -316, y: -224, name: \"execute\") trigger() execute_e5b7c0\n\n        out(x: 1056, y: -228, name: \"continue\") trigger() continue_4d2f7e\n        out(x: 1048, y: 152, name: \"output\") property(Number) output_9a3d1e\n\n        instance(x: 0, y: 0) for_5c7b6c root.Std_k98ojb.Std.For {}\n        instance(x: 320, y: -4) ifexpression_e8f8bc root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_7c9a3d\") getter_7c9a3d = previous\n        setter(x: 679, y: -313, name: \"setter_eb8e4f\") setter_eb8e4f = previous\n        instance(x: 321, y: -20) getat_1b6b2f root.Std_k98ojb.List.GetAt {}\n        ifexpression_e8f8bc.else -> continue_4d2f7e\n        ifexpression_e8f8bc.value -> output_9a3d1e\n        ifexpression_e8f8bc.then -> setter_eb8e4f.execute\n        list_1a9f8e -> for_5c7b6c.items\n        for_5c7b6c.item -> ifexpression_e8f8bc.gen_2\n        for_5c7b6c.index -> ifexpression_e8f8bc.gen_0\n        getter_7c9a3d.value -> ifexpression_e8f8bc.gen_1\n        for_5c7b6c.onItem -> ifexpression_e8f8bc.execute\n        for_5c7b6c.done -> continue_4d2f7e\n        for_5c7b6c.item -> setter_eb8e4f.new_value\n        list_1a9f8e -> getat_1b6b2f.list\n        0 -> getat_1b6b2f.index\n        getat_1b6b2f.itemAtIndex -> setter_eb8e4f.new_value\n        execute_e5b7c0 -> setter_eb8e4f.execute\n        setter_eb8e4f.continue -> for_5c7b6c.reset\n    }\n\n    \n\n    instance(x: -14, y: 123) find_missing_1d3a2f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -279, y: 0, name: \"list\") property(List) list_2d9f8e\n        in(x: -284, y: -228, name: \"execute\") trigger() execute_1b3a5c\n\n        out(x: 1016, y: -232, name: \"continue\") trigger() continue_7a0f7e\n        out(x: 1008, y: 40, name: \"output\") property(Number) output_4d9d7f\n\n        instance(x: 0, y: 0, name: \"for_1c2b5f\") for_1c2b5f root.Std_k98ojb.Std.For {}\n        instance(x: 339, y: -17, name: \"ifexpression_3e9a6d\") ifexpression_3e9a6d root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 336, y: 80, name: \"getter_8f7c5e\") getter_8f7c5e = previous\n        setter(x: 685, y: -245, name: \"setter_3b9a2d\") setter_3b9a2d = previous\n        instance(x: -0, y: -145, name: \"setter_3b9a2d\") setter_d1c7f4 = previous\n        list_2d9f8e -> for_1c2b5f.items\n        execute_1b3a5c -> setter_d1c7f4.execute\n        0 -> setter_d1c7f4.new_value\n        ifexpression_3e9a6d.then -> setter_3b9a2d.execute\n        for_1c2b5f.item -> ifexpression_3e9a6d.gen_2\n        for_1c2b5f.index -> ifexpression_3e9a6d.gen_0\n        getter_8f7c5e.value -> ifexpression_3e9a6d.gen_1\n        for_1c2b5f.onItem -> ifexpression_3e9a6d.execute\n        ifexpression_3e9a6d.else -> continue_7a0f7e\n        ifexpression_3e9a6d.value -> output_4d9d7f\n        for_1c2b5f.done -> continue_7a0f7e\n        setter_3b9a2d.continue -> for_1c2b5f.next\n        for_1c2b5f.item -> setter_3b9a2d.new_value\n        setter_d1c7f4.continue -> for_1c2b5f.reset\n    }\n\n    \n\n    instance(x: -17, y: 160) find_missing_8e0c9f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -279, y: 2, name: \"list\") property(List) list_3a9f5e\n        in(x: -292, y: -224, name: \"execute\") trigger() execute_eb0c8d\n\n        out(x: 1021, y: -223, name: \"continue\") trigger() continue_6b7d4e\n        out(x: 1012, y: 77, name: \"output\") property(Number) output_3f9a7e\n\n        instance(x: 0, y: 0) for_8c1f9f root.Std_k98ojb.Std.For {}\n        instance(x: 340, y: -5) ifexpression_4d2f6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 704, y: 170, name: \"getter_84fbbe\") getter_84fbbe = previous\n        setter(x: -187, y: -246, name: \"setter_6a6081\") setter_6a6081 = previous\n        instance(x: 465, y: 5) if_7c284f root.Std_k98ojb.Std.If {}\n        setter(x: 955, y: -158, name: \"setter_7e2b42\") setter_7e2b42 = previous\n        list_3a9f5e -> for_8c1f9f.items\n        execute_eb0c8d -> setter_6a6081.execute\n        0 -> setter_6a6081.new_value\n        getter_84fbbe.value -> output_3f9a7e\n        ifexpression_4d2f6f.then -> for_8c1f9f.next\n        ifexpression_4d2f6f.else -> if_7c284f.execute\n        for_8c1f9f.onItem -> ifexpression_4d2f6f.execute\n        for_8c1f9f.index -> ifexpression_4d2f6f.gen_0\n        getter_84fbbe.value -> ifexpression_4d2f6f.gen_1\n        for_8c1f9f.item -> ifexpression_4d2f6f.gen_2\n        if_7c284f.else -> setter_7e2b42.execute\n        for_8c1f9f.done -> continue_6b7d4e\n        if_7c284f.then -> for_8c1f9f.next\n        for_8c1f9f.index -> setter_7e2b42.new_value\n        setter_6a6081.continue -> for_8c1f9f.reset\n        setter_7e2b42.continue -> continue_6b7d4e\n    }\n\n    \n\n    instance(x: 777, y: 760) find_missing_6e6bfd root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 2, name: \"list\") property(List) list_9f0a1e\n        in(x: -309, y: -223, name: \"execute\") trigger() execute_7b8c5d\n\n        out(x: 1056, y: -225, name: \"continue\") trigger() continue_4b3f8f\n        out(x: 1049, y: 27, name: \"output\") property(Number) output_2e1a6e\n\n        instance(x: 0, y: 0) for_7c8d7f root.Std_k98ojb.Std.For {}\n        instance(x: 322, y: -20) ifexpression_e9c4ea root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 152, y: 44, name: \"getter_8f7d3e\") getter_8f7d3e = previous\n        setter(x: 577, y: -314, name: \"setter_9c0b4a\") setter_9c0b4a = previous\n        instance(x: -271, y: -40) getat_e5b2ec root.Std_k98ojb.List.GetAt {}\n        ifexpression_e9c4ea.else -> continue_4b3f8f\n        ifexpression_e9c4ea.value -> output_2e1a6e\n        ifexpression_e9c4ea.then -> setter_9c0b4a.execute\n        list_9f0a1e -> for_7c8d7f.items\n        for_7c8d7f.item -> ifexpression_e9c4ea.gen_2\n        for_7c8d7f.index -> ifexpression_e9c4ea.gen_0\n        getter_8f7d3e.value -> ifexpression_e9c4ea.gen_1\n        for_7c8d7f.onItem -> ifexpression_e9c4ea.execute\n        for_7c8d7f.done -> continue_4b3f8f\n        for_7c8d7f.item -> setter_9c0b4a.new_value\n        list_9f0a1e -> getat_e5b2ec.list\n        0 -> getat_e5b2ec.index\n        getat_e5b2ec.itemAtIndex -> setter_9c0b4a.new_value\n        execute_7b8c5d -> setter_9c0b4a.execute\n        setter_9c0b4a.continue -> for_7c8d7f.reset\n    }\n\n    \n\n    instance(x: -35, y: 131) find_missing_2e1a6e root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 2, name: \"list\") property(List) list_1a8f5e\n        in(x: -300, y: -224, name: \"execute\") trigger() execute_e9c3b7\n\n        out(x: 1000, y: -226, name: \"continue\") trigger() continue_6d2f4e\n        out(x: 1011, y: 8, name: \"output\") property(Number) output_5a7b4f\n\n        instance(x: 310, y: 38) ifexpression_e0c9da root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -150, y: 160, name: \"getter_7e2d3f\") getter_7e2d3f = previous\n        setter(x: 650, y: -313, name: \"setter_6c9a8b\") setter_6c9a8b = previous\n        instance(x: 330, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_6c9a8b\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_e0c9da.else -> continue_6d2f4e\n        ifexpression_e0c9da.value -> output_5a7b4f\n        ifexpression_e0c9da.then -> setter_6c9a8b.execute\n        list_1a8f5e -> for_d26972.items\n        for_d26972.item -> ifexpression_e0c9da.gen_2\n        for_d26972.index -> ifexpression_e0c9da.gen_0\n        getter_7e2d3f.value -> ifexpression_e0c9da.gen_1\n        for_d26972.onItem -> ifexpression_e0c9da.execute\n        for_d26972.done -> continue_6d2f4e\n        for_d26972.item -> setter_6c9a8b.new_value\n        list_1a8f5e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_e9c3b7 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_6c9a8b.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_1d0f5f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 1, name: \"list\") property(List) list_9e8b5f\n        in(x: -296, y: -227, name: \"execute\") trigger() execute_6c2a3d\n\n        out(x: 1017, y: -223, name: \"continue\") trigger() continue_1f4c8f\n        out(x: 1009, y: 145, name: \"output\") property(Number) output_5e0b9e\n\n        instance(x: 515, y: 93) ifexpression_ea2d7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 333, y: 160, name: \"getter_9f6e8c\") getter_9f6e8c = previous\n        setter(x: 679, y: -313, name: \"setter_3b0a5d\") setter_3b0a5d = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_3b0a5d\") setter_ae7c1f = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_ea2d7c.else -> continue_1f4c8f\n        ifexpression_ea2d7c.value -> output_5e0b9e\n        ifexpression_ea2d7c.then -> setter_3b0a5d.execute\n        list_9e8b5f -> for_d26972.items\n        for_d26972.item -> ifexpression_ea2d7c.gen_2\n        for_d26972.index -> ifexpression_ea2d7c.gen_0\n        getter_9f6e8c.value -> ifexpression_ea2d7c.gen_1\n        for_d26972.onItem -> ifexpression_ea2d7c.execute\n        for_d26972.done -> continue_1f4c8f\n        for_d26972.item -> setter_3b0a5d.new_value\n        list_9e8b5f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_ae7c1f.new_value\n        execute_6c2a3d -> setter_ae7c1f.execute\n        setter_ae7c1f.continue -> for_d26972.reset\n        setter_3b0a5d.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_2a9c4e root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -280, y: 0, name: \"list\") property(List) list_2e9f8d\n        in(x: -289, y: -224, name: \"execute\") trigger() execute_1b3a5c\n\n        out(x: 1016, y: -221, name: \"continue\") trigger() continue_7f0f8b\n        out(x: 1022, y: 30, name: \"output\") property(Number) output_4e9d8f\n\n        instance(x: 15, y: -220) for_3a5c6c root.Std_k98ojb.Std.For {}\n        instance(x: 339, y: -12) ifexpression_1a2c7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 325, y: 30, name: \"getter_e9f6d5\") getter_e9f6d5 = previous\n        setter(x: 680, y: -313, name: \"setter_7b8a3c\") setter_7b8a3c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_1a2c7c.else -> continue_7f0f8b\n        ifexpression_1a2c7c.value -> output_4e9d8f\n        ifexpression_1a2c7c.then -> setter_7b8a3c.execute\n        list_2e9f8d -> for_3a5c6c.items\n        for_3a5c6c.item -> ifexpression_1a2c7c.gen_2\n        for_3a5c6c.index -> ifexpression_1a2c7c.gen_0\n        getter_e9f6d5.value -> ifexpression_1a2c7c.gen_1\n        for_3a5c6c.onItem -> ifexpression_1a2c7c.execute\n        for_3a5c6c.done -> continue_7f0f8b\n        for_3a5c6c.item -> setter_7b8a3c.new_value\n        list_2e9f8d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_1b3a5c -> setter_38e107.execute\n        setter_38e107.continue -> for_3a5c6c.reset\n        setter_7b8a3c.continue -> for_3a5c6c.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_f2f1d4 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -305, y: 2, name: \"list\") property(List) list_3e8b1f\n        in(x: -320, y: -222, name: \"execute\") trigger() execute_9c6d4a\n\n        out(x: 1017, y: -223, name: \"continue\") trigger() continue_e2f5ec\n        out(x: 1008, y: 148, name: \"output\") property(Number) output_3e1b5e\n\n        instance(x: 755, y: 95) ifexpression_9c6a0d root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 337, y: 162, name: \"getter_7e8f2f\") getter_7e8f2f = previous\n        setter(x: 682, y: -317, name: \"setter_3b5c9d\") setter_3b5c9d = previous\n        instance(x: 320, y: -22) for_e6a4ee root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -123, name: \"setter_3b5c9d\") setter_8f7e2c = previous\n        instance(x: -275, y: -39) getat_a1a6ec root.Std_k98ojb.List.GetAt {}\n        ifexpression_9c6a0d.else -> continue_e2f5ec\n        ifexpression_9c6a0d.value -> output_3e1b5e\n        ifexpression_9c6a0d.then -> setter_3b5c9d.execute\n        list_3e8b1f -> for_e6a4ee.items\n        for_e6a4ee.item -> ifexpression_9c6a0d.gen_2\n        for_e6a4ee.index -> ifexpression_9c6a0d.gen_0\n        getter_7e8f2f.value -> ifexpression_9c6a0d.gen_1\n        for_e6a4ee.onItem -> ifexpression_9c6a0d.execute\n        for_e6a4ee.done -> continue_e2f5ec\n        for_e6a4ee.item -> setter_3b5c9d.new_value\n        list_3e8b1f -> getat_a1a6ec.list\n        0 -> getat_a1a6ec.index\n        getat_a1a6ec.itemAtIndex -> setter_8f7e2c.new_value\n        execute_9c6d4a -> setter_8f7e2c.execute\n        setter_8f7e2c.continue -> for_e6a4ee.reset\n        setter_3b5c9d.continue -> for_e6a4ee.next\n    }\n\n    \n\n    instance(x: 11, y: -177) find_missing_0a1b8c root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 0, name: \"list\") property(List) list_9f8d1e\n        in(x: -309, y: -246, name: \"execute\") trigger() execute_ea7c5b\n\n        out(x: 1043, y: -250, name: \"continue\") trigger() continue_6a2c4f\n        out(x: 1038, y: 0, name: \"output\") property(Number) output_1e9d3f\n\n        instance(x: 10, y: -119) for_7b5b1f root.Std_k98ojb.Std.For {}\n        instance(x: 328, y: 19) ifexpression_8a6c0c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 305, y: 147, name: \"getter_e9d7e5\") getter_e9d7e5 = previous\n        setter(x: 649, y: -293, name: \"setter_8b3f2c\") setter_8b3f2c = previous\n        instance(x: -278, y: -20) getat_c1a6ec root.Std_k98ojb.List.GetAt {}\n        ifexpression_8a6c0c.else -> continue_6a2c4f\n        ifexpression_8a6c0c.then -> setter_8b3f2c.execute\n        list_9f8d1e -> for_7b5b1f.items\n        for_7b5b1f.item -> ifexpression_8a6c0c.gen_2\n        for_7b5b1f.index -> ifexpression_8a6c0c.gen_0\n        getter_e9d7e5.value -> ifexpression_8a6c0c.gen_1\n        for_7b5b1f.onItem -> ifexpression_8a6c0c.execute\n        for_7b5b1f.done -> continue_6a2c4f\n        for_7b5b1f.item -> setter_8b3f2c.new_value\n        list_9f8d1e -> getat_c1a6ec.list\n        0 -> getat_c1a6ec.index\n        getat_c1a6ec.itemAtIndex -> setter_8b3f2c.new_value\n        execute_ea7c5b -> setter_8b3f2c.execute\n        setter_8b3f2c.continue -> for_7b5b1f.reset\n        ifexpression_8a6c0c.value -> output_1e9d3f\n        1 + getter_e9d7e5.value -> output_1e9d3f\n        setter_8b3f2c.continue -> for_7b5b1f.next\n    }\n\n    \n\n    instance(x: -16, y: 0) find_missing_4a6d1f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5c3d9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7e8a6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9c4c7c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5c3d9f.input\n        \" \" -> replace_5c3d9f.search\n        \":\" -> replace_5c3d9f.replace\n        replace_5c3d9f.output -> replace_7e8a6f.input\n        \",\" -> replace_7e8a6f.search\n        \":\" -> replace_7e8a6f.replace\n        replace_7e8a6f.output -> replace_9c4c7c.input\n        \".\" -> replace_9c4c7c.search\n        \":\" -> replace_9c4c7c.replace\n        replace_9c4c7c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_d3e8d1 root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -198, y: 0, name: \"input\") property(String) input_9f1b3a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_8c7d5e\n\n        instance(x: 0, y: 0) replace_4d3a6a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_9f1a2a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_d8e5b7 root.Std_k98ojb.Strings.Replace {}\n        input_9f1b3a -> replace_4d3a6a.input\n        \" \" -> replace_4d3a6a.search\n        \":\" -> replace_4d3a6a.replace\n        replace_4d3a6a.output -> replace_9f1a2a.input\n        \",\" -> replace_9f1a2a.search\n        \":\" -> replace_9f1a2a.replace\n        replace_9f1a2a.output -> replace_d8e5b7.input\n        \".\" -> replace_d8e5b7.search\n        \":\" -> replace_d8e5b7.replace\n        replace_d8e5b7.output -> output_8c7d5e\n    }\n\n    \n\n    instance(x: 81, y: -52) replace_spaces_commas_dots_9a3f4e root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -199, y: 0, name: \"input\") property(String) input_9f1b2e\n\n        out(x: 0, y: 0, name: \"output\") property(String) output_7c8d6a\n\n        instance(x: 0, y: 0) replace_5e4b3f root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: -2) replace_9b1c4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 6, y: -7) replace_8a3d0f root.Std_k98ojb.Strings.Replace {}\n        input_9f1b2e -> replace_5e4b3f.input\n        \" \" -> replace_5e4b3f.search\n        \":\" -> replace_5e4b3f.replace\n        replace_5e4b3f.output -> replace_9b1c4f.input\n        \",\" -> replace_9b1c4f.search\n        \":\" -> replace_9b1c4f.replace\n        replace_9b1c4f.output -> replace_8a3d0f.input\n        \".\" -> replace_8a3d0f.search\n        \":\" -> replace_8a3d0f.replace\n        replace_8a3d0f.output -> output_7c8d6a\n    }\n\n    \n\n    instance(x: -85, y: 46, name: \"replace_spaces_commas_dots\") replace_spaces_commas_dots_9e4b2c root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5c8f7e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a4d9c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6e9a8c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5c8f7e.input\n        \" \" -> replace_5c8f7e.search\n        \":\" -> replace_5c8f7e.replace\n        replace_5c8f7e.output -> replace_3a4d9c.input\n        \",\" -> replace_3a4d9c.search\n        \":\" -> replace_3a4d9c.replace\n        replace_3a4d9c.output -> replace_6e9a8c.input\n        \".\" -> replace_6e9a8c.search\n        \":\" -> replace_6e9a8c.replace\n        replace_6e9a8c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_d5b7d1 root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3c8d7e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5f9a4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c6e7da root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3c8d7e.input\n        \" \" -> replace_3c8d7e.search\n        \":\" -> replace_3c8d7e.replace\n        replace_3c8d7e.output -> replace_5f9a4c.input\n        \",\" -> replace_5f9a4c.search\n        \":\" -> replace_5f9a4c.replace\n        replace_5f9a4c.output -> replace_c6e7da.input\n        \".\" -> replace_c6e7da.search\n        \":\" -> replace_c6e7da.replace\n        replace_c6e7da.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_9f3c8a root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -156, y: 2, name: \"input\") property(String) input_1d0f8e\n\n        out(x: 504, y: -6, name: \"output\") property(String) output_5a7b4c\n\n        instance(x: 92, y: -11) replace_9e3a2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: 23) replace_8d0f2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 95, y: 60) replace_1c6f5c root.Std_k98ojb.Strings.Replace {}\n        input_1d0f8e -> replace_9e3a2f.input\n        \" \" -> replace_9e3a2f.search\n        \":\" -> replace_9e3a2f.replace\n        replace_9e3a2f.output -> replace_8d0f2d.input\n        \",\" -> replace_8d0f2d.search\n        \":\" -> replace_8d0f2d.replace\n        replace_8d0f2d.output -> replace_1c6f5c.input\n        \".\" -> replace_1c6f5c.search\n        \":\" -> replace_1c6f5c.replace\n        replace_1c6f5c.output -> output_5a7b4c\n    }\n\n    \n\n    instance(x: -131, y: 40) replace_9e3a2f root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -227, y: 0, name: \"input\") property(String) input_8f3a9d\n\n        out(x: 540, y: -2, name: \"output\") property(String) output_1c6e7b\n\n        instance(x: 0, y: 0) replace_4d5a2e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_3f9c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_1e7c9d root.Std_k98ojb.Strings.Replace {}\n        input_8f3a9d -> replace_4d5a2e.input\n        \" \" -> replace_4d5a2e.search\n        \":\" -> replace_4d5a2e.replace\n        replace_4d5a2e.output -> replace_3f9c8f.input\n        \",\" -> replace_3f9c8f.search\n        \":\" -> replace_3f9c8f.replace\n        replace_3f9c8f.output -> replace_1e7c9d.input\n        \".\" -> replace_1e7c9d.search\n        \":\" -> replace_1e7c9d.replace\n        replace_1e7c9d.output -> output_1c6e7b\n    }\n\n    \n\n    instance(x: -179, y: 29) replace_8a2f0f root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -199, y: 0, name: \"input\") property(String) input_9f1a3d\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7e8b6c\n\n        instance(x: 94, y: 0) replace_4e5c8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_3f9a2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: -1, y: 0) replace_7f6b7c root.Std_k98ojb.Strings.Replace {}\n        input_9f1a3d -> replace_4e5c8c.input\n        \" \" -> replace_4e5c8c.search\n        \":\" -> replace_4e5c8c.replace\n        replace_4e5c8c.output -> replace_3f9a2d.input\n        \",\" -> replace_3f9a2d.search\n        \":\" -> replace_3f9a2d.replace\n        replace_3f9a2d.output -> replace_7f6b7c.input\n        \".\" -> replace_7f6b7c.search\n        \":\" -> replace_7f6b7c.replace\n        replace_7f6b7c.output -> output_7e8b6c\n    }\n\n    \n\n    instance(x: -139, y: 45) replace_b3d0a1 root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5e9c6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7d3a8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c4a1d1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5e9c6f.input\n        \" \" -> replace_5e9c6f.search\n        \":\" -> replace_5e9c6f.replace\n        replace_5e9c6f.output -> replace_7d3a8c.input\n        \",\" -> replace_7d3a8c.search\n        \":\" -> replace_7d3a8c.replace\n        replace_7d3a8c.output -> replace_c4a1d1.input\n        \".\" -> replace_c4a1d1.search\n        \":\" -> replace_c4a1d1.replace\n        replace_c4a1d1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -122, y: 0, name: \"input\") property(String) input_8e1f9a\n\n        out(x: 504, y: -2, name: \"output\") property(String) output_5b7c4d\n\n        instance(x: 94, y: 1) replace_3f6f0f root.Std_k98ojb.Strings.Replace {}\n        input_8e1f9a -> replace_3f6f0f.input\n        \" \" -> replace_3f6f0f.search\n        \":\" -> replace_3f6f0f.replace\n        replace_3f6f0f.output -> replace_2d7c5b.input\n        instance(x: 94, y: -29) replace_2d7c5b root.Std_k98ojb.Strings.Replace {}\n        replace_3f6f0f.output -> replace_2d7c5b.input\n        \",\" -> replace_2d7c5b.search\n        \":\" -> replace_2d7c5b.replace\n        instance(x: 94, y: -58) replace_4a1e9c root.Std_k98ojb.Strings.Replace {}\n        replace_2d7c5b.output -> replace_4a1e9c.input\n        \".\" -> replace_4a1e9c.search\n        \":\" -> replace_4a1e9c.replace\n        replace_4a1e9c.output -> output_5b7c4d\n    }\n\n    \n\n    instance(x: -122, y: 0) replace_spaces_commas_dots_8f3b2 root.main.replace_spaces_commas_dots {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -290, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 557, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 0) characters_7e9f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 266, y: 1) all_equal_3a5d4c root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n                in(x: -112, y: -26, name: \"_index\") property(Number) _index_769593\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n                elem_9f6850 -> equal_f89569.left\n                string_0.characters[0] -> equal_f89569.right\n                equal_f89569.result -> bool_af09a7\n            }\n        }\n        characters_7e9f8c.input -> all_equal_3a5d4c.items\n        instance(x: 531, y: -1) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 745, y: 0) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        characters_7e9f8c.characters -> length_8166b0.list\n        all_equal_3a5d4c.output_list.length -> equal_f89569.left\n        string_0.characters.length -> equal_f89569.right\n        equal_f89569.result -> result_0\n    }\n\n    \n\n    instance(x: -56, y: 52) check_same_2f7b1e root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -299, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_3a9c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) all_equal_7e6d5c root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_1\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1\n\n                instance(x: 89, y: 29) equal_3a8c5f root.Std_k98ojb.Logic.Equal {}\n                characters_3a9c8f.characters -> equal_3a8c5f.left\n                elem_1 -> equal_3a8c5f.right\n                equal_3a8c5f.result -> bool_1\n            }\n        }\n        string_1 -> characters_3a9c8f.input\n        characters_3a9c8f.characters -> all_equal_7e6d5c.items\n        func() {\n            in(x: -0, y: 0, name: \"output_list\") property(List) output_list_1\n\n            out(x: 0, y: 0, name: \"result\") property(Bool) result_2\n\n            instance(x: 0, y: 0) length_7b3d9f root.Std_k98ojb.List.Length {}\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_2\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2\n\n                instance(x: 89, y: 29) equal_3a8c5f root.Std_k98ojb.Logic.Equal {}\n                characters_3a9c8f.characters -> equal_3a8c5f.left\n                elem_2 -> equal_3a8c5f.right\n                equal_3a8c5f.result -> bool_2\n            } -> all_equal_7e6d5c.handler\n            all_equal_7e6d5c.output_list -> length_7b3d9f.list\n            1 -> length_7b3d9f.length\n            length_7b3d9f.result -> result_2\n        } -> all_equal_7e6d5c.handler\n        all_equal_7e6d5c.output_list -> result_1\n    }\n\n    \n\n    instance(x: -57, y: 0) check_same_4a8d8b root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -280, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 540, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_7a3c9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 250, y: -4) all_equal_8e6d1c root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -26, y: 36, name: \"current\") property(String) current_0\n                in(x: -18, y: 94, name: \"_index\") property(Number) _index_1\n\n                out(x: 387, y: 68, name: \"output\") property(Bool) output_2\n\n                instance(x: 104, y: 64) equal_9e7f0c root.Std_k98ojb.Logic.Equal {}\n                current_0 -> equal_9e7f0c.left\n                characters_7a3c9f.characters[_index_1] -> equal_9e7f0c.right\n                equal_9e7f0c.result -> output_2\n            }\n        }\n        string_1 -> characters_7a3c9f.input\n        characters_7a3c9f.characters -> all_equal_8e6d1c.items\n        func() {\n            out(x: 540, y: -4, name: \"output\") property(Bool) output_3\n\n            instance(x: 0, y: 0) length_2b5e7a root.Std_k98ojb.List.Length {}\n            instance(x: 226, y: -8) equal_9f6d1c root.Std_k98ojb.Logic.Equal {}\n            all_equal_8e6d1c.output_list -> length_2b5e7a.list\n            length_2b5e7a.length -> equal_9f6d1c.left\n            characters_7a3c9f.characters -> equal_9f6d1c.right\n            equal_9f6d1c.result -> output_3\n        } -> all_equal_8e6d1c.handler\n        all_equal_8e6d1c.output_list -> output_1\n    }\n\n    \n\n    instance(x: 10, y: -4) check_same_f0b7a9 root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -287, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 529, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_7e6c4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: -2) length_9a8f3f root.Std_k98ojb.List.Length {}\n        characters_7e6c4f.characters -> contains_d42dce.list\n        string_0 -> characters_7e6c4f.input\n        \"1\" -> contains_d42dce.item\n        characters_7e6c4f.characters -> length_9a8f3f.list\n        length_9a8f3f.length -> contains_d42dce.count\n        contains_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_f54b7f root.main.check_same {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -290, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 533, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_d9e7d8 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_f3f5c6 root.Std_k98ojb.List.Contains {}\n        instance(x: -10, y: 2) length_1a4c9c root.Std_k98ojb.List.Length {}\n        characters_d9e7d8.characters -> contains_f3f5c6.list\n        string_1 -> characters_d9e7d8.input\n        characters_d9e7d8.characters -> length_1a4c9c.list\n        0 -> contains_f3f5c6.index\n        length_1a4c9c.length -> contains_f3f5c6.count\n        contains_f3f5c6.result -> result_1\n    }\n\n    \n\n    instance(x: -7, y: 54) check_same_8e0b2d root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -286, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 533, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_3a9c7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -319, y: 358, name: \"list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it == first\"\n        }\n        characters_3a9c7f.input -> contains_d42dce.list\n        input_0 -> characters_3a9c7f.input\n        instance(x: -319, y: 358) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        \"first\" -> filter_f3b46d.first\n        characters_3a9c7f.characters -> filter_f3b46d.list\n        0 -> getat_ce2a48.index\n        contains_d42dce.result -> result_0\n        characters_3a9c7f.characters -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> filter_f3b46d.first\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_5e1d6c root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -290, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 557, y: -1, name: \"output\") property(Bool) output_0\n\n        instance(x: 0, y: 0) intersection_7b3f2c root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 265, y: 0) length_5e9a6d root.Std_k98ojb.List.Length {}\n        instance(x: -1, y: 0) characters_4e9c1c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 264, y: 0) firstitem_7f3b2c root.Std_k98ojb.List.FirstItem {}\n        instance(x: 529, y: -1) equal_6d05b0 root.Std_k98ojb.Logic.Equal {}\n        characters_4e9c1c.input -> intersection_7b3f2c.left\n        firstitem_7f3b2c.item -> intersection_7b3f2c.right\n        length_5e9a6d.list -> characters_4e9c1c.input\n        intersection_7b3f2c.intersection -> firstitem_7f3b2c.list\n        1 -> equal_6d05b0.left\n        length_5e9a6d.length -> equal_6d05b0.right\n        equal_6d05b0.result -> output_0\n    }\n\n    \n\n    instance(x: -55, y: 529) is_same_2c856f root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) all_equal_7b3b7b root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n                elem_9f6850 -> equal_f89569.left\n                input_ai -> equal_f89569.right\n                equal_f89569.result -> bool_af09a7\n            }\n        }\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        all_equal_7b3b7b.output_list -> length_6e87f2.list\n        input_ai -> all_equal_7b3b7b.items\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) is_same_59bc6e root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -290, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_7b9f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) allroot_std_k98ojb_sets_intersection_a2e4d6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 530, y: -1) length_7a8f9c root.Std_k98ojb.List.Length {}\n        characters_7b9f8c.characters -> allroot_std_k98ojb_sets_intersection_a2e4d6.left\n        characters_7b9f8c.characters -> allroot_std_k98ojb_sets_intersection_a2e4d6.right\n        length_7a8f9c.length -> allroot_std_k98ojb_sets_intersection_a2e4d6.intersection -> result_0\n        string_0 -> characters_7b9f8c.input\n        characters_7b9f8c.characters -> length_7a8f9c.list\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_f21f44 root.main.check_same {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -284, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 531, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_d4f8d9 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) uniquelist_7e6a3c root.Std_k98ojb.List.Unique {}\n        instance(x: 531, y: -2) length_5f1f8f root.Std_k98ojb.List.Length {}\n        characters_d4f8d9.characters -> uniquelist_7e6a3c.list\n        uniquelist_7e6a3c.uniqueList -> length_5f1f8f.list\n        1 -> length_5f1f8f.equalTo\n        string_1 -> characters_d4f8d9.input\n        length_5f1f8f.lengthEqual -> result_1\n    }\n\n    \n\n    instance(x: -57, y: 52) check_same_7e3b2c root.main.check_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -77) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 118, y: -26) count_digits_9dcc3d root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 0, y: -1) CountDigits_2c856f root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 0, y: 0) length_6d05b0 root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_6d05b0.list\n        length_6d05b0.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -100) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 0, y: -1) CountDigits_2c856f root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 0, y: -76) CountDigits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1056, y: 76) filter_9f8d4a root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n                isnumeric_1088d5.input -> elem_9f6850\n                isnumeric_1088d5.isnumeric -> bool_af09a7\n            }\n        }\n        instance(x: 1352, y: 76) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_9f8d4a.items\n        filter_9f8d4a.output_list -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1030, y: -4) filter_9c8f2a root.Std_k98ojb.Iteration.Filter {\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n                isnumeric_1088d5.input -> elem_9f6850\n                isnumeric_1088d5.isnumeric -> bool_af09a7\n            }\n        }\n        instance(x: 1273, y: -4) length_1e2c9a root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_9c8f2a.items\n        filter_9c8f2a.output_list -> length_1e2c9a.list\n        length_1e2c9a.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: -1) filter_2d6da6 root.Std_k98ojb.Query.Filter {\n            where: \"it.isNumeric\"\n        }\n        instance(x: 0, y: 0) length_cde0dc root.Std_k98ojb.List.Length {}\n\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_2d6da6.list\n        filter_2d6da6.result -> length_cde0dc.items\n        length_cde0dc.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) CountDigits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -100) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 0, y: -38) count_digits_86117a root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 0, y: 0) length_6d05b0 root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_6d05b0.list\n        length_6d05b0.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9c2e4d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c8f5e.gen_0\n        pow_4c8f5e.result -> sum_365f7b\n        4 -> pow_4c8f5e.y\n        expression_2d6da6.result -> pow_4c8f5e.x\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e4c8d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9e4c8d.y\n        data_cde0dc -> pow_9e4c8d.x\n        expression_2d6da6.result -> sum_365f7b\n        4 -> pow_9e4c8d.power\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4d0c8e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4d0c8e.y\n        data_cde0dc -> pow_4d0c8e.x\n        expression_2d6da6.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_4d0c8e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9c0e4d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c9f5e.gen_0\n        pow_4c9f5e.result -> sum_365f7b\n        4 -> pow_4c9f5e.y\n        expression_2d6da6.result -> pow_4c9f5e.x\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> pow_9c0e4d.second\n        pow_9c0e4d.result -> sum_365f7b\n        expression_2d6da6.result -> pow_9c0e4d.first\n        n_3a3116 -> pow_9c0e4d.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e8d5c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c9f7e.gen_0\n        pow_4c9f7e.result -> sum_365f7b\n        4 -> pow_4c9f7e.y\n        expression_2d6da6.result -> pow_4c9f7e.x\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.gen_1\n        data_cde0dc -> pow_f892a4.gen_0\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.gen_1\n        data_cde0dc -> pow_f892a4.gen_0\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.gen_1\n        data_cde0dc -> pow_f892a4.gen_0\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9c8d5e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n-3\"\n        }\n        instance(x: 303, y: 2) add_5e1f9c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_9c8d5e.y\n        n_3a3116 -> pow_9c8d5e.x\n        expression_2d6da6.result -> pow_9c8d5e.x\n        pow_9c8d5e.result -> add_5e1f9c.first\n        add_5e1f9c.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4c9d0e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c9d0e.y\n        data_cde0dc -> pow_4c9d0e.x\n        expression_2d6da6.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_4c9d0e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_b2508f\n\n        instance(x: -105, y: -110) mul_2d7c1e root.Std_k98ojb.Math.Mul {}\n        instance(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = surface_area\n        instance(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = surface_area\n        a_9f7759 -> mul_2d7c1e.first\n        6 -> mul_2d7c1e.second\n        getter_9cceb3.value -> surface_area_b2508f\n        mul_2d7c1e.result -> setter_1cedb2.new_value\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_cube_d6e930 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_b2508f\n\n        instance(x: -105, y: -110) mul_1c7b2e root.Std_k98ojb.Math.Mul {}\n        a_9f7759 -> mul_1c7b2e.first\n        6 -> mul_1c7b2e.second\n        instance(x: -144, y: -56) pow_5d3a8f root.Std_k98ojb.Math.Pow {}\n        a_9f7759 -> pow_5d3a8f.x\n        2 -> pow_5d3a8f.y\n        mul_1c7b2e.result -> surface_area_b2508f\n        pow_5d3a8f.result -> mul_1c7b2e.first\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_cube_d6e930 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -100, y: 0, name: \"size\") property(Number) size_1f9d8a\n\n        out(x: 0, y: 0, name: \"surface area\") property(Number) surface_area_7c6b4e\n\n        instance(x: -80, y: 40) mul_3a2c6 root.Std_k98ojb.Math.Mul {}\n        instance(x: -50, y: 20) pow_1d9f0 root.Std_k98ojb.Math.Pow {}\n        instance(x: 0, y: 0) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size^2\"\n        }\n        size_1f9d8a -> pow_1d9f0.x\n        2 -> pow_1d9f0.y\n        mul_3a2c6.first -> math_expr_node.gen_0\n        pow_1d9f0.result -> mul_3a2c6.second\n        6 -> mul_3a2c6.first\n        math_expr_node.result -> surface_area_7c6b4e\n    }\n\n    \n\n    instance(x: -85, y: -46, name: \"surface_area_cube\") expression_3e25a9 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -100, y: 0, name: \"size\") property(Number) size_3f1a8d\n\n        out(x: 50, y: 0, name: \"surface area\") property(Number) surface_area_b9b7e6\n\n        instance(x: -40, y: 0) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size * size\"\n        }\n        size_3f1a8d -> math_expr_node.gen_0\n        math_expr_node.result -> surface_area_b9b7e6\n    }\n\n    \n\n    instance(x: -100, y: 0) surface_area_cube_5c4d2f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -280, y: -212, name: \"execute\") trigger() execute_1f3d8a\n        in(x: -264, y: -95, name: \"size\") property(Number) size_9e5c6b\n\n        out(x: 1164, y: -647, name: \"continue\") trigger() continue_2a0b9f\n        out(x: 1187, y: -269, name: \"output\") property(Number) output_e1d3ec\n\n        instance(x: 80, y: -417) ifexpression_6c8e4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"size <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_7a9f2d root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_3c8e6 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) mul_5b0d8 root.Std_k98ojb.Math.Mul {}\n        instance(x: 99, y: -249) mul_1a9f7 root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_3c2e5\") setter_3c2e5 = surface_area\n        getter(x: 902, y: -314, name: \"getter_1d8f7a\") getter_1d8f7a = surface_area\n        instance(x: -202, y: -236) floor_9b0d6 root.Std_k98ojb.Math.Floor {}\n        6 -> mul_3c8e6.second\n        size_9e5c6b -> mul_3c8e6.first\n        mul_3c8e6.result -> mul_1a9f7.first\n        2 -> mul_1a9f7.second\n        mul_1a9f7.result -> mul_5b0d8.first\n        size_9e5c6b -> mul_5b0d8.second\n        mul_5b0d8.result -> surface_area_cube_7a9f2d.size_9e5c6b\n        0 -> setter_3c2e5.new_value\n        setter_3c2e5.continue -> ifexpression_6c8e4.execute\n        ifexpression_6c8e4.then -> continue_2a0b9f\n        execute_1f3d8a -> setter_3c2e5.execute\n        ifexpression_6c8e4.else -> surface_area_cube_7a9f2d.execute_1f3d8a\n        surface_area_cube_7a9f2d.continue_2a0b9f -> continue_2a0b9f\n        surface_area_cube_7a9f2d.output_e1d3ec -> getter_1d8f7a.value\n        size_9e5c6b -> floor_9b0d6.input\n        floor_9b0d6.output -> mul_1a9f7.first\n        floor_9b0d6.output -> ifexpression_6c8e4.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_3a2f5 root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9e6a1f\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_8c0d3b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_5e2c8f\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_7a1b4f\n\n        instance(x: 80, y: -417) ifexpression_e6d3b0 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_7c9a8f root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_1e3d6c root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_5a0c2f root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_c4b8cc root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_1e9d6a\") setter_1e9d6a = surface_area\n        setter(x: 875, y: -518, name: \"setter_3c8f5a\") setter_3c8f5a = surface_area\n        getter(x: 902, y: -314, name: \"getter_4b1e9d\") getter_4b1e9d = surface_area\n        instance(x: -202, y: -236) floor_7f0a6c root.Std_k98ojb.Math.Floor {}\n        side_length_8c0d3b -> mul_c4b8cc.first\n        2 -> mul_c4b8cc.second\n        mul_c4b8cc.result -> add_5a0c2f.first\n        mul_1e3d6c.result -> add_5a0c2f.second\n        6 -> mul_1e3d6c.second\n        side_length_8c0d3b -> mul_1e3d6c.first\n        0 -> setter_1e9d6a.new_value\n        setter_1e9d6a.continue -> ifexpression_e6d3b0.execute\n        ifexpression_e6d3b0.then -> continue_5e2c8f\n        execute_9e6a1f -> setter_1e9d6a.execute\n        ifexpression_e6d3b0.else -> surface_area_cube_7c9a8f.execute_9e6a1f\n        surface_area_cube_7c9a8f.continue_5e2c8f -> setter_3c8f5a.execute\n        add_5a0c2f.result -> setter_3c8f5a.new_value\n        setter_3c8f5a.continue -> continue_5e2c8f\n        getter_4b1e9d.value -> output_7a1b4f\n        side_length_8c0d3b -> floor_7f0a6c.input\n        floor_7f0a6c.output -> mul_c4b8cc.first\n        floor_7f0a6c.output -> ifexpression_e6d3b0.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_9e5b1c root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_3e1f0a\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_96023e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_adfa16 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_547f34 root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        6 -> mul_adfa16.first\n        side_length_6b655b -> mul_adfa16.second\n        mul_adfa16.result -> add_88bb8a.first\n        2 -> mul_547f34.first\n        side_length_6b655b -> mul_547f34.second\n        mul_547f34.result -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_3e1f0a -> setter_41e4ad.execute\n        0 -> setter_41e4ad.new_value\n        ifexpression_3d7de6.else -> surface_area_cube_96023e.execute_cdac2a\n        surface_area_cube_96023e.continue_d9efd7 -> setter_375321.execute\n        getter_38583a.value -> output_732a8a\n        setter_375321.continue -> continue_d9efd7\n        side_length_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -451, y: -423, name: \"execute\") trigger() execute_3a9f8e\n        in(x: -437, y: -205, name: \"size\") property(Number) size_1b7d4c\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_e5b2ba\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_8e3a1f\n\n        instance(x: 80, y: -417) ifexpression_c7d6c4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"size <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_e5f8e9 root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_3a1d6c root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_7a2c0f root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_f9e5ec root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_1d8f3c\") setter_1d8f3c = sum\n        setter(x: 875, y: -518, name: \"setter_2a9e7f\") setter_2a9e7f = sum\n        getter(x: 902, y: -314, name: \"getter_4b6f5d\") getter_4b6f5d = sum\n        instance(x: -202, y: -236) floor_b0c8ed root.Std_k98ojb.Math.Floor {}\n        10 -> mul_f9e5ec.second\n        mul_f9e5ec.result -> add_7a2c0f.first\n        size_1b7d4c -> mul_f9e5ec.first\n        6 -> mul_3a1d6c.second\n        mul_3a1d6c.result -> surface_area_cube_e5f8e9.size_1b7d4c\n        0 -> setter_1d8f3c.new_value\n        setter_1d8f3c.continue -> ifexpression_c7d6c4.execute\n        ifexpression_c7d6c4.then -> continue_e5b2ba\n        execute_3a9f8e -> setter_1d8f3c.execute\n        ifexpression_c7d6c4.else -> surface_area_cube_e5f8e9.execute_3a9f8e\n        surface_area_cube_e5f8e9.continue_e5b2ba -> setter_2a9e7f.execute\n        surface_area_cube_e5f8e9.output_8e3a1f -> add_7a2c0f.second\n        add_7a2c0f.result -> setter_2a9e7f.new_value\n        setter_2a9e7f.continue -> continue_e5b2ba\n        getter_4b6f5d.value -> output_8e3a1f\n        size_1b7d4c -> floor_b0c8ed.input\n        floor_b0c8ed.output -> mul_3a1d6c.first\n        floor_b0c8ed.output -> ifexpression_c7d6c4.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_9f2e5b root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -102, y: 15, name: \"size\") property(Number) size_3a3116\n\n        out(x: 571, y: 7, name: \"surface area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        expression_instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        div_instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        size_3a3116 -> mul_f892a4.first\n        size_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_b2508f\n\n        instance(x: -105, y: -110) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: -144, y: 112) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"6*a*a\"\n        }\n        a_9f7759 -> mul_f892a4.first\n        a_9f7759 -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_b2508f\n        a_9f7759 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> surface_area_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_cube_d6e930 root.main.surface_area_cube {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 157, name: \"list\") property(List) list_9a3f8e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_9a3f8e -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_de624f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_9a3f8e -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 160, name: \"list\") property(List) list_0d4b9e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_5f8c1a\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_0d4b9e -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_de624f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_0d4b9e -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_5f8c1a\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 166, name: \"list\") property(List) list_0f9b5e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_e7a8c4\n\n        instance(x: 532, y: 147) sub_2d1a3c root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_6f9e5c root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0d7a1f`` root.Std_k98ojb.Iteration.Find {}\n        list_0f9b5e -> find_6f9e5c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_a8a3d7\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_2f0b4c root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_2f0b4c.left\n            find_6f9e5c.item -> greaterthan_2f0b4c.right\n            greaterthan_2f0b4c.result -> bool_1eb6e9\n        } -> find_6f9e5c.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_7f8a4c root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_7f8a4c.left\n            ``Max value_0d7a1f``.item -> lessthan_7f8a4c.right\n            lessthan_7f8a4c.result -> bool_1eb6e9\n        } -> ``Max value_0d7a1f``.predicate\n        list_0f9b5e -> ``Max value_0d7a1f``.items\n        find_6f9e5c.item -> sub_2d1a3c.first\n        ``Max value_0d7a1f``.item -> sub_2d1a3c.second\n        sub_2d1a3c.result -> output_e7a8c4\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_5b6e9f root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 158, name: \"list\") property(List) list_9a1f5e\n\n        out(x: 542, y: 147, name: \"output\") property(Number) output_eb2c8d\n\n        instance(x: 0, y: 0) sub_7c6c8e root.Std_k98ojb.Math.Sub {}\n        instance(x: -279, y: -116) max_9f1a5f root.Std_k98ojb.List.Max {}\n        instance(x: -280, y: -347) min_4d3c2f root.Std_k98ojb.List.Min {}\n        list_9a1f5e -> max_9f1a5f.items\n        list_9a1f5e -> min_4d3c2f.items\n        sub_7c6c8e.first -> output_eb2c8d\n        max_9f1a5f.max -> sub_7c6c8e.first\n        min_4d3c2f.min -> sub_7c6c8e.second\n    }\n\n    \n\n    instance(x: 48, y: -63) diff_max_min_0b9f9f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 20, name: \"list\") property(List) list_1a3b5f\n\n        out(x: 500, y: 21, name: \"output\") property(Number) output_7c2e8d\n\n        instance(x: 0, y: 0) max_9a6f8f root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 0) min_3a5f4c root.Std_k98ojb.List.Min {}\n        list_1a3b5f -> max_9a6f8f.items\n        list_1a3b5f -> min_3a5f4c.items\n        instance(x: 300, y: 0) sub_2e7d6c root.Std_k98ojb.Math.Sub {}\n        max_9a6f8f.max -> sub_2e7d6c.first\n        min_3a5f4c.min -> sub_2e7d6c.second\n        sub_2e7d6c.result -> output_7c2e8d\n    }\n\n    \n\n    instance(x: -67, y: 11) diff_max_min_9b0d8f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_de624f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_09fcba -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_de624f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_09fcba -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_de624f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_09fcba -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 167, name: \"list\") property(List) list_9e1b6f\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_ea7d5c\n\n        instance(x: 532, y: 147) sub_3e8f4e root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_1f0f2f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_7e8d5c`` root.Std_k98ojb.Iteration.Find {}\n        list_9e1b6f -> find_1f0f2f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_3a4d8f\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_eb9c1e\n\n            instance(x: 112, y: 80) greaterthan_2a7b0f root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_2a7b0f.left\n            find_1f0f2f.item -> greaterthan_2a7b0f.right\n            greaterthan_2a7b0f.result -> bool_eb9c1e\n        } -> find_1f0f2f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_eb9c1e\n\n            instance(x: 112, y: 80) lessthan_2a7b0f root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_2a7b0f.left\n            ``Max value_7e8d5c``.item -> lessthan_2a7b0f.right\n            lessthan_2a7b0f.result -> bool_eb9c1e\n        } -> ``Max value_7e8d5c``.predicate\n        list_9e1b6f -> ``Max value_7e8d5c``.items\n        find_1f0f2f.item -> sub_3e8f4e.first\n        ``Max value_7e8d5c``.item -> sub_3e8f4e.second\n        sub_3e8f4e.result -> output_ea7d5c\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 0, name: \"list\") property(List) list_1e6b5f\n\n        out(x: 800, y: 27, name: \"output\") property(Number) output_e9a7d8\n\n        instance(x: 531, y: 26) sub_3c2b4f root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 157, name: \"Max value\") find_1e6f0f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -40, y: 267, name: \"Min value\") ``Max value_3a9d8c`` root.Std_k98ojb.Iteration.Find {}\n        list_1e6b5f -> find_1e6f0f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_a7a2aa\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_3b8d5e\n\n            instance(x: 112, y: 80) greaterthan_4c9f1c root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_4c9f1c.left\n            find_1e6f0f.item -> greaterthan_4c9f1c.right\n            greaterthan_4c9f1c.result -> bool_3b8d5e\n        } -> find_1e6f0f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_a7a2aa\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_3b8d5e\n\n            instance(x: 112, y: 80) lessthan_4c9f1c root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_4c9f1c.left\n            ``Max value_3a9d8c``.item -> lessthan_4c9f1c.right\n            lessthan_4c9f1c.result -> bool_3b8d5e\n        } -> ``Max value_3a9d8c``.predicate\n        list_1e6b5f -> ``Max value_3a9d8c``.items\n        find_1e6f0f.item -> sub_3c2b4f.first\n        ``Max value_3a9d8c``.item -> sub_3c2b4f.second\n        sub_3c2b4f.result -> output_e9a7d8\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 6, name: \"input\") property(Number) input_0a3f9e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_1b7c4d\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_e5c8ec\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_9a2e3f\n\n        instance(x: -104, y: -110) ifexpression_1b7d0c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_0a3f9e -> ifexpression_1b7d0c.gen_0\n        ifexpression_1b7d0c.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        false -> setter_1cedb2.new_value\n        getter_9cceb3.value -> output_e5c8ec\n        execute_1b7c4d -> ifexpression_1b7d0c.execute\n        ifexpression_1b7d0c.else -> setter_1cedb2.execute\n        false -> setter_1cedb2.new_value\n        true -> setter_1cedb2.new_value\n        setter_1cedb2.continue -> continue_9a2e3f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_7c8d5f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 3, name: \"input\") property(Number) input_9f6a8e\n        in(x: -451, y: -115, name: \"execute\") trigger() execute_e1b7c0\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_f4d5ef\n        out(x: 1222, y: 10, name: \"output\") property(Bool) output_9f6a8e\n\n        instance(x: -103, y: -110) ifexpression_7c3b1f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -142, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output\n        input_9f6a8e -> ifexpression_7c3b1f.gen_0\n        getter_9cceb3.value -> output_9f6a8e\n        ifexpression_7c3b1f.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_7c3b1f.else -> setter_37db7f.execute\n        false -> setter_37db7f.new_value\n        execute_e1b7c0 -> ifexpression_7c3b1f.execute\n        setter_1cedb2.continue -> continue_f4d5ef\n        setter_37db7f.continue -> continue_f4d5ef\n    }\n\n    \n\n    instance(x: -175, y: -63) is_even_d6e930 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 0, name: \"input\") property(Number) input_3a9f8e\n        in(x: -451, y: -112, name: \"execute\") trigger() execute_1b2d5c\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 0, y: 0) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        input_3a9f8e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> ifexpression_e38995.gen_0\n        execute_1b2d5c -> ifexpression_e38995.execute\n        ifexpression_e38995.then -> continue_685c8f\n        ifexpression_e38995.value -> output_b1d7f8\n    }\n\n    \n\n    instance(x: -55, y: 529) is_even_2c856f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 5, name: \"input\") property(Number) input_0a9f6e\n        in(x: -456, y: -111, name: \"execute\") trigger() execute_eb2c8d\n\n        out(x: 1217, y: -112, name: \"continue\") trigger() continue_f3f5ea\n        out(x: 1209, y: 62, name: \"output\") property(Bool) output_4e1a0f\n\n        instance(x: -94, y: 60, name: \"is even\") ifexpression_eb7d6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        execute_eb2c8d -> ifexpression_eb7d6c.execute\n        ifexpression_eb7d6c.then -> continue_f3f5ea\n        ifexpression_eb7d6c.else -> continue_f3f5ea\n        input_0a9f6e -> ifexpression_eb7d6c.gen_0\n        2 -> ifexpression_eb7d6c.gen_1\n        ifexpression_eb7d6c.value -> output_4e1a0f\n    }\n\n    \n\n    instance(x: -86, y: 223) is_even_9e8f5f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 3, name: \"input\") property(Number) input_1f9e0d\n        in(x: -453, y: -115, name: \"execute\") trigger() execute_7b2c6a\n\n        out(x: 1218, y: -114, name: \"continue\") trigger() continue_4b5f9f\n        out(x: 1220, y: 3, name: \"output\") property(Bool) output_eb1d1e\n\n        instance(x: -104, y: -115) ifexpression_c8a7c6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1f9e0d -> ifexpression_c8a7c6.gen_0\n        execute_7b2c6a -> ifexpression_c8a7c6.execute\n        ifexpression_c8a7c6.value -> output_eb1d1e\n        ifexpression_c8a7c6.then -> continue_4b5f9f\n        ifexpression_c8a7c6.else -> continue_4b5f9f\n    }\n\n    \n\n    instance(x: -174, y: 14) is_even_f0e3d2 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 2, name: \"input\") property(Number) input_9e6f1d\n        in(x: -451, y: -114, name: \"execute\") trigger() execute_eb3c0a\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_5c7c2f\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_9d4e8e\n\n        instance(x: -104, y: -110) ifexpression_eb3a0f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_9e6f1d -> ifexpression_eb3a0f.gen_0\n        execute_eb3c0a -> ifexpression_eb3a0f.execute\n        getter_9cceb3.value -> output_9d4e8e\n        ifexpression_eb3a0f.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_eb3a0f.else -> continue_5c7c2f\n        false -> setter_1cedb2.new_value\n        setter_1cedb2.continue -> continue_5c7c2f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_9e4d0a root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 11, name: \"input\") property(Number) input_1a9e8f\n        in(x: -450, y: -115, name: \"execute\") trigger() execute_2c3b5d\n\n        out(x: 46, y: 159, name: \"output\") property(Bool) output_7e4b0f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_1a9b8f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_1a9e8f -> ifexpression_e38995.gen_0\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> continue_1a9b8f\n        getter_9cceb3.value -> output_7e4b0f\n        execute_2c3b5d -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_1a9b8f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_1a9b8f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 0, name: \"input\") property(Number) input_3a9f8e\n        in(x: -454, y: -114, name: \"execute\") trigger() execute_1c2d5b\n\n        out(x: 1227, y: 4, name: \"continue\") trigger() continue_6f0f0b\n        out(x: 1218, y: 146, name: \"output\") property(Bool) output_9a3e2f\n\n        instance(x: -82, y: 148) ifexpression_1c5d4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = output\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = output\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = output\n        ifexpression_1c5d4c.else -> continue_6f0f0b\n        ifexpression_1c5d4c.value -> output_9a3e2f\n        ifexpression_1c5d4c.then -> setter_9d4f1c.execute\n        execute_1c2d5b -> for_d26972.reset\n        input_3a9f8e -> ifexpression_1c5d4c.gen_0\n        getter_b280eb.value -> ifexpression_1c5d4c.gen_1\n        for_d26972.onItem -> ifexpression_1c5d4c.execute\n        for_d26972.done -> continue_6f0f0b\n        setter_9d4f1c.continue -> for_d26972.next\n        1 -> for_d26972.items\n        true -> for_d26972.index\n        setter_38e107.new_value -> setter_9d4f1c.new_value\n        execute_1c2d5b -> setter_38e107.execute\n    }\n\n    \n\n    instance(x: -291, y: 11) is_even_3a8a7f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 3, name: \"input\") property(Number) input_0e6a5f\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_1c7d4b\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_8a9c2f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_6e3a0b\n\n        instance(x: -105, y: -110) ifexpression_1f5d4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_0e6a5f -> ifexpression_1f5d4c.gen_0\n        execute_1c7d4b -> ifexpression_1f5d4c.execute\n        ifexpression_1f5d4c.value -> output_8a9c2f\n        ifexpression_1f5d4c.then -> continue_6e3a0b\n        ifexpression_1f5d4c.else -> continue_6e3a0b\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f9f8f2 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 0, name: \"input\") property(Number) input_1a3e8f\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_e9c7d5\n\n        out(x: 1226, y: 5, name: \"continue\") trigger() continue_4b2f0f\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_3a1e5f\n\n        instance(x: -106, y: -115) ifexpression_7d6c9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_b280eb\") getter_b280eb = output\n        setter(x: 116, y: -268, name: \"setter_9d4f1c\") setter_9d4f1c = output\n        input_1a3e8f -> ifexpression_7d6c9f.gen_0\n        execute_e9c7d5 -> ifexpression_7d6c9f.execute\n        getter_b280eb.value -> output_3a1e5f\n        ifexpression_7d6c9f.then -> setter_9d4f1c.execute\n        true -> setter_9d4f1c.new_value\n        false -> ifexpression_7d6c9f.else\n        ifexpression_7d6c9f.else -> continue_4b2f0f\n        ifexpression_7d6c9f.value -> output_3a1e5f\n        setter_9d4f1c.continue -> continue_4b2f0f\n    }\n\n    \n\n    instance(x: -172, y: 59) is_even_f8b3f8 root.main.is_even {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_9d5f8c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -1) map_2e1444 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 515, y: 44) orelse_f7c284f root.Std_k98ojb.Std.OrElse {}\n        characters_7b3b7b.characters -> map_2e1444.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"output\") property(Any) output_3bc2ae\n\n            instance(x: 89, y: 29) find_1088d5 root.Std_k98ojb.Iteration.Find {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 515, y: 44) orelse_f7c284f root.Std_k98ojb.Std.OrElse {}\n            elem_9f6850 -> find_1088d5.predicate\n            func() {\n                in(x: -113, y: 34, name: \"current\") property(String) current_afd5b1\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                elem_9f6850 -> contains_d42dce.input\n                current_afd5b1 -> contains_d42dce.contains\n                contains_d42dce.result -> bool_1eb6e9\n            } -> find_1088d5.predicate\n            map_2e1444.output -> find_1088d5.items\n            find_1088d5.item -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> orelse_f7c284f.first\n            null -> orelse_f7c284f.second\n            orelse_f7c284f.value -> output_3bc2ae\n        } -> map_2e1444.handler\n        find_9d5f8c.predicate {\n            in(x: -113, y: 34, name: \"current\") property(String) current_afd5b1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            map_2e1444.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        }\n        find_9d5f8c.items -> characters_7b3b7b.characters\n        input_0 -> characters_7b3b7b.input\n        find_9d5f8c.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_7e9b4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -1) filter_5f8a3c root.Std_k98ojb.Query.Filter {\n            where: \"it in list\"\n        }\n        instance(x: 265, y: -50) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_7e9b4c.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) list_3c713b root.Std_k98ojb.List.GetAt {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            list_3c713b.itemAtIndex -> contains_d42dce.contains\n            find_6d05b0.index -> list_3c713b.index\n            characters_7e9b4c.characters -> list_3c713b.list\n            contains_d42dce.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        characters_7e9b4c.characters -> filter_5f8a3c.list\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) list_3c713b root.Std_k98ojb.List.GetAt {}\n            current_afd5b1 -> contains_d42dce.input\n            list_3c713b.itemAtIndex -> contains_d42dce.contains\n            find_6d05b0.index -> list_3c713b.index\n            characters_7e9b4c.characters -> list_3c713b.list\n            contains_d42dce.result -> bool_1eb6e9\n        } -> filter_5f8a3c.where\n        find_6d05b0.item -> result_0\n        input_0 -> characters_7e9b4c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5b8c4d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7e3f9a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) ifexpression_a1b6f5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it in list\"\n        }\n        characters_5b8c4d.characters -> find_7e3f9a.items\n        func() {\n            in(x: 0, y: 0, name: \"current\") property(String) current_1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 89, y: 29) contains_7b3f6d root.Std_k98ojb.Strings.Contains {}\n            list -> contains_7b3f6d.input\n            current_1 -> contains_7b3f6d.contains\n            contains_7b3f6d.result -> bool_2\n        } -> find_7e3f9a.predicate\n        func() {\n            in(x: 0, y: 0, name: \"current\") property(String) current_1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 89, y: 29) contains_7b3f6d root.Std_k98ojb.Strings.Contains {}\n            list -> contains_7b3f6d.input\n            current_1 -> contains_7b3f6d.contains\n            contains_7b3f6d.result -> bool_2\n        } -> ifexpression_a1b6f5.predicate\n        input_0 -> characters_5b8c4d.input\n        find_7e3f9a.item -> result_0\n        list -> ifexpression_a1b6f5.gen_0\n        ifexpression_a1b6f5.then -> add_2c8e9a.execute\n        current -> add_2c8e9a.new_value\n        find_7e3f9a.onItem -> ifexpression_a1b6f5.execute\n        characters_5b8c4d.characters -> list\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_1\n\n        instance(x: 0, y: 1) characters_5a3c9d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4e8f7f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -2) filter_6e7f1d root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: 265, y: -3) map_4c9a8f root.Std_k98ojb.Iteration.Map {}\n        characters_5a3c9d.characters -> find_4e8f7f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 112, y: 80) contains_7f8b6d root.Std_k98ojb.Strings.Contains {}\n            map_4c9a8f.output_list -> filter_6e7f1d.list\n            current_1 -> contains_7f8b6d.input\n            characters_5a3c9d.characters -> contains_7f8b6d.contains\n            contains_7f8b6d.result -> bool_2\n        } -> find_4e8f7f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"output\") property(Any) output_2\n\n            instance(x: 112, y: 80) indexof_7f8b6d root.Std_k98ojb.Strings.IndexOf {}\n            characters_5a3c9d.characters -> indexof_7f8b6d.input\n            current_1 -> indexof_7f8b6d.contains\n            indexof_7f8b6d.index -> output_2\n        } -> map_4c9a8f.handler\n        filter_6e7f1d.result -> map_4c9a8f.items\n        find_4e8f7f.item -> result_1\n        input_1 -> characters_5a3c9d.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_2b0d6f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -106, y: 0, name: \"first repeated char\") find_1d5e9f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 772, y: 76) map_3a2c7b root.Std_k98ojb.Iteration.Map {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                characters_7b3b7b.characters -> contains_d42dce.input\n                elem_9f6850 -> contains_d42dce.contains\n                contains_d42dce.result -> notequal_807ffd.left\n                1 -> notequal_807ffd.right\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        instance(x: -106, y: 0) filter_3e5f9c root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Bool) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) not_3b8d6c root.Std_k98ojb.Logic.Not {}\n                elem_9f6850 -> not_3b8d6c.input\n                not_3b8d6c.result -> bool_af09a7\n            }\n        }\n        instance(x: -106, y: 0) map_1e2f5f root.Std_k98ojb.Iteration.Map {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"string\") property(String) string_ae09a7\n\n                instance(x: 89, y: 29) substring_1088d5 root.Std_k98ojb.Strings.Substring {}\n                characters_7b3b7b.characters -> substring_1088d5.input\n                map_3a2c7b.output_list -> substring_1088d5.start\n                elem_9f6850 -> substring_1088d5.end\n                substring_1088d5.substring -> string_ae09a7\n            }\n        }\n        instance(x: -106, y: 0) find_1c2b4f root.Std_k98ojb.Iteration.Find {}\n        input_ai -> characters_7b3b7b.input\n        map_3a2c7b.items -> filter_3e5f9c.items\n        filter_3e5f9c.output_list -> find_1d5e9f.items\n        find_1d5e9f.item -> output_ai\n        characters_7b3b7b.characters -> map_3a2c7b.items\n        filter_3e5f9c.items -> map_1e2f5f.items\n        map_1e2f5f.output_list -> find_1c2b4f.items\n        find_1c2b4f.item -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) first_repeated_char_node root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3e9b7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4a6d5f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) ifexpression_a8a1c3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it in seen\"\n        }\n        characters_3e9b7c.characters -> find_4a6d5f.items\n        func() {\n            in(x: 0, y: 0, name: \"elem\") property(String) elem_1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 89, y: 29) contains_7f9b3c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_5a8e6d root.Std_k98ojb.Logic.NotEqual {}\n            elem_1 -> contains_7f9b3c.input\n            seen -> contains_7f9b3c.contains\n            contains_7f9b3c.result -> notequal_5a8e6d.left\n            true -> notequal_5a8e6d.right\n            notequal_5a8e6d.result -> bool_2\n        } -> find_4a6d5f.predicate\n        func() {\n            in(x: 0, y: 0, name: \"elem\") property(String) elem_1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 89, y: 29) contains_7f9b3c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_5a8e6d root.Std_k98ojb.Logic.NotEqual {}\n            elem_1 -> contains_7f9b3c.input\n            seen -> contains_7f9b3c.contains\n            contains_7f9b3c.result -> notequal_5a8e6d.left\n            true -> notequal_5a8e6d.right\n            notequal_5a8e6d.result -> bool_2\n        } -> ifexpression_a8a1c3.predicate\n        input_0 -> characters_3e9b7c.input\n        find_4a6d5f.item -> result_0\n        ifexpression_a8a1c3.then -> seen.add\n        ifexpression_a8a1c3.gen_0 -> seen\n        find_4a6d5f.onItem -> ifexpression_a8a1c3.execute\n        data_instance(x: 0, y: -2) seen  = []\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_9e7b4f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_807ffd.left\n            false -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: 0, y: -1) for_3c5f9e root.Std_k98ojb.Std.For {}\n        input_0 -> for_3c5f9e.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n            instance(x: 310, y: 35) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            elem_9f6850 -> characters_2e1444.input\n            for_3c5f9e.item -> contains_d42dce.contains\n            characters_2e1444.characters -> contains_d42dce.input\n            contains_d42dce.result -> bool_af09a7\n        } -> for_3c5f9e.onItem\n        find_6d05b0.items -> for_3c5f9e.trigger\n        find_6d05b0.item -> output_3bc2ae\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_1\n\n        instance(x: 0, y: 1) characters_5a3c4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -2) filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: 265, y: -2) find_7e9f5c root.Std_k98ojb.Iteration.Find {}\n        characters_5a3c4f.characters -> filter_f3b46d.list\n        input_1 -> characters_5a3c4f.input\n        filter_f3b46d.result -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            filter_f3b46d.result -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_d42dce.input\n            filter_f3b46d.result -> contains_d42dce.contains\n            contains_d42dce.result -> equal_a54bdc.left\n            1 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e9f5c.predicate\n        filter_f3b46d.result -> find_7e9f5c.items\n        find_6d05b0.item -> result_1\n        find_7e9f5c.item -> result_1\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -106, y: 80) find_0f8e9c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 773, y: 176) map_1d4a2c root.Std_k98ojb.Iteration.Map {\n            handler: \"Std.If(it in seen, Std.OrElse(seen.add(it), it))\"\n        }\n        instance(x: -106, y: 184) set_ae7f0c root.Std_k98ojb.List.Set {}\n        characters_7b3b7b.characters -> map_1d4a2c.items\n        list_empty -> set_ae7f0c.list\n        map_1d4a2c.output_list -> find_0f8e9c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Any) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.List.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.item\n            set_ae7f0c.list -> contains_45e806.list\n            contains_45e806.result -> notequal_a54bdc.left\n            true -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_0f8e9c.predicate\n        input_ai -> characters_7b3b7b.input\n        find_0f8e9c.item -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) first_repeated_char_node root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5e3c9d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7a4f6c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 465, y: -75) contains_8a1b2c root.Std_k98ojb.List.Contains {}\n        characters_5e3c9d.characters -> find_7a4f6c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_5e3c9d.characters -> slice_3f3ee6.list\n            current_afd5b1 -> slice_3f3ee6.start\n            -1 -> slice_3f3ee6.end\n            slice_3f3ee6.slice -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_7a4f6c.predicate\n        find_7a4f6c.item -> result_0\n        input_0 -> characters_5e3c9d.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -280, y: 17, name: \"list\") property(List) list_8f3a9e\n\n        out(x: 0, y: 0, name: \"second_smallest\") property(Number) second_smallest_7c2b5d\n\n        instance(x: -101, y: -103) min_c3e343 root.Std_k98ojb.List.Min {}\n        instance(x: -10, y: -104) filter_6f8a1c root.Std_k98ojb.Query.Filter {\n            where: \"it > min\"\n        }\n        instance(x: 110, y: -103) min_9e7d3f root.Std_k98ojb.List.Min {}\n        list_8f3a9e -> min_c3e343.items\n        min_c3e343.min -> filter_6f8a1c.where.gen_0\n        list_8f3a9e -> filter_6f8a1c.list\n        filter_6f8a1c.result -> min_9e7d3f.items\n        min_9e7d3f.min -> second_smallest_7c2b5d\n    }\n\n    \n\n    instance(x: -67, y: 127) second_smallest_4e0b3f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -280, y: 3, name: \"list\") property(List) list_1a9f8e\n\n        out(x: 460, y: 4, name: \"second_smallest\") property(Number) second_smallest_5b7c6d\n\n        instance(x: -10, y: -20, name: \"first pass\") filter_2e0e3f root.Std_k98ojb.Query.Filter {\n            where: \"it != min(list)\"\n        }\n        instance(x: 0, y: 0) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_1a9f8e -> min_c3e343.items\n        min_c3e343.min -> filter_2e0e3f.where.gen_0\n        list_1a9f8e -> filter_2e0e3f.list\n        instance(x: 250, y: -20) min_d6b5d4 root.Std_k98ojb.List.Min {}\n        filter_2e0e3f.result -> min_d6b5d4.items\n        min_d6b5d4.min -> second_smallest_5b7c6d\n    }\n\n    \n\n    instance(x: -40, y: 19) second_smallest_9a1d8e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 0, name: \"list\") property(List) list_8e9f1a\n\n        out(x: 594, y: 21, name: \"second_smallest\") property(Number) second_smallest_7c2d6b\n\n        instance(x: -104, y: -110) find_4e3c1f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min2_3b1c6e root.Std_k98ojb.Math.Min2 {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            find_4e3c1f.item -> min2_3b1c6e.left\n            elem_9f6850 -> min2_3b1c6e.right\n            min2_3b1c6e.min -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_4e3c1f.predicate\n        list_8e9f1a -> find_4e3c1f.items\n        instance(x: -104, y: 112) find_2b0d5f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min2_3b1c6e root.Std_k98ojb.Math.Min2 {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            find_4e3c1f.item -> min2_3b1c6e.left\n            elem_9f6850 -> min2_3b1c6e.right\n            min2_3b1c6e.min -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_2b0d5f.predicate\n        list_8e9f1a -> find_2b0d5f.items\n        find_2b0d5f.item -> second_smallest_7c2d6b\n    }\n\n    \n\n    instance(x: -55, y: 127) second_smallest_4f3d2e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: 2, name: \"list\") property(List) list_8f1e0a\n\n        out(x: 591, y: 3, name: \"second_smallest\") property(Number) second_smallest_9c6b7d\n\n        instance(x: -4, y: -11, name: \"first pass\") find_2f5b8f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -121, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_2f5b8f.predicate\n        list_8f1e0a -> find_2f5b8f.items\n        instance(x: 272, y: -11, name: \"second pass\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it != first_smallest\"\n        }\n        instance(x: 271, y: 78) min_c3e343 root.Std_k98ojb.List.Min {}\n        find_2f5b8f.item -> filter_4d4556.list\n        find_2f5b8f.item -> ``first pass``.first_smallest\n        filter_4d4556.result -> min_c3e343.items\n        min_c3e343.min -> second_smallest_9c6b7d\n    }\n\n    \n\n    instance(x: -57, y: 0) second_smallest_2a1f5c root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -285, y: 3, name: \"list\") property(List) list_9e6a1f\n\n        out(x: 596, y: 2, name: \"second_smallest\") property(Number) second_smallest_7c0d5b\n\n        instance(x: -10, y: -4, name: \"First smallest number\") find_8b3e9c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0, name: \"Second smallest number\") ``First smallest number_7f2a5d`` root.Std_k98ojb.Iteration.Find {}\n        list_9e6a1f -> find_8b3e9c.items\n        func() {\n            in(x: -121, y: 35, name: \"current\") property(Number) current_4b0f7f\n\n            out(x: 333, y: 36, name: \"bool\") property(Bool) bool_e5d8a6\n\n            instance(x: 92, y: 20) less_than_2e3c1 root.Std_k98ojb.Math.LessThan {}\n            current_4b0f7f -> less_than_2e3c1.left\n            find_8b3e9c.item -> less_than_2e3c1.right\n            less_than_2e3c1.result -> bool_e5d8a6\n        } -> find_8b3e9c.predicate\n        list_9e6a1f -> ``First smallest number_7f2a5d``.items\n        func() {\n            in(x: -121, y: 35, name: \"current\") property(Number) current_4b0f7f\n\n            out(x: 333, y: 36, name: \"bool\") property(Bool) bool_e5d8a6\n\n            instance(x: 92, y: 20) less_than_2e3c1 root.Std_k98ojb.Math.LessThan {}\n            current_4b0f7f -> less_than_2e3c1.left\n            find_8b3e9c.item -> less_than_2e3c1.right\n            instance(x: 312, y: 22) notequal_6a9d5 root.Std_k98ojb.Logic.NotEqual {}\n            current_4b0f7f -> notequal_6a9d5.left\n            ``First smallest number_7f2a5d``.item -> notequal_6a9d5.right\n            instance(x: 416, y: 20) and_e3e8c root.Std_k98ojb.Logic.And {}\n            less_than_2e3c1.result -> and_e3e8c.left\n            notequal_6a9d5.result -> and_e3e8c.right\n            and_e3e8c.result -> bool_e5d8a6\n        } -> ``First smallest number_7f2a5d``.predicate\n        find_8b3e9c.item -> second_smallest_7c0d5b\n    }\n\n    \n\n    instance(x: -55, y: 52) second_smallest_4f8f1f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: 158, name: \"list\") property(List) list_1a8f6e\n\n        out(x: 46, y: 358, name: \"second_min\") property(Number) second_min_9b3c4d\n\n        instance(x: -105, y: 133) find_2b7a0c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -144, y: 243, name: \"elem\") property(Number) elem_8f9e1e\n\n            out(x: 116, y: 253, name: \"bool\") property(Bool) bool_a0c6d2\n\n            instance(x: 89, y: 238) min_3a4b7c root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 244) notequal_1f9e9f root.Std_k98ojb.Logic.NotEqual {}\n            list_1a8f6e -> min_3a4b7c.values\n            elem_8f9e1e -> min_3a4b7c.values\n            min_3a4b7c.result -> notequal_1f9e9f.left\n            0 -> notequal_1f9e9f.right\n            notequal_1f9e9f.result -> bool_a0c6d2\n        } -> find_2b7a0c.predicate\n        list_1a8f6e -> find_2b7a0c.items\n        find_2b7a0c.item -> second_min_9b3c4d\n    }\n\n    \n\n    instance(x: -174, y: 268) second_smallest_5f3c6f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: 166, name: \"list\") property(List) list_9e8a1f\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_3b2d5c\n\n        instance(x: 532, y: 147) min_7e1ce0 root.Std_k98ojb.List.Min {}\n        instance(x: -39, y: 26, name: \"First smallest number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Second smallest number\") ``First smallest number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_9e8a1f -> min_7e1ce0.items\n        list_9e8a1f -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            min_7e1ce0.min -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        list_9e8a1f -> ``First smallest number_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            min_7e1ce0.min -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First smallest number_0b1361``.predicate\n        find_de624f.item -> ``First smallest number_0b1361``.min\n        ``First smallest number_0b1361``.item -> output_3b2d5c\n    }\n\n    \n\n    instance(x: -291, y: 177) second_smallest_f53d27 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 0, name: \"list\") property(List) list_8f1a9e\n\n        out(x: 597, y: 2, name: \"second_smallest\") property(Number) second_smallest_7c3d4b\n\n        instance(x: -17, y: -11, name: \"first_min\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min2_1b3d8c root.Std_k98ojb.Math.Min2 {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            first_min -> min2_1b3d8c.left\n            elem_9f6850 -> min2_1b3d8c.right\n            min2_1b3d8c.min -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> first_min.predicate\n        list_8f1a9e -> first_min.items\n        instance(x: -17, y: 109, name: \"second_min\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min2_1b3d8c root.Std_k98ojb.Math.Min2 {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            first_min -> min2_1b3d8c.left\n            elem_9f6850 -> min2_1b3d8c.right\n            min2_1b3d8c.min -> notequal_807ffd.left\n            second_min -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> second_min.predicate\n        list_8f1a9e -> second_min.items\n        second_min.item -> second_smallest_7c3d4b\n    }\n\n    \n\n    instance(x: -53, y: 32) second_smallest_b2a5d0 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 3, name: \"list\") property(List) list_8e6a2f\n\n        out(x: 593, y: 22, name: \"second_smallest\") property(Number) second_smallest_7c9d5b\n\n        instance(x: -101, y: -1) min_4f3f9f root.Std_k98ojb.List.Min {}\n        instance(x: -2, y: 29) remove_6e0a8f root.Std_k98ojb.List.Remove {}\n        instance(x: 294, y: 24) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_8e6a2f -> min_4f3f9f.items\n        min_4f3f9f.min -> remove_6e0a8f.index\n        list_8e6a2f -> remove_6e0a8f.list\n        remove_6e0a8f.listWithoutItem -> min_c3e343.items\n        min_c3e343.min -> second_smallest_7c9d5b\n    }\n\n    \n\n    instance(x: -59, y: 57) second_smallest_2b1f4f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -280, y: 0, name: \"list\") property(List) list_9e4a1f\n\n        out(x: 46, y: 158, name: \"second_min\") property(Number) second_min_a3b7c6\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \""
            ]
        }
    }
]