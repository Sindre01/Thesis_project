[
    {
        "experiment_name": "regular_RAG_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15912,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_3f9b8a\n        in(x: -310, y: 20, name: \"list2\") property(List) list2_7d4c6e\n\n        out(x: 600, y: -140, name: \"output\") property(Bool) output_b5c1d3\n\n        instance(x: -150, y: -130) intersection_9f8b2a root.Std_k98ojb.Sets.Intersection {}\n        list1_3f9b8a -> intersection_9f8b2a.left\n        list2_7d4c6e -> intersection_9f8b2a.right\n        instance(x: 250, y: -140) notempty_5c3d8b root.Std_k98ojb.List.NotEmpty {}\n        intersection_9f8b2a.intersect -> notempty_5c3d8b.list\n        notempty_5c3d8b.isEmpty -> output_b5c1d3\n    }\n\n    \n\n    instance(x: 100, y: -50) has_common_element_instance root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_3f8b2a\n        in(x: -310, y: 20, name: \"list2\") property(List) list2_7d9c4e\n\n        out(x: 600, y: -140, name: \"output\") property(Bool) output_b5c6d3\n\n        instance(x: -150, y: -130) intersection_1a2b3c root.Std_k98ojb.Sets.Intersection {}\n        list1_3f8b2a -> intersection_1a2b3c.left\n        list2_7d9c4e -> intersection_1a2b3c.right\n\n        instance(x: 250, y: -120) notempty_d4e5f6 root.Std_k98ojb.List.NotEmpty {}\n        intersection_1a2b3c.intersect -> notempty_d4e5f6.list\n        notempty_d4e5f6.isEmpty -> output_b5c6d3\n    }\n\n    \n\n    instance(x: 50, y: -10) has_common_element_instance root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -450, y: -200, name: \"list1\") property(List) list1_3f8b9a\n        in(x: -460, y: 30, name: \"list2\") property(List) list2_7d4c6e\n\n        out(x: 1220, y: -190, name: \"output\") property(Bool) output_b5c1d3\n\n        instance(x: -300, y: -180, name: \"intersection\") intersection_9f8b7a root.Std_k98ojb.Sets.Intersection {}\n        list1_3f8b9a -> intersection_9f8b7a.left\n        list2_7d4c6e -> intersection_9f8b7a.right\n        instance(x: 850, y: -180) notempty_c5d8b2 root.Std_k98ojb.List.NotEmpty {}\n        intersection_9f8b7a.intersect -> notempty_c5d8b2.list\n        notempty_c5d8b2.isEmpty -> output_b5c1d3\n    }\n\n    \n\n    instance(x: 100, y: -70) has_common_element_instance root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_1f846b\n        in(x: -310, y: -130, name: \"list2\") property(List) list2_c62075\n\n        out(x: 400, y: -140, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -200, y: -100) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_4e8c54.left\n        list2_c62075 -> intersection_4e8c54.right\n        instance(x: 50, y: -120) notempty_75283f root.Std_k98ojb.List.NotEmpty {}\n        intersection_4e8c54.intersect -> notempty_75283f.list\n        notempty_75283f.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 100, y: -50) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_3f8b2a\n        in(x: -310, y: 20, name: \"list2\") property(List) list2_7d9c4e\n\n        out(x: 600, y: -140, name: \"output\") property(Bool) output_b5c6d3\n\n        instance(x: -150, y: -130) intersection_1a2b3c root.Std_k98ojb.Sets.Intersection {}\n        list1_3f8b2a -> intersection_1a2b3c.left\n        list2_7d9c4e -> intersection_1a2b3c.right\n\n        instance(x: 250, y: -120) notempty_d4e5f6 root.Std_k98ojb.List.NotEmpty {}\n        intersection_1a2b3c.intersect -> notempty_d4e5f6.list\n        notempty_d4e5f6.isEmpty -> output_b5c6d3\n    }\n\n    \n\n    instance(x: 50, y: -10) has_common_element_instance root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -400, y: -150, name: \"list1\") property(List) list1_1f846b\n        in(x: -410, y: 10, name: \"list2\") property(List) list2_c62075\n\n        out(x: 600, y: -140, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -200, y: -100) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_4e8c54.left\n        list2_c62075 -> intersection_4e8c54.right\n        instance(x: 300, y: -110) notempty_4524be root.Std_k98ojb.List.NotEmpty {}\n        intersection_4e8c54.intersect -> notempty_4524be.list\n        notempty_4524be.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 100, y: -50) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_1f846b\n        in(x: -310, y: -130, name: \"list2\") property(List) list2_c62075\n\n        out(x: 500, y: -140, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -200, y: -100) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_4e8c54.left\n        list2_c62075 -> intersection_4e8c54.right\n        instance(x: 300, y: -110) notempty_4524be root.Std_k98ojb.List.NotEmpty {}\n        intersection_4e8c54.intersect -> notempty_4524be.list\n        notempty_4524be.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 100, y: -50) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -400, y: -150, name: \"list1\") property(List) list1_1f846b\n        in(x: -410, y: 10, name: \"list2\") property(List) list2_c62075\n\n        out(x: 600, y: -140, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -200, y: -100) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_4e8c54.left\n        list2_c62075 -> intersection_4e8c54.right\n        instance(x: 300, y: -110) notempty_4524be root.Std_k98ojb.List.NotEmpty {}\n        intersection_4e8c54.intersect -> notempty_4524be.list\n        notempty_4524be.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 100, y: -50) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_1f846b\n        in(x: -310, y: -130, name: \"list2\") property(List) list2_c62075\n\n        out(x: 500, y: -140, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -200, y: -100) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_4e8c54.left\n        list2_c62075 -> intersection_4e8c54.right\n        instance(x: 300, y: -110) notempty_4524be root.Std_k98ojb.List.NotEmpty {}\n        intersection_4e8c54.intersect -> notempty_4524be.list\n        notempty_4524be.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 100, y: -50) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_3f8b2a\n        in(x: -310, y: 20, name: \"list2\") property(List) list2_7d9c4e\n\n        out(x: 600, y: -140, name: \"output\") property(Bool) output_b5c6d3\n\n        instance(x: -180, y: -130) intersection_1a2b3c root.Std_k98ojb.Sets.Intersection {}\n        list1_3f8b2a -> intersection_1a2b3c.left\n        list2_7d9c4e -> intersection_1a2b3c.right\n\n        instance(x: 420, y: -120) notempty_d4e5f6 root.Std_k98ojb.List.NotEmpty {}\n        intersection_1a2b3c.intersect -> notempty_d4e5f6.list\n        notempty_d4e5f6.isEmpty -> output_b5c6d3\n    }\n\n    \n\n    instance(x: 50, y: -70) has_common_element_instance root.main.has_common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -465, y: -235, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 752, y: 93) filter_consecutive_numbers root.Std_k98ojb.Query.Filter {\n            where: \"index < list.length - 1 && (list[index + 1] - list[index]) == 1\"\n        }\n        \n        list_3af6ba -> filter_consecutive_numbers.list\n        filter_consecutive_numbers.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -465, y: -235, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 752, y: 93) filter_consecutive_numbers root.Std_k98ojb.Query.Filter {\n            where: \"index < list.length - 1 && (list[index + 1] - list[index]) == 1\"\n        }\n        \n        list_3af6ba -> filter_consecutive_numbers.list\n        filter_consecutive_numbers.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -485, y: 30, name: \"list\") property(List) input_list\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_result\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_result.execute\n        ifexpression_875761.value -> output_result\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        input_list -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_result.execute\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_list -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        output_result.execute -> setter_38e107.continue\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -465, y: -235, name: \"list\") property(List) list_07cae4\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < list.Length - 1 && Math.Abs(list[index] - list[index + 1]) == 1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_8d07dc\n        ifexpression_875761.value -> output_8d07dc\n        list_07cae4 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_8d07dc\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_fc79d5 root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -465, y: -235, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 752, y: 93) filter_consecutive_numbers root.Std_k98ojb.Query.Filter {\n            where: \"index < list.length - 1 && (list[index + 1] - list[index]) == 1\"\n        }\n        \n        list_3af6ba -> filter_consecutive_numbers.list\n        filter_consecutive_numbers.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -485, y: 30, name: \"list\") property(List) input_list\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_result\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_result.execute\n        ifexpression_875761.value -> output_result\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        input_list -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_result.execute\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_list -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        output_result.execute -> setter_38e107.continue\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -465, y: -235, name: \"list\") property(List) list_07cae4\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < list.Length - 1 && Math.Abs(list[index] - list[index + 1]) == 1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_8d07dc\n        ifexpression_875761.value -> output_8d07dc\n        list_07cae4 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_8d07dc\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_fc79d5 root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -485, y: 30, name: \"list\") property(List) input_list\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_result\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_result.execute\n        ifexpression_875761.value -> output_result\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        input_list -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_result.execute\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_list -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        output_result.execute -> setter_38e107.continue\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -465, y: -235, name: \"list\") property(List) list_07cae4\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < list.Length - 1 && Math.Abs(list[index] - list[index + 1]) == 1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_8d07dc\n        ifexpression_875761.value -> output_8d07dc\n        list_07cae4 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_8d07dc\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_fc79d5 root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -465, y: -235, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 752, y: 93) filter_consecutive_numbers root.Std_k98ojb.Query.Filter {\n            where: \"index < list.length - 1 && (list[index + 1] - list[index]) == 1\"\n        }\n        \n        list_3af6ba -> filter_consecutive_numbers.list\n        filter_consecutive_numbers.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: -86, name: \"main_list\") property(List) main_list_3af6ba\n        in(x: -275, y: 30, name: \"sub_list\") property(List) sub_list_7f8b4c\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        \n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            \n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_32727d.handler\n        \n        main_list_3af6ba -> contains_32727d.list\n        sub_list_7f8b4c -> length_8166b0.list\n        func() {\n            in(x: -192, y: -16, name=\"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name=\"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_32727d.handler\n        \n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"sublist\") property(List) sublist_1f846b\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_c62075\n\n        out(x: 557, y: -97, name: \"is_sublist\") property(Bool) is_sublist_result\n\n        instance(x: -303, y: -205, name: \"filter sublist indices\") filter_1f846b_indices root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"map to bool\") map_to_bool root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current_index\") property(Number) current_index\n            in(x: -23, y: 79, name=\"index\") property(Number) index\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_bool\n\n            instance(x: 226, y: 56) slice_1f846b root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n\n            current_index -> slice_1f846b.start\n            sublist_1f846b -> slice_1f846b.items\n\n            index -> slice_1f846b.end\n            main_list_c62075 -> slice_1f846b.items\n\n            equal_f89569.result -> output_bool\n            slice_1f846b.slice -> equal_f89569.left\n            sublist_1f846b -> equal_f89569.right\n        } -> filter_1f846b_indices.handler\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_index\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_index -> modulo_ad7b2a.value\n            sublist_1f846b.length() -> modulo_ad7b2a.divisor\n\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n\n            notequal_cb8a55.result -> bool_result\n        } -> map_to_bool.handler\n\n        filter_1f846b_indices.output_list -> map_to_bool.items\n        map_to_bool.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n\n        not_75283f.result -> is_sublist_result\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_instance root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_1a2f3b\n        in(x: -505, y: 160, name: \"sub_list\") property(List) sub_list_4c5d6e\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_f7g8h9\n\n        instance(x: 752, y: 93) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -303, y: -205, name: \"filter_sublist\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            1 -> modulo_c76d2b.divisor\n            _index_769593 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_sublist.handler\n\n        func() {\n            in(x: -192, y: -16, name=\"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name=\"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_32727d.handler\n\n        main_list_1a2f3b -> for_d26972.items\n        for_d26972.item -> filter_sublist.items\n        sub_list_4c5d6e -> contains_32727d.list\n        filter_sublist.output_list -> contains_32727d.start_index_list\n        contains_32727d.is_contained -> output_f7g8h9\n\n        for_d26972.onItem -> contains_32727d.execute\n        for_d26972.done -> output_f7g8h9\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_instance root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -300, y: -150, name: \"main_list\") property(List) main_list_1a2f3b\n        in(x: -290, y: 30, name: \"sub_list\") property(List) sub_list_4c5d6e\n\n        out(x: 600, y: -100, name: \"is_sublist\") property(Bool) is_sublist_result\n\n        instance(x: -150, y: -120, name: \"filter main list\") filter_main root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 50, y: -110) contains_7f8g9h root.Std_k98ojb.List.Contains {}\n        instance(x: 250, y: -100) equal_i1j2k3 root.Std_k98ojb.Logic.Equal {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_abc123\n            out(x: 200, y: -5, name: \"output\") property(Bool) output_def456\n\n            instance(x: 100, y: -15) contains_l4m5n6 root.Std_k98ojb.List.Contains {}\n            sub_list_4c5d6e -> contains_l4m5n6.list\n            current_abc123 -> contains_l4m5n6.item\n            contains_l4m5n6.is_contained -> output_def456\n        } -> filter_main.handler\n\n        main_list_1a2f3b -> filter_main.items\n        filter_main.output_list -> contains_7f8g9h.list\n        sub_list_4c5d6e -> contains_7f8g9h.item\n        contains_7f8g9h.is_contained -> equal_i1j2k3.left\n        true -> equal_i1j2k3.right\n        equal_i1j2k3.result -> is_sublist_result\n    }\n\n    \n\n    instance(x: -100, y: 50) is_sublist_instance root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -300, y: -150, name: \"main_list\") property(List) main_list_1a2f3b\n        in(x: -290, y: 30, name: \"sub_list\") property(List) sub_list_4c5d6e\n\n        out(x: 500, y: -100, name: \"is_sublist\") property(Bool) is_sublist_result\n\n        instance(x: -150, y: -120, name: \"filter main list\") filter_7f8g9h root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 50, y: -110) contains_i0j1k2 root.Std_k98ojb.List.Contains {}\n        instance(x: 250, y: -100) equal_l3m4n5 root.Std_k98ojb.Logic.Equal {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_6p7q8r\n\n            out(x: 205, y: -15, name: \"output\") property(Bool) output_t9u0v1\n\n            instance(x: 100, y: -20) contains_w2x3y4 root.Std_k98ojb.List.Contains {}\n            current_6p7q8r -> contains_w2x3y4.list\n            sub_list_4c5d6e -> contains_w2x3y4.item\n            contains_w2x3y4.is_contained -> output_t9u0v1\n        } -> filter_7f8g9h.handler\n\n        main_list_1a2f3b -> filter_7f8ojb.Iteration.Filter {\n            where: \"contains(sub_list, current)\"\n        }\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_6p7q8r\n\n            out(x: 205, y: -15, name: \"output\") property(Bool) output_t9u0v1\n\n            instance(x: 100, y: -20) contains_w2x3y4 root.Std_k98ojb.List.Contains {}\n            current_6p7q8r -> contains_w2x3y4.list\n            sub_list_4c5d6e -> contains_w2x3y4.item\n            contains_w2x3y4.is_contained -> output_t9u0v1\n        } -> filter_7f8g9h.handler\n\n        filter_7f8g9h.output_list -> contains_i0j1k2.list\n        sub_list_4c5d6e -> contains_i0j1k2.item\n        contains_i0j1k2.is_contained -> equal_l3m4n5.left\n        true -> equal_l3m4n5.right\n        equal_l3m4n5.result -> is_sublist_result\n    }\n\n    \n\n    instance(x: -50, y: 60) is_sublist_instance root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -400, y: -150, name: \"main_list\") property(List) main_list_1a2f3b\n        in(x: -390, y: 30, name: \"sub_list\") property(List) sub_list_4c5d6e\n\n        out(x: 800, y: -100, name: \"is_sublist\") property(Bool) is_sublist_result\n\n        instance(x: -200, y: -50, name: \"filter main list\") filter_main root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 150, y: -70, name: \"map sub list\") map_sub_list root.Std_k98ojb.Iteration.Map {}\n        instance(x: 350, y: -90) contains_7f8g9h root.Std_k98ojb.List.Contains {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_slice\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_7f8g9h root.Std_k98ojb.List.Contains {}\n            current_slice -> contains_7f8g9h.list\n            sub_list_4c5d6e -> contains_7f8g9h.item\n            contains_7f8g9h.is_contained -> output_efbc78\n        } -> filter_main.handler\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_index\n            out(x: 521, y: -28, name: \"slice\") property(List) slice\n\n            instance(x: 74, y: -23) slice_3i4j5k root.Std_k98ojb.List.Slice {}\n            instance(x: 285, y: -25) generate_range_l6m7n8 root.Std_k98ojb.List.GenerateRange {}\n\n            current_index -> generate_range_l6m7n8.from\n            sub_list_length -> generate_range_l6m7n8.to\n            main_list_1a2f3b -> slice_3i4j5k.items\n            generate_range_l6m7n8.list -> slice_3i4j5k.start\n            0 -> slice_3i4j5k.end\n            slice_3i4j5k.slice -> slice\n        } -> map_sub_list.handler\n\n        main_list_length -> filter_main.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_index\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) map_sub_list root.Std_k98ojb.Iteration.Map {}\n            current_index -> map_sub_list.items\n            map_sub_list.output_list -> contains_7f8g9h.list\n            sub_list_4c5d6e -> contains_7f8g9h.item\n            contains_7f8g9h.is_contained -> output_efbc78\n        } -> filter_main.handler\n\n        filter_main.output_list -> is_sublist_result\n    }\n\n    \n\n    instance(x: -100, y: 50) is_sublist_instance root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"sublist\") property(List) sublist_1f846b\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_c62075\n\n        out(x: 557, y: -97, name: \"is_sublist\") property(Bool) is_sublist_result\n\n        instance(x: -303, y: -205, name: \"filter sublist indices\") filter_1f846b_indices root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"map to bool\") map_to_bool root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current_index\") property(Number) current_index\n            in(x: -23, y: 79, name=\"index\") property(Number) index\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_bool\n\n            instance(x: 226, y: 56) slice_1f846b root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n\n            current_index -> slice_1f846b.start\n            sublist_1f846b -> slice_1f846b.items\n\n            index -> slice_1f846b.end\n            main_list_c62075 -> slice_1f846b.items\n\n            equal_f89569.result -> output_bool\n            slice_1f846b.slice -> equal_f89569.left\n            sublist_1f846b -> equal_f89569.right\n        } -> filter_1f846b_indices.handler\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_index\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_index -> modulo_ad7b2a.value\n            sublist_1f846b.length() -> modulo_ad7b2a.divisor\n\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n\n            notequal_cb8a55.result -> bool_result\n        } -> map_to_bool.handler\n\n        filter_1f846b_indices.output_list -> map_to_bool.items\n        map_to_bool.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n\n        not_75283f.result -> is_sublist_result\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_instance root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -400, y: -150, name: \"main_list\") property(List) main_list_1a2f3b\n        in(x: -390, y: 30, name: \"sub_list\") property(List) sub_list_4c5d6e\n\n        out(x: 600, y: -100, name: \"is_sublist\") property(Bool) is_sublist_result\n\n        instance(x: -150, y: -120, name: \"filter main list\") filter_7f8g9h root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 50, y: -110) contains_i0j1k2 root.Std_k98ojb.List.Contains {}\n        instance(x: 250, y: -100) equal_l3m4n5 root.Std_k98ojb.Logic.Equal {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_6p7q8r\n\n            out(x: 205, y: -15, name: \"output\") property(Bool) output_t9u0v1\n\n            instance(x: 100, y: -20) contains_x2y3z4 root.Std_k98ojb.List.Contains {}\n            current_6p7q8r -> contains_x2y3z4.list\n            sub_list_4c5d6e -> contains_x2y3z4.item\n            contains_x2y3z4.is_contained -> output_t9u0v1\n        } -> filter_7f8g9h.handler\n\n        main_list_1a2f3b -> filter_7f8ojb.Iteration.Filter {\n            where: \"contains(sub_list, current)\"\n        }\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_6p7q8r\n\n            out(x: 205, y: -15, name: \"output\") property(Bool) output_t9u0v1\n\n            instance(x: 100, y: -20) contains_x2y3z4 root.Std_k98ojb.List.Contains {}\n            current_6p7q8r -> contains_x2y3z4.list\n            sub_list_4c5d6e -> contains_x2y3z4.item\n            contains_x2y3z4.is_contained -> output_t9u0v1\n        } -> filter_7f8g9h.handler\n\n        filter_7f8g9h.output_list -> contains_i0j1k2.list\n        sub_list_4c5d6e -> contains_i0j1k2.item\n        contains_i0j1k2.is_contained -> equal_l3m4n5.left\n        true -> equal_l3m4n5.right\n        equal_l3m4n5.result -> is_sublist_result\n    }\n\n    \n\n    instance(x: -50, y: 60) is_sublist_instance root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -300, y: -150, name: \"main_list\") property(List) main_list_1a2f3b\n        in(x: -290, y: 30, name: \"sub_list\") property(List) sub_list_4c5d6e\n\n        out(x: 600, y: -100, name: \"is_sublist\") property(Bool) is_sublist_result\n\n        instance(x: -150, y: -50, name: \"filter main list\") filter_7f8g9h root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: -100, name: \"zip lists\") zip_abcd root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 150, y: -50, name: \"check equality\") equal_efgh root.Std_k98ojb.Logic.Equal {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_ijkl\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_mnop\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_qrst\n\n            instance(x: 226, y: 56) contains_vwxy root.Std_k98ojb.List.Contains {}\n            current_ijkl -> contains_vwxy.list\n            sub_list_4c5d6e -> contains_vwxy.item\n            contains_vwxy.is_contained -> output_qrst\n        } -> filter_7f8g9h.handler\n\n        main_list_1a2f3b -> filter_7f8g9h.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_abcd\n            in(x: -185, y: 18, name: \"_index\") property(Number) _index_efgh\n\n            out(x: 521, y: -28, name: \"output\") property(Bool) output_ijkl\n\n            instance(x: 74, y: -23) equal_vwxy root.Std_k98ojb.Logic.Equal {}\n            current_abcd -> equal_vwxy.left\n            sub_list_4c5d6e -> equal_vwxy.right\n            equal_vwxy.result -> output_ijkl\n        } -> zip_abcd.handler\n\n        filter_7f8g9h.output_list -> zip_abcd.left\n        sub_list_4c5d6e -> zip_abcd.right\n        zip_abcd.zipped -> equal_efgh.left\n        List.Empty() -> equal_efgh.right\n        equal_efgh.result -> is_sublist_result\n    }\n\n    \n\n    instance(x: -100, y: 50) is_sublist_instance root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: -86, name: \"main_list\") property(List) main_list_3af6ba\n        in(x: -275, y: 30, name: \"sub_list\") property(List) sub_list_c62075\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_index_81298e\n            in(x: -183, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_index_81298e -> modulo_c76d2b.value\n            length_8166b0.length -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_index_81298e\n            in(x: -183, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_index_81298e -> modulo_c76d2b.value\n            length_8166b0.length -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n\n        main_list_3af6ba -> length_8166b0.list\n        sub_list_c62075 -> contains_32727d.list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_index_81298e\n            in(x: -183, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_index_81298e -> modulo_c76d2b.value\n            length_8166b0.length -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_index_81298e\n            in(x: -183, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_index_81298e -> modulo_c76d2b.value\n            length_8166b0.length -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_7b3b7b root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -123, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"found\") property(Bool) found\n            \n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            0 -> sub_1088d5.second\n            sub_1088d5.result -> setter_1cedb2.new_value\n\n            instance(x: 310, y: 35) greaterthan_807ffd root.Std_k98ojb.Math.GreaterThan {}\n            item -> greaterthan_807ffd.left\n            index -> greaterthan_807ffd.right\n            \n            instance(x: 410, y: 45) and_9f7759 root.Std_k98ojb.Logic.And {}\n            sub_1088d5.result -> and_9f7759.left\n            greaterthan_807ffd.result -> and_9f7759.right\n\n            and_9f7759.result -> found\n        } -> iteration_7b3b7b.predicate\n        \n        numbers -> iteration_7b3b7b.items\n        instance(x: 0, y: 0) add_12bf99 root.Std_k98ojb.Math.Add {}\n        1 -> add_12bf99.first\n        setter_1cedb2.new_value -> add_12bf99.second\n        add_12bf99.result -> missing_number\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0\"\n        }\n        \n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = missing_number\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = missing_number\n        \n        numbers -> ifexpression_e38995.gen_0\n        1 -> ifexpression_e38995.gen_1\n\n        getter_9cceb3.value -> missing_number\n        ifexpression_e38995.then -> setter_1cedb2.execute\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_cee202 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_5b3f7a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -113, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            item -> sub_1088d5.second\n            sub_1088d5.result -> bool_result\n        } -> iteration_5b3f7a.predicate\n        numbers -> iteration_5b3fjba.items\n        instance(x: 0, y: 0) add_1c2e4f root.Std_k98ojb.Math.Add {}\n        index -> add_1c2e4f.first\n        1 -> add_1c2e4f.second\n        add_1c2e4f.result -> missing_number\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_instance root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_5f8b7a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -113, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"bool\") property(Bool) bool_3f9b7a\n\n            instance(x: 89, y: 29) sub_1c8d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1c8d5.first\n            item -> sub_1c8d5.second\n            sub_1c8d5.result -> bool_3f9b7a\n        } -> iteration_5f8b7a.predicate\n        numbers -> iteration_5f8b7a.items\n\n        instance(x: 0, y: -100) ifexpression_2e4b6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1c9d3a\") getter_1c9d3a = missing_number\n        setter(x: 116, y: -268, name: \"setter_2edf8b\") setter_2edf8b = missing_number\n        1 -> setter_2edf8b.new_value\n        ifexpression_2e4b6.then -> setter_2edf8b.execute\n        ifexpression_2e4b6.else -> iteration_5f8b7a.next\n\n        instance(x: -105, y: -110) add_3c9d5 root.Std_k98ojb.Math.Add {}\n        index -> add_3c9d5.first\n        1 -> add_3c9d5.second\n        add_3c9d5.result -> setter_2edf8b.new_value\n\n        getter_1c9d3a.value -> missing_number\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_5f3b7a root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -113, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"bool\") property(Bool) found\n            \n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            0 -> sub_1088d5.second\n            sub_1088d5.result -> missing_number\n\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            item -> equal_807ffd.left\n            index -> equal_807ffd.right\n            equal_807ffd.result -> found\n        } -> iteration_5f3b7a.predicate\n\n        numbers -> iteration_5f3b7a.items\n    }\n\n    \n\n    instance(x: 322, y: 568) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_1088d5.result -> notequal_807ffd.left\n            index -> sub_1088d5.first\n            numbers.GetAt(index - 1).value -> sub_1088d5.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        List.GenerateRange(1, List.Length(numbers) + 2).ai -> find_6d05b0.items\n        find_6d05b0.item -> missing_number\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_5b3f2a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -113, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            item -> sub_1088d5.second\n            sub_1088d5.result -> bool_result\n        } -> iteration_5b3f2a.predicate\n        numbers -> iteration_5b3f2a.items\n\n        instance(x: -105, y: 60) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == item\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = missing_number\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = missing_number\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = missing_number\n\n        iteration_5b3f2a.index -> ifexpression_e38995.gen_0\n        iteration_5b3f2a.item -> ifexpression_e38995.gen_1\n\n        getter_9cceb3.value -> missing_number\n\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        index -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        item + 1 -> setter_37db7f.new_value\n    }\n\n    \n\n    instance(x: -55, y: 127) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_5b3f7a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -113, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            item -> sub_1088d5.second\n            sub_1088d5.result -> bool_result\n        } -> iteration_5b3f7a.predicate\n        numbers -> iteration_5b3fjba.items\n        instance(x: 0, y: 0) add_1c2e4f root.Std_k98ojb.Math.Add {}\n        index -> add_1c2e4f.first\n        1 -> add_1c2e4f.second\n        add_1c2e4f.result -> missing_number\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_instance root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_5b3f2a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -113, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            item -> sub_1088d5.second\n            sub_1088d5.result -> bool_result\n        } -> iteration_5b3f2a.predicate\n        numbers -> iteration_5b3f2a.items\n\n        instance(x: -105, y: 60) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == item\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = missing_number\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = missing_number\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = missing_number\n\n        iteration_5b3f2a.index -> ifexpression_e38995.gen_0\n        iteration_5b3f2a.item -> ifexpression_e38995.gen_1\n\n        getter_9cceb3.value -> missing_number\n\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        index -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        item + 1 -> setter_37db7f.new_value\n    }\n\n    \n\n    instance(x: -55, y: 127) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_5b3f2a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -103, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            item -> sub_1088d5.second\n            sub_1088d5.result -> bool_result\n        } -> iteration_5b3f2a.predicate\n\n        instance(x: -105, y: 0) map_6c7e4b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item\n            out(x: 515, y: 44, name: \"mapped_item\") property(Number) mapped_item\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            index -> add_1088d5.first\n            item -> add_1088d5.second\n            add_1088d5.result -> mapped_item\n        } -> map_6c7e4b.handler\n\n        instance(x: -105, y: -50) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it < 0\"\n        }\n\n        numbers -> map_6c7e4b.items\n        map_6c7e4b.output_list -> iteration_5b3f2a.items\n        iteration_5b3f2a.item -> filter_7b3b7b.list\n        filter_7b3b7b.result -> missing_number\n    }\n\n    \n\n    instance(x: -55, y: 129) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_1088d5.result -> notequal_807ffd.left\n            index -> sub_1088d5.first\n            numbers.GetAt(index - 1).value -> sub_1088d5.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        List.GenerateRange(1, List.Length(numbers) + 2).ai -> find_6d05b0.items\n        find_6d05b0.item -> missing_number\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_node root.main.find_smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -150, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_3a7b4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_b9c8d6 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_f2e5c1 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_3a7b4f.input\n        \" \" -> replace_3a7b4f.search\n        \":\" -> replace_3a7b4f.replace\n\n        replace_3a7b4f.output -> replace_b9c8d6.input\n        \",\" -> replace_b9c8d6.search\n        \":\" -> replace_b9c8d6.replace\n\n        replace_b9c8d6.output -> replace_f2e5c1.input\n        \".\" -> replace_f2e5c1.search\n        \":\" -> replace_f2e5c1.replace\n\n        replace_f2e5c1.output -> output_1\n    }\n\n    \n\n    instance(x: 101, y: -67) replace_special_chars_instance root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -300, y: -50, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 600, y: 0, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -25, name: \"characters\") characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 75, name: \"all same\") all_same_jk0l1m root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -100, y: 20, name: \"current\") property(String) current_2n3o4p\n                in(x: -90, y: 80, name: \"_index\") property(Number) _index_qr5s6t\n\n                out(x: 200, y: 50, name: \"output\") property(Bool) output_u7v8w9\n\n                instance(x: 30, y: 45, name: \"equal\") equal_x1y2z3 root.Std_k98ojb.Logic.Equal {}\n                characters_7g8h9i.characters -> equal_x1y2z3.left\n                current_2n3o4p -> equal_x1y2z3.right\n                equal_x1y2z3.result -> output_u7v8w9\n            }\n        }\n\n        input_1a2b3c -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> all_same_jk0l1m.items\n        func() {\n            in(x: -50, y: 20, name: \"current\") property(String) current_a1b2c3\n\n            out(x: 150, y: 30, name: \"output\") property(Bool) output_d4e5f6\n\n            instance(x: 10, y: 25, name: \"equal\") equal_g7h8i9 root.Std_k98ojb.Logic.Equal {}\n            current_a1b2c3 -> equal_g7h8i9.left\n            characters_7g8h9i.characters[0] -> equal_g7h8i9.right\n            equal_g7h8i9.result -> output_d4e5f6\n        } -> all_same_jk0l1m.handler\n\n        all_same_jk0l1m.output_list.Length -> output_d4e5f6\n    }\n\n    \n\n    instance(x: -100, y: 50) all_characters_same_abc123 root.main.all_characters_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -300, y: -50, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 500, y: 100, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -25, name: \"characters\") characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 75, name: \"all same\") all_same_jk0l1m root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -100, y: 25, name: \"current\") property(String) current_2n3o4p\n                in(x: -50, y: 75, name: \"_index\") property(Number) _index_qr5s6t\n\n                out(x: 200, y: 125, name: \"output\") property(Bool) output_u7v8w9\n\n                instance(x: 0, y: 100, name: \"equal\") equal_x1y2z3 root.Std_k98ojb.Logic.Equal {}\n                characters_7g8h9i.characters -> equal_x1y2z3.left\n                current_2n3o4p -> equal_x1y2z3.right\n                equal_x1y2z3.result -> output_u7v8w9\n            }\n        }\n\n        input_1a2b3c -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> all_same_jk0l1m.items\n        func() {\n            in(x: -50, y: 25, name: \"current\") property(String) current_a4b5c6\n\n            out(x: 150, y: 125, name: \"output\") property(Bool) output_d7e8f9\n\n            instance(x: 0, y: 100, name: \"equal\") equal_g1h2i3 root.Std_k98ojb.Logic.Equal {}\n            characters_7g8h9i.characters -> equal_g1h2i3.left\n            current_a4b5c6 -> equal_g1h2i3.right\n            equal_g1h2i3.result -> output_d7e8f9\n        } -> all_same_jk0l1m.handler\n        all_same_jk0l1m.output_list.length == characters_7g8h9i.characters.length -> output_d4e5f6\n    }\n\n    \n\n    instance(x: -100, y: 50) all_characters_same_test root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -320, y: -50, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 560, y: 20, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -45) characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 10) map_j0k1l2 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 350, y: 15) all_same_m3n4o5 root.main.all_characters_same_helper {}\n        input_1a2b3c -> characters_7g8h9i.input\n        func() {\n            in(x: -30, y: 20, name: \"element\") property(String) element_p6q7r8\n\n            out(x: 200, y: 25, name: \"output\") property(Bool) output_s9t0u1\n\n            instance(x: 70, y: 22) equal_v2w3x4 root.Std_k98ojb.Logic.Equal {}\n            element_p6q7r8 -> equal_v2w3x4.left\n            characters_7g8h9i.characters[0] -> equal_v2w3x4.right\n            equal_v2w3x4.result -> output_s9t0u1\n        } -> map_j0k1l2.handler\n        characters_7g8h9i.characters -> map_j0k1l2.items\n        func() {\n            in(x: -100, y: 30, name: \"items\") property(List) items_y5z6a7\n\n            out(x: 300, y: 35, name: \"output\") property(Bool) output_b8c9d0\n\n            instance(x: 150, y: 32) reduce_1e2f3g root.Std_k98ojb.Iteration.Reduce {}\n            func() {\n                in(x: -50, y: 40, name: \"accumulator\") property(Bool) accumulator_h4i5j6\n                in(x: -30, y: 60, name: \"current\") property(Bool) current_k7l8m9\n\n                out(x: 100, y: 45, name: \"output\") property(Bool) output_n0o1p2\n\n                instance(x: 70, y: 42) and_q3r4s5 root.Std_k98ojb.Logic.And {}\n                accumulator_h4i5j6 -> and_q3r4s5.left\n                current_k7l8m9 -> and_q3r4s5.right\n                and_q3r4s5.result -> output_n0o1p2\n            } -> reduce_1e2f3g.handler\n            map_j0k1l2.output_list -> reduce_1e2f3g.items\n            true -> reduce_1e2f3g.initialValue\n            reduce_1e2f3g.result -> output_b8c9d0\n        } -> all_same_m3n4o5.handler\n        map_j0k1l2.output_list -> all_same_m3n4o5.items\n        all_same_m3n4o5.result -> output_d4e5f6\n    }\n\n    \n\n    instance(x: -220, y: 70) all_characters_same_9a0b1c root.main.all_characters_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -300, y: -50, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 500, y: 100, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -25, name: \"characters\") characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 75, name: \"all same\") all_same_jk0l1m root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -100, y: 25, name: \"current\") property(String) current_2n3o4p\n                in(x: -75, y: 50, name: \"_index\") property(Number) _index_qr5s6t\n\n                out(x: 200, y: 125, name: \"output\") property(Bool) output_u7v8w9\n\n                instance(x: 25, y: 100) equal_x1y2z3 root.Std_k98ojb.Logic.Equal {}\n                characters_7g8h9i.characters -> equal_x1y2z3.left\n                current_2n3o4p -> equal_x1y2z3.right\n                equal_x1y2z3.result -> output_u7v8w9\n            }\n        }\n\n        input_1a2b3c -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> all_same_jk0l1m.items\n        func() {\n            in(x: -50, y: 150, name: \"element\") property(Bool) element_a1b2c3\n\n            out(x: 350, y: 175, name: \"output\") property(Bool) output_d4e5f6\n\n            instance(x: 100, y: 200) alltrue_9j0k1l root.Std_k98ojb.Iteration.Filter {\n                handler: func() {\n                    in(x: -25, y: 225, name: \"current\") property(Bool) current_m2n3o4\n\n                    out(x: 275, y: 250, name: \"output\") property(Bool) output_p5q6r7\n\n                    instance(x: 150, y: 275) equal_s8t9u0 root.Std_k98ojb.Logic.Equal {}\n                    true -> equal_s8t9u0.right\n                    current_m2n3o4 -> equal_s8t9u0.left\n                    equal_s8t9u0.result -> output_p5q6r7\n                }\n            }\n\n            element_a1b2c3 -> alltrue_9j0k1l.items\n            alltrue_9j0k1l.output_list -> output_d4e5f6\n        } -> all_same_jk0l1m.handler\n    }\n\n    \n\n    instance(x: 100, y: -50) all_characters_same_instance root.main.all_characters_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -300, y: -50, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 500, y: 100, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -25, name: \"characters\") characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 75, name: \"all same\") all_same_jk0l1m root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -100, y: 25, name: \"current\") property(String) current_2n3o4p\n                in(x: -50, y: 75, name: \"_index\") property(Number) _index_qr5s6t\n\n                out(x: 200, y: 125, name: \"output\") property(Bool) output_u7v8w9\n\n                instance(x: 0, y: 100, name: \"equal\") equal_x1y2z3 root.Std_k98ojb.Logic.Equal {}\n                characters_7g8h9i.characters -> equal_x1y2z3.left\n                current_2n3o4p -> equal_x1y2z3.right\n                equal_x1y2z3.result -> output_u7v8w9\n            }\n        }\n\n        input_1a2b3c -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> all_same_jk0l1m.items\n        func() {\n            in(x: -50, y: 25, name: \"current\") property(String) current_a4b5c6\n\n            out(x: 150, y: 125, name: \"output\") property(Bool) output_d7e8f9\n\n            instance(x: 0, y: 100, name: \"equal\") equal_g1h2i3 root.Std_k98ojb.Logic.Equal {}\n            characters_7g8h9i.characters -> equal_g1h2i3.left\n            current_a4b5c6 -> equal_g1h2i3.right\n            equal_g1h2i3.result -> output_d7e8f9\n        } -> all_same_jk0l1m.handler\n        all_same_jk0l1m.output_list.length == characters_7g8h9i.characters.length -> output_d4e5f6\n    }\n\n    \n\n    instance(x: -100, y: 50) all_characters_same_test root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -250, y: -50, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 500, y: 100, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -25, name: \"characters\") characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 75, name: \"all same\") all_same_jk0l1m root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -100, y: 25, name: \"current\") property(String) current_2n3o4p\n                in(x: -90, y: 85, name=\"_index\") property(Number) _index_qr5s6t\n\n                out(x: 250, y: 125, name=\"out\") property(Bool) out_u7v8w9\n\n                instance(x: 0, y: 100) equal_x1y2z3 root.Std_k98ojb.Logic.Equal {}\n                characters_7g8h9i.output_list -> all_same_jk0l1m.items\n                current_2n3o4p -> equal_x1y2z3.left\n                input_1a2b3c.characters[0] -> equal_x1y2z3.right\n                equal_x1y2z3.result -> out_u7v8w9\n            }\n        }\n\n        characters_7g8h9i.input -> all_same_jk0l1m.items\n        func() {\n            in(x: -50, y: 150, name=\"length\") property(Number) length_a1b2c3\n\n            out(x: 350, y: 200, name=\"result\") property(Bool) result_d4e5f6\n\n            instance(x: 100, y: 175) equal_g7h8i9 root.Std_k98ojb.Logic.Equal {}\n            length_a1b2c3 -> equal_g7h8i9.left\n            all_same_jk0l1m.output_list.length -> equal_g7h8i9.right\n            equal_g7h8i9.result -> result_d4e5f6\n        } -> all_same_jk0l1m.handler\n\n        out_u7v8w9 -> output_d4e5f6\n    }\n\n    \n\n    instance(x: 100, y: -50) all_characters_same_abc123 root.main.all_characters_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -300, y: -50, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 600, y: 0, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -25, name: \"characters\") characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 75, name: \"all same\") all_same_jk0l1m root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -100, y: 20, name: \"current\") property(String) current_2n3o4p\n                in(x: -90, y: 80, name: \"_index\") property(Number) _index_qr5s6t\n\n                out(x: 200, y: 50, name: \"output\") property(Bool) output_u7v8w9\n\n                instance(x: 30, y: 45, name: \"equal\") equal_x1y2z3 root.Std_k98ojb.Logic.Equal {}\n                characters_7g8h9i.characters -> equal_x1y2z3.left\n                current_2n3o4p -> equal_x1y2z3.right\n                equal_x1y2z3.result -> output_u7v8w9\n            }\n        }\n\n        input_1a2b3c -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> all_same_jk0l1m.items\n        func() {\n            in(x: -50, y: 10, name: \"current\") property(String) current_a1b2c3\n\n            out(x: 150, y: 30, name: \"output\") property(Bool) output_d4e5f6\n\n            instance(x: 20, y: 25, name: \"equal\") equal_g7h8i9 root.Std_k98ojb.Logic.Equal {}\n            current_a1b2c3 -> equal_g7h8i9.left\n            characters_7g8h9i.characters[0] -> equal_g7h8i9.right\n            equal_g7h8i9.result -> output_d4e5f6\n        } -> all_same_jk0l1m.handler\n\n        all_same_jk0l1m.output_list.Length -> output_d4e5f6\n    }\n\n    \n\n    instance(x: -100, y: 50) all_characters_same_abc123 root.main.all_characters_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -250, y: -50, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 550, y: 100, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -20) characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 80) all_same_jk0l1m root.main.all_characters_same_helper {}\n\n        input_1a2b3c -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> all_same_jk0l1m.list\n\n        all_same_jk0l1m.result -> output_d4e5f6\n    }\n\n    func(doc: \"Helper function to check if all elements in a list are the same.\") all_characters_same_helper {\n        in(x: -100, y: 50, name: \"list\") property(List) list_2n3o4p\n\n        out(x: 300, y: 150, name: \"result\") property(Bool) result_qr5st6\n\n        instance(x: 0, y: 100) filter_uv7wx8 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -50, y: 20, name: \"current\") property(String) current_9y1z2a\n            in(x: -30, y: 70, name: \"_index\") property(Number) _index_b3c4d5\n\n            out(x: 150, y: 120, name: \"out\") property(Bool) out_e6f7g8\n\n            current_9y1z2a -> equal_hi9j0 {}\n            list_2n3o4p.first() -> equal_hi9j0.left\n            equal_hi9j0.result -> out_e6f7g8\n        } -> filter_uv7wx8.handler\n        list_2n3o4p -> filter_uv7wx8.items\n\n        filter_uv7wx8.output_list.length == 0 -> result_qr5st6\n    }\n\n    instance(x: -100, y: 50) equal_hi9j0 root.Std_k98ojb.Logic.Equal {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -300, y: -50, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 600, y: 0, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -25, name: \"characters\") characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 75, name: \"all same\") ifexpression_j0k1l2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == first\"\n        }\n        instance(x: -100, y: 150) for_m3n4o5 root.Std_k98ojb.Std.For {}\n        getter(x: 200, y: 225, name: \"getter_p6q7r8\") getter_p6q7r8 = first\n        setter(x: 350, y: -75, name: \"setter_s9t0u1\") setter_s9t0u1 = first\n\n        input_1a2b3c -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> for_m3n4o5.items\n        for_m3n4o5.item -> ifexpression_j0k1l2.gen_2\n        for_m3n4o5.index -> ifexpression_j0k1l2.gen_0\n        getter_p6q7r8.value -> ifexpression_j0k1l2.gen_1\n        for_m3n4o5.onItem -> ifexpression_j0k1l2.execute\n        for_m3n4o5.done -> output_d4e5f6\n\n        ifexpression_j0k1l2.value -> output_d4e5f6\n        ifexpression_j0k1l2.then -> setter_s9t0u1.execute\n        for_m3n4o5.item -> setter_s9t0u1.new_value\n        setter_s9t0u1.continue -> for_m3n4o5.next\n    }\n\n    \n\n    instance(x: 100, y: -50) all_characters_same_abc123 root.main.all_characters_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -300, y: -100, name: \"input\") property(String) input_string\n\n        out(x: 500, y: -50, name: \"output\") property(Bool) output_result\n\n        instance(x: -150, y: -80) characters_1a2b3c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 100, y: -20) all_same_d4e5f6 root.main.all_characters_same_helper {}\n\n        input_string -> characters_1a2b3c.input\n        characters_1a2b3c.characters -> all_same_d4e5f6.list\n\n        all_same_d4e5f6.result -> output_result\n    }\n\n    func(doc: \"Helper function to check if all elements in a list are the same.\") all_characters_same_helper {\n        in(x: -100, y: 0, name: \"list\") property(List) input_list\n\n        out(x: 200, y: 50, name: \"result\") property(Bool) result\n\n        instance(x: -20, y: 30) map_7g8h9i root.Std_k98ojb.Iteration.Map {}\n        instance(x: 150, y: 70) all_equal_jk0l1m root.main.all_elements_equal {}\n\n        func() {\n            in(x: -50, y: 10, name: \"element\") property(String) element\n\n            out(x: 100, y: 40, name: \"output\") property(String) output\n\n            element -> output\n        } -> map_7g8h9i.handler\n\n        input_list -> map_7g8h9i.items\n        map_7g8h9i.output_list -> all_equal_jk0l1m.list\n\n        all_equal_jk0l1m.result -> result\n    }\n\n    func(doc: \"Checks if all elements in a list are equal.\") all_elements_equal {\n        in(x: -50, y: 10, name: \"list\") property(List) input_list\n\n        out(x: 150, y: 60, name: \"result\") property(Bool) result\n\n        instance(x: 0, y: 30) reduce_n1o2p3 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -20, y: 10, name: \"accumulated\") property(String) accumulated\n            in(x: 0, y: 10, name: \"current\") property(String) current\n\n            out(x: 80, y: 40, name: \"output\") property(String) output\n\n            instance(x: 30, y: 20) equal_q4r5s6 root.Std_k98ojb.Logic.Equal {}\n            accumulated -> equal_q4r5s6.left\n            current -> equal_q4r5s6.right\n\n            equal_q4r5s6.result -> output\n        } -> reduce_n1o2p3.reducer\n\n        input_list -> reduce_n1o2p3.items\n        true -> reduce_n1o2p3.initial_value\n\n        reduce_n1o2p3.output -> result\n    }\n\n    instance(x: -250, y: 50) all_characters_same_9t0u1v root.main.all_characters_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(it: String) Bool {\n                return Std_k98ojb.Strings.IsNumeric(it)\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count.Length\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(it: String) Bool {\n                return Std_k98ojb.Strings.IsNumeric(it)\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count.Length\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 100, y: 0) count_digits_logic root.main.count_digits_logic {}\n\n        characters_node.characters -> count_digits_logic.chars\n        count_digits_logic.digit_count -> digit_count\n    }\n\n    func(doc: \"logic to count digits in a list of characters.\") count_digits_logic {\n        in(x: 0, y: 0, name: \"chars\") property(List) chars\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 200, y: 0) filter_node root.Std_k98ojb.Query.Filter {\n            where: \"Strings.IsNumeric(it)\"\n        }\n        chars -> filter_node.list\n        filter_node.result -> count_digits_logic.digit_count\n    }\n\n    \n    instance(x: -50, y: -100) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(item: String) -> Bool {\n                in property(String) item\n                out property(Bool) is_digit\n\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item -> is_numeric_node.input\n                is_numeric_node.is_numeric -> is_digit\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(it: String) Bool {\n                return Std_k98ojb.Strings.IsNumeric(it)\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count.Length\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(item: String) -> Bool {\n                in property(String) item\n                out property(Bool) is_digit\n\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item -> is_numeric_node.input\n                is_numeric_node.is_numeric -> is_digit\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(item: String) -> Bool {\n                in property(String) item\n                out property(Bool) is_digit\n\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item -> is_numeric_node.input\n                is_numeric_node.is_numeric -> is_digit\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(it: String) Bool {\n                return Std_k98ojb.Strings.IsNumeric(it)\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count.Length\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(item: String) -> Bool {\n                in property(String) item\n                out property(Bool) is_digit\n\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item -> is_numeric_node.input\n                is_numeric_node.is_numeric -> is_digit\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(it: String) Bool {\n                return Std_k98ojb.Strings.IsNumeric(it)\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count.Length\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -300, y: 50, name: \"n\") property(Number) n_3a3116\n\n        out(x: 600, y: 10, name: \"sum\") property(Number) sum_e5f7b\n\n        instance(x: 20, y: 0) pow_1d2c4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 320, y: 130) data_cde0dc  = 3\n        instance(x: 10, y: 140) expression_5f6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n-1\"\n        }\n        instance(x: 290, y: 20) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_1d2c4.second\n        n_3a3116 -> pow_1d2c4.first\n        expression_5f6da6.result -> mul_f892a4.first\n        pow_1d2c4.result -> mul_f892a4.second\n        instance(x: 300, y: -10) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> add_64046c.second\n        mul_f892a4.result -> add_64046c.first\n        n_3a3116 -> expression_5f6da6.gen_0\n        add_64046c.result -> sum_e5f7b\n    }\n\n    \n\n    instance(x: 100, y: -50) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -300, y: 50, name: \"n\") property(Number) n_3a3116\n\n        out(x: 600, y: 10, name: \"sum\") property(Number) sum_e5f7b\n\n        instance(x: 20, y: 0) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 320, y: 130) data_cde0dc  = 4\n        instance(x: 10, y: 140) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"2*i-1\"\n        }\n        instance(x: 290, y: 5) sum_instance root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -110, y: 35, name: \"acc\") property(Number) acc_9f6850\n            in(x: -100, y: 45, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 510, y: 55, name: \"result\") property(Number) result_af09a7\n\n            pow_f892a4.result -> sum_instance.reducer\n            data_cde0dc -> pow_f892a4.y\n            acc_9f6850 -> pow_f892a4.x\n            expression_2d6da6.result -> elem_9f6850\n            n_3a3116 -> expression_2d6da6.gen_1\n            sum_instance.initial_value = 0\n        } -> sum_instance.reducer\n        instance(x: 300, y: -5) generate_range_7e1ce0 root.Std_k98ojb.List.GenerateRange {}\n        n_3a3116 -> generate_range_7e1ce0.to\n        generate_range_7e1ce0.from = 1\n        sum_instance.items = generate_range_7e1ce0.list\n        sum_instance.result -> sum_e5f7b\n    }\n\n    \n\n    instance(x: 100, y: -50) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -280, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 570, y: 10, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 20, y: -5, name: \"fourth_power\") expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"Math.Pow(4*n-3, 4)\"\n        }\n        instance(x: 303, y: 0) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 130) data_cde0dc  = 1\n        instance(x: 12, y: 135) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n-3\"\n        }\n        instance(x: 303, y: -10) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> div_64046c.second\n        expression_2d6da6.result -> div_64046c.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        mul_f892a4.result -> sum_365f7b\n        expression_2d6da6.result -> mul_f892a4.second\n        fourth_power.expression -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_1\n    }\n\n    \n\n    instance(x: 118, y: -25) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -300, y: 50, name: \"n\") property(Number) n_3a3116\n\n        out(x: 600, y: 10, name: \"sum\") property(Number) sum_ebef81\n\n        instance(x: 20, y: 0) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 30, y: 50) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        instance(x: 250, y: 0) add_64046c root.Std_k98ojb.Math.Add {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 4\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_f892a4.first\n        data_cde0dc -> pow_f892a4.second\n        add_64046c.result -> sum_ebef81\n        pow_f892a4.result -> add_64046c.second\n\n        instance(x: 10, y: -50) for_loop root.Std_k98ojb.For {\n            items: List.GenerateRange(from: 1, to: n_3a3116)\n        }\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item_9f6850\n\n            out(x: 515, y: 44, name: \"continue\") trigger() continue_af09a7\n\n            instance(x: 310, y: 35) `` `` root.main.sum_fourth_power {}\n            item_9f6850 -> ``.n_3a3116\n            ``.sum_ebef81 -> add_64046c.first\n        } -> for_loop.on_item\n    }\n\n    \n\n    instance(x: -80, y: 160) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -300, y: 50, name: \"n\") property(Number) n_3a3116\n\n        out(x: 600, y: 10, name: \"sum\") property(Number) sum_e5f7b\n\n        instance(x: 20, y: 0) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 320, y: 130) data_cde0dc  = 4\n        instance(x: 10, y: 140) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"2*i-1\"\n        }\n        instance(x: 290, y: 5) sum_64046c root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -110, y: 35, name: \"acc\") property(Number) acc_9f6850\n            in(x: -100, y: 45, name: \"elem\") property(Number) elem_af09a7\n\n            out(x: 510, y: 55, name: \"result\") property(Number) result_bf09a7\n\n            pow_f892a4.result -> sum_64046c.handler.first\n            acc_9f6850 -> sum_64046c.handler.second\n            elem_af09a7 -> expression_2d6da6.gen_0\n            data_cde0dc -> pow_f892a4.y\n            expression_2d6da6.result -> pow_f892a4.x\n        } -> sum_64046c.reducer\n        instance(x: 10, y: -50) generate_range_3b7e8f root.Std_k98ojb.List.GenerateRange {}\n        n_3a3116 -> generate_range_3b7e8f.to\n        1 -> generate_range_3b7e8f.from\n        sum_64046c.result -> sum_e5f7b\n        generate_range_3b7e8f.listWithItem -> sum_64046c.items\n    }\n\n    \n\n    instance(x: 100, y: -20) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> add_64046c.second\n        pow_f892a4.result -> add_64046c.first\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -300, y: 50, name: \"n\") property(Number) n_3a3116\n\n        out(x: 600, y: 10, name: \"sum\") property(Number) sum_ebef81\n\n        instance(x: 20, y: 0) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 40, y: 50) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 350, y: 150) data_cde0dc  = 4\n        instance(x: 10, y: 160) sum_64046c root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -100, y: 60, name: \"acc\") property(Number) acc_af09a7\n\n                in(x: -80, y: 70, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 500, y: 80, name: \"result\") property(Number) result_3bc2ae\n\n                instance(x: 120, y: 65) pow_1088d5 root.Std_k98ojb.Math.Pow {}\n                data_instance(x: 330, y: 165) data_3c713b  = 4\n                pow_1088d5.result -> add_f892a4.second\n                elem_9f6850 -> pow_1088d5.first\n                data_3c713b -> pow_1088d5.second\n                instance(x: 310, y: 75) add_2d44da root.Std_k98ojb.Math.Add {}\n                acc_af09a7 -> add_2d44da.first\n                pow_1088d5.result -> add_2d44da.second\n                add_2d44da.result -> result_3bc2ae\n            }\n        }\n\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_f892a4.first\n        data_cde0dc -> pow_f892a4.second\n        sum_64046c.items -> List.GenerateRange(from: 1, to: n_3a3116)\n        pow_f892a4.result -> sum_64046c.initial_value\n        sum_64046c.result -> sum_ebef81\n    }\n\n    \n\n    instance(x: 100, y: -50) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 166, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: 145, name: \"sum\") property(Number) sum_ebef81\n\n        instance(x: 0, y: 0) expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 46, y: -383, name: \"fourth_power\") pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 394, y: -339) data_3c713b  = [sum]\n        instance(x: 62, y: -226, name: \"sum\") add_2d44da root.Std_k98ojb.Math.Add {}\n        data_3c713b -> sum_ebef81\n        n_c88d35 -> expression_634b7e.gen_0\n        pow_f892a4.result -> add_2d44da.second\n        expression_634b7e.result -> pow_f892a4.first\n        4 -> pow_f892a4.y\n        add_2d44da.result -> data_3c713b.sum\n        n_c88d35 -> add_2d44da.first\n    }\n\n    \n\n    instance(x: -55, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -300, y: 50, name: \"n\") property(Number) n_3a3116\n\n        out(x: 600, y: 10, name: \"sum\") property(Number) sum_ebef81\n\n        instance(x: 20, y: 0) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 40, y: 50) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 300, y: 100) data_cde0dc  = 4\n        instance(x: 10, y: 150) sum_64046c root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -120, y: 70, name: \"accumulated\") property(Number) accumulated_af09a7\n\n                in(x: -110, y: 80, name: \"current\") property(Number) current_3bc2ae\n\n                out(x: 500, y: 90, name: \"result\") property(Number) result_365f7b\n\n                instance(x: 150, y: 75) add_1088d5 root.Std_k98ojb.Math.Add {}\n                accumulated_af09a7 -> add_1088d5.first\n                current_3bc2ae -> add_1088d5.second\n                add_1088d5.result -> result_365f7b\n            }\n        }\n\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.y -> data_cde0dc\n        expression_2d6da6.result -> pow_f892a4.x\n        sum_64046c.items -> List.GenerateRange {\n            from: 1\n            to: n_3a3116 + 1\n        }\n        pow_f892a4.result -> sum_64046c.reducer.current\n        0 -> sum_64046c.reducer.accumulated\n        sum_64046c.result -> sum_ebef81\n    }\n\n    \n\n    instance(x: 100, y: -50) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -300, y: 50, name: \"n\") property(Number) n_3a3116\n\n        out(x: 600, y: 10, name: \"sum\") property(Number) sum_e5f7b\n\n        instance(x: 20, y: 0) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 320, y: 130) data_cde0dc  = 4\n        instance(x: 10, y: 140) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"2*i-1\"\n        }\n        instance(x: 290, y: 5) sum_instance root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -110, y: 35, name: \"acc\") property(Number) acc_9f6850\n            in(x: -100, y: 45, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 510, y: 55, name: \"result\") property(Number) result_af09a7\n\n            pow_f892a4.result -> sum_instance.reducer\n            data_cde0dc -> pow_f892a4.y\n            acc_9f6850 -> pow_f892a4.x\n            expression_2d6da6.result -> elem_9f6850\n            n_3a3116 -> expression_2d6da6.gen_1\n            sum_instance.initial_value = 0\n        } -> sum_instance.reducer\n        instance(x: 300, y: -5) generate_range_7e1ce0 root.Std_k98ojb.List.GenerateRange {}\n        n_3a3116 -> generate_range_7e1ce0.to\n        generate_range_7e1ce0.from = 1\n        sum_instance.items = generate_range_7e1ce0.list\n        sum_instance.result -> sum_e5f7b\n    }\n\n    \n\n    instance(x: 100, y: -50) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_3f1b9d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_ba8c2e\n\n        instance(x: 94, y: -105) mul_7f4b5a root.Std_k98ojb.Math.Mul {}\n        side_length_3f1b9d -> mul_7f4b5a.first\n        6 -> mul_7f4b5a.second\n        instance(x: 94, y: -30) pow_d8e2c0 root.Std_k98ojb.Math.Pow {}\n        side_length_3f1b9d -> pow_d8e2c0.x\n        2 -> pow_d8e2c0.y\n        mul_7f4b5a.result -> surface_area_ba8c2e\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_1d9f3b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -219, y: 55, name: \"side_length\") property(Number) side_length_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side_length * side_length\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        \n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_f892a4.second\n        data_cde0dc -> mul_f892a4.first\n        mul_f892a4.result -> mul_64046c.first\n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_64046c.second\n        \n        mul_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_f9cc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -218, y: 55, name: \"side_length\") property(Number) side_length_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side_length * side_length\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        \n        data_cde0dc -> mul_64046c.first\n        expression_2d6da6.result -> mul_64046c.second\n        mul_f892a4.result -> mul_64046c.first\n        \n        side_length_3a3116 -> expression_2d6da6.gen_0\n        side_length_3a3116 -> mul_f892a4.first\n\n        mul_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -219, y: 55, name: \"side_length\") property(Number) side_length_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side_length * side_length\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        \n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_f892a4.second\n        data_cde0dc -> mul_f892a4.first\n        mul_f892a4.result -> mul_64046c.first\n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_64046c.second\n        \n        mul_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_f9cc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -219, y: 55, name: \"side_length\") property(Number) side_length_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side_length * side_length\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        \n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_f892a4.second\n        data_cde0dc -> mul_f892a4.first\n        mul_f892a4.result -> mul_64046c.first\n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_64046c.second\n        \n        mul_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_f9cc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_3f8b2d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_b9c7e1\n\n        instance(x: 94, y: -105) mul_5a4f6d root.Std_k98ojb.Math.Mul {}\n        side_length_3f8b2d -> mul_5a4f6d.first\n        6 -> mul_5a4f6d.second\n        instance(x: 94, y: -35) pow_7c9e1f root.Std_k98ojb.Math.Pow {}\n        side_length_3f8b2d -> pow_7c9e1f.x\n        2 -> pow_7c9e1f.y\n        mul_5a4f6d.result -> surface_area_b9c7e1\n        pow_7c9e1f.result -> mul_5a4f6d.first\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_8b3f2d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -219, y: 55, name: \"side_length\") property(Number) side_length_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side_length * side_length\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        \n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_f892a4.second\n        data_cde0dc -> mul_f892a4.first\n        mul_f892a4.result -> mul_64046c.first\n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_64046c.second\n        \n        mul_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_f9cc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_3f8b2d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_b9c7e1\n\n        instance(x: 94, y: -105) mul_5a4f6d root.Std_k98ojb.Math.Mul {}\n        side_length_3f8b2d -> mul_5a4f6d.first\n        6 -> mul_5a4f6d.second\n        instance(x: 92, y: -22) pow_7c9e1f root.Std_k98ojb.Math.Pow {}\n        side_length_3f8b2d -> pow_7c9e1f.x\n        2 -> pow_7c9e1f.y\n        mul_5a4f6d.result -> surface_area_b9c7e1\n        pow_7c9e1f.result -> mul_5a4f6d.first\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_8b3f2d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -219, y: 55, name: \"side_length\") property(Number) side_length_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side_length * side_length\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        \n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_f892a4.second\n        data_cde0dc -> mul_f892a4.first\n        mul_f892a4.result -> mul_64046c.first\n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_64046c.second\n        \n        mul_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_f9cc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -219, y: 55, name: \"side_length\") property(Number) side_length_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side_length * side_length\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        \n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_f892a4.second\n        data_cde0dc -> mul_f892a4.first\n        mul_f892a4.result -> mul_64046c.first\n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_64046c.second\n        \n        mul_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_f9cc3d root.main.cube_surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -569, y: 438, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % 2 == 0)\"\n        }\n        \n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> output_f3db9f\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 352, y: -493) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_8cb3f6 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> modulo_7b3b9b.value\n        2 -> modulo_7b3b9b.divisor\n\n        modulo_7b3b9b.result -> if_8cb3f6.predicate\n        if_8cb3f6.then -> output_f3db9f\n        false -> if_8cb3f6.else\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % 2 == 0)\"\n        }\n        \n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> output_f3db9f\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 352, y: -493) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_8cb3f6 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> modulo_7b3b9b.value\n        2 -> modulo_7b3b9b.divisor\n\n        modulo_7b3b9b.result -> if_8cb3f6.predicate\n        if_8cb3f6.then -> output_f3db9f\n        false -> if_8cb3f6.else\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 352, y: -493) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_8cb3f6 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> modulo_7b3b9b.value\n        2 -> modulo_7b3b9b.divisor\n\n        modulo_7b3b9b.result -> if_8cb3f6.predicate\n        if_8cb3f6.then -> output_f3db9f\n        false -> if_8cb3f6.else\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % 2 == 0)\"\n        }\n        \n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> output_f3db9f\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 352, y: -493) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_8cb3f6 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> modulo_7b3b9b.value\n        2 -> modulo_7b3b9b.divisor\n\n        modulo_7b3b9b.result -> if_8cb3f6.predicate\n        if_8cb3f6.then -> output_f3db9f\n        false -> if_8cb3f6.else\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % 2 == 0)\"\n        }\n        \n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> output_f3db9f\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 352, y: -493) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_8cb3f6 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> modulo_7b3b9b.value\n        2 -> modulo_7b3b9b.divisor\n\n        modulo_7b3b9b.result -> if_8cb3f6.predicate\n        if_8cb3f6.then -> output_f3db9f\n        false -> if_8cb3f6.else\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 352, y: -493) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_8cb3f6 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> modulo_7b3b9b.value\n        2 -> modulo_7b3b9b.divisor\n\n        modulo_7b3b9b.result -> if_8cb3f6.predicate\n        if_8cb3f6.then -> output_f3db9f\n        false -> if_8cb3f6.else\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -230, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3f5b7a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_repeated_9d8c2e root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"First repeated character\") ``First repeated character_1a3f7b`` root.Std_k98ojb.Iteration.Find {}\n\n        input_string -> characters_3f5b7a.input\n        characters_3f5b7a.characters -> find_repeated_9d8c2e.items\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_5b6d8f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) count_greater_than_1_3c2e7a root.Std_k98ojb.Math.Expression {}\n\n            current_char -> contains_5b6d8f.input\n            characters_3f5b7a.characters -> contains_5b6d8f.contains\n\n            expression: \"contains.count > 1\"\n            contains_5b6d8f.result -> count_greater_than_1_3c2e7a.gen_0\n            count_greater_than_1_3c2e7a.result -> is_repeated\n        } -> find_repeated_9d8c2e.predicate\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_first_occurrence\n\n            instance(x: 112, y: 80) contains_5b6d8f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n\n            current_char -> contains_5b6d8f.input\n            characters_3f5b7a.characters -> contains_5b6d8f.contains\n\n            0 -> equal_a54bdc.right\n            contains_5b6d8f.index -> equal_a54bdc.left\n            equal_a54bdc.result -> is_first_occurrence\n        } -> ``First repeated character_1a3f7b``.predicate\n\n        find_repeated_9d8c2e.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -300, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 600, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3f8b7a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 300, y: 50, name: \"Find first repeated character\") find_first_repeated_9d2c4e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -100) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n\n        input_string -> characters_3f8b7a.input\n        characters_3f8b7a.characters -> find_first_repeated_9d2c4e.items\n\n        func() {\n            in(x: -200, y: 0, name: \"current\") property(String) current_char\n\n            out(x: 500, y: 1, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 100, y: -50) ``Find first repeated character_1`` root.Std_k98ojb.Iteration.Find {}\n            contains_d42dce.input -> ``Find first repeated character_1``.items\n            current_char -> contains_d42dce.contains\n            characters_3f8b7a.characters -> contains_d42dce.input\n\n            contains_d42dce.result -> is_repeated\n        } -> find_first_repeated_9d2c4e.predicate\n\n        find_first_repeated_9d2c4e.item -> result_0\n    }\n\n    \n\n    instance(x: -100, y: 50) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -200, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 600, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3f8a7d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 250, y: 60) find_repeated_9c4e2a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 450, y: -50) if_1b5c3f root.Std_k98ojb.Std.If {}\n\n        input_string -> characters_3f8a7d.input\n        characters_3f8a7d.characters -> find_repeated_9c4e2a.items\n\n        func() {\n            in(x: -100, y: 30, name: \"current\") property(String) current_char\n\n            out(x: 550, y: 31, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 50, y: 20) contains_7b8d2e root.Std_k98ojb.Strings.Contains {}\n            instance(x: 200, y: 25) list_contains_4f3a1c root.Std_k98ojb.List.Contains {}\n\n            current_char -> contains_7b8d2e.input\n            characters_3f8a7d.characters -> contains_7b8d2e.contains\n\n            contains_7b8d2e.result -> is_repeated\n        } -> find_repeated_9c4e2a.predicate\n\n        func() {\n            in(x: -100, y: 30, name: \"current\") property(String) current_char\n\n            out(x: 550, y: 31, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 50, y: 20) list_contains_4f3a1c root.Std_k98ojb.List.Contains {}\n\n            current_char -> list_contains_4f3a1c.item\n            characters_3f8a7d.characters -> list_contains_4f3a1c.list\n\n            list_contains_4f3a1c.result -> is_repeated\n        } -> if_1b5c3f.predicate\n\n        find_repeated_9c4e2a.item -> if_1b5c3f.then\n        if_1b5c3f.else -> result_0\n        if_1b5c3f.then -> result_0\n    }\n\n    \n\n    instance(x: 100, y: 50) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -300, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 600, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3f8b7a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 250, y: 60) find_repeated_9d4e2c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 500, y: -50) if_1b6e3f root.Std_k98ojb.Std.If {}\n\n        input_string -> characters_3f8b7a.input\n        characters_3f8b7a.characters -> find_repeated_9d4e2c.items\n\n        func() {\n            in(x: -150, y: 40, name: \"elem\") property(String) elem_1\n            out(x: 450, y: 50, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 100, y: 30) contains_7f8b3c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 300, y: 40) list_contains_4d9e1a root.Std_k98ojb.List.Contains {}\n\n            elem_1 -> contains_7f8b3c.input\n            characters_3f8b7a.characters -> contains_7f8b3c.contains\n\n            contains_7f8b3c.result -> list_contains_4d9e1a.item\n            find_repeated_9d4e2c.items -> list_contains_4d9e1a.list\n\n            list_contains_4d9e1a.result -> bool_2\n        } -> find_repeated_9d4e2c.predicate\n\n        if_1b6e3f.predicate -> find_repeated_9d4e2c.found\n        find_repeated_9d4e2c.item -> result_0\n    }\n\n    \n\n    instance(x: 100, y: 150) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -300, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 600, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3f5b7a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 300, y: 50, name: \"Find first repeated character\") find_first_repeated_9d8c2e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -100) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n\n        input_string -> characters_3f5b7a.input\n        characters_3f5b7a.characters -> find_first_repeated_9d8c2e.items\n\n        func() {\n            in(x: -200, y: 0, name: \"current\") property(String) current_char\n\n            out(x: 500, y: 1, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 100, y: -50) slice_8b3c2d root.Std_k98ojb.List.Slice {}\n            instance(x: 400, y: 0) count_7f4a9e root.Std_k98ojb.Iteration.Filter {}\n\n            current_char -> contains_d42dce.input\n            characters_3f5b7a.characters -> slice_8b3c2d.list\n            slice_8b3c2d.start -> 1\n            slice_8b3c2d.end -> -1\n\n            func() {\n                in(x: -100, y: -50, name: \"item\") property(String) item\n\n                out(x: 300, y: -49, name: \"bool\") property(Bool) is_equal\n\n                item -> contains_d42dce.contains\n                current_char -> contains_d42dce.input\n            } -> count_7f4a9e.handler\n\n            count_7f4a9e.output_list.length -> slice_8b3c2d.end\n            1 -> Math.GreaterThan.left\n            count_7f4a9e.output_list.length -> Math.GreaterThan.right\n            Math.GreaterThan.result -> is_repeated\n        } -> find_first_repeated_9d8c2e.predicate\n\n        find_first_repeated_9d8c2e.item -> result_0\n    }\n\n    \n\n    instance(x: -100, y: 50) FirstRepeatedChar_f5b7a root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -250, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3f5b7a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_repeated_9d8c2e root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"seen\") List.Empty {}\n        characters_3f5b7a.characters -> find_repeated_9d8c2e.items\n        input_string -> characters_3f5b7a.input\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) List.Contains contains_1b2c3d {}\n            instance(x: 415, y: 86) Settter_7e2b42 root.Std_k98ojb.List.Add {}\n            current_char -> contains_1b2c3d.item\n            find_repeated_9d8c2e.seen -> contains_1b2c3d.list\n            contains_1b2c3d.result -> is_repeated\n\n            instance(x: 421, y: 79) IfExpression if_expression {}\n            if_expression.expression = \"is_repeated ? current_char : null\"\n            is_repeated -> if_expression.input.is_repeated\n            current_char -> if_expression.input.current_char\n            if_expression.value -> result_0\n\n            List.Contains {\n                list: find_repeated_9d8c2e.seen,\n                item: current_char\n            } -> contains_1b2c3d.result\n\n            Settter_7e2b42 {\n                list: find_repeated_9d8c2e.seen,\n                item: current_char\n            } -> find_repeated_9d8c2e.seen\n        } -> find_repeated_9d8c2e.predicate\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -300, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 600, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3f5b7a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 300, y: 50, name: \"Find first repeated character\") find_first_repeated_char_f8d2e4 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -100) contains_1a3c9f root.Std_k98ojb.Strings.Contains {}\n\n        input_string -> characters_3f5b7a.input\n        characters_3f5b7a.characters -> find_first_repeated_char_f8d2e4.items\n\n        func() {\n            in(x: -200, y: 0, name: \"current\") property(String) current_character\n\n            out(x: 500, y: 1, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 50, y: -20) ``Find first repeated character_2b4d8e`` root.Std_k98ojb.Iteration.Find {}\n            instance(x: 150, y: -10) contains_9f3a7c root.Std_k98ojb.Strings.Contains {}\n\n            current_character -> contains_9f3a7c.input\n            characters_3f5b7a.characters -> ``Find first repeated character_2b4d8e``.items\n\n            func() {\n                in(x: -100, y: 0, name: \"item\") property(String) item\n\n                out(x: 400, y: 1, name: \"bool\") property(Bool) is_before_current\n\n                instance(x: 50, y: -20) ``Find first repeated character_2b4d8e`` root.Std_k98ojb.Iteration.Find {}\n                contains_9f3a7c.input -> item\n                current_character -> contains_9f3a7c.contains\n            } -> is_before_current\n\n            is_before_current -> contains_9f3a7c.contains\n            contains_9f3a7c.result -> is_repeated\n        } -> find_first_repeated_char_f8d2e4.predicate\n\n        find_first_repeated_char_f8d2e4.item -> result_0\n    }\n\n    \n\n    instance(x: -100, y: 50) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -250, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3f8b7a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_repeated_9d4e2c root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"seen\") List.Empty {}\n        characters_3f8b7a.output -> find_repeated_9d4e2c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) List.Contains {}\n            instance(x: 415, y: 86) Set_1f8b7a root.Std_k98ojb.Sets.Intersection {}\n            current_char -> List.Contains.item\n            seen -> List.Contains.list\n            List.Contains.result -> is_repeated\n\n            if(is_repeated) {\n                current_char -> result_0\n            }\n        } -> find_repeated_9d4e2c.predicate\n        input_string -> characters_3f8b7a.input\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -300, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 600, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3f5b8a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 300, y: 60) find_repeated_9d7c2e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 300, y: -100) if_1a4b3f root.Std_k98ojb.Std.If {}\n\n        input_string -> characters_3f5b8a.input\n        characters_3f5b8a.characters -> find_repeated_9d7c2e.items\n\n        func() {\n            in(x: -200, y: 40, name: \"current\") property(String) current_char\n\n            out(x: 700, y: 41, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 100, y: 30) contains_8b4c2d root.Std_k98ojb.Strings.Contains {}\n            instance(x: 400, y: 40) list_contains_5f6a3e root.Std_k98ojb.List.Contains {}\n\n            current_char -> contains_8b4c2d.input\n            characters_3f5b8a.characters -> contains_8b4c2d.contains\n\n            contains_8b4c2d.result -> is_repeated\n        } -> find_repeated_9d7c2e.predicate\n\n        func() {\n            in(x: -200, y: 40, name: \"current\") property(String) current_char\n\n            out(x: 700, y: 41, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 100, y: 30) list_contains_5f6a3e root.Std_k98ojb.List.Contains {}\n\n            current_char -> list_contains_5f6a3e.item\n            characters_3f5b8a.characters -> list_contains_5f6a3e.list\n\n            list_contains_5f6a3e.result -> is_repeated\n        } -> if_1a4b3f.predicate\n\n        find_repeated_9d7c2e.item -> if_1a4b3f.then\n        if_1a4b3f.else -> result_0\n        if_1a4b3f.then -> result_0\n    }\n\n    \n\n    instance(x: 100, y: 150) FirstRepeatedChar_7c8d2e root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -300, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 600, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5f8b7a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 250, y: 50) find_first_repeat_3d9e2c root.main.find_first_repeat {}\n        instance(x: -100, y: 150) if_4c6b1d root.Std_k98ojb.Std.If {}\n\n        input_string -> characters_5f8b7a.input\n        characters_5f8b7a.characters -> find_first_repeat_3d9e2c.list\n\n        func() {\n            in(x: -150, y: 100, name: \"item\") property(String) item_1\n            out(x: 450, y: 101, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 50, y: 90) contains_7b8c3e root.Std_k98ojb.Strings.Contains {}\n            instance(x: 200, y: 95) list_contains_9f4d1a root.Std_k98ojb.List.Contains {}\n\n            item_1 -> contains_7b8c3e.input\n            characters_5f8b7a.characters -> contains_7b8c3e.contains\n\n            contains_7b8c3e.result -> list_contains_9f4d1a.item\n            find_first_repeat_3d9e2c.seen_items -> list_contains_9f4d1a.list\n\n            list_contains_9f4d1a.result -> bool_2\n        } -> find_first_repeat_3d9e2c.predicate\n\n        find_first_repeat_3d9e2c.item -> if_4c6b1d.then\n        \"\" -> if_4c6b1d.else\n        if_4c6b1d.result -> result_0\n    }\n\n    func(doc: \"Finds the first repeated item in a list.\") find_first_repeat {\n        in property(List) list\n\n        out property(Any) item\n\n        setter(x: 0, y: 0, name: \"seen_items\") seen_items = []\n\n        instance(x: -50, y: 100) filter_8b3c2d root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -150, y: 90, name: \"elem\") property(Any) elem\n\n            out(x: 450, y: 91, name: \"bool\") property(Bool) bool_1\n\n            instance(x: 50, y: 80) list_contains_9f4d1a root.Std_k98ojb.List.Contains {}\n            elem -> list_contains_9f4d1a.item\n            seen_items.value -> list_contains_9f4d1a.list\n\n            list_contains_9f4d1a.result -> bool_1\n        } -> filter_8b3c2d.handler\n\n        func() {\n            in(x: -150, y: 90, name: \"elem\") property(Any) elem\n\n            seen_items.value -> seen_items.new_value\n            list.Add(seen_items.value, elem) -> seen_items.listWithItem\n            seen_items.listWithItem -> seen_items.value\n        } -> filter_8b3c2d.onItem\n\n        filter_8b3c2d.output_list -> item\n    }\n\n    instance(x: 100, y: 200) first_repeated_char_instance root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -100, y: -200) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it != first_min\"\n        }\n        list_abed4a -> filter_7b3b7b.list\n        first_min_9f7759 -> filter_7b3b7b.first_min\n        filter_7b3b7b.result -> filtered_list_f9110a\n\n        \n        instance(x: -50, y: -150) min_second_c3e343 root.Std_k98ojb.List.Min {}\n        filtered_list_f9110a -> min_second_c3e343.items\n        min_second_c3e343.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_RAG_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15912,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_3f9b8a\n        in(x: -310, y: 20, name: \"list2\") property(List) list2_7d4c6e\n\n        out(x: 600, y: -140, name: \"output\") property(Bool) output_b5c1d3\n\n        instance(x: -150, y: -130) intersection_9f8b2a root.Std_k98ojb.Sets.Intersection {}\n        list1_3f9b8a -> intersection_9f8b2a.left\n        list2_7d4c6e -> intersection_9f8b2a.right\n        instance(x: 250, y: -140) notempty_5c3d8b root.Std_k98ojb.List.NotEmpty {}\n        intersection_9f8b2a.intersect -> notempty_5c3d8b.list\n        notempty_5c3d8b.isEmpty -> output_b5c1d3\n    }\n\n    \n\n    instance(x: 100, y: -50) has_common_element_instance root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_3f8b2a\n        in(x: -310, y: 20, name: \"list2\") property(List) list2_7d9c4e\n\n        out(x: 600, y: -140, name: \"output\") property(Bool) output_b5c6d3\n\n        instance(x: -180, y: -130) intersection_1a2b3c root.Std_k98ojb.Sets.Intersection {}\n        list1_3f8b2a -> intersection_1a2b3c.left\n        list2_7d9c4e -> intersection_1a2b3c.right\n\n        instance(x: 320, y: -120) notempty_d4e5f6 root.Std_k98ojb.List.NotEmpty {}\n        intersection_1a2b3c.intersect -> notempty_d4e5f6.list\n        notempty_d4e5f6.isEmpty -> output_b5c6d3\n    }\n\n    \n\n    instance(x: 50, y: -70) has_common_element_instance root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -450, y: -210, name: \"list1\") property(List) list1_3f8b2a\n        in(x: -460, y: 30, name: \"list2\") property(List) list2_7d9c4e\n\n        out(x: 1220, y: 5, name: \"output\") property(Bool) output_b9c8de\n\n        instance(x: -300, y: -205, name: \"intersection\") intersection_1a3b6f root.Std_k98ojb.Sets.Intersection {}\n        list1_3f8b2a -> intersection_1a3b6f.left\n        list2_7d9c4e -> intersection_1a3b6f.right\n        instance(x: 850, y: -207) notempty_f5c8d2 root.Std_k98ojb.List.NotEmpty {}\n        intersection_1a3b6f.intersect -> notempty_f5c8d2.list\n        notempty_f5c8d2.isEmpty -> output_b9c8de\n    }\n\n    \n\n    instance(x: -290, y: -10) has_common_element_instance root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_1f846b\n        in(x: -310, y: -160, name: \"list2\") property(List) list2_c62075\n\n        out(x: 500, y: -140, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -200, y: -100) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_4e8c54.left\n        list2_c62075 -> intersection_4e8c54.right\n        instance(x: 300, y: -120) notempty_4524be root.Std_k98ojb.List.NotEmpty {}\n        intersection_4e8c54.intersect -> notempty_4524be.list\n        notempty_4524be.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 100, y: -50) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_1f846b\n        in(x: -310, y: -130, name: \"list2\") property(List) list2_c62075\n\n        out(x: 400, y: -140, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -200, y: -100) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_4e8c54.left\n        list2_c62075 -> intersection_4e8c54.right\n        instance(x: 50, y: -120) notempty_75283f root.Std_k98ojb.List.NotEmpty {}\n        intersection_4e8c54.intersect -> notempty_75283f.list\n        notempty_75283f.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 100, y: -50) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -285, y: -86, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        list1_1f846b -> intersection_c7c7e6.left\n        list2_c62075 -> intersection_c7c7e6.right\n\n        intersection_c7c7e6.intersect -> not_75283f.input\n        not_75283f.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_3f8b2a\n        in(x: -310, y: 20, name: \"list2\") property(List) list2_7d9c4e\n\n        out(x: 600, y: -140, name: \"output\") property(Bool) output_b5c6d3\n\n        instance(x: -180, y: -130) intersection_1a2b3c root.Std_k98ojb.Sets.Intersection {}\n        list1_3f8b2a -> intersection_1a2b3c.left\n        list2_7d9c4e -> intersection_1a2b3c.right\n\n        instance(x: 320, y: -120) notempty_d4e5f6 root.Std_k98ojb.List.NotEmpty {}\n        intersection_1a2b3c.intersect -> notempty_d4e5f6.list\n        notempty_d4e5f6.isEmpty -> output_b5c6d3\n    }\n\n    \n\n    instance(x: 50, y: -70) has_common_element_instance root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -450, y: -210, name: \"list1\") property(List) list1_3f8b2a\n        in(x: -460, y: 30, name: \"list2\") property(List) list2_7d9c4e\n\n        out(x: 1220, y: 5, name: \"output\") property(Bool) output_b6c1d3\n\n        instance(x: -300, y: -205, name: \"intersection\") intersection_8f4b2a root.Std_k98ojb.Sets.Intersection {}\n        list1_3f8b2a -> intersection_8f4b2a.left\n        list2_7d9c4e -> intersection_8f4b2a.right\n        instance(x: 850, y: -207) notempty_5d6f3b root.Std_k98ojb.List.NotEmpty {}\n        intersection_8f4b2a.intersect -> notempty_5d6f3b.list\n        notempty_5d6f3b.isEmpty -> output_b6c1d3\n    }\n\n    \n\n    instance(x: -290, y: -10) has_common_element_instance root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_1f846b\n        in(x: -310, y: -160, name: \"list2\") property(List) list2_c62075\n\n        out(x: 500, y: -140, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -200, y: -100) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_4e8c54.left\n        list2_c62075 -> intersection_4e8c54.right\n        instance(x: 300, y: -120) notempty_4524be root.Std_k98ojb.List.NotEmpty {}\n        intersection_4e8c54.intersect -> notempty_4524be.list\n        notempty_4524be.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 100, y: -50) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_1f846b\n        in(x: -310, y: -160, name: \"list2\") property(List) list2_c62075\n\n        out(x: 500, y: -140, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -200, y: -100) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_4e8c54.left\n        list2_c62075 -> intersection_4e8c54.right\n        instance(x: 300, y: -120) notempty_4524be root.Std_k98ojb.List.NotEmpty {}\n        intersection_4e8c54.intersect -> notempty_4524be.list\n        notempty_4524be.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 100, y: -50) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -465, y: -235, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 752, y: 93) filter_consecutive_numbers root.Std_k98ojb.Query.Filter {\n            where: \"index < list.length - 1 && (list[index + 1] - list[index]) == 1\"\n        }\n        \n        list_3af6ba -> filter_consecutive_numbers.list\n        filter_consecutive_numbers.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -485, y: 30, name: \"list\") property(List) input_list\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_result\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_result.execute\n        ifexpression_875761.value -> output_result\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        input_list -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_result.execute\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_list -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        output_result.execute -> setter_38e107.continue\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -485, y: 30, name: \"list\") property(List) input_list\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_result\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_result.execute\n        ifexpression_875761.value -> output_result\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        input_list -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_result.execute\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_list -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        output_result.execute -> setter_38e107.continue\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -465, y: -235, name: \"list\") property(List) list_07cae4\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < list.Length - 1 && Math.Abs(list[index] - list[index + 1]) == 1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_8d07dc\n        ifexpression_875761.value -> output_8d07dc\n        list_07cae4 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_8d07dc\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_fc79d5 root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -465, y: -235, name: \"list\") property(List) list_07cae4\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < list.Length - 1 && Math.Abs(list[index] - list[index + 1]) == 1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_8d07dc\n        ifexpression_875761.value -> output_8d07dc\n        list_07cae4 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_8d07dc\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_fc79d5 root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -485, y: 30, name: \"list\") property(List) input_list\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_result\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_result.execute\n        ifexpression_875761.value -> output_result\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        input_list -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_result.execute\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_list -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        output_result.execute -> setter_38e107.continue\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -485, y: 30, name: \"list\") property(List) input_list\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_result\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_result.execute\n        ifexpression_875761.value -> output_result\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        input_list -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_result.execute\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_list -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        output_result.execute -> setter_38e107.continue\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -485, y: 30, name: \"list\") property(List) input_list\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_result\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_result.execute\n        ifexpression_875761.value -> output_result\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        input_list -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_result.execute\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_list -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        output_result.execute -> setter_38e107.continue\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -465, y: -235, name: \"list\") property(List) list_07cae4\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < list.Length - 1 && Math.Abs(list[index] - list[index + 1]) == 1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_8d07dc\n        ifexpression_875761.value -> output_8d07dc\n        list_07cae4 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_8d07dc\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_fc79d5 root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -465, y: -235, name: \"list\") property(List) list_07cae4\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < list.Length - 1 && Math.Abs(list[index] - list[index + 1]) == 1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_8d07dc\n        ifexpression_875761.value -> output_8d07dc\n        list_07cae4 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_8d07dc\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_fc79d5 root.main.has_consecutive_numbers {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: -86, name: \"main_list\") property(List) main_list_3af6ba\n        in(x: -275, y: 30, name: \"sub_list\") property(List) sub_list_7f8b4c\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        \n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            \n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_32727d.handler\n        \n        main_list_3af6ba -> contains_32727d.list\n        sub_list_7f8b4c -> length_8166b0.list\n        func() {\n            in(x: -192, y: -16, name=\"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name=\"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_32727d.handler\n        \n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -450, y: 30, name: \"main_list\") property(List) main_list_1a2f3b\n        in(x: -450, y: -120, name: \"sub_list\") property(List) sub_list_4c5d6e\n\n        out(x: 1230, y: 50, name: \"output\") property(Bool) output_f7g8h9\n\n        instance(x: -200, y: 10, name: \"filter main list\") filter_a1b2c3 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 300, y: 20, name: \"map to check sublist\") map_d4e5f6 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 600, y: -10) any_7g8h9i root.Std_k98ojb.List.Contains {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_sublist\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_jk1l2m root.Std_k98ojb.List.Contains {}\n            current_sublist -> contains_jk1l2m.list\n            sub_list_4c5d6e -> contains_jk1l2m.item\n        } -> filter_a1b2c3.handler\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_slice\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) contains_nopqrs root.Std_k98ojb.List.Contains {}\n            current_slice -> contains_nopqrs.list\n            sub_list_4c5d6e -> contains_nopqrs.item\n        } -> map_d4e5f6.handler\n\n        filter_a1b2c3.output_list -> map_d4e5f6.items\n        map_d4e5f6.output_list -> any_7g8h9i.list\n        true -> any_7g8h9i.item\n        any_7g8h9i.is_contained -> output_f7g8h9\n\n        main_list_1a2f3b -> filter_a1b2c3.items\n    }\n\n    \n\n    instance(x: -80, y: 60) is_sublist_instance root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_1a2f3b\n        in(x: -505, y: 160, name: \"sub_list\") property(List) sub_list_4c5d6e\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_f7g8h9\n\n        instance(x: 752, y: 93) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -303, y: -205, name: \"filter_sublist\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            1 -> modulo_c76d2b.divisor\n            _index_769593 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_sublist.handler\n\n        func() {\n            in(x: -192, y: -16, name=\"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name=\"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_32727d.handler\n\n        main_list_1a2f3b -> for_d26972.items\n        for_d26972.item -> filter_sublist.items\n        sub_list_4c5d6e -> contains_32727d.list\n        filter_sublist.output_list -> contains_32727d.start_index_list\n        contains_32727d.is_contained -> output_f7g8h9\n\n        for_d26972.onItem -> contains_32727d.execute\n        for_d26972.done -> output_f7g8h9\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_instance root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: -150, name: \"main_list\") property(List) main_list_1a2f3b\n        in(x: -315, y: 30, name: \"sub_list\") property(List) sub_list_4c5d6e\n\n        out(x: 1120, y: -120, name: \"is_sublist\") property(Bool) is_sublist_result\n\n        instance(x: -100, y: -110, name: \"filter main list\") filter_7f8g9h root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 250, y: -115) contains_i0j1k2 root.Std_k98ojb.List.Contains {}\n        instance(x: 450, y: -110) equal_l3m4n5 root.Std_k98ojb.Logic.Equal {}\n\n        func() {\n            in(x: -50, y: -25, name: \"current\") property(List) current_6p7q8r\n\n            out(x: 300, y: -35, name: \"output\") property(Bool) output_t9u0v1\n\n            instance(x: 150, y: -30) slice_a2b3c4 root.Std_k98ojb.List.Slice {}\n            current_6p7q8r -> slice_a2b3c4.items\n            0 -> slice_a2b3c4.start\n            sub_list_4c5d6e.Length() -> slice_a2b3c4.end\n            slice_a2b3c4.slice -> contains_i0j1k2.list\n            sub_list_4c5d6e -> contains_i0j1k2.item\n            contains_i0j1k2.is_contained -> output_t9u0v1\n        } -> filter_7f8g9h.handler\n\n        main_list_1a2f3b -> filter_7f8g9h.items\n        func() {\n            in(x: -200, y: 50, name: \"current\") property(List) current_x1y2z3\n\n            out(x: 500, y: 60, name: \"output\") property(Bool) output_a4b5c6\n\n            instance(x: 250, y: 55) length_d7e8f9 root.Std_k98ojb.List.Length {}\n            current_x1y2z3 -> length_d7e8f9.list\n            length_d7e8f9.length -> equal_l3m4n5.left\n            sub_list_4c5d6e.Length() -> equal_l3m4n5.right\n            equal_l3m4n5.result -> output_a4b5c6\n        } -> filter_7f8g9h.handler\n\n        filter_7f8g9h.output_list.NotEmpty().result -> is_sublist_result\n    }\n\n    \n\n    instance(x: -50, y: 70) is_sublist_instance root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"sublist\") property(List) sublist_1f846b\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_c62075\n\n        out(x: 557, y: -97, name: \"is_sublist\") property(Bool) is_sublist_result\n\n        instance(x: -303, y: -205, name: \"filter sublist indices\") filter_1f846b_indices root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"map to boolean\") map_to_bool root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current_index\") property(Number) current_index\n            in(x: -23, y: 79, name=\"index\") property(Number) index\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_bool\n\n            instance(x: 226, y: 56) slice_1f846b root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n\n            current_index -> slice_1f846b.start\n            sublist_1f846b -> slice_1f846b.items\n\n            main_list_c62075 -> contains_32727d.list\n            slice_1f846b.slice -> contains_32727d.item\n\n            equal_f89569.result -> output_bool\n            contains_32727d.is_contained -> equal_f89569.left\n            true -> equal_f89569.right\n        } -> filter_1f846b_indices.handler\n\n        sublist_1f846b -> map_to_bool.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_index\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_index -> modulo_ad7b2a.value\n            sublist_1f846b.Length() -> modulo_ad7b2a.divisor\n\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n\n            notequal_cb8a55.result -> bool_result\n        } -> map_to_bool.handler\n\n        filter_1f846b_indices.output_list.Length() == sublist_1f846b.Length() -> is_sublist_result\n        not_75283f.result -> is_sublist_result\n        map_to_bool.output_list -> contains_32727d.list\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_instance root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -365, y: -150, name: \"main_list\") property(List) main_list_3a1f8b\n        in(x: -375, y: 30, name: \"sub_list\") property(List) sub_list_7d9c2e\n\n        out(x: 1225, y: 5, name: \"output\") property(Bool) output_b4c6d3\n\n        instance(x: 750, y: 95) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -0, y: -121, name: \"get_sublist_start\") getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 246, y: -209, name: \"compare sublists\") zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> for_d26972.handler\n        main_list_3a1f8b -> for_d26972.items\n        func() {\n            in(x: -192, y: -16, name=\"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name=\"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> zip_201051.handler\n        for_d26972.output_list -> zip_201051.left\n        sub_list_7d9c2e -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name=\"item1\") property(Any) item1_a4b6f8\n            in(x: -223, y: 18, name=\"item2\") property(Any) item2_b5c7d9\n\n            out(x: 245, y: -54, name=\"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            item1_a4b6f8 -> equal_f89569.left\n            item2_b5c7d9 -> equal_f89569.right\n            equal_f89569.result -> result_e245cb\n        } -> zip_201051.handler\n        for_d26972.onItem -> getat_ce2a48.execute\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> zip_201051.left[0]\n        main_list_3a1f8b -> getat_ce2a48.list\n        for_d26972.done -> output_b4c6d3\n        zip_201051.zipped -> output_b4c6d3\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: -120, name: \"main_list\") property(List) main_list_1a2f3b\n        in(x: -295, y: 30, name: \"sub_list\") property(List) sub_list_4c5d6e\n\n        out(x: 1020, y: -95, name: \"is_sublist\") property(Bool) is_sublist_result\n\n        instance(x: -50, y: -100, name: \"filter main list\") filter_main root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 250, y: -90) contains_7f8g9h root.Std_k98ojb.List.Contains {}\n        instance(x: 450, y: -85) equal_i1j2k3 root.Std_k98ojb.Logic.Equal {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_8l9m0n\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_pqrs4t\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_8l9m0n -> modulo_c76d2b.list\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_main.handler\n\n        main_list_1a2f3b -> filter_main.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_sublist\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_sublist -> modulo_ad7b2a.list\n            sub_list_4c5d6e -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_7f8g9h.handler\n\n        filter_main.output_list -> contains_7f8g9h.list\n        sub_list_4c5d6e -> contains_7f8g9h.item\n        contains_7f8g9h.is_contained -> equal_i1j2k3.left\n        true -> equal_i1j2k3.right\n        equal_i1j2k3.result -> is_sublist_result\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_instance root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_1a2f3b\n        in(x: -505, y: 160, name: \"sub_list\") property(List) sub_list_4c5d6e\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_f7g8h9\n\n        instance(x: 752, y: 93) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -303, y: -205, name: \"filter_sublist_indices\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            _index_769593 -> modulo_c76d2b.value\n            sub_list_length -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_sublist_indices.handler\n\n        func() {\n            in(x: -192, y: -16, name=\"current\") property(Number) current_index_81298e\n            out(x: 521, y: -28, name=\"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_index_81298e -> modulo_ad7b2a.value\n            sub_list_length -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n\n        main_list_1a2f3b -> for_d26972.items\n        for_d26972.item -> filter_sublist_indices.items\n        sub_list_length -> list_length.list\n        sub_list_4c5d6e -> list_length.list\n        filter_sublist_indices.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n\n        func() {\n            in(x: -192, y: -16, name=\"current\") property(Number) current_index_81298e\n            out(x: 521, y: -28, name=\"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_index_81298e -> modulo_ad7b2a.value\n            sub_list_length -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n\n        contains_32727d.is_contained -> output_f7g8h9\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_instance root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"sublist\") property(List) sublist_1f846b\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_c62075\n\n        out(x: 557, y: -97, name: \"is_sublist\") property(Bool) is_sublist_result\n\n        instance(x: -303, y: -205, name: \"filter sublist indices\") filter_1f846b_indices root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"map to bool\") map_to_bool root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current_index\") property(Number) current_index\n            in(x: -23, y: 79, name=\"index\") property(Number) index\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_bool\n\n            instance(x: 226, y: 56) slice_1f846b root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n\n            current_index -> slice_1f846b.start\n            sublist_1f846b -> slice_1f846b.items\n\n            index -> slice_1f846b.end\n            main_list_c62075 -> slice_1f846b.items\n\n            equal_f89569.result -> output_bool\n            slice_1f846b.slice -> equal_f89569.left\n            sublist_1f846b -> equal_f89569.right\n        } -> filter_1f846b_indices.handler\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_index\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_index -> modulo_ad7b2a.value\n            sublist_1f846b.length() -> modulo_ad7b2a.divisor\n\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n\n            notequal_cb8a55.result -> bool_result\n        } -> map_to_bool.handler\n\n        filter_1f846b_indices.output_list -> map_to_bool.items\n        map_to_bool.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n\n        not_75283f.result -> is_sublist_result\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_instance root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"sublist\") property(List) sublist_1f846b\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_c62075\n\n        out(x: 557, y: -97, name: \"is_sublist\") property(Bool) is_sublist_result\n\n        instance(x: -303, y: -205, name: \"filter sublist indices\") filter_1f846b_indices root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"map to bool\") map_to_bool root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current_index\") property(Number) current_index\n            in(x: -23, y: 79, name=\"index\") property(Number) index\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_bool\n\n            instance(x: 226, y: 56) slice_1f846b root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n\n            current_index -> slice_1f846b.start\n            sublist_1f846b -> slice_1f846b.items\n\n            index -> slice_1f846b.end\n            main_list_c62075 -> slice_1f846b.items\n\n            equal_f89569.result -> output_bool\n            slice_1f846b.slice -> equal_f89569.left\n            sublist_1f846b -> equal_f89569.right\n        } -> filter_1f846b_indices.handler\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_index\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_index -> modulo_ad7b2a.value\n            sublist_1f846b.length() -> modulo_ad7b2a.divisor\n\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n\n            notequal_cb8a55.result -> bool_result\n        } -> map_to_bool.handler\n\n        filter_1f846b_indices.output_list -> map_to_bool.items\n        map_to_bool.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n\n        not_75283f.result -> is_sublist_result\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_instance root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_7b3b7b root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -123, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"found\") property(Bool) found\n            \n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            0 -> sub_1088d5.second\n            sub_1088d5.result -> setter_1cedb2.new_value\n\n            instance(x: 310, y: 35) greaterthan_807ffd root.Std_k98ojb.Math.GreaterThan {}\n            item -> greaterthan_807ffd.left\n            index -> greaterthan_807ffd.right\n            \n            instance(x: 410, y: 45) and_9f7759 root.Std_k98ojb.Logic.And {}\n            sub_1088d5.result -> and_9f7759.left\n            greaterthan_807ffd.result -> and_9f7759.right\n\n            and_9f7759.result -> found\n        } -> iteration_7b3b7b.predicate\n        \n        numbers -> iteration_7b3b7b.items\n        instance(x: 0, y: 0) add_12bf99 root.Std_k98ojb.Math.Add {}\n        1 -> add_12bf99.first\n        setter_1cedb2.new_value -> add_12bf99.second\n        add_12bf99.result -> missing_number\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0\"\n        }\n        \n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = missing_number\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = missing_number\n        \n        numbers -> ifexpression_e38995.gen_0\n        1 -> ifexpression_e38995.gen_1\n\n        getter_9cceb3.value -> missing_number\n        ifexpression_e38995.then -> setter_1cedb2.execute\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_cee202 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_5f3b7a root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -103, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            item -> sub_1088d5.second\n            sub_1088d5.result -> bool_result\n        } -> iteration_5f3b7a.predicate\n\n        numbers -> iteration_5f3b7a.items\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index != item\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = missing_number\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = missing_number\n        index -> ifexpression_e38995.gen_0\n        item -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> missing_number\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        index + 1 -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> iteration_5f3b7a.next\n\n        instance(x: -105, y: -110) count_9cceb3 root.Std_k98ojb.Count {}\n        numbers.Length -> count_9cbeb3.count\n        count_9cbeb3.reset -> iteration_5f3b7a.trigger\n    }\n\n    \n\n    instance(x: 322, y: 568) find_smallest_missing_node root.main.find_smallest_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_5f8b2a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -113, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"bool\") property(Bool) bool_3f9b7c\n\n            instance(x: 89, y: 29) sub_1a2d4e root.Std_k98ojb.Math.Sub {}\n            index -> sub_1a2d4e.first\n            item -> sub_1a2d4e.second\n            sub_1a2d4e.result -> bool_3f9b7c\n        } -> iteration_5f8b2a.predicate\n\n        instance(x: -105, y: 0) generate_range_6b3c8f root.Std_k98ojb.List.GenerateRange {}\n        0 -> generate_range_6b3c8f.from\n        numbers.LastItem() + 1 -> generate_range_6b3c8f.to\n\n        instance(x: -105, y: -100) zip_7d9e4a root.Std_k98ojb.Iteration.Zip {}\n        generate_range_6b3c8f.list -> zip_7d9e4a.left\n        numbers -> zip_7d9e4a.right\n\n        func() {\n            in(x: -113, y: 34, name: \"left\") property(Number) left\n            in(x: -113, y: 44, name: \"right\") property(Number) right\n\n            out(x: 515, y: 54, name: \"result\") property(Any) result\n\n            instance(x: 89, y: 29) not_equal_2b3d8f root.Std_k98ojb.Logic.NotEqual {}\n            left -> not_equal_2b3d8f.left\n            right -> not_equal_2b3d8f.right\n            not_equal_2b3d8f.result -> result\n        } -> zip_7d9e4a.handler\n\n        instance(x: -105, y: -200) find_first_true_8c1e5b root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Any) item\n\n            out(x: 515, y: 54, name: \"bool\") property(Bool) bool_9f8d7c\n\n            instance(x: 89, y: 29) not_equal_3e4b6a root.Std_k98ojb.Logic.NotEqual {}\n            Null -> not_equal_3e4b6a.right\n            item -> not_equal_3e4b6a.left\n            not_equal_3e4b6a.result -> bool_9f8d7c\n        } -> find_first_true_8c1e5b.predicate\n\n        zip_7d9e4a.zipped -> find_first_true_8c1e5b.items\n        find_first_true_8c1e5b.item -> missing_number\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_7b3b7b root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -123, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"found\") property(Bool) found\n            \n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            0 -> sub_1088d5.second\n            sub_1088d5.result -> missing_number\n\n            instance(x: 310, y: 35) greaterthan_807ffd root.Std_k98ojb.Math.GreaterThan {}\n            item -> greaterthan_807ffd.left\n            index -> greaterthan_807ffd.right\n            \n            instance(x: 410, y: 45) equal_9f7759 root.Std_k98ojb.Logic.Equal {}\n            item -> equal_9f7759.left\n            sub_1088d5.result -> equal_9f7759.right\n\n            not(equal_9f7759.result) -> found\n        } -> iteration_7b3b7b.predicate\n        \n        numbers -> iteration_7b3b7b.items\n    }\n\n    \n\n    instance(x: 322, y: 568) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_5f8b7a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -123, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            item -> sub_1088d5.second\n            sub_1088d5.result -> bool_result\n        } -> iteration_5f8b7a.predicate\n        numbers -> iteration_5f8b7a.items\n\n        instance(x: 0, y: -100) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || item != index\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = missing_number\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = missing_number\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = missing_number\n\n        iteration_5f8b7a.index -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> ifexpression_e38995.gen_1\n        index -> ifexpression_e38995.gen_2\n        item -> ifexpression_e38995.gen_3\n\n        1 + index -> setter_1cedb2.new_value\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        ifexpression_e38995.else -> setter_37db7f.execute\n        iteration_5f8b7a.item -> setter_37db7f.new_value\n\n        getter_9cceb3.value -> missing_number\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_7b3b7b root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -113, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            item -> sub_1088d5.second\n            sub_1088d5.result -> bool_result\n        } -> iteration_7b3b7b.predicate\n\n        numbers -> iteration_7b3b7b.items\n        instance(x: 0, y: 0) map_6d05b0 root.Std_k98ojb.Iteration.Map {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item\n\n            out(x: 515, y: 44, name: \"mapped_item\") property(Number) mapped_item\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            item -> sub_1088d5.second\n            sub_1088d5.result -> mapped_item\n        } -> map_6d05b0.handler\n\n        numbers -> map_6d05b0.items\n        instance(x: 0, y: 0) find_first_positive root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) greater_than_1088d5 root.Std_k98ojb.Math.GreaterThan {}\n            item -> greater_than_1088d5.left\n            0 -> greater_than_1088d5.right\n            greater_than_1088d5.result -> bool_result\n        } -> find_first_positive.predicate\n\n        map_6d05b0.output_list -> find_first_positive.items\n        instance(x: 0, y: 0) add_6d05b0 root.Std_k98ojb.Math.Add {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n\n            out(x: 515, y: 44, name: \"result\") property(Number) result\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            index -> add_1088d5.first\n            find_first_positive.item -> add_1088d5.second\n            add_1088d5.result -> result\n        } -> add_6d05b0.handler\n\n        instance(x: 0, y: 0) get_index root.Std_k98ojb.Iteration.Map {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index\n\n            instance(x: 89, y: 29) count_1088d5 root.Std_k98ojb.Count {}\n            item -> count_1088d5.value\n            count_1088d5.count -> index\n        } -> get_index.handler\n\n        numbers -> get_index.items\n        add_6d05b0.result -> missing_number\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_1088d5.result -> notequal_807ffd.left\n            index -> sub_1088d5.first\n            numbers.GetAt(index - 1).value -> sub_1088d5.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        List.GenerateRange(1, List.Length(numbers) + 2).ai -> find_6d05b0.items\n        find_6d05b0.item -> missing_number\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_5f3b7a root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -103, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            item -> sub_1088d5.second\n            sub_1088d5.result -> bool_result\n        } -> iteration_5f3b7a.predicate\n\n        numbers -> iteration_5f3b7a.items\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index != item\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = missing_number\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = missing_number\n        index -> ifexpression_e38995.gen_0\n        item -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> missing_number\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        index + 1 -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> iteration_5f3b7a.next\n\n        instance(x: -105, y: -110) ifexpression_f38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == item\"\n        }\n        index + 1 -> ifexpression_f38995.gen_0\n        numbers.Length -> ifexpression_f38995.gen_1\n        getter(x: -144, y: 112, name: \"getter_f9ceb3\") getter_f9ceb3 = missing_number\n        setter(x: 116, y: -268, name: \"setter_2cedb2\") setter_2cedb2 = missing_number\n        getter_f9ceb3.value -> missing_number\n        ifexpression_f38995.then -> setter_2cedb2.execute\n        index + 1 -> setter_2cedb2.new_value\n        iteration_5f3b7a.done -> ifexpression_f38995.else\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_7b3b7b root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -123, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"found\") property(Bool) found\n            \n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            0 -> sub_1088d5.second\n            sub_1088d5.result -> setter_1cedb2.new_value\n\n            instance(x: 310, y: 35) greaterthan_807ffd root.Std_k98ojb.Math.GreaterThan {}\n            item -> greaterthan_807ffd.left\n            index -> greaterthan_807ffd.right\n            \n            instance(x: 89, y: 29) sub_1088d5_2 root.Std_k98ojb.Math.Sub {}\n            item -> sub_1088d5_2.first\n            (index + 1) -> sub_1088d5_2.second\n\n            instance(x: 310, y: 35) notequal_807ffd_2 root.Std_k98ojb.Logic.NotEqual {}\n            sub_1088d5_2.result -> notequal_807ffd_2.left\n            0 -> notequal_807ffd_2.right\n            \n            greaterthan_807ffd.result -> and_1cedb2.input_0\n            notequal_807ffd_2.result -> and_1cedb2.input_1\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            index -> add_1088d5.first\n            1 -> add_1088d5.second\n            \n            and_1cedb2.result -> found\n            add_1088d5.result -> setter_37db7f.new_value\n        } -> iteration_7b3b7b.predicate\n\n        numbers -> iteration_7b3b7b.items\n        instance(x: 89, y: 29) setter_1cedb2 root.Std_k98ojb.Variable.Setter {}\n        instance(x: 310, y: 35) and_1cedb2 root.Std_k98ojb.Logic.And {}\n        instance(x: 89, y: 29) setter_37db7f root.Std_k98ojb.Variable.Setter {}\n\n        iteration_7b3b7b.index -> setter_1cedb2.index\n        setter_1cedb2.value -> missing_number\n\n        iteration_7b3b7b.item -> setter_37db7f.input_value\n        setter_37db7f.index -> iteration_7b3b7b.next_index\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_7b3b7b root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -123, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"found\") property(Bool) found\n            \n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            0 -> sub_1088d5.second\n            sub_1088d5.result -> missing_number\n\n            instance(x: 310, y: 35) greaterthan_807ffd root.Std_k98ojb.Math.GreaterThan {}\n            item -> greaterthan_807ffd.left\n            index -> greaterthan_807ffd.right\n            \n            instance(x: 410, y: 45) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            item -> equal_807ffd.left\n            sub_1088d5.result -> equal_807ffd.right\n\n            instance(x: 510, y: 55) and_807ffd root.Std_k98ojb.Logic.And {}\n            greaterthan_807ffd.result -> and_807ffd.left\n            not(equal_807ffd.result) -> and_807ffd.right\n            \n            and_807ffd.result -> found\n        } -> iteration_7b3b7b.predicate\n\n        numbers -> iteration_7b3b7b.items\n    }\n\n    \n\n    instance(x: 322, y: 568) find_smallest_missing_node root.main.find_smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -150, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_3a4b5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6d7e8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_9g0h1i root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_3a4b5c.input\n        \" \" -> replace_3a4b5c.search\n        \":\" -> replace_3a4b5c.replace\n\n        replace_3a4b5c.output -> replace_6d7e8f.input\n        \",\" -> replace_6d7e8f.search\n        \":\" -> replace_6d7e8f.replace\n\n        replace_6d7e8f.output -> replace_9g0h1i.input\n        \".\" -> replace_9g0h1i.search\n        \":\" -> replace_9g0h1i.replace\n\n        replace_9g0h1i.output -> output_1\n    }\n\n    \n\n    instance(x: 101, y: -67) replace_special_chars_instance root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -150, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 450, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_3a4b7c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 150, y: 0) replace_5d6e8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 300, y: -1) replace_9f0g1h root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_3a4b7c.input\n        \" \" -> replace_3a4b7c.search\n        \":\" -> replace_3a4b7c.replace\n\n        replace_3a4b7c.output -> replace_5d6e8f.input\n        \",\" -> replace_5d6e8f.search\n        \":\" -> replace_5d6e8f.replace\n\n        replace_5d6e8f.output -> replace_9f0g1h.input\n        \".\" -> replace_9f0g1h.search\n        \":\" -> replace_9f0g1h.replace\n\n        replace_9f0g1h.output -> output_1\n    }\n\n    \n\n    instance(x: 101, y: -67) replace_special_chars_instance root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -300, y: -50, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 600, y: 0, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -25, name: \"characters\") characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 75, name: \"all same\") all_same_jk0l1m root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -100, y: 20, name: \"current\") property(String) current_2n3o4p\n                in(x: -90, y: 80, name: \"_index\") property(Number) _index_qr5s6t\n\n                out(x: 200, y: 50, name: \"output\") property(Bool) output_u7v8w9\n\n                instance(x: 30, y: 45, name: \"equal\") equal_x1y2z3 root.Std_k98ojb.Logic.Equal {}\n                characters_7g8h9i.characters -> equal_x1y2z3.left\n                current_2n3o4p -> equal_x1y2z3.right\n                equal_x1y2z3.result -> output_u7v8w9\n            }\n        }\n\n        input_1a2b3c -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> all_same_jk0l1m.items\n        func() {\n            in(x: -50, y: 20, name: \"current\") property(String) current_a1b2c3\n\n            out(x: 150, y: 30, name: \"output\") property(Bool) output_d4e5f6\n\n            instance(x: 10, y: 25, name: \"equal\") equal_g7h8i9 root.Std_k98ojb.Logic.Equal {}\n            current_a1b2c3 -> equal_g7h8i9.left\n            characters_7g8h9i.characters[0] -> equal_g7h8i9.right\n            equal_g7h8i9.result -> output_d4e5f6\n        } -> all_same_jk0l1m.handler\n\n        all_same_jk0l1m.output_list.Length -> output_d4e5f6\n    }\n\n    \n\n    instance(x: -100, y: 50) all_characters_same_abc123 root.main.all_characters_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -285, y: -86, name: \"input\") property(String) input_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) characters_c7c7e6 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: -96) all_same_32727d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n\n        input_3af6ba -> characters_c7c7e6.input\n        characters_c7c7e6.characters -> all_same_32727d.items\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(String) current_81298e\n            in(x: 0, y: 0, name: \"index\") property(Number) index_769593\n            in(x: 0, y: 0, name: \"_index\") property(Number) _index_170471\n\n            out(x: 705, y: -28, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: -23) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> equal_f89569.left\n            _index_170471 -> equal_f89569.right\n            equal_f89569.result -> output_efbc78\n        } -> all_same_32727d.handler\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(String) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n            index_769593 -> bool_4524be\n        } -> map_c73e3b.handler\n\n        all_same_32727d.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) all_characters_same_ac7dfb root.main.all_characters_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -305, y: -26, name: \"input\") property(String) input_1a2f3b\n\n        out(x: 567, y: 12, name: \"output\") property(Bool) output_4d5e6f\n\n        instance(x: -150, y: -25) characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 10) map_jk0l1m root.Std_k98ojb.Iteration.Map {}\n        instance(x: 350, y: 15) all_same_n2o3p4 root.Std_k98ojb.Logic.Equal {}\n\n        input_1a2f3b -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> map_jk0l1m.items\n\n        func() {\n            in(x: -100, y: 20, name: \"element\") property(String) element_a5b6c7\n\n            out(x: 200, y: 30, name: \"output\") property(Bool) output_d8e9f0\n\n            instance(x: 50, y: 25) equal_1h2i3j root.Std_k98ojb.Logic.Equal {}\n            element_a5b6c7 -> equal_1h2i3j.left\n            characters_7g8h9i.characters[0] -> equal_1h2i3j.right\n            equal_1h2i3j.result -> output_d8e9f0\n        } -> map_jk0l1m.handler\n\n        map_jk0l1m.output_list -> all_same_n2o3p4.left\n        1 -> all_same_n2o3p4.right\n        all_same_n2o3p4.result -> output_4d5e6f\n    }\n\n    \n\n    instance(x: -50, y: 60) all_characters_same_test root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -300, y: -50, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 500, y: 100, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -30) characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 20) map_j0k1l2 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 300, y: 70) all_same_m3n4o5 root.main.all_characters_same_helper {}\n\n        input_1a2b3c -> characters_7g8h9i.input\n        func() {\n            in(x: -50, y: 10, name: \"element\") property(String) element_p6q7r8\n\n            out(x: 200, y: 30, name: \"output\") property(Bool) output_s9t0u1\n\n            instance(x: 100, y: 20) equal_v2w3x4 root.Std_k98ojb.Logic.Equal {}\n            element_p6q7r8 -> equal_v2w3x4.left\n            characters_7g8h9i.characters[0] -> equal_v2w3x4.right\n            equal_v2w3x4.result -> output_s9t0u1\n        } -> map_j0k1l2.handler\n        characters_7g8h9i.characters -> map_j0k1l2.items\n        func() {\n            in(x: -100, y: 10, name: \"current\") property(Bool) current_y5z6a7\n\n            out(x: 250, y: 40, name: \"output\") property(Bool) output_b8c9d0\n\n            instance(x: 150, y: 30) and_e1f2g3 root.Std_k98ojb.Logic.And {}\n            current_y5z6a7 -> and_e1f2g3.left\n            map_j0k1l2.output_list[map_j0k1l2.index] -> and_e1f2g3.right\n            and_e1f2g3.result -> output_b8c9d0\n        } -> all_same_m3n4o5.handler\n        map_j0k1l2.output_list -> all_same_m3n4o5.items\n        all_same_m3n4o5.output -> output_d4e5f6\n    }\n\n    func(doc: \"Helper function to check if all elements in a list are the same.\") all_characters_same_helper {\n        in property(List) items\n\n        out property(Bool) result\n\n        instance(x: 0, y: 0) reduce_h4i5j6 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -50, y: 10, name: \"accumulator\") property(Bool) accumulator_k7l8m9\n            in(x: -30, y: 30, name: \"current\") property(Bool) current_n0o1p2\n\n            out(x: 200, y: 40, name: \"output\") property(Bool) output_q3r4s5\n\n            instance(x: 100, y: 20) and_t6u7v8 root.Std_k98ojb.Logic.And {}\n            accumulator_k7l8m9 -> and_t6u7v8.left\n            current_n0o1p2 -> and_t6u7v8.right\n            and_t6u7v8.result -> output_q3r4s5\n        } -> reduce_h4i5j6.handler\n        true -> reduce_h4i5j6.initialValue\n        items -> reduce_h4i5j6.items\n        reduce_h4i5j6.output -> result\n    }\n\n}\n\ninstance(x: -200, y: 50) all_characters_same_9a0b1c root.main.all_characters_same {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -300, y: -50, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 500, y: 100, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -30) characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 20) map_j0k1l2 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 300, y: 70) all_same_m3n4o5 root.main.all_characters_same_helper {}\n\n        input_1a2b3c -> characters_7g8h9i.input\n        func() {\n            in(x: -100, y: 10, name: \"element\") property(String) element_p6q7r8\n\n            out(x: 250, y: 40, name: \"output\") property(Bool) output_s9t0u1\n\n            instance(x: 50, y: 30) equal_v2w3x4 root.Std_k98ojb.Logic.Equal {}\n            element_p6q7r8 -> equal_v2w3x4.left\n            characters_7g8h9i.characters[0] -> equal_v2w3x4.right\n            equal_v2w3x4.result -> output_s9t0u1\n        } -> map_j0k1l2.handler\n        characters_7g8h9i.characters -> map_j0k1l2.items\n        func() {\n            in(x: -150, y: 10, name: \"elements\") property(List) elements_y5z6a7\n\n            out(x: 400, y: 90, name: \"output\") property(Bool) output_b8c9d0\n\n            instance(x: 100, y: 60) reduce_i1j2k3 root.Std_k98ojb.Iteration.Reduce {}\n            func() {\n                in(x: -50, y: 20, name: \"accumulator\") property(Bool) accumulator_l4m5n6\n                in(x: -30, y: 40, name: \"current\") property(Bool) current_o7p8q9\n\n                out(x: 200, y: 70, name: \"output\") property(Bool) output_r0s1t2\n\n                instance(x: 80, y: 50) and_u3v4w5 root.Std_k98ojb.Logic.And {}\n                accumulator_l4m5n6 -> and_u3v4w5.left\n                current_o7p8q9 -> and_u3v4w5.right\n                and_u3v4w5.result -> output_r0s1t2\n            } -> reduce_i1j2k3.handler\n            map_j0k1l2.output_list -> reduce_i1j2k3.items\n            true -> reduce_i1j2k3.initialValue\n            reduce_i1j2k3.reduced -> output_b8c9d0\n        } -> all_same_m3n4o5.handler\n        map_j0k1l2.output_list -> all_same_m3n4o5.elements\n        all_same_m3n4o5.result -> output_d4e5f6\n    }\n\n    func(doc: \"Helper function to check if all elements in a list are true.\") all_characters_same_helper {\n        in(x: -200, y: -50, name: \"elements\") property(List) elements_1a2b3c\n\n        out(x: 300, y: 100, name: \"result\") property(Bool) result_d4e5f6\n\n        instance(x: -100, y: -30) reduce_j0k1l2 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -50, y: 10, name: \"accumulator\") property(Bool) accumulator_m3n4o5\n            in(x: -30, y: 40, name: \"current\") property(Bool) current_p6q7r8\n\n            out(x: 150, y: 70, name: \"output\") property(Bool) output_s9t0u1\n\n            instance(x: 50, y: 50) and_v2w3x4 root.Std_k98ojb.Logic.And {}\n            accumulator_m3n4o5 -> and_v2w3x4.left\n            current_p6q7r8 -> and_v2w3x4.right\n            and_v2w3x4.result -> output_s9t0u1\n        } -> reduce_j0k1l2.handler\n        elements_1a2b3c -> reduce_j0k1l2.items\n        true -> reduce_j0k1l2.initialValue\n        reduce_j0k1l2.reduced -> result_d4e5f6\n    }\n\n}\n\ninstance(x: -100, y: 50) all_characters_same_8a9b0c root.main.all_characters_same {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -290, y: -50, name: \"input\") property(String) input_3f8d9b\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: -82, y: -20) characters_d5e6a2 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 201, y: 62) all_same_9c3b4f root.main.all_characters_same_helper {}\n\n        input_3f8d9b -> characters_d5e6a2.input\n        characters_d5e6a2.characters -> all_same_9c3b4f.list\n\n        func(doc: \"Helper function to check if all elements in a list are the same.\") all_characters_same_helper {\n            in(x: -290, y: -50, name: \"list\") property(List) list_a1b2c3\n\n            out(x: 546, y: 63, name: \"output\") property(Bool) output_d4e5f6\n\n            instance(x: -82, y: -20) filter_7a8b9c root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -192, y: -16, name: \"current\") property(String) current_81298e\n                in(x: -185, y: 46, name: \"_index\") property(Number) _index_769593\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n                instance(x: 226, y: 56) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n                current_81298e -> equal_f89569.left\n                list_a1b2c3[0] -> equal_f89569.right\n                equal_f89569.result -> output_efbc78\n            } -> filter_7a8b9c.handler\n\n            list_a1b2c3 -> filter_7a8b9c.items\n            filter_7a8b9c.output_list.length == list_a1b2c3.length -> output_d4e5f6\n        }\n\n        all_same_9c3b4f.output -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) check_all_characters_same_fc79d5 root.main.all_characters_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -285, y: -86, name: \"input\") property(String) input_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) characters_c7c7e6 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: -96) map_8166b0 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 360, y: -95) all_same_f89569 root.Std_k98ojb.Logic.Equal {}\n\n        input_3af6ba -> characters_c7c7e6.input\n        characters_c7c7e6.characters -> map_8166b0.items\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(String) current_81298e\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) first_character_2f9d09 root.Std_k98ojb.Iteration.Find {}\n            current_81298e -> first_character_2f9d09.items\n            func() {\n                in(x: -30, y: -25, name=\"element\") property(String) element_5f51f7\n\n                out(x: 382, y: 19, name=\"out\") property(Bool) out_d0fd24\n\n                instance(x: 106, y: 17) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n                element_5f51f7 -> equal_7836b4.left\n                current_81298e -> equal_7836b4.right\n                equal_7836b4.result -> out_d0fd24\n            } -> first_character_2f9d09.predicate\n\n            instance(x: 463, y: 51) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            map_8166b0.output_list[_index_769593] -> notequal_cb8a55.left\n            first_character_2f9d09.item -> notequal_cb8a55.right\n            notequal_cb8a55.result -> output_efbc78\n        } -> map_8166b0.handler\n\n        instance(x: 1058, y: -203) and_75283f root.Std_k98ojb.Logic.And {}\n        map_8166b0.output_list -> and_75283f.left\n        true -> and_75283f.right\n        and_75283f.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) all_characters_same_ac7dfb root.main.all_characters_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -320, y: -30, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 560, y: 40, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -20) characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 30) map_j0k1l2 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 300, y: 60) all_same_m3n4o5 root.main.all_characters_same_helper {}\n\n        input_1a2b3c -> characters_7g8h9i.input\n        func() {\n            in(x: -30, y: 10, name: \"element\") property(String) element_p6q7r8\n\n            out(x: 150, y: 40, name: \"output\") property(Bool) output_s9t0u1\n\n            instance(x: 50, y: 20) equal_v2w3x4 root.Std_k98ojb.Logic.Equal {}\n            element_p6q7r8 -> equal_v2w3x4.left\n            characters_7g8h9i.characters[0] -> equal_v2w3x4.right\n            equal_v2w3x4.result -> output_s9t0u1\n        } -> map_j0k1l2.handler\n        characters_7g8h9i.characters -> map_j0k1l2.items\n        func() {\n            in(x: -100, y: 10, name: \"current\") property(Bool) current_a5b6c7\n\n            out(x: 200, y: 40, name: \"output\") property(Bool) output_d8e9f0\n\n            instance(x: 50, y: 20) and_g1h2i3 root.Std_k98ojb.Logic.And {}\n            current_a5b6c7 -> and_g1h2i3.left\n            map_j0k1l2.output_list[map_j0k1l2.index] -> and_g1h2i3.right\n            and_g1h2i3.result -> output_d8e9f0\n        } -> all_same_m3n4o5.handler\n        map_j0k1l2.output_list -> all_same_m3n4o5.items\n        all_same_m3n4o5.output -> output_d4e5f6\n    }\n\n    func(doc: \"Helper function to check if all elements in a list are the same.\") all_characters_same_helper {\n        in property(List) items\n\n        out property(Bool) result\n\n        instance(x: 0, y: 0) reduce_x4y5z6 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -50, y: 10, name: \"accumulator\") property(Bool) accumulator_7a8b9c\n            in(x: -30, y: 30, name: \"current\") property(Bool) current_d1e2f3\n\n            out(x: 100, y: 40, name: \"output\") property(Bool) output_g4h5i6\n\n            instance(x: 20, y: 20) and_j7k8l9 root.Std_k98ojb.Logic.And {}\n            accumulator_7a8b9c -> and_j7k8l9.left\n            current_d1e2f3 -> and_j7k8l9.right\n            and_j7k8l9.result -> output_g4h5i6\n        } -> reduce_x4y5z6.handler\n        items -> reduce_x4y5z6.items\n        true -> reduce_x4y5z6.initial_value\n        reduce_x4y5z6.output -> result\n    }\n\n}\n\ninstance(x: -200, y: 10) all_characters_same_9j0k1l root.main.all_characters_same {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -300, y: -50, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 600, y: 0, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -25, name: \"characters\") characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 75, name: \"all same\") ifexpression_j0k1l2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == first\"\n        }\n        instance(x: -100, y: 150) for_m3n4o5 root.Std_k98ojb.Std.For {}\n        getter(x: 200, y: 225, name: \"getter_p6q7r8\") getter_p6q7r8 = first\n        setter(x: 350, y: -75, name: \"setter_s9t0u1\") setter_s9t0u1 = first\n\n        input_1a2b3c -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> for_m3n4o5.items\n        for_m3n4o5.item -> ifexpression_j0k1l2.gen_2\n        for_m3n4o5.index -> ifexpression_j0k1l2.gen_0\n        getter_p6q7r8.value -> ifexpression_j0k1l2.gen_1\n        for_m3n4o5.onItem -> ifexpression_j0k1l2.execute\n        for_m3n4o5.done -> output_d4e5f6\n\n        ifexpression_j0k1l2.value -> output_d4e5f6\n        ifexpression_j0k1l2.then -> setter_s9t0u1.execute\n        for_m3n4o5.item -> setter_s9t0u1.new_value\n        setter_s9t0u1.continue -> for_m3n4o5.next\n    }\n\n    \n\n    instance(x: 100, y: -50) all_characters_same_vwxy root.main.all_characters_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -300, y: -50, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 500, y: 100, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -30) characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 20) map_j0k1l2 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 300, y: 70) all_same_m3n4o5 root.main.all_characters_same_helper {}\n\n        input_1a2b3c -> characters_7g8h9i.input\n        func() {\n            in(x: -50, y: 10, name: \"element\") property(String) element_p6q7r8\n\n            out(x: 200, y: 30, name: \"output\") property(Bool) output_s9t0u1\n\n            instance(x: 100, y: 20) equal_v2w3x4 root.Std_k98ojb.Logic.Equal {}\n            element_p6q7r8 -> equal_v2w3x4.left\n            characters_7g8h9i.characters[0] -> equal_v2w3x4.right\n            equal_v2w3x4.result -> output_s9t0u1\n        } -> map_j0k1l2.handler\n        characters_7g8h9i.characters -> map_j0k1l2.items\n        func() {\n            in(x: -100, y: 10, name: \"elements\") property(List) elements_y5z6a7\n\n            out(x: 400, y: 90, name: \"output\") property(Bool) output_b8c9d0\n\n            instance(x: 150, y: 60) all_true_f1g2h3 root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -30, y: 5, name: \"element\") property(Bool) element_i4j5k6\n\n                out(x: 250, y: 25, name: \"output\") property(Bool) output_l7m8n9\n\n                instance(x: 120, y: 15) not_o0p1q2 root.Std_k98ojb.Logic.Not {}\n                element_i4j5k6 -> not_o0p1q2.input\n                not_o0p1q2.result -> output_l7m8n9\n            } -> all_true_f1g2h3.handler\n            elements_y5z6a7 -> all_true_f1g2h3.items\n            all_true_f1g2h3.output_list.length == 0 -> output_b8c9d0\n        } -> all_same_m3n4o5.handler\n        map_j0k1l2.output_list -> all_same_m3n4o5.elements\n        all_same_m3n4o5.result -> output_d4e5f6\n    }\n\n    func(doc: \"Helper function to check if all elements in a list are true.\") all_characters_same_helper {\n        in(x: 0, y: 0, name: \"elements\") property(List) elements\n\n        out(x: 0, y: 0, name: \"result\") property(Bool) result\n    }\n\n}\n\ninstance(x: -200, y: 50) all_characters_same_9a8b7c root.main.all_characters_same {}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(it: String) Bool {\n                return Std_k98ojb.Strings.IsNumeric(it)\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count.Length\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(it: String) Bool {\n                return Std_k98ojb.Strings.IsNumeric(it)\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count.Length\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 100, y: 0) count_digits_logic root.main.count_digits_logic {}\n\n        characters_node.characters -> count_digits_logic.chars\n        count_digits_logic.digit_count -> digit_count\n    }\n\n    func(doc: \"logic to count digits in a list of characters.\") count_digits_logic {\n        in(x: 0, y: 0, name: \"chars\") property(List) chars\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 200, y: 0) filter_node root.Std_k98ojb.Query.Filter {\n            where: \"Strings.IsNumeric(it)\"\n        }\n        chars -> filter_node.list\n        filter_node.result -> count_digits_logic.digit_count\n    }\n\n    \n    instance(x: -50, y: -100) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(item: String) -> Bool {\n                in property(String) item\n                out property(Bool) is_digit\n\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item -> is_numeric_node.input\n                is_numeric_node.is_numeric -> is_digit\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(item: String) -> Bool {\n                in property(String) item\n                out property(Bool) is_digit\n\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item -> is_numeric_node.input\n                is_numeric_node.is_numeric -> is_digit\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(item: String) -> Bool {\n                in property(String) item\n                out property(Bool) is_digit\n\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item -> is_numeric_node.input\n                is_numeric_node.is_numeric -> is_digit\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(it: String) Bool {\n                return Std_k98ojb.Strings.IsNumeric(it)\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count.Length\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 100, y: 0) count_digits_logic root.main.count_digits_logic {}\n\n        characters_node.characters -> count_digits_logic.chars\n        count_digits_logic.digit_count -> digit_count\n    }\n\n    func(doc: \"logic to count digits in a list of characters.\") count_digits_logic {\n        in(x: 0, y: 0, name: \"chars\") property(List) chars\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 200, y: 0) filter_node root.Std_k98ojb.Query.Filter {\n            where: \"Strings.IsNumeric(it)\"\n        }\n        chars -> filter_node.list\n        filter_node.result -> count_digits_logic.digit_count\n    }\n\n    \n    instance(x: -50, y: -100) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(item: String) -> Bool {\n                in property(String) item\n                out property(Bool) is_digit\n\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item -> is_numeric_node.input\n                is_numeric_node.is_numeric -> is_digit\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(item: String) -> Bool {\n                in property(String) item\n                out property(Bool) is_digit\n\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item -> is_numeric_node.input\n                is_numeric_node.is_numeric -> is_digit\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -300, y: 50, name: \"n\") property(Number) n_3a3116\n\n        out(x: 600, y: 10, name: \"sum\") property(Number) sum_e5f7b\n\n        instance(x: 20, y: 0) pow_1d2c4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 320, y: 130) data_cde0dc  = 3\n        instance(x: 10, y: 140) expression_5f6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n-1\"\n        }\n        instance(x: 290, y: 20) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_1d2c4.second\n        n_3a3116 -> pow_1d2c4.first\n        expression_5f6da6.result -> mul_f892a4.first\n        pow_1d2c4.result -> mul_f892a4.second\n        instance(x: 300, y: -10) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> add_64046c.second\n        mul_f892a4.result -> add_64046c.first\n        n_3a3116 -> expression_5f6da6.gen_0\n        add_64046c.result -> sum_e5f7b\n    }\n\n    \n\n    instance(x: 100, y: -50) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 166, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: 145, name: \"sum\") property(Number) sum_ebef81\n\n        instance(x: 0, y: 0) expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 46, y: -383, name: \"fourth_power\") pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 394, y: -339) data_3c713b  = [sum]\n        instance(x: 62, y: -226, name: \"sum\") add_2d44da root.Std_k98ojb.Math.Add {}\n        data_3c713b -> sum_ebef81\n        n_c88d35 -> expression_634b7e.gen_0\n        pow_f892a4.result -> add_2d44da.second\n        expression_634b7e.result -> pow_f892a4.first\n        4 -> pow_f892a4.y\n        add_2d44da.result -> data_3c713b.sum\n        n_c88d35 -> add_2d44da.first\n    }\n\n    \n\n    instance(x: -55, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -280, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 570, y: 10, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 20, y: -5, name: \"fourth_power\") expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"Math.Pow(4*n-3, 4)\"\n        }\n        instance(x: 300, y: 0) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_instance(x: 330, y: 130) data_cde0dc  = 1\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> add_f892a4.second\n        data_cde0dc -> add_f892a4.first\n        instance(x: -10, y: 20) for_loop root.Std_k98ojb.Std.For {\n            items: List.GenerateRange(from: 1, to: n_3a3116)\n        }\n        func() {\n            in(x: -100, y: 50, name: \"item\") property(Number) item_9f6850\n\n            out(x: 500, y: 60, name: \"continue\") trigger() continue_af09a7\n\n            add_f892a4.result -> data_cde0dc\n            expression_2d6da6.gen_0 = item_9f6850\n            data_cde0dc -> add_f892a4.first\n            for_loop.item -> item_9f6850\n        } -> for_loop.on_item\n        for_loop.done -> sum_365f7b\n    }\n\n    \n\n    instance(x: 100, y: -50) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 166, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: 145, name: \"sum\") property(Number) sum_ebef81\n\n        instance(x: 0, y: 0) expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 46, y: -383, name: \"fourth_power\") pow_2d44da root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 394, y: -339) data_cde0dc  = [sum]\n        expression_634b7e.result -> pow_2d44da.first\n        n_c88d35 -> expression_634b7e.gen_0\n        pow_2d44da.second -> 4\n        instance(x: 62, y: -226) sum_instance root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -113, y: 34, name: \"acc\") property(Number) acc_af09a7\n\n            in(x: -113, y: 44, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 85, name: \"result\") property(Number) result_1eb6e9\n\n            pow_2d44da.result -> sum_instance.handler.first\n            acc_af09a7 -> sum_instance.handler.second\n            elem_9f6850 -> sum_instance.handler.third\n            sum_instance.handler.result -> result_1eb6e9\n        } -> sum_instance.handler\n        instance(x: 532, y: 147) generate_range_f892a4 root.Std_k98ojb.List.GenerateRange {}\n        data_instance(x: 394, y: -339) data_3c713b  = [1, n]\n        generate_range_f892a4.items -> sum_instance.items\n        data_3c713b -> generate_range_f892a4.from_to\n        pow_2d44da.result -> sum_instance.handler.first\n        0 -> sum_instance.initial_value\n        sum_instance.result -> data_cde0dc.sum\n        data_cde0dc -> sum_ebef81\n    }\n\n    \n\n    instance(x: -55, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -300, y: 50, name: \"n\") property(Number) n_3a3116\n\n        out(x: 600, y: 10, name: \"sum\") property(Number) sum_ebef81\n\n        instance(x: 20, y: 0) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 30, y: 50) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        instance(x: 300, y: 0) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        expression_2d6da6.result -> pow_f892a4.first\n        4 -> pow_f892a4.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.result -> div_64046c.first\n        data_cde0dc -> div_64046c.second\n        div_64046c.result -> sum_ebef81\n\n        instance(x: 0, y: -50) for_loop root.Std_k98ojb.Std.For {\n            items: List.GenerateRange(from: 1, to: n_3a3116)\n        }\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            item_9f6850 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_loop.where\n\n        for_loop.on_item -> expression_2d6da6.gen_0\n        for_loop.done -> sum_ebef81\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> add_64046c.second\n        pow_f892a4.result -> add_64046c.first\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 166, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: 145, name: \"sum\") property(Number) sum_ebef81\n\n        instance(x: 0, y: 0) expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 46, y: -383, name: \"fourth_power\") pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 394, y: -339) data_3c713b  = [sum]\n        instance(x: 62, y: -226, name: \"sum\") add_2d44da root.Std_k98ojb.Math.Add {}\n        data_3c713b -> sum_ebef81\n        n_c88d35 -> expression_634b7e.gen_0\n        pow_f892a4.result -> add_2d44da.second\n        expression_634b7e.result -> pow_f892a4.first\n        4 -> pow_f892a4.y\n        add_2d44da.result -> data_3c713b.sum\n        n_c88d35 -> add_2d44da.first\n    }\n\n    \n\n    instance(x: -55, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -280, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 570, y: 10, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 20, y: -5, name: \"fourth_power\") expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"Math.Pow(4*n-3, 4)\"\n        }\n        instance(x: 300, y: 0) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_instance(x: 330, y: 130) data_cde0dc  = 1\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> add_f892a4.second\n        data_cde0dc -> add_f892a4.first\n        instance(x: -10, y: 20) for_loop root.Std_k98ojb.Std.For {\n            items: List.GenerateRange(from: 1, to: n_3a3116)\n        }\n        func() {\n            in(x: -100, y: 50, name: \"item\") property(Number) item_9f6850\n\n            out(x: 500, y: 60, name: \"continue\") trigger() continue_af09a7\n\n            add_f892a4.result -> data_cde0dc\n            expression_2d6da6.gen_0 = item_9f6850\n            data_cde0dc -> add_f892a4.first\n            for_loop.item -> item_9f6850\n        } -> for_loop.on_item\n        for_loop.done -> sum_365f7b\n    }\n\n    \n\n    instance(x: 100, y: -50) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -300, y: 50, name: \"n\") property(Number) n_3a3116\n\n        out(x: 600, y: 10, name: \"sum\") property(Number) sum_ebef81\n\n        instance(x: 0, y: 0) expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 50, y: -20) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 300, y: 130) data_cde0dc  = 4\n        instance(x: 10, y: 140) sum_64046c root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_634b7e.gen_0\n        expression_634b7e.result -> pow_f892a4.first\n        data_cde0dc -> pow_f892a4.second\n        sum_64046c.first -> sum_ebef81\n        sum_64046c.result -> sum_64046c.first\n        n_3a3116 -> sum_64046c.second\n        pow_f892a4.result -> sum_64046c.second\n    }\n\n    \n\n    instance(x: 100, y: -50) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -300, y: 50, name: \"n\") property(Number) n_3a3116\n\n        out(x: 600, y: 10, name: \"sum\") property(Number) sum_ebef81\n\n        instance(x: 0, y: 0) expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 50, y: -20) pow_2d44da root.Std_k98ojb.Math.Pow {}\n        instance(x: 100, y: 30) add_f892a4 root.Std_k98ojb.Math.Add {}\n        data_instance(x: 250, y: 130) data_cde0dc  = 4\n        n_3a3116 -> expression_634b7e.gen_0\n        expression_634b7e.result -> pow_2d44da.first\n        data_cde0dc -> pow_2d44da.second\n        add_f892a4.result -> sum_ebef81\n    }\n\n    \n\n    instance(x: 100, y: -50) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_3f1b9d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_ba8c2e\n\n        instance(x: 94, y: -105) mul_7f4b5a root.Std_k98ojb.Math.Mul {}\n        side_length_3f1b9d -> mul_7f4b5a.first\n        6 -> mul_7f4b5a.second\n        instance(x: 94, y: -30) pow_d8e2c0 root.Std_k98ojb.Math.Pow {}\n        side_length_3f1b9d -> pow_d8e2c0.x\n        2 -> pow_d8e2c0.y\n        mul_7f4b5a.result -> surface_area_ba8c2e\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_1d9f3b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_3f1b2d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_d4e8a7\n\n        instance(x: 94, y: -105) mul_5c9b6a root.Std_k98ojb.Math.Mul {}\n        side_length_3f1b2d -> mul_5c9b6a.first\n        6 -> mul_5c9b6a.second\n\n        instance(x: 200, y: -50) mul_8e4b7c root.Std_k98ojb.Math.Mul {}\n        side_length_3f1b2d -> mul_8e4b7c.first\n        mul_5c9b6a.result -> mul_8e4b7c.second\n\n        mul_8e4b7c.result -> surface_area_d4e8a7\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b2f3d1 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -218, y: 55, name: \"side_length\") property(Number) side_length_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side_length * side_length\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        \n        data_cde0dc -> mul_64046c.first\n        expression_2d6da6.result -> mul_64046c.second\n        mul_f892a4.result -> mul_64046c.first\n        \n        side_length_3a3116 -> expression_2d6da6.gen_0\n        side_length_3a3116 -> mul_f892a4.first\n\n        mul_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_3f8b2d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_b9c7e1\n\n        instance(x: 94, y: -105) mul_5a4b6f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_2d8c3a root.Std_k98ojb.Math.Mul {}\n        side_length_3f8b2d -> mul_5a4b6f.first\n        side_length_3f8b2d -> mul_5a4b6f.second\n        mul_5a4b6f.result -> mul_2d8c3a.first\n        6 -> mul_2d8c3a.second\n        mul_2d8c3a.result -> surface_area_b9c7e1\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_4f8b2d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -219, y: 55, name: \"side_length\") property(Number) side_length_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side_length * side_length\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        \n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_f892a4.second\n        data_cde0dc -> mul_f892a4.first\n        mul_f892a4.result -> mul_64046c.first\n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_64046c.second\n        \n        mul_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_f9cc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_3f8b9d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_d4e7a1\n\n        instance(x: 94, y: -105) mul_5c2b6a root.Std_k98ojb.Math.Mul {}\n        side_length_3f8b9d -> mul_5c2b6a.first\n        6 -> mul_5c2b6a.second\n\n        instance(x: 333, y: -50) mul_7e4b1c root.Std_k98ojb.Math.Mul {}\n        side_length_3f8b9d -> mul_7e4b1c.first\n        mul_5c2b6a.result -> mul_7e4b1c.second\n\n        mul_7e4b1c.result -> surface_area_d4e7a1\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_3f1b2d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_b4c8e7\n\n        instance(x: 94, y: -105) mul_5a9b6f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_2d3c1a root.Std_k98ojb.Math.Mul {}\n\n        side_length_3f1b2d -> mul_5a9b6f.first\n        side_length_3f1b2d -> mul_5a9b6f.second\n\n        mul_5a9b6f.result -> mul_2d3c1a.first\n        6 -> mul_2d3c1a.second\n\n        mul_2d3c1a.result -> surface_area_b4c8e7\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_f9b5c2 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -218, y: 57, name: \"side_length\") property(Number) side_length_3f8b2a\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_f5c03d\n\n        instance(x: 352, y: -493) mul_6030c9 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = [side_length]\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"6 * side_length * side_length\"\n        }\n        data_cde0dc -> mul_6030c9.items\n        expression_2d6da6.result -> surface_area_f5c03d\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -219, y: 55, name: \"side_length\") property(Number) side_length_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side_length * side_length\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        \n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_f892a4.second\n        data_cde0dc -> mul_f892a4.first\n        mul_f892a4.result -> mul_64046c.first\n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_64046c.second\n        \n        mul_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_f9cc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -219, y: 55, name: \"side_length\") property(Number) side_length_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side_length * side_length\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        \n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_f892a4.second\n        data_cde0dc -> mul_f892a4.first\n        mul_f892a4.result -> mul_64046c.first\n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_64046c.second\n        \n        mul_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_f9cc3d root.main.cube_surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -569, y: 438, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -569, y: 438, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % 2 == 0)\"\n        }\n        \n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> output_f3db9f\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % 2 == 0)\"\n        }\n        \n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> output_f3db9f\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % 2 == 0)\"\n        }\n        \n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> output_f3db9f\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % 2 == 0)\"\n        }\n        \n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> output_f3db9f\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 352, y: -493) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_8cb3f6 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> modulo_7b3b9b.value\n        2 -> modulo_7b3b9b.divisor\n\n        modulo_7b3b9b.result -> if_8cb3f6.predicate\n        if_8cb3f6.then -> output_f3db9f\n        false -> if_8cb3f6.else\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % 2 == 0)\"\n        }\n        \n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> output_f3db9f\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % 2 == 0)\"\n        }\n        \n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> output_f3db9f\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % 2 == 0)\"\n        }\n        \n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> output_f3db9f\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 352, y: -493) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_8cb3f6 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> modulo_7b3b9b.value\n        2 -> modulo_7b3b9b.divisor\n\n        modulo_7b3b9b.result -> if_8cb3f6.predicate\n        if_8cb3f6.then -> output_f3db9f\n        false -> if_8cb3f6.else\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 352, y: -493) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_8cb3f6 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> modulo_7b3b9b.value\n        2 -> modulo_7b3b9b.divisor\n\n        modulo_7b3b9b.result -> if_8cb3f6.predicate\n        if_8cb3f6.then -> output_f3db9f\n        false -> if_8cb3f6.else\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -230, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3f5b7a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_repeated_9d8c2e root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"First repeated character\") ``First repeated character_1a3f7b`` root.Std_k98ojb.Iteration.Find {}\n\n        input_string -> characters_3f5b7a.input\n        characters_3f5b7a.characters -> find_repeated_9d8c2e.items\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_5b6d8f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) count_greater_than_1_3c2e7a root.Std_k98ojb.Math.Expression {}\n\n            current_char -> contains_5b6d8f.input\n            characters_3f5b7a.characters -> contains_5b6d8f.contains\n\n            expression: \"contains.count > 1\"\n            contains_5b6d8f.result -> count_greater_than_1_3c2e7a.gen_0\n            count_greater_than_1_3c2e7a.result -> is_repeated\n        } -> find_repeated_9d8c2e.predicate\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_first_occurrence\n\n            instance(x: 112, y: 80) contains_5b6d8f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n\n            current_char -> contains_5b6d8f.input\n            characters_3f5b7a.characters -> contains_5b6d8f.contains\n\n            0 -> equal_a54bdc.right\n            contains_5b6d8f.index -> equal_a54bdc.left\n            equal_a54bdc.result -> is_first_occurrence\n        } -> ``First repeated character_1a3f7b``.predicate\n\n        find_repeated_9d8c2e.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -230, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_repeated_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"First repeated character\") ``First repeated character_0b1361`` root.Std_k98ojb.Iteration.Find {}\n\n        input_string -> characters_3c713b.input\n        characters_3c713b.characters -> find_repeated_7e1ce0.items\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) ``First repeated character_0b1361``.list_3c713b root.Std_k98ojb.List.Contains {}\n\n            current_char -> contains_d42dce.input\n            ``First repeated character_0b1361``.list_3c713b -> contains_d42dce.contains\n\n            contains_d42dce.result -> is_repeated\n        } -> find_repeated_7e1ce0.predicate\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_not_repeated\n\n            instance(x: 112, y: 80) ``First repeated character_0b1361``.list_3c713b root.Std_k98ojb.List.Contains {}\n            \n            current_char -> ``First repeated character_0b1361``.list_3c713b\n        } -> ``First repeated character_0b1361``.predicate\n\n        find_repeated_7e1ce0.item -> result_0\n        ``First repeated character_0b1361``.items -> find_repeated_7e1ce0.items\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -200, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 600, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3f8b4a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 300, y: 50, name: \"Find first repeated character\") find_first_repeated_char_f5d7e2 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 500, y: -100) contains_9f8c3a root.Std_k98ojb.Strings.Contains {}\n\n        input_string -> characters_3f8b4a.input\n        characters_3f8b4a.characters -> find_first_repeated_char_f5d7e2.items\n\n        func() {\n            in(x: -100, y: 60, name: \"current\") property(String) current_character\n\n            out(x: 700, y: 61, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 150, y: 55) slice_8b4c2d root.Std_k98ojb.List.Slice {}\n            instance(x: 450, y: 60) contains_9f8c3a_contains root.Std_k98ojb.Strings.Contains {}\n\n            current_character -> contains_9f8c3a_contains.contains\n            characters_3f8b4a.characters -> slice_8b4c2d.list\n            slice_8b4c2d.start -> 0\n            slice_8b4c2d.end -> -1\n\n            slice_8b4c2d.slice -> contains_9f8c3a_contains.input\n            contains_9f8c3a_contains.result -> is_repeated\n        } -> find_first_repeated_char_f5d7e2.predicate\n\n        find_first_repeated_char_f5d7e2.item -> result_0\n    }\n\n    \n\n    instance(x: 100, y: 150) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -230, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3f8b4a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_repeated_7d9c2e root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"Set\") set_instance_1f8a3b root.Std_k98ojb.Sets.Set {}\n\n        input_string -> characters_3f8b4a.input\n        characters_3f8b4a.characters -> find_repeated_repeated_.items\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_5b8d3c root.Std_k98ojb.Strings.Contains {}\n            set_instance_1f8a3b -> contains_5b8d3c.input\n            current_char -> contains_5b8d3c.contains\n            contains_5b8d3c.result -> is_repeated\n\n            instance(x: 415, y: 86) if_7c284f root.Std_k98ojb.Std.If {}\n            set_instance_1f8a3b -> if_7c284f.else\n            current_char -> if_7c284f.then\n            is_repeated -> if_7c284f.predicate\n\n        } -> find_repeated_.predicate\n\n        find_repeated_.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -300, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 600, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3f8b4a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 300, y: 60) find_first_repeated_char_7d9e2c root.main.first_repeated_char.Find {}\n        instance(x: 300, y: -100) if_1b5f3d root.Std_k98ojb.Std.If {}\n\n        input_string -> characters_3f8b4a.input\n        characters_3f8b4a.characters -> find_first_repeated_char_7d9e2c.items\n\n        func() {\n            in(x: -200, y: 80, name: \"current\") property(String) current_char\n\n            out(x: 700, y: 81, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 100, y: 70) contains_5a3b2e root.Std_k98ojb.Strings.Contains {}\n            instance(x: 400, y: 80) list_contains_9f8d4c root.Std_k98ojb.List.Contains {}\n\n            current_char -> contains_5a3b2e.input\n            characters_3f8b4a.characters -> contains_5a3b2e.contains\n\n            contains_5a3b2e.result -> is_repeated\n        } -> find_first_repeated_char_7d9e2c.predicate\n\n        find_first_repeated_char_7d9e2c.item -> if_1b5f3d.then\n        null -> if_1b5f3d.else\n        if_1b5f3d.result -> result_0\n    }\n\n    \n\n    instance(x: 100, y: 150) FirstRepeatedCharInstance root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -250, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 600, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5f8b3a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 310, y: 60) find_repeated_7c4d2e root.Std_k98ojb.Iteration.Find {}\n        instance(x: -50, y: 0) tolower_1a9f8b root.Std_k98ojb.Strings.ToLower {}\n\n        input_string -> tolower_1a9f8b.input\n        tolower_1a9f8b.output -> characters_5f8b3a.input\n\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n\n            characters_5f8b3a.characters -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n\n            contains_d42dce.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_repeated_7c4d2e.predicate\n\n        characters_5f8b3a.characters -> find_repeated_7c4d2e.items\n        find_repeated_7c4d2e.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -230, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_repeated_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"First repeated character\") ``First repeated character_0b1361`` root.Std_k98ojb.Iteration.Find {}\n\n        input_string -> characters_3c713b.input\n        characters_3c713b.characters -> find_repeated_7e1ce0.items\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) ``First repeated character_0b1361``.list_3c713b root.Std_k98ojb.List.Contains {}\n\n            current_char -> contains_d42dce.input\n            ``First repeated character_0b1361``.list_3c713b -> contains_d42dce.contains\n\n            contains_d42dce.result -> is_repeated\n        } -> find_repeated_7e1ce0.predicate\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_not_repeated\n\n            instance(x: 112, y: 80) ``First repeated character_0b1361``.list_3c713b root.Std_k98ojb.List.Contains {}\n            \n            current_char -> ``First repeated character_0b1361``.list_3c713b\n        } -> ``First repeated character_0b1361``.predicate\n\n        find_repeated_7e1ce0.item -> result_0\n        ``First repeated character_0b1361``.items -> find_repeated_7e1ce0.items\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -200, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 600, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3f8b7a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 300, y: 50, name: \"Find first repeated character\") find_first_repeated_9d4e2c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -100) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n\n        input_string -> characters_3f8b7a.input\n        characters_3f8b7a.characters -> find_first_repeated_9d4e2c.items\n\n        func() {\n            in(x: -150, y: 0, name: \"current\") property(String) current_char\n\n            out(x: 450, y: 1, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 50, y: -10) slice_8b3c2d root.Std_k98ojb.List.Slice {}\n            instance(x: 250, y: 0) contains_d42dce_1 root.Std_k98ojb.Strings.Contains {}\n\n            current_char -> contains_d42dce_1.input\n            slice_8b3c2d.output -> contains_d42dce_1.contains\n\n            characters_3f8b7a.characters -> slice_8b3c2d.list\n            0 -> slice_8b3c2d.start\n            find_first_repeated_9d4e2c.index -> slice_8b3c2d.end\n            contains_d42dce_1.result -> is_repeated\n        } -> find_first_repeated_9d4e2c.predicate\n\n        find_first_repeated_9d4e2c.item -> result_0\n    }\n\n    \n\n    instance(x: 100, y: 50) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -300, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 600, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_repeated_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"First repeated character\") ``First repeated character_0b1361`` root.Std_k98ojb.Iteration.Find {}\n\n        input_string -> characters_3c713b.input\n        characters_3c713b.characters -> find_repeated_7e1ce0.items\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            in(x: -192, y: 105, name: \"seen\") property(List) seen_chars\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            current_char -> contains_d42dce.input\n            seen_chars -> contains_d42dce.list\n            contains_d42dce.result -> is_repeated\n        } -> find_repeated_7e1ce0.predicate\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            in(x: -192, y: 105, name: \"seen\") property(List) seen_chars\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            current_char -> contains_d42dce.input\n            seen_chars -> contains_d42dce.list\n            contains_d42dce.result -> is_repeated\n        } -> ``First repeated character_0b1361``.predicate\n\n        instance(x: 310, y: 35) list_add_1088d5 root.Std_k98ojb.List.Add {}\n        find_repeated_7e1ce0.item -> list_add_1088d5.item\n        find_repeated_7e1ce0.items -> list_add_1088d5.list\n\n        instance(x: 310, y: 35) ``First repeated character_2`` root.Std_k98ojb.List.Add {}\n        ``First repeated character_0b1361``.item -> ``First repeated character_2``.item\n        find_repeated_7e1ce0.items -> ``First repeated character_2``.list\n\n        list_add_1088d5.listWithItem -> find_repeated_7e1ce0.seen\n        ``First repeated character_2``.listWithItem -> ``First repeated character_0b1361``.seen\n\n        find_repeated_7e1ce0.item -> result_0\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -300, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 600, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_repeated_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"First repeated character\") ``First repeated character_0b1361`` root.Std_k98ojb.Iteration.Find {}\n\n        input_string -> characters_3c713b.input\n        characters_3c713b.characters -> find_repeated_7e1ce0.items\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            in(x: -192, y: 105, name: \"seen\") property(List) seen_chars\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            current_char -> contains_d42dce.input\n            seen_chars -> contains_d42dce.list\n            contains_d42dce.result -> is_repeated\n        } -> find_repeated_7e1ce0.predicate\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            in(x: -192, y: 105, name: \"seen\") property(List) seen_chars\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            current_char -> contains_d42dce.input\n            seen_chars -> contains_d42dce.list\n            contains_d42dce.result -> is_repeated\n        } -> ``First repeated character_0b1361``.predicate\n\n        instance(x: 310, y: 35) list_add_1088d5 root.Std_k98ojb.List.Add {}\n        find_repeated_7e1ce0.item -> list_add_1088d5.item\n        find_repeated_7e1ce0.items -> list_add_1088d5.list\n\n        instance(x: 310, y: 35) ``First repeated character_2`` root.Std_k98ojb.List.Add {}\n        ``First repeated character_0b1361``.item -> ``First repeated character_2``.item\n        find_repeated_7e1ce0.items -> ``First repeated character_2``.list\n\n        list_add_1088d5.listWithItem -> find_repeated_7e1ce0.seen\n        ``First repeated character_2``.listWithItem -> ``First repeated character_0b1361``.seen\n\n        find_repeated_7e1ce0.item -> result_0\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -100, y: -200) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it != first_min\"\n        }\n        list_abed4a -> filter_7b3b7b.list\n        first_min_9f7759 -> filter_7b3b7b.first_min\n        filter_7b3b7b.result -> filtered_list_f9110a\n\n        \n        instance(x: -50, y: -150) min_second_c3e343 root.Std_k98ojb.List.Min {}\n        filtered_list_f9110a -> min_second_c3e343.items\n        min_second_c3e343.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -100, y: -200) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it != first_min\"\n        }\n        list_abed4a -> filter_7b3b7b.list\n        first_min_9f7759 -> filter_7b3b7b.first_min\n        filter_7b3b7b.result -> filtered_list_f9110a\n\n        \n        instance(x: -50, y: -150) min_second_c3e343 root.Std_k98ojb.List.Min {}\n        filtered_list_f9110a -> min_second_c3e343.items\n        min_second_c3e343.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_RAG_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15912,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_3f9b8a\n        in(x: -310, y: 20, name: \"list2\") property(List) list2_7d4c6e\n\n        out(x: 600, y: -140, name: \"output\") property(Bool) output_b5c1d3\n\n        instance(x: -150, y: -130) intersection_9f8b2a root.Std_k98ojb.Sets.Intersection {}\n        list1_3f9b8a -> intersection_9f8b2a.left\n        list2_7d4c6e -> intersection_9f8b2a.right\n        instance(x: 250, y: -140) notempty_5c3d8b root.Std_k98ojb.List.NotEmpty {}\n        intersection_9f8b2a.intersect -> notempty_5c3d8b.list\n        notempty_5c3d8b.isEmpty -> output_b5c1d3\n    }\n\n    \n\n    instance(x: 100, y: -50) has_common_element_instance root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_3f8b2a\n        in(x: -310, y: 20, name: \"list2\") property(List) list2_7d9c4e\n\n        out(x: 600, y: -140, name: \"output\") property(Bool) output_b5c6d3\n\n        instance(x: -150, y: -130) intersection_1a2b3c root.Std_k98ojb.Sets.Intersection {}\n        list1_3f8b2a -> intersection_1a2b3c.left\n        list2_7d9c4e -> intersection_1a2b3c.right\n\n        instance(x: 250, y: -120) notempty_d4e5f6 root.Std_k98ojb.List.NotEmpty {}\n        intersection_1a2b3c.intersect -> notempty_d4e5f6.list\n        notempty_d4e5f6.isEmpty -> output_b5c6d3\n    }\n\n    \n\n    instance(x: 50, y: -10) has_common_element_instance root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_1f846b\n        in(x: -310, y: -160, name: \"list2\") property(List) list2_c62075\n\n        out(x: 400, y: -140, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -200, y: -100) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_4e8c54.left\n        list2_c62075 -> intersection_4e8c54.right\n        instance(x: 50, y: -120) notempty_75283f root.Std_k98ojb.List.NotEmpty {}\n        intersection_4e8c54.intersect -> notempty_75283f.list\n        notempty_75283f.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 100, y: -50) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_3f9b2a\n        in(x: -310, y: 20, name: \"list2\") property(List) list2_7d8c4e\n\n        out(x: 600, y: -140, name: \"output\") property(Bool) output_b5c6d3\n\n        instance(x: -180, y: -130) intersection_1a2b3c root.Std_k98ojb.Sets.Intersection {}\n        list1_3f9b2a -> intersection_1a2b3c.left\n        list2_7d8c4e -> intersection_1a2b3c.right\n        instance(x: 320, y: -140) notempty_d4e5f6 root.Std_k98ojb.List.NotEmpty {}\n        intersection_1a2b3c.intersect -> notempty_d4e5f6.list\n        notempty_d4e5f6.isEmpty -> output_b5c6d3\n    }\n\n    \n\n    instance(x: 50, y: -70) has_common_element_instance root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -350, y: -150, name: \"list1\") property(List) list1_3f8b2a\n        in(x: -360, y: 30, name: \"list2\") property(List) list2_7d9c4e\n\n        out(x: 600, y: -140, name: \"output\") property(Bool) output_b5c6d3\n\n        instance(x: -200, y: -100) intersection_1a2b3c root.Std_k98ojb.Sets.Intersection {}\n        list1_3f8b2a -> intersection_1a2b3c.left\n        list2_7d9c4e -> intersection_1a2b3c.right\n\n        instance(x: 250, y: -120) notempty_d4e5f6 root.Std_k98ojb.List.NotEmpty {}\n        intersection_1a2b3c.intersect -> notempty_d4e5f6.list\n        notempty_d4e5f6.isEmpty -> output_b5c6d3\n    }\n\n    \n\n    instance(x: 50, y: -70) has_common_element_instance root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_1f846b\n        in(x: -310, y: -160, name: \"list2\") property(List) list2_c62075\n\n        out(x: 500, y: -140, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -200, y: -100) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_4e8c54.left\n        list2_c62075 -> intersection_4e8c54.right\n        instance(x: 300, y: -120) notempty_4524be root.Std_k98ojb.List.NotEmpty {}\n        intersection_4e8c54.intersect -> notempty_4524be.list\n        notempty_4524be.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 100, y: -50) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_3f8b2a\n        in(x: -310, y: 20, name: \"list2\") property(List) list2_7d9c4e\n\n        out(x: 600, y: -140, name: \"output\") property(Bool) output_b5c6d3\n\n        instance(x: -150, y: -130) intersection_1a2b3c root.Std_k98ojb.Sets.Intersection {}\n        list1_3f8b2a -> intersection_1a2b3c.left\n        list2_7d9c4e -> intersection_1a2b3c.right\n\n        instance(x: 250, y: -120) notempty_d4e5f6 root.Std_k98ojb.List.NotEmpty {}\n        intersection_1a2b3c.intersect -> notempty_d4e5f6.list\n        notempty_d4e5f6.isEmpty -> output_b5c6d3\n    }\n\n    \n\n    instance(x: 50, y: -10) has_common_element_instance root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_1f846b\n        in(x: -310, y: -160, name: \"list2\") property(List) list2_c62075\n\n        out(x: 400, y: -140, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -200, y: -100) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_4e8c54.left\n        list2_c62075 -> intersection_4e8c54.right\n        instance(x: 50, y: -120) notempty_75283f root.Std_k98ojb.List.NotEmpty {}\n        intersection_4e8c54.intersect -> notempty_75283f.list\n        notempty_75283f.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 100, y: -50) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -200, y: -100, name: \"list1\") property(List) list1_abc123\n        in(x: -210, y: 10, name: \"list2\") property(List) list2_def456\n\n        out(x: 300, y: -90, name: \"output\") property(Bool) output_ghi789\n\n        instance(x: -50, y: -80) intersection_1 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 150, y: -70) notempty_jkl root.Std_k98ojb.List.NotEmpty {}\n\n        list1_abc123 -> intersection_1.left\n        list2_def456 -> intersection_1.right\n        intersection_1.intersect -> notempty_jkl.list\n        notempty_jkl.isEmpty -> output_ghi789.not\n    }\n\n    \n\n    instance(x: 50, y: -30) has_common_element_instance root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -300, y: -150, name: \"list1\") property(List) list1_1f846b\n        in(x: -310, y: -130, name: \"list2\") property(List) list2_c62075\n\n        out(x: 500, y: -140, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -200, y: -100) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_4e8c54.left\n        list2_c62075 -> intersection_4e8c54.right\n        instance(x: 300, y: -110) notempty_4524be root.Std_k98ojb.List.NotEmpty {}\n        intersection_4e8c54.intersect -> notempty_4524be.list\n        notempty_4524be.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 100, y: -50) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -465, y: -235, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 752, y: 93) filter_consecutive_numbers root.Std_k98ojb.Query.Filter {\n            where: \"index < list.length - 1 && (list[index + 1] - list[index]) == 1\"\n        }\n        \n        list_3af6ba -> filter_consecutive_numbers.list\n        filter_consecutive_numbers.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -465, y: -235, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 752, y: 93) filter_consecutive_numbers root.Std_k98ojb.Query.Filter {\n            where: \"index < list.length - 1 && (list[index + 1] - list[index]) == 1\"\n        }\n        \n        list_3af6ba -> filter_consecutive_numbers.list\n        filter_consecutive_numbers.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -485, y: 30, name: \"list\") property(List) input_list\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_result\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_result.execute\n        ifexpression_875761.value -> output_result\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        input_list -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_result.execute\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_list -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        output_result.execute -> setter_38e107.continue\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -485, y: 30, name: \"list\") property(List) input_list\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_result\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_result.execute\n        ifexpression_875761.value -> output_result\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        input_list -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_result.execute\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_list -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        output_result.execute -> setter_38e107.continue\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -525, y: 10, name: \"list\") property(List) input_list\n\n        out(x: 1225, y: 15, name: \"output\") property(Bool) output_result\n\n        instance(x: 752, y: 20) filter_875761 root.Std_k98ojb.Query.Filter {\n            where: \"it + 1 in list\"\n        }\n        instance(x: -320, y: 30) sort_on_d26972 root.Std_k98ojb.List.SortOn {}\n        instance(x: 146, y: 40) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 360, y: 50) any_5bbcd7 root.Std_k98ojb.Logic.Any {}\n\n        sort_on_d26972.key -> \"it\"\n        input_list -> sort_on_d26972.list\n        sort_on_d26972.sorted_list -> map_c73e3b.items\n\n        func() {\n            in(x: -192, y: 60, name: \"current\") property(Number) current_number\n\n            out(x: 521, y: 70, name: \"next number\") property(Number) next_number\n\n            instance(x: 74, y: 75) add_7b3b7b root.Std_k98ojb.Math.Add {}\n            current_number -> add_7b3b7b.first\n            1 -> add_7b3b7b.second\n            add_7b3b7b.result -> next_number\n        } -> map_c73e3b.handler\n\n        map_c73e3b.output_list -> filter_875761.list\n        input_list -> filter_875761.list\n        any_5bbcd7.input_list -> filter_875761.result\n        filter_875761.result -> output_result\n    }\n\n    \n\n    instance(x: -84, y: 89) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -465, y: -235, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 752, y: 93) filter_consecutive_numbers root.Std_k98ojb.Query.Filter {\n            where: \"index < list.length - 1 && (list[index + 1] - list[index]) == 1\"\n        }\n        \n        list_3af6ba -> filter_consecutive_numbers.list\n        filter_consecutive_numbers.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -465, y: -235, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 752, y: 93) filter_consecutive_numbers root.Std_k98ojb.Query.Filter {\n            where: \"index < list.length - 1 && (list[index + 1] - list[index]) == 1\"\n        }\n        \n        list_3af6ba -> filter_consecutive_numbers.list\n        filter_consecutive_numbers.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -465, y: -235, name: \"list\") property(List) list_07cae4\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < list.Length - 1 && Math.Abs(list[index] - list[index + 1]) == 1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_8d07dc\n        ifexpression_875761.value -> output_8d07dc\n        list_07cae4 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_8d07dc\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_fc79d5 root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -485, y: 30, name: \"list\") property(List) input_list\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_result\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_result.execute\n        ifexpression_875761.value -> output_result\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        input_list -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_result.execute\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_list -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        output_result.execute -> setter_38e107.continue\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -465, y: -235, name: \"list\") property(List) list_07cae4\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < list.Length - 1 && Math.Abs(list[index] - list[index + 1]) == 1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_8d07dc\n        ifexpression_875761.value -> output_8d07dc\n        list_07cae4 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_8d07dc\n    }\n\n    \n\n    instance(x: -84, y: 59) has_consecutive_numbers_fc79d5 root.main.has_consecutive_numbers {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: -86, name: \"main_list\") property(List) main_list_3af6ba\n        in(x: -275, y: 30, name: \"sub_list\") property(List) sub_list_7f8b4c\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        \n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            \n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_32727d.handler\n        \n        main_list_3af6ba -> contains_32727d.list\n        sub_list_7f8b4c -> length_8166b0.list\n        func() {\n            in(x: -192, y: -16, name=\"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name=\"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_32727d.handler\n        \n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: -105, name: \"main_list\") property(List) main_list_1a2f3b\n        in(x: -295, y: 15, name: \"sub_list\") property(List) sub_list_4c5d6e\n\n        out(x: 1020, y: -95, name: \"is_sublist\") property(Bool) is_sublist_result\n\n        instance(x: -50, y: -100, name: \"filter main list\") filter_main root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 200, y: -90) contains_7f8g9h root.Std_k98ojb.List.Contains {}\n        instance(x: 400, y: -80) equal_i1j2k3 root.Std_k98ojb.Logic.Equal {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_8l9m0n\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_pqrs4t\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_8l9m0n -> modulo_c76d2b.list\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_main.handler\n\n        main_list_1a2f3b -> filter_main.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_sublist\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_sublist -> modulo_ad7b2a.list\n            sub_list_4c5d6e -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_7f8g9h.handler\n\n        filter_main.output_list -> contains_7f8g9h.list\n        sub_list_4c5d6e -> contains_7f8g9h.item\n        contains_7f8g9h.is_contained -> equal_i1j2k3.left\n        true -> equal_i1j2k3.right\n        equal_i1j2k3.result -> is_sublist_result\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_instance root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -400, y: -150, name: \"main_list\") property(List) main_list_1a2f3b\n        in(x: -410, y: 30, name: \"sub_list\") property(List) sub_list_4c5d6e\n\n        out(x: 1200, y: -100, name: \"is_sublist\") property(Bool) is_sublist_result\n\n        instance(x: -150, y: -50, name: \"filter main list\") filter_7f8g9h root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 300, y: -70) contains_i1j2k3 root.Std_k98ojb.List.Contains {}\n        instance(x: 500, y: -90) equal_l4m5n6 root.Std_k98ojb.Logic.Equal {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_7f8g9h\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_i1j2k3 root.Std_k98ojb.List.Contains {}\n            current_7f8g9h -> contains_i1j2k3.list\n            sub_list_4c5d6e -> contains_i1j2k3.item\n            contains_i1j2k3.is_contained -> output_efbc78\n        } -> filter_7f8ojb.handler\n\n        main_list_1a2f3b -> filter_7f8g9h.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_l4m5n6\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) equal_l4m5n6 root.Std_k98ojb.Logic.Equal {}\n            current_l4m5n6 -> equal_l4m5n6.left\n            sub_list_4c5d6e -> equal_l4m5n6.right\n            equal_l4m5n6.result -> bool_4524be\n        } -> contains_i1j2k3.handler\n\n        filter_7f8g9h.output_list -> contains_i1j2k3.items\n        contains_i1j2k3.output_list -> is_sublist_result\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_instance root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -450, y: 30, name: \"main_list\") property(List) main_list_3a2f8b\n        in(x: -450, y: -150, name: \"sub_list\") property(List) sub_list_7d9c4e\n\n        out(x: 1050, y: 20, name: \"output\") property(Bool) output_f1b6c3\n\n        instance(x: -200, y: 10, name: \"filter main list\") filter_5a8f2d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 150, y: 20, name: \"map to check sublist\") map_9e4c7b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 450, y: 10, name: \"any true in list\") any_true_b3f8d2 root.Std_k98ojb.List.Contains {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_1a7c4e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            current_1a7c4e -> contains_32727d.list\n            sub_list_7d9c4e -> contains_32727d.item\n        } -> filter_5a8f2d.handler\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) contains_32727d root.Std_k98ojb.List.Contains {}\n            current_81298e -> contains_32727d.list\n            sub_list_7d9c4e -> contains_32727d.item\n            contains_32727d.is_contained -> bool_4524be\n        } -> map_9e4c7b.handler\n\n        filter_5a8f2d.output_list -> map_9e4c7b.items\n        map_9e4c7b.output_list -> any_true_b3f8d2.list\n        true -> any_true_b3f8d2.item\n        any_true_b3f8d2.is_contained -> output_f1b6c3\n    }\n\n    \n\n    instance(x: -70, y: 50) is_sublist_instance root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_1a2f3b\n        in(x: -505, y: 160, name: \"sub_list\") property(List) sub_list_4c5d6e\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_f7g8h9\n\n        instance(x: 752, y: 93) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -303, y: -205, name: \"filter_sublist\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            1 -> modulo_c76d2b.divisor\n            _index_769593 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_sublist.handler\n\n        func() {\n            in(x: -192, y: -16, name=\"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name=\"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_32727d.handler\n\n        main_list_1a2f3b -> for_d26972.items\n        for_d26972.item -> filter_sublist.items\n        sub_list_4c5d6e -> contains_32727d.list\n        filter_sublist.output_list -> contains_32727d.start_index_list\n        contains_32727d.is_contained -> output_f7g8h9\n\n        for_d26972.onItem -> contains_32727d.execute\n        for_d26972.done -> output_f7g8h9\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_instance root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"sublist\") property(List) sublist_1f846b\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_c62075\n\n        out(x: 557, y: -97, name: \"is_sublist\") property(Bool) is_sublist_result\n\n        instance(x: -303, y: -205, name: \"filter sublist indices\") filter_1f846b_indices root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"map to bool\") map_to_bool root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current_index\") property(Number) current_index\n            in(x: -23, y: 79, name=\"index\") property(Number) index\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_bool\n\n            instance(x: 226, y: 56) slice_1f846b root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n\n            current_index -> slice_1f846b.start\n            sublist_1f846b -> slice_1f846b.items\n\n            index -> slice_1f846b.end\n            main_list_c62075 -> slice_1f846b.items\n\n            equal_f89569.result -> output_bool\n            slice_1f846b.slice -> equal_f89569.left\n            sublist_1f846b -> equal_f89569.right\n        } -> filter_1f846b_indices.handler\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_index\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_index -> modulo_ad7b2a.value\n            sublist_1f846b.length() -> modulo_ad7b2a.divisor\n\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n\n            notequal_cb8a55.result -> bool_result\n        } -> map_to_bool.handler\n\n        filter_1f846b_indices.output_list -> map_to_bool.items\n        map_to_bool.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n\n        not_75283f.result -> is_sublist_result\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_instance root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"sublist\") property(List) sublist_1f846b\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_c62075\n\n        out(x: 557, y: -97, name: \"is_sublist\") property(Bool) is_sublist_result\n\n        instance(x: -303, y: -205, name: \"filter sublist indices\") filter_1f846b_indices root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"map to bool\") map_to_bool root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current_index\") property(Number) current_index\n            in(x: -23, y: 79, name=\"index\") property(Number) index\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_bool\n\n            instance(x: 226, y: 56) slice_1f846b root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n\n            current_index -> slice_1f846b.start\n            sublist_1f846b -> slice_1f846b.items\n\n            index -> slice_1f846b.end\n            main_list_c62075 -> slice_1f846b.items\n\n            equal_f89569.result -> output_bool\n            slice_1f846b.slice -> equal_f89569.left\n            sublist_1f846b -> equal_f89569.right\n        } -> filter_1f846b_indices.handler\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_index\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_index -> modulo_ad7b2a.value\n            sublist_1f846b.length() -> modulo_ad7b2a.divisor\n\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n\n            notequal_cb8a55.result -> bool_result\n        } -> map_to_bool.handler\n\n        filter_1f846b_indices.output_list -> map_to_bool.items\n        map_to_bool.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n\n        not_75283f.result -> is_sublist_result\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_instance root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -300, y: -150, name: \"main_list\") property(List) main_list_1a2f3b\n        in(x: -290, y: 30, name: \"sub_list\") property(List) sub_list_4c5d6e\n\n        out(x: 600, y: -100, name: \"is_sublist\") property(Bool) is_sublist_result\n\n        instance(x: -150, y: -50, name: \"filter main list\") filter_main root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: -50, name: \"map sub list\") map_sub root.Std_k98ojb.Iteration.Map {}\n        instance(x: 200, y: -50, name: \"zip lists\") zip_lists root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 400, y: -50, name: \"check all true\") check_all_true root.Std_k98ojb.Query.Filter {\n            where: \"it\"\n        }\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) index_1\n            in(x: -23, y: 79, name: \"_index\") property(Number) index_2\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_3\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            index_2 -> modulo_c76d2b.value\n            sub_list_4c5d6e.Length() -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_3\n        } -> filter_main.handler\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) index_1\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            index_1 -> modulo_ad7b2a.value\n            sub_list_4c5d6e.Length() -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_2\n        } -> map_sub.handler\n\n        main_list_1a2f3b -> filter_main.items\n        sub_list_4c5d6e -> map_sub.items\n        filter_main.output_list -> zip_lists.left\n        map_sub.output_list -> zip_lists.right\n\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Bool) item1\n            in(x: -223, y: 18, name: \"item2\") property(Bool) item2\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result\n\n            instance(x: -8, y: -53) and_123456 root.Std_k98ojb.Logic.And {}\n            item1 -> and_123456.left\n            item2 -> and_123456.right\n            and_123456.result -> result\n        } -> zip_lists.handler\n\n        zip_lists.zipped -> check_all_true.items\n        check_all_true.result -> is_sublist_result\n    }\n\n    \n\n    instance(x: -100, y: 50) is_sublist_instance root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -350, y: -150, name: \"main_list\") property(List) main_list_1a2f3b\n        in(x: -340, y: 50, name: \"sub_list\") property(List) sub_list_4c5d6e\n\n        out(x: 600, y: -100, name: \"is_sublist\") property(Bool) is_sublist_result\n\n        instance(x: -150, y: -75, name: \"filter main list\") filter_7f8g9h root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 50, y: -80) contains_i0j1k2 root.Std_k98ojb.List.Contains {}\n        instance(x: 250, y: -75, name: \"map to check sublist\") map_l3m4n5 root.Std_k98ojb.Iteration.Map {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_6p7q8r\n\n            out(x: 200, y: -10, name: \"output\") property(Bool) output_t9u0v1\n\n            instance(x: 70, y: -15) contains_w2x3y4 root.Std_k98ojb.List.Contains {}\n            current_6p7q8r -> contains_w2x3y4.list\n            sub_list_4c5d6e -> contains_w2x3y4.item\n            contains_w2x3y4.is_contained -> output_t9u0v1\n        } -> map_l3m4n5.handler\n\n        main_list_1a2f3b -> filter_7f8g9h.items\n        func() {\n            in(x: -230, y: 20, name: \"current\") property(List) current_a5b6c7\n\n            out(x: 150, y: 35, name: \"output\") property(Bool) output_d8e9f0\n\n            instance(x: 30, y: 40) contains_g1h2i3 root.Std_k98ojb.List.Contains {}\n            current_a5b6c7 -> contains_g1h2i3.list\n            sub_list_4c5d6e -> contains_g1h2i3.item\n            contains_g1h2i3.is_contained -> output_d8e9f0\n        } -> filter_7f8g9h.handler\n\n        filter_7f8g9h.output_list -> map_l3m4n5.items\n        func() {\n            in(x: -250, y: 100, name: \"index\") property(Number) index_j4k5l6\n\n            out(x: 150, y: 125, name: \"output\") property(Bool) output_m7n8o9\n\n            instance(x: 30, y: 130) contains_p0q1r2 root.Std_k98ojb.List.Contains {}\n            index_j4k5l6 -> contains_p0q1r2.list\n            sub_list_4c5d6e -> contains_p0q1r2.item\n            contains_p0q1r2.is_contained -> output_m7n8o9\n        } -> map_l3m4n5.handler\n\n        instance(x: 400, y: -75) any_true_s3t4u5 root.Std_k98ojb.Iteration.Filter {}\n        map_l3m4n5.output_list -> any_true_s3t4u5.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Bool) current_v6w7x8\n\n            out(x: 200, y: -10, name: \"output\") property(Bool) output_y9z0a1\n\n            instance(x: 70, y: -15) logic_true_b2c3d4 root.Std_k98ojb.Logic.Equal {}\n            current_v6w7x8 -> logic_true_b2c3d4.left\n            true -> logic_true_b2c3d4.right\n            logic_true_b2c3d4.result -> output_y9z0a1\n        } -> any_true_s3t4u5.handler\n\n        any_true_s3t4u5.output_list -> contains_i0j1k2.list\n        true -> contains_i0j1k2.item\n        contains_i0j1k2.is_contained -> is_sublist_result\n    }\n\n    \n\n    instance(x: -100, y: 50) is_sublist_instance root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: -150, name: \"main_list\") property(List) main_list_1a2f3b\n        in(x: -315, y: 30, name: \"sub_list\") property(List) sub_list_4c5d6e\n\n        out(x: 1020, y: -120, name: \"is_sublist\") property(Bool) is_sublist_result\n\n        instance(x: -100, y: -110, name: \"filter main list\") filter_f7a8b9 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 200, y: -115) contains_3c4d5e root.Std_k98ojb.List.Contains {}\n        instance(x: 400, y: -110) equal_6f7g8h root.Std_k98ojb.Logic.Equal {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_slice\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) zip_9i0j1k root.Std_k98ojb.Iteration.Zip {}\n            instance(x: 463, y: 51) notequal_l2m3n4 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_slice -> zip_9i0j1k.left\n            sub_list_4c5d6e -> zip_9i0j1k.right\n\n            func() {\n                in(x: -192, y: -16, name: \"left\") property(Any) left_item\n                in(x: -185, y: 79, name: \"right\") property(Any) right_item\n\n                out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n                instance(x: 74, y: -23) equal_p5q6r7 root.Std_k98ojb.Logic.Equal {}\n                left_item -> equal_p5q6r7.left\n                right_item -> equal_p5q6r7.right\n                equal_p5q6r7.result -> bool_4524be\n            } -> zip_9i0j1k.handler\n\n            zip_9i0j1k.zipped -> notequal_l2m3n4.left\n            list_() -> notequal_l2m3n4.right\n            0 -> notequal_l2m3n4.right\n\n            notequal_l2m3n4.result -> output_efbc78\n        } -> filter_f7a8b9.handler\n\n        main_list_1a2f3b -> filter_f7a8b9.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_index\n\n            out(x: 521, y: -28, name: \"slice\") property(List) slice_result\n\n            instance(x: 74, y: -23) slice_8h9i0j root.Std_k98ojb.List.Slice {}\n            main_list_1a2f3b -> slice_8h9i0j.items\n            current_index -> slice_8h9i0j.start\n            sub_list_4c5d6e.Length() + current_index - 1 -> slice_8h9i0j.end\n\n            slice_8h9i0j.slice -> slice_result\n        } -> filter_f7a8b9.handler\n\n        filter_f7a8b9.output_list -> contains_3c4d5e.list\n        sub_list_4c5d6e -> contains_3c4d5e.item\n        contains_3c4d5e.is_contained -> is_sublist_result\n    }\n\n    \n\n    instance(x: -80, y: 50) is_sublist_instance root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_7b3b7b root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -123, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"found\") property(Bool) found\n            \n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            0 -> sub_1088d5.second\n            sub_1088d5.result -> setter_1cedb2.new_value\n\n            instance(x: 310, y: 35) greaterthan_807ffd root.Std_k98ojb.Math.GreaterThan {}\n            item -> greaterthan_807ffd.left\n            index -> greaterthan_807ffd.right\n            \n            instance(x: 410, y: 45) and_9f7759 root.Std_k98ojb.Logic.And {}\n            sub_1088d5.result -> and_9f7759.left\n            greaterthan_807ffd.result -> and_9f7759.right\n\n            and_9f7759.result -> found\n        } -> iteration_7b3b7b.predicate\n        \n        numbers -> iteration_7b3b7b.items\n        instance(x: 0, y: 0) add_12bf99 root.Std_k98ojb.Math.Add {}\n        1 -> add_12bf99.first\n        setter_1cedb2.new_value -> add_12bf99.second\n        add_12bf99.result -> missing_number\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0\"\n        }\n        \n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = missing_number\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = missing_number\n        \n        numbers -> ifexpression_e38995.gen_0\n        1 -> ifexpression_e38995.gen_1\n\n        getter_9cceb3.value -> missing_number\n        ifexpression_e38995.then -> setter_1cedb2.execute\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_cee202 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_1088d5.result -> notequal_807ffd.left\n            index -> sub_1088d5.first\n            numbers.GetAt(index - 1).value -> sub_1088d5.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        List.GenerateRange(1, List.Length(numbers) + 2).ai -> find_6d05b0.items\n        find_6d05b0.item -> missing_number\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_7b3b7b root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -113, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            item -> sub_1088d5.second\n            sub_1088d5.result -> bool_result\n        } -> iteration_7b3b7b.predicate\n\n        numbers -> iteration_7b3b7b.items\n        instance(x: 0, y: 0) map_6d05b0 root.Std_k98ojb.Iteration.Map {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item\n\n            out(x: 515, y: 44, name: \"mapped_item\") property(Number) mapped_item\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            item -> sub_1088d5.second\n            sub_1088d5.result -> mapped_item\n        } -> map_6d05b0.handler\n\n        numbers -> map_6d05b0.items\n        instance(x: 0, y: 0) find_first_positive root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) greater_than_1088d5 root.Std_k98ojb.Math.GreaterThan {}\n            item -> greater_than_1088d5.left\n            0 -> greater_than_1088d5.right\n            greater_than_1088d5.result -> bool_result\n        } -> find_first_positive.predicate\n\n        map_6d05b0.output_list -> find_first_positive.items\n        instance(x: 0, y: 0) add_6d05b0 root.Std_k98ojb.Math.Add {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n\n            out(x: 515, y: 44, name: \"result\") property(Number) result\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            index -> add_1088d5.first\n            find_first_positive.item -> add_1088d5.second\n            add_1088d5.result -> result\n        } -> add_6d05b0.handler\n\n        instance(x: 0, y: 0) get_index root.Std_k98ojb.Iteration.Map {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index\n\n            instance(x: 89, y: 29) count_1088d5 root.Std_k98ojb.Count {}\n            item -> count_1088d5.value\n            count_1088d5.count -> index\n        } -> get_index.handler\n\n        numbers -> get_index.items\n        add_6d05b0.result -> missing_number\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_7b3b7b root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -113, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            item -> sub_1088d5.second\n            sub_1088d5.result -> bool_result\n        } -> iteration_7b3b7b.predicate\n\n        numbers -> iteration_7b3b7b.items\n        instance(x: 0, y: 0) map_6d05b0 root.Std_k98ojb.Iteration.Map {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item\n\n            out(x: 515, y: 44, name: \"mapped_item\") property(Number) mapped_item\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            item -> sub_1088d5.second\n            sub_1088d5.result -> mapped_item\n        } -> map_6d05b0.handler\n\n        numbers -> map_6d05b0.items\n        instance(x: 0, y: 0) find_first_positive root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) greater_than_1088d5 root.Std_k98ojb.Math.GreaterThan {}\n            item -> greater_than_1088d5.left\n            0 -> greater_than_1088d5.right\n            greater_than_1088d5.result -> bool_result\n        } -> find_first_positive.predicate\n\n        map_6d05b0.output_list -> find_first_positive.items\n        instance(x: 0, y: 0) add_6d05b0 root.Std_k98ojb.Math.Add {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n\n            out(x: 515, y: 44, name: \"result\") property(Number) result\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            index -> add_1088d5.first\n            find_first_positive.item -> add_1088d5.second\n            add_1088d5.result -> result\n        } -> add_6d05b0.handler\n\n        instance(x: 0, y: 0) map_index root.Std_k98ojb.Iteration.Map {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item\n\n            out(x: 515, y: 44, name: \"mapped_item\") property(Number) mapped_item\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            index -> add_1088d5.first\n            item -> add_1088d5.second\n            add_1088d5.result -> mapped_item\n        } -> map_index.handler\n\n        numbers -> map_index.items\n        instance(x: 0, y: 0) zip_6d05b0 root.Std_k98ojb.Iteration.Zip {}\n        \n        func() {\n            in(property(Any)) left\n            in(property(Any)) right\n\n            out(property(Any)) zipped\n\n            instance(x: 89, y: 29) tuple_1088d5 root.Std_k98ojb.Data.Tuple {}\n            left -> tuple_1088d5.left\n            right -> tuple_1088d5.right\n            tuple_1088d5.tuple -> zipped\n        } -> zip_6d05b0.handler\n\n        map_index.output_list -> zip_6d05b0.left\n        iteration_7b3b7b.index -> zip_6d05b0.right\n\n        instance(x: 0, y: 0) find_first_negative root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(property(Any)) item\n\n            out(property(Bool)) bool_result\n\n            instance(x: 89, y: 29) less_than_1088d5 root.Std_k98ojb.Math.LessThan {}\n            item -> less_than_1088d5.left\n            0 -> less_than_1088d5.right\n            less_than_1088d5.result -> bool_result\n        } -> find_first_negative.predicate\n\n        zip_6d05b0.zipped -> find_first_negative.items\n        find_first_negative.item -> missing_number\n    }\n\n    \n\n    instance(x: -34, y: 127) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_5f8b2a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -113, y: 94, name: \"item\") property(Number) item\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) sub_3c8d7b root.Std_k98ojb.Math.Sub {}\n            index -> sub_3c8d7b.first\n            item -> sub_3c8d7b.second\n            sub_3c8d7b.result -> bool_result\n        } -> iteration_5f8b2a.predicate\n\n        numbers -> iteration_5f8b2a.items\n        instance(x: -105, y: -110) ifexpression_9e4b6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index != item\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1d8c2a\") getter_1d8c2a = missing_number\n        setter(x: 116, y: -268, name: \"setter_4b9e3f\") setter_4b9e3f = missing_number\n        setter(x: 118, y: -56, name: \"setter_6f8d7c\") setter_6f8d7c = missing_number\n\n        ifexpression_9e4b6f.then -> setter_4b9e3f.execute\n        index -> setter_4b9e3f.new_value\n        ifexpression_9e4b6f.else -> setter_6f8d7c.execute\n        item -> setter_6f8d7c.new_value\n\n        iteration_5f8b2a.index -> index\n        iteration_5f8b2a.item -> item\n        getter_1d8c2a.value -> missing_number\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_7b3b7b root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -123, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"found\") property(Bool) found\n            \n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            0 -> sub_1088d5.second\n            sub_1088d5.result -> setter_1cedb2.new_value\n\n            instance(x: 310, y: 35) greaterthan_807ffd root.Std_k98ojb.Math.GreaterThan {}\n            item -> greaterthan_807ffd.left\n            index -> greaterthan_807ffd.right\n            \n            instance(x: 89, y: 29) sub_1088d5_2 root.Std_k98ojb.Math.Sub {}\n            item -> sub_1088d5_2.first\n            (index + 1) -> sub_1088d5_2.second\n\n            instance(x: 310, y: 35) notequal_807ffd_2 root.Std_k98ojb.Logic.NotEqual {}\n            sub_1088d5_2.result -> notequal_807ffd_2.left\n            0 -> notequal_807ffd_2.right\n            \n            greaterthan_807ffd.result -> and_1cedb2.input_0\n            notequal_807ffd_2.result -> and_1cedb2.input_1\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            index -> add_1088d5.first\n            1 -> add_1088d5.second\n            \n            and_1cedb2.result -> found\n            add_1088d5.result -> setter_37db7f.new_value\n        } -> iteration_7b3b7b.predicate\n\n        numbers -> iteration_7b3b7b.items\n        instance(x: 89, y: 29) setter_1cedb2 root.Std_k98ojb.Set {}\n        instance(x: 310, y: 35) and_1cedb2 root.Std_k98ojb.Logic.And {}\n        instance(x: 89, y: 29) setter_37db7f root.Std_k98ojb.Set {}\n\n        iteration_7b3b7b.index -> setter_1cedb2.index\n        setter_1cedb2.value -> missing_number\n\n        iteration_7b3b7b.item -> setter_37db7f.input\n        setter_1cedb2.continue -> iteration_7b3b7b.continue\n        setter_37db7f.execute -> iteration_7b3b7b.trigger\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_5b3f7a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -103, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            item -> sub_1088d5.second\n            sub_1088d5.result -> bool_result\n        } -> iteration_5b3f7a.predicate\n\n        instance(x: -105, y: 0) range_generator root.Std_k98ojb.List.GenerateRange {}\n        0 -> range_generator.from\n        numbers.LastItem() -> range_generator.to\n        range_generator.list -> iteration_5b3f7a.items\n\n        instance(x: -50, y: 1) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == item\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = missing_number\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = missing_number\n        index -> ifexpression_e38995.gen_0\n        item -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> missing_number\n\n        iteration_5b3f7a.index -> ifexpression_e38995.then\n        range_generator.list.FirstItem() -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_1cedb2.execute\n    }\n\n    \n\n    instance(x: -55, y: 127) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_7b3b7b root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -113, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            item -> sub_1088d5.second\n            sub_1088d5.result -> bool_result\n        } -> iteration_7b3b7b.predicate\n\n        numbers -> iteration_7b3b7b.items\n        instance(x: 0, y: 0) map_6d05b0 root.Std_k98ojb.Iteration.Map {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item\n\n            out(x: 515, y: 44, name: \"mapped_item\") property(Number) mapped_item\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            item -> sub_1088d5.second\n            sub_1088d5.result -> mapped_item\n        } -> map_6d05b0.handler\n\n        numbers -> map_6d05b0.items\n        instance(x: 0, y: 0) find_first_positive root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) greater_than_1088d5 root.Std_k98ojb.Math.GreaterThan {}\n            item -> greater_than_1088d5.left\n            0 -> greater_than_1088d5.right\n            greater_than_1088d5.result -> bool_result\n        } -> find_first_positive.predicate\n\n        map_6d05b0.output_list -> find_first_positive.items\n        instance(x: 0, y: 0) add_6d05b0 root.Std_k98ojb.Math.Add {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n\n            out(x: 515, y: 44, name: \"result\") property(Number) result\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            index -> add_1088d5.first\n            find_first_positive.item -> add_1088d5.second\n            add_1088d5.result -> result\n        } -> add_6d05b0.handler\n\n        instance(x: 0, y: 0) get_index root.Std_k98ojb.Iteration.Map {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index\n\n            instance(x: 89, y: 29) count_1088d5 root.Std_k98ojb.Count {}\n            item -> count_1088d5.value\n            count_1088d5.count -> index\n        } -> get_index.handler\n\n        numbers -> get_index.items\n        add_6d05b0.result -> missing_number\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_7b3b7b root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -113, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            item -> sub_1088d5.second\n            sub_1088d5.result -> bool_result\n        } -> iteration_7b3b7b.predicate\n\n        numbers -> iteration_7b3b7b.items\n        instance(x: 0, y: 0) map_6d05b0 root.Std_k98ojb.Iteration.Map {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item\n\n            out(x: 515, y: 44, name: \"mapped_item\") property(Number) mapped_item\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            item -> sub_1088d5.second\n            sub_1088d5.result -> mapped_item\n        } -> map_6d05b0.handler\n\n        numbers -> map_6d05b0.items\n        instance(x: 0, y: 0) find_first_positive root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) greater_than_1088d5 root.Std_k98ojb.Math.GreaterThan {}\n            item -> greater_than_1088d5.left\n            0 -> greater_than_1088d5.right\n            greater_than_1088d5.result -> bool_result\n        } -> find_first_positive.predicate\n\n        map_6d05b0.output_list -> find_first_positive.items\n        instance(x: 0, y: 0) add_6d05b0 root.Std_k98ojb.Math.Add {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n\n            out(x: 515, y: 44, name: \"result\") property(Number) result\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            index -> add_1088d5.first\n            find_first_positive.item -> add_1088d5.second\n            add_1088d5.result -> result\n        } -> add_6d05b0.handler\n\n        instance(x: 0, y: 0) map_index root.Std_k98ojb.Iteration.Map {}\n        \n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item\n\n            out(x: 515, y: 44, name: \"mapped_item\") property(Number) mapped_item\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            index -> add_1088d5.first\n            item -> add_1088d5.second\n            add_1088d5.result -> mapped_item\n        } -> map_index.handler\n\n        numbers -> map_index.items\n        instance(x: 0, y: 0) zip_6d05b0 root.Std_k98ojb.Iteration.Zip {}\n        \n        func() {\n            in(property(Any)) left\n            in(property(Any)) right\n\n            out(property(Any)) zipped\n\n            instance(x: 89, y: 29) tuple_1088d5 root.Std_k98ojb.Data.Tuple {}\n            left -> tuple_1088d5.left\n            right -> tuple_1088d5.right\n            tuple_1088d5.tuple -> zipped\n        } -> zip_6d05b0.handler\n\n        map_index.output_list -> zip_6d05b0.left\n        iteration_7b3b7b.index -> zip_6d05b0.right\n\n        instance(x: 0, y: 0) find_first_negative root.Std_k98ojb.Iteration.Find {}\n        \n        func() {\n            in(property(Any)) item\n\n            out(property(Bool)) bool_result\n\n            instance(x: 89, y: 29) less_than_1088d5 root.Std_k98ojb.Math.LessThan {}\n            item -> less_than_1088d5.left\n            0 -> less_than_1088d5.right\n            less_than_1088d5.result -> bool_result\n        } -> find_first_negative.predicate\n\n        zip_6d05b0.zipped -> find_first_negative.items\n        find_first_negative.item -> missing_number\n    }\n\n    \n\n    instance(x: -34, y: 127) find_smallest_missing_node root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -284, y: 0, name: \"numbers\") property(List) numbers\n\n        out(x: 593, y: 1, name: \"missing_number\") property(Number) missing_number\n\n        instance(x: 0, y: 0) iteration_5b3f2a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index\n            in(x: -103, y: 44, name: \"item\") property(Number) item\n\n            out(x: 515, y: 54, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            index -> sub_1088d5.first\n            item -> sub_1088d5.second\n            sub_1088d5.result -> bool_result\n        } -> iteration_5b3f2a.predicate\n\n        instance(x: -105, y: 0) map_6c7e4b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Number) item\n            out(x: 515, y: 44, name: \"mapped_item\") property(Number) mapped_item\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            index -> add_1088d5.first\n            item -> add_1088d5.second\n            add_1088d5.result -> mapped_item\n        } -> map_6c7e4b.handler\n\n        instance(x: -105, y: -50) generate_range_9a9c70 root.Std_k98ojb.List.GenerateRange {}\n        0 -> generate_range_9a9c70.from\n        numbers.Length -> generate_range_9a9c70.to\n\n        generate_range_9a9c70.list -> map_6c7e4b.items\n        map_6c7e4b.output_list -> iteration_5b3f2a.items\n        iteration_5b3f2a.item -> missing_number\n    }\n\n    \n\n    instance(x: 322, y: 568) find_smallest_missing_node root.main.find_smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -172, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_3a4b5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6d7e8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9hij1k root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_3a4b5c.input\n        \" \" -> replace_3a4b5c.search\n        \":\" -> replace_3a4b5c.replace\n\n        replace_3a4b5c.output -> replace_6d7e8f.input\n        \",\" -> replace_6d7e8f.search\n        \":\" -> replace_6d7e8f.replace\n\n        replace_6d7e8f.output -> replace_9hij1k.input\n        \".\" -> replace_9hij1k.search\n        \":\" -> replace_9hij1k.replace\n\n        replace_9hij1k.output -> output_1\n    }\n\n    \n\n    instance(x: 101, y: -67) replace_special_chars_instance root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_special_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -105) replace_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_2.input\n        \" ,.\" -> replace_2.search\n        \":\" -> replace_2.replace\n\n        replace_2.output -> replace_3.input\n        \" \" -> replace_3.search\n        \":\" -> replace_3.replace\n\n        replace_3.output -> replace_4.input\n        \",\" -> replace_4.search\n        \":\" -> replace_4.replace\n\n        replace_4.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_special_chars_a root.main.replace_special_chars {}\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -300, y: -50, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 600, y: 0, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -25, name: \"characters\") characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 75, name: \"all same\") all_same_jk0l1m root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -100, y: 20, name: \"current\") property(String) current_2n3o4p\n                in(x: -90, y: 80, name: \"_index\") property(Number) _index_qr5s6t\n\n                out(x: 200, y: 50, name: \"output\") property(Bool) output_u7v8w9\n\n                instance(x: 30, y: 45, name: \"equal\") equal_x1y2z3 root.Std_k98ojb.Logic.Equal {}\n                characters_7g8h9i.characters -> equal_x1y2z3.left\n                current_2n3o4p -> equal_x1y2z3.right\n                equal_x1y2z3.result -> output_u7v8w9\n            }\n        }\n\n        input_1a2b3c -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> all_same_jk0l1m.items\n        func() {\n            in(x: -50, y: 20, name: \"current\") property(String) current_a1b2c3\n\n            out(x: 150, y: 30, name: \"output\") property(Bool) output_d4e5f6\n\n            instance(x: 10, y: 25, name: \"equal\") equal_g7h8i9 root.Std_k98ojb.Logic.Equal {}\n            current_a1b2c3 -> equal_g7h8i9.left\n            characters_7g8h9i.characters[0] -> equal_g7h8i9.right\n            equal_g7h8i9.result -> output_d4e5f6\n        } -> all_same_jk0l1m.handler\n\n        all_same_jk0l1m.output_list.Length -> output_d4e5f6\n    }\n\n    \n\n    instance(x: -100, y: 50) all_characters_same_abc123 root.main.all_characters_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -300, y: -100, name: \"input\") property(String) input_string\n\n        out(x: 500, y: -50, name: \"output\") property(Bool) output_result\n\n        instance(x: -150, y: -80) characters_1a2b3c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 100, y: -20) all_same_d4e5f6 root.main.all_characters_same_helper {}\n\n        input_string -> characters_1a2b3c.input\n        characters_1a2b3c.characters -> all_same_d4e5f6.list\n\n        all_same_d4e5f6.result -> output_result\n    }\n\n    func(doc: \"Helper function to check if all elements in a list are the same.\") all_characters_same_helper {\n        in(x: -100, y: 0, name: \"list\") property(List) input_list\n\n        out(x: 200, y: 50, name: \"result\") property(Bool) result\n\n        instance(x: -20, y: 30) map_7g8h9i root.Std_k98ojb.Iteration.Map {}\n        instance(x: 150, y: 70) all_equal_jk0l1m root.main.all_elements_equal {}\n\n        func() {\n            in(x: -50, y: 10, name: \"element\") property(String) element\n\n            out(x: 100, y: 40, name: \"output\") property(String) output\n\n            element -> output\n        } -> map_7g8h9i.handler\n\n        input_list -> map_7g8h9i.items\n        map_7g8h9i.output_list -> all_equal_jk0l1m.list\n\n        all_equal_jk0l1m.result -> result\n    }\n\n    func(doc: \"Checks if all elements in a list are equal.\") all_elements_equal {\n        in(x: -50, y: 10, name: \"list\") property(List) input_list\n\n        out(x: 150, y: 60, name: \"result\") property(Bool) result\n\n        instance(x: 0, y: 30) reduce_n1o2p3 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -20, y: 10, name: \"accumulated\") property(String) accumulated\n            in(x: 0, y: 10, name: \"current\") property(String) current\n\n            out(x: 80, y: 40, name: \"output\") property(String) output\n\n            instance(x: 30, y: 20) equal_q4r5s6 root.Std_k98ojb.Logic.Equal {}\n            accumulated -> equal_q4r5s6.left\n            current -> equal_q4r5s6.right\n\n            equal_q4r5s6.result -> output\n        } -> reduce_n1o2p3.reducer\n\n        input_list -> reduce_n1o2p3.items\n        true -> reduce_n1o2p3.initial_value\n\n        reduce_n1o2p3.output -> result\n    }\n\n    instance(x: -200, y: 100) all_characters_same_9t0u1v root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -250, y: -50, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 450, y: 100, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -30) characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 70) all_same_jk0l1m root.main.all_characters_same_helper {}\n\n        input_1a2b3c -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> all_same_jk0l1m.list\n\n        all_same_jk0l1m.result -> output_d4e5f6\n    }\n\n    func(doc: \"Helper function to check if all elements in a list are the same.\") all_characters_same_helper {\n        in(x: -100, y: 50, name: \"list\") property(List) list_2c3d4e\n\n        out(x: 200, y: 150, name: \"result\") property(Bool) result_f5g6h7\n\n        instance(x: -30, y: 70) filter_n8o9p0 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -10, y: 20, name: \"current\") property(String) current_1a2b3\n            in(x: -5, y: 80, name: \"_index\") property(Number) _index_4c5d6\n\n            out(x: 150, y: 90, name: \"out\") property(Bool) out_q7r8s9\n\n            instance(x: 40, y: 85) equal_t0u1v root.Std_k98ojb.Logic.Equal {}\n            list_2c3d4e.FirstItem -> equal_t0u1v.left\n            current_1a2b3 -> equal_t0u1v.right\n            equal_t0u1v.result -> out_q7r8s9\n        } -> filter_n8o9p0.handler\n\n        list_2c3d4e -> filter_n8o9p0.items\n        func() {\n            in(x: 100, y: 160, name: \"output_list\") property(List) output_list_wx1y2\n\n            out(x: 300, y: 170, name: \"result\") property(Bool) result_z3a4b5\n\n            instance(x: 210, y: 165) length_c6d7e8 root.Std_k98ojb.List.Length {}\n            output_list_wx1y2 -> length_c6d7e8.list\n            length_c6d7e8.length == 0 -> result_z3a4b5\n        } -> filter_n8o9p0.onFilter\n\n        filter_n8o9p0.output_list -> all_characters_same_helper.handler\n    }\n\n    instance(x: -300, y: 10) all_characters_same_instance root.main.all_characters_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -310, y: -86, name: \"input\") property(String) input_3f8d9b\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) characters_6e87f2 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n\n        input_3f8d9b -> characters_6e87f2.input\n        characters_6e87f2.characters -> length_8166b0.list\n\n        func() {\n            in(x: 226, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            length_8166b0.length -> modulo_ad7b2a.divisor\n            1 -> modulo_ad7b2a.value\n\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n\n            notequal_cb8a55.result -> output_c7097f\n        } -> characters_6e87f2.handler\n    }\n\n    \n\n    instance(x: -84, y: 59) all_characters_same_ac7dfb root.main.all_characters_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -270, y: -86, name: \"input\") property(String) input_1a2f3b\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_b4c5d6\n\n        instance(x: -100, y: -96) characters_7e8f9g root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: -95) all_equal_h1i2j3 root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -30, y: -25, name: \"current\") property(String) current_4k5l6m\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_n7o8p9\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_qr0s1t\n\n                instance(x: 226, y: 56) equal_u2v3w4 root.Std_k98ojb.Logic.Equal {}\n                current_4k5l6m -> equal_u2v3w4.left\n                input_1a2f3b.characters[0] -> equal_u2v3w4.right\n                equal_u2v3w4.result -> output_qr0s1t\n            }\n        }\n\n        input_1a2f3b -> characters_7e8f9g.input\n        characters_7e8f9g.characters -> all_equal_h1i2j3.items\n        func() {\n            in(x: 521, y: -28, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 285, y: -25) length_x5y6z7 root.Std_k98ojb.List.Length {}\n            instance(x: 463, y: 51) equal_a8b9c0 root.Std_k98ojb.Logic.Equal {}\n\n            all_equal_h1i2j3.output_list.length -> length_x5y6z7.list\n            length_x5y6z7.length -> equal_a8b9c0.left\n            characters_7e8f9g.characters.length -> equal_a8b9c0.right\n            equal_a8b9c0.result -> output_efbc78\n        } -> all_equal_h1i2j3.handler\n\n        all_equal_h1i2j3.output_list -> output_b4c5d6\n    }\n\n    \n\n    instance(x: -84, y: 59) all_characters_same_abc123 root.main.all_characters_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -300, y: -50, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 500, y: 100, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -30) characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 20) map_j0k1l2 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 300, y: 70) all_same_m3n4o5 root.main.all_characters_same_helper {}\n\n        input_1a2b3c -> characters_7g8h9i.input\n        func() {\n            in(x: -50, y: 10, name: \"element\") property(String) element_p6q7r8\n\n            out(x: 200, y: 30, name: \"output\") property(Bool) output_s9t0u1\n\n            instance(x: 100, y: 20) equal_v2w3x4 root.Std_k98ojb.Logic.Equal {}\n            element_p6q7r8 -> equal_v2w3x4.left\n            characters_7g8h9i.characters[0] -> equal_v2w3x4.right\n            equal_v2w3x4.result -> output_s9t0u1\n        } -> map_j0k1l2.handler\n        characters_7g8h9i.characters -> map_j0k1l2.items\n        func() {\n            in(x: -100, y: 10, name: \"elements\") property(List) elements_y5z6a7\n\n            out(x: 400, y: 90, name: \"output\") property(Bool) output_b8c9d0\n\n            instance(x: 150, y: 60) all_true_f1g2h3 root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -30, y: 5, name: \"element\") property(Bool) element_i4j5k6\n\n                out(x: 250, y: 25, name: \"output\") property(Bool) output_l7m8n9\n\n                instance(x: 120, y: 15) not_o0p1q2 root.Std_k98ojb.Logic.Not {}\n                element_i4j5k6 -> not_o0p1q2.input\n                not_o0p1q2.result -> output_l7m8n9\n            } -> all_true_f1g2h3.handler\n            elements_y5z6a7 -> all_true_f1g2h3.items\n            all_true_f1g2h3.output_list.length == 0 -> output_b8c9d0\n        } -> all_same_m3n4o5.handler\n        map_j0k1l2.output_list -> all_same_m3n4o5.elements\n        all_same_m3n4o5.result -> output_d4e5f6\n    }\n\n    func(doc: \"Helper function to check if all elements in a list are true.\") all_characters_same_helper {\n        in(x: 0, y: 0, name: \"elements\") property(List) elements\n\n        out(x: 0, y: 0, name: \"result\") property(Bool) result\n    }\n\n}\n\ninstance(x: -200, y: 50) all_characters_same_9a8b7c root.main.all_characters_same {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -300, y: -50, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 600, y: 0, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -25, name: \"characters\") characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 75, name: \"all same\") ifexpression_j0k1l2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == first\"\n        }\n        instance(x: -100, y: 150) for_m3n4o5 root.Std_k98ojb.Std.For {}\n        getter(x: 200, y: 225, name: \"getter_p6q7r8\") getter_p6q7r8 = first\n        setter(x: 350, y: -75, name: \"setter_s9t0u1\") setter_s9t0u1 = first\n\n        input_1a2b3c -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> for_m3n4o5.items\n        for_m3n4o5.item -> ifexpression_j0k1l2.gen_2\n        for_m3n4o5.index -> ifexpression_j0k1l2.gen_0\n        getter_p6q7r8.value -> ifexpression_j0k1l2.gen_1\n        for_m3n4o5.onItem -> ifexpression_j0k1l2.execute\n        for_m3n4o5.done -> output_d4e5f6\n\n        ifexpression_j0k1l2.value -> output_d4e5f6\n        ifexpression_j0k1l2.then -> setter_s9t0u1.execute\n        for_m3n4o5.item -> setter_s9t0u1.new_value\n        setter_s9t0u1.continue -> for_m3n4o5.next\n    }\n\n    \n\n    instance(x: 100, y: -50) all_characters_same_abc123 root.main.all_characters_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -300, y: -50, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 500, y: 100, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -25, name: \"characters\") characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 75, name: \"all same\") all_same_jk0l1m root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -100, y: 25, name: \"current\") property(String) current_2n3o4p\n                in(x: -50, y: 75, name: \"_index\") property(Number) _index_qr5s6t\n\n                out(x: 200, y: 125, name: \"output\") property(Bool) output_u7v8w9\n\n                instance(x: 0, y: 100, name: \"equal\") equal_x1y2z3 root.Std_k98ojb.Logic.Equal {}\n                characters_7g8h9i.characters -> equal_x1y2z3.left\n                current_2n3o4p -> equal_x1y2z3.right\n                equal_x1y2z3.result -> output_u7v8w9\n            }\n        }\n\n        input_1a2b3c -> characters_7g8h9i.input\n        characters_7g8h9i.characters -> all_same_jk0l1m.items\n        func() {\n            in(x: -50, y: 25, name: \"current\") property(String) current_a4b5c6\n\n            out(x: 150, y: 125, name: \"output\") property(Bool) output_d7e8f9\n\n            instance(x: 0, y: 100, name: \"equal\") equal_g1h2i3 root.Std_k98ojb.Logic.Equal {}\n            characters_7g8h9i.characters -> equal_g1h2i3.left\n            current_a4b5c6 -> equal_g1h2i3.right\n            equal_g1h2i3.result -> output_d7e8f9\n        } -> all_same_jk0l1m.handler\n        all_same_jk0l1m.output_list.length == characters_7g8h9i.characters.length -> output_d4e5f6\n    }\n\n    \n\n    instance(x: -100, y: 50) all_characters_same_test root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -280, y: -20, name: \"input\") property(String) input_3f8d9b\n\n        out(x: 557, y: 30, name: \"output\") property(Bool) output_7c2e1a\n\n        instance(x: -120, y: -15) characters_5f4b6a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 201, y: 25) map_9d3b8f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 420, y: 30) all_same_1c2e7b root.main.all_characters_same_helper {}\n\n        input_3f8d9b -> characters_5f4b6a.input\n        func() {\n            in(x: -50, y: 10, name: \"element\") property(String) element_8f3b2c\n\n            out(x: 250, y: 15, name: \"output\") property(Bool) output_d9e7f1\n\n            instance(x: 100, y: 5) equal_f4d6a root.Std_k98ojb.Logic.Equal {}\n            element_8f3b2c -> equal_f4d6a.left\n            characters_5f4b6a.characters[0] -> equal_f4d6a.right\n            equal_f4d6a.result -> output_d9e7f1\n        } -> map_9d3b8f.handler\n        characters_5f4b6a.characters -> map_9d3b8f.items\n        map_9d3b8f.output_list -> all_same_1c2e7b.list\n\n        func(doc: \"Helper function to check if all elements in a list are the same.\") all_characters_same_helper {\n            in(x: -100, y: 0, name: \"list\") property(List) list_6d3a8f\n\n            out(x: 250, y: 20, name: \"output\") property(Bool) output_b2e7c1\n\n            instance(x: 50, y: 5) all_true_9b4d7e root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -30, y: 10, name: \"element\") property(Bool) element_3f8d9b\n\n                out(x: 150, y: 15, name: \"output\") property(Bool) output_7c2e1a\n\n                instance(x: 70, y: 5) not_4f6a root.Std_k98ojb.Logic.Not {}\n                element_3f8d9b -> not_4f6a.input\n                not_4f6a.result -> output_7c2e1a\n            } -> all_true_9b4d7e.handler\n            list_6d3a8f -> all_true_9b4d7e.items\n            all_true_9b4d7e.output_list.IsEmpty -> output_b2e7c1\n        }\n    }\n\n    \n\n    instance(x: -150, y: 50) all_characters_same_instance root.main.all_characters_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether all the characters in a string are the same.\") all_characters_same {\n        in(x: -300, y: -50, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 600, y: 0, name: \"output\") property(Bool) output_d4e5f6\n\n        instance(x: -150, y: -25, name: \"characters\") characters_a7b8c9 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 0, name: \"all same\") all_same_3d4e5f root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -100, y: 25, name: \"current\") property(String) current_6a7b8c\n                in(x: -50, y: 75, name: \"_index\") property(Number) _index_9d0e1f\n\n                out(x: 250, y: 50, name: \"output\") property(Bool) output_g5h6i7\n\n                instance(x: 100, y: 37, name: \"equal\") equal_j8k9l0 root.Std_k98ojb.Logic.Equal {}\n                characters_a7b8c9.characters -> equal_j8k9l0.left\n                current_6a7b8c -> equal_j8k9l0.right\n                equal_j8k9l0.result -> output_g5h6i7\n            }\n        }\n\n        input_1a2b3c -> characters_a7b8c9.input\n        characters_a7b8c9.characters -> all_same_3d4e5f.items\n        func() {\n            in(x: -200, y: 25, name: \"first\") property(String) first_m1n2o3\n\n            out(x: 300, y: 50, name: \"output\") property(Bool) output_p4q5r6\n\n            instance(x: 0, y: 37, name: \"equal\") equal_s7t8u9 root.Std_k98ojb.Logic.Equal {}\n            first_m1n2o3 -> equal_s7t8u9.left\n            characters_a7b8c9.characters[0] -> equal_s7t8u9.right\n            equal_s7t8u9.result -> output_p4q5r6\n        } -> all_same_3d4e5f.handler\n        all_same_3d4e5f.output_list.length == characters_a7b8c9.characters.length -> output_d4e5f6\n    }\n\n    \n\n    instance(x: -100, y: 50) all_characters_same_test root.main.all_characters_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(it: String) Bool {\n                return Std_k98ojb.Strings.IsNumeric(it)\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count.Length\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(it: String) Bool {\n                return Std_k98ojb.Strings.IsNumeric(it)\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count.Length\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(item: String) -> Bool {\n                in property(String) item\n                out property(Bool) is_digit\n\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item -> is_numeric_node.input\n                is_numeric_node.is_numeric -> is_digit\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(it: String) Bool {\n                return Std_k98ojb.Strings.IsNumeric(it)\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count.Length\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 100, y: 0) count_digits_logic root.main.count_digits_logic {}\n\n        characters_node.characters -> count_digits_logic.chars\n        count_digits_logic.digit_count -> digit_count\n    }\n\n    func(doc: \"logic to count digits in a list of characters.\") count_digits_logic {\n        in(x: 0, y: 0, name: \"chars\") property(List) chars\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 200, y: 0) filter_node root.Std_k98ojb.Query.Filter {\n            where: \"Strings.IsNumeric(it)\"\n        }\n        chars -> filter_node.list\n        filter_node.result -> count_digits_logic.digit_count\n    }\n\n    \n    instance(x: -50, y: -100) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(it: String) Bool {\n                return Std_k98ojb.Strings.IsNumeric(it)\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count.Length\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(it: String) Bool {\n                return Std_k98ojb.Strings.IsNumeric(it)\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count.Length\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(item: String) -> Bool {\n                in property(String) item\n                out property(Bool) is_digit\n\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item -> is_numeric_node.input\n                is_numeric_node.is_numeric -> is_digit\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 100, y: 0) count_digits_2a3f4e root.main.count_digits {}\n        characters_node.characters -> count_digits_2a3f4e.items\n        count_digits_2a3f4e.digit_count -> digit_count\n    }\n\n    \n    instance(x: -50, y: 100) count_digits_instance root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input_string\") property(String) input_string\n        out(x: 0, y: 0, name: \"digit_count\") property(Number) digit_count\n\n        instance(x: 0, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_string -> characters_node.input\n\n        instance(x: 0, y: 0) filter_digits_node root.Std_k98ojb.Iteration.Filter {\n            handler: func(item: String) -> Bool {\n                in property(String) item\n                out property(Bool) is_digit\n\n                instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n                item -> is_numeric_node.input\n                is_numeric_node.is_numeric -> is_digit\n            }\n        }\n        characters_node.characters -> filter_digits_node.items\n        filter_digits_node.output_list -> count_digits.digit_count\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_instance root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -300, y: 50, name: \"n\") property(Number) n_3a3116\n\n        out(x: 600, y: 10, name: \"sum\") property(Number) sum_e5f7b\n\n        instance(x: 20, y: 0) pow_1d2c4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 320, y: 130) data_cde0dc  = 3\n        instance(x: 10, y: 140) expression_5f6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n-1\"\n        }\n        instance(x: 290, y: 20) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_1d2c4.second\n        n_3a3116 -> pow_1d2c4.first\n        expression_5f6da6.result -> mul_f892a4.first\n        pow_1d2c4.result -> mul_f892a4.second\n        instance(x: 300, y: -10) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> add_64046c.second\n        mul_f892a4.result -> add_64046c.first\n        n_3a3116 -> expression_5f6da6.gen_0\n        add_64046c.result -> sum_e5f7b\n    }\n\n    \n\n    instance(x: 100, y: -50) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 166, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: 145, name: \"sum\") property(Number) sum_ebef81\n\n        instance(x: 0, y: 0) expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 46, y: -383, name: \"fourth_power\") pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 394, y: -339) data_3c713b  = [sum]\n        instance(x: 62, y: -226, name: \"sum\") add_2d44da root.Std_k98ojb.Math.Add {}\n        data_3c713b -> sum_ebef81\n        n_c88d35 -> expression_634b7e.gen_0\n        pow_f892a4.result -> add_2d44da.second\n        expression_634b7e.result -> pow_f892a4.first\n        4 -> pow_f892a4.y\n        add_2d44da.result -> data_3c713b.sum\n        n_c88d35 -> add_2d44da.first\n    }\n\n    \n\n    instance(x: -55, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 166, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: 145, name: \"sum\") property(Number) sum_ebef81\n\n        instance(x: 0, y: 0) expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 46, y: -383, name: \"fourth_power\") pow_2d44da root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 394, y: -339) data_cde0dc  = [sum]\n        expression_634b7e.result -> pow_2d44da.first\n        n_c88d35 -> expression_634b7e.gen_0\n        pow_2d44da.second -> 4\n        instance(x: 62, y: -226) sum_instance root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -113, y: 34, name: \"acc\") property(Number) acc_af09a7\n\n            in(x: -113, y: 44, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 85, name: \"result\") property(Number) result_1eb6e9\n\n            pow_2d44da.result -> sum_instance.handler.first\n            acc_af09a7 -> sum_instance.handler.second\n            elem_9f6850 -> sum_instance.handler.third\n            sum_instance.handler.result -> result_1eb6e9\n        } -> sum_instance.handler\n        instance(x: 532, y: 147) generate_range_f892a4 root.Std_k98ojb.List.GenerateRange {}\n        data_instance(x: 394, y: -339) data_3c713b  = [1, n]\n        generate_range_f892a4.items -> sum_instance.items\n        data_3c713b -> generate_range_f892a4.from_to\n        pow_2d44da.result -> sum_instance.handler.first\n        0 -> sum_instance.initial_value\n        sum_instance.result -> data_cde0dc.sum\n        data_cde0dc -> sum_ebef81\n    }\n\n    \n\n    instance(x: -55, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 166, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: 145, name: \"sum\") property(Number) sum_ebef81\n\n        instance(x: 0, y: 0) expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 46, y: -383, name: \"fourth_power\") pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 394, y: -339) data_3c713b  = [sum]\n        instance(x: 62, y: -226, name: \"sum_iteration\") reduce_2d44da root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -113, y: 34, name: \"acc\") property(Number) acc_9f6850\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"result\") property(Number) result_af09a7\n\n                instance(x: 310, y: 133) add_cde0dc root.Std_k98ojb.Math.Add {}\n                acc_9f6850 -> add_cde0dc.first\n                elem_9f6850 -> add_cde0dc.second\n                add_cde0dc.result -> result_af09a7\n            }\n        }\n\n        expression_634b7e.result -> pow_f892a4.x\n        4 -> pow_f892a4.y\n        n_c88d35 -> expression_634b7e.gen_0\n        List.GenerateRange(from: 1, to: n_c88d35) -> reduce_2d44da.items\n        pow_f892a4.result -> reduce_2d44da.handler.elem\n        0 -> reduce_2d44da.handler.acc\n        reduce_2d44da.result -> data_3c713b.sum\n        data_3c713b.sum -> sum_ebef81\n    }\n\n    \n\n    instance(x: -55, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_c88d35\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (2*n-1) * (2*n+1) / 3\"\n        }\n\n        instance(x: 62, y: -226, name: \"fourth_power\") pow_2d44da root.Std_k98ojb.Math.Pow {}\n        data_cde0dc -> output_edc2e3\n        n_c88d35 -> expression_634b7e.gen_0\n        expression_634b7e.result -> data_cde0dc.sum\n        find_6d05b0.item -> pow_2d44da.first\n        4 -> pow_2d44da.second\n        pow_2d44da.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -55, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -300, y: 50, name: \"n\") property(Number) n_3a3116\n\n        out(x: 600, y: 10, name: \"sum\") property(Number) sum_ebef81\n\n        instance(x: 20, y: 0) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 30, y: 50) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        instance(x: 300, y: 0) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        expression_2d6da6.result -> pow_f892a4.first\n        4 -> pow_f892a4.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.result -> div_64046c.first\n        data_cde0dc -> div_64046c.second\n        div_64046c.result -> sum_ebef81\n\n        instance(x: 10, y: -50) for_loop root.Std_k98ojb.Std.For {\n            items: List.GenerateRange(from: 1, to: n_3a3116)\n        }\n        func() {\n            in(x: -100, y: 0, name: \"item\") property(Number) item_9f6850\n\n            out(x: 500, y: 50, name: \"continue\") trigger() continue_af09a7\n\n            instance(x: 10, y: 20) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 30) setter_807ffd root.Std_k98ojb.Variable.Setter {\n                name: \"sum\"\n            }\n            item_9f6850 -> expression_2d6da6.gen_0\n            div_64046c.result -> add_1088d5.first\n            sum_ebef81 -> add_1088d5.second\n            add_1088d5.result -> setter_807ffd.new_value\n            0 -> setter_807ffd.old_value\n            setter_807ffd.continue -> continue_af09a7\n        } -> for_loop.on_item\n    }\n\n    \n\n    instance(x: -50, y: 100) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -300, y: 50, name: \"n\") property(Number) n_3a3116\n\n        out(x: 600, y: 10, name: \"sum\") property(Number) sum_e5f7b\n\n        instance(x: 20, y: 0) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 320, y: 130) data_cde0dc  = 4\n        instance(x: 10, y: 140) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"2*i-1\"\n        }\n        instance(x: 290, y: 5) sum_64046c root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -110, y: 35, name: \"acc\") property(Number) acc_9f6850\n            in(x: -100, y: 45, name: \"elem\") property(Number) elem_af09a7\n\n            out(x: 510, y: 55, name: \"result\") property(Number) result_bf09a7\n\n            pow_f892a4.result -> sum_64046c.handler.first\n            acc_9f6850 -> sum_64046c.handler.second\n            elem_af09a7 -> expression_2d6da6.gen_0\n            data_cde0dc -> pow_f892a4.y\n            expression_2d6da6.result -> pow_f892a4.x\n        } -> sum_64046c.reducer\n        instance(x: 10, y: -20) generate_range_3b7e8f root.Std_k98ojb.List.GenerateRange {}\n        n_3a3116 -> generate_range_3b7e8f.to\n        1 -> generate_range_3b7e8f.from\n        sum_64046c.result -> sum_e5f7b\n        generate_range_3b7e8f.listWithItem -> sum_64046c.items\n    }\n\n    \n\n    instance(x: 100, y: -50) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -300, y: 50, name: \"n\") property(Number) n_3a3116\n\n        out(x: 600, y: 10, name: \"sum\") property(Number) sum_ebef81\n\n        instance(x: 0, y: 0) expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 50, y: -20) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 350, y: 130) data_cde0dc  = 4\n        instance(x: 30, y: 140) sum_64046c root.Std_k98ojb.Math.Add {}\n        expression_634b7e.result -> pow_f892a4.first\n        n_3a3116 -> expression_634b7e.gen_0\n        data_cde0dc -> pow_f892a4.second\n        pow_f892a4.result -> sum_64046c.first\n        sum_64046c.first -> sum_64046c.second\n        n_3a3116 -> sum_64046c.second\n        sum_64046c.result -> sum_ebef81\n    }\n\n    \n\n    instance(x: 100, y: -50) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> add_64046c.second\n        pow_f892a4.result -> add_64046c.first\n        expression_2d6da6.result -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 166, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: 145, name: \"sum\") property(Number) sum_ebef81\n\n        instance(x: 0, y: 0) expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 46, y: -383, name: \"fourth_power\") pow_2d44da root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 394, y: -339) data_cde0dc  = [sum]\n        expression_634b7e.result -> pow_2d44da.first\n        n_c88d35 -> expression_634b7e.gen_0\n        pow_2d44da.second -> 4\n        instance(x: 62, y: -226) sum_instance root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -113, y: 34, name: \"acc\") property(Number) acc_af09a7\n\n            in(x: -113, y: 44, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 85, name: \"result\") property(Number) result_1eb6e9\n\n            pow_2d44da.result -> sum_instance.handler.first\n            acc_af09a7 -> sum_instance.handler.second\n            elem_9f6850 -> sum_instance.handler.third\n            sum_instance.handler.result -> result_1eb6e9\n        } -> sum_instance.handler\n        instance(x: 532, y: 147) generate_range_f892a4 root.Std_k98ojb.List.GenerateRange {}\n        data_instance(x: 394, y: -339) data_3c713b  = [1, n]\n        generate_range_f892a4.items -> sum_instance.items\n        data_3c713b -> generate_range_f892a4.from_to\n        pow_2d44da.result -> sum_instance.handler.first\n        0 -> sum_instance.initial_value\n        sum_instance.result -> data_cde0dc.sum\n        data_cde0dc -> sum_ebef81\n    }\n\n    \n\n    instance(x: -55, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_3f1b9d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_ba8c2e\n\n        instance(x: 94, y: -105) mul_7f4b5a root.Std_k98ojb.Math.Mul {}\n        side_length_3f1b9d -> mul_7f4b5a.first\n        6 -> mul_7f4b5a.second\n        instance(x: 94, y: -30) pow_d8e2c0 root.Std_k98ojb.Math.Pow {}\n        side_length_3f1b9d -> pow_d8e2c0.x\n        2 -> pow_d8e2c0.y\n        mul_7f4b5a.result -> surface_area_ba8c2e\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_1d9f3b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_3f1b2d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_b4c8e7\n\n        instance(x: 94, y: -105) mul_5a9b6f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_2d3a1e root.Std_k98ojb.Math.Mul {}\n        side_length_3f1b2d -> mul_5a9b6f.first\n        side_length_3f1b2d -> mul_5a9b6f.second\n        mul_5a9b6f.result -> mul_2d3a1e.first\n        6 -> mul_2d3a1e.second\n        mul_2d3a1e.result -> surface_area_b4c8e7\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_9f8b5d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_3f8b9d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_d4e7a1\n\n        instance(x: 94, y: -105) mul_5c2b6a root.Std_k98ojb.Math.Mul {}\n        side_length_3f8b9d -> mul_5c2b6a.first\n        6 -> mul_5c2b6a.second\n\n        instance(x: 92, y: -22) mul_7e4c1b root.Std_k98ojb.Math.Mul {}\n        side_length_3f8b9d -> mul_7e4c1b.first\n        side_length_3f8b9d -> mul_7e4c1b.second\n\n        instance(x: 92, y: -22) mul_2a6f5d root.Std_k98ojb.Math.Mul {}\n        mul_7e4c1b.result -> mul_2a6f5d.first\n        mul_5c2b6a.result -> mul_2a6f5d.second\n\n        mul_2a6f5d.result -> surface_area_d4e7a1\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_3f1b9d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_ba8c7e\n\n        instance(x: 94, y: -105) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a3f6b root.Std_k98ojb.Math.Mul {}\n        side_length_3f1b9d -> mul_2f9d09.first\n        side_length_3f1b9d -> mul_2f9d09.second\n        6 -> mul_1a3f6b.first\n        mul_2f9d09.result -> mul_1a3f6b.second\n        mul_1a3f6b.result -> surface_area_ba8c7e\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_f4b5c2 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -281, y: 55, name: \"side_length\") property(Number) side_length_1a2b3c\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_d4e5f6\n\n        instance(x: 352, y: -493) mul_6030c9 root.Std_k98ojb.Math.Mul {}\n        side_length_1a2b3c -> mul_6030c9.first\n        6 -> mul_6030c9.second\n        instance(x: 591, y: 74) mul_038fce root.Std_k98ojb.Math.Mul {}\n        mul_6030c9.result -> mul_038fce.first\n        side_length_1a2b3c -> mul_038fce.second\n        mul_038fce.result -> surface_area_d4e5f6\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_f7g8h9 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -219, y: 55, name: \"side_length\") property(Number) side_length_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side_length * side_length\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        \n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_f892a4.second\n        data_cde0dc -> mul_f892a4.first\n        mul_f892a4.result -> mul_64046c.first\n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_64046c.second\n        \n        mul_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_f9cc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -219, y: 55, name: \"side_length\") property(Number) side_length_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side_length * side_length\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        \n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_f892a4.second\n        data_cde0dc -> mul_f892a4.first\n        mul_f892a4.result -> mul_64046c.first\n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_64046c.second\n        \n        mul_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_f9cc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -219, y: 55, name: \"side_length\") property(Number) side_length_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side_length * side_length\"\n        }\n        instance(x: 303, y: 2) mul_64046c root.Std_k98ojb.Math.Mul {}\n        \n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_f892a4.second\n        data_cde0dc -> mul_f892a4.first\n        mul_f892a4.result -> mul_64046c.first\n        side_length_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_64046c.second\n        \n        mul_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_f9cc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_3f1b9d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_d4e8a2\n\n        instance(x: 94, y: -105) mul_7c5b6a root.Std_k98ojb.Math.Mul {}\n        side_length_3f1b9d -> mul_7c5b6a.first\n        6 -> mul_7c5b6a.second\n\n        instance(x: 333, y: -50) mul_2e8b4f root.Std_k98ojb.Math.Mul {}\n        side_length_3f1b9d -> mul_2e8b4f.first\n        mul_7c5b6a.result -> mul_2e8b4f.second\n\n        mul_2e8b4f.result -> surface_area_d4e8a2\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_3f8b2d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_b9c7e1\n\n        instance(x: 94, y: -105) mul_5a6b4f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_2d8f3a root.Std_k98ojb.Math.Mul {}\n        side_length_3f8b2d -> mul_5a6b4f.first\n        side_length_3f8b2d -> mul_5a6b4f.second\n        mul_5a6b4f.result -> mul_2d8f3a.first\n        6 -> mul_2d8f3a.second\n        mul_2d8f3a.result -> surface_area_b9c7e1\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_4b5f8d root.main.cube_surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -569, y: 438, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -300, y: 200, name: \"list\") property(List) list_1a2b3c\n\n        out(x: 400, y: 150, name: \"difference\") property(Number) difference_4d5e6f\n\n        instance(x: -100, y: 250) max_node root.Std_k98ojb.List.Max {}\n        instance(x: -100, y: 50) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 200, y: 150) sub_7g8h9i root.Std_k98ojb.Math.Sub {}\n\n        list_1a2b3c -> max_node.items\n        list_1a2b3c -> min_node.items\n\n        max_node.max -> sub_7g8h9i.first\n        min_node.min -> sub_7g8h9i.second\n\n        sub_7g8h9i.result -> difference_4d5e6f\n    }\n\n    \n\n    instance(x: 50, y: 100) diff_max_min_instance root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: -26, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max value\") max_node root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372, name: \"Min value\") min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_542a51 -> max_node.items\n        list_542a51 -> min_node.items\n\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % 2 == 0)\"\n        }\n        \n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> output_f3db9f\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % 2 == 0)\"\n        }\n        \n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> output_f3db9f\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % 2 == 0)\"\n        }\n        \n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> output_f3db9f\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % 2 == 0)\"\n        }\n        \n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> output_f3db9f\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % 2 == 0)\"\n        }\n        \n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> output_f3db9f\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 352, y: -493) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_8cb3f6 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> modulo_7b3b9b.value\n        2 -> modulo_7b3b9b.divisor\n\n        modulo_7b3b9b.result -> if_8cb3f6.predicate\n        if_8cb3f6.then -> output_f3db9f\n        false -> if_8cb3f6.else\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 352, y: -493) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_8cb3f6 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> modulo_7b3b9b.value\n        2 -> modulo_7b3b9b.divisor\n\n        modulo_7b3b9b.result -> if_8cb3f6.predicate\n        if_8cb3f6.then -> output_f3db9f\n        false -> if_8cb3f6.else\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 352, y: -493) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_8cb3f6 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> modulo_7b3b9b.value\n        2 -> modulo_7b3b9b.divisor\n\n        modulo_7b3b9b.result -> if_8cb3f6.predicate\n        if_8cb3f6.then -> output_f3db9f\n        false -> if_8cb3f6.else\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % 2 == 0)\"\n        }\n        \n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> output_f3db9f\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_f3db9f\n\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % 2 == 0)\"\n        }\n        \n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> output_f3db9f\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -230, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3f5b7a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_repeated_9d8c2e root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"First repeated character\") ``First repeated character_1a3f7b`` root.Std_k98ojb.Iteration.Find {}\n\n        input_string -> characters_3f5b7a.input\n        characters_3f5b7a.characters -> find_repeated_9d8c2e.items\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_5b6d8f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) count_greater_than_1_3c2e7a root.Std_k98ojb.Math.Expression {}\n\n            current_char -> contains_5b6d8f.input\n            characters_3f5b7a.characters -> contains_5b6d8f.contains\n\n            expression: \"contains.count > 1\"\n            contains_5b6d8f.result -> count_greater_than_1_3c2e7a.gen_0\n            count_greater_than_1_3c2e7a.result -> is_repeated\n        } -> find_repeated_9d8c2e.predicate\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_first_occurrence\n\n            instance(x: 112, y: 80) contains_5b6d8f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n\n            current_char -> contains_5b6d8f.input\n            characters_3f5b7a.characters -> contains_5b6d8f.contains\n\n            0 -> equal_a54bdc.right\n            contains_5b6d8f.index -> equal_a54bdc.left\n            equal_a54bdc.result -> is_first_occurrence\n        } -> ``First repeated character_1a3f7b``.predicate\n\n        find_repeated_9d8c2e.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -230, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5f8b3a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_repeated_9d4e2c root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"First repeated character\") ``First repeated character_3a1f7`` root.Std_k98ojb.Iteration.Find {}\n\n        input_string -> characters_5f8b3a.input\n        characters_5f8b3a.characters -> find_repeated_9d4e2c.items\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            in(x: -192, y: 84, name: \"seen\") property(List) seen_chars\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_1b2c4d root.Std_k98ojb.Strings.Contains {}\n            contains_1b2c4d.input -> seen_chars\n            current_char -> contains_1b2c4d.contains\n\n            contains_1b2c4d.result -> is_repeated\n        } -> find_repeated_9d4e2c.predicate\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            in(x: -192, y: 84, name: \"seen\") property(List) seen_chars\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_1b2c4d root.Std_k98ojb.Strings.Contains {}\n            contains_1b2c4d.input -> seen_chars\n            current_char -> contains_1b2c4d.contains\n\n            contains_1b2c4d.result -> is_repeated\n        } -> ``First repeated character_3a1f7``.predicate\n\n        instance(x: 0, y: 60) list_add_8e9f6b root.Std_k98ojb.List.Add {}\n        find_repeated_9d4e2c.item -> list_add_8e9f6b.item\n        seen_chars -> list_add_8e9f6b.list\n\n        instance(x: -39, y: 26) list_getat_7a3b1d root.Std_k98ojb.List.GetAt {}\n        ``First repeated character_3a1f7``.item -> list_getat_7a3b1d.index\n        seen_chars -> list_getat_7a3b1d.list\n\n        list_add_8e9f6b.listWithItem -> find_repeated_9d4e2c.items\n        ``First repeated character_3a1f7``.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -250, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 600, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3f8b7a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 300, y: 60) find_repeated_9d4e2c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 500, y: -50) if_1a5b3f root.Std_k98ojb.Std.If {}\n\n        characters_3f8b7a.input -> input_string\n        characters_3f8b7a.characters -> find_repeated_9d4e2c.items\n\n        func() {\n            in(x: -100, y: 34, name: \"elem\") property(String) elem_1\n            in(x: -100, y: 70, name: \"index\") property(Number) index_0\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_result\n\n            instance(x: 89, y: 29) list_contains_7b8c2d root.Std_k98ojb.List.Contains {}\n            list_contains_7b8c2d.item -> elem_1\n            list_contains_7b8c2d.list -> characters_3f8b7a.characters.Slice(0, index_0)\n            list_contains_7b8c2d.result -> bool_result\n        } -> find_repeated_9d4e2c.predicate\n\n        find_repeated_9d4e2c.item -> if_1a5b3f.then\n        find_repeated_9d4e2c.index -> result_0\n        if_1a5b3f.else -> continue_075eef\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -230, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3f8b7a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_repeated_9d4e2c root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"Set\") set_1f8a3b root.Std_k98ojb.List.Empty {}\n\n        input_string -> characters_3f8b7a.input\n        characters_3f8b7a.characters -> find_repeated_9d4e2c.items\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_5b6d9f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notroot.Std_k98ojb.Logic.Not {}\n\n            current_char -> contains_5b6d9f.input\n            set_1f8a3b.list -> contains_5b6d9f.contains\n\n            contains_5b6d9f.result -> notroot.Std_k98ojb.Logic.Not.predicate\n            notroot.Std_k98ojb.Logic.Not.result -> is_repeated\n\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_char\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) is_added\n\n                instance(x: 112, y: 80) notroot.Std_k98ojb.List.Contains {}\n                instance(x: 415, y: 86) add_7f8d9e root.Std_k98ojb.List.Add {}\n\n                current_char -> notroot.Std_k98ojb.List.Contains.item\n                set_1f8a3b.list -> notroot.Std_k98ojb.List.Contains.list\n\n                notroot.Std_k98ojb.List.Contains.result -> add_7f8d9e.predicate\n                current_char -> add_7f8d9e.item\n                set_1f8a3b.list -> add_7f8d9e.list\n\n                add_7f8d9e.listWithItem -> set_1f8a3b.list\n            } -> find_repeated_9d4e2c.handler\n        } -> find_repeated_9d4e2c.predicate\n\n        find_repeated_9d4e2c.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -200, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 600, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3f8a4d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 300, y: 60) find_repeated_9c7e2f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 500, y: -40) if_e5b6a1 root.Std_k98ojb.Std.If {}\n\n        input_string -> characters_3f8a4d.input\n        characters_3f8a4d.characters -> find_repeated_9c7e2f.items\n\n        func() {\n            in(x: 0, y: 0, name: \"elem\") property(String) elem_1\n            out(x: 0, y: 0, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 0, y: 0) contains_7b8c3d root.Std_k98ojb.Strings.Contains {}\n            instance(x: 0, y: 0) list_contains_4f6a1e root.Std_k98ojb.List.Contains {}\n\n            elem_1 -> contains_7b8c3d.input\n            characters_3f8a4d.characters -> contains_7b8c3d.contains\n\n            contains_7b8c3d.result -> list_contains_4f6a1e.item\n            find_repeated_9c7e2f.items -> list_contains_4f6a1e.list\n\n            list_contains_4f6a1e.result -> bool_2\n        } -> find_repeated_9c7e2f.predicate\n\n        func() {\n            in(x: 0, y: 0, name: \"elem\") property(String) elem_3\n\n            out(x: 0, y: 0, name: \"bool\") property(Bool) bool_4\n\n            instance(x: 0, y: 0) list_contains_8f6b2e root.Std_k98ojb.List.Contains {}\n\n            elem_3 -> list_contains_8f6b2e.item\n            find_repeated_9c7e2f.items -> list_contains_8f6b2e.list\n\n            list_contains_8f6b2e.result -> bool_4\n        } -> if_e5b6a1.predicate\n\n        find_repeated_9c7e2f.item -> result_0\n        if_e5b6a1.then -> result_0\n    }\n\n    \n\n    instance(x: 100, y: 50) FirstRepeatedChar_f3d8b4 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -300, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 600, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_repeated_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"First repeated character\") ``First repeated character_0b1361`` root.Std_k98ojb.Iteration.Find {}\n\n        input_string -> characters_3c713b.input\n        characters_3c713b.characters -> find_repeated_7e1ce0.items\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            in(x: -192, y: 105, name: \"seen\") property(List) seen_chars\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            current_char -> contains_d42dce.input\n            seen_chars -> contains_d42dce.list\n            contains_d42dce.result -> is_repeated\n        } -> find_repeated_7e1ce0.predicate\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            in(x: -192, y: 105, name: \"seen\") property(List) seen_chars\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            current_char -> contains_d42dce.input\n            seen_chars -> contains_d42dce.list\n            contains_d42dce.result -> is_repeated\n        } -> ``First repeated character_0b1361``.predicate\n\n        instance(x: 310, y: 35) list_add_1088d5 root.Std_k98ojb.List.Add {}\n        find_repeated_7e1ce0.item -> list_add_1088d5.item\n        find_repeated_7e1ce0.items -> list_add_1088d5.list\n\n        instance(x: 310, y: 35) ``First repeated character_2`` root.Std_k98ojb.List.Add {}\n        ``First repeated character_0b1361``.item -> ``First repeated character_2``.item\n        find_repeated_7e1ce0.items -> ``First repeated character_2``.list\n\n        list_add_1088d5.listWithItem -> find_repeated_7e1ce0.seen\n        ``First repeated character_2``.listWithItem -> ``First repeated character_0b1361``.seen\n\n        find_repeated_7e1ce0.item -> result_0\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -300, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 600, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3f5b8a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 300, y: 50, name: \"Find first repeated character\") find_first_repeated_char_7d9c2e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -100) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n\n        input_string -> characters_3f5b8a.input\n        characters_3f5b8a.characters -> find_first_repeated_char_7d9c2e.items\n\n        func() {\n            in(x: -200, y: 0, name: \"current\") property(String) current_char\n\n            out(x: 500, y: 1, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 50, y: -10) slice_8b9c3d root.Std_k98ojb.List.Slice {}\n            instance(x: 250, y: 0) contains_d42dce_2 root.Std_k98ojb.Strings.Contains {}\n\n            current_char -> contains_d42dce_2.contains\n            slice_8b9c3d.output -> contains_d42dce_2.input\n\n            find_first_repeated_char_7d9c2e.items -> slice_8b9c3d.list\n            0 -> slice_8b9c3d.start\n            find_first_repeated_char_7d9c2e.index -> slice_8b9c3d.end\n\n            contains_d42dce_2.result -> is_repeated\n        } -> find_first_repeated_char_7d9c2e.predicate\n\n        find_first_repeated_char_7d9c2e.item -> result_0\n    }\n\n    \n\n    instance(x: -100, y: 50) FirstRepeatedCharInstance root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -300, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 600, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_repeated_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"First repeated character\") ``First repeated character_0b1361`` root.Std_k98ojb.Iteration.Find {}\n\n        input_string -> characters_3c713b.input\n        characters_3c713b.characters -> find_repeated_7e1ce0.items\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            in(x: -192, y: 105, name: \"seen\") property(List) seen_chars\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            current_char -> contains_d42dce.input\n            seen_chars -> contains_d42dce.list\n            contains_d42dce.result -> is_repeated\n        } -> find_repeated_7e1ce0.predicate\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            in(x: -192, y: 105, name: \"seen\") property(List) seen_chars\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            current_char -> contains_d42dce.input\n            seen_chars -> contains_d42dce.list\n            contains_d42dce.result -> is_repeated\n        } -> ``First repeated character_0b1361``.predicate\n\n        instance(x: 310, y: 35) list_add_1088d5 root.Std_k98ojb.List.Add {}\n        find_repeated_7e1ce0.item -> list_add_1088d5.item\n        find_repeated_7e1ce0.items -> list_add_1088d5.list\n\n        instance(x: 310, y: 35) ``First repeated character_2`` root.Std_k98ojb.List.Add {}\n        ``First repeated character_0b1361``.item -> ``First repeated character_2``.item\n        find_repeated_7e1ce0.items -> ``First repeated character_2``.list\n\n        list_add_1088d5.listWithItem -> find_repeated_7e1ce0.seen\n        ``First repeated character_2``.listWithItem -> ``First repeated character_0b1361``.seen\n\n        find_repeated_7e1ce0.item -> result_0\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -250, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_repeated_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"First repeated character\") ``First even number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n\n        input_string -> characters_3c713b.input\n        characters_3c713b.characters -> find_repeated_7e1ce0.items\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) ``First even number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n\n            current_char -> contains_d42dce.input\n            find_repeated_7e1ce0.items -> contains_d42dce.contains\n\n            contains_d42dce.result -> is_repeated\n        } -> find_repeated_7e1ce0.predicate\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n\n            current_char -> contains_d42dce.input\n            find_repeated_7e1ce0.items -> contains_d42dce.contains\n\n            contains_d42dce.result -> notequal_148aeb.left\n            false -> notequal_148aeb.right\n\n            notequal_148aeb.result -> is_repeated\n        } -> ``First even number_0b1361``.predicate\n\n        find_repeated_7e1ce0.item -> result_0\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -230, y: 0, name: \"string\") property(String) input_string\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_repeated_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"First repeated character\") ``First repeated character_0b1361`` root.Std_k98ojb.Iteration.Find {}\n\n        input_string -> characters_3c713b.input\n        characters_3c713b.characters -> find_repeated_7e1ce0.items\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) ``First repeated character_0b1361`` root.Std_k98ojb.Iteration.Find {}\n\n            current_char -> contains_d42dce.input\n            characters_3c713b.characters -> contains_d42dce.contains\n\n            contains_d42dce.result -> is_repeated\n        } -> find_repeated_7e1ce0.predicate\n\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_char\n            out(x: 698, y: 85, name: \"bool\") property(Bool) is_repeated\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n\n            current_char -> contains_d42dce.input\n            characters_3c713b.characters -> contains_d42dce.contains\n\n            contains_d42dce.result -> notequal_148aeb.left\n            false -> notequal_148aeb.right\n\n            notequal_148aeb.result -> is_repeated\n        } -> ``First repeated character_0b1361``.predicate\n\n        find_repeated_7e1ce0.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -100, y: -200) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it != first_min\"\n        }\n        list_abed4a -> filter_7b3b7b.list\n        first_min_9f7759 -> filter_7b3b7b.first_min\n        filter_7b3b7b.result -> filtered_list_f9110a\n\n        \n        instance(x: -50, y: -150) min_second_c3e343 root.Std_k98ojb.List.Min {}\n        filtered_list_f9110a -> min_second_c3e343.items\n        min_second_c3e343.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -100, y: -200) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it != first_min\"\n        }\n        list_abed4a -> filter_7b3b7b.list\n        first_min_9f7759 -> filter_7b3b7b.first_min\n        filter_7b3b7b.result -> filtered_list_f9110a\n\n        \n        instance(x: -50, y: -150) min_second_c3e343 root.Std_k98ojb.List.Min {}\n        filtered_list_f9110a -> min_second_c3e343.items\n        min_second_c3e343.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"second_min\") property(Number) second_min_3bc2ae\n\n        \n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_abed4a -> min_c3e343.items\n        min_c3e343.min -> first_min_9f7759\n\n        \n        instance(x: -174, y: -63) filter_node root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                first_min_9f7759 -> notequal_807ffd.right\n                elem_9f6850 -> notequal_807ffd.left\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        list_abed4a -> filter_node.items\n        filter_node.output_list -> filtered_list_ca79ac\n\n        \n        instance(x: -174, y: -63) min_c3e343_2 root.Std_k98ojb.List.Min {}\n        filtered_list_ca79ac -> min_c3e343_2.items\n        min_c3e343_2.min -> second_min_3bc2ae\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n\n}"
            ]
        }
    }
]