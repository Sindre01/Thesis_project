[
    {
        "experiment_name": "regular_RAG_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 15933,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds if two lists have at least one common element.\") has_common {\n        in(x: -499, y: 4, name: \"list1\") property(List) list_3a5d14\n        in(x: -509, y: -24, name: \"list2\") property(List) list_c0e6b8\n\n        out(x: 1239, y: -27, name: \"output\") property(Bool) output_4f1c45\n\n        instance(x: 76, y: 23, name: \"intersection\") Sets_Difference root.Std_k98ojb.Sets.Difference {}\n        list_c0e6b8 -> intersection.left\n        list_3a5d14 -> intersection.right\n        Sets_Difference.difference -> output_4f1c45\n    }\n\n    \n\n    instance(x: -47, y: 55) has_common_b7e2df root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if two lists have at least one common element.\") has_common {\n        in(x: -475, y: 19, name: \"list1\") property(List) list_9d3a0e\n        in(x: -483, y: 28, name: \"list2\") property(List) list_b8f6b7\n\n        out(x: 1244, y: 5, name: \"output\") property(Bool) output_d1c8e1\n\n        instance(x: 102, y: 44) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_b8f6b7 -> contains_32727d.list\n        list_9d3a0e -> contains_32727d.item\n        contains_32727d.is_contained -> output_d1c8e1\n    }\n\n    \n\n    instance(x: -292, y: 69) has_common_f4f5b root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether 2 lists have at least one common element.\") has_common_element {\n        in(x: -528, y: 3, name: \"list1\") property(List) list_6a0e5d\n        in(x: -523, y: 17, name: \"list2\") property(List) list_bf8c9b\n\n        out(x: 1044, y: -69, name: \"output\") property(Bool) output_f3c9f1\n\n        instance(x: 92, y: 12) intersection_0e7d66 root.Std_k98ojb.Sets.Intersection {}\n        list_6a0e5d -> intersection_0e7d66.left\n        list_bf8c9b -> intersection_0e7d66.right\n        intersection_0e7d66.intersection -> output_f3c9f1\n    }\n\n    \n\n    instance(x: -31, y: 55) has_common_element_ea2c4 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists have at least one common element.\") has_common {\n        in(x: -471, y: 4, name: \"list1\") property(List) list_1f8d23\n        in(x: -484, y: -19, name: \"list2\") property(List) list_b3e7a9\n\n        out(x: 123, y: -50, name: \"output\") property(Bool) output_b4c0b6\n\n        instance(x: 93, y: -24) contains_5d1f8e root.Std_k98ojb.List.Contains {}\n        list_1f8d23 -> contains_5d1f8e.list\n        list_b3e7a9 -> contains_5d1f8e.item\n        contains_5d1f8e.is_contained -> output_b4c0b6\n    }\n\n    \n\n    instance(x: -28, y: 64) has_common_d2fdd1 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if two lists have at least one common element.\") has_common {\n        in(x: -469, y: 4, name: \"list1\") property(List) list_1a0d3e\n        in(x: -478, y: -24, name: \"list2\") property(List) list_bfdd9b\n\n        out(x: 1218, y: 5, name: \"output\") property(Bool) output_c7c3eb\n\n        instance(x: 92, y: 49) intersection_6d1d4b root.Std_k98ojb.Sets.Intersection {}\n        list_1a0d3e -> intersection_6d1d4b.left\n        list_bfdd9b -> intersection_6d1d4b.right\n        intersection_6d1d4b.intersection -> output_c7c3eb\n    }\n\n    \n\n    instance(x: -292, y: 123) has_common_e0e8a5 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if two lists contain at least one common element.\") has_common_element {\n        in(x: -509, y: 21, name: \"list1\") property(List) list_9fdd8b\n        in(x: -494, y: -121, name: \"list2\") property(List) list_b6d4d3\n\n        out(x: 1035, y: -115, name: \"output\") property(Bool) output_ae4a83\n\n        instance(x: -28, y: -120) intersection_8f9b21 root.Std_k98ojb.Sets.Intersection {}\n        list_b6d4d3 -> intersection_8f9b21.left\n        list_9fdd8b -> intersection_8f9b21.right\n        intersection_8f9b21.intersection -> output_ae4a83\n    }\n\n    \n\n    instance(x: -19, y: 56) has_common_element_c7d1b root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if two lists have at least one common element.\") has_common {\n        in(x: -499, y: 15, name: \"list1\") property(List) list_4f2a3d\n        in(x: -505, y: 24, name: \"list2\") property(List) list_d6d0c8\n\n        out(x: -7, y: 10, name: \"output\") property(Bool) output_ae9b95\n\n        instance(x: -83, y: -28) contains_32727d root.Std_k98ojb.List.Contains {}\n        has_common -> contains_32727d.list\n        list_d6d0c8 -> contains_32727d.item\n        contains_32727d.is_contained -> output_ae9b95\n    }\n\n    \n\n    instance(x: -29, y: 46) has_common_ba7f3d root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if two lists have at least one common element.\") has_common {\n        in(x: -499, y: 2, name: \"list1\") property(List) list_0e5d21\n        in(x: -493, y: 19, name: \"list2\") property(List) list_e3bdf8\n\n        out(x: 1219, y: 10, name: \"output\") property(Bool) output_a4c1a7\n\n        instance(x: 761, y: 11) filter_0f6e21 root.Std_k98ojb.Query.Filter {\n            where: \"it in list2\"\n        }\n        list_e3bdf8 -> filter_0f6e21.list\n        filter_0f6e21.result -> output_a4c1a7\n    }\n\n    \n\n    instance(x: -27, y: 64) has_common_4d4f5 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if two lists have at least one common element.\") has_common {\n        in(x: -471, y: 18, name: \"list1\") property(List) list_3a0e5d\n        in(x: -484, y: -120, name: \"list2\") property(List) list_e4f7c8\n\n        out(x: 105, y: -98, name: \"output\") property(Bool) output_f9b6f1\n\n        instance(x: 92, y: 77) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list_3a0e5d -> zip_201051.left\n        list_e4f7c8 -> zip_201051.right\n        func() {\n            in(x: -192, y: 28, name: \"current\") property(Number) current_4e9b6b\n\n            out(x: 105, y: -98, name: \"output\") property(Bool) output_f9b6f1\n\n            instance(x: 104, y: 78) contains_32727d root.Std_k98ojb.List.Contains {}\n            current_4e9b6b -> contains_32727d.item\n            list_e4f7c8 -> contains_32727d.list\n            false -> contains_32727d.is_contained\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_f9b6f1\n    }\n\n    \n\n    instance(x: -293, y: 123) has_common_c7c4e0 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -527, y: 15, name: \"list1\") property(List) list_5f6b9d\n        in(x: -493, y: 19, name: \"list2\") property(List) list_d4d7c3\n\n        out(x: 1215, y: 14, name: \"output\") property(Bool) output_b1e8f6\n\n        instance(x: 105, y: 17) map_9b3a0b root.Std_k98ojb.Iteration.Map {}\n        list_d4d7c3 -> map_9b3a0b.items\n        func() {\n            in(x: -528, y: 8, name: \"current\") property(Number) current_6e2f45\n\n            out(x: 1231, y: 9, name: \"\") property(Bool) _0c4d7c\n\n            instance(x: 91, y: 12) contains_3a5b49 root.Std_k98ojb.List.Contains {}\n            list_d4d7c3 -> contains_3a5b49.item\n            current_6e2f45 -> map_9b3a0b.value\n            contains_3a5b49.is_contained -> _0c4d7c\n        } -> map_9b3a0b.handler\n        instance(x: 92, y: 15) ifexpression_1e6d8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it\"\n        }\n        list_d4d7c3 -> ifexpression_1e6d8.items\n        ifexpression_1e6d8.value -> output_b1e8f6\n    }\n\n    \n\n    instance(x: -89, y: 23) has_common_c0a5ad root.main.has_common {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -275, y: 3, name: \"list\") property(List) list_5d1a2e\n\n        out(x: 1239, y: -15, name: \"output\") property(Bool) output_a4b6c7\n\n        instance(x: -91, y: 20) has_consecutive_numbers_8f0d3 root.Std_k98ojb.List.HasConsecutiveNumbers {}\n        list_5d1a2e -> has_consecutive_numbers_8f0d3.list\n        has_consecutive_numbers_8f0d3.result -> output_a4b6c7\n    }\n\n    \n\n    instance(x: -69, y: 53) has_consecutive_numbers_dff9d root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") has_consecutive_nums {\n        in(x: -246, y: 2, name: \"list\") property(List) list_0a3d4f\n\n        out(x: 1026, y: -12, name: \"output\") property(Bool) output_e1e5b7\n\n        instance(x: -69, y: 73) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 191, y: 60) count_9d8c4a root.Std_k98ojb.Std.Count {}\n        list_0a3d4f -> for_d26972.items\n        for_d26972.index -> count_9d8c4a.reset\n        func() {\n            in(x: -121, y: 23, name: \"current\") property(Number) current_7e2f5b\n\n            out(x: 1011, y: -14, name: \"\") property(Bool) bool_6e3d66\n\n            instance(x: 88, y: 20) isnumber_f9c0a4 root.Std_k98ojb.Strings.IsNumeric {}\n            current_7e2f5b -> isnumber_f9c0a4.item\n            1 -> isnumber_f9c0a4.value\n            isnumber_f9c0a4.result -> bool_6e3d66\n        } -> for_d26972.handler\n        count_9d8c4a.count -> has_consecutive_nums.output\n    }\n\n    \n\n    instance(x: 46, y: -26) has_consecutive_nums_bf5b45 root.main.has_consecutive_nums {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -292, y: 34, name: \"list\") property(List) list_8d9a2f\n\n        out(x: 1214, y: 13, name: \"output\") property(Bool) output_a6e0c1\n\n        instance(x: 74, y: 11) for_f3b3b7 root.Std_k98ojb.Std.For {}\n        list_8d9a2f -> for_f3b3b7.items\n        for_f3b3b7.item -> is_consecutive_handler\n        for_f3b3b7.index -> is_consecutive_handler.gen_1\n        0 -> for_f3b3b7.reset\n        instance(x: -24, y: 49) subtract_c6d2a4 root.Std_k98ojb.Math.Sub {}\n        instance(x: 1148, y: 43) less_than_d9f5e4 root.Std_k98ojb.Logic.LessThanOrEqual {}\n        is_consecutive_handler.value -> less_than_d9f5e4.left\n        subtract_c6d2a4.result -> less_than_d9f5e4.right\n        for_f3b3b7.index -> subtract_c6d2a4.first\n        1 -> subtract_c6d2a4.second\n        is_consecutive_handler.value -> output_a6e0c1\n    }\n\n    \n\n    instance(x: -29, y: 24) is_consecutive_9fdd8e root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -292, y: 2, name: \"list\") property(List) list_0f1d3e\n\n        out(x: 1134, y: -10, name: \"output\") property(Bool) output_d5f6b8\n\n        instance(x: -82, y: -105) filter_7c5bdf root.Std_k98ojb.Query.Filter {}\n        list_0f1d3e -> filter_7c5bdf.list\n        filter_7c5bdf.result -> output_d5f6b8\n        instance(x: 246, y: -96) for_4a5ebf root.Std_k98ojb.Std.For {}\n        list_0f1d3e -> for_4a5ebf.items\n        for_4a5ebf.item -> greaterthan_cb50ae.left\n        greaterthan_cb50ae.right -> greaterthan_cb50ae.right\n        greaterthan_cb50ae.result -> output_d5f6b8\n        instance(x: 0, y: -21) less_than_1d9e43 root.Std_k98ojb.Math.LessThan {}\n        instance(x: 0, y: -22) sub_2df3a7 root.Std_k98ojb.Math.Sub {}\n        sub_2df3a7.result -> less_than_1d9e43.left\n        greaterthan_cb50ae.right -> less_than_1d9e43.right\n        less_than_1d9e43.result -> output_d5f6b8\n    }\n\n    \n\n    instance(x: -88, y: 44) is_consecutive_f7a5c1 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") contains_consecutive {\n        in(x: -269, y: 2, name: \"list\") property(List) list_4e1d35\n\n        out(x: 1025, y: 63, name: \"output\") property(Bool) output_ea7b3c\n\n        instance(x: 0, y: 0) for_d6f8ad root.Std_k98ojb.Std.For {}\n        list_4e1d35 -> for_d6f8ad.items\n        func() {\n            in(x: -109, y: 36, name: \"prev\") property(Number) prev_5aebc2\n\n            out(x: 509, y: 47, name: \"\") property(Number) curr_9e7d1b\n\n            instance(x: 93, y: 42) modulo_c6f3c8 root.Std_k98ojb.Math.Modulo {}\n            prev_5aebc2 -> modulo_c6f3c8.value\n            1 -> modulo_c6f3c8.divisor\n            curr_9e7d1b -> modulo_c6f3c8.result\n        } -> for_d6f8ad.handler\n        func() {\n            in(x: -109, y: 36, name: \"prev\") property(Number) prev_5aebc2\n\n            out(x: 509, y: 47, name: \"\") property(Number) curr_9e7d1b\n\n            instance(x: 93, y: 42) notequal_6f3f4 root.Std_k98ojb.Logic.NotEqual {}\n            prev_5aebc2 -> notequal_6f3f4.left\n            0 -> notequal_6f3f4.right\n            notequal_6f3f4.result -> curr_9e7d1b\n        } -> for_d6f8ad.handler\n        for_d6f8ad.item -> output_ea7b3c\n    }\n\n    \n\n    instance(x: -83, y: 52) contains_consecutive_c5d2e4 root.main.contains_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -292, y: 24, name: \"list\") property(List) list_6f3d8e\n\n        out(x: 1145, y: 15, name: \"output\") property(Bool) output_d1c2b4\n\n        instance(x: -69, y: 30) for_0a9cd0 root.Std_k98ojb.Std.For {}\n        list_6f3d8e -> for_0a9cd0.items\n        for_0a9cd0.item -> is_consecutive_helper_a5c7e1\n        for_0a9cd0.index -> is_consecutive_helper_b2c4b\n    }\n\n    func(is_consecutive_helper) {\n        in(x: -69, y: 30, name: \"x\") property(Number) x_5f3d6c\n\n        out(x: 1028, y: -19, name: \"\") property(Bool) _1a4e23\n\n        instance(x: 92, y: -15) sub_2b1fdd root.Std_k98ojb.Math.Sub {}\n        x_5f3d6c -> sub_2b1fdd.first\n        1 -> sub_2b1fdd.second\n        sub_2b1fdd.result -> _1a4e23\n        if(_1a4e23) {\n            instance(x: 93, y: -15) eq_3c7d5 root.Std_k98ojb.Logic.Equal {}\n            x_5f3d6c -> eq_3c7d5.left\n            x_5f3d6c + 1 -> eq_3c7d5.right\n            eq_3c7d5.result -> _1a4e23\n        }\n    }\n\n    \n\n    instance(x: -66, y: 43) is_consecutive_f9b0e2 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -294, y: 2, name: \"list\") property(List) list_4a1f0d\n\n        out(x: 1215, y: -10, name: \"output\") property(Bool) output_d7e6b8\n\n        instance(x: -83, y: 64) for_f3c2a9 root.Std_k98ojb.Std.For {}\n        list_4a1f0d -> for_f3c2a9.items\n        func() {\n            in(x: -117, y: 33, name: \"i\") property(Number) i_7e2c43\n\n            out(x: 1238, y: 42, name: \"\") property(Number) _6f5b4d\n\n            instance(x: 93, y: 28) next_1e9a0b root.Std_k98ojb.Std.For {}\n            i_7e2c43 -> next_1e9a0b.index\n            for_f3c2a9.next -> next_1e9a0b.reset\n            list_4a1f0d.length -> for_f3c2a9.length\n            ifexpression_6f5b4d = root.Std_k98ojb.Std.IfExpression {\n                expression: \"i + 1 < length\"\n            }\n            instance(x: 124, y: -13) less_8f9e0b root.Std_k98ojb.Math.LessThanOrEqual {}\n            i_7e2c43 -> less_8f9e0b.left\n            list_4a1f0d[for_f3c2a9.index] -> less_8f9e0b.right\n            less_8f9e0b.result -> ifexpression_6f5b4d.value\n            next_1e9a0b.item -> for_f3c2a9.new_value\n        } -> for_f3c2a9.handler\n        instance(x: 124, y: -13) expression_8d7f43 root.Std_k98ojb.Math.Expression {\n            expression: \"i + 1 > previous\"\n        }\n        ifexpression_6f5b4d.else -> output_d7e6b8\n        for_f3c2a9.done -> output_d7e6b8\n    }\n\n    \n\n    instance(x: -85, y: 53) is_consecutive_c0a3f4 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") conseq_nums {\n        in(x: -305, y: 2, name: \"list\") property(List) list_6d5f3a\n\n        out(x: 1030, y: -9, name: \"output\") property(Bool) output_4b3a8c\n\n        instance(x: 0, y: 0) filter_7d1e2c root.Std_k98ojb.Query.Filter {}\n        list_6d5f3a -> filter_7d1e2c.list\n        filter_7d1e2c.result -> output_4b3a8c\n        instance(x: 103, y: -23) for_c8c5f9 root.Std_k98ojb.Std.For {}\n        list_6d5f3a -> for_c8c5f9.items\n        for_c8c5f9.item -> filter_7d1e2c.handler\n        instance(x: 0, y: -26) next_3a5e4b root.Std_k98ojb.Std.For {}\n        for_c8c5f9.index -> next_3a5e4b.index\n        for_c8c5f9.item -> next_3a5e4b.handler\n        instance(x: 0, y: -25) done_1d6d2f root.Std_k98ojb.Std.For {}\n        for_c8c5f9.done -> done_1d6d2f.execute\n    }\n\n    \n\n    instance(x: -91, y: 44) conseq_nums_f4a7df root.main.conseq_nums {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -269, y: -21, name: \"list\") property(List) list_9d6f4a\n\n        out(x: 1243, y: -13, name: \"output\") property(Bool) output_e0e2b5\n\n        instance(x: 94, y: 10) is_equal_8c0f7 root.Std_k98ojb.Logic.Equal {}\n        list_9d6f4a -> is_equal_8c0f7.left\n        list_9d6f4a -> is_equal_8c0f7.right\n        instance(x: -23, y: 35) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        greaterthan_cb50ae.result -> output_e0e2b5\n        greaterthan_cb50ae.left -> list_9d6f4a[1]\n        is_equal_8c0f7.value -> greaterthan_cb50ae.right\n        instance(x: -26, y: 40) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        sub_852f2e.result -> output_e0e2b5\n        sub_852f2e.first -> list_9d6f4a[1]\n        is_equal_8c0f7.value -> sub_852f2e.second\n    }\n\n    \n\n    instance(x: -69, y: 44) is_consecutive_d4b3a1 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") contains_consecutive {\n        in(x: -294, y: 1, name: \"list\") property(List) list_3f4d6a\n\n        out(x: 1238, y: 5, name: \"output\") property(Bool) output_9b0c71\n\n        instance(x: 83, y: 2) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -28, y: 10) next_1d4a7f root.Std_k98ojb.Std.Next {}\n        instance(x: -23, y: 5) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 121, y: 12) less_than_b2e0d8 root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_3f4d6a -> for_d26972.items\n        for_d26972.index -> next_1d4a7f.index\n        less_than_b2e0d8.result -> contains_32727d.is_contained\n        contains_32727d.item -> less_than_b2e0d8.left\n        1 -> less_than_b2e0d8.right\n        for_d26972.onItem -> less_than_b2e0d8.execute\n        less_than_b2e0d8.done -> contains_32727d.execute\n        next_1d4a7f.next -> for_d26972.reset\n    }\n\n    \n\n    instance(x: -23, y: 29) contains_consecutive_e3b5c9 root.main.contains_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -173, y: 156, name: \"main_list\") property(List) main_list_1a4e2f\n        in(x: -193, y: 21, name: \"sub_list\") property(List) sub_list_e0c5b8\n\n        out(x: 546, y: 69, name: \"output\") property(Bool) output_6d7c42\n\n        instance(x: 94, y: -105) is_slice_9e2f1a root.Std_k98ojb.Iteration.IsSlice {}\n        main_list_1a4e2f -> is_slice_9e2f1a.left\n        sub_list_e0c5b8 -> is_slice_9e2f1a.right\n        is_slice_9e2f1a.is_slice -> output_6d7c42\n    }\n\n    \n\n    instance(x: 48, y: -37) is_sublist_d4a5c1 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -142, y: 155, name: \"main_list\") property(List) main_list_5f1e6a\n        in(x: -193, y: -26, name: \"sub_list\") property(List) sub_list_8b7d23\n\n        out(x: 555, y: -29, name: \"output\") property(Bool) output_b2c3ec\n\n        instance(x: -73, y: -21) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        main_list_5f1e6a -> zip_201051.left\n        sub_list_8b7d23 -> zip_201051.right\n        func() {\n            in(x: 123, y: -20, name: \"current\") property(Number) current_c4c0db\n\n            out(x: 556, y: -22, name: \"\") property(Bool) _e5f3b1\n\n            instance(x: 92, y: -17) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            zip_201051.zipped -> main_list_5f1e6a\n            sub_list_8b7d23 -> zip_201051.zipped\n            current_c4c0db -> zip_201051.gen_2\n        } -> zip_201051.handler\n        zip_201051.output_list -> output_b2c3ec\n    }\n\n    \n\n    instance(x: -92, y: 45) is_sublist_e7a5f5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -246, y: 165, name: \"main_list\") property(List) list_1f8e0a\n        in(x: -273, y: 93, name: \"sub_list\") property(List) list_b4c6d3\n\n        out(x: 544, y: -97, name: \"output\") property(Bool) output_d9d4db\n\n        instance(x: -246, y: 165) length_2a7e5f root.Std_k98ojb.List.Length {}\n        list_b4c6d3 -> length_2a7e5f.list\n        func() {\n            in(x: -246, y: 165, name: \"main\") property(List) main_list_ae1f8c\n            in(x: -273, y: 93, name: \"sub\") property(List) sub_list_9d4b2a\n\n            out(x: 544, y: -97, name: \"index\") property(Number) index_e3c0d6\n\n            instance(x: -246, y: 165) contains_32727d root.Std_k98ojb.List.Contains {}\n            main_list_ae1f8c -> contains_32727d.list\n            sub_list_9d4b2a -> contains_32727d.item\n            contains_32727d.is_contained -> index_e3c0d6\n        } -> length_2a7e5f.handler\n        func() {\n            in(x: -246, y: 165, name: \"main\") property(List) main_list_ae1f8c\n            in(x: -273, y: 93, name: \"sub\") property(List) sub_list_9d4b2a\n\n            out(x: 544, y: -97, name: \"index\") property(Number) index_e3c0d6\n\n            instance(x: -246, y: 165) contains_32727d root.Std_k98ojb.List.Contains {}\n            main_list_ae1f8c -> contains_32727d.list\n            sub_list_9d4b2a -> contains_32727d.item\n            contains_32727d.is_contained -> index_e3c0d6\n        } -> length_2a7e5f.handler\n        func() {\n            in(x: -246, y: 165, name: \"main\") property(List) main_list_ae1f8c\n            in(x: -273, y: 93, name: \"sub\") property(List) sub_list_9d4b2a\n\n            out(x: 544, y: -97, name: \"index\") property(Number) index_e3c0d6\n\n            instance(x: -246, y: 165) contains_32727d root.Std_k98ojb.List.Contains {}\n            main_list_ae1f8c -> contains_32727d.list\n            sub_list_9d4b2a -> contains_32727d.item\n            contains_32727d.is_contained -> index_e3c0d6\n        } -> length_2a7e5f.handler\n        func() {\n            in(x: -246, y: 165, name: \"main\") property(List) main_list_ae1f8c\n            in(x: -273, y: 93, name: \"sub\") property(List) sub_list_9d4b2a\n\n            out(x: 544, y: -97, name: \"index\") property(Number) index_e3c0d6\n\n            instance(x: -246, y: 165) contains_32727d root.Std_k98ojb.List.Contains {}\n            main_list_ae1f8c -> contains_32727d.list\n            sub_list_9d4b2a -> contains_32727d.item\n            contains_32727d.is_contained -> index_e3c0d6\n        } -> length_2a7e5f.handler\n    }\n\n    \n\n    instance(x: 426, y: -303) is_sublist_node root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -193, y: 155, name: \"main_list\") property(List) main_list_9e8d4\n        in(x: -201, y: 20, name: \"sub_list\") property(List) sub_list_e3f0c\n\n        out(x: 442, y: 73, name: \"result\") property(Bool) result_c7b5a1\n\n        instance(x: 93, y: 70) length_9d6e77 root.Std_k98ojb.List.Length {}\n        main_list_9e8d4 -> length_9d6e77.list\n        sub_list_e3f0c -> length_9d6e77.list\n        length_9d6e77.length -> result_c7b5a1\n        for_d26972.items -> is_sublist.sub_list\n        0 -> for_d26972.index\n        for_d26972.itemAtIndex -> is_sublist.main_list\n        for_d26972.itemAtIndex == sub_list_e3f0c.itemAtIndex -> result_c7b5a1\n    }\n\n    \n\n    instance(x: -67, y: -17) is_sublist_4e3d8f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -292, y: 156, name: \"main_list\") property(List) main_list_d4e2d9\n        in(x: -313, y: 142, name: \"sublist\") property(List) sublist_a8a5f3\n\n        out(x: 546, y: -109, name: \"output\") property(Bool) output_c7c0b6\n\n        instance(x: -87, y: 156) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        main_list_d4e2d9 -> zip_201051.left\n        sublist_a8a5f3 -> zip_201051.right\n        func() {\n            in(x: -292, y: 156) length_6e87f2 root.Std_k98ojb.List.Length {}\n            sublist_a8a5f3 -> length_6e87f2.list\n            length_6e87f2.length -> zip_201051.start\n            zip_201051.slice -> main_list_d4e2d9\n        } -> is_sublist.predicate\n        func() {\n            in(x: -292, y: 156) length_6e87f2 root.Std_k98ojb.List.Length {}\n            sublist_a8a5f3 -> length_6e87f2.list\n            length_6e87f2.length -> zip_201051.start\n            zip_201051.slice -> main_list_d4e2d9\n        } -> is_sublist.handler\n        output_c7c0b6.result -> is_sublist.output\n    }\n\n    \n\n    instance(x: 102, y: -67) is_sublist_5f3a8b root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -269, y: 142, name: \"main_list\") property(List) main_list_1c6e9a\n        in(x: -294, y: -16, name: \"sublist\") property(List) sublist_d4d3f2\n\n        out(x: 446, y: 49, name: \"output\") property(Bool) output_a7b5ec\n\n        instance(x: 102, y: 142) length_6e87f2 root.Std_k98ojb.List.Length {}\n        sublist_d4d3f2 -> length_6e87f2.list\n        length_6e87f2.length -> is_sublist.length\n        ifexpression_8a1c7a root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < length\"\n        }\n        getter_9e0df2 root.Std_k98ojb.List.GetAt {}\n        getter_9e0df2.index -> is_sublist.index\n        list_d4d3f2 -> getter_9e0df2.list\n        main_list_1c6e9a -> getter_9e0df2.list\n        length_6e87f2.length -> is_sublist.index\n        ifexpression_8a1c7a.then -> output_a7b5ec\n        length_6e87f2.length == 0 -> is_sublist.is_contained\n    }\n\n    \n\n    instance(x: -92, y: 11) is_sublist_9d3d14 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -294, y: 145, name: \"main_list\") property(List) list_9f8a2d\n        in(x: -105, y: -25, name: \"sublist_list\") property(List) list_4f5e7b\n\n        out(x: 547, y: -98, name: \"output\") property(Bool) output_f6c1d9\n\n        instance(x: -0, y: -21) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_4f5e7b -> contains_32727d.item\n        list_9f8a2d -> contains_32727d.list\n        contains_32727d.is_contained -> output_f6c1d9\n    }\n\n    \n\n    instance(x: 101, y: -67) is_sublist_5e0c4b root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -173, y: 157, name: \"main_list\") property(List) main_list_6f5f2b\n        in(x: -294, y: 145, name: \"sublist_list\") property(List) sublist_list_f1d7c8\n\n        out(x: 509, y: -108, name: \"output\") property(Bool) output_e0a9d4\n\n        instance(x: 94, y: 150) contains_2e6f5 root.Std_k98ojb.List.Contains {}\n        sublist_list_f1d7c8 -> contains_2e6f5.item\n        main_list_6f5f2b -> contains_2e6f5.list\n        contains_2e6f5.is_contained -> output_e0a9d4\n    }\n\n    \n\n    instance(x: 48, y: -7) is_sublist_f3c8e1 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") contains_sublist {\n        in(x: -194, y: 145, name: \"main_list\") property(List) main_list_2a4e8f\n        in(x: -191, y: -16, name: \"sublist\") property(List) sublist_3bdf23\n\n        out(x: 444, y: -19, name: \"output\") property(Bool) output_e5d7c9\n\n        instance(x: 134, y: 146) contains_c6f0f1 root.Std_k98ojb.List.Contains {}\n        sublist_3bdf23 -> contains_c6f0f1.item\n        main_list_2a4e8f -> contains_c6f0f1.list\n    }\n\n    \n\n    instance(x: -194, y: 145) contains_sublist_9d5c7a root.main.contains_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -142, y: 145, name: \"main_list\") property(List) main_list_0a4d5f\n        in(x: -141, y: 156, name: \"sublist\") property(List) sublist_a8cd7c\n\n        out(x: 1023, y: 74, name: \"result\") property(Bool) result_6e2f1d\n\n        instance(x: 142, y: 150) length_4b8927 root.Std_k98ojb.List.Length {}\n        sublist_a8cd7c -> length_4b8927.list\n        main_list_0a4d5f -> length_4b8927.list\n        length_4b8927.length -> length_4b8927.length\n        length_4b8927.length == length_4b8927.length -> result_6e2f1d\n        sublist_a8cd7c -> length_4b8927.items\n        0 -> length_4b8927.index\n        length_4b8927.items[0] -> is_sublist.sublist\n        main_list_0a4d5f -> is_sublist.main\n        for_d26972.item -> is_sublist.gen_1\n        sublist_a8cd7c.length -> for_d26972.index\n        for_d26972.index == length_4b8927.index -> result_6e2f1d\n    }\n\n    \n\n    instance(x: 101, y: -67) is_sublist_5a3d0a root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -446, y: 0, name: \"list\") property(List) list_4a5f3d\n        out(x: -1, y: -1, name: \"continue\") trigger() continue_e7b6c2\n\n        instance(x: 0, y: 0) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 47, y: 4) ifexpression_9f5e38 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 > current\"\n        }\n        getter(x: -13, y: 2, name: \"getter_e7a9c8\") getter_e7a9c8 = previous\n        setter(x: 46, y: 4) setter_e7a9c8 = previous\n        instance(x: 51, y: 0) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        for_d26972.item -> ifexpression_9f5e38.gen_1\n        -1 -> getter_e7a9c8.new_value\n        find_smallest_missing.execute -> setter_e7a9c8.execute\n        list_4a5f3d -> for_d26972.items\n        for_d26972.index -> ifexpression_9f5e38.gen_0\n        getat_ce2a48.itemAtIndex -> setter_e7a9c8.new_value\n        continue_e7b6c2 -> for_d26972.reset\n        for_d26972.onItem -> ifexpression_9f5e38.execute\n        ifexpression_9f5e38.then -> setter_e7a9c8.execute\n        list_4a5f3d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_e7a9c8.new_value\n    }\n\n    \n\n    instance(x: -85, y: 170) find_smallest_missing_6e5f3 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -456, y: 0, name: \"list\") property(List) list_9f8d3e\n\n        out(x: -19, y: 0, name: \"missing\") property(Number) missing_a7b4d6\n\n        instance(x: 34, y: 5) for_2c1a85 root.Std_k98ojb.Std.For {}\n        instance(x: 43, y: 8) ifexpression_9e3f47 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: -19, y: 11, name: \"getter_2c7a5d\") getter_2c7a5d = missing\n        setter(x: -13, y: -242, name: \"setter_d6f8b3\") setter_d6f8b3 = missing\n        instance(x: 47, y: 12) next_node root.Std_k98ojb.Std.For {}\n        instance(x: 52, y: -14) count_9a1d5c root.Std_k98ojb.Std.Count {}\n        list_9f8d3e -> for_2c1a85.items\n        for_2c1a85.item -> ifexpression_9e3f47.gen_2\n        0 -> next_node.index\n        next_node.nextIndex -> count_9a1d5c.reset\n        list_9f8d3e -> for_2c1a85.items\n        for_2c1a85.item -> ifexpression_9e3f47.gen_0\n        ifexpression_9e3f47.value -> setter_d6f8b3.new_value\n        1 -> next_node.nextIndex\n        list_9f8d3e -> count_9a1d5c.items\n        for_2c1a85.index -> count_9a1d5c.count\n        getter_2c7a5d.value -> ifexpression_9e3f47.gen_1\n        for_2c1a85.onItem -> ifexpression_9e3f47.execute\n        next_node.done -> setter_d6f8b3.continue\n        next_node.item -> count_9a1d5c.nextIndex\n        set_9d4f1c -> setter_d6f8b3.execute\n        0 -> set_9d4f1c.new_value\n        ifexpression_9e3f47.then -> for_2c1a85.next\n        count_9a1d5c.done -> setter_d6f8b3.continue\n        list_9f8d3e -> next_node.items\n    }\n\n    \n\n    instance(x: 0, y: -245) find_missing_9c4e38 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing_number {\n        in(x: -444, y: 2, name: \"list\") property(List) list_8d4a0e\n        out(x: 1, y: 0, name: \"output\") property(Number) output_b5f7c3\n\n        instance(x: 55, y: -234) for_0bdf6a root.Std_k98ojb.Std.For {}\n        getter(x: 315, y: -215, name: \"getter_2d9e42\") getter_2d9e42 = index\n        setter(x: 0, y: -242, name: \"setter_7c5f1c\") setter_7c5f1c = previous\n        instance(x: 321, y: -20) ifexpression_6b8a3b root.Std_k98ojb.Std.If {}\n        getter(x: 0, y: -251, name: \"getter_2d9e42\") getter_2d9e42 = list.index\n        setter(x: 0, y: -242, name: \"setter_7c5f1c\") setter_7c5f1c = index\n        instance(x: -278, y: -35) equal_4a6b8 root.Std_k98ojb.Logic.Equal {}\n        list_8d4a0e -> for_0bdf6a.items\n        0 -> equal_4a6b8.left\n        equal_4a6b8.result -> ifexpression_6b8a3b.predicate\n        ifexpression_6b8a3b.value -> output_b5f7c3\n        ifexpression_6b8a3b.then -> setter_7c5f1c.execute\n        for_0bdf6a.item -> equal_4a6b8.right\n        for_0bdf6a.index -> equal_4a6b8.left\n        equal_4a6b8.result -> ifexpression_6b8a3b.gen_1\n        for_0bdf6a.onItem -> ifexpression_6b8a3b.execute\n        for_0bdf6a.done -> continue_9d2c43\n        setter_7c5f1c.continue -> for_0bdf6a.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_number_f4e8b9 root.main.find_missing_number {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -246, y: 0, name: \"list\") property(List) list_8f9b6d\n        in(x: -245, y: -225, name: \"execute\") trigger() execute_e1e5c4\n\n        out(x: 1242, y: 5, name: \"continue\") trigger() continue_7a3eef\n        out(x: 1230, y: -230, name: \"output\") property(Number) output_8cd9f6\n\n        instance(x: 55, y: 93) for_d1d4c2 root.Std_k98ojb.Std.For {}\n        instance(x: 320, y: -20) ifexpression_5e0a7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -23, y: -101, name: \"getter_9d4f1c\") getter_9d4f1c = previous\n        setter(x: 678, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 326, y: -34) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_5e0a7c.else -> continue_7a3eef\n        ifexpression_5e0a7c.value -> output_8cd9f6\n        ifexpression_5e0a7c.then -> setter_9d4f1c.execute\n        list_8f9b6d -> for_d1d4c2.items\n        for_d1d4c2.item -> ifexpression_5e0a7c.gen_2\n        for_d1d4c2.index -> ifexpression_5e0a7c.gen_0\n        getter_9d4f1c.value -> ifexpression_5e0a7c.gen_1\n        for_d1d4c2.onItem -> ifexpression_5e0a7c.execute\n        for_d1d4c2.done -> continue_7a3eef\n        for_d1d4c2.item -> setter_9d4f1c.new_value\n        list_8f9b6d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        execute_e1e5c4 -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> for_d1d4c2.reset\n        setter_9d4f1c.continue -> for_d1d4c2.next\n    }\n\n    \n\n    instance(x: 11, y: -176) find_missing_e0f6e7 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -456, y: 0, name: \"list\") property(List) list_2c6b3d\n        out(x: -19, y: 1, name: \"continue\") trigger() continue_5e8a4f\n        out(x: 1238, y: 0, name: \"output\") property(Number) output_b7a7cd\n\n        instance(x: 47, y: -120) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 341, y: 5) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: -15, y: -123, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 678, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_5e8a4f\n        ifexpression_875761.value -> output_b7a7cd\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_2c6b3d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_5e8a4f\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_2c6b3d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_7a8bdf root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: 0, y: 0, name: \"list\") property(List) list_a2f6f8\n\n        out(x: 5, y: -1, name: \"continue\") trigger() continue_9b3d7c\n        out(x: 121, y: 147, name: \"output\") property(Number) output_b0a4e0\n\n        instance(x: 15, y: 0) for_d2f5a8 root.Std_k98ojb.Std.For {}\n        getter(x: -141, y: -246, name: \"getter_1c9d3e\") getter_1c9d3e = previous\n        setter(x: 74, y: -312, name: \"setter_7f4cd4\") setter_7f4cd4 = previous\n        instance(x: 341, y: -105) ifexpression_0a2b6a root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || (previous > current + 1)\"\n        }\n        getter(x: 201, y: -20) getter_0c4e5d = previous\n        setter(x: 73, y: -121) setter_7f4cd4 = previous\n        instance(x: -278, y: -35) getat_d8a6b3 root.Std_k98ojb.List.GetAt {}\n        for_d2f5a8.item -> ifexpression_0a2b6a.gen_1\n        list_a2f6f8 -> for_d2f5a8.items\n        for_d2f5a8.index -> ifexpression_0a2b6a.gen_0\n        getter_0c4e5d.value -> ifexpression_0a2b6a.gen_2\n        for_d2f5a8.onItem -> ifexpression_0a2b6a.execute\n        for_d2f5a8.done -> continue_9b3d7c\n        getter_0c4e5d.value + 1 -> setter_7f4cd4.new_value\n        getat_d8a6b3.list -> setter_7f4cd4.listWithItem\n        0 -> getat_d8a6b3.index\n        getat_d8a6b3.itemAtIndex -> setter_7f4cd4.item\n        execute_9b3d7c -> getter_1c9d3e.execute\n        getter_1c9d3e.value -> output_b0a4e0\n        for_d2f5a8.index -> setter_7f4cd4.new_value\n        continue_9b3d7c -> for_d2f5a8.reset\n        ifexpression_0a2b6a.then -> setter_7f4cd4.execute\n    }\n\n    \n\n    instance(x: 11, y: -177) find_missing_8e38c1 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -456, y: 2, name: \"list\") property(List) list_bf6a8e\n        out(x: 1234, y: -1, name: \"number\") property(Number) number_9c6d3b\n\n        instance(x: 0, y: 0) for_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: 340, y: -109, name: \"getter_f2d4a5\") getter_f2d4a5 = previous\n        setter(x: 0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 0, y: 0) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter_f2d4a5.value -> ifexpression_875761.gen_0\n        for_d26972.item -> ifexpression_875761.gen_1\n        for_d26972.index -> ifexpression_875761.gen_0\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_bf6a8e -> for_d26972.items\n        0 -> for_d26972.index\n        for_d26972.item -> ifexpression_875761.gen_2\n        getat_ce2a48.list -> ifexpression_875761.gen_3\n        getat_ce2a48.index -> setter_9d4f1c.new_value\n        list_bf6a8e -> for_d26972.items\n        0 -> getat_ce2a48.index\n        for_d26972.item -> getter_f2d4a5.new_value\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> number_9c6d3b\n        setter_9d4f1c.continue -> for_d26972.reset\n        for_d26972.onItem -> ifexpression_875761.execute\n    }\n\n    \n\n    instance(x: -45, y: 157) find_missing_e2e0a7 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -442, y: 0, name: \"list\") property(List) list_4d2a5e\n        out(x: 123, y: -228, name: \"min\") property(Number) min_9f1c6b\n\n        instance(x: 19, y: 10) for_0d6c3a root.Std_k98ojb.Std.For {}\n        instance(x: 74, y: 20) ifexpression_7e4b8a root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: -23, y: 30, name: \"getter_f3fdd5\") getter_f3fdd5 = previous\n        setter(x: 91, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 47, y: -10) count_0e8c3a root.Std_k98ojb.Std.Count {}\n        ifexpression_7e4b8a.value -> output_5bbcd7\n        list_4d2a5e -> for_0d6c3a.items\n        for_0d6c3a.item -> ifexpression_7e4b8a.gen_2\n        for_0d6c3a.index -> ifexpression_7e4b8a.gen_0\n        getter_f3fdd5.value -> ifexpression_7e4b8a.gen_1\n        for_0d6c3a.onItem -> ifexpression_7e4b8a.execute\n        for_0d6c3a.done -> output_5bbcd7\n        setter_9d4f1c.continue -> for_0d6c3a.reset\n        count_0e8c3a.reset -> count_0e8c3a.execute\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        list_4d2a5e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        for_0d6c3a.index -> count_0e8c3a.count\n        ifexpression_7e4b8a.gen_1 - count_0e8c3a.count > 0 -> min_9f1c6b\n    }\n\n    \n\n    instance(x: -43, y: 157) find_missing_e5d5b2 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing_number {\n        in(x: -245, y: 2, name: \"list\") property(List) list_9e3b4d\n\n        out(x: 120, y: 0, name: \"output\") property(Number) output_ba4c34\n        instance(x: 0, y: 0) for_8f5a6a root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -25) ifexpression_a2d2e9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 34, y: 155, name: \"getter_6f5df7\") getter_6f5df7 = previous\n        setter(x: -275, y: 10) setter_6f5df7 = previous\n        instance(x: -273, y: -35) find_2e4b8 root.Std_k98ojb.Iteration.Find {}\n        list_9e3b4d -> for_8f5a6a.items\n        for_8f5a6a.item -> ifexpression_a2d2e9.gen_1\n        getter_6f5df7.value -> find_2e4b8.predicate\n        for_8f5a6a.index -> find_2e4b8.item\n        0 -> setter_6f5df7.new_value\n        ifexpression_a2d2e9.then -> setter_6f5df7.execute\n        list_9e3b4d -> find_2e4b8.items\n        for_8f5a6a.done -> continue_c8c7c0\n        for_8f5a6a.item -> find_2e4b8.new_item\n        setter_6f5df7.continue -> for_8f5a6a.reset\n    }\n\n    \n\n    instance(x: -234, y: 151) find_missing_number_3c9d0b root.main.find_missing_number {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -246, y: 2, name: \"list\") property(List) list_8e5f1d\n\n        out(x: 0, y: -1, name: \"output\") property(Number) output_a7c0a9\n\n        instance(x: 13, y: -105) for_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: 34, y: 160, name: \"getter_3f8d6e\") getter_3f8d6e = index\n        setter(x: 43, y: -313, name: \"setter_7c2e5a\") setter_7c2e5a = previous\n        instance(x: 321, y: -35) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == length\"\n        }\n        getter(x: 704, y: 170, name: \"getter_cc0721\") getter_cc0721 = index\n        setter(x: 780, y: -125, name: \"setter_60cfcd\") setter_60cfcd = previous\n        list_8e5f1d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_3f8d6e.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_7c2e5a.new_value\n        list_8e5f1d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_60cfcd.new_value\n        execute_a96db6 -> setter_60cfcd.execute\n        setter_7c2e5a.continue -> for_d26972.reset\n        setter_60cfcd.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 777, y: -53) find_missing_9f1d8b root.main.find_missing {}\n\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -200, y: 1, name: \"input\") property(String) input_9d0a95\n        out(x: 1054, y: 0, name: \"output\") property(String) output_a7c6b3\n\n        instance(x: 73, y: 47) replace_5f8c1e root.Std_k98ojb.Strings.Replace {}\n        input_9d0a95 -> replace_5f8c1e.input\n        \",.\" -> replace_5f8c1e.search\n        \":\" -> replace_5f8c1e.replace\n        replace_5f8c1e.output -> output_a7c6b3\n    }\n\n    \n\n    instance(x: 251, y: -46) replace_special_chars_0a4d66 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -199, y: 2, name: \"input\") property(String) input_0\n        out(x: 538, y: 76, name: \"output\") property(String) output_a3f5e8\n\n        instance(x: 78, y: -22) replace_d9d4c7 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_d9d4c7.input\n        \",\" -> replace_d9d4c7.search\n        \".\" -> replace_d9d4c7.replace\n        \":\" -> replace_d9d4c7.replace\n        replace_d9d4c7.output -> output_a3f5e8\n    }\n\n    \n\n    instance(x: -173, y: 45) replace_with_colon_2d1a6b root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_char{\n        in(x: -215, y: 0, name: \"input\") property(String) input_1d4f3a\n\n        out(x: 1007, y: 0, name: \"output\") property(String) output_2c6e5b\n\n        instance(x: 92, y: -22) strings_replace_node root.Std_k98ojb.Strings.Replace {\n            search: \", . , \"\n            replace: \":\"\n        }\n        input_1d4f3a -> strings_replace_node.input\n        strings_replace_node.output -> output_2c6e5b\n    }\n\n    \n\n    instance(x: -202, y: -36) replace_char_7fdd8f root.main.replace_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -200, y: 0, name: \"input\") property(String) input_ai\n\n        out(x: 1003, y: -59, name: \"output\") property(String) output_2e9c5d\n\n        instance(x: 74, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 261, y: 0) replace_d3a2c7 root.Std_k98ojb.Strings.Replace {}\n        tolower_2e1444.output -> replace_d3a2c7.input\n        \" \" -> replace_d3a2c7.search\n        \":\" -> replace_d3a2c7.replace\n        input_ai -> tolower_2e1444.input\n        replace_d3a2c7.result -> output_2e9c5d\n    }\n\n    \n\n    instance(x: -176, y: 30) replace_punctuation_b0f8f1 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -215, y: 0, name: \"input\") property(String) input_a3e4d2\n\n        out(x: 1097, y: 77, name: \"output\") property(String) output_b1b8f6\n\n        instance(x: 94, y: 75) replace_d9c5a9 root.Std_k98ojb.Strings.Replace {}\n        input_a3e4d2 -> replace_d9c5a9.input\n        \",\" -> replace_d9c5a9.search\n        \":\" -> replace_d9c5a9.replace\n        replace_d9c5a9.output -> output_b1b8f6\n   }\n\n    \n\n    instance(x: -192, y: 28) replace_with_colon_4e0d3f root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation{\n        in(x: -201, y: 20, name: \"input\") property(String) input_4c9a6b\n\n        out(x: 1020, y: -64, name: \"output\") property(String) output_f2d3f5\n\n        instance(x: 13, y: -48) replace_node root.Std_k98ojb.Strings.Replace {}\n        input_4c9a6b -> replace_node.input\n        \",\" -> replace_node.search\n        \":\" -> replace_node.replace\n        replace_node.output -> output_f2d3f5\n    }\n\n    \n\n    instance(x: 253, y: -31) replace_punctuation_8e7b1d root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -193, y: 19, name: \"input\") property(String) input_4a6d3f\n\n        out(x: 1030, y: -44, name: \"output\") property(String) output_e5c4e9\n\n        instance(x: 14, y: -43) replace_colon_node root.Std_k98ojb.Strings.Replace {}\n        input_4a6d3f -> replace_colon_node.input\n        \",\" -> replace_colon_node.search\n        \".\" -> replace_colon_node.search\n        \" \" -> replace_colon_node.search\n        \":\" -> replace_colon_node.replace\n        replace_colon_node.output -> output_e5c4e9\n    }\n\n    \n\n    instance(x: -179, y: 34) replace_with_colon_6d7b1f root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(String) output_ai\n\n        instance(x: 15, y: -21) strings_replace_node root.Std_k98ojb.Strings.Replace {\n            search: \" \", replace: \":\"\n        }\n        input_ai -> strings_replace_node.input\n        strings_replace_node.output -> output_ai\n        instance(x: 34, y: -43) strings_replace_node_2 root.Std_k98ojb.Strings.Replace {\n            search: \",\", replace: \":\"\n        }\n        input_ai -> strings_replace_node_2.input\n        strings_replace_node_2.output -> output_ai\n        instance(x: 56, y: -68) strings_replace_node_3 root.Std_k98ojb.Strings.Replace {\n            search: \".\", replace: \":\"\n        }\n        input_ai -> strings_replace_node_3.input\n        strings_replace_node_3.output -> output_ai\n    }\n\n    \n\n    instance(x: -193, y: 0) replace_chars_b4c7d2 root.main.replace_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -194, y: 0, name: \"input\") property(String) input_ai\n        out(x: 509, y: 0, name: \"output\") property(String) output_ai\n\n        instance(x: 78, y: -21) strings_replace_node root.Std_k98ojb.Strings.Replace {}\n        input_ai -> strings_replace_node.input\n        \",\" -> strings_replace_node.search\n        \":\" -> strings_replace_node.replace\n        strings_replace_node.output -> output_ai\n   }\n\n    \n\n    instance(x: -176, y: 30) replace_with_colon_3d6a5e root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punct {\n        in(x: -215, y: 0, name: \"input\") property(String) input_4d6f3b\n        out(x: 1035, y: 1, name: \"output\") property(String) output_6c9a2e\n\n        instance(x: 91, y: -19) replace_7b8df0 root.Std_k98ojb.Strings.Replace {}\n        input_4d6f3b -> replace_7b8df0.input\n        \",\" -> replace_7b8df0.search\n        \".\" -> replace_7b8df0.search\n        \" \" -> replace_7b8df0.search\n        \":\" -> replace_7b8df0.replace\n        replace_7b8df0.output -> output_6c9a2e\n    }\n\n    \n\n    instance(x: -242, y: 45) replace_punct_e4f1c5 root.main.replace_punct {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -292, y: 0, name: \"input\") property(String) input_9d8a95\n\n        out(x: 509, y: 5, name: \"output\") property(Bool) output_3e2c43\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        input_9d8a95 -> tolower_2e1444.input\n        tolower_2e1444.output -> is_same.predicate\n        1 -> is_same.count\n        for_8cb3f6.index -> is_same.handler\n        tolower_2e1444.output_list -> for_8cb3f6.items\n   }\n    \n\n    instance(x: -67, y: -37) is_same_e0a5c7 root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -294, y: 0, name: \"string\") property(String) input_1d\n        out(x: 547, y: -2, name: \"output\") property(Bool) output_7f9b5a\n\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 360, y: 61) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        length_6e87f2.length -> contains_d42dce.is_contained\n        input_1d -> tolower_2e1444.input\n        tolower_2e1444.output -> contains_d42dce.input\n        contains_d42dce.contains -> output_7f9b5a\n    }\n\n    \n\n    instance(x: -67, y: 29) is_same_8c1d3b root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n     func(doc: \"checks whether all characters in string are same.\") same_characters{\n        in(x: -288, y: 4, name: \"string\") property(String) input_2\n        out(x: 530, y: -1, name: \"output\") property(Bool) output_5\n\n        instance(x: 0, y: 0) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 272, y: 3) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        input_2 -> tolower_2e1444.input\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        same_characters.output -> output_5\n    }\n\n    \n\n    instance(x: 69, y: -3) same_characters_a1f6c8 root.main.same_characters {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: -294, y: 0, name: \"string\") property(String) input_e9d4eb\n\n        out(x: 540, y: 5, name: \"output\") property(Bool) output_2c1f8e\n\n        instance(x: 0, y: 7) strings_length_8a6b3 root.Std_k98ojb.List.Length {}\n        instance(x: 266, y: 4) equal_0d5d21 root.Std_k98ojb.Logic.Equal {}\n        input_e9d4eb -> equal_0d5d21.left\n        strings_length_8a6b3.length -> equal_0d5d21.right\n        all_characters_same.result -> output_2c1f8e\n    }\n\n    \n\n    instance(x: -64, y: 29) equal_c7c7e4 root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -288, y: 0, name: \"input\") property(List) list_b9d1a2\n\n        out(x: 540, y: -2, name: \"result\") property(Bool) result_7c8e5f\n\n        instance(x: 73, y: 0) islower_4b6b49 root.Std_k98ojb.Strings.IsLowerCase {}\n        instance(x: 246, y: -1) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_b9d1a2 -> contains_32727d.list\n        \"a\" -> contains_32727d.contains\n        islower_4b6b49.input -> contains_32727d.item\n        result_7c8e5f.result -> all_same.value\n    }\n\n    \n\n    instance(x: -45, y: 53) all_same_0df3b2 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") same_chars{\n        in(x: -0, y: 2, name: \"string\") property(List) list_a6e4d1\n\n        out(x: 1015, y: -3, name: \"output\") property(Bool) output_7c9b45\n\n        instance(x: 11, y: 0) tolower_ea4f8a root.Std_k98ojb.Strings.ToLower {}\n        list_a6e4d1 -> tolower_ea4f8a.input\n        tolower_ea4f8a.output -> output_7c9b45\n        instance(x: 11, y: -3) is_equal_b2f8eb root.Std_k98ojb.Logic.Equal {}\n        list_a6e4d1 -> is_equal_b2f8eb.left\n        tolower_ea4f8a.output -> is_equal_b2f8eb.right\n    }\n\n    \n\n    instance(x: 0, y: -3) same_chars_5c7e42 root.main.same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -295, y: 5, name: \"string\") property(String) input_1\n        out(x: 555, y: -2, name: \"output\") property(Bool) output_1\n\n        instance(x: -69, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 251, y: 6) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == previous\"\n        }\n        contains_d42dce.input -> ifexpression_875761.left\n        input_1 -> ifexpression_875761.right\n        ifexpression_875761.value -> output_1\n        ifexpression_875761.then -> contains_d42dce.execute\n        all_same.continue -> contains_d42dce.next\n    }\n\n    \n\n    instance(x: 0, y: -44) all_same_a7e3f5 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") AllSame{\n        in(x: -292, y: 0, name: \"input\") property(String) input_ai\n        out(x: 541, y: -1, name: \"output\") property(Bool) output_ai\n\n        instance(x: 0, y: 0) contains_c4d7f6 root.Std_k98ojb.Strings.Contains {}\n        input_ai -> contains_c4d7f6.input\n        'a' -> contains_c4d7f6.contains\n        contains_c4d7f6.result -> output_ai\n    }\n\n    \n\n    instance(x: 0, y: -2) AllSame_3c6b1e root.main.AllSame {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters in a string are same or not.\") same_characters {\n        in(x: -294, y: 0, name: \"string\") property(String) input_a9d3f2\n\n        out(x: 530, y: -1, name: \"output\") property(Bool) output_5e5f43\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        input_a9d3f2 -> tolower_2e1444.input\n        tolower_2e1444.output -> same_characters.input\n        instance(x: 0, y: -5, name: \"all_same\") filter_e8c4a6 root.Std_k98ojb.Query.Filter {\n            where: \"it == previous\"\n        }\n        same_characters.input -> filter_e8c4a6.list\n        filter_e8c4a6.result -> output_5e5f43\n    }\n\n    \n\n    instance(x: 82, y: -37) same_characters_a1bdf0 root.main.same_characters {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: -305, y: 0, name: \"input\") property(String) input_a1\n        out(x: 509, y: -2, name: \"result\") property(Bool) result_a6\n\n        instance(x: 0, y: 0) tolower_7f9e5 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 272, y: 1) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        input_a1 -> tolower_7f9e5.input\n        \"a\" -> contains_d42dce.contains\n        tolower_7f9e5.output -> contains_d42dce.input\n        contains_d42dce.result -> result_a6\n    }\n\n    \n\n    instance(x: 0, y: -3) all_characters_same_f8b1eb root.main.all_characters_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"result\") property(Number) result_0\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        input_ai -> length_6e87f2.input\n        length_6e87f2.length -> result_0\n    }\n\n    \n\n    instance(x: -55, y: 529) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"count\") property(Number) count_4b6e3a\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        instance(x: 265, y: 0) isnumeric_8d7f9c root.Std_k98ojb.Strings.IsNumeric {}\n        input_ai -> length_6e87f2.input\n        length_6e87f2.length -> isnumeric_8d7f9c.input\n        isnumeric_8d7f9c.result -> count_4b6e3a\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: -426, y: 0, name: \"input\") property(String) input_ai\n\n        out(x: 159, y: -219, name: \"count\") property(Number) count_8d3a7b\n\n        instance(x: 15, y: 1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        data_instance(x: 0, y: 34) characters_5d5f4c = \"\"\n        for_5e9a8c root.Std_k98ojb.Iteration.For {\n            in(x: -113, y: 29, name: \"char\") property(String) char_3b1c2f\n\n            out(x: 0, y: 36, name: \"characters\") property(List) characters_5d5f4c\n            input_ai -> for_5e9a8c.items\n            for_5e9a8c.on item -> data_instance(x: 0, y: 34).characters\n            char_3b1c2f = String.Characters(input_ai)\n            characters_5d5f4c.append(char_3b1c2f)\n        } -> for_5e9a8c.next\n        length_6e87f2.length -> count_digits.count\n        characters_5d5f4c -> length_6e87f2.characters\n    }\n\n    \n\n    instance(x: 81, y: 52) Count_7b3b7b root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"output\") property(Number) output_ai\n\n        instance(x: 15, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"0-9\" -> contains_d42dce.contains\n        input_ai -> tolower_2e1444.input\n        contains_d42dce.result -> output_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") digit_count {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 159, y: 44, name: \"count\") property(Number) count_3e8b7a\n\n        instance(x: 15, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) characters_6f5d9b root.Std_k98ojb.Strings.Characters {}\n        input_ai -> tolower_2e1444.input\n        characters_6f5d9b.characters -> count_3e8b7a\n    }\n\n    \n\n    instance(x: 81, y: 52) digit_count_node root.main.digit_count {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"counts number of digits in a given string.\") count_digits {\n        in(x: -219, y: 0, name: \"input\") property(String) input_ai\n        out(x: 1146, y: 0, name: \"result\") property(Number) result_2d3a4e\n\n        instance(x: 15, y: 1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        input_ai -> length_6e87f2.input\n        length_6e87f2.length -> result_2d3a4e\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"string\") property(String) input_a\n\n        out(x: 530, y: -2, name: \"result\") property(Number) result_0\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        length_6e87f2.length -> count_digits.result\n        input_a -> length_6e87f2.input\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Count number of digits in a given string.\") count_digits {\n        in(x: -426, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 159, y: -219, name: \"count\") property(Number) result_0\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        data_instance(x: 530, y: 0) data_7d5a3a = input_0\n        instance(x: 12, y: 35) characters_9c9b4c root.Std_k98ojb.Strings.Characters {}\n        length_6e87f2.length -> characters_9c9b4c.input\n        characters_9c9b4c.characters -> result_0\n    }\n\n    \n\n    instance(x: -55, y: 529) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 159, y: -2, name: \"result\") property(Number) result_0\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        instance(x: 265, y: 0) characters_8d9d35 root.Std_k98bj.List.Characters {}\n        input_ai -> length_6e87f2.input\n        \"0123456789\" -> characters_8d9d35.input\n        length_6e87f2.length -> characters_8d9d35.length\n        characters_8d9d35.characters -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -426, y: 0, name: \"input\") property(String) input_ai\n        out(x: 159, y: -219, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        length_6e87f2.length -> count_digits.count\n        input_ai -> length_6e87f2.input\n    }\n\n    \n    instance(x: -55, y: 529) count_digits_node root.main.count_digits {}\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_power {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_3d1a4\n\n        out(x: 1296, y: -635, name: \"output\") property(Number) output_d5e9b0\n\n        instance(x: 82, y: -417) ifexpression_c7f8c2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 395, y: -378) sum_odd_power_6d3e4a root.main.sum_odd_power {}\n        instance(x: 97, y: -127) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n        data_instance(x: 330, y: 133) data_8c5f0e = [4]\n        instance(x: 46, y: 136) add_f9d3c0 root.Std_k98ojb.Math.Add {}\n        instance(x: 12, y: 258) mul_7e1ce0 root.Std_k98ojb.Math.Mul {}\n        instance(x: 303, y: 2) pow_5fddfa root.Std_k98ojb.Math.Pow {}\n        data_8c5f0e -> add_f9d3c0.first\n        modulo_ad7b2a.result -> add_f9d3c0.second\n        mul_7e1ce0.result -> pow_5fddfa.first\n        n_3d1a4 -> pow_5fddfa.gen_0\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_odd_power_c2d6b root.main.sum_odd_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -555, y: 2, name: \"n\") property(Number) n_8d5f1a\n\n        out(x: 1280, y: 19, name: \"output\") property(Number) output_b7c4b6\n\n        instance(x: -305, y: -215, name: \"odd list\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -47, y: 257, name: \"fourth power\") map_8a0f5d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1047, y: -207) sum_f6e1c4 root.Std_k98ojb.Math.Sum {}\n        list_07cae4 -> filter_c91965.items\n        filter_c91965.result -> map_8a0f5d.items\n        map_8a0f5d.gen_0 -> sum_f6e1c4.items\n        2 -> map_8a0f5d.n\n        n_8d5f1a -> sum_f6e1c4.n\n        map_8a0f5d.output_list -> sum_f6e1c4.output\n    }\n\n    \n\n    instance(x: -34, y: 121) sum_fourth_power_2bdf7 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_odd {\n        in(x: -555, y: 2, name: \"n\") property(Number) n_1f6d4a\n\n        out(x: 1465, y: 35, name: \"output\") property(Number) output_e8c0b9\n\n        instance(x: 0, y: 0) for_05e7c4 root.Std_k98ojb.Std.For {}\n        instance(x: -313, y: 34) nthroot_d2d5a3 root.Std_k98ojb.Math.NthRoot {}\n        instance(x: 1001, y: 29) sub_f9f0ec root.Std_k98ojb.Math.Sub {}\n        instance(x: 1016, y: 26) mul_7e1ce0 root.Std_k98ojb.Math.Mul {}\n        instance(x: -319, y: 43) sum_2a8d5c root.Std_k98ojb.List.Sum {}\n        instance(x: 1039, y: 32) add_b4fdd3 root.Std_k98ojb.Math.Add {}\n        list_empty_1b6e23 -> for_05e7c4.items\n        n_1f6d4a -> for_05e7c4.index\n        for_05e7c4.next -> nthroot_d2d5a3.execute\n        2 -> nthroot_d2d5a3.n\n        nthroot_d2d5a3.result -> sub_f9f0ec.first\n        1 -> sub_f9f0ec.second\n        sub_f9f0ec.result -> mul_7e1ce0.first\n        nthroot_d2d5a3.result -> add_b4fdd3.first\n        3 -> add_b4fdd3.second\n        add_b4fdd3.result -> sum_2a8d5c.n_6b655b\n    }\n\n    \n\n    instance(x: -63, y: 55) sum_fourth_odd_5e7d1 root.main.sum_fourth_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -513, y: 2, name: \"n\") property(Number) n_3a3116\n\n        out(x: 1366, y: 7, name: \"sum\") property(Number) output_57d8b1\n\n        instance(x: 0, y: 0) for_065883 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -114, y: -23, name: \"i\") property(Number) i_bf5c7e\n            in(x: 11, y: -26, name: \"n\") property(Number) n_a8d3a2\n\n            out(x: 0, y: 0, name: \"sum_of_fourth_powers\") property(Number) sum_9b9cd4\n\n            instance(x: 74, y: -28) power_d1f6e5 root.Std_k98ojb.Math.Pow {}\n            instance(x: 102, y: -26) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 246, y: -24) add_88bb8a root.Std_k98ojb.Math.Add {}\n            instance(x: 103, y: -29) div_f3f9c6 root.Std_k98ojb.Math.Div {}\n            instance(x: 75, y: -26) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n                expression: \"i == 0\"\n            }\n            instance(x: 106, y: -23) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n            instance(x: 104, y: -26) power_3e5fdd root.Std_k98ojb.Math.Pow {}\n            instance(x: 75, y: -24) modulo_c76d2b.root\n            instance(x: 102, y: -25) add_88bb8a.root\n            instance(x: 103, y: -28) div_f3f9c6.root\n            mul_f892a4.result -> power_3e5fdd.first\n            power_3e5fdd.result -> add_88bb8a.first\n            power_3e5fdd.result -> modulo_c76d2b.second\n            ifexpression_3d7de6.then -> sum_9b9cd4.execute\n            0 -> sum_9b9cd4.new_value\n        } -> for_065883.handler\n        n_a8d3a2 -> for_065883.items\n        power_d1f6e5.result -> mul_f892a4.first\n        ifexpression_3d7de6.gen_0 -> div_f3f9c6.input\n        sum_9b9cd4.output_list -> output_57d8b1\n    }\n\n    \n\n    instance(x: -294, y: 19) sum_fourth_power_ea5e38 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -555, y: 2, name: \"n\") property(Number) n_3e0f9d\n\n        out(x: 1147, y: -638, name: \"output\") property(Number) output_a1f8a5\n\n        instance(x: 0, y: 0) for_4c3b6 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -194, y: -23, name: \"i\") property(Number) i_c2c7d9\n\n            out(x: 1091, y: -24, name: \"sum\") property(Number) sum_8e4aeb\n\n            instance(x: 0, y: 0, name: \"fourth_power\") expression_d5f3a6 root.Std_k98ojb.Math.Expression {\n                expression: \"(i+1)^4\"\n            }\n            instance(x: -193, y: -22, name: \"odd_number\") add_8e7d2 root.Std_k98ojb.Math.Add {}\n            instance(x: 0, y: 0, name: \"power_of_fourth\") Math.Pow {}\n            instance(x: -194, y: -23, name: \"sum\") Std.CallFunction {}\n            instance(x: 0, y: 0, name: \"result\") data_6f5e3b = [sum, power_of_fourth]\n        } -> for_4c3b6.next\n        n_3e0f9d -> for_4c3b6.items\n        for_4c3b6.index -> sum.result\n    }\n\n    \n\n    instance(x: -289, y: 1) sum_fourth_power_2cd8a1 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_fourth_power {\n        in(x: -513, y: 2, name: \"n\") property(Number) n_6d3d5e\n\n        out(x: 1280, y: -317, name: \"sum\") property(Number) sum_1f8a7c\n\n        instance(x: 74, y: 56) ifexpression_d4b5c2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 394, y: -287, name: \"sum_odd_fourth_power\") root.Std_k98ojb.Math.Expression {\n            expression: \"sum((i + 1)^4 for i in range(2 * n))\"\n        }\n        instance(x: 93, y: 46) sub_6d7f43 root.Std_k98ojb.Math.Sub {}\n        instance(x: 341, y: -287, name: \"fourth_power\") Math.Pow {}\n        data_instance(x: 340, y: 57) data_4e9a2c = [2, 3, 5, 7]\n        instance(x: 0, y: 49) mul_f8d8f6 root.Std_k98ojb.Math.Mul {}\n        instance(x: 99, y: -288, name: \"fourth_power_list\") List.GenerateRange {}\n        instance(x: 105, y: -287, name: \"transform numbers to integer\") expression_7e5a1f root.Std_k98ojb.Std.CallFunction {\n            function: \"Math.pow\"\n        }\n        instance(x: 0, y: 49) add_6c4df3 root.Std_k98ojb.Math.Add {}\n        instance(x: 74, y: -288, name: \"sum_of_fourth_powers\") SumOfFourthPowers {}\n        data_4e9a2c -> fourth_power_list.items\n        fourth_power_list.start -> expression_7e5a1f.gen_0\n        fourth_power_list.end -> expression_7e5a1f.gen_1\n        mul_f8d8f6.first -> expression_7e5a1f.gen_2\n        expression_7e5a1f.result -> add_6c4df3.first\n        sum_odd_fourth_power.n_6d3d5e -> sub_6d7f43.first\n        sub_6d7f43.second -> fourth_power_list.end\n        sum_odd_fourth_power.continue_d9efd7 -> sum_of_fourth_powers.execute_cdac2a\n        0 -> sum_of_fourth_powers.new_value\n        ifexpression_d4b5c2.then -> sum_odd_fourth_power.execute_cdac2a\n        execute_cdac2a -> sum_of_fourth_powers.continue_d9efd7\n    }\n\n    \n\n    instance(x: -292, y: 23) sum_odd_fourth_power_3f8d0e root.main.sum_odd_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_power {\n        in(x: -555, y: 2, name: \"n\") property(Number) n_0a5e3d\n\n        out(x: 1146, y: -647, name: \"output\") property(Number) output_d9b7f4\n\n        data_instance(x: 394, y: -339) data_cde0dc  = [sum, average]\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(n+1)^4\"\n        }\n        instance(x: 62, y: -226, name: \"average\") div_2d44da root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> output_d9b7f4\n        n_0a5e3d -> expression_634b7e.gen_0\n        expression_634b7e.result -> data_cde0dc.sum\n        expression_634b7e.result -> div_2d44da.first\n        div_2d44da.result -> data_cde0dc.average\n        n_0a5e3d -> div_2d44da.second\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_odd_power_f15bad root.main.sum_odd_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_fourth_power {\n        in(x: -513, y: 1, name: \"n\") property(Number) n_3d9e8f\n\n        out(x: 1146, y: -647, name: \"output\") property(Number) output_d63d7c\n\n        instance(x: 0, y: 0) for_065883 root.Std_k98ojb.Std.For {}\n        data_instance(x: 1, y: -341, name: \"data_e8a6f9\") = [sum, average]\n        instance(x: 46, y: -378) sum_digits_96023e root.main.sum_digits {}\n        instance(x: 97, y: -127) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 310, y: 2) exp_9e4d5 root.Std_k98ojb.Math.Exp {}\n        instance(x: 112, y: 80) power_7a6c21 root.Std_k98ojb.Math.Pow {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        4 -> power_7a6c21.exponent\n        mul_f892a4.result -> div_547f34.first\n        10 -> div_547f34.second\n        div_547f34.result -> sum_digits_96023e.n_6b655b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> for_065883.reset\n        list_d128d8 -> for_065883.items\n        for_065883.done -> continue_075eef\n        getter_38583a.value -> output_d63d7c\n        n_3d9e8f -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        floor_61b38d.output -> mul_f892a4.second\n        sum_digits_96023e.result -> setter_41e4ad.new_value\n        n_3d9e8f -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_075eef\n        exp_9e4d5.result -> power_7a6c21.first\n        2 -> power_7a6c21.exponent\n        power_7a6c21.result -> mul_f892a4.second\n        mul_f892a4.result -> setter_375321.new_value\n    }\n\n    \n\n    instance(x: -81, y: 529) sum_odd_fourth_power_5f1e0b root.main.sum_odd_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_of_fourth_power {\n        in(x: -567, y: 2, name: \"n\") property(Number) n_6e3b4d\n\n        out(x: 1296, y: 43, name: \"output\") property(Number) output_a9f5cd\n\n        instance(x: -321, y: -216, name: \"odd_list\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 849, y: -207, name: \"sum_of_fourth_power\") sum_0d6a4e root Std_k98ojb.Math.Sum {}\n        instance(x: 1058, y: -203) nthroot_5f7c2a root.Std_k98ojb.Math.NthRoot {}\n        instance(x: -49, y: 26, name: \"transform to fourth power\") map_4f2d0e root.Std_k98ojb.Iteration.Map {}\n        instance(x: 246, y: -209, name: \"set to positive\") abs_1a6c8a root.Std_k98ojb.Math.Abs {}\n\n        data_instance(x: -609, y: -363) data_9a9c70  = [sum_of_fourth_power]\n        instance(x: 340, y: 60) for_065883 root.Std_k98ojb.Std.For {}\n        a_f37c19 -> data_9a9c70.a\n        b_ca79ac -> data_9a9c70.b\n        c_a89f71 -> data_9a9c70.c\n        data_9a9c70 -> for_065883.items\n        for_065883.done -> sum_0d6a4e.execute\n        n_6e3b4d -> sum_0d6a4e.input\n        nthroot_5f7c2a.n -> abs_1a6c8a.first\n        nthroot_5f7c2a.y -> map_4f2d0e.gen_0\n        nthroot_5f7c2a.result -> sum_0d6a4e.input\n        for_065883.index -> nthroot_5f7c2a.n\n    }\n\n    \n\n    instance(x: 777, y: 760) sum_of_fourth_power_9bfcdf root.main.sum_of_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -513, y: 2, name: \"n\") property(Number) n_1e6d3\n\n        out(x: 1149, y: 29, name: \"sum\") property(Number) sum_5a8dd4\n\n        instance(x: 0, y: 0) for_07f5b2 root.Std_k98ojb.Std.For {}\n        data_instance(x: -216, y: -363) data_ae9d7c  = [n, output]\n        instance(x: 104, y: -365) pow_b8c3e6 root.Std_k98ojb.Math.Pow {}\n        instance(x: 0, y: -366) sub_2a4f5d root.Std_k98ojb.Math.Sub {}\n        instance(x: 0, y: -367) sum_9f7a4e root.Std_k98ojb.Math.Sum {}\n        instance(x: 0, y: -368) add_f8c6f1 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: -369) div_2d44da root.Std_k98ojb.Math.Div {}\n        setter(x: 0, y: 0, name: \"setter_9e7c5a\") setter_9e7c5a = index\n        getter(x: 0, y: 0, name: \"getter_1f4d6a\") getter_1f4d6a = sum\n        instance(x: -215, y: -363) floor_b3bdf8 root.Std_k98ojb.Math.Floor {}\n        pow_b8c3e6.result -> add_f8c6f1.first\n        2 -> div_2d44da.second\n        div_2d44da.result -> sub_2a4f5d.first\n        3 -> sub_2a4f5d.second\n        0 -> setter_9e7c5a.new_value\n        for_07f5b2.reset -> sum_9f7a4e.execute\n        n_1e6d3 -> floor_b3bdf8.input\n        floor_b3bdf8.output -> div_2d44da.first\n        add_f8c6f1.result -> output_5a8dd4\n    }\n\n    \n\n    instance(x: -69, y: 11) sum_fourth_power_f7e8ec root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: 0, y: 0, name: \"side\") property(Number) side_ai\n        out(x: 1089, y: -59, name: \"output\") property(Number) output_2d8c1a\n\n        instance(x: 16, y: 11) sum_6f3e5b root.Std_k98ojb.List.Sum {}\n        instance(x: 23, y: 64) pow_57a4df root.Std_k98ojb.Math.Pow {}\n        instance(x: -19, y: 21) mult_1bb2d7 root.Std_k98ojb.Math.Mul {}\n        side_ai -> sum_6f3e5b.items\n        6.0 -> pow_57a4df.y\n        pow_57a4df.result -> mult_1bb2d7.first\n        6.0 -> mult_1bb2d7.second\n        sum_6f3e5b.result -> output_2d8c1a\n    }\n\n    \n\n    instance(x: -85, y: -43, name: \"cube_surface_area\") cube_surface_area_node root.main(cube_surface_area) {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: -209, y: 0, name: \"side\") property(Number) side_ai\n        out(x: 1086, y: 0, name: \"output\") property(Number) output_2c4e9d\n\n        instance(x: 20, y: -1) six_times_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * (side^2)\"\n        }\n        side_ai -> six_times_node.gen_0\n        six_times_node.result -> output_2c4e9d\n    }\n\n    \n\n    instance(x: 23, y: -3) cube_surface_area_f7a1b8 root.main(cube_surface_area {})\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -216, y: 0, name: \"side_length\") property(Number) side_length_5a1d6e\n        out(x: 216, y: 0, name: \"output\") property(Number) output_a2f8b4\n\n        instance(x: 21, y: 0) six_times_3c7c71 root.Std_k98ojb.Math.SixTimes {}\n        side_length_5a1d6e -> six_times_3c7c71.value\n        six_times_3c7c71.result -> output_a2f8b4\n        instance(x: 0, y: -210) mul_9e2c63 root.Std_k98ojb.Math.Mul {}\n        side_length_5a1d6e -> mul_9e2c63.first\n        six_times_3c7c71.result -> mul_9e2c63.second\n        4 -> mul_9e2c63.multiple\n        mul_9e2c63.result -> output_a2f8b4\n    }\n\n    \n\n    instance(x: -215, y: 0) surface_area_node root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -219, y: -193, name: \"side\") property(Number) side_9f4f1d\n        out(x: 2586, y: 7, name: \"area\") property(Number) area_a5e0c8\n\n        instance(x: 12, y: -105) length_3b2a95 root.Std_k98ojb.List.Length {}\n        side_9f4f1d -> length_3b2a95.list\n        length_3b2a95.length -> area_a5e0c8\n    }\n\n    \n    instance(x: 15, y: -46) surface_area_f7d6a8 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: 0, y: 0, name: \"side\") property(Number) side_9e1d2a\n\n        out(x: -1043, y: 13, name: \"area\") property(Number) area_d4c6f8\n\n        instance(x: 0, y: 0) math_modulo_node root.Std_k98ojb.Math.Modulo {}\n        side_9e1d2a -> math_modulo_node.value\n        6 -> math_modulo_node.divisor\n        math_modulo_node.result -> area_d4c6f8\n   }\n   \n\n    instance(x: -87, y: 0) cube_surface_area_5d3b7 root.main(cube_surface_area)\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: 0, y: 0, name: \"side_length\") property(Number) side_length_a1a2f\n\n        out(x: 108, y: -23, name: \"area\") property(Number) area_3d7e5b\n\n        instance(x: 13, y: 34) four_times_side_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * side_length^2\"\n        }\n        side_length_a1a2f -> four_times_side_node.gen_0\n        four_times_side_node.result -> area_3d7e5b\n    }\n\n    \n\n    instance(x: 23, y: -46) surface_area_4c5d8a root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_ai\n\n        out(x: 216, y: -13, name: \"result\") property(Number) result_ai\n\n        instance(x: 6, y: -14) pow_5a1f7 root.Std_k98ojb.Math.Pow {}\n        side_ai -> pow_5a1f7.x\n        2 -> pow_5a1f7.y\n        pow_5a1f7.result -> result_ai\n    }\n\n    \n    instance(x: -64, y: 0) surface_area_f8e9d4 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_ai\n        out(x: 0, y: 0, name: \"surface_area\") property(Number) surface_area_6c9e7b\n\n        instance(x: 0, y: 0) math_pow_node root.Std_k98ojb.Math.Pow {}\n        side_ai -> math_pow_node.base\n        2 -> math_pow_node.exp\n        math_pow_node.result -> surface_area_6c9e7b\n    }\n\n    \n    instance(x: -94, y: -23, name: \"surface_area\") surface_area_a0d1f4 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: 0, y: 0, name: \"side_length\") property(Number) side_length_9e3b6d\n        out(x: 1386, y: -47, name: \"output\") property(Number) output_ba7c9d\n\n        instance(x: 15, y: 23) math_pow_node root.Std_k98ojb.Math.Pow {}\n        side_length_9e3b6d -> math_pow_node.base\n        2 -> math_pow_node.exponent\n        math_pow_node.result -> add_d4a7c0\n        data_instance(x: -76, y: -242) data_d1f8e5  = 6\n        instance(x: 12, y: -251) mul_3d9dd4 root.Std_k98ojb.Math.Mul {}\n        side_length_9e3b6d -> mul_3d9dd4.first\n        math_pow_node.result -> mul_3d9dd4.second\n        data_d1f8e5 -> mul_3d9dd4.factor\n        add_d4a7c0.result -> output_ba7c9d\n    }\n\n    \n\n    instance(x: 44, y: -27) surface_area_node root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: -222, y: 123, name: \"side\") property(Number) side_ai\n        out(x: 2586, y: 0, name: \"surface_area\") property(Number) surface_area_ai\n\n        instance(x: 13, y: 0) math_pow_node root.Std_k98ojb.Math.Pow {}\n        math_pow_node.gen_1 -> math_pow_node.y\n        side_ai -> math_pow_node.x\n        math_pow_node.result -> square_side_ai\n        instance(x: 0, y: -12) multiply_b3d6c2 root.Std_k98ojb.Math.Mul {}\n        square_side_ai -> multiply_b3d6c2.first\n        6 -> multiply_b3d6c2.second\n        multiply_b3d6c2.result -> surface_area_ai\n    }\n\n    \n    instance(x: -85, y: -47, name: \"cube_surface_area\") cube_surface_area_node root.main(cube_surface_area) {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -471, y: 23, name: \"list\") property(List) list_4a2d1f\n\n        out(x: 1210, y: -113, name: \"output\") property(Number) output_d5e7c8\n\n        instance(x: -104, y: -108) min_9b3e34 root.Std_k98ojb.List.Min {}\n        instance(x: -112, y: 25, name: \"max_4d2f0d\") root.Std_k98ojb.List.Max {}\n\n        list_4a2d1f -> max_4d2f0d.items\n        max_4d2f0d.item -> diff_largest_smallest.output_d5e7c8\n        min_9b3e34.result -> output_d5e7c8\n    }\n\n    \n\n    instance(x: 97, y: -142) diff_largest_smallest_f1a6df root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -475, y: 23, name: \"list\") property(List) list_0e4d6b\n\n        out(x: 1091, y: -3, name: \"output\") property(Number) output_b9c2f7\n\n        instance(x: -104, y: 28, name: \"max\") property(Number) max_5a4a8b\n        instance(x: -119, y: -24, name: \"min\") property(Number) min_3d7e0f\n        instance(x: -105, y: -26, name: \"count\") property(Number) count_b9c6f1\n\n        instance(x: 95, y: -109, name: \"for\") trigger() for_2b8a4c\n        list_0e4d6b -> for_.items\n        instance(x: 96, y: 29, name: \"firstitem\") property(Number) firstitem_9b5f1f\n\n        instance(x: -104, y: -26, name: \"for\") trigger() for_3c8e4a\n        list_0e4d6b -> for_.items\n        instance(x: 95, y: 29, name: \"firstitem\") property(Number) firstitem_b9c2f\n\n        for_.index -> count_b9c6f1.new_value\n        list_0e4d6b -> for_.list\n        max_5a4a8b -> for_.gen_2\n        min_3d7e0f -> for_.gen_3\n        firstitem_9b5f1f.item -> max_5a4a8b.new_value\n        firstitem_b9c2f.item -> min_3d7e0f.new_value\n    }\n\n    \n\n    instance(x: -95, y: 15) diff_max_min_6bdf7e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -456, y: 34, name: \"list\") property(List) list_8e9f5a\n\n        out(x: 1036, y: 3, name: \"difference\") property(Number) difference_1d7b4c\n\n        instance(x: 109, y: 55) max_f1cd33 root.Std_k98ojb.List.Max {}\n        instance(x: -44, y: 63) min_a0f6e2 root.Std_k98ojb.List.Min {}\n        list_8e9f5a -> max_f1cd33.items\n        list_8e9f5a -> min_a0f6e2.items\n        max_f1cd33.result -> difference_1d7b4c\n        min_a0f6e2.result -> difference_1d7b4c\n    }\n\n    \n\n    instance(x: -93, y: 49) diff_max_min_b5a9b3 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -469, y: 0, name: \"list\") property(List) list_1d6b4f\n\n        out(x: 1128, y: 3, name: \"output\") property(Number) output_e9c2e5\n\n        instance(x: 109, y: -103) max_d7a3f0 root.Std_k98ojb.List.Max {}\n        instance(x: 107, y: 29, name: \"min\") property(List) list_1d6b4f\n        instance(x: 110, y: 5) sub_a2c7e9 root.Std_k98ojb.Math.Sub {}\n        min -> max_d7a3f0.items\n        max_d7a3f0.result -> output_e9c2e5\n        list_1d6b4f -> sub_a2c7e9.list\n        0 -> sub_a2c7e9.first\n        sub_a2c7e9.result -> output_e9c2e5\n    }\n\n    \n\n    instance(x: -92, y: 46) diff_max_min_9a6b5f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -475, y: 0, name: \"list\") property(List) list_8c6b9d\n\n        out(x: 1042, y: -1, name: \"difference\") property(Number) difference_f7e4f3\n\n        instance(x: 0, y: 0) length_7a5c42 root.Std_k98ojb.List.Length {}\n        instance(x: -48, y: 23, name: \"smallest\") property(Number) smallest_9d1f6b\n        instance(x: 102, y: 46, name: \"largest\") property(Number) largest_c7a2e3\n\n        list_8c6b9d -> length_7a5c42.list\n        length_7a5c42.length -> smallest_9d1f6b\n        list_8c6b9d -> length_7a5c42.list\n        length_7a5c42.length -> largest_c7a2e3\n\n        instance(x: 0, y: -46) max_4f1f44 root.Std_k98ojb.Math.Max {}\n        list_8c6b9d -> max_4f1f44.values\n        max_4f1f44.result -> largest_c7a2e3\n\n        instance(x: 0, y: -46) min_5c7582 root.Std_k98ojb.Math.Min {}\n        list_8c6b9d -> min_5c7582.values\n        min_5c7582.result -> smallest_9d1f6b\n\n        difference_f7e4f3 = largest_c7a2e3 - smallest_9d1f6b\n    }\n\n    \n\n    instance(x: 101, y: 44) diff_max_min_0a8d23 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -469, y: 15, name: \"list\") property(List) list_3d6e38\n\n        out(x: 1245, y: 4, name: \"output\") property(Number) output_d1f5c9\n\n        instance(x: 0, y: 0) length_6b2d14 root.Std_k98ojb.List.Length {}\n        instance(x: -103, y: 43) min_8a3e7a root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: -26) max_1c9f4a root.Std_k98ojb.List.Max {}\n        func() {\n            in(x: -113, y: 44, name: \"x\") property(Number) x_0d6e34\n\n            out(x: 1045, y: 45, name: \"\") property(Number) _7f8d4c\n\n            instance(x: 91, y: 41) ifexpression_b1e2a9 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == length - 1\"\n            }\n            getter(x: 0, y: 46, name: \"getter_7d4c6f\") getter_7d4c6f = x\n            setter(x: 104, y: 40) setter_7d4c6f = x\n            instance(x: -105, y: 38) greaterthan_1a9cd5 root.Std_k98ojb.Math.GreaterThan {}\n            ifexpression_b1e2a9.value -> output_d1f5c9\n            list_3d6e38 -> max_1c9f4a.items\n            max_1c9f4a.item -> greaterthan_1a9cd5.left\n            list_3d6e38 -> min_8a3e7a.items\n            min_8a3e7a.item -> greaterthan_1a9cd5.right\n            length_6b2d14.length -> greaterthan_1a9cd5.right\n            ifexpression_b1e2a9.then -> setter_7d4c6f.execute\n            x_0d6e34 -> setter_7d4c6f.new_value\n            min_8a3e7a.item -> greaterthan_1a9cd5.left\n            list_3d6e38 -> max_1c9f4a.items\n            max_1c9f4a.item -> greaterthan_1a9cd5.right\n            length_6b2d14.length -> greaterthan_1a9cd5.right\n        } -> ifexpression_b1e2a9.execute\n    }\n\n    \n\n    instance(x: -91, y: 44) diff_largest_smallest_7c7f8f root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -475, y: 24, name: \"list\") property(List) list_f9f6d1\n\n        out(x: 1215, y: -109, name: \"result\") property(Number) result_7b8e15\n\n        instance(x: 0, y: 0) length_a2c8ec root.Std_k98ojb.List.Length {}\n        instance(x: -108, y: -23) max_b4f5d9 root.Std_k98ojb.List.Max {}\n        instance(x: -109, y: -26) min_1a3e6f root.Std_k98ojb.List.Min {}\n        instance(x: 121, y: 43) sub_f0c2c7 root.Std_k98ojb.Math.Sub {}\n        instance(x: 93, y: 23) pow_a9d4e5 root.Std_k98ojb.Math.Pow {}\n        instance(x: -106, y: -26) greaterthan_6f3df8 root.Std_k98ojb.Logic.GreaterThan {}\n        instance(x: 121, y: -110) lessThanOrEqual_2c0a66 root.Std_k98ojb.Logic.LessThanOrEqual {}\n\n        list_f9f6d1 -> length_a2c8ec.list\n        length_a2c8ec.length -> sub_f0c2c7.first\n        0 -> sub_f0c2c7.second\n        sub_f0c2c7.result -> max_b4f5d9.left\n        pow_a9d4e5.y -> max_b4f5d9.right\n        list_f9f6d1 -> min_1a3e6f.list\n        0 -> min_1a3e6f.first\n        length_a2c8ec.length -> lessThanOrEqual_2c0a66.left\n        pow_a9d4e5.result -> lessThanOrEqual_2c0a66.right\n        greaterthan_6f3df8.result -> result_7b8e15\n        sub_f0c2c7.continue -> max_b4f5d9.reset\n        min_1a3e6f.continue -> max_b4f5d9.next\n        length_a2c8ec.reset -> pow_a9d4e5.execute\n        pow_a9d4e5.continue -> sub_f0c2c7.next\n        sub_f0c2c7.result -> result_7b8e15\n    }\n\n    \n\n    instance(x: 95, y: -115) diff_max_min_6f6a3e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -471, y: 34, name: \"list\") property(List) list_5d4a2e\n\n        out(x: 1213, y: -1, name: \"output\") property(Number) output_f0d6f8\n\n        instance(x: 109, y: -104) max_d9b7d2 root.Std_k98ojb.List.Max {}\n        list_5d4a2e -> max_d9b7d2.items\n        func() {\n            in(x: -232, y: 19, name: \"min\") property(Number) min_f0c8f6\n\n            out(x: 1233, y: -1, name: \"\") property(Number) _4a5b35\n\n            instance(x: 109, y: -104) sub_2d2e38 root.Std_k98ojb.Math.Sub {}\n            max_d9b7d2.result -> sub_2d2e38.first\n            min_f0c8f6 -> sub_2d2e38.second\n            sub_2d2e38.result -> _4a5b35\n        } -> max_d9b7d2.handler\n        max_d9b7d2.output -> output_f0d6f8\n    }\n\n    \n\n    instance(x: 91, y: -121) diff_largest_smallest_1c9e25 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -471, y: 21, name: \"list\") property(List) list_0f5b4d\n\n        out(x: 1092, y: -1, name: \"output\") property(Number) output_a3c0f7\n\n        instance(x: -104, y: 85, name: \"max\") property(Number) max_8e5a95\n        instance(x: -103, y: 89, name: \"min\") property(Number) min_4b9d45\n\n        instance(x: 97, y: 91) ifexpression_d7f0c6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0\"\n        }\n        getter(x: -12, y: 94, name: \"getter_a2a3e9\") getter_a2a3e9 = list\n        setter(x: 102, y: -317, name: \"setter_8c4f1d\") setter_8c4f1d = list\n        instance(x: 100, y: 96) length_5b8d0d root.Std_k98ojb.List.Length {}\n        instance(x: 101, y: 92) max_3f9a95 root.Std_k98ojb.List.Max {}\n        instance(x: 103, y: -23) min_c7f2e1 root.Std_k98ojb.List.Min {}\n        setter_8c4f1d.continue -> length_5b8d0d.reset\n        max_3f9a95.trigger -> length_5b8d0d.onItem\n        min_c7f2e1.trigger -> length_5b8d0d.onItem\n        list -> max_3f9a95.items\n        length_5b8d0d.length -> max_3f9a95.count\n        getter_a2a3e9.value -> max_3f9a95.item\n        setter_8c4f1d.new_value -> min_c7f2e1.new_value\n        length_5b8d0d.reset -> min_c7f2e1.reset\n        list -> min_c7f2e1.items\n        0 -> min_c7f2e1.index\n        max_3f9a95.result -> output_a3c0f7\n        ifexpression_d7f0c6.value -> diff_max_min.output\n    }\n\n    \n\n    instance(x: -91, y: 103) diff_max_min_8b5a5d root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: -192, name: \"list\") property(List) list_9e5d4f\n\n        out(x: 1022, y: -7, name: \"output\") property(Number) output_3b1cd6\n\n        instance(x: 0, y: 0) max_4a9c21 root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 0) min_4f8e42 root.Std_k98ojb.List.Min {}\n        list_9e5d4f -> max_4a9c21.items\n        list_9e5d4f -> min_4f8e42.items\n        max_4a9c21.max -> output_3b1cd6\n        min_4f8e42.min -> output_3b1cd6\n    }\n\n    \n\n    instance(x: 11, y: -177) diff_max_min_a2d7b5 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -294, y: 155, name: \"n\") property(Number) n_4a2f9d\n\n        out(x: 509, y: 43, name: \"output\") property(Bool) output_1b6e8c\n\n        instance(x: 0, y: 0) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: -44, y: 49) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n        n_4a2f9d -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> equal_a54bdc.left\n        0 -> equal_a54bdc.right\n        equal_a54bdc.result -> output_1b6e8c\n    }\n\n    \n\n    instance(x: -53, y: 530) is_even_bf2a5b root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 0, name: \"n\") property(Number) n_6f2d5a\n\n        out(x: 1044, y: 7, name: \"output\") property(Bool) output_e8e3b1\n\n        instance(x: 102, y: 10) modulo_0c9e34 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -11, y: 17, name: \"continue\") trigger() continue_4d2a7f\n        n_6f2d5a -> modulo_0c9e34.value\n        2 -> modulo_0c9e34.divisor\n        modulo_0c9e34.result -> output_e8e3b1\n        if(modulo_0c9e34.result == 0) {\n            n_6f2d5a -> continue_4d2a7f.execute\n            false -> output_e8e3b1\n        } else {\n            true -> output_e8e3b1\n        }\n    }\n\n    \n\n    instance(x: -74, y: 23) is_even_f0c0d5 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -288, y: 18, name: \"n\") property(Number) n_1e3d4f\n\n        out(x: 509, y: 13, name: \"output\") property(Bool) output_e9c7b6\n\n        instance(x: 0, y: 0) modulo_d5aeb8 root.Std_k98ojb.Math.Modulo {}\n        n_1e3d4f -> modulo_d5aeb8.value\n        2 -> modulo_d5aeb8.divisor\n        modulo_d5aeb8.result -> output_e9c7b6\n    }\n\n    \n\n    instance(x: -281, y: -13) is_even_b0df21 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -285, y: 155, name: \"n\") property(Number) n_4d8a95\n\n        out(x: 547, y: 63, name: \"output\") property(Bool) output_c9e0c7\n\n        instance(x: -82, y: 156) modulo_1f5c71 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 199, y: 61, name: \"continue\") trigger() continue_ea8c63\n        instance(x: 105, y: -26, name: \"output\") property(Bool) output_c9e0c7\n\n        modulo_1f5c71.result -> output_c9e0c7\n        n_4d8a95 -> modulo_1f5c71.value\n        2 -> modulo_1f5c71.divisor\n    }\n\n    \n\n    instance(x: -64, y: 11) is_even_b6b1ad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -283, y: 23, name: \"n\") property(Number) n_9e1d2a\n\n        out(x: 1236, y: 12, name: \"output\") property(Bool) output_e0b3c5\n\n        instance(x: 112, y: 10) modulo_11f8a4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -26, y: 17, name: \"is_even\") notequal_b9c2d1 root.Std_k98ojb.Logic.NotEqual {}\n        n_9e1d2a -> modulo_11f8a4.value\n        0 -> notequal_b9c2d1.right\n        modulo_11f8a4.result -> is_even.left\n        notequal_b9c2d1.result -> output_e0b3c5\n    }\n\n    \n\n    instance(x: -85, y: 69) is_even_6e4dd7 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") Is_even {\n        in(x: -281, y: 166, name: \"n\") property(Number) n_5d8b1e\n\n        out(x: 1212, y: 7, name: \"output\") property(Bool) output_e4d0f9\n\n        instance(x: 104, y: 12) modulo_f6aeb3 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 114, y: 17) equal_2e5c8b root.Std_k98ojb.Logic.Equal {}\n        n_5d8b1e -> modulo_f6aeb3.value\n        0 -> equal_2e5c8b.right\n        modulo_f6aeb3.result -> equal_2e5c8b.left\n        equal_2e5c8b.result -> output_e4d0f9\n    }\n\n    \n\n    instance(x: -67, y: 23) is_even_c7d5e9 root.main.Is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") IsEven {\n        in(x: -285, y: 145, name: \"input\") property(Number) input_d4d0f6\n\n        out(x: 1211, y: 46, name: \"output\") property(Bool) output_e8b2e9\n        out(x: 1143, y: -21, name: \"continue\") trigger() continue_7c4df5\n\n        instance(x: -109, y: -23, name: \"modulo\") Math.Modulo {}\n        input_d4d0f6 -> modulo.left\n        2 -> modulo.divisor\n        modulo.result -> output_e8b2e9\n        modulo.result -> continue_7c4df5\n    }\n\n    \n\n    instance(x: -176, y: 58) IsEven_f1a3e2 root.main.IsEven {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") IsEven {\n        in(x: -285, y: 165, name: \"input\") property(Number) input_4f9d0d\n\n        out(x: 546, y: -1, name: \"output\") property(Bool) output_3a3e5c\n\n        instance(x: -109, y: 164) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: -113, y: 172) equal_e7c0f6 root.Std_k98ojb.Logic.Equal {}\n        input_4f9d0d -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> equal_e7c0f6.left\n        0 -> equal_e7c0f6.right\n        equal_e7c0f6.result -> output_3a3e5c\n    }\n\n    \n\n    instance(x: -292, y: 59) IsEven_d1d2b9 root.main.IsEven {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") even_number {\n        in(x: -284, y: 166, name: \"n\") property(Number) n_5a4d1e\n\n        out(x: 1038, y: 3, name: \"output\") property(Bool) output_e0f7d4\n\n        instance(x: -105, y: 162) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 112, y: 168) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n        n_5a4d1e -> modulo_45e806.value\n        2 -> modulo_45e806.divisor\n        modulo_45e806.result -> equal_a54bdc.left\n        0 -> equal_a54bdc.right\n        equal_a54bdc.result -> output_e0f7d4\n    }\n\n    \n\n    instance(x: -83, y: 73) even_number_2a8c23 root.main.even_number {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -283, y: 165, name: \"input\") property(Number) input_0f9d5a\n\n        out(x: 1234, y: 155, name: \"output\") property(Bool) output_b1e8c8\n\n        instance(x: -104, y: 159) modulo_d4b2eb root.Std_k98ojb.Math.Modulo {}\n        instance(x: 0, y: 165) equal_5d7f3a root.Std_k98ojb.Logic.Equal {}\n        input_0f9d5a -> modulo_d4b2eb.value\n        0 -> modulo_d4b2eb.divisor\n        equal_5d7f3a.result -> output_b1e8c8\n        modulo_d4b2eb.result -> equal_5d7f3a.left\n    }\n\n    \n\n    instance(x: -83, y: 64) is_even_0bf9d root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") FirstRepeat {\n        in(x: -530, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n        data_instance(x: -753, y: -588) data_cc1b1b  = [charMap]\n        instance(x: -432, y: -620) count_4b8927 root.Std_k98ojb.Count {}\n        instance(x: -978, y: -566) map_3f3ee6 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 188, y: 425) list_5e8f9a root.Std_k98ojb.List {}\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        data_cc1b1b -> map_3f3ee6.items\n        charMap -> count_4b8927.count\n        input_ai -> map_3f3ee6.handler\n        tolower_7b3b7b.result -> output_ai\n        length_4b8927.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        list_5e8f9a.items -> count_4b8927.list\n        map_3f3ee6.output_list -> output_ai\n        firstitem_0c0c23 root.Std_k98ojb.List.FirstItem {}\n        data_cc1b1b.last -> firstitem_0c0c23.item\n    }\n\n    \n\n    instance(x: -97, y: 127) FirstRepeat_49c6ac root.main.FirstRepeat {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -1059, y: 696) characters_4d4556 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 196, y: 256) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_7b3b7b.output -> characters_4d4556.input\n        input_ai -> tolower_7b3b7b.input\n        characters_4d4556.characters -> output_ai\n        contains_d42dce.input -> characters_4d4556.characters\n        \"a\" -> contains_d42dce.contains\n        first_repeated.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) first_repeated_59bc6e root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") find_first_repeated {\n        in(x: -531, y: 2, name: \"string\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: -1049, y: -375) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -1059, y: -696) map_2d44da root.Std_k98ojb.Iteration.Map {}\n        instance(x: 188, y: 425) tolower_a2fa90 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 196, y: 517) contains_b42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: -432, y: -620) firstitem_29a5c8 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -978, y: -566) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        map_2d44da.handler = (x: 0, y: 0) -> {\n            var char = tolower_a2fa90.input[x]\n            if contains_b42dce.input.contains(char) {\n                return true\n            }\n            return false\n        }\n        input_ai -> map_2d44da.items\n        firstitem_29a5c8.item -> sub_f133b2.first\n        length_4b8927.length -> sub_f133b2.second\n        0 -> sub_f133b2.index\n        map_2d44da.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -97, y: -68) find_first_repeated_f53d27 root.main.find_first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") FirstRepeat {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n        data_instance(x: -753, y: -588) data_cc1b1b  = [chars, repeat]\n        instance(x: -432, y: -620) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        instance(x: -978, y: -566) map_3f3ee6 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 188, y: 425) count_aabb6e root.Std_k98ojb.Count {}\n        instance(x: 196, y: 517) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == chars[a]\"\n        }\n        instance(x: -139, y: -492) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        data_cc1b1b -> flatten_c31c7c.items\n        flatten_c31c7c.flattened -> map_3f3ee6.items\n        map_3f3ee6.handler -> ifexpression_a2fa90.handler\n        input_ai -> map_3f3ee6.input\n        map_3f3ee6.result -> data_cc1b1b.chars\n        count_aabb6e.value -> ifexpression_a2fa90.predicate\n        0 -> count_aabb6e.reset\n        ifexpression_a2fa90.then -> firstitem_3078c6.execute\n        map_3f3ee6.itemAtIndex -> firstitem_3078c6.item\n        data_cc1b1b.chars[index] -> repeat\n        repeat.count -> count_aabb6e.value\n        0 -> repeat.new_value\n        ifexpression_a2fa90.else -> firstitem_3078c6.next\n    }\n\n    \n\n    instance(x: -97, y: -68) FirstRepeat_e5e1d root.main.FirstRepeat {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n\n        instance(x: -1049, y: 375) characters_9b1bc3 root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_9b1bc3.input\n        characters_9b1bc3.characters -> output_ai\n\n        instance(x: -432, y: 620) map_4f8d7c root.Std_k98ojb.Iteration.Map {\n            handler: (x: Any) -> Bool { \n                var found = false\n                for i in characters_9b1bc3.characters {\n                    if x == i {\n                        found = true\n                        break\n                    }\n                }\n                return found\n            }\n        }\n        list_752c60 -> map_4f8d7c.items\n        map_4f8d7c.output_list -> output_ai\n\n        instance(x: -1191, y: 492) firstitem_d831ca root.Std_k98ojb.List.FirstItem {}\n        list_752c60 -> firstitem_d831ca.list\n        firstitem_d831ca.item -> output_ai\n\n    }\n\n    \n\n    instance(x: -67, y: -37) first_repeated_f21f44 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") repeat_char {\n        in(x: -530, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: -1049, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -1099, y: 0) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -1145, y: 44) filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it == characters_7b3b7b.characters[std.Count(input_ai)]\"\n        }\n        instance(x: -1181, y: 0) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        input_ai -> filter_4d4556.input\n        filter_4d4556.result -> firstitem_870503.list\n        characters_7b3b7b.characters -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) repeat_char_f59bc6 root.main.repeat_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") FirstRepeat {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Char) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -179, y: 30) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: -978, y: 566) map_4f6e1c root.Std_k98ojb.Iteration.Map {\n            handler: \"it\"\n        }\n        instance(x: 118, y: 540, name: \"checker\") if_7c284f root.Std_k98ojb.Std.If {}\n        tolower_7b3b7b.output -> contains_d42dce.input\n        input_ai -> contains_d42dce.contains\n        map_4f6e1c.items -> if_7c284f.items\n        0 -> if_7c284f.index\n        contains_d42dce.result -> if_7c284f.predicate\n        if_7c284f.then -> checker.execute\n        map_4f6e1c.item -> checker.right\n        if_7c284f.left -> checker.first\n        contains_d42dce.input -> map_4f6e1c.value\n        0 -> map_4f6e1c.new_value\n        if_7c284f.predicate -> output_ai\n    }\n\n    \n\n    instance(x: -67, y: 127) FirstRepeat_f53d27 root.main.FirstRepeat {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") FirstRepeat {\n        in(x: -343, y: 2, name: \"string\") property(String) input_ai\n        out(x: 530, y: 29, name: \"output\") property(Char) output_ai\n\n        instance(x: 406, y: 546) map_6e7b4 root.Std_k98ojb.Iteration.Map {}\n        instance(x: -55, y: 0) filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it in [input]\"\n        }\n        instance(x: 215, y: 100) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: -48, y: 517) index_84fbbe root.Std_k98ojb.List.Index {}\n        input_ai -> map_6e7b4.items\n        map_6e7b4.handler -> filter_f3b46d.predicate\n        filter_f3b46d.result -> contains_d42dce.input\n        1 -> index_84fbbe.index\n        filter_f3b46d.list -> contains_d42dce.contains\n        input_ai -> contains_d42dce.search\n        map_6e7b4.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -67, y: -37) FirstRepeat_e54b7f root.main.FirstRepeat {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"find the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first]\n        instance(x: -432, y: -620) map_8f4a95 root.Std_k98ojb.Iteration.Map {}\n        instance(x: -978, y: -566) count_3f3ee6 root.Std_k98ojb.Std.Count {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        list_752c60 -> map_8f4a95.items\n        tolower_7b3b7b.output -> map_8f4a95.input\n        map_8f4a95.map ->\n            instance(x: 112, y: -383) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) if_7c284f root.Std_k98ojb.Std.If {}\n            1 -> sub_852f2e.second\n            map_8f4a95.item -> sub_852f2e.first\n            contains_d42dce.contains -> map_8f4a95.input\n            tolower_7b3b7b.output -> contains_d42dce.search\n            length_4b8927.length -> if_7c284f.predicate\n            0 -> if_7c284f.then\n            map_8f4a95.item -> if_7c284f.right\n            if_7c284f.left -> count_3f3ee6.reset\n            sub_852f2e.result -> data_cc1b1b.first\n        first_repeated.output ->\n            instance(x: 406, y: 546) getat_8eae56 root.Std_k98ojb.List.GetAt {}\n            instance(x: -1059, y: -696) lastitem_d831ca root.Std_k98ojb.List.LastItem {}\n            data_cc1b1b.first -> getat_8eae56.index\n            map_8f4a95.item ->\n                if (contains_d42dce.result == 1 and sub_852f2e.result == map_8f4a95.input) then \n                    lastitem_d831ca.item\n        first_repeated.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) first_repeated_f15bad root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -530, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n        instance(x: -432, y: -620) map_8eae56 root.Std_k98ojb.Iteration.Map {\n            handler: (it: Any) => {\n                char_0 := it as String\n                count_1 := Std_k98ojb.List.Length(list_752c60).value\n                if count_1 > 1 { return char_0 }\n            }\n        }\n        list_752c60 -> map_8eae56.items\n        map_8eae56.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) first_repeated_char_59bc6e root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a sorted array.\") second_smallest {\n        in(x: -102, y: 23, name: \"list\") property(List) list_8a2f0e\n\n        out(x: 1123, y: -28, name: \"output\") property(Number) output_e7c4d1\n\n        instance(x: 94, y: -105) seconditem_8b6cd9 root.Std_k98ojb.List.SecondItem {}\n        getter(x: 0, y: 0, name: \"getter_5e6a2c\") getter_5e6a2c = index\n        setter(x: 118, y: -158, name: \"setter_d3d5f1\") setter_d3d5f1 = index\n        instance(x: 92, y: -22) less_than_a4b8cd root.Std_k98ojb.Logic.LessThan {}\n        list_8a2f0e -> seconditem_8b6cd9.items\n        getter_5e6a2c.value -> output_e7c4d1\n        seconditem_8b6cd9.index -> setter_d3d5f1.new_value\n        less_than_a4b8cd.left -> setter_d3d5f1.first\n        list_8a2f0e[1] -> less_than_a4b8cd.right\n        less_than_a4b8cd.result -> setter_d3d5f1.predicate\n    }\n\n    \n\n    instance(x: -67, y: 45) second_smallest_f6c7e9 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a given list.\") second_smallest {\n        in(x: -1039, y: 3, name: \"list\") property(List) list_6d1e21\n\n        out(x: 1234, y: 23, name: \"output\") property(Number) output_e8fdd7\n\n        instance(x: 0, y: 0) find_second_smallest_f9c2a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -1011, y: -28, name: \"elem\") property(Number) elem_3d6e4f\n\n            out(x: 1234, y: 23, name: \"\") property(Number) _5c7a0f\n\n            instance(x: 92, y: -21) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n            instance(x: 104, y: 25) if_7c284f root.Std_k98ojb.Std.If {}\n            elem_3d6e4f -> equal_aabb6e.left\n            find_second_smallest_f9c2a.predicate -> _5c7a0f\n            equal_aabb6e.result -> if_7c284f.predicate\n        } -> find_second_smallest_f9c2a.handler\n        list_6d1e21 -> find_second_smallest_f9c2a.items\n    }\n\n    \n\n    instance(x: -69, y: 41) second_smallest_d4b8d5 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a given sorted list.\") second_smallest {\n        in(x: -1019, y: 3, name: \"list\") property(List) list_5a1d6b\n\n        out(x: 1024, y: 85, name: \"output\") property(Number) output_a8f2c0\n\n        instance(x: -1087, y: 59, name: \"first_smallest\") Std_k98ojb.List.Min {}\n        instance(x: -1039, y: -26, name: \"second_smallest_node\") Std_k98ojb.List.Min {}\n        list_5a1d6b -> first_smallest.items\n        list_5a1d6b -> second_smallest_node.items\n        first_smallest.min -> output_a8f2c0\n    }\n\n    \n\n    instance(x: -93, y: 47) second_smallest_4eb5e3 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -102, y: -73, name: \"list\") property(List) list_6e1a3d\n\n        out(x: -1058, y: -64, name: \"output\") property(Number) output_d4b5f2\n\n        instance(x: 0, y: 0) filter_e9c6f7 root.Std_k98ojb.Query.Filter {}\n        list_6e1a3d -> filter_e9c6f7.list\n        func() {\n            in(x: -1058, y: -64, name: \"it\") property(Any) it_5eb9d4\n\n            out(x: 0, y: -70, name: \"\") property(Number) _e3b9a1\n\n            instance(x: -102, y: -72) min_2f7c71 root.Std_k98ojb.List.Min {}\n            instance(x: 0, y: -67) if_6d2a4e root.Std_k98ojb Std.If {}\n            it_5eb9d4 -> if_6d2a4e.left\n            _e3b9a1 -> min_2f7c71.min\n            list_6e1a3d -> filter_e9c6f7.items\n        } -> filter_e9c6f7.predicate\n        func() {\n            in(x: -1058, y: -64, name: \"it\") property(Any) it_5eb9d4\n\n            out(x: 0, y: -70, name: \"\") property(Number) _e3b9a1\n\n            instance(x: -102, y: -72) min_2f7c71 root.Std_k98ojb.List.Min {}\n            instance(x: 0, y: -67) if_6d2a4e root.Std_k98ojb Std.If {}\n            it_5eb9d4 -> if_6d2a4e.right\n            _e3b9a1 -> min_2f7c71.min\n            list_6e1a3d -> filter_e9c6f7.items\n        } -> filter_e9c6f7.predicate\n        filter_e9c6f7.result -> output_d4b5f2\n    }\n\n    \n\n    instance(x: 0, y: -63) second_smallest_6e6a3 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a given list.\") second_smallest {\n        in(x: -108, y: 5, name: \"list\") property(List) list_3d4a9e\n\n        out(x: 1232, y: -69, name: \"output\") property(Number) output_eb6f8c\n\n        instance(x: 0, y: 0) find_second_smallest_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -105, y: 33, name: \"current\") property(Number) current_b5d7a3\n\n            out(x: 1232, y: -69, name: \"\") property(Number) _9f4d6e\n\n            instance(x: 92, y: -23) less_than_1b3c0c root.Std_k98ojb.Math.LessThan {}\n            instance(x: 412, y: 86) if_7c284f root.Std_k98ojb.Std.If {}\n            current_b5d7a3 -> less_than_1b3c0c.left\n            2 -> less_than_1b3c0c.right\n            less_than_1b3c0c.result -> _9f4d6e\n        } -> find_second_smallest_node.predicate\n        func() {\n            in(x: -105, y: 33, name: \"current\") property(Number) current_b5d7a3\n\n            out(x: 1232, y: -69, name: \"\") property(Number) _9f4d6e\n\n            instance(x: 92, y: -23) less_than_1b3c0c root.Std_k98ojb.Math.LessThan {}\n            instance(x: 412, y: 86) if_7c284f root.Std_k98ojb.Std.If {}\n            current_b5d7a3 -> less_than_1b3c0c.left\n            2 -> less_than_1b3c0c.right\n            less_than_1b3c0c.result -> _9f4d6e\n        } -> find_second_smallest_node.predicate\n        list_3d4a9e -> find_second_smallest_node.items\n        find_second_smallest_node.item -> _9f4d6e\n    }\n\n    \n\n    instance(x: -59, y: 47) second_smallest_f2c0b5 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a sorted array.\") second_smallest {\n        in(x: 0, y: -121, name: \"list\") property(List) list_6c5e1b\n\n        out(x: 111, y: -105, name: \"output\") property(Number) output_9f2a3d\n\n        instance(x: -1067, y: -75, name: \"second_smallest\") find_second_smallest {}\n        instance(x: -1048, y: -23, name: \"smallest\") smallest {} \n        instance(x: 0, y: 0) for_1f2c6d root.Std_k98ojb.Std.For {}\n        list_6c5e1b -> for_1f2c6d.items\n        func() {\n            in(x: -114, y: -43, name: \"current\") property(Number) current_9a0f4f\n\n            out(x: 112, y: -50, name: \"\") property(Number) _e7d9b5\n\n            instance(x: 105, y: -22) ifexpression_a2c6eb root.Std_k98ojb.Std.IfExpression {}\n            current_9a0f4f -> ifexpression_a2c6eb.gen_0\n            smallest.smallest -> ifexpression_a2c6eb.then\n            list_6c5e1b[0] -> ifexpression_a2c6eb.gen_1\n            _e7d9b5 -> ifexpression_a2c6eb.else\n        } -> for_1f2c6d.handler\n        for_1f2c6d.output_list -> output_9f2a3d\n    }\n\n    \n\n    instance(x: 106, y: -68) second_smallest_f0e5b8 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a given list.\") second_smallest {\n        in(x: -1145, y: 2, name: \"list\") property(List) list_0f4d3e\n\n        out(x: 109, y: 44, name: \"output\") property(Number) output_9d7a6b\n\n        instance(x: -1021, y: 24, name: \"first_smallest\") filter_6c2c8 root.Std_k98ojb.Query.Filter {\n            where: \"it < min\"\n        }\n        instance(x: -1085, y: -104, name: \"second_smallest_node\") filter_4e1f3d root.Std_k98ojb.Query.Filter {\n            where: \"it > first_smallest.result and it < min\"\n        }\n        list_0f4d3e -> filter_6c2c8.list\n        func() {\n            in(x: -1089, y: 22, name: \"elem\") property(Number) elem_a7a1b4\n\n            out(x: 109, y: 44, name: \"bool\") property(Bool) bool_b0f6e2\n\n            instance(x: 91, y: 19) modulo_48a5d root.Std_k98ojb.Math.Modulo {}\n            instance(x: -1039, y: -104, name: \"notequal_d1a7c3\") Logic.NotEqual {}\n            elem_a7a1b4 -> modulo_48a5d.value\n            2 -> modulo_48a5d.divisor\n            modulo_48a5d.result -> notequal_d1a7c3.left\n            0 -> notequal_d1a7c3.right\n            notequal_d1a7c3.result -> bool_b0f6e2\n        } -> filter_4e1f3d.predicate\n        func() {\n            in(x: -1089, y: 22, name: \"elem\") property(Number) elem_a7a1b4\n\n            out(x: 109, y: 44, name: \"\") property(Number) _0c2df6\n\n            instance(x: 91, y: 19) modulo_48a5d root.Std_k98ojb.Math.Modulo {}\n            instance(x: -1049, y: 23) equal_b8fdd1 root.Std_k98ojb.Logic.Equal {}\n            elem_a7a1b4 -> modulo_48a5d.value\n            2 -> modulo_48a5d.divisor\n            modulo_48a5d.result -> equal_b8fdd1.left\n            0 -> equal_b8fdd1.right\n            equal_b8fdd1.result -> bool_b0f6e2\n        } -> filter_6c2c8.predicate\n        list_0f4d3e -> filter_4e1f3d.items\n        filter_4e1f3d.item -> second_smallest_node.item\n        first_smallest.result -> output_9d7a6b\n        second_smallest_node.item -> _0c2df6\n    }\n\n    \n\n    instance(x: -67, y: 54) second_smallest_5c5f8e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a sorted array.\") second_smallest {\n        in(x: 4, y: -19, name: \"list\") property(List) list_5a2f44\n\n        out(x: 1231, y: -11, name: \"second\") property(Number) output_8d7b3c\n\n        instance(x: 0, y: 0) firstitem_1e9b6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 0, y: 0) seconditem_a5fdd4 root.Std_k98ojb.List.SecondItem {}\n        data_instance(x: -103, y: -26) data_e1c3d2  = [first, second]\n        instance(x: 0, y: -25) length_8e7aeb root.Std_k98ojb.List.Length {}\n        list_5a2f44 -> length_8e7aeb.list\n        firstitem_1e9b6.item -> data_e1c3d2.first\n        seconditem_a5fdd4.item -> data_e1c3d2.second\n        length_8e7aeb.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> seconditem_a5fdd4.index\n    }\n\n    \n\n    instance(x: -59, y: 47) second_smallest_9c0f8d root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a given list.\") second_smallest {\n        in(x: -109, y: -83, name: \"list\") property(List) list_6a9d5f\n\n        out(x: -104, y: -73, name: \"output\") property(Number) output_b0bdf8\n\n        instance(x: 94, y: -107) min_d3c7e1 root.Std_k98ojb.List.Min {}\n        instance(x: -45, y: -75, name: \"second_min\") Std_k98ojb.List.Min {}\n        data_instance(x: -754, y: -586) data_5d6a2f  = [first, second]\n        instance(x: -432, y: -620) for_e0e1c8 root.Std_k98ojb.Std.For {}\n        list_6a9d5f -> for_e0e1c8.items\n        min_d3c7e1.items -> data_5d6a2f.first\n        for_e0e1c8.done -> second_min.execute\n        instance(x: 342, y: -105) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_6a9d5f -> sub_f133b2.first\n        first -> sub_f133b2.second\n        data_5d6a2f.second -> second_min.min\n        for_e0e1c8.index -> sub_f133b2.result\n    }\n\n    \n\n    instance(x: -69, y: 43) second_smallest_b7e2a4 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -109, y: 0, name: \"list\") property(List) list_5d4e2f\n\n        out(x: 111, y: 1, name: \"output\") property(Number) output_c7b8c9\n\n        instance(x: -114, y: 26, name: \"second_min\") Std_k98ojb.List.Min {}\n        instance(x: -105, y: 77, name: \"first_min\") Std_k98ojb.List.Min {}\n\n        list_5d4e2f -> second_min.items\n        first_min.items -> output_c7b8c9\n    }\n\n    \n\n    instance(x: 0, y: 69) second_smallest_d3c7a1 root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_RAG_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 15933,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds if two lists have at least one common element.\") has_common {\n        in(x: -499, y: 4, name: \"list1\") property(List) list_3a5d14\n        in(x: -509, y: -24, name: \"list2\") property(List) list_c0e6b8\n\n        out(x: 1239, y: -27, name: \"output\") property(Bool) output_4f1c45\n\n        instance(x: 76, y: 23, name: \"intersection\") Sets_Difference root.Std_k98ojb.Sets.Difference {}\n        list_c0e6b8 -> intersection.left\n        list_3a5d14 -> intersection.right\n        Sets_Difference.difference -> output_4f1c45\n    }\n\n    \n\n    instance(x: -47, y: 55) has_common_b7e2df root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists contain at least one common element.\") has_common {\n        in(x: -528, y: 4, name: \"list1\") property(List) list_2d3f5\n        in(x: -523, y: 21, name: \"list2\") property(List) list_7c0e42\n\n        out(x: 1248, y: 17, name: \"output\") property(Bool) output_a2b4a6\n\n        instance(x: 104, y: 18) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_2d3f5 -> contains_32727d.list\n        list_7c0e42 -> contains_32727d.item\n        contains_32727d.is_contained -> output_a2b4a6\n    }\n\n    \n\n    instance(x: -29, y: 55) has_common_f8f3e5 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -527, y: 23, name: \"list1\") property(List) list_8b3d9e\n        in(x: -528, y: -120, name: \"list2\") property(List) list_ba0c7f\n\n        out(x: 1044, y: -113, name: \"output\") property(Bool) output_c6a8df\n\n        instance(x: 93, y: -115) intersection_5eb3b1 root.Std_k98ojb.Sets.Intersection {}\n        list_ba0c7f -> intersection_5eb3b1.left\n        list_8b3d9e -> intersection_5eb3b1.right\n        intersection_5eb3b1.intersect -> output_c6a8df\n    }\n\n    \n\n    instance(x: -33, y: 47) has_common_element_e2f7c0 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -475, y: 23, name: \"list1\") property(List) list_5f2d9b\n        in(x: -469, y: 11, name: \"list2\") property(List) list_3a7c71\n\n        out(x: 1008, y: -47, name: \"output\") property(Bool) output_e1a4e6\n\n        instance(x: 91, y: 49) intersection_b4f5b9 root.Std_k98ojb.Sets.Intersection {}\n        list_3a7c71 -> intersection_b4f5b9.left\n        list_5f2d9b -> intersection_b4f5b9.right\n        intersection_b4f5b9.intersection -> output_e1a4e6\n    }\n\n    \n\n    instance(x: 10, y: -178) has_common_element_8a0c5 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists share at least one common element.\") has_common {\n        in(x: -493, y: 16, name: \"list1\") property(List) list_8d4a2e\n        in(x: -494, y: 24, name: \"list2\") property(List) list_c6c9f7\n\n        out(x: 1233, y: -25, name: \"output\") property(Bool) output_d1b5db\n\n        instance(x: 1034, y: -33) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_8d4a2e -> contains_32727d.list\n        list_c6c9f7 -> contains_32727d.item\n        contains_32727d.is_contained -> output_d1b5db\n    }\n\n    \n\n    instance(x: -28, y: 47) has_common_0e4a8 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -493, y: 3, name: \"list1\") property(List) list_5e0a4d\n        in(x: -499, y: -222, name: \"list2\") property(List) list_d9f8b6\n\n        out(x: 1217, y: 14, name: \"output\") property(Bool) output_b1c4eb\n\n        instance(x: 104, y: -225) intersection_5d3e42 root.Std_k98ojb.Sets.Intersection {}\n        list_5e0a4d -> intersection_5d3e42.left\n        list_d9f8b6 -> intersection_5d3e42.right\n        intersection_5d3e42.intersection -> output_b1c4eb\n    }\n\n    \n\n    instance(x: -28, y: 53) has_common_f7a0f2 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if two lists have at least one common element.\") has_common {\n        in(x: -499, y: 19, name: \"list1\") property(List) list_9a4e3f\n        in(x: -493, y: -113, name: \"list2\") property(List) list_a0c6b9\n\n        out(x: 1037, y: 10, name: \"output\") property(Bool) output_d1d5f8\n\n        instance(x: -19, y: 11) filter_e3e3a4 root.Std_k98ojb.Iteration.Filter {}\n        list_9a4e3f -> filter_e3e3a4.items\n        list_a0c6b9 -> filter_e3e3a4.items\n        func() {\n            in(x: -191, y: 5, name: \"current\") property(Number) current_d1d7eb\n\n            out(x: 1028, y: 10, name: \"bool\") property(Bool) bool_6f9b21\n\n            instance(x: 74, y: 14) contains_a7c2a0 root.Std_k98ojb.List.Contains {}\n            current_d1d7eb -> contains_a7c2a0.item\n            list_9a4e3f -> contains_a7c2a0.list\n            list_a0c6b9 -> contains_a7c2a0.list\n            contains_a7c2a0.is_contained -> bool_6f9b21\n        } -> filter_e3e3a4.handler\n        func() {\n            in(x: -191, y: 5, name: \"current\") property(Number) current_d1d7eb\n\n            out(x: 1028, y: 10, name: \"bool\") property(Bool) bool_6f9b21\n\n            instance(x: 74, y: 14) not_a3e0c4 root.Std_k98ojb.Logic.Not {}\n            current_d1d7eb -> not_a3e0c4.input\n            false -> not_a3e0c4.result\n            not_a3e0c4.result -> bool_6f9b21\n        } -> ``filter_e3e3a4``.predicate\n    }\n\n    \n\n    instance(x: -28, y: 44) has_common_f1cd7 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -509, y: 2, name: \"list1\") property(List) list_9f0d8b\n        in(x: -516, y: 7, name: \"list2\") property(List) list_a5aebc\n\n        out(x: 1234, y: 10, name: \"output\") property(Bool) output_eb1e38\n\n        instance(x: -19, y: 11) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_9f0d8b -> contains_32727d.list\n        list_a5aebc -> contains_32727d.item\n        contains_32727d.is_contained -> output_eb1e38\n    }\n\n    \n\n    instance(x: -93, y: 45) has_common_element_b3fdd6 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common {\n        in(x: -484, y: 18, name: \"list1\") property(List) list_3e2d4b\n        in(x: -478, y: -121, name: \"list2\") property(List) list_a8fdd9\n\n        out(x: 1027, y: 5, name: \"output\") property(Bool) output_b6c5a1\n\n        instance(x: 94, y: -108) contains_3b4d14 root.Std_k98ojb.List.Contains {}\n        list_a8fdd9 -> contains_3b4d14.item\n        list_3e2d4b -> contains_3b4d14.list\n        contains_3b4d14.is_contained -> output_b6c5a1\n    }\n\n    \n\n    instance(x: -293, y: 43) has_common_d2f0a9 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -471, y: 18, name: \"list1\") property(List) list_0e8f9b\n        in(x: -476, y: 27, name: \"list2\") property(List) list_a5d3c6\n\n        out(x: 1027, y: 13, name: \"output\") property(Bool) output_e5a2d4\n\n        instance(x: 91, y: -23) intersection_1f8e9b root.Std_k98ojb.Sets.Intersection {}\n        list_a5d3c6 -> intersection_1f8e9b.left\n        list_0e8f9b -> intersection_1f8e9b.right\n        intersection_1f8e9b.result -> output_e5a2d4\n    }\n\n    \n\n    instance(x: -44, y: 49) has_common_element_7c8f6 root.main.has_common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -275, y: 3, name: \"list\") property(List) list_5d1a2e\n\n        out(x: 1239, y: -15, name: \"output\") property(Bool) output_a4b6c7\n\n        instance(x: -91, y: 20) has_consecutive_numbers_8f0d3 root.Std_k98ojb.List.HasConsecutiveNumbers {}\n        list_5d1a2e -> has_consecutive_numbers_8f0d3.list\n        has_consecutive_numbers_8f0d3.result -> output_a4b6c7\n    }\n\n    \n\n    instance(x: -69, y: 53) has_consecutive_numbers_dff9d root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") has_consecutive_nums {\n        in(x: -269, y: 4, name: \"numbers\") property(List) numbers_8e2a6f\n\n        out(x: 1041, y: 7, name: \"output\") property(Bool) output_b3d0c9\n\n        instance(x: 109, y: 15) filter_c8bdf7 root.Std_k98ojb.Query.Filter {}\n        instance(x: -28, y: 34) count_4e2f5a root.Std_k98ojb.Std.Count {}\n        instance(x: 193, y: 21) for_6d1c9f root.Std_k98ojb.Std.For {}\n        function_8b0f45 root.Std_k98ojb.Std.Function {}\n        instance(x: -29, y: 42) less_than_cb3a4e root.Std_k98ojb.Logic.LessThan {}\n        numbers_8e2a6f -> filter_c8bdf7.list\n        function_8b0f45.handler -> for_6d1c9f.execute\n        count_4e2f5a.reset -> less_than_cb3a4e.trigger\n        less_than_cb3a4e.right -> count_4e2f5a.count\n        function_8b0f45.input -> less_than_cb3a4e.left\n        for_6d1c9f.item -> function_8b0f45.input\n        for_6d1c9f.index -> function_8b0f45.output\n        count_4e2f5a.value -> output_b3d0c9\n    }\n\n    \n\n    instance(x: 44, y: -17) has_consecutive_nums_f9e4b7 root.main.has_consecutive_nums {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -245, y: 4, name: \"list\") property(List) list_6a1f8e\n\n        out(x: 1093, y: 7, name: \"output\") property(Bool) output_d2d9c5\n\n        instance(x: 92, y: -104) filter_f3b46d root.Std_k98ojb.Query.Filter {}\n        list_6a1f8e -> filter_f3b46d.list\n        filter_f3b46d.result -> output_d2d9c5\n        instance(x: 0, y: 0) for_d26972 root.Std_k98ojb.Std.For {}\n        for_d26972.index -> filter_f3b46d.new_index\n        for_d26972.item -> is_consecutive_8f1a6e\n    }\n\n    \n\n    instance(x: -83, y: 44) is_consecutive_8f1a6e root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -246, y: 5, name: \"list\") property(List) list_9d3f8e\n\n        out(x: 1020, y: -4, name: \"output\") property(Bool) output_b6b2c9\n\n        instance(x: -91, y: -23) for_d7a1e5 root.Std_k98ojb.Std.For {}\n        list_9d3f8e -> for_d7a1e5.items\n        instance(x: 201, y: -21) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 201, y: -13) lessThanOrEqual_c2d4c9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        for_d7a1e5.index -> greaterthan_cb50ae.left\n        for_d7a1e5.index + 1 -> greaterthan_cb50ae.right\n        for_d7a1e5.item -> lessThanOrEqual_c2d4c9.left\n        list_9d3f8e[0] -> lessThanOrEqual_c2d4c9.right\n        greaterthan_cb50ae.result -> output_b6b2c9\n        for_d7a1e5.done -> output_b6b2c9\n    }\n\n    \n\n    instance(x: -64, y: 15) is_consecutive_8fdd55 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -294, y: 155, name: \"list\") property(List) list_d5e4f9\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 82, y: 156) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -27, y: 67) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 199, y: 62) less_than_d9d8c1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_d5e4f9 -> length_6e87f2.list\n        greaterthan_cb50ae.result -> output_b1d7f8\n        less_than_d9d8c1.result -> output_b1d7f8\n        for_8cb3f6.done -> output_b1d7f8\n    }\n\n    \n\n    instance(x: -55, y: 529) is_consecutive_f0be66 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -305, y: 2, name: \"list\") property(List) list_8d1e3f\n\n        out(x: 1249, y: 10, name: \"output\") property(Bool) output_e5c6b0\n\n        instance(x: 74, y: -21) filter_4d4556 root.Std_k98ojb.Query.Filter {}\n        list_8d1e3f -> filter_4d4556.list\n        func() {\n            in(x: -193, y: 46, name: \"current\") property(Number) current_9c0a5d\n\n            out(x: 1019, y: 47, name: \"\") property(Bool) _7bdf3e\n\n            instance(x: 112, y: 35) sub_852f2e root.Std_k98ojb.Math.Sub {}\n            instance(x: 415, y: -155) greaterthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_9c0a5d -> sub_852f2e.first\n            current_9c0a5d -> sub_852f2e.second\n            1 -> greaterthanorequal_f11fda.right\n            greaterthanorequal_f11fda.result -> _7bdf3e\n        } -> filter_4d4556.handler\n        func() {\n            in(x: -193, y: 46, name: \"current\") property(Number) current_9c0a5d\n\n            out(x: 1019, y: 47, name: \"\") property(Bool) _7bdf3e\n\n            instance(x: 112, y: 35) sub_852f2e root.Std_k98ojb.Math.Sub {}\n            instance(x: 421, y: -155) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_9c0a5d -> sub_852f2e.first\n            current_9c0a5d -> sub_852f2e.second\n            notequal_148aeb.result -> _7bdf3e\n        } -> filter_4d4556.handler\n        list_8d1e3f -> filter_4d4556.items\n        func() {\n            in(x: -193, y: 46, name: \"current\") property(Number) current_9c0a5d\n\n            out(x: 1019, y: 47, name: \"\") property(Bool) _7bdf3e\n\n            instance(x: 112, y: 35) sub_852f2e root.Std_k98ojb.Math.Sub {}\n            instance(x: 421, y: -155) greaterthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_9c0a5d -> sub_852f2e.first\n            current_9c0a5d -> sub_852f2e.second\n            1 -> greaterthanorequal_f11fda.right\n            greaterthanorequal_f11fda.result -> _7bdf3e\n        } -> filter_4d4556.handler\n        filter_4d4556.output_list -> output_e5c6b0\n    }\n\n    \n\n    instance(x: -86, y: 23) is_consecutive_a8a3c9 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") contains_consecutive {\n        in(x: -294, y: 1, name: \"list\") property(List) list_9d5a3e\n\n        out(x: 1210, y: -13, name: \"output\") property(Bool) output_e4c2eb\n        out(x: 1156, y: 104, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: -69, y: 105) for_f0d5e9 root.Std_k98ojb.Std.For {}\n        list_9d5a3e -> for_f0d5e9.items\n        for_f0d5e9.index -> contains_consecutive.gen_1\n        contains_consecutive.gen_0 -> for_f0d5e9.item\n        instance(x: 102, y: -14) sub_8f6b4a root.Std_k98ojb.Math.Sub {}\n        instance(x: 1157, y: 100) isless_9a3df1 root.Std_k98ojb.Logic.IsLessThanOrEqual {}\n        instance(x: 103, y: 107) and_80a119 root.Std_k98ojb.Logic.And {}\n        for_f0d5e9.onItem -> and_80a119.execute\n        list_9d5a3e -> contains_consecutive.gen_2\n        isless_9a3df1.left -> sub_8f6b4a.first\n        1 -> sub_8f6b4a.second\n        for_f0d5e9.item -> sub_8f6b4a.new_value\n        sub_8f6b4a.result -> isless_9a3df1.left\n        contains_consecutive.gen_2 -> isless_9a3df1.right\n        and_80a119.result -> output_e4c2eb\n        for_f0d5e9.done -> continue_8ba06b\n        continue_8ba06b -> for_f0d5e9.reset\n    }\n\n    \n\n    instance(x: -88, y: 121) contains_consecutive_7a1d3f root.main.contains_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") conseq_nums {\n        in(x: -269, y: 4, name: \"list\") property(List) list_0f8d5a\n\n        out(x: 1016, y: -7, name: \"output\") property(Bool) output_c3b2e9\n\n        instance(x: -69, y: 10) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 199, y: 55) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 201, y: 63) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -48, y: 47) greaterthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1060, y: -19) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 199, y: 63) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1042, y: -21) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 55) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"n == n + 1\"\n        }\n        instance(x: 1023, y: -15) if_e19a62 root.Std_k98ojb.Std.If {}\n        sub_852f2e.result -> greaterthanorequal_f11fda.left\n        list_0f8d5a -> firstitem_870503.item\n        greaterthanorequal_f11fda.right -> for_8cb3f6.index\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> and_80a119\n        expression_b720d7.result -> if_e19a62.predicate\n        greaterthanorequal_f11fda.result -> output_c3b2e9\n    }\n\n    \n\n    instance(x: 48, y: 12) conseq_nums_d0c4df root.main.conseq_nums {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") conseq_nums {\n        in(x: -275, y: 4, name: \"list\") property(List) list_3f8e34\n\n        out(x: 1211, y: -7, name: \"output\") property(Bool) output_5c9d45\n\n        instance(x: 0, y: 11) filter_c91965 root.Std_k98ojb.Query.Filter {}\n        instance(x: 123, y: 24) count_ba2df3 root.Std_k98ojb.Std.Count {}\n        instance(x: 189, y: -14) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 104, y: 27) onitem_e0c5e7 root.Std_k98ojb.Std.OnItem {}\n        instance(x: 142, y: 35) sub_d2d8a1 root.Std_k98ojb.Math.Sub {}\n        instance(x: 193, y: -11) greaterthan_f9f6f2 root.Std_k98ojb.Math.GreaterThan {}\n        list_3f8e34 -> filter_c91965.list\n        filter_c91965.result -> count_ba2df3.list\n        for_8cb3f6.item -> sub_d2d8a1.first\n        1 -> sub_d2d8a1.second\n        sub_d2d8a1.result -> greaterthan_f9f6f2.left\n        count_ba2df3.count -> greaterthan_f9f6f2.right\n        for_8cb3f6.index -> greaterthan_f9f6f2.value\n        greaterthan_f9f6f2.result -> onitem_e0c5e7.input\n        filter_c91965.item -> sub_d2d8a1.new_value\n        1 -> sub_d2d8a1.second\n        onitem_e0c5e7.output -> output_5c9d45\n    }\n\n    \n\n    instance(x: -83, y: 21) conseq_nums_f4fdd6 root.main.conseq_nums {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -278, y: 0, name: \"list\") property(List) list_1f4a8e\n\n        out(x: 1055, y: -3, name: \"output\") property(Bool) output_e2d9c7\n\n        instance(x: -82, y: 15) for_c8c0b6 root.Std_k98ojb.Std.For {}\n        list_1f4a8e -> for_c8c0b6.items\n        instance(x: -19, y: -21) next_d3f2d9 root.Std_k98ojb.Std.For {}\n        for_c8c0b6.index -> next_d3f2d9.first\n        1 -> next_d3f2d9.next\n        next_d3f2d9.item -> is_consecutive.predicate\n        for_c8c0b6.item -> is_consecutive.execute\n    }\n\n    \n\n    instance(x: -55, y: 43) is_consecutive_5e7a83 root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -173, y: 156, name: \"main_list\") property(List) main_list_1a4e2f\n        in(x: -193, y: 21, name: \"sub_list\") property(List) sub_list_e0c5b8\n\n        out(x: 546, y: 69, name: \"output\") property(Bool) output_6d7c42\n\n        instance(x: 94, y: -105) is_slice_9e2f1a root.Std_k98ojb.Iteration.IsSlice {}\n        main_list_1a4e2f -> is_slice_9e2f1a.left\n        sub_list_e0c5b8 -> is_slice_9e2f1a.right\n        is_slice_9e2f1a.is_slice -> output_6d7c42\n    }\n\n    \n\n    instance(x: 48, y: -37) is_sublist_d4a5c1 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -245, y: 166, name: \"main_list\") property(List) main_list_9a8d3e\n        in(x: -269, y: -20, name: \"sub_list\") property(List) sub_list_7f1b45\n\n        out(x: 540, y: 59, name: \"result\") property(Bool) result_4df6c5\n\n        instance(x: 93, y: -26) length_9d0e38 root.Std_k98ojb.List.Length {}\n        main_list_9a8d3e -> length_9d0e38.list\n        sub_list_7f1b45 -> length_9d0e38.list\n        length_9d0e38.length -> result_4df6c5\n        0 -> result_4df6c5\n        main_list_9a8d3e -> length_9d0e38.list\n        sub_list_7f1b45 -> length_9d0e38.list\n    }\n\n    \n\n    instance(x: -64, y: -23) is_sublist_d2e4f6 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -245, y: 165, name: \"main_list\") property(List) list_0e1d6b\n        in(x: -255, y: -13, name: \"sub_list\") property(List) sub_list_3a4f7c\n\n        out(x: 1012, y: 63, name: \"output\") property(Bool) output_b9f8f3\n\n        instance(x: 106, y: -19) contains_e1e5d6 root.Std_k98ojb.List.Contains {}\n        list_0e1d6b -> contains_e1e5d6.list\n        sub_list_3a4f7c -> contains_e1e5d6.item\n        contains_e1e5d6.is_contained -> output_b9f8f3\n    }\n\n    \n\n    instance(x: -92, y: 11) is_sublist_0b8fdd root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether a list is a sublist of another list.\") is_sublist {\n        in(x: -294, y: 157, name: \"main_list\") property(List) main_list_5a4e3f\n        in(x: -129, y: 161, name: \"sublist\") property(List) sublist_8c9d23\n\n        out(x: 444, y: 67, name: \"output\") property(Bool) output_c7bfcf\n\n        instance(x: -82, y: 164) contains_d2a1af root.Std_k98ojb.List.Contains {}\n        main_list_5a4e3f -> contains_d2a1af.list\n        sublist_8c9d23 -> contains_d2a1af.item\n        contains_d2a1af.is_contained -> output_c7bfcf\n    }\n\n    \n\n    instance(x: -129, y: 161, name: \"sublist_node\") is_sublist_3e4d5b root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -173, y: 146, name: \"main_list\") property(List) main_list_1d0e8b\n        in(x: -193, y: -26, name: \"sub_list\") property(List) sub_list_a2c4a5\n\n        out(x: 555, y: 64, name: \"output\") property(Bool) output_e9f7ec\n\n        instance(x: -83, y: 145) contains_6e87f root.Std_k98ojb.List.Contains {}\n        sub_list_a2c4a5 -> contains_6e87f.item\n        main_list_1d0e8b -> contains_6e87f.list\n        contains_6e87f.is_contained -> output_e9f7ec\n    }\n\n    \n\n    instance(x: 48, y: -67) is_sublist_d4c3a5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -294, y: 155, name: \"main_list\") property(List) list_5f2d9e\n        in(x: -173, y: -26, name: \"sublist\") property(List) list_d1a0b4\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: -82, y: 155) filter_3e5c2b root.Std_k98ojb.Query.Filter {}\n        instance(x: 201, y: 62) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 246, y: 209) contains_f1c8d4 root.Std_k98ojb.List.Contains {}\n        list_d1a0b4 -> filter_3e5c2b.items\n        list_d1a0b4 -> length_6e87f2.list\n        filter_3e5c2b.result -> contains_f1c8d4.item\n        length_6e87f2.length -> contains_f1c8d4.is_contained\n        output_b1d7f8 -> contains_f1c8d4.result\n    }\n\n    \n\n    instance(x: 48, y: 11) is_sublist_c9f5a0 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -294, y: 154, name: \"main_list\") property(List) main_list_4d2a9b\n        in(x: -142, y: -25, name: \"sub_list\") property(List) sub_list_a6e2c7\n\n        out(x: 547, y: 67, name: \"output\") property(Bool) output_b1f0cd\n\n        instance(x: -82, y: 155) for_c8d3b5 root.Std_k98ojb.Std.For {}\n        main_list_4d2a9b -> for_c8d3b5.items\n        sub_list_a6e2c7 -> for_c8d3b5.items\n        func() {\n            in(x: -231, y: 79, name: \"current\") property(Number) current_1f0a4f\n\n            out(x: 245, y: 49, name: \"\") property(Bool) _e6c7c2\n\n            instance(x: 94, y: -22) eq_c2d7b5 root.Std_k98ojb.Logic.Equal {}\n            current_1f0a4f -> eq_c2d7b5.left\n            sub_list_a6e2c7[0] -> eq_c2d7b5.right\n            eq_c2d7b5.result -> _e6c7c2\n        } -> for_c8d3b5.handler\n        for_c8d3b5.done -> output_b1f0cd\n    }\n\n    \n\n    instance(x: 48, y: -67) is_sublist_9df4a3 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -173, y: 155, name: \"main_list\") property(List) main_list_0f1b3a\n        in(x: -294, y: -215, name: \"sublist\") property(List) sublist_6b8d4e\n\n        out(x: 443, y: 63, name: \"output\") property(Bool) output_e7d9db\n\n        instance(x: -82, y: -20) contains_32727 root.Std_k98ojb.List.Contains {}\n        sublist_6b8d4e -> contains_32727.item\n        main_list_0f1b3a -> contains_32727.list\n        contains_32727.is_contained -> output_e7d9db\n    }\n\n    \n\n    instance(x: 48, y: -67) is_sublist_c6c8f2 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether a list is a sublist of another list.\") is_sublist {\n        in(x: -245, y: 157, name: \"main_list\") property(List) main_list_b2d4f5\n        in(x: -294, y: 165, name: \"sub_list\") property(List) sub_list_1c8e7b\n\n        out(x: 544, y: 63, name: \"output\") property(Bool) output_9a6f45\n\n        instance(x: 426, y: -297) filter_4e5f3d root.Std_k98ojb.Query.Filter {}\n        instance(x: -43, y: 172) length_7c2e42 root.Std_k98ojb.List.Length {}\n        list_9a6f45 -> filter_4e5f3d.items\n        instance(x: -44, y: 175) contains_8b1f0d root.Std_k98ojb.List.Contains {}\n        sub_list_1c8e7b -> contains_8b1f0d.list\n        filter_4e5f3d.result -> length_7c2e42.length\n        instance(x: 432, y: -302) equal_ea6df9 root.Std_k98ojb.Logic.Equal {}\n        sub_list_1c8e7b -> equal_ea6df9.left\n        main_list_b2d4f5 -> equal_ea6df9.right\n        length_7c2e42.length -> contains_8b1f0d.item\n        0 -> contains_8b1f0d.index\n        contains_8b1f0d.result -> output_9a6f45\n    }\n\n    \n\n    instance(x: -67, y: -37) is_sublist_f4c2b5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether a list is a sublist of another list.\") is_sublist {\n        in(x: -292, y: 143, name: \"main_list\") property(List) main_list_6d5e2\n        in(x: -305, y: -20, name: \"sub_list\") property(List) sub_list_a0c7f4\n\n        out(x: 1038, y: -23, name: \"output\") property(Bool) output_e5b9cd\n\n        instance(x: 102, y: -21) for_3e1f2 root.Std_k98ojb.Std.For {}\n        main_list_6d5e2 -> for_3e1f2.items\n        sub_list_a0c7f4 -> for_3e1f2.items\n        func() {\n            in(x: -193, y: 74, name: \"i\") property(Number) i_8a4b9\n\n            out(x: 1015, y: -25, name: \"\") property(Bool) is_match_6d0c23\n\n            instance(x: -19, y: -20) length_a2fdd1 root.Std_k98ojb.List.Length {}\n            main_list_6d5e2 -> length_a2fdd1.list\n            for_3e1f2.index -> length_a2fdd1.length\n            0 -> length_a2fdd1.index\n            length_a2fdd1.length -> is_match_6d0c23\n        } -> for_3e1f2.handler\n        func() {\n            in(x: -193, y: 74, name: \"i\") property(Number) i_8a4b9\n\n            out(x: 1015, y: -25, name: \"\") property(Bool) is_match_6d0c23\n\n            instance(x: -19, y: -20) length_a2fdd1 root.Std_k98ojb.List.Length {}\n            sub_list_a0c7f4 -> length_a2fdd1.list\n            for_3e1f2.index -> length_a2fdd1.length\n            0 -> length_a2fdd1.index\n            length_a2fdd1.length -> is_match_6d0c23\n        } -> ``sub_list``.handler\n        ifexpression_8a7b9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"i < for_3e1f2.index\"\n        }\n        is_match_6d0c23.result -> output_e5b9cd\n        length_a2fdd1.length == 0 -> output_e5b9cd\n    }\n\n    \n\n    instance(x: -292, y: 143) is_sublist_7e3a43 root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -446, y: 0, name: \"list\") property(List) list_4a5f3d\n        out(x: -1, y: -1, name: \"continue\") trigger() continue_e7b6c2\n\n        instance(x: 0, y: 0) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 47, y: 4) ifexpression_9f5e38 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 > current\"\n        }\n        getter(x: -13, y: 2, name: \"getter_e7a9c8\") getter_e7a9c8 = previous\n        setter(x: 46, y: 4) setter_e7a9c8 = previous\n        instance(x: 51, y: 0) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        for_d26972.item -> ifexpression_9f5e38.gen_1\n        -1 -> getter_e7a9c8.new_value\n        find_smallest_missing.execute -> setter_e7a9c8.execute\n        list_4a5f3d -> for_d26972.items\n        for_d26972.index -> ifexpression_9f5e38.gen_0\n        getat_ce2a48.itemAtIndex -> setter_e7a9c8.new_value\n        continue_e7b6c2 -> for_d26972.reset\n        for_d26972.onItem -> ifexpression_9f5e38.execute\n        ifexpression_9f5e38.then -> setter_e7a9c8.execute\n        list_4a5f3d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_e7a9c8.new_value\n    }\n\n    \n\n    instance(x: -85, y: 170) find_smallest_missing_6e5f3 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -446, y: -234, name: \"list\") property(List) list_3f9e2d\n\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ba7c6b\n        instance(x: 14, y: 0) count_node root.Std_k98ojb.Std.Count {}\n        for_d26972 -> list_3f9e2d.items\n        list_3f9e2d -> for_d26972.items\n        for_d26972.index -> count_node.reset\n        for_d26972.item -> count_node.count\n        1 -> count_node.new_value\n        for_d26972.onItem -> count_node.execute\n        count_node.done -> output_ba7c6b\n    }\n\n    \n\n    instance(x: -234, y: -52) find_missing_5e8d4f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -444, y: 4, name: \"execute\") trigger() execute_0e1d2f\n        in(x: -456, y: 26, name: \"list\") property(List) list_5a6b3c\n\n        out(x: 1209, y: 4, name: \"continue\") trigger() continue_b8d7df\n        out(x: 1210, y: 151, name: \"output\") property(Number) output_c1e3f9\n\n        instance(x: 74, y: -123) for_d2a4b6 root.Std_k98ojb.Std.For {}\n        instance(x: 341, y: 11) ifexpression_7d5c8b root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -23, y: 164, name: \"getter_d9f4e3\") getter_d9f4e3 = previous\n        setter(x: 699, y: -316, name: \"setter_8d2b21\") setter_8d2b21 = previous\n        instance(x: 317, y: -28) getat_c2d7c6 root.Std_k98ojb.List.GetAt {}\n        ifexpression_7d5c8b.else -> continue_b8d7df\n        ifexpression_7d5c8b.value -> output_c1e3f9\n        ifexpression_7d5c8b.then -> setter_8d2b21.execute\n        list_5a6b3c -> for_d2a4b6.items\n        for_d2a4b6.item -> ifexpression_7d5c8b.gen_1\n        for_d2a4b6.index -> ifexpression_7d5c8b.gen_0\n        getter_d9f4e3.value -> ifexpression_7d5c8b.gen_2\n        for_d2a4b6.onItem -> ifexpression_7d5c8b.execute\n        for_d2a4b6.done -> continue_b8d7df\n        for_d2a4b6.item -> setter_8d2b21.new_value\n        list_5a6b3c -> getat_c2d7c6.list\n        0 -> getat_c2d7c6.index\n        getat_c2d7c6.itemAtIndex -> setter_8d2b21.new_value\n        execute_0e1d2f -> setter_8d2b21.execute\n        setter_8d2b21.continue -> for_d2a4b6.reset\n        setter_8d2b21.item -> output_c1e3f9\n    }\n\n    \n\n    instance(x: 12, y: -193) find_missing_4c8695 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -245, y: 2, name: \"list\") property(List) list_4d3b5f\n\n        out(x: 0, y: -243, name: \"continue\") trigger() continue_7a6e8c\n        out(x: 0, y: -242, name: \"output\") property(Number) output_a9cd65\n\n        instance(x: 10, y: -246) for_d2f3d1 root.Std_k98ojb.Std.For {}\n        getter(x: -0, y: -121, name: \"getter_5c4a3e\") getter_5c4a3e = index\n        setter(x: -0, y: 23, name: \"setter_2f7d6e\") setter_2f7d6e = index\n        instance(x: 10, y: 18) ifexpression_7a8b1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == list.length - 1\"\n        }\n        getter_5c4a3e.value -> output_a9cd65\n        for_d2f3d1.item -> ifexpression_7a8b1.execute\n        for_d2f3d1.index -> ifexpression_7a8b1.gen_0\n        list_4d3b5f -> for_d2f3d1.items\n        1 -> setter_2f7d6e.new_value\n        find_smallest_missing.execute() -> setter_2f7d6e.execute\n        continue_7a6e8c.continue -> for_d2f3d1.reset\n        ifexpression_7a8b1.then -> output_a9cd65\n    }\n\n    \n\n    instance(x: -0, y: 157) find_smallest_missing_f4f5a6 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -444, y: -227, name: \"execute\") trigger() execute_9a5d2b\n        in(x: 0, y: 0, name: \"list\") property(List) list_e6c4e8\n\n        out(x: 1237, y: 25, name: \"continue\") trigger() continue_3fdd34\n        out(x: -1, y: 145, name: \"output\") property(Number) output_9b0a2d\n\n        instance(x: 76, y: -104) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 321, y: -34) ifexpression_6c15d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == list.length\"\n        }\n        getter(x: 0, y: -121, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 334, y: 60) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_6c15d4.else -> continue_3fdd34\n        ifexpression_6c15d4.value -> output_9b0a2d\n        ifexpression_6c15d4.then -> setter_9d4f1c.execute\n        list_e6c4e8 -> for_d26972.items\n        for_d26972.item -> ifexpression_6c15d4.gen_2\n        for_d26972.index -> ifexpression_6c15d4.gen_0\n        getter_b280eb.value -> ifexpression_6c15d4.gen_1\n        for_d26972.onItem -> ifexpression_6c15d4.execute\n        for_d26972.done -> continue_3fdd34\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_e6c4e8 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_9a5d2b -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -205, y: 165) find_missing_f6a8a5 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -442, y: 2, name: \"list\") property(List) list_0b1d3f\n        out(x: 1217, y: 29, name: \"output\") property(Number) output_f9e9a5\n\n        instance(x: 0, y: 0) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -342, y: -115, name: \"previous\") property(Number) previous_8d6f2c\n        getter(x: 0, y: -120, name: \"getter_7d5e9b\") getter_7d5e9b = index\n        setter(x: -0, y: -121, name: \"setter_4a1c21\") setter_4a1c21 = previous\n        instance(x: 0, y: 0) ifexpression_8743f2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter_7d5e9b.value -> previous_8d6f2c\n        for_d26972.item -> ifexpression_8743f2.execute\n        list_0b1d3f -> for_d26972.items\n        for_d26972.index -> ifexpression_8743f2.gen_0\n        previous_8d6f2c + 1 -> ifexpression_8743f2.gen_1\n        getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_8743f2.then -> setter_4a1c21.execute\n        list_0b1d3f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_4a1c21.new_value\n        execute_90aaec root.Std_k98ojb.Std.If ->\n            ifexpression_8743f2.execute\n            ifexpression_8743f2.value\n            for_d26972.reset\n        output_f9e9a5 -> setter_4a1c21.continue\n    }\n\n    \n\n    instance(x: 0, y: -177) find_smallest_missing_7d6b65 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -442, y: -243, name: \"list\") property(List) list_8f9d2a\n        out(x: 1246, y: 4, name: \"output\") property(Number) output_d0a7b1\n\n        instance(x: 55, y: 0) for_5e7c43 root.Std_k98ojb.Std.For {}\n        instance(x: -215, y: 3) ifexpression_b9f6d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == list.length\"\n        }\n        getter(x: -342, y: 170, name: \"getter_7c8e2a\") getter_7c8e2a = previous\n        setter(x: 0, y: 0, name: \"setter_9f4dfc\") setter_9f4dfc = previous\n        instance(x: -341, y: 60) count_d1d5b3 root.Std_k98ojb.Std.Count {}\n        getter(x: -275, y: -20) getat_6e3a8f root.Std_k98ojb.List.GetAt {}\n        ifexpression_b9f6d4.else -> for_5e7c43.reset\n        list_8f9d2a -> for_5e7c43.items\n        for_5e7c43.item -> ifexpression_b9f6d4.gen_1\n        getat_6e3a8f.index -> setter_9f4df1.new_value\n        count_d1d5b3.reset -> setter_9f4df1.execute\n        for_5e7c43.done -> continue_a2f0ca1\n        ifexpression_b9f6d4.value -> output_d0a7b1\n        getter_7c8e2a.value -> for_5e7c43.index\n        setter_9f4df1.continue -> for_5e7c43.reset\n        for_5e7c43.onItem -> ifexpression_b9f6d4.execute\n    }\n\n    \n\n    instance(x: -74, y: 0) find_missing_d35c8a root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -456, y: 0, name: \"list\") property(List) list_9d3e6f\n        out(x: 2, y: 1, name: \"missing\") property(Number) missing_c4c7b5\n\n        instance(x: 0, y: 0) for_6d65a root.Std_k98ojb.Std.For {}\n        getter(x: -246, y: -105, name: \"getter_9f8e95\") getter_9f8e95 = next\n        setter(x: -243, y: 4, name: \"setter_5c1d3a\") setter_5c1d3a = next\n        instance(x: -275, y: -35) ifexpression_bf0d6 root.Std_k98ojb.Std.If {}\n        getter(x: -246, y: -105, name: \"getter_9f8e95\") getter_9f8e95.value -> ifexpression_bf0d6.predicate\n        list_9d3e6f -> for_6d65a.items\n        for_6d65a.item -> ifexpression_bf0d6.gen_2\n        1 -> setter_5c1d3a.new_value\n        for_6d65a.done -> continue_d2c7a4\n        for_6d65a.onItem -> ifexpression_bf0d6.execute\n        ifexpression_bf0d6.then -> setter_9f8e95.execute\n        list_9d3e6f[0] -> setter_5c1d3a.new_value\n        continue_d2c7a4 -> for_6d65a.reset\n        ifexpression_bf0d6.else -> continue_d2c7a4\n    }\n\n    \n\n    instance(x: 0, y: -123) find_missing_e8b5e root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -446, y: 2, name: \"list\") property(List) list_4f9b1d\n\n        out(x: 1217, y: 5, name: \"continue\") trigger() continue_3e8c71\n        out(x: 1220, y: 145, name: \"output\") property(Number) output_d2a6eb\n\n        instance(x: -105, y: -113) for_1c7b4d root.Std_k98ojb.Std.For {}\n        getter(x: 344, y: 167, name: \"getter_3e8c71\") getter_3e8c71 = previous\n        setter(x: 678, y: -315, name: \"setter_d2a6eb\") setter_d2a6eb = previous\n        instance(x: 321, y: -20) for_item_9b1f4 root.Std_k98ojb.Std.For {}\n        getter(x: 704, y: 170, name: \"getter_b5d3c8\") getter_b5d3c8 = item\n        setter(x: -0, y: -121, name: \"setter_d2a6eb\") setter_3e8c71 = previous\n        instance(x: -275, y: -35) equal_c7b1f root.Std_k98ojb.Logic.Equal {}\n        getter_b5d3c8.value -> equal_c7b1f.left\n        list_4f9b1d -> for_item_9b1f4.items\n        for_item_9b1f4.item -> equal_c7b1f.right\n        for_item_9b1f4.index -> equal_c7b1f.gen_0\n        getter_3e8c71.value -> equal_c7b1f.gen_1\n        for_item_9b1f4.onItem -> ifexpression_ba2d43.execute\n        for_item_9b1f4.done -> continue_3e8c71\n        setter_d2a6eb.continue -> for_item_9b1f4.reset\n        getter_3e8c71.continue -> for_item_9b1f4.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_smallest_missing_8d0c25 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -394, y: 2, name: \"list\") property(List) list_1a3e6d\n\n        out(x: 1219, y: 0, name: \"continue\") trigger() continue_b8c5f4\n        out(x: 1221, y: 151, name: \"output\") property(Number) output_d2f4d7\n\n        instance(x: 55, y: -123) for_9ed60a root.Std_k98ojb.Std.For {}\n        instance(x: 320, y: 5) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -0, y: -121, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_b8c5f4\n        ifexpression_875761.value -> output_d2f4d7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_1a3e6d -> for_9ed60a.items\n        for_9ed60a.item -> ifexpression_875761.gen_0\n        for_9ed60a.index -> ifexpression_875761.gen_1\n        getter_b280eb.value -> ifexpression_875761.gen_2\n        for_9ed60a.onItem -> ifexpression_875761.execute\n        for_9ed60a.done -> continue_b8c5f4\n        for_9ed60a.item -> setter_9d4f1c.new_value\n        list_1a3e6d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_b8c5f4 -> setter_38e107.execute\n        setter_38e107.continue -> for_9ed60a.reset\n        setter_9d4f1c.continue -> for_9ed60a.next\n    }\n\n    \n\n    instance(x: -83, y: 159) find_smallest_missing_d2d0e5 root.main.find_smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -200, y: 1, name: \"input\") property(String) input_9d0a95\n        out(x: 1054, y: 0, name: \"output\") property(String) output_a7c6b3\n\n        instance(x: 73, y: 47) replace_5f8c1e root.Std_k98ojb.Strings.Replace {}\n        input_9d0a95 -> replace_5f8c1e.input\n        \",.\" -> replace_5f8c1e.search\n        \":\" -> replace_5f8c1e.replace\n        replace_5f8c1e.output -> output_a7c6b3\n    }\n\n    \n\n    instance(x: 251, y: -46) replace_special_chars_0a4d66 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(String) output_ai\n\n        instance(x: -109, y: 0) strings_replace_node root.Std_k98ojb.Strings.Replace {}\n        input_ai -> strings_replace_node.input\n        \",. \" -> strings_replace_node.search\n        \":\" -> strings_replace_node.replace\n        strings_replace_node.output -> output_ai\n    }\n\n    \n\n    instance(x: 251, y: -47, name: \"replace_chars\") replace_3c4d2b root.main.replace_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -194, y: 23, name: \"input\") property(String) input_2f5a4e\n\n        out(x: 1028, y: -47, name: \"output\") property(String) output_a9b3d1\n\n        instance(x: 0, y: 0) replace_node root.Std_k98ojb.Strings.Replace {}\n        input_2f5a4e -> replace_node.input\n        \",.\" -> replace_node.search\n        \":\" -> replace_node.replace\n        replace_node.result -> output_a9b3d1\n    }\n\n    \n\n    instance(x: -192, y: 19) replace_chars_f0c0d8 root.main.replace_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -198, y: 0, name: \"input\") property(String) input_9f1d2b\n        out(x: 1094, y: -63, name: \"output\") property(String) output_b7c5a3\n\n        instance(x: 73, y: -64) replace_with_colon_node root.Std_k98ojb.Strings.Replace {\n            search: \", . \"\n            replace: \": \"\n        }\n        input_9f1d2b -> replace_with_colon_node.input\n        replace_with_colon_node.output -> output_b7c5a3\n    }\n\n    \n\n    instance(x: -201, y: 28) replace_with_colon_a4e2d0 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special {\n        in(x: 0, y: -121, name: \"input\") property(String) input_6a1b5d\n\n        out(x: 0, y: -101, name: \"output\") property(String) output_7e9f2c\n\n        instance(x: 0, y: -98) replace_special_node root.Std_k98ojb.Strings.Replace {}\n        input_6a1b5d -> replace_special_node.input\n        \",\" -> replace_special_node.search\n        \".\" -> replace_special_node.search\n        \" \" -> replace_special_node.search\n        \":\" -> replace_special_node.replace\n        replace_special_node.output -> output_7e9f2c\n    }\n\n    \n\n    instance(x: -93, y: 46) replace_special_b1a6b3 root.main.replace_special {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon{\n        in(x: -215, y: 0, name: \"input\") property(String) input_ai\n        out(x: 1049, y: -68, name: \"output\") property(String) output_3f2d8a\n\n        instance(x: 78, y: 44, name: \"replace_with_colon\") replace_5c7e42 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_with_colon.input\n        \", \".\" -> replace_with_colon.search\n        \":\" -> replace_with_colon.replace\n        replace_with_colon.output -> output_3f2d8a\n    }\n\n    \n\n    instance(x: -242, y: 31) replace_with_colon_5bdf4e root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: -21) replace_7b2c6f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b2c6f.input\n        \",\" -> replace_7b2c6f.search\n        \".\" -> replace_7b2c6f.replace\n        replace_7b2c6f.output -> output_ai\n    }\n\n    \n\n    instance(x: -85, y: 0) replace_with_colon_1c9d8a root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars{\n        in(x: -199, y: 0, name: \"input\") property(String) input_ai\n        out(x: 1048, y: 0, name: \"output\") property(String) output_ai\n\n        instance(x: 74, y: -20) replace_5e1f7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_5e1f7b.input\n        \",\" -> replace_5e1f7b.search\n        \".\" -> replace_5e1f7b.replace\n        replace_5e1f7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: 40) replace_special_chars_d6a4d8 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -200, y: 0, name: \"input\") property(String) input_a2d4e8\n\n        out(x: 1031, y: -67, name: \"output\") property(String) output_b9f6eb\n\n        instance(x: 15, y: 0) replace_node root.Std_k98ojb.Strings.Replace {}\n        input_a2d4e8 -> replace_node.input\n        \",\" -> replace_node.search\n        \":\" -> replace_node.replace\n        replace_node.output -> output_b9f6eb\n    }\n\n    \n\n    instance(x: -176, y: 38) replace_special_chars_5c5a95 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -194, y: 2, name: \"input\") property(String) input_ai\n        out(x: 0, y: 1, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) strings_replace_node root.Std_k98ojb.Strings.Replace {}\n        input_ai -> strings_replace_node.input\n        \",\" -> strings_replace_node.search\n        \".\" -> strings_replace_node.search\n        \" \" -> strings_replace_node.search\n        \":\" -> strings_replace_node.replace\n        strings_replace_node.output -> output_ai\n    }\n\n    \n\n    instance(x: -195, y: 1) replace_special_chars_3c5e7a root.main.replace_special_chars {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -292, y: 0, name: \"input\") property(String) input_9d8a95\n\n        out(x: 509, y: 5, name: \"output\") property(Bool) output_3e2c43\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        input_9d8a95 -> tolower_2e1444.input\n        tolower_2e1444.output -> is_same.predicate\n        1 -> is_same.count\n        for_8cb3f6.index -> is_same.handler\n        tolower_2e1444.output_list -> for_8cb3f6.items\n   }\n    \n\n    instance(x: -67, y: -37) is_same_e0a5c7 root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -294, y: 0, name: \"string\") property(String) input_4a2f8d\n\n        out(x: 540, y: -1, name: \"output\") property(Bool) output_3d5b6e\n\n        instance(x: -83, y: 30) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        input_4a2f8d -> tolower_2e1444.input\n        tolower_2e1444.output -> is_all_same.input\n        instance(x: 0, y: -1) characters_7c6d9c root.Std_k98ojb.Strings.Characters {}\n        characters_7c6d9c.input -> tolower_2e1444.output\n        is_all_same.result -> output_3d5b6e\n    }\n\n    \n\n    instance(x: 59, y: -1) is_all_same_ba5f0e root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -294, y: 0, name: \"str\") property(List) list_8a3d2f\n\n        out(x: 540, y: -1, name: \"output\") property(Bool) output_4e7b6c\n\n        instance(x: 0, y: 0) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 269, y: 3) characters_0a5f8d root.Std_k98ojb.Strings.Characters {}\n        list_8a3d2f -> characters_0a5f8d.input\n        tolower_2e1444.output -> characters_0a5f8d.input\n        characters_0a5f8d.characters -> output_4e7b6c\n    }\n\n    \n\n    instance(x: -55, y: 30) all_same_1df9e root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") char_is_same {\n        in(x: -305, y: 0, name: \"string\") property(String) input_ae\n        out(x: 509, y: 1, name: \"result\") property(Bool) result_ae\n\n        instance(x: 73, y: 3) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 264, y: -10, name: \"compare_char\") std_k98ojb.Std.IfExpression {\n            expression: \"it == previous\"\n        }\n        input_ae -> tolower_2e1444.input\n        tolower_2e1444.output -> compare_char.input\n        \"a\" -> compare_char.left\n        1 -> compare_char.right\n        compare_char.result -> result_ae\n        for_8cb3f6.onItem -> compare_char.execute\n        for_8cb3f6.done -> result_ae.continue\n    }\n\n    \n\n    instance(x: -23, y: 49) char_is_same_f4a2b1 root.main.char_is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") same_characters {\n        in(x: 0, y: 0, name: \"string\") property(String) input_5\n        out(x: 546, y: -1, name: \"output\") property(Bool) output_6\n\n        instance(x: 0, y: 2) tolower_7f2d4c root.Std_k98ojb.Strings.ToLower {}\n        input_5 -> tolower_7f2d4c.input\n        tolower_7f2d4c.output -> output_6\n        instance(x: -23, y: 0) characters_9a8e3a root.Std_k98ojb.Strings.Characters {}\n        input_5 -> characters_9a8e3a.input\n        characters_9a8e3a.characters -> output_6\n    }\n\n    \n\n    instance(x: 0, y: -47) same_characters_2d7f1c root.main.same_characters {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") all_same_chars{\n        in(x: -295, y: 2, name: \"input\") property(String) input_ai\n        out(x: 509, y: 73, name: \"output\") property(Bool) output_ai\n\n        instance(x: 0, y: 0) tolower_7e3c43 root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7e3c43.input\n        tolower_7e3c43.output -> input_ai\n        instance(x: 74, y: -2) characters_9a8d35 root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_9a8d35.input\n        characters_9a8d35.characters -> output_ai\n    }\n\n    \n\n    instance(x: 15, y: 0) all_same_chars_f7c6f5 root.main.all_same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") all_same_char {\n        in(x: -295, y: 2, name: \"string\") property(String) input_5d9f3a\n\n        out(x: 530, y: -1, name: \"result\") property(Bool) result_e1e7c6\n\n        instance(x: 0, y: 0) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        input_5d9f3a -> tolower_2e1444.input\n        tolower_2e1444.output -> result_e1e7c6\n        instance(x: 89, y: 28) characters_0a8b95 root.Std_k98ojb.Strings.Characters {}\n        input_5d9f3a -> characters_0a8b95.input\n        characters_0a8b95.characters -> result_e1e7c6\n    }\n\n    \n\n    instance(x: -43, y: 49) all_same_char_0f4e2a root.main.all_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same_chars{\n        in(x: -0, y: 0, name: \"string\") property(String) input_a\n        out(x: 1231, y: 5, name: \"output\") property(Bool) output_a\n\n        instance(x: 23, y: 0) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        input_a -> tolower_2e1444.input\n        tolower_2e1444.output -> output_a\n        all_same_chars.result = (output_a.value == true)\n    }\n\n    \n\n    instance(x: 0, y: -1) all_same_chars_8a9d6b root.main.all_same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -288, y: 0, name: \"string\") property(String) input_8d5a4f\n\n        out(x: 555, y: -1, name: \"result\") property(Bool) result_7c8b9e\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        input_8d5a4f -> tolower_2e1444.input\n        tolower_2e1444.output -> is_all_same.properties\n        instance(x: 123, y: -3) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        \"a\" -> contains_d42dce.contains\n        input_8d5a4f -> contains_d42dce.input\n        is_all_same.output -> result_7c8b9e\n    }\n\n    \n\n    instance(x: -47, y: 0) is_all_same_f6c9b2 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") same_characters {\n        in(x: -288, y: 0, name: \"input\") property(String) input_3f8d1a\n\n        out(x: 538, y: -2, name: \"output\") property(Bool) output_3f8d1a\n\n        instance(x: 0, y: 0) tolower_c9b4c6 root.Std_k98ojb.Strings.ToLower {}\n        input_3f8d1a -> tolower_c9b4c6.input\n        tolower_c9b4c6.output -> output_3f8d1a\n        instance(x: 123, y: -2) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        \"a\" -> contains_d42dce.contains\n        input_3f8d1a -> tolower_c9b4c6.output\n        output_3f8d1a -> contains_d42dce.result\n    }\n\n    \n\n    instance(x: 59, y: -47) same_characters_7e5a0a root.main.same_characters {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"result\") property(Number) result_0\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        input_ai -> length_6e87f2.input\n        length_6e87f2.length -> result_0\n    }\n\n    \n\n    instance(x: -55, y: 529) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 159, y: -219, name: \"result\") property(Number) result_ai\n\n        instance(x: 426, y: -303) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        instance(x: 265, y: 0) isnumeric_d42dce root.Std_k98ojb.Strings.IsNumeric {}\n        input_ai -> isnumeric_d42dce.input\n        isnumeric_d42dce.result -> length_6e87f2.length\n        length_6e87f2.length -> result_ai\n    }\n\n    \n\n    instance(x: -55, y: 529) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"count number of digits in a given string.\") Count_digits {\n        in(x: -284, y: 2, name: \"s\") property(String) s_0e6f3a\n\n        out(x: 340, y: 77, name: \"digits\") property(Number) digits_4c5b9d\n\n        instance(x: 23, y: 155) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        s_0e6f3a -> length_6e87f2.input\n        length_6e87f2.length -> digits_4c5b9d\n    }\n\n    \n\n    instance(x: 48, y: 11) Count_digits_node root.main.Count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n\n        out(x: 159, y: -219, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) characters_7f5d45 root.Std_k98ojb.Strings.Characters {}\n        input_ai -> tolower_2e1444.input\n        tolower_2e1444.output -> characters_7f5d45.input\n        characters_7f5d45.characters -> number_3bc2ae\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") digit_count {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n\n        out(x: 2, y: -1, name: \"result\") property(Number) result_3d7de6\n\n        instance(x: 0, y: 1) characters_4c4f5a root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_4c4f5a.input\n        characters_4c4f5a.characters -> result_3d7de6\n    }\n\n    \n\n    instance(x: -34, y: 127) digit_count_node root.main.digit_count {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"result\") property(Number) result_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_2e1444.input\n        characters_2e1444.characters -> result_0\n    }\n\n    \n\n    instance(x: -55, y: 529) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Number) result_0\n\n        instance(x: 0, y: 1) characters_8b9e4a root.Std_k98ojb.Strings.Characters {}\n        characters_8b9e4a.input -> input_0\n        data_instance(x: 340, y: -2) length_6e87f2 = characters_8b9e4a.length\n        length_6e87f2 -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"result\") property(Number) result_0\n\n        instance(x: 426, y: 1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        input_ai -> length_6e87f2.input\n        length_6e87f2.length -> result_0\n    }\n\n    \n\n    instance(x: -55, y: 529) count_digits_2c856f root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") digit_count {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"output\") property(Number) output_ai\n\n        instance(x: 15, y: 1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        instance(x: 265, y: 0) characters_8d9c4a root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_8d9c4a.input\n        characters_8d9c4a.characters -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) digit_count_node root.main.digit_count {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 159, y: -219, name: \"length\") property(Number) length_ai\n\n        instance(x: 426, y: 0) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        input_ai -> length_6e87f2.input\n        length_6e87f2.length -> length_ai\n    }\n\n    \n\n    instance(x: -55, y: 529) count_digits_node root.main.count_digits {}\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_power {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_3d1a4\n\n        out(x: 1296, y: -635, name: \"output\") property(Number) output_d5e9b0\n\n        instance(x: 82, y: -417) ifexpression_c7f8c2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 395, y: -378) sum_odd_power_6d3e4a root.main.sum_odd_power {}\n        instance(x: 97, y: -127) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n        data_instance(x: 330, y: 133) data_8c5f0e = [4]\n        instance(x: 46, y: 136) add_f9d3c0 root.Std_k98ojb.Math.Add {}\n        instance(x: 12, y: 258) mul_7e1ce0 root.Std_k98ojb.Math.Mul {}\n        instance(x: 303, y: 2) pow_5fddfa root.Std_k98ojb.Math.Pow {}\n        data_8c5f0e -> add_f9d3c0.first\n        modulo_ad7b2a.result -> add_f9d3c0.second\n        mul_7e1ce0.result -> pow_5fddfa.first\n        n_3d1a4 -> pow_5fddfa.gen_0\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_odd_power_c2d6b root.main.sum_odd_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -567, y: 2, name: \"n\") property(Number) n_3e5a6d\n\n        out(x: 1091, y: -342, name: \"output\") property(Number) output_b4f9c7\n\n        instance(x: -315, y: 36, name: \"odd_number\") generate_2b0a95 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: -294, y: 44, name: \"fourth_power\") power_6d5e3f root.Std_k98ojb.Math.Pow {}\n        instance(x: 0, y: 47) sum_c2c4d1 root.Std_k98ojb.Math.Sum {}\n        instance(x: 0, y: -24, name: \"result\") mul_8a7d6a root.Std_k98ojb.Math.Mul {}\n\n        data_instance(x: 0, y: -22, name: \"data_9e5c4f\") data_9e5c4f = [1]\n        instance(x: 0, y: -23, name: \"first_odd_number\") firstitem_8b2d14 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 0, y: -21, name: \"fourth_power_result\") result_9c6a7f root.Std_k98ojb.Math.Result {}\n        data_9e5c4f -> mul_8a7d6a.data\n        firstitem_8b2d14.item -> power_6d5e3f.value\n        fourth_power_result -> sum_c2c4d1.result\n        power_6d5e3f.result -> mul_8a7d6a.first\n        n_3e5a6d -> sum_c2c4d1.n\n    }\n\n    \n\n    instance(x: 0, y: -22) sum_fourth_power_b9b8a root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -509, y: 3, name: \"n\") property(Number) n_2e8b21\n\n        out(x: 1296, y: -387, name: \"output\") property(Number) output_b1f7c5\n\n        instance(x: 0, y: 0) for_9d4a3 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -219, y: 84, name: \"i\") property(Number) i_e6d4e6\n            in(x: -215, y: 55, name: \"n\") property(Number) n_2e8b21\n\n            out(x: 0, y: 0, name: \"result\") property(Number) result_1c9f3d\n\n            instance(x: 0, y: 0) power_6a7df root.Std_k98ojb.Math.Pow {}\n            instance(x: -218, y: -4, name: \"odd_number\") math_nth_root root.Std_k98ojb.Math.NthRoot {}\n            instance(x: 3, y: 47) sum_6e1c21 root.Std_k98ojb.Math.Sum {}\n            instance(x: 0, y: -2) add_f9d4f9 root.Std_k98ojb.Math.Add {}\n        } -> for_9d4a3.next\n        n_2e8b21 -> for_9d4a3.n\n        for_9d4a3.index -> odd_number.n\n        odd_number.result -> power_6a7df.input\n        i_e6d4e6 -> power_6a7df.gen_0\n        power_6a7df.result -> add_f9d4f9.first\n        2 -> add_f9d4f9.second\n        add_f9d4f9.result -> sum_6e1c21.input\n    }\n\n    \n\n    instance(x: -294, y: 5) sum_fourth_power_0b7a3 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_3a3116\n\n        out(x: 1148, y: -647, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 0, y: 0) for_065883 root.Std_k98ojb.Std.For {}\n        data_instance(x: 394, y: -339) data_3c713b  = [sum, fourth_power]\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (n+1)* (2*n+1)\"\n        }\n        instance(x: 62, y: -226, name: \"fourth_power\") Math_Pow {}\n        instance(x: 97, y: -127) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        Math_Pow.result -> add_88bb8a.first\n        4 -> div_547f34.power\n        div_547f34.result -> fourth_power.n_6b655b\n        1 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> for_065883.reset\n        for_065883.done -> setter_375321.execute\n        getter_38583a.value -> output_732a8a\n        n_3a3116 -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        floor_61b38d.output -> Math_Pow.base\n        floor_61b38d.output -> fourth_power.value\n        n_3a3116 -> Math_Pow.exponent\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_fourth_power_86117a root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -567, y: -216, name: \"n\") property(Number) n_6b655b\n\n        out(x: 1368, y: -649, name: \"sum\") property(Number) output_732a8a\n\n        instance(x: 0, y: 0) for_065883 root.Std_k98ojb.Std.For {}\n        data_instance(x: -341, y: -301) data_b5c2e9  = [4]\n        instance(x: 46, y: -383) power_a7f6a3 root.Std_k98ojb.Math.Pow {}\n        instance(x: 97, y: -127) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: 0, y: 0, name: \"setter_41e4ad\") setter_41e4ad = sum\n        getter(x: 875, y: -518, name: \"getter_38583a\") getter_38583b = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        3 -> power_a7f6a3.n\n        1 -> div_547f34.second\n        0 -> setter_41e4ad.new_value\n        for_065883.continue_d9efd7 -> setter_41e4ad.execute\n        n_6b655b -> for_065883.items\n        for_065883.index -> power_a7f6a3.n\n        data_b5c2e9.result -> add_88bb8a.first\n        power_a7f6a3.result -> add_88bb8a.second\n        div_547f34.result -> getter_38583b.new_value\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -567, y: 2, name: \"n\") property(Number) n_0b9d3f\n\n        out(x: 1468, y: 23, name: \"output\") property(Number) output_6c9e1e\n\n        instance(x: 80, y: -416) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 394, y: -378) sum_digits_96023e root.main.sum_digits {}\n        instance(x: 97, y: -127) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n*n*n\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_0b9d3f -> mul_f892a4.first\n        n_0b9d3f -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_digits_96023e.n_6b655b\n        1 -> sum_digits_96023e.n_6b655b\n        div_64046c.result -> sum_digits_96023e.output_732a8a\n        sum_digits_96023e.continue_d9efd7 -> output_6c9e1e.execute\n        sum_digits_96023e.output_732a8a -> mul_f892a4.second\n        mul_f892a4.result -> output_6c9e1e\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_fourth_power_86117a root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_odd_power {\n        in(x: -531, y: 3, name: \"n\") property(Number) n_1a8d6b\n\n        out(x: 1467, y: 11, name: \"sum\") property(Number) output_b4c2eb\n\n        data_instance(x: 394, y: -339) data_e0f5e9  = [sum_odd_power]\n        instance(x: 46, y: -417) for_c6d8a1 root.Std_k98ojb.Std.For {}\n        instance(x: 97, y: -127) pow_2c3f4a root.Std_k98ojb.Math.Pow {}\n        instance(x: 99, y: -249) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 112, y: 80) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -330) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n        setter(x: 0, y: 0, name: \"setter_b5e5f6\") setter_b5e5f6 = sum\n        getter(x: 303, y: 2) getter_b5e5f6 = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        3 -> modulo_ad7b2a.divisor\n        pow_2c3f4a.result -> add_88bb8a.first\n        3 -> div_547f34.second\n        div_547f34.result -> sum_odd_power.n_1a8d6b\n        0 -> setter_b5e5f6.new_value\n        for_c6d8a1.reset -> setter_b5e5f6.execute\n        pow_2c3f4a.result -> notequal_148aeb.left\n        sum_odd_power.n_1a8d6b -> notequal_148aeb.right\n        notequal_148aeb.result -> output_b4c2eb\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_odd_power_f21f44 root.main.sum_odd_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -542, y: 2, name: \"n\") property(Number) n_4d8f1a\n\n        out(x: 1466, y: -317, name: \"sum\") property(Number) output_b7c0ec\n\n        instance(x: 0, y: 0) for_3e2b5 root.Std_k98ojb.Std.For {}\n        data_instance(x: -305, y: -313) data_e8d4f1  = [n]\n        func() {\n            in(x: -23, y: -28, name: \"i\") property(Number) i_3e9c6a\n\n            out(x: 0, y: 0, name: \"result\") property(Number) result_2b4d8f\n\n            instance(x: 104, y: -316) pow_f1c5b1 root.Std_k98ojb.Math.Pow {}\n            instance(x: 305, y: -310) add_9f2a0e root.Std_k98ojb.Math.Add {}\n        } -> for_3e2b5.next\n        n_4d8f1a -> data_e8d4f1.n\n        for_3e2b5.index -> i_3e9c6a\n        pow_f1c5b1.base -> i_3e9c6a\n        pow_f1c5b1.exponent -> 4\n        2 -> pow_f1c5b1.base\n        result_2b4d8f.value -> add_9f2a0e.first\n        1 -> add_9f2a0e.second\n        add_9f2a0e.result -> output_b7c0ec\n    }\n\n    \n\n    instance(x: -44, y: 73) sum_fourth_power_f5d8b root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_power {\n        in(x: -542, y: 2, name: \"n\") property(Number) n_3d9d8\n\n        out(x: 1146, y: -647, name: \"output\") property(Number) output_7fdd4c\n\n        instance(x: -315, y: -304, name: \"odd_numbers\") for_0b1a5e root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -30, y: 39, name: \"current\") property(Number) current_d3f4c8\n            in(x: -23, y: 85, name: \"_index\") property(Number) _index_5d7e1b\n\n            instance(x: 0, y: -26, name: \"fourth_power\") expression_6a2f5 root.Std_k98ojb.Math.Expression {\n                expression: \"4 * (it+1)^4\"\n            }\n            instance(x: 88, y: 52) modulo_a9c8d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 349, y: -105) add_7f3a2e root.Std_k98ojb.Math.Add {}\n        } -> for_0b1a5e.next\n        odd_numbers.items -> expression_6a2f5.gen_0\n        expression_6a2f5.result -> modulo_a9c8d5.first\n        modulo_a9c8d5.divisor -> 3\n        current_d3f4c8 -> modulo_a9c8d5.value\n        expression_6a2f5.gen_0 -> add_7f3a2e.first\n        add_7f3a2e.second -> for_0b1a5e.index\n        sum_odd_power.output_7fdd4c -> add_7f3a2e.result\n    }\n\n    \n\n    instance(x: -294, y: 569) sum_odd_power_c6d8c2 root.main.sum_odd_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -569, y: 2, name: \"n\") property(Number) n_6b655b\n\n        out(x: 1050, y: 85, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 46, y: -383) sum_digits_96023e root.main.sum_digits {}\n        instance(x: 97, y: -127) sub_88bb8a root.Std_k98ojb.Math.Sub {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 112, y: 80) power_a1d7e2 root.Std_k98ojb.Math.Pow {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        4 -> power_a1d7e2.exponent\n        3 -> div_547f34.n\n        modulo_ad7b2a.result -> add_88bb8a.first\n        10 -> div_547f34.second\n        div_547f34.result -> sum_digits_96023e.n_6b655b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> sum_digits_96023e.execute_cdac2a\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> sum_digits_96023e.execute_cdac2a\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_fourth_power_cee202 root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: 0, y: 0, name: \"side\") property(Number) side_ai\n        out(x: 1089, y: -59, name: \"output\") property(Number) output_2d8c1a\n\n        instance(x: 16, y: 11) sum_6f3e5b root.Std_k98ojb.List.Sum {}\n        instance(x: 23, y: 64) pow_57a4df root.Std_k98ojb.Math.Pow {}\n        instance(x: -19, y: 21) mult_1bb2d7 root.Std_k98ojb.Math.Mul {}\n        side_ai -> sum_6f3e5b.items\n        6.0 -> pow_57a4df.y\n        pow_57a4df.result -> mult_1bb2d7.first\n        6.0 -> mult_1bb2d7.second\n        sum_6f3e5b.result -> output_2d8c1a\n    }\n\n    \n\n    instance(x: -85, y: -43, name: \"cube_surface_area\") cube_surface_area_node root.main(cube_surface_area) {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: -213, y: 55, name: \"side\") property(Number) side_8f9e2d\n\n        out(x: 288, y: 0, name: \"surface_area\") property(Number) surface_area_4a7a5b\n\n        instance(x: 216, y: -299) cube_surface_area_node root.Std_k98ojb.Math.SurfaceArea {}\n        side_8f9e2d -> cube_surface_area_node.side\n        cube_surface_area_node.result -> surface_area_4a7a5b\n    }\n\n    \n\n    instance(x: 217, y: 59) cube_surface_area_6c3c1 root.main_cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -222, y: 123, name: \"size\") property(Number) size_5e1d6b\n        out(x: 1080, y: -19, name: \"output\") property(Number) output_a3a2f9\n\n        instance(x: 12, y: -47) math_pow_node root.Std_k98ojb.Math.Pow {}\n        size_5e1d6b -> math_pow_node.base\n        2 -> math_pow_node.exponent\n        math_pow_node.result -> output_a3a2f9\n    }\n\n    \n\n    instance(x: -191, y: -46) surface_area_0c8f7f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -234, y: 0, name: \"side\") property(Number) side_5f3e1d\n\n        out(x: 216, y: -23, name: \"output\") property(Number) output_d6b9c8\n\n        instance(x: 18, y: 13) math_pow_node root.Std_k98ojb.Math.Pow {}\n        math_pow_node.result -> output_d6b9c8\n        side_5f3e1d -> math_pow_node.base\n        math_pow_node.exponent -> 2\n        6 -> math_pow_node.exponent\n    }\n\n    \n\n    instance(x: -209, y: 0, name: \"surface_area\") surface_area_7b3e4c root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -216, y: 19, name: \"side_length\") property(Number) side_length_4e9a0b\n        out(x: 1086, y: 15, name: \"result\") property(Number) result_e7c3d1\n\n        instance(x: 14, y: -13) pow_f8fdd2 root.Std_k98ojb.Math.Pow {}\n        side_length_4e9a0b -> pow_f8fdd2.x\n        2 -> pow_f8fdd2.y\n        pow_f8fdd2.result -> result_e7c3d1\n        instance(x: -216, y: 14) multiply_d4a5d6 root.Std_k98ojb.Math.Mul {}\n        side_length_4e9a0b -> multiply_d4a5d6.first\n        pow_f8fdd2.result -> multiply_d4a5d6.second\n        multiply_d4a5d6.result -> result_e7c3d1\n    }\n\n    \n\n    instance(x: 15, y: -46) surface_area_0b9e38 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -215, y: 0, name: \"side\") property(Number) side_a6a4f1\n        out(x: 1382, y: 0, name: \"output\") property(Number) output_8b9c45\n\n        instance(x: 216, y: 0) math_pow_node root.Std_k98ojb.Math.Pow {}\n        side_a6a4f1 -> math_pow_node.base\n        2 -> math_pow_node.exp\n        math_pow_node.result -> output_8b9c45\n    }\n\n    \n\n    instance(x: -215, y: 0) surface_area_node root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: 0, y: 0, name: \"size\") property(Number) size_8a3d2b\n\n        out(x: 192, y: -11, name: \"area\") property(Number) area_b4c1e3\n    }\n\n    instance(x: 24, y: 0) math_pow_node root.Std_k98ojb.Math.Pow {}\n    instance(x: 18, y: 0) math_mul_node root.Std_k98ojb.Math.Mul {}\n    data_instance(x: 15, y: -14) data_3f8c4d = 6\n    math_mul_node.result -> area_b4c1e3\n    size_8a3d2b -> math_pow_node.first\n    2 -> math_pow_node.second\n    data_3f8c4d -> math_mul_node.first\n    math_pow_node.result -> math_mul_node.second\n    math_mul_node.result -> area_b4c1e3\n\n    instance(x: 22, y: -11) cube_surface_area_a0a3b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -219, y: 0, name: \"side\") property(Number) side_5d8a3b\n\n        out(x: 288, y: 7, name: \"output\") property(Number) output_e85f1c\n    }\n\n    \n\n    instance(x: 19, y: -14) sum_surface_area_node root.Std_k98ojb.List.Sum {}\n    side_5d8a3b -> sum_surface_area_node.items\n    6 -> sum_surface_area_node.factor\n    sum_surface_area_node.result -> output_e85f1c\n   }\n\n    \n\n    instance(x: -46, y: -22, name: \"surface_area\") surface_area_node root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: 0, y: 0, name: \"side_length\") property(Number) side_length_6d2d5a\n\n        out(x: 216, y: -46, name: \"result\") property(Number) result_3f1c4e\n\n        instance(x: 24, y: -63) math_pow_node root.Std_k98ojb.Math.Pow {}\n        side_length_6d2d5a -> math_pow_node.base\n        2 -> math_pow_node.exponent\n        math_pow_node.result -> result_3f1c4e\n\n        instance(x: 0, y: -69) two_times_side_length_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * side_length\"\n        }\n        side_length_6d2d5a -> two_times_side_length_node.gen_0\n        two_times_side_length_node.result -> result_3f1c4e\n    }\n\n    \n\n    instance(x: 22, y: -47) surface_area_8e5a7b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -216, y: 0, name: \"side\") property(Number) side_ai\n        out(x: 1089, y: -19, name: \"output\") property(Number) output_a3e5b1\n\n        instance(x: 24, y: -23) math_pow_node root.Std_k98ojb.Math.Pow {}\n        side_ai -> math_pow_node.first\n        2 -> math_pow_node.y\n        math_pow_node.result -> output_a3e5b1\n        instance(x: 15, y: 0) multiply_8f7c42 root.Std_k98ojb.Math.Mul {}\n        6 -> multiply_8f7c42.first\n        side_ai -> multiply_8f7c42.second\n        multiply_8f7c42.result -> output_a3e5b1\n    }\n\n    \n\n    instance(x: -91, y: 0) surface_area_node root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -471, y: 23, name: \"list\") property(List) list_4a2d1f\n\n        out(x: 1210, y: -113, name: \"output\") property(Number) output_d5e7c8\n\n        instance(x: -104, y: -108) min_9b3e34 root.Std_k98ojb.List.Min {}\n        instance(x: -112, y: 25, name: \"max_4d2f0d\") root.Std_k98ojb.List.Max {}\n\n        list_4a2d1f -> max_4d2f0d.items\n        max_4d2f0d.item -> diff_largest_smallest.output_d5e7c8\n        min_9b3e34.result -> output_d5e7c8\n    }\n\n    \n\n    instance(x: 97, y: -142) diff_largest_smallest_f1a6df root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -193, y: 24, name: \"list\") property(List) list_4e3a9f\n\n        out(x: 1005, y: -1, name: \"output\") property(Number) output_a8c7d0\n\n        instance(x: 101, y: 73) list_max_1f6b45 root.Std_k98ojb.List.Max {}\n        instance(x: 104, y: -22) list_min_4a3e9f root.Std_k98ojb.List.Min {}\n        list_4e3a9f -> list_max_1f6b45.items\n        list_4e3a9f -> list_min_4a3e9f.items\n        list_max_1f6b45.result -> output_a8c7d0\n        list_min_4a3e9f.result -> output_a8c7d0\n    }\n\n    \n\n    instance(x: -69, y: 23) diff_max_min_5eb2d8 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -193, y: 23, name: \"list\") property(List) list_3d4b2f\n\n        out(x: 1215, y: -1, name: \"difference\") property(Number) difference_a9e0eb\n\n        instance(x: 102, y: -108) max_f6c7a8 root.Std_k98ojb.List.Max {}\n        instance(x: 103, y: 20, name: \"min_3d7f2f\") min_f6c7a8 root.Std_k98ojb.List.Min {}\n        list_3d4b2f -> max_f6c7a8.items\n        list_3d4b2f -> min_f6c7a8.items\n        max_f6c7a8.result -> difference_a9e0eb\n        min_f6c7a8.result -> difference_a9e0eb\n    }\n\n    \n\n    instance(x: -93, y: 47) diff_max_min_5d4f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -193, y: 15, name: \"list\") property(List) list_9d5b1f\n\n        out(x: 1097, y: 13, name: \"output\") property(Number) output_2a6c4e\n\n        instance(x: 105, y: 63) max_b3f1a8 root.Std_k98ojb.List.Max {}\n        list_9d5b1f -> max_b3f1a8.items\n        func() {\n            in(x: -234, y: 47, name: \"min\") property(Number) min_7d4c6e\n\n            out(x: 1131, y: 44, name: \"\") property(Number) result_c2e5b9\n\n            instance(x: 96, y: 38) ifexpression_f8f1d root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0 || previous <= current\"\n            }\n            getter(x: -7, y: 41, name: \"getter_4a9c3e\") getter_4a9c3e = previous\n            setter(x: 115, y: 24, name: \"setter_eb2f1d\") setter_eb2f1d = previous\n            instance(x: 94, y: -11) for_d0c6a5 root.Std_k98ojb.Std.For {}\n            setter(x: 118, y: 34) setter_f8e3db = previous\n            instance(x: -9, y: 39) getat_6f5a2d root.Std_k98ojb.List.GetAt {}\n            ifexpression_f8f1d.else -> for_d0c6a5.reset\n            ifexpression_f8f1d.value -> result_c2e5b9\n            ifexpression_f8f1d.then -> setter_eb2f1d.execute\n            list_9d5b1f -> for_d0c6a5.items\n            for_d0c6a5.item -> ifexpression_f8f1d.gen_2\n            for_d0c6a5.index -> ifexpression_f8f1d.gen_0\n            getter_4a9c3e.value -> ifexpression_f8f1d.gen_1\n            for_d0c6a5.onItem -> ifexpression_f8f1d.execute\n            for_d0c6a5.done -> for_d0c6a5.next\n            for_d0c6a5.item -> setter_eb2f1d.new_value\n            list_9d5b1f -> getat_6f5a2d.list\n            0 -> getat_6f5a2d.index\n            getat_6f5a2d.itemAtIndex -> setter_f8e3db.new_value\n            for_d0c6a5.next -> setter_eb2f1d.execute\n            max_b3f1a8.result -> result_c2e5b9\n            min_7d4c6e.value -> result_c2e5b9\n            diff_largest_smallest.output -> output_2a6c4e\n        } -> max_b3f1a8.execute\n    }\n\n    \n\n    instance(x: 104, y: -120) diff_largest_smallest_d2d0df root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -246, y: -186, name: \"list\") property(List) list_0b8d2e\n\n        out(x: 1013, y: -188, name: \"output\") property(Number) output_d5c6a1\n\n        instance(x: 109, y: 34, name: \"max\") property(Number) max_7f4e42\n        instance(x: 104, y: 20, name: \"min\") property(Number) min_a3d9b2\n\n        instance(x: -0, y: -121, name: \"reset\") trigger() reset_5a8c6f\n        instance(x: 103, y: -190, name: \"next\") trigger() next_4e1f7f\n        instance(x: -104, y: -109, name: \"count\") property(Number) count_4d3bdf\n\n        reset_5a8c6f -> count.reset\n        list_0b8d2e -> max.gen_0\n        next_4e1f7f -> min.gen_0\n        next_4e1f7f -> count.next\n        max.count -> next_4e1f7f.continue\n        min.count -> reset_5a8c6f.continue\n        list_0b8d2e -> max.items\n        list_0b8d2e -> min.items\n        max.item -> max.gen_1\n        min.item -> min.gen_1\n\n        instance(x: 105, y: -191) for_d1c3df root.Std_k98ojb.Std.For {}\n        for_d1c3df.index -> count\n        for_d1c3df.onItem -> next_4e1f7f.execute\n        max.count -> reset_5a8c6f.execute\n        min.count -> reset_5a8c6f.execute\n    }\n\n    \n\n    instance(x: 102, y: -192) diff_largest_smallest_f9d2f3 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -292, y: 23, name: \"list\") property(List) list_3e4f5d\n\n        out(x: 1092, y: -1, name: \"output\") property(Number) output_a8f7b4\n\n        instance(x: 0, y: 0) find_max_6c4a66 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) find_min_3e9d1d root.Std_k98ojb.Iteration.Find {}\n        list_3e4f5d -> find_max_6c4a66.items\n        list_3e4f5d -> find_min_3e9d1d.items\n\n        instance(x: 0, y: -120) max_7a9d42 root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: -114) min_6c2a85 root.Std_k98ojb.List.Min {}\n        list_3e4f5d -> max_7a9d42.items\n        list_3e4f5d -> min_6c2a85.items\n\n        instance(x: 0, y: -118) sub_e1c8e6 root.Std_k98ojb.Math.Sub {}\n        output_a8f7b4 -> sub_e1c8e6.result\n        max_7a9d42.max -> sub_e1c8e6.first\n        min_6c2a85.min -> sub_e1c8e6.second\n    }\n\n    \n\n    instance(x: -92, y: 41) diff_max_min_b3f5b4 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -292, y: 21, name: \"list\") property(List) list_8f1e5b\n\n        out(x: 1017, y: 3, name: \"output\") property(Number) output_e9a0af\n\n        instance(x: 109, y: 23) max_4d2d6c root.Std_k98ojb.List.Max {}\n        list_8f1e5b -> max_4d2d6c.items\n        func() {\n            in(x: -230, y: -26, name: \"min\") property(Number) min_f9a0af\n\n            out(x: 1017, y: 3, name: \"\") property(Number) result_1b5f8e\n\n            instance(x: 109, y: 23) min_2d4c21 root.Std_k98ojb.List.Min {}\n            list_8f1e5b -> min_2d4c21.items\n            max_4d2d6c.result -> result_1b5f8e\n        } -> max_4d2d6c.handler\n        max_4d2d6c.max -> diff_largest_smallest.output\n        min_f9a0af.min -> diff_largest_smallest.output\n    }\n\n    \n\n    instance(x: 93, y: -122) diff_largest_smallest_5f8e38 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -193, y: 0, name: \"list\") property(List) list_1f8d3b\n\n        out(x: 1239, y: -13, name: \"difference\") property(Number) difference_e7c6ec\n\n        instance(x: 0, y: 0) max_f2e0a4 root.Std_k98ojb.List.Max {}\n        list_1f8d3b -> max_f2e0a4.items\n        func() {\n            in(x: -242, y: -69, name: \"x\") property(Number) x_5c7c9d\n\n            out(x: 1242, y: 71, name: \"\") property(Number) _1df3f8\n\n            instance(x: 95, y: -23) min_f0b3e4 root.Std_k98ojb.List.Min {}\n            list_1f8d3b -> min_f0b3e4.items\n            x_5c7c9d -> min_f0b3e4.x\n            min_f0b3e4.result -> _1df3f8\n        } -> max_f2e0a4.handler\n        max_f2e0a4.max -> difference_e7c6ec\n    }\n\n    \n\n    instance(x: 10, y: -123) diff_max_min_9d5e43 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -471, y: 15, name: \"list\") property(List) list_5e1a8d\n\n        out(x: 1033, y: -4, name: \"output\") property(Number) output_9b6f7d\n\n        instance(x: 0, y: 0) max_d2c5e root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 0) min_d1a3a8 root.Std_k98ojb.List.Min {}\n        list_5e1a8d -> max_d2c5e.items\n        list_5e1a8d -> min_d1a3a8.items\n        max_d2c5e.result -> output_9b6f7d\n        max_d2c5e.result -> diff_max_min.output\n        min_d1a3a8.result -> output_9b6f7d\n    }\n\n    \n\n    instance(x: 10, y: -123) diff_max_min_ebf6d4 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -294, y: 156, name: \"list\") property(List) list_8f9a3d\n\n        out(x: 1246, y: 4, name: \"output\") property(Number) output_e2e7c5\n\n        instance(x: 109, y: -22) length_6bdf1c root.Std_k98ojb.List.Length {}\n        instance(x: 0, y: 0, name: \"max\") property(Number) max_b4a8f1\n        instance(x: 0, y: 0, name: \"min\") property(Number) min_a2d7e5\n\n        list_8f9a3d -> length_6bdf1c.list\n        length_6bdf1c.length -> max_b4a8f1\n        length_6bdf1c.length -> min_a2d7e5\n        max_b4a8f1 -> diff_largest_smallest.output\n        min_a2d7e5 -> output_e2e7c5\n    }\n\n    \n\n    instance(x: -104, y: 47) diff_largest_smallest_3b3b9a root.main.diff_largest_smallest {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -294, y: 155, name: \"n\") property(Number) n_4a2f9d\n\n        out(x: 509, y: 43, name: \"output\") property(Bool) output_1b6e8c\n\n        instance(x: 0, y: 0) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: -44, y: 49) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n        n_4a2f9d -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> equal_a54bdc.left\n        0 -> equal_a54bdc.right\n        equal_a54bdc.result -> output_1b6e8c\n    }\n\n    \n\n    instance(x: -53, y: 530) is_even_bf2a5b root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -292, y: 166, name: \"n\") property(Number) n_4e9a2d\n\n        out(x: 1033, y: 157, name: \"output\") property(Bool) output_8c7f5b\n\n        instance(x: -109, y: 158) modulo_e77d23 root.Std_k98ojb.Math.Modulo {}\n        modulo_e77d23.result -> output_8c7f5b\n        n_4e9a2d -> modulo_e77d23.value\n        0 -> modulo_e77d23.divisor\n        modulo_e77d23.result -> output_8c7f5b\n    }\n\n    \n\n    instance(x: -84, y: 64) is_even_f1e3db root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -275, y: 23, name: \"input\") property(Number) input_e6d4eb\n\n        out(x: 1133, y: 5, name: \"output\") property(Bool) output_8c2f1b\n\n        instance(x: -104, y: 28) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 0, y: 33) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n\n        input_e6d4eb -> modulo_c76d2b.value\n        0 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> equal_f89569.left\n        2 -> equal_f89569.right\n        equal_f89569.result -> output_8c2f1b\n    }\n\n    \n\n    instance(x: -88, y: 49) is_even_5a4e9f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -269, y: 34, name: \"input\") property(Number) input_8f5a2e\n\n        out(x: 1030, y: -25, name: \"output\") property(Bool) output_e1b7c4\n\n        instance(x: 0, y: 0) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1096, y: 34) not_75283f root.Std_k98ojb.Logic.Not {}\n        input_8f5a2e -> modulo_c76d2b.value\n        0 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> not_75283f.left\n        1 -> not_75283f.right\n        not_75283f.result -> output_e1b7c4\n    }\n\n    \n\n    instance(x: -58, y: 21) is_even_d8e6a3 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -294, y: 157, name: \"input\") property(Number) input_bf8a4d\n\n        out(x: 1052, y: 5, name: \"output\") property(Bool) output_9c1b0e\n\n        instance(x: -104, y: 158) modulo_f7fdd6 root.Std_k98ojb.Math.Modulo {}\n        is_even.result -> output_9c1b0e\n        input_bf8a4d -> modulo_f7fdd6.value\n        2 -> modulo_f7fdd6.divisor\n        modulo_f7fdd6.result -> output_9c1b0e\n    }\n\n    \n\n    instance(x: -69, y: 63) is_even_5bdf3a root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not\") is_even {\n        in(x: -285, y: 0, name: \"n\") property(Number) n_2e8f1d\n\n        out(x: 1244, y: 3, name: \"output\") property(Bool) output_b9b5df\n\n        instance(x: 114, y: 10) modulo_ea7c6f root.Std_k98ojb.Math.Modulo {}\n        n_2e8f1d -> modulo_ea7c6f.value\n        0 -> modulo_ea7c6f.divisor\n        modulo_ea7c6f.result -> output_b9b5df\n    }\n\n    \n\n    instance(x: -284, y: 59) is_even_4e2e3d root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 34, name: \"n\") property(Number) n_0f6e5a\n\n        out(x: 1028, y: -27, name: \"output\") property(Bool) output_e3c1eb\n\n        instance(x: -108, y: -33) modulo_7d4b9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 42) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n        n_0f6e5a -> modulo_7d4b9.value\n        2 -> modulo_7d4b9.divisor\n        modulo_7d4b9.result -> equal_a54bdc.left\n        0 -> equal_a54bdc.right\n        equal_a54bdc.result -> output_e3c1eb\n    }\n\n    \n\n    instance(x: -109, y: 29) is_even_f5f6a2 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -283, y: 0, name: \"n\") property(Number) n_8f2d3a\n\n        out(x: 124, y: 4, name: \"output\") property(Bool) output_c5b1c8\n\n        instance(x: 0, y: 0) modulo_e7e8ec root.Std_k98ojb.Math.Modulo {}\n        instance(x: 104, y: -3, name: \"continue\") trigger() continue_6f2d4a\n        n_8f2d3a -> modulo_e7e8ec.value\n        0 -> modulo_e7e8ec.divisor\n        modulo_e7e8ec.result -> output_c5b1c8\n    }\n\n    \n\n    instance(x: -58, y: 19) is_even_d1b9f4 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -294, y: 165, name: \"n\") property(Number) n_4d0d6a\n\n        out(x: 1238, y: 5, name: \"output\") property(Bool) output_bf2c34\n\n        instance(x: 0, y: 0) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: -48, y: 29) equal_7a6e4e root.Std_k98ojb.Logic.Equal {}\n        n_4d0d6a -> modulo_c76d2b.value\n        0 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> equal_7a6e4e.left\n        1 -> equal_7a6e4e.right\n        equal_7a6e4e.result -> output_bf2c34\n    }\n\n    \n\n    instance(x: -55, y: -36) is_even_e3d9d0 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -294, y: 23, name: \"input\") property(Number) input_3e4a1d\n\n        out(x: 1030, y: -26, name: \"output\") property(Bool) output_bf6b7c\n\n        instance(x: 0, y: 0) modulo_d9e2db root.Std_k98ojb.Math.Modulo {}\n        input_3e4a1d -> modulo_d9e2db.value\n        2 -> modulo_d9e2db.divisor\n        modulo_d9e2db.result -> output_bf6b7c\n    }\n\n    \n\n    instance(x: -288, y: -25) is_even_5d8b3a root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") FirstRepeat {\n        in(x: -530, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n        data_instance(x: -753, y: -588) data_cc1b1b  = [charMap]\n        instance(x: -432, y: -620) count_4b8927 root.Std_k98ojb.Count {}\n        instance(x: -978, y: -566) map_3f3ee6 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 188, y: 425) list_5e8f9a root.Std_k98ojb.List {}\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        data_cc1b1b -> map_3f3ee6.items\n        charMap -> count_4b8927.count\n        input_ai -> map_3f3ee6.handler\n        tolower_7b3b7b.result -> output_ai\n        length_4b8927.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        list_5e8f9a.items -> count_4b8927.list\n        map_3f3ee6.output_list -> output_ai\n        firstitem_0c0c23 root.Std_k98ojb.List.FirstItem {}\n        data_cc1b1b.last -> firstitem_0c0c23.item\n    }\n\n    \n\n    instance(x: -97, y: 127) FirstRepeat_49c6ac root.main.FirstRepeat {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -1049, y: -375) characters_8eae56 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -978, y: -566) map_c31c7c root.Std_k98ojb.Iteration.Map {}\n        instance(x: -1405, y: -438) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        data_instance(x: 340, y: 425) data_cc1b1b = [found_match, no_match]\n        tolower_7b3b7b.output -> characters_8eae56.input\n        input_ai -> characters_8eae56.input\n        map_c31c7c.handler -> contains_d42dce.handler\n        0 -> map_c31c7c.index\n        characters_8eae56.characters -> data_cc1b1b.characters\n        map_c31c7c.output_list -> data_cc1b1b.output_list\n        no_match.value -> data_cc1b1b.no_match\n        contains_d42dce.contains -> data_cc1b1b.contains\n        input_ai -> contains_d42dce.input\n        found_match.value -> data_cc1b1b.found_match\n    }\n\n    \n\n    instance(x: -97, y: 127) first_repeated_char_496e5e root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"string\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        data_instance(x: -753, y: -588) data_cc1b1b  = [input]\n        instance(x: -432, y: -620) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -978, y: -566) characters_3f3ee6 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 188, y: 425) map_1088d5 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 265, y: -105) count_4b8927 root.Std_k98ojb.Std.Count {}\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_752c60 -> characters_3f3ee6.input\n        tolower_2e1444.output -> data_cc1b1b.input\n        map_1088d5.handler -> sub_f133b2\n        0 -> sub_f133b2.first\n        length_4b8927.length -> count_4b8927.value\n        count_4b8927.reset -> sub_f133b2.execute\n        sub_f133b2.result -> map_1088d5.output_list\n        map_1088d5.itemAtIndex -> data_cc1b1b.input\n        first_repeated.output -> output_ai\n    }\n\n    \n\n    instance(x: -97, y: -68) first_repeated_49c6ac root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -179, y: 30) filter_59bc6e root.Std_k98ojb.Query.Filter {}\n        instance(x: -978, y: -566) count_c31c7c root.Std_k98ojb.Count {}\n        instance(x: -1405, y: -438) map_e133a4 root.Std_k98ojb.Iteration.Map {}\n        instance(x: -1191, y: -492) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_7b3b7b.output -> filter_59bc6e.input\n        input_ai -> filter_59bc6e.input\n        filter_59bc6e.result -> count_c31c7c.list\n        1 -> count_c31c7c.reset\n        count_c31c7c.count -> map_e133a4.handler\n        map_e133a4.output_list -> contains_d42dce.input\n        input_ai -> contains_d42dce.input\n        filter_59bc6e.result -> contains_d42dce.result\n        if(contains_d42dce.result) { \n            map_e133a4.itemAtIndex -> output_ai\n        } else {\n            map_e133a4.output_list -> []\n        }\n    }\n\n    \n\n    instance(x: -67, y: -37) first_repeated_496e5e root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"string\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n        data_instance(x: -753, y: -588) data_cc1b1b  = [char_map]\n        instance(x: -432, y: -620) map_f0c6f8 root.Std_k98ojb.Iteration.Map {}\n        instance(x: -978, y: -566) filter_4d4556 root.Std_k98ojb.Query.Filter {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 118, y: 540) count_f3c5a1 root.Std_k98ojb.Std.Count {}\n        list_752c60 -> map_f0c6f8.items\n        tolower_7b3b7b.output -> map_f0c6f8.handler\n        map_f0c6f8.output_list -> char_map\n        map_f0c6f8.result -> filter_4d4556.list\n        1 -> sub_852f2e.second\n        input_ai -> sub_852f2e.first\n        count_5b8927.value -> data_cc1b1b.count\n        ifdata_1a3a7b(root.std.Std.If) {\n            then: function() {\n                if (count_5b8927.value > 0 && char_map[char_map[0]]) {\n                    output_ai = map_f0c6f8.output_list[0]\n                }\n            }\n            else: function() {}\n        } -> filter_4d4556.predicate\n    }\n\n    \n\n    instance(x: -67, y: -37) first_repeated_char_49e5e root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Char) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -432, y: -620) map_8f5d1a root.Std_k98ojb.Iteration.Map {}\n        data_instance(x: -753, y: -588) data_cc1b1b  = [map, count]\n        instance(x: -978, y: -566) filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"count > 0\"\n        }\n        instance(x: -1405, y: -438) getat_8eae56 root.Std_k98ojb.List.GetAt {}\n        instance(x: 118, y: 540, name: \"setter_29a5c8\") setter_29a5c8 = local_char\n        instance(x: -319, y: 521, name: \"getter_7f13b7\") getter_7f13b7 = local_k\n        instance(x: -48, y: 517) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n        tolower_7b3b7b.output -> map.input\n        input_ai -> tolower_7b3b7b.input\n        map.handler -> getat_8eae56.index\n        count -> getter_7f13b7.value\n        0 -> notequal_148aeb.left\n        getat_8eae56.itemAtIndex -> setter_29a5c8.value\n        notequal_148aeb.result -> output_ai\n        map.input -> filter_4d4556.list\n        filter_4d4556.result -> output_ai\n    }\n\n    \n\n    instance(x: -97, y: -68) first_repeated_49c6ac root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"string\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -432, y: 620) contains_5c2f1a root.Std_k98ojb.Strings.Contains {}\n        instance(x: 340, y: 540) characters_8d6a42 root.Std_k98ojb.Strings.Characters {}\n        tolower_7b3b7b.output -> contains_5c2f1a.input\n        input_ai -> tolower_7b3b7b.input\n        characters_8d6a42.characters -> contains_5c2f1a.contains\n        contains_5c2f1a.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) first_repeated_char_59bc6e root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -1059, y: -696) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 196, y: 425) find_first_occurrence_f0c4f2 root.Std_k98ojb.Iteration.Find {}\n        tolower_7b3b7b.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_ai -> tolower_7b3b7b.input\n        find_first_occurrence_f0c4f2.item -> contains_d42dce.result\n        contains_d42dce.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) first_repeated_59bc6e root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the first repeated character in a given string.\") FirstRepeat {\n        in(x: -530, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -432, y: 620) characters_d42dce root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_aabb6e root.Std_k98ojb.Strings.Contains {}\n        tolower_7b3b7b.output -> contains_aabb6e.input\n        input_ai -> tolower_7b3b7b.input\n        characters_d42dce.characters -> contains_aabb6e.contains\n        1 -> contains_aabb6e.contains\n        contains_aabb6e.result -> output_ai\n    }\n\n    \n\n    instance(x: -67, y: 30) FirstRepeat_e54b7f root.main.FirstRepeat {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -1059, y: -696) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 340, y: 77) map_0c2a8f root.Std_k98ojb.Iteration.Map {\n            handler: \"it => [it, count(it)]\"\n        }\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first, count]\n        instance(x: -432, y: -620) filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"count == 2\"\n        }\n        instance(x: -978, y: -566) reduce_7f3ee6 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -1191, y: -492) firstitem_d831ca root.Std_k98ojb.List.FirstItem {}\n        output_ai -> firstitem_d831ca.item\n    }\n\n    \n\n    instance(x: -179, y: 30) first_repeated_59bc6e root.main.first_repeated {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a sorted array.\") second_smallest {\n        in(x: -102, y: 23, name: \"list\") property(List) list_8a2f0e\n\n        out(x: 1123, y: -28, name: \"output\") property(Number) output_e7c4d1\n\n        instance(x: 94, y: -105) seconditem_8b6cd9 root.Std_k98ojb.List.SecondItem {}\n        getter(x: 0, y: 0, name: \"getter_5e6a2c\") getter_5e6a2c = index\n        setter(x: 118, y: -158, name: \"setter_d3d5f1\") setter_d3d5f1 = index\n        instance(x: 92, y: -22) less_than_a4b8cd root.Std_k98ojb.Logic.LessThan {}\n        list_8a2f0e -> seconditem_8b6cd9.items\n        getter_5e6a2c.value -> output_e7c4d1\n        seconditem_8b6cd9.index -> setter_d3d5f1.new_value\n        less_than_a4b8cd.left -> setter_d3d5f1.first\n        list_8a2f0e[1] -> less_than_a4b8cd.right\n        less_than_a4b8cd.result -> setter_d3d5f1.predicate\n    }\n\n    \n\n    instance(x: -67, y: 45) second_smallest_f6c7e9 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a given list.\") second_smallest {\n        in(x: 5, y: -83, name: \"list\") property(List) list_4e2f1d\n\n        out(x: 0, y: -88, name: \"output\") property(Number) output_8c7b95\n\n        instance(x: -1069, y: 34, name: \"second_list\") property(List) second_list_6a3f71\n        instance(x: -1095, y: -69, name: \"first_list\") property(List) first_list_e2d4e8\n        instance(x: 0, y: 0) ifexpression_b7c7b1 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: -104) count_5f6f9b root.Std_k98ojb.Std.Count {}\n        list_4e2f1d -> first_list_e2d4e8.items\n        second_list_6a3f71 -> ifexpression_b7c7b1.items\n        first_list_e2d4e8.length -> count_5f6f9b.count\n        instance(x: -1100, y: 34) min_8c9f55 root.Std_k98ojb.Math.Min {}\n        list_4e2f1d -> min_8c9f55.values\n        output_8c7b95 -> min_8c9f55.result\n    }\n\n    \n\n    instance(x: -69, y: 43) second_smallest_5a0e6a root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a given list.\") second_smallest {\n        in(x: -1098, y: 2, name: \"list\") property(List) list_3a9e4f\n\n        out(x: 0, y: -1, name: \"output\") property(Number) output_e6d7b5\n\n        instance(x: -1028, y: -104, name: \"first_smallest\") Std.If {}\n        instance(x: -1002, y: -72, name: \"second_smallest_candidate\") Std.If {}\n        instance(x: 0, y: -67, name: \"third_smallest_candidate\") Std.If {}\n        list_3a9e4f -> first_smallest.items\n        list_3a9e4f -> second_smallest_candidate.items\n        list_3a9e4f -> third_smallest_candidate.items\n        0 -> first_smallest.then\n        1 -> first_smallest.else\n        -1 -> second_smallest_candidate.then\n        2 -> second_smallest_candidate.else\n        -2 -> third_smallest_candidate.then\n        3 -> third_smallest_candidate.else\n        list_3a9e4f -> Std.CallFunction(\"Std.IfExpression\")\n        Std.CallFunction(\"Std.IfExpression\") {\n            expression: \"first_smallest.value < second_smallest_candidate.value\"\n        }\n        second_smallest_candidate.item -> output_e6d7b5\n    }\n\n    \n\n    instance(x: 104, y: -59) second_smallest_9f5c3e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -1049, y: -509, name: \"list\") property(List) list_6a8e5f\n\n        out(x: 1112, y: -1, name: \"min\") property(Number) min_e4d3c7\n        out(x: 1120, y: -1, name: \"second_min\") property(Number) second_min_c9b4df\n\n        instance(x: 1048, y: -365) find_7fdd2a root.Std_k98ojb.Iteration.Find {}\n        instance(x: -109, y: 27, name: \"first\") property(Number) first_a3d4e3\n        instance(x: 1015, y: 35, name: \"second\") property(Number) second_7fdd2a\n        list_6a8e5f -> find_7fdd2a.items\n        func() {\n            in(x: -110, y: 22, name: \"current\") property(Number) current_1a4d9b\n\n            out(x: 1120, y: -1, name: \"\") property(Number) _e5c3d6\n\n            instance(x: 1052, y: -28) less_than_c2f7ca root.Std_k98ojb.Math.LessThan {}\n            instance(x: 1014, y: -49, name: \"next\") property(Number) next_9a0a8e\n            first_a3d4e3 -> less_than_c2f7ca.left\n            current_1a4d9b -> less_than_c2f7ca.right\n            less_than_c2f7ca.result -> _e5c3d6\n        } -> find_7fdd2a.predicate\n        func() {\n            in(x: -110, y: 22, name: \"current\") property(Number) current_1a4d9b\n\n            out(x: 1120, y: -1, name: \"\") property(Number) _e5c3d6\n\n            instance(x: 1052, y: -28) less_than_c2f7ca root.Std_k98ojb.Math.LessThan {}\n            next_9a0a8e -> less_than_c2f7ca.left\n            current_1a4d9b -> less_than_c2f7ca.right\n            less_than_c2f7ca.result -> _e5c3d6\n        } -> second_7fdd2a.predicate\n        find_7fdd2a.item -> second_min_c9b4df\n    }\n\n    \n\n    instance(x: -63, y: 47) second_smallest_e0c1af root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -1053, y: 2, name: \"list\") property(List) list_4d8a95\n\n        out(x: 0, y: 0, name: \"\") property(Number) output_b1c6e9\n\n        instance(x: -1035, y: 18) seconditem_7fdd3b root.Std_k98ojb.List.SecondItem {}\n        data_instance(x: -1048, y: 11) data_c4a0d2  = [first, second]\n        instance(x: -1029, y: 25) length_a6c5e1 root.Std_k98ojb.List.Length {}\n        list_4d8a95 -> seconditem_7fdd3b.list\n        firstitem_7fdd3b.item -> data_c4a0d2.first\n        length_a6c5e1.length -> sub_f133b2.first\n        2 -> sub_f133b2.second\n        sub_f133b2.result -> seconditem_7fdd3b.index\n    }\n\n    \n\n    instance(x: -108, y: 46) second_smallest_d0e0d8 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a given list.\") second_smallest {\n        in(x: -102, y: 234, name: \"list\") property(List) list_8d5f3e\n\n        out(x: -101, y: 221, name: \"output\") property(Number) output_f7bdf2\n\n        instance(x: 0, y: 0) second_smallest_num root.Std_k98ojb.Std.IfExpression {}\n        list_8d5f3e -> second_smallest_num.items\n        func() {\n            in(x: -103, y: -24, name: \"a\") property(Number) a_9c4a2f\n\n            out(x: -101, y: 221, name: \"\") property(Number) _7dd980\n\n            instance(x: -105, y: -15) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {}\n            a_9c4a2f -> ifexpression_e38995.gen_0\n            list_8d5f3e[1] -> ifexpression_e38995.gen_1\n            ifexpression_e38995.then -> _7dd980.execute\n            0 -> _7dd980.new_value\n        } -> second_smallest_num.then\n        func() {\n            in(x: -103, y: -24, name: \"a\") property(Number) a_9c4a2f\n\n            out(x: -101, y: 221, name: \"\") property(Number) _7dd980\n\n            instance(x: 104, y: -15) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {}\n            a_9c4a2f -> ifexpression_e38995.gen_0\n            list_8d5f3e[1] -> ifexpression_e38995.gen_1\n            ifexpression_e38995.then -> _7dd980.execute\n            0 -> _7dd980.new_value\n        } -> second_smallest_num.else\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_f6e8f9 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a sorted array.\") second_smallest {\n        in(x: -108, y: 0, name: \"list\") property(List) list_5e4a3f\n\n        out(x: -114, y: 85, name: \"secondSmallest\") property(Number) second_smallest_7c2d8b\n\n        instance(x: 97, y: 70) find_second_f8c9df root.Std_k98ojb.Iteration.Find {}\n        list_5e4a3f -> find_second_f8c9df.items\n        func() {\n            in(x: -110, y: 0, name: \"current\") property(Number) current_b6d1db\n\n            out(x: -114, y: 85, name: \"\") property(Number) _7dd980\n\n            instance(x: 95, y: 70) equal_5a9e3b root.Std_k98ojb.Logic.Equal {}\n            instance(x: 96, y: -11, name: \"first\") property(Number) first_c1d4f2\n            instance(x: 97, y: 85) lessThan_d0c8db root.Std_k98ojb.Math.LessThan {}\n            find_second_f8c9df.item -> equal_5a9e3b.left\n            current_b6d1db -> equal_5a9e3b.right\n            first_c1d4f2 -> lessThan_d0c8db.left\n            0 -> lessThan_d0c8db.right\n            lessThan_d0c8db.result -> _7dd980\n        } -> find_second_f8c9df.predicate\n        func() {\n            in(x: -109, y: 0, name: \"current\") property(Number) current_b6d1db\n\n            out(x: -114, y: 85, name: \"\") property(Number) _7dd980\n\n            instance(x: 95, y: 70) equal_5a9e3b root.Std_k98ojb.Logic.Equal {}\n            instance(x: 96, y: -11, name: \"first\") property(Number) first_c1d4f2\n            find_second_f8c9df.item -> equal_5a9e3b.right\n            current_b6d1db -> equal_5a9e3b.left\n            lessThan_d0c8db.result -> _7dd980\n        } -> find_second_f8c9df.predicate\n    }\n\n    \n\n    instance(x: -63, y: 69) second_smallest_e4d2f0 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a given list.\") second_smallest {\n        in(x: -101, y: 2, name: \"list\") property(List) list_9f6a3e\n\n        out(x: 1035, y: -64, name: \"output\") property(Number) output_e5d7b8\n\n        instance(x: 0, y: 0) map_1e8f2c root.Std_k98ojb.Iteration.Map {}\n        list_9f6a3e -> map_1e8f2c.items\n        func() {\n            in(x: -101, y: -36, name: \"x\") property(Number) x_0d4a43\n\n            out(x: 1035, y: -64, name: \"\") property(Number) _9edc7b\n\n            instance(x: 1, y: -22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n            x_0d4a43 -> pow_584bfd.x\n            2 -> pow_584bfd.y\n            pow_584bfd.result -> _9edc7b\n        } -> map_1e8f2c.handler\n        instance(x: -101, y: 6) less_4c3d0a root.Std_k98ojb.Math.LessThan {}\n        instance(x: -101, y: -24) if_7c284f root.Std_k98ojb.Std.If {}\n        map_1e8f2c.output_list -> second_smallest_node.output\n        x_0d4a43 -> less_4c3d0a.left\n        1035 -> less_4c3d0a.right\n        less_4c3d0a.result -> if_7c284f.predicate\n        list_9f6a3e -> if_7c284f.items\n        map_1e8f2c.output_list -> second_smallest_node.output\n        x_0d4a43 -> if_7c284f.item\n        1035 -> if_7c284f.right\n        if_7c284f.result -> _9edc7b\n    }\n\n    \n\n    instance(x: -67, y: 49) second_smallest_f3e6f0 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a sorted array.\") second_smallest {\n        in(x: -101, y: -74, name: \"list\") property(List) list_3e8d6a\n\n        out(x: 0, y: -68, name: \"output\") property(Number) output_b1b4f2\n\n        instance(x: 91, y: -105) seconditem_7c9cd4 root.Std_k98ojb.List.SecondItem {}\n        instance(x: -46, y: -76, name: \"first_smallest\") Std.If {}\n        instance(x: 0, y: -62, name: \"min_num\") Std.If {}\n        list_3e8d6a -> seconditem_7c9cd4.items\n        first_smallest.then -> min_num.execute\n        -1 -> min_num.new_value\n        first_smallest.else -> min_num.execute\n        list_3e8d6a -> min_num.list\n        min_num.item -> output_b1b4f2\n    }\n\n    \n\n    instance(x: 103, y: 43) second_smallest_5aebd9 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -1048, y: -528, name: \"list\") property(List) list_5a0f6e\n\n        out(x: 123, y: -1, name: \"number\") property(Number) number_4d9b45\n\n        instance(x: 92, y: 64) min_8c7f2a root.Std_k98ojb.Math.Min {}\n        instance(x: 93, y: -24, name: \"output\") property(Number) output_3e0d1d\n        instance(x: -109, y: -105) second_6d4a5e root.Std_k98ojb.Math.Min {}\n        list_5a0f6e -> min_8c7f2a.values\n        min_8c7f2a.result -> output_3e0d1d\n        list_5a0f6e -> second_6d4a5e.values\n        second_6d4a5e.result -> number_4d9b45\n    }\n\n    \n\n    instance(x: 109, y: -67) second_smallest_d3c5b2 root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_RAG_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 15933,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds if two lists have at least one common element.\") has_common {\n        in(x: -499, y: 4, name: \"list1\") property(List) list_3a5d14\n        in(x: -509, y: -24, name: \"list2\") property(List) list_c0e6b8\n\n        out(x: 1239, y: -27, name: \"output\") property(Bool) output_4f1c45\n\n        instance(x: 76, y: 23, name: \"intersection\") Sets_Difference root.Std_k98ojb.Sets.Difference {}\n        list_c0e6b8 -> intersection.left\n        list_3a5d14 -> intersection.right\n        Sets_Difference.difference -> output_4f1c45\n    }\n\n    \n\n    instance(x: -47, y: 55) has_common_b7e2df root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -509, y: 3, name: \"list1\") property(List) list_5f4d8a\n        in(x: -514, y: 10, name: \"list2\") property(List) list_d1c6b9\n\n        out(x: 1239, y: 23, name: \"output\") property(Bool) output_1e3a0e\n\n        instance(x: -295, y: 33) contains_e5d4d8 root.Std_k98ojb.List.Contains {}\n        list_5f4d8a -> contains_e5d4d8.list\n        list_d1c6b9 -> contains_e5d4d8.item\n        contains_e5d4d8.is_contained -> output_1e3a0e\n    }\n\n    \n\n    instance(x: -292, y: 34) has_common_f7f5a2 root.main.has_common {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common {\n        in(x: -527, y: 18, name: \"list1\") property(List) list_8e2d9a\n        in(x: -156, y: -121, name: \"list2\") property(List) list_f4f0b5\n\n        out(x: 1223, y: -50, name: \"output\") property(Bool) output_e7c6eb\n\n        instance(x: 246, y: -25) intersection_8a1f77 root.Std_k98ojb.Sets.Intersection {}\n        list_8e2d9a -> intersection_8a1f77.left\n        list_f4f0b5 -> intersection_8a1f77.right\n        intersection_8a1f77.intersect -> output_e7c6eb\n    }\n\n    \n\n    instance(x: -292, y: 49) has_common_b3d9a1 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"returns true if two lists have at least one common element.\") has_common_element {\n        in(x: -509, y: 1, name: \"list1\") property(List) list_0a3d2f\n        in(x: -515, y: -23, name: \"list2\") property(List) list_b4b6c5\n\n        out(x: 1039, y: -22, name: \"output\") property(Bool) output_e1e7df\n\n        instance(x: -292, y: -24) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_0a3d2f -> contains_32727d.list\n        list_b4b6c5 -> contains_32727d.item\n        contains_32727d.is_contained -> output_e1e7df\n    }\n\n    \n\n    instance(x: -41, y: 55) has_common_element_6a0f2 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether two lists have any common elements.\") has_common_element {\n        in(x: -499, y: 18, name: \"list1\") property(List) list_9f8d6a\n        in(x: -475, y: -122, name: \"list2\") property(List) list_b0c4eb\n\n        out(x: 1057, y: -48, name: \"output\") property(Bool) output_d1e5af\n\n        instance(x: -304, y: 76) intersection_8b1f6d root.Std_k98ojb.Sets.Intersection {}\n        list_9f8d6a -> intersection_8b1f6d.left\n        list_b0c4eb -> intersection_8b1f6d.right\n        intersection_8b1f6d.intersect -> output_d1e5af\n    }\n\n    \n\n    instance(x: -92, y: 41) has_common_element_c9f7a3 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -493, y: 4, name: \"list1\") property(List) list_5e6f0b\n        in(x: -484, y: 19, name: \"list2\") property(List) list_d7c3d9\n\n        out(x: 1018, y: -46, name: \"output\") property(Bool) output_f9cd23\n\n        instance(x: 1031, y: 11) intersection_4f6e0a root.Std_k98ojb.Sets.Intersection {}\n        list_5e6f0b -> intersection_4f6e0a.left\n        list_d7c3d9 -> intersection_4f6e0a.right\n        intersection_4f6e0a.intersect -> output_f9cd23\n    }\n\n    \n\n    instance(x: -46, y: 64) has_common_5bdf8b root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if two lists have at least one common element.\") has_common {\n        in(x: -527, y: 16, name: \"list1\") property(List) list_3d2f9a\n        in(x: -528, y: 17, name: \"list2\") property(List) list_b7c4e5\n\n        out(x: 1238, y: -56, name: \"output\") property(Bool) output_8b9f21\n\n        instance(x: 104, y: 44) contains_e3d1d0 root.Std_k98ojb.List.Contains {}\n        list_3d2f9a -> contains_e3d1d0.list\n        list_b7c4e5 -> contains_e3d1d0.item\n        contains_e3d1d0.is_contained -> output_8b9f21\n    }\n\n    \n\n    instance(x: -292, y: 64) has_common_d4a6d2 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -475, y: 2, name: \"list1\") property(List) list_9a6f8e\n        in(x: -479, y: 3, name: \"list2\") property(List) list_0c5a4d\n\n        out(x: 121, y: 74, name: \"output\") property(Bool) output_7bfc85\n\n        instance(x: -294, y: 73) intersection_c9e1f8 root.Std_k98ojb.Sets.Intersection {}\n        list_9a6f8e -> intersection_c9e1f8.left\n        list_0c5a4d -> intersection_c9e1f8.right\n        intersection_c9e1f8.intersection -> output_7bfc85\n    }\n\n    \n\n    instance(x: -83, y: 49) has_common_element_6a3f1 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -475, y: 16, name: \"list1\") property(List) list_4e8f9a\n        in(x: -479, y: 21, name: \"list2\") property(List) list_6d7f0b\n\n        out(x: 1045, y: -24, name: \"output\") property(Bool) output_b4c6d3\n\n        instance(x: 92, y: -33) has_item_9a7e1f root.Std_k98ojb.List.Contains {}\n        list_4e8f9a -> has_item_9a7e1f.list\n        list_6d7f0b -> has_item_9a7e1f.item\n        has_item_9a7e1f.is_contained -> output_b4c6d3\n    }\n\n    \n\n    instance(x: -34, y: 55) has_common_element_d2d2d5 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if two lists have at least one common element.\") has_common {\n        in(x: -469, y: 19, name: \"list1\") property(List) list_5d6a0b\n        in(x: -475, y: 23, name: \"list2\") property(List) list_9c3f7e\n\n        out(x: 1004, y: 11, name: \"output\") property(Bool) output_a1f8db\n\n        instance(x: -44, y: 14) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list_5d6a0b -> intersection_c7c7e6.left\n        list_9c3f7e -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> output_a1f8db\n    }\n\n    \n\n    instance(x: -35, y: 53) has_common_e4b5a2 root.main.has_common {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -275, y: 3, name: \"list\") property(List) list_5d1a2e\n\n        out(x: 1239, y: -15, name: \"output\") property(Bool) output_a4b6c7\n\n        instance(x: -91, y: 20) has_consecutive_numbers_8f0d3 root.Std_k98ojb.List.HasConsecutiveNumbers {}\n        list_5d1a2e -> has_consecutive_numbers_8f0d3.list\n        has_consecutive_numbers_8f0d3.result -> output_a4b6c7\n    }\n\n    \n\n    instance(x: -69, y: 53) has_consecutive_numbers_dff9d root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") contain_consecutive {\n        in(x: -292, y: 2, name: \"list\") property(List) list_9e4f8d\n\n        out(x: 1023, y: 64, name: \"output\") property(Bool) output_a6a7c9\n\n        instance(x: 73, y: 71) length_0b9cd2 root.Std_k98ojb.List.Length {}\n        list_9e4f8d -> length_0b9cd2.list\n        length_0b9cd2.length -> output_a6a7c9\n        instance(x: -29, y: 63) for_d2c0b3 root.Std_k98ojb.Std.For {}\n        list_9e4f8d -> for_d2c0b3.items\n        for_d2c0b3.index -> length_0b9cd2.gen_1\n        instance(x: -23, y: 69) next_fdb5df root.Std_k98ojb.Std.For {}\n        for_d2c0b3.item -> next_fdb5df.item\n        instance(x: 105, y: 64) less-than-or-equal_b9f6a4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        less-than-or-equal_b9f6a4.result -> output_a6a7c9\n        next_fdb5df.next -> less-than-or-equal_b9f6a4.left\n        length_0b9cd2.length - 1 -> less-than-or-equal_b9f6a4.right\n        for_d2c0b3.item -> less-than-or-equal_b9f6a4.value\n    }\n\n    \n\n    instance(x: -44, y: 43) contain_consecutive_5d7e8f root.main.contain_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -275, y: 2, name: \"list\") property(List) list_4b3f5e\n\n        out(x: 1138, y: -7, name: \"output\") property(Bool) output_9c5d35\n\n        instance(x: -93, y: -15) count_b1a2d6 root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: -10) for_c3e8f2 root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: -21) next_5c9cd4 root.Std_k98ojb.Std.Next {}\n        instance(x: 0, y: -22) prev_6a1d7d root.Std_k98ojb.Std.Previous {}\n        function_8f1e3b root.Std_k98ojb.Iteration.Reduce {}\n        list_4b3f5e -> for_c3e8f2.items\n        for_c3e8f2.item -> prev_6a1d7d.new_value\n        prev_6a1d7d.prev -> next_5c9cd4.item\n        function_8f1e3b.input -> count_b1a2d6\n        0 -> function_8f1e3b.index\n        for_c3e8f2.onItem -> function_8f1e3b.execute\n        prev_6a1d7d.prev -> prev_6a1d7d.new_value\n        next_5c9cd4.next -> count_b1a2d6.item\n        list_4b3f5e -> for_c3e8f2.index\n        function_8f1e3b.output_list -> output_9c5d35\n    }\n\n    \n\n    instance(x: -83, y: 11) is_consecutive_7a0f43 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -246, y: 2, name: \"list\") property(List) list_e5e4f1\n\n        out(x: 1239, y: -3, name: \"output\") property(Bool) output_9d8a95\n\n        instance(x: -69, y: -15) for_d0c7b6 root.Std_k98ojb.Std.For {}\n        list_e5e4f1 -> for_d0c7b6.items\n        func() {\n            in(x: -121, y: 34, name: \"current\") property(Number) current_8d3a9e\n\n            out(x: 1022, y: 45, name: \"\") property(Number) _7f7a4d\n\n            instance(x: 92, y: 40) next_d6c0a1 root.Std_k98ojb.Std.For {}\n            instance(x: -28, y: 48) subtract_c8e5f2 root.Std_k98ojb.Math.Sub {}\n            current_8d3a9e -> subtract_c8e5f2.first\n            current_8d3a9e -> subtract_c8e5f2.second\n            subtract_c8e5f2.result -> _7f7a4d\n        } -> for_d0c7b6.handler\n        for_d0c7b6.item -> has_consecutive_numbers.output\n    }\n\n    \n\n    instance(x: -63, y: 11) has_consecutive_numbers_8dd9e5 root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") has_consecutive_nums {\n        in(x: -294, y: 155, name: \"list\") property(List) list_b9d4c8\n\n        out(x: 1235, y: -10, name: \"output\") property(Bool) output_6a7e3b\n\n        instance(x: 104, y: 145) length_6e87f2 root.Std_k98ojb.List.Length {}\n        list_b9d4c8 -> length_6e87f2.list\n        length_6e87f2.length -> output_6a7e3b\n        instance(x: -0, y: 93) has_consecutive_num_5df8f1 root.Std_k98ojb.Iteration.HasConsecutiveNum {}\n        list_b9d4c8 -> has_consecutive_num_5df8f1.items\n        has_consecutive_num_5df8f1.result -> output_6a7e3b\n    }\n\n    \n\n    instance(x: 55, y: 23) has_consecutive_nums_f0d9c6 root.main.has_consecutive_nums {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") conseq_nums {\n        in(x: -278, y: 4, name: \"list\") property(List) list_8e6a2f\n\n        out(x: 1219, y: -15, name: \"output\") property(Bool) output_e3d7c5\n\n        instance(x: -67, y: 10) count_c9b0e1 root.Std_k98ojb.Std.Count {}\n        instance(x: 194, y: 34) for_4a8f6c root.Std_k98ojb.Std.For {}\n        instance(x: 1013, y: 21) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -43, y: 59) lessthandis_0e2d5 root.Std_k98ojb.Logic.LessThan {}\n        lessthandis_0e2d5.result -> output_e3d7c5\n        count_c9b0e1.reset -> for_4a8f6c.reset\n        for_4a8f6c.index -> contains_32727d.index\n        1 -> contains_32727d.count\n        list_8e6a2f -> for_4a8f6c.items\n        lessthandis_0e2d5.left -> contains_32727d.item\n        list_8e6a2f[for_4a8f6c.index] - 1 -> lessthandis_0e2d5.right\n    }\n\n    \n\n    instance(x: -59, y: 44) conseq_nums_d9dd3f root.main.conseq_nums {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") has_consecutive_nums {\n        in(x: -275, y: 0, name: \"list\") property(List) list_2d6a5f\n\n        out(x: 1049, y: 4, name: \"output\") property(Bool) output_3e7c1b\n\n        instance(x: 93, y: -23, name: \"i\") for_c8cd0e root.Std_k98ojb.Std.For {}\n        instance(x: 191, y: -21) ifexpression_4a9d6f root.Std_k98ojb.Std.IfExpression {}\n        list_2d6a5f -> for_c8cd0e.items\n        for_c8cd0e.index -> ifexpression_4a9d6f.gen_1\n        0 -> ifexpression_4a9d6f.gen_0\n        1 -> ifexpression_4a9d6f.gen_2\n        list_2d6a5f -> for_c8cd0e.item\n        for_c8cd0e.next -> ifexpression_4a9d6f.execute\n        list_2d6a5f -> for_c8cd0e.reset\n        i -> ifexpression_4a9d6f.input\n        1 -> ifexpression_4a9d6f.input\n        has_consecutive_nums.result -> output_3e7c1b\n    }\n\n    \n\n    instance(x: -67, y: 11) has_consecutive_nums_2d0e21 root.main.has_consecutive_nums {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -275, y: 2, name: \"list\") property(List) list_9d4f5e\n\n        out(x: 1018, y: -15, name: \"output\") property(Bool) output_6c7a0b\n\n        instance(x: -69, y: -20) for_3c6d21 root.Std_k98ojb.Std.For {}\n        list_9d4f5e -> for_3c6d21.items\n        func() {\n            in(x: -111, y: 44, name: \"i\") property(Number) i_1a4a2a\n\n            out(x: 1068, y: -23, name: \"\") property(Bool) _7f9e5c\n\n            instance(x: 93, y: -10) next_6d2b21 root.Std_k98ojb.Std.For {}\n            i_1a4a2a -> next_6d2b21.index\n        } -> for_3c6d21.handler\n        for_3c6d21.item -> is_consecutive.handler\n        for_3c6d21.done -> output_6c7a0b\n        for_3c6d21.next -> is_consecutive.continue\n    }\n\n    \n\n    instance(x: -92, y: 44) is_consecutive_2e4f5 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -292, y: 4, name: \"list\") property(List) list_9d3a0e\n\n        out(x: 1055, y: -8, name: \"output\") property(Bool) output_7c6f1b\n\n        instance(x: -85, y: -19) for_c6a4ec root.Std_k98ojb.Std.For {}\n        list_9d3a0e -> for_c6a4ec.items\n        for_c6a4ec.index -> has_consecutive_numbers.gen_2\n        for_c6a4ec.item -> has_consecutive_numbers.gen_1\n        func() {\n            in(x: -19, y: 43, name: \"current\") property(Number) current_e9d3f5\n\n            out(x: 1057, y: -13, name: \"\") property(Bool) _e6c9b3\n\n            instance(x: 93, y: 39) lessthandisorequal_8d3a1c root.Std_k98ojb.Math.LessThanOrEqual {}\n            instance(x: 103, y: 45) next_c7f2db root.Std_k98ojb.Std.For {}\n            current_e9d3f5 -> lessthandisorequal_8d3a1c.left\n            list_9d3a0e[for_c6a4ec.index] -> lessthandisorequal_8d3a1c.right\n            2 -> next_c7f2db.next\n            current_e9d3f5 -> next_c7f2db.item\n            lessthandisorequal_8d3a1c.result -> _e6c9b3\n        } -> for_c6a4ec.handler\n        has_consecutive_numbers.output -> _e6c9b3\n    }\n\n    \n\n    instance(x: -69, y: 11) has_consecutive_numbers_2f7f0d root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -292, y: 23, name: \"list\") property(List) list_0e8a4d\n\n        out(x: 1043, y: 15, name: \"output\") property(Bool) output_9f2c7b\n\n        instance(x: 94, y: -10) for_d26972 root.Std_k98ojb.Std.For {}\n        list_0e8a4d -> for_d26972.items\n        func() {\n            in(x: -121, y: -39, name: \"current\") property(Number) current_c1c5f7\n\n            out(x: 546, y: -40, name: \"\") property(Number) _6b0e2a\n\n            instance(x: 92, y: 33) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            for_d26972.onItem -> modulo_1088d5.execute\n            current_c1c5f7 -> modulo_1088d5.value\n            modulo_1088d5.divisor -> _6b0e2a\n            if (current_c1c5f7 + 1 == _6b0e2a) -> for_d26972.next\n        } -> for_d26972.handler\n        for_d26972.done -> output_9f2c7b\n    }\n\n    \n\n    instance(x: -63, y: 46) is_consecutive_a4d3eb root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -173, y: 156, name: \"main_list\") property(List) main_list_1a4e2f\n        in(x: -193, y: 21, name: \"sub_list\") property(List) sub_list_e0c5b8\n\n        out(x: 546, y: 69, name: \"output\") property(Bool) output_6d7c42\n\n        instance(x: 94, y: -105) is_slice_9e2f1a root.Std_k98ojb.Iteration.IsSlice {}\n        main_list_1a4e2f -> is_slice_9e2f1a.left\n        sub_list_e0c5b8 -> is_slice_9e2f1a.right\n        is_slice_9e2f1a.is_slice -> output_6d7c42\n    }\n\n    \n\n    instance(x: 48, y: -37) is_sublist_d4a5c1 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -294, y: -206, name: \"main_list\") property(List) main_list_1f8a6e\n        in(x: -123, y: -83, name: \"sub_list\") property(List) sub_list_9d0c3b\n\n        out(x: 1032, y: -110, name: \"output\") property(Bool) output_c5e7ec\n\n        instance(x: -69, y: -206) length_4fba21 root.Std_k98ojb.List.Length {}\n        main_list_1f8a6e -> length_4fba21.list\n        sub_list_9d0c3b -> length_4fba21.length\n        length_4fba21.length -> output_c5e7ec\n        0 -> output_c5e7ec\n        main_list_1f8a6e -> length_4fba21.list\n        sub_list_9d0c3b -> length_4fba21.items\n        for_d26972 -> root.Std_k98ojb.Iteration.For {}\n        instance(x: -23, y: 19) contains_5c7c63 root.Std_k98ojb.List.Contains {}\n        for_d26972.item -> contains_5c7c63.item\n        sub_list_9d0c3b -> contains_5c7c63.input\n        output_c5e7ec -> contains_5c7c63.result\n    }\n\n    \n\n    instance(x: 48, y: -67) is_sublist_e1f2a8 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -294, y: 155, name: \"main\") property(List) main_5a1f8e\n        in(x: -123, y: -81, name: \"sub\") property(List) sub_7b4d2c\n\n        out(x: 555, y: -69, name: \"output\") property(Bool) output_9d3d23\n\n        instance(x: -45, y: -103) filter_d5e4a1 root.Std_k98ojb.Query.Filter {}\n        instance(x: 142, y: 62) zip_e0d8c7 root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 275, y: 69) length_6e87f2 root.Std_k98ojb.List.Length {}\n        list_9d3d23 -> filter_d5e4a1.items\n        func() {\n            in(x: -121, y: -37, name: \"current\") property(Number) current_f0c7e8\n\n            out(x: 698, y: 85, name: \"\") property(Bool) bool_a9b3f2\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_f0c7e8 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_a9b3f2\n        } -> filter_d5e4a1.predicate\n        func() {\n            in(x: -121, y: -37, name: \"current\") property(Number) current_f0c7e8\n\n            out(x: 698, y: 85, name: \"\") property(Bool) bool_a9b3f2\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_f0c7e8 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_a9b3f2\n        } -> zip_e0d8c7.handler\n        sub_7b4d2c -> length_6e87f2.list\n        length_6e87f2.length -> zip_e0d8c7.length\n        1 -> zip_e0d8c7.start\n        zip_e0d8c7.zipped -> filter_d5e4a1.output_list\n        filter_d5e4a1.result -> output_9d3d23\n    }\n\n    \n\n    instance(x: -123, y: -81, name: \"sub\") sub_node root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Check whether a list is a sublist of another list.\") is_sublist {\n        in(x: -294, y: 146, name: \"main_list\") property(List) main_list_0a3e9b\n        in(x: -129, y: -13, name: \"sub_list\") property(List) sub_list_b5c7d4\n\n        out(x: 439, y: -97, name: \"output\") property(Bool) output_e6f2eb\n\n        instance(x: -82, y: 155) contains_32727d root.Std_k98ojb.List.Contains {}\n        main_list_0a3e9b -> contains_32727d.list\n        sub_list_b5c7d4 -> contains_32727d.item\n        contains_32727d.is_contained -> output_e6f2eb\n    }\n\n    \n\n    instance(x: -67, y: 11) is_sublist_9a3e1b root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -176, y: 165, name: \"main_list\") property(List) main_list_a0f1e4\n        in(x: -192, y: 26, name: \"sub_list\") property(List) sub_list_6d9c3b\n\n        out(x: 1017, y: -108, name: \"output\") property(Bool) output_d2a5af\n\n        instance(x: 134, y: 170) length_6e87f2 root.Std_k98ojb.List.Length {}\n        main_list_a0f1e4 -> length_6e87f2.list\n        sub_list_6d9c3b -> length_6e87f2.list\n        length_6e87f2.length -> output_d2a5af\n        for_d26972 -> length_6e87f2.index\n        0 -> for_d26972.start\n        length_6e87f2.length -> for_d26972.end\n        list_7d8c85 -> for_d26972.items\n        sub_list_6d9c3b -> for_d26972.items\n        function_1a8a5d -> for_d26972.onItem\n        function_1a8a5d.item -> is_sublist_func\n    }\n\n    \n\n    instance(x: -92, y: 45) is_sublist_4f2c9b root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -245, y: 165, name: \"main_list\") property(List) list_3f4a6d\n        in(x: -261, y: -26, name: \"sublist\") property(List) list_a5e1c0\n\n        out(x: 540, y: -28, name: \"output\") property(Bool) output_8b2cd7\n\n        instance(x: 426, y: -303) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_a5e1c0 -> contains_32727d.item\n        list_3f4a6d -> contains_32727d.list\n        contains_32727d.is_contained -> output_8b2cd7\n    }\n\n    \n\n    instance(x: -67, y: 11) is_sublist_4e1c0 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -292, y: 155, name: \"main\") property(List) main_9a3f5\n        in(x: -294, y: 63, name: \"sublist\") property(List) sublist_e0c6d4\n\n        out(x: 555, y: 74, name: \"output\") property(Bool) output_c2f8cd\n\n        instance(x: 426, y: 72) contains_5e9b21 root.Std_k98ojb.List.Contains {}\n        sublist_e0c6d4 -> contains_5e9b21.item\n        main_9a3f5 -> contains_5e9b21.list\n        contains_5e9b21.is_contained -> output_c2f8cd\n    }\n\n    \n\n    instance(x: 48, y: -68) is_sublist_d7d6e1 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -193, y: 156, name: \"main_list\") property(List) main_list_9a5d1b\n        in(x: -195, y: -20, name: \"sublist\") property(List) sublist_c3f7c6\n\n        out(x: 555, y: 64, name: \"output\") property(Bool) output_8d6e0d\n\n        instance(x: -74, y: -19) contains_d9a1b4 root.Std_k98ojb.List.Contains {}\n        sublist_c3f7c6 -> contains_d9a1b4.item\n        main_list_9a5d1b -> contains_d9a1b4.list\n        contains_d9a1b4.is_contained -> output_8d6e0d\n    }\n\n    \n\n    instance(x: 48, y: -64) is_sublist_7c8f2a root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -245, y: 164, name: \"main_list\") property(List) main_list_8f9d0a\n        in(x: -292, y: -23, name: \"sub_list\") property(List) sub_list_6b3d5e\n\n        out(x: 509, y: 67, name: \"output\") property(Bool) output_e85c21\n\n        instance(x: -83, y: 167) contains_f0a2f8 root.Std_k98ojb.List.Contains {}\n        sub_list_6b3d5e -> contains_f0a2f8.item\n        main_list_8f9d0a -> contains_f0a2f8.list\n        contains_f0a2f8.is_contained -> output_e85c21\n    }\n\n    \n\n    instance(x: 48, y: -37) is_sublist_6b7e4f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -173, y: 156, name: \"main_list\") property(List) main_list_0a6e3b\n        in(x: -191, y: -20, name: \"sub_list\") property(List) sub_list_8f1c9d\n\n        out(x: 446, y: -69, name: \"output\") property(Bool) output_b5d3eb\n\n        instance(x: 134, y: 165) zip_c6b2d0 root.Std_k98ojb.Iteration.Zip {}\n        main_list_0a6e3b -> zip_c6b2d0.left\n        sub_list_8f1c9d -> zip_c6b2d0.right\n        func() {\n            in(x: -191, y: -20, name: \"i\") property(Number) i_4d2fdd\n\n            out(x: 446, y: -69, name: \"\") property(Bool) _output_1c3e9b\n\n            instance(x: 133, y: 163) eq_6a0a66 root.Std_k98ojb.Logic.Equal {}\n            sub_list_8f1c9d[i_4d2fdd] -> eq_6a0a66.left\n            main_list_0a6e3b[i_4d2fdd] -> eq_6a0a66.right\n            eq_6a0a66.result -> _output_1c3e9b\n        } -> zip_c6b2d0.handler\n        func() {\n            in(x: -191, y: -20, name: \"i\") property(Number) i_4d2fdd\n\n            out(x: 446, y: -69, name: \"\") property(Bool) _output_1c3e9b\n\n            instance(x: -5, y: 164) less_than_6eb7a root.Std_k98ojb.Math.LessThanOrEqual {}\n            sub_list_8f1c9d[i_4d2fdd] -> less_than_6eb7a.left\n            main_list_0a6e3b[i_4d2fdd] -> less_than_6eb7a.right\n            less_than_6eb7a.result -> _output_1c3e9b\n        } -> zip_c6b2d0.next\n    }\n\n    \n\n    instance(x: -83, y: 167) is_sublist_7f5e4b root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -446, y: 0, name: \"list\") property(List) list_4a5f3d\n        out(x: -1, y: -1, name: \"continue\") trigger() continue_e7b6c2\n\n        instance(x: 0, y: 0) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 47, y: 4) ifexpression_9f5e38 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 > current\"\n        }\n        getter(x: -13, y: 2, name: \"getter_e7a9c8\") getter_e7a9c8 = previous\n        setter(x: 46, y: 4) setter_e7a9c8 = previous\n        instance(x: 51, y: 0) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        for_d26972.item -> ifexpression_9f5e38.gen_1\n        -1 -> getter_e7a9c8.new_value\n        find_smallest_missing.execute -> setter_e7a9c8.execute\n        list_4a5f3d -> for_d26972.items\n        for_d26972.index -> ifexpression_9f5e38.gen_0\n        getat_ce2a48.itemAtIndex -> setter_e7a9c8.new_value\n        continue_e7b6c2 -> for_d26972.reset\n        for_d26972.onItem -> ifexpression_9f5e38.execute\n        ifexpression_9f5e38.then -> setter_e7a9c8.execute\n        list_4a5f3d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_e7a9c8.new_value\n    }\n\n    \n\n    instance(x: -85, y: 170) find_smallest_missing_6e5f3 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -442, y: 2, name: \"list\") property(List) list_3d5f8a\n        out(x: 0, y: -243, name: \"continue\") trigger() continue_eb5c1e\n\n        instance(x: 0, y: -240) for_d9df7 root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: -235, name: \"getter_5a2f6f\") getter_5a2f6f = previous\n        setter(x: 0, y: -250, name: \"setter_1e9d8c\") setter_1e9d8c = previous\n        instance(x: -240, y: -233) getat_d3df34 root.Std_k98ojb.List.GetAt {}\n        getter_5a2f6f.value -> getat_d3df34.list\n        0 -> getat_d3df34.index\n        getat_d3df34.itemAtIndex -> setter_1e9d8c.new_value\n        list_3d5f8a -> for_d9df7.items\n        for_d9df7.item -> ifexpression_eb7dd6.execute\n        -1 -> setter_1e9d8c.new_value\n        continue_eb5c1e -> for_d9df7.reset\n        for_d9df7.onItem -> ifexpression_eb7dd6.execute\n        ifexpression_eb7dd6.then -> setter_1e9d8c.execute\n        list_3d5f8a -> getat_d3df34.list\n        0 -> getat_d3df34.index\n        for_d9df7.item -> getat_d3df34.itemAtIndex\n        ifexpression_eb7dd6.value -> output_b1e5c2\n        setter_1e9d8c.continue -> for_d9df7.next\n    }\n\n    \n\n    instance(x: -236, y: 173) find_missing_f5f0c root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -442, y: 2, name: \"list\") property(List) list_f9d5e0\n\n        out(x: 3, y: 0, name: \"output\") property(Number) output_a1a6b4\n\n        instance(x: 13, y: 7) for_8fdd34 root.Std_k98ojb.Std.For {}\n        getter(x: -0, y: -124, name: \"getter_d9c3df\") getter_d9c3df = index\n        setter(x: 4, y: -243, name: \"setter_c1d2a8\") setter_c1d2a8 = index\n        instance(x: -245, y: -33) ifexpression_0f7b6e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 5, y: 173, name: \"getter_a3c4a2\") getter_a3c4a2 = previous\n        setter(x: -0, y: -122, name: \"setter_c1d2a8\") setter_5e8f6b = previous\n        instance(x: -275, y: 10) getat_7f9e43 root.Std_k98ojb.List.GetAt {}\n        ifexpression_0f7b6e.else -> getter_d9c3df.continue\n        ifexpression_0f7b6e.value -> output_a1a6b4\n        ifexpression_0f7b6e.then -> setter_c1d2a8.execute\n        list_f9d5e0 -> for_8fdd34.items\n        for_8fdd34.item -> ifexpression_0f7b6e.gen_2\n        for_8fdd34.index -> ifexpression_0f7b6e.gen_0\n        getter_a3c4a2.value -> ifexpression_0f7b6e.gen_1\n        for_8fdd34.onItem -> ifexpression_0f7b6e.execute\n        for_8fdd34.done -> getter_d9c3df.continue\n        for_8fdd34.item -> setter_c1d2a8.new_value\n        list_f9d5e0 -> getat_7f9e43.list\n        0 -> getat_7f9e43.index\n        getat_7f9e43.itemAtIndex -> setter_5e8f6b.new_value\n        find_smallest_missing.execute -> setter_5e8f6b.execute\n        setter_c1d2a8.continue -> for_8fdd34.reset\n        setter_5e8f6b.continue -> for_8fdd34.next\n    }\n\n    \n\n    instance(x: 0, y: -176) find_smallest_missing_4f9c7 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -456, y: 3, name: \"execute\") trigger() execute_4f1d5b\n        in(x: -476, y: 0, name: \"list\") property(List) list_f2e8a6\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_3c9c21\n        out(x: 1234, y: 147, name: \"output\") property(Number) output_1f0d14\n\n        instance(x: 753, y: -106) for_d2e7a3 root.Std_k98ojb.Std.For {}\n        instance(x: 342, y: -20) ifexpression_9c6c4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == n\"\n        }\n        getter(x: -0, y: -129, name: \"getter_1f8d3e\") getter_1f8d3e = previous\n        setter(x: 0, y: -242, name: \"setter_6a4b2c\") setter_6a4b2c = previous\n        instance(x: -281, y: -35) getat_a5f7e9 root.Std_k98ojb.List.GetAt {}\n        ifexpression_9c6c4c.else -> continue_3c9c21\n        ifexpression_9c6c4c.value -> output_1f0d14\n        ifexpression_9c6c4c.then -> setter_6a4b2c.execute\n        list_f2e8a6 -> for_d2e7a3.items\n        for_d2e7a3.item -> ifexpression_9c6c4c.gen_1\n        for_d2e7a3.index -> ifexpression_9c6c4c.gen_0\n        getter_1f8d3e.value -> ifexpression_9c6c4c.gen_2\n        for_d2e7a3.onItem -> ifexpression_9c6c4c.execute\n        for_d2e7a3.done -> continue_3c9c21\n        for_d2e7a3.item -> setter_6a4b2c.new_value\n        list_f2e8a6 -> getat_a5f7e9.list\n        0 -> getat_a5f7e9.index\n        getat_a5f7e9.itemAtIndex -> setter_1f8d3e.new_value\n        execute_4f1d5b -> setter_1f8d3e.execute\n        setter_1f8d3e.continue -> for_d2e7a3.reset\n        setter_6a4b2c.continue -> for_d2e7a3.next\n    }\n\n    \n\n    instance(x: 10, y: -174) find_smallest_missing_0df9e root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -446, y: -234, name: \"list\") property(List) list_0f2a4d\n\n        out(x: 1191, y: -231, name: \"output\") property(Number) output_7c6f5f\n\n        instance(x: 34, y: 93) for_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: -0, y: -123, name: \"getter_e8a1d4\") getter_e8a1d4 = previous\n        setter(x: 0, y: -121, name: \"setter_5e2c9f\") setter_5e2c9f = previous\n        instance(x: 46, y: 6) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"previous == current + 1\"\n        }\n        getter(x: 321, y: -20) getter_7a5d4e root.Std_k98ojb.List.FirstItem {}\n        list_0f2a4d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_e8a1d4.value -> ifexpression_875761.gen_1\n        ifexpression_875761.then -> setter_5e2c9f.execute\n        list_0f2a4d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_e8a1d4.new_value\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_e8a1d4.new_value\n        list_0f2a4d -> getat_ce2a48.list\n        1 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_e8a1d4.new_value\n        continue_a96db6 -> for_d26972.reset\n        ifexpression_875761.value -> output_7c6f5f\n        setter_5e2c9f.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -83, y: 151) find_missing_0a3d1b root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -446, y: 3, name: \"list\") property(List) list_b8a4b6\n\n        out(x: 1227, y: 0, name: \"continue\") trigger() continue_1c2e9d\n        out(x: 1209, y: -235, name: \"output\") property(Number) output_e5f3c3\n\n        instance(x: 55, y: 96) for_d7a5f6 root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 4) ifexpression_8f9e1d root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == list.length - 1\"\n        }\n        getter(x: 336, y: 164, name: \"getter_f5a7c2\") getter_f5a7c2 = index\n        setter(x: 0, y: -234, name: \"setter_8f9e1d\") setter_8f9e1d = index\n        instance(x: 0, y: 3) count_4c6d66 root.Std_k98ojb.Std.Count {}\n        list_b8a4b6 -> for_d7a5f6.items\n        for_d7a5f6.item -> ifexpression_8f9e1d.gen_2\n        for_d7a5f6.index -> ifexpression_8f9e1d.gen_0\n        count_4c6d66.reset -> continue_1c2e9d\n        list_b8a4b6.length -> count_4c6d66.count\n        count_4c6d66.value -> setter_8f9e1d.new_value\n        for_d7a5f6.onItem -> ifexpression_8f9e1d.execute\n        ifexpression_8f9e1d.then -> setter_8f9e1d.execute\n        list_b8a4b6[setter_8f9e1d.index] -> output_e5f3c3\n        for_d7a5f6.item -> setter_8f9e1d.new_value\n        ifexpression_8f9e1d.else -> continue_1c2e9d\n    }\n\n    \n\n    instance(x: 0, y: -245) find_missing_f4b9cd root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -475, y: 2, name: \"execute\") trigger() execute_1a9f6d\n        in(x: -484, y: 30, name: \"list\") property(List) list_b8e4c5\n\n        out(x: 1217, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1210, y: 147, name: \"output\") property(Number) output_8f2d23\n\n        instance(x: 742, y: 93) ifexpression_e4a5e3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 314, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 55, y: -226) less_than_aabb6e root.Std_k98ojb.Logic.LessThan {}\n        ifexpression_e4a5e3.else -> continue_a96db6\n        ifexpression_e4a5e3.value -> output_8f2d23\n        ifexpression_e4a5e3.then -> setter_9d4f1c.execute\n        list_b8e4c5 -> for_d26972.items\n        for_d26972.item -> ifexpression_e4a5e3.gen_2\n        for_d26972.index -> ifexpression_e4a5e3.gen_0\n        getter_b280eb.value -> ifexpression_e4a5e3.gen_1\n        for_d26972.onItem -> ifexpression_e4a5e3.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_b8e4c5 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_1a9f6d -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_fc79d5 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -456, y: 2, name: \"list\") property(List) list_9d3a1e\n\n        out(x: 1237, y: 5, name: \"output\") property(Number) output_ebef81\n\n        instance(x: 0, y: 0) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: -342, y: -20) less_than_e7d6e5 root.Std_k98ojb.Logic.LessThan {}\n        instance(x: 0, y: 0) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == n\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        less_than_e7d6e5.left -> list_9d3a1e\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        for_d26972.item -> ifexpression_875761.gen_1\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_2\n        less_than_e7d6e5.right -> ifexpression_875761.gen_3\n        list_9d3a1e -> getat_ce2a48.list\n        1 -> getat_ce2a48.index\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_9d3a1e -> less_than_e7d6e5.left\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_d26972.index -> setter_9d4f1c.new_value\n        continue_a96db6 -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_smallest_missing_fc79d5 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -475, y: 0, name: \"list\") property(List) list_2e9a3d\n        out(x: 1215, y: 7, name: \"output\") property(Number) output_1c4f8f\n\n        instance(x: 10, y: -386, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (n+1)/2\"\n        }\n        instance(x: 44, y: 0) for_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: -342, y: -394, name: \"getter_9d4f1c\") getter_9d4f1c = previous\n        setter(x: 0, y: -384, name: \"setter_6e7b4e\") setter_6e7b4e = previous\n        instance(x: 62, y: -225) less_than_6a8bfc root.Std_k98ojb.Math.LessThan {}\n        getter(x: 0, y: -387, name: \"getter_cc0721\") getter_cc0721 = list_firstItem\n        setter(x: 69, y: -120, name: \"setter_7e2b42\") setter_7e2b42 = list_lastItem\n        instance(x: 55, y: 5) ifexpression_6c15d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y + 1\"\n        }\n        getter(x: -0, y: -394, name: \"getter_b280eb\") getter_b280eb = list_firstItem\n        setter(x: 73, y: -313, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: 320, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_6c15d4.then -> setter_7e2b42.execute\n        list_2e9a3d -> for_d26972.items\n        for_d26972.item -> ifexpression_6c15d4.gen_0\n        for_d26972.index -> ifexpression_6c15d4.gen_1\n        getter_b280eb.value -> ifexpression_6c15d4.gen_2\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        sum_expression_634b7e.execute -> getat_ce2a48.execute\n        for_d26972.index -> setter_38e107.new_value\n        less_than_6a8bfc.left -> ifexpression_6c15d4.gen_3\n        getat_ce2a48.itemAtIndex -> ifexpression_6c15d4.gen_4\n        less_than_6a8bfc.right -> sum_expression_634b7e.result\n        sum_expression_634b7e.result -> output_1c4f8f\n        for_d26972.index -> setter_9d4f1c.new_value\n        ifexpression_6c15d4.else -> getat_ce2a48.next\n        less_than_6a8bfc.result -> getter_9d4f1c.value\n        sum_expression_634b7e.result -> output_1c4f8f\n    }\n\n    \n\n    instance(x: 20, y: -46) find_missing_f15bad root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -246, y: 0, name: \"list\") property(List) list_6d4e2b\n\n        out(x: 1237, y: 5, name: \"output\") property(Number) output_d3f9c1\n\n        instance(x: 46, y: -383, name: \"for_node\") root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0, name: \"min_node\") Std_k98ojb.Std.If {}\n        getter(x: 321, y: 165, name: \"getter_9d8f4c\") getter_9d8f4c = previous\n        setter(x: 679, y: -313, name: \"setter_7e2b42\") setter_7e2b42 = previous\n        instance(x: 340, y: 60) for_node.items -> list_6d4e2b\n        for_node.index -> getter_9d8f4c.gen_0\n        getter_9d8f4c.value -> min_node.predicate\n        min_node.then -> setter_7e2b42.execute\n        list_6d4e2b[for_node.index] -> setter_7e2b42.new_value\n        for_node.reset -> min_node.else\n        for_node.item -> getter_9d8f4c.gen_1\n    }\n\n    \n\n    instance(x: -205, y: 529) find_missing_2f0a3f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -200, y: 1, name: \"input\") property(String) input_9d0a95\n        out(x: 1054, y: 0, name: \"output\") property(String) output_a7c6b3\n\n        instance(x: 73, y: 47) replace_5f8c1e root.Std_k98ojb.Strings.Replace {}\n        input_9d0a95 -> replace_5f8c1e.input\n        \",.\" -> replace_5f8c1e.search\n        \":\" -> replace_5f8c1e.replace\n        replace_5f8c1e.output -> output_a7c6b3\n    }\n\n    \n\n    instance(x: 251, y: -46) replace_special_chars_0a4d66 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -198, y: 2, name: \"input\") property(String) input_0\n        out(x: 1049, y: 78, name: \"output\") property(String) output_0\n\n        instance(x: 83, y: -20) replace_3e7f45 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3e7f45.input\n        \",\" -> replace_3e7f45.search\n        \".\" -> replace_3e7f45.search\n        \":\" -> replace_3e7f45.replace\n        replace_3e7f45.output -> output_0\n    }\n\n    \n\n    instance(x: -143, y: 34) replace_with_colon_a4c8d6 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon{\n        in(x: -198, y: 19, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_732a8a\n\n        instance(x: 95, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) replace_d3f6d9 root.Std_k98ojb.Strings.Replace {}\n        tolower_2e1444.output -> replace_d3f6d9.input\n        \",.\" -> replace_d3f6d9.search\n        \":\" -> replace_d3f6d9.replace\n        input_0 -> tolower_2e1444.input\n        replace_d3f6d9.result -> output_732a8a\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_with_colon_b1b7c8 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon{\n        in(x: -230, y: 0, name: \"input\") property(String) input_8a4d5b\n\n        out(x: 340, y: -2, name: \"output\") property(String) output_9c1e3f\n\n        instance(x: 72, y: 76) replace_with_colon_node root.Std_k98ojb.Strings.Replace {}\n        input_8a4d5b -> replace_with_colon_node.input\n        \",,\".tostring() -> replace_with_colon_node.search\n        \":\" -> replace_with_colon_node.replace\n        replace_with_colon_node.output -> output_9c1e3f\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_with_colon_a7d5b6 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: 0, y: 0, name: \"input\") property(String) input_4a2d8b\n\n        out(x: 0, y: 0, name: \"output\") property(String) output_e1c3f8\n\n        instance(x: -104, y: -23) replace_d2a6e9 root.Std_k98ojb.Strings.Replace {}\n        input_4a2d8b -> replace_d2a6e9.input\n        \",\" -> replace_d2a6e9.search\n        \":\" -> replace_d2a6e9.replace\n        \".\" -> replace_d2a6e9.search\n        \" \" -> replace_d2a6e9.search\n        \":\" -> replace_d2a6e9.replace\n        input_4a2d8b -> replace_d2a6e9.input\n        replace_d2a6e9.result -> output_e1c3f8\n    }\n\n    \n\n    instance(x: -93, y: 0) replace_punctuation_a3a7a5 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -193, y: 4, name: \"input\") property(String) input_9e2d1a\n\n        out(x: 1095, y: -59, name: \"output\") property(String) output_7b8e42\n\n        instance(x: 73, y: -43) replace_3fdd95 root.Std_k98ojb.Strings.Replace {}\n        input_9e2d1a -> replace_3fdd95.input\n        \",\" -> replace_3fdd95.search\n        \".\" -> replace_3fdd95.search\n        \" \" -> replace_3fdd95.search\n        \":\" -> replace_3fdd95.replace\n        replace_3fdd95.output -> output_7b8e42\n    }\n\n    \n\n    instance(x: -234, y: 20) replace_special_chars_0c4d5a root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: 0, y: 0, name: \"input\") property(String) input_6f1b9d\n\n        out(x: 0, y: 0, name: \"output\") property(String) output_4e8c7a\n\n        instance(x: 0, y: -20) replace_punct_node root.Std_k98ojb.Strings.Replace {}\n        input_6f1b9d -> replace_punct_node.input\n        \",\" -> replace_punct_node.search\n        \".\" -> replace_punct_node.search\n        \" \" -> replace_punct_node.search\n        \":\" -> replace_punct_node.replace\n        replace_punct_node.output -> output_4e8c7a\n    }\n\n    \n\n    instance(x: -87, y: 0) replace_punctuation_bf2d9b root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -199, y: 0, name: \"input\") property(String) input_2b8d1e\n\n        out(x: 656, y: -68, name: \"output\") property(String) output_e6f4a5\n\n        instance(x: 94, y: -105) replace_node root.Std_k98ojb.Strings.Replace {}\n        input_2b8d1e -> replace_node.input\n        \", \". -> replace_node.search\n        \":\" -> replace_node.replace\n        replace_node.output -> output_e6f4a5\n    }\n\n    \n\n    instance(x: 264, y: -464, name: \"replace_with_colon\") replace_wit_colon_3d2b9 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -194, y: 0, name: \"input\") property(String) input_ai\n        out(x: 1091, y: -68, name: \"output\") property(String) output_8d6f4c\n\n        instance(x: 43, y: 34) replace_d5e9ec root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_d5e9ec.input\n        \",\" -> replace_d5e9ec.search\n        \".\" -> replace_d5e9ec.replace\n        replace_d5e9ec.output -> output_8d6f4c\n    }\n\n    \n\n    instance(x: -173, y: 30) replace_special_chars_5b3a7a root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: -114, y: 1, name: \"output\") property(String) output_ai\n\n        instance(x: 74, y: 44) strings_replace_node root.Std_k98ojb.Strings.Replace {}\n        input_ai -> strings_replace_node.input\n        \",\" -> strings_replace_node.search\n        \".\" -> strings_replace_node.search\n        \" \" -> strings_replace_node.search\n        \":\" -> strings_replace_node.replace\n        strings_replace_node.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 19) replace_punctuation_8d2c6e root.main.replace_punctuation {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -292, y: 0, name: \"input\") property(String) input_9d8a95\n\n        out(x: 509, y: 5, name: \"output\") property(Bool) output_3e2c43\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        input_9d8a95 -> tolower_2e1444.input\n        tolower_2e1444.output -> is_same.predicate\n        1 -> is_same.count\n        for_8cb3f6.index -> is_same.handler\n        tolower_2e1444.output_list -> for_8cb3f6.items\n   }\n    \n\n    instance(x: -67, y: -37) is_same_e0a5c7 root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -0, y: 2, name: \"input\") property(String) input_8d3e1f\n\n        out(x: 1216, y: 4, name: \"output\") property(Bool) output_4a9c23\n\n        instance(x: 0, y: 0) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: -45, y: 2) count_5f7d43 root.Std_k98ojb.Std.Count {}\n        instance(x: 201, y: 1) equal_8a6c34 root.Std_k98ojb.Logic.Equal {}\n        map_c73e3b.handler -> equal_8a6c34.execute\n        input_8d3e1f -> map_c73e3b.input\n        count_5f7d43.count -> equal_8a6c34.left\n        1 -> equal_8a6c34.right\n        equal_8a6c34.result -> output_4a9c23\n        map_c73e3b.output_list -> count_5f7d43.items\n        input_8d3e1f -> count_5f7d43.input\n    }\n\n    \n\n    instance(x: -67, y: 0) all_same_8ebc6a root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n     func(doc: \"checks whether all the characters are same or not.\") all_same_character{\n        in(x: -294, y: 2, name: \"input\") property(String) input_ai\n        out(x: 509, y: -1, name: \"result\") property(Bool) result_ai\n\n        instance(x: 0, y: 0) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> result_ai\n        instance(x: -23, y: 77) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        input_ai -> contains_d42dce.contains\n        \"a\" -> contains_d42dce.item\n        instance(x: 15, y: 0) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"previous == current\"\n        }\n        getter(x: -113, y: 34, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: -23, y: 29) setter_9d4f1c = previous\n        contains_d42dce.result -> ifexpression_875761.predicate\n        input_ai -> ifexpression_875761.value\n        ifexpression_875761.then -> result_ai\n    }\n\n    \n\n    instance(x: -67, y: 30) all_same_character_2e0c6 root.main.all_same_character {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") all_same{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 34, y: -2, name: \"output\") property(Bool) output_ai\n\n        instance(x: -19, y: 0) tolower_7e3a4b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7e3a4b.input\n        tolower_7e3a4b.output -> output_ai\n        instance(x: 59, y: -1) characters_9f8d5c root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_9f8d5c.input\n        characters_9f8d5c.characters -> output_ai\n        instance(x: 201, y: 2) length_6e87f0 root.Std_k98ojb.List.Length {}\n        length_6e87f0.length -> output_ai\n    }\n\n    \n\n    instance(x: -43, y: 23) all_same_f1c5a7 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") isSameChar {\n        in(x: -295, y: 0, name: \"string\") property(String) input_6\n        out(x: 555, y: 5, name: \"output\") property(Bool) output_3\n\n        instance(x: 13, y: 5) length_8b4e2a root.Std_k98ojb.List.Length {}\n        instance(x: 278, y: 0) contains_6c6f1d root.Std_k98ojb.Strings.Contains {}\n        input_6 -> contains_6c6f1d.input\n        contains_6c6f1d.contains -> length_8b4e2a.list\n        length_8b4e2a.length -> output_3\n        isSameChar.output -> length_8b4e2a.length == 1 && contains_6c6f1d.is_contained\n    }\n\n    \n\n    instance(x: -55, y: 40) isSameChar_f0df5b root.main.isSameChar {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -0, y: 5, name: \"input\") property(String) input_3f1d35\n\n        out(x: 1038, y: 4, name: \"output\") property(Bool) output_7a5e15\n\n        instance(x: -69, y: 2) tolower_6c7e9b root.Std_k98ojb.Strings.ToLower {}\n        input_3f1d35 -> tolower_6c7e9b.input\n        tolower_6c7e9b.output -> output_7a5e15\n        instance(x: 0, y: 4) isnumeric_8f2c21 root.Std_k98ojb.Strings.IsNumeric {}\n        input_3f1d35 -> isnumeric_8f2c21.input\n        isnumeric_8f2c21.is_numeric -> output_7a5e15\n        instance(x: -0, y: 6) characters_8cd4df root.Std_k98ojb.Strings.Characters {}\n        input_3f1d35 -> characters_8cd4df.input\n        characters_8cd4df.characters -> output_7a5e15\n    }\n\n    \n\n    instance(x: -43, y: 2) is_all_same_b6c9af root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: -292, y: 5, name: \"string\") property(String) input_0\n\n        out(x: 555, y: 4, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 2) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 270, y: -3) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        tolower_2e1444.output -> contains_d42dce.input\n        contains_d42dce.result -> output_1\n    }\n\n    \n\n    instance(x: -44, y: 23) all_characters_same_b7f9b8 root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -294, y: 0, name: \"string\") property(String) input_3d1a5e\n\n        out(x: 509, y: -2, name: \"result\") property(Bool) result_b4c6f7\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 261, y: 0) characters_9a8b21 root.Std_k98ojb.Strings.Characters {}\n        input_3d1a5e -> tolower_2e1444.input\n        tolower_2e1444.output -> characters_9a8b21.input\n        characters_9a8b21.characters -> result_b4c6f7\n        tolower_2e1444.result -> result_b4c6f7\n    }\n\n    \n\n    instance(x: 0, y: -43) all_same_5e5d3f root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") is_all_same {\n        in(x: -0, y: 0, name: \"input\") property(List) list_5f4e2d\n\n        out(x: 123, y: -1, name: \"result\") property(Bool) result_3b9f45\n\n        instance(x: 0, y: -1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        list_5f4e2d -> length_6e87f2.list\n        length_6e87f2.length -> is_all_same.predicate\n        is_all_same.result -> result_3b9f45\n    }\n\n    \n\n    instance(x: 0, y: -1) is_all_same_f8c9a7 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") same_chars {\n        in(x: -294, y: 0, name: \"input\") property(List) list_3a2f5d\n\n        out(x: 546, y: -1, name: \"output\") property(Bool) output_6b9e4c\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3a2f5d -> length_6e87f2.list\n        length_6e87f2.length -> equal_f89569.left\n        input -> equal_f89569.right\n        equal_f89569.result -> output_6b9e4c\n    }\n\n    \n\n    instance(x: -67, y: -37) same_chars_b8d0a7 root.main.same_chars {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"result\") property(Number) result_0\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        input_ai -> length_6e87f2.input\n        length_6e87f2.length -> result_0\n    }\n\n    \n\n    instance(x: -55, y: 529) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"result\") property(Number) result_0\n\n        instance(x: 15, y: 1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        input_ai -> length_6e87f2.input\n        length_6e87f2.length -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"digits\") property(Number) digits_ai\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        instance(x: 265, y: 0) isnumeric_d42dce root.Std_k98ojb.Strings.IsNumeric {}\n        input_0 -> length_6e87f2.input\n        isnumeric_d42dce.input -> length_6e87f2.input\n        length_6e87f2.length -> digits_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -226, y: 0, name: \"string\") property(String) input_ai\n        out(x: 340, y: 77, name: \"length\") property(Number) length_ai\n\n        instance(x: 23, y: -1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        length_6e87f2.input -> input_ai\n        length_6e87f2.length -> length_ai\n    }\n\n    \n\n    instance(x: 118, y: -26) count_digits_15f9e9 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"count the number of digits in a given string.\") Count_Digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"result\") property(Number) result_ai\n\n        instance(x: 426, y: -303) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        instance(x: 265, y: 0) isnumeric_d42dce root.Std_k98ojb.Strings.IsNumeric {}\n        input_ai -> length_6e87f2.input\n        isnumeric_d42dce.result -> length_6e87f2.length\n        length_6e87f2.length -> result_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) CountDigits_node root.main.Count_Digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") digit_count {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n\n        out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 15, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) characters_3d7de6 root.Std_k98ojb.Strings.Characters {}\n        input_ai -> tolower_2e1444.input\n        characters_3d7d6f.output -> result_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) digit_count_node root.main.digit_count {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") digit_count {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 159, y: -219, name: \"count\") property(Number) count_5d4f1b\n\n        instance(x: 15, y: 1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        input_0 -> length_6e87f2.input\n        length_6e87f2.length -> count_5d4f1b\n    }\n\n    \n\n    instance(x: -55, y: 529) digit_count_node root.main.digit_count {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        data_instance(x: 330, y: 133) data_cde0dc  = input_ai\n        length_6e87f2.length -> result_ai\n        count_digits_5d8c7a root.Std_k98ojb.List.Count {}\n        count_digits_5d8c7a.items -> length_6e87f2.length\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_5d8c7a root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 15, y: 1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        instance(x: 265, y: 0) isnumeric_d42dce root.Std_k98ojb.Strings.IsNumeric {}\n        input_ai -> length_6e87f2.input\n        length_6e87f2.length -> isnumeric_d42dce.length\n        isnumeric_d42dce.result -> result_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"counts the number of digits in a given string.\") Count_digits {\n        in(x: -284, y: 2, name: \"string\") property(String) input_0\n\n        out(x: 593, y: 77, name: \"count\") property(Number) count_3bc2ae\n\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        input_0 -> length_6e87f2.input\n        length_6e87f2.length -> count_3bc2ae\n    }\n\n    \n\n    instance(x: -34, y: 127) Count_digits_15f9e9 root.main.Count_digits {}\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_power {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_3d1a4\n\n        out(x: 1296, y: -635, name: \"output\") property(Number) output_d5e9b0\n\n        instance(x: 82, y: -417) ifexpression_c7f8c2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 395, y: -378) sum_odd_power_6d3e4a root.main.sum_odd_power {}\n        instance(x: 97, y: -127) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n        data_instance(x: 330, y: 133) data_8c5f0e = [4]\n        instance(x: 46, y: 136) add_f9d3c0 root.Std_k98ojb.Math.Add {}\n        instance(x: 12, y: 258) mul_7e1ce0 root.Std_k98ojb.Math.Mul {}\n        instance(x: 303, y: 2) pow_5fddfa root.Std_k98ojb.Math.Pow {}\n        data_8c5f0e -> add_f9d3c0.first\n        modulo_ad7b2a.result -> add_f9d3c0.second\n        mul_7e1ce0.result -> pow_5fddfa.first\n        n_3d1a4 -> pow_5fddfa.gen_0\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_odd_power_c2d6b root.main.sum_odd_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_3e6a5\n\n        out(x: 1149, y: -269, name: \"sum\") property(Number) sum_d0d7f8\n\n        instance(x: 80, y: -416) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 395, y: -378) sum_fourth_power_9a5bdf root.main.sum_fourth_power {}\n        instance(x: 97, y: -127) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        5 -> mul_f892a4.first\n        4 -> div_547f34.second\n        div_547f34.result -> sum_fourth_power_9a5bdf.n_3e6a5\n        ifexpression_3d7de6.then -> sum_fourth_power_9a5bdf.execute_cdac2a\n        ifexpression_3d7de6.else -> setter_41e4ad.execute_cdac2a\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_fourth_power_f21f44 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_9d4e6f\n\n        out(x: 1097, y: 27, name: \"output\") property(Number) output_a2c3a1\n\n        instance(x: 0, y: 0) for_065883 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_c8e4f9\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Number) output_efbc78\n\n            instance(x: 226, y: 56) pow_c5e2b8 root.Std_k98ojb.Math.Pow {}\n            instance(x: 463, y: 51) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 658, y: -105) add_88bb8a root.Std_k98ojb.Math.Add {}\n            instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n            pow_c5e2b8.result -> modulo_c76d2b.first\n            1 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> add_88bb8a.first\n            4 -> div_547f34.second\n            div_547f34.result -> pow_c5e2b8.gen_0\n        } -> for_065883.next\n        for_065883.index -> n_9d4e6f\n        for_065883.item -> pow_c5e2b8.value\n        n_9d4e6f -> div_547f34.second\n        add_88bb8a.result -> output_a2c3a1\n    }\n\n    \n\n    instance(x: -176, y: 38) sum_fourth_power_0d7a5c root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_6f8a3b\n\n        out(x: 1299, y: 77, name: \"sum\") property(Number) sum_c1d5e0\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 395, y: -378) sum_digits_96023e root.main.sum_digits {}\n        instance(x: 97, y: -127) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) pow_6d7f3e root.Std_k98ojb.Math.Pow {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        pow_6d7f3e.result -> mul_f892a4.second\n        n_6f8a3b -> mul_f892a4.first\n        pow_6d7f3e.gen_0 -> add_88bb8a.second\n        add_88bb8a.result -> sum_digits_96023e.n_6b655b\n        floor_61b38d.value -> div_64046c.input\n        2 -> div_64046c.divisor\n        div_64046c.result -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) fourth_power_sum_9e4a5 root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -530, y: 5, name: \"n\") property(Number) n_4d0e1a\n\n        out(x: 1096, y: -313, name: \"output\") property(Number) output_f2c8b3\n\n        instance(x: -341, y: 44) for_c9f7d9 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -193, y: 29, name: \"i\") property(Number) i_1e4a0b\n            out(x: 0, y: 25, name: \"output\") property(Number) output_a2f2c3\n\n            instance(x: 0, y: -15, name: \"fourth_power\") expression_7d9d6 root.Std_k98ojb.Math.Expression {\n                expression: \"i * i * i * i\"\n            }\n            instance(x: 0, y: 20) add_5f2e1b root.Std_k98ojb.Math.Add {}\n            list_07cae4 -> for_c9f7d9.items\n            i_1e4a0b -> for_c9f7d9.index\n            fourth_power.result -> add_5f2e1b.first\n            add_5f2e1b.second -> output_a2f2c3\n        } -> for_c9f7d9.next\n        n_4d0e1a -> for_c9f7d9.reset\n    }\n    \n\n    instance(x: -63, y: 59) sum_fourth_power_e5c8b root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -542, y: 3, name: \"n\") property(Number) n_2b4f9a\n\n        out(x: 1296, y: 29, name: \"output\") property(Number) output_f7c5d0\n\n        instance(x: 97, y: 26) for_065883 root.Std_k98ojb.Std.For {}\n        instance(x: -341, y: 35) nth_root_2e8a3b root.Std_k98ojb.Math.NthRoot {}\n        instance(x: 105, y: 43) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -23) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 113, y: -27) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -217, y: -305) data_7e0c5a = [3]\n        instance(x: 89, y: 30) pow_6f8d2e root.Std_k98ojb.Math.Pow {}\n        setter(x: 0, y: 0, name: \"setter_1db9a4\") setter_1db9a4 = sum\n        instance(x: -203, y: 27) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        data_7e0c5a -> pow_6f8d2e.input\n        3 -> pow_6f8d2e.gen_0\n        nth_root_2e8a3b.result -> mul_f892a4.first\n        sub_852f2e.result -> mul_f892a4.second\n        add_88bb8a.result -> sum_1db9a4.new_value\n    }\n\n    \n\n    instance(x: -292, y: 43) sum_fourth_power_b3d5c0 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_power {\n        in(x: -530, y: 2, name: \"n\") property(Number) n_e8f0b3\n\n        out(x: 1296, y: 7, name: \"output\") property(Number) output_9e4c1d\n\n        instance(x: 0, y: 0) sum_c5e2e5 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -193, y: -16, name: \"current\") property(Number) current_7a6e8f\n            in(x: -195, y: -21, name: \"_index\") property(Number) _index_b2b1d5\n\n            out(x: 0, y: -19, name: \"output\") property(Number) output_c4c9eb\n\n            instance(x: 101, y: -24) pow_6e8f7 root.Std_k98ojb.Math.Pow {}\n            instance(x: 342, y: -26) modulo_f9df5a root.Std_k98ojb.Math.Modulo {}\n            3 -> modulo_f9df5a.divisor\n            1 -> modulo_f9df5a.result\n            current_7a6e8f -> modulo_f9df5a.value\n        } -> sum_c5e2e5.next\n        n_e8f0b3 -> sum_c5e2e5.n\n        sum_c5e2e5.index -> output_c4c9eb\n        1 -> pow_6e8f7.first\n        current_7a6e8f -> pow_6e8f7.second\n        pow_6e8f7.result -> modulo_f9df5a.result\n        sum_c5e2e5.item -> output_c4c9eb\n    }\n\n    \n\n    instance(x: -293, y: 569) sum_odd_power_eb1d0 root.main.sum_odd_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_6b655b\n\n        out(x: 1146, y: -647, name: \"sum\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 395, y: -378) sum_fourth_power_5c4e8f root.main.sum_fourth_power {}\n        instance(x: 97, y: -127) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) pow_ad3d6a root.Std_k98ojb.Math.Pow {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 303, y: 2) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: 0, y: 0, name: \"setter_41e4ad\") setter_41e4ad = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        5 -> mul_f892a4.first\n        pow_ad3d6a.result -> mul_f892a4.second\n        4 -> div_547f34.second\n        div_547f34.result -> sum_fourth_power_5c4e8f.n_6b655b\n        floor_61b38d.output -> add_88bb8a.first\n        0 -> setter_41e4ad.new_value\n        ifexpression_3d7de6.then -> sum_fourth_power_5c4e8f.execute_cdac2a\n        sum_fourth_power_5c4e8f.continue_d9efd7 -> setter_41e4ad.execute\n        sum_fourth_power_5c4e8f.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> continue_d9efd7\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_fourth_power_2d6b1c root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -542, y: 2, name: \"n\") property(Number) n_6b655b\n\n        out(x: 2104, y: -649, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 0, y: 0) for_065883 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n\n            out(x: 715, y: 48, name: \"output\") property(Number) output_c2f5d3\n\n            instance(x: 0, y: -23, name: \"power\") expression_634b7e root.Std_k98ojb.Math.Expression {\n                expression: \"4 * current\"\n            }\n            instance(x: 0, y: -25, name: \"sum_of_powers\") sum_c2c5a8 root.Std_k98ojb.Math.Sum {}\n            1 -> for_065883.index\n            sum_c2c5a8.output -> output_c2f5d3\n            current_81298e -> for_065883.item\n            power.result -> sum_c2c5a8.input\n            for_065883.next -> sum_of_powers.execute_cdac2a\n        } -> for_065883.onItem\n        n_6b655b -> for_065883.reset\n        -1 -> for_065883.done\n    }\n\n    \n\n    instance(x: 0, y: 0) sum_fourth_power_7fdd8d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_fourth {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_0f1d8b\n\n        out(x: 1249, y: -269, name: \"output\") property(Number) output_4a7c6e\n\n        instance(x: 88, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 395, y: -378) sum_digits_96023e root.main.sum_digits {}\n        instance(x: 97, y: -127) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 1\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"x^4\"\n        }\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_0f1d8b -> mul_f892a4.first\n        n_0f1d8b -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_digits_96023e.n_6b655b\n        floor_61b38d.output -> sum_digits_96023e.sum\n        ifexpression_3d7de6.then -> sum_digits_96023e.execute_cdac2a\n        else -> mul_f892a4.execute_cdac2a\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_odd_fourth_c7b9f5 root.main.sum_odd_fourth {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: 0, y: 0, name: \"side\") property(Number) side_ai\n        out(x: 1089, y: -59, name: \"output\") property(Number) output_2d8c1a\n\n        instance(x: 16, y: 11) sum_6f3e5b root.Std_k98ojb.List.Sum {}\n        instance(x: 23, y: 64) pow_57a4df root.Std_k98ojb.Math.Pow {}\n        instance(x: -19, y: 21) mult_1bb2d7 root.Std_k98ojb.Math.Mul {}\n        side_ai -> sum_6f3e5b.items\n        6.0 -> pow_57a4df.y\n        pow_57a4df.result -> mult_1bb2d7.first\n        6.0 -> mult_1bb2d7.second\n        sum_6f3e5b.result -> output_2d8c1a\n    }\n\n    \n\n    instance(x: -85, y: -43, name: \"cube_surface_area\") cube_surface_area_node root.main(cube_surface_area) {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: -215, y: 0, name: \"side\") property(Number) side_ai\n        out(x: 216, y: 0, name: \"surface_area\") property(Number) surface_area_7f4a2c\n\n        instance(x: 10, y: 0) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"(6 * (side ^ 2))\"\n        }\n        side_ai -> math_expr_node.gen_0\n        math_expr_node.result -> surface_area_7f4a2c\n   }\n\n    instance(x: -194, y: -23, name: \"cube_surface_area\") cube_surface_area_a9e5b1 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -215, y: 0, name: \"side_length\") property(Number) side_length_5e1a3b\n        out(x: 216, y: -64, name: \"area\") property(Number) area_a9f7d2\n\n        instance(x: 15, y: 0) math_pow_node root.Std_k98ojb.Math.Pow {}\n        side_length_5e1a3b -> math_pow_node.base\n        2 -> math_pow_node.exponent\n        math_pow_node.result -> area_a9f7d2\n        6 -> math_pow_node.result\n    }\n\n    \n\n    instance(x: -201, y: 0) surface_area_f8c9e1 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -219, y: 54, name: \"size\") property(Number) size_3d8f6a\n\n        out(x: 452, y: 15, name: \"surface_area\") property(Number) surface_area_5b9e4c\n\n        instance(x: 24, y: -21) math_pow_node root.Std_k98ojb.Math.Pow {}\n        size_3d8f6a -> math_pow_node.base\n        2 -> math_pow_node.exponent\n        math_pow_node.result -> surface_area_5b9e4c\n\n        instance(x: 0, y: -13) mul_7d0c47 root.Std_k98ojb.Math.Mul {}\n        size_3d8f6a -> mul_7d0c47.first\n        6 -> mul_7d0c47.second\n        mul_7d0c47.result -> surface_area_5b9e4c\n\n        instance(x: -16, y: -11) add_1f2a3b root.Std_k98ojb.Math.Add {}\n        surface_area_5b9e4c -> add_1f2a3b.first\n        144 -> add_1f2a3b.second\n        add_1f2a3b.result -> surface_area_5b9e4c\n\n    }\n    \n\n    instance(x: -43, y: 19) cube_surface_area_c8d7d6 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: 0, y: -1, name: \"side\") property(Number) side_f6f5d4\n\n        out(x: 108, y: -11, name: \"area\") property(Number) area_2c7b3f\n    }\n\n    \n    instance(x: -21, y: -14) math_modulo_node root.Std_k98ojb.Math.Modulo {}\n    side_f6f5d4 -> math_modulo_node.divisor\n    6 -> math_modulo_node.value\n    math_modulo_node.result -> area_2c7b3f\n\n    \n\n    instance(x: 0, y: -11) math_add_node root.Std_k98ojb.Math.Add {}\n    area_2c7b3f -> math_add_node.first\n    6 -> math_add_node.second\n    math_add_node.result -> area_2c7b3f\n\n\n    instance(x: 0, y: -10) math_multiply_node root.Std_k98ojb.Math.Multiply {}\n    side_f6f5d4 -> math_multiply_node.first\n    side_f6f5d4 -> math_multiply_node.second\n    math_multiply_node.result -> area_2c7b3f\n\n    \n\n    instance(x: 0, y: -9) list_repeat_node root.Std_k98ojb.List.Repeat {}\n    side_f6f5d4 -> list_repeat_node.count\n    6 -> list_repeat_node.value\n    list_repeat_node.output_list -> area_2c7b3f\n\n    \n\n    instance(x: 0, y: -8) math_add_node root.Std_k98ojb.Math.Add {}\n    area_2c7b3f -> math_add_node.first\n    6 -> math_add_node.second\n    math_add_node.result -> area_2c7b3f\n\n\n    instance(x: 0, y: -7) math_multiply_node root.Std_k98ojb.Math.Multiply {}\n    area_2c7b3f -> math_multiply_node.first\n    area_2c7b3f -> math_multiply_node.second\n    math_multiply_node.result -> area_2c7b3f\n\n\n    instance(x: 0, y: -6) ifexpression_4d5a1 root.Std_k98ojb.Std.IfExpression {\n        expression: \"area == 0\"\n    }\n    area_2c7b3f -> ifexpression_4d5a1.gen_0\n    108 -> ifexpression_4d5a1.gen_1\n    ifexpression_4d5a1.result -> area_2c7b3f\n\n\n    instance(x: -14, y: -5) if_e4e8f root.Std_k98ojb.Std.If {}\n    area_2c7b3f -> if_e4e8f.value\n    0 -> if_e4e8f.then\n    area_2c7b3f -> if_e4e8f.else\n\n\n    instance(x: -11, y: -4) log10_node root.Std_k98ojb.Math.Log10 {}\n    side_f6f5d4 -> log10_node.input\n    log10_node.result -> area_2c7b3f\n\n\n    instance(x: 0, y: -3) exp_node root.Std_k98ojb.Math.Exp {}\n    math_add_node.result -> exp_node.input\n    exp_node.result -> area_2c7b3f\n\n\n    instance(x: 0, y: -2) round_node root.Std_k98ojb.Std.Round {}\n    area_2c7b3f -> round_node.value\n    108 -> round_node.n\n    round_node.result -> area_2c7b3f\n\n    \n\n    instance(x: -13, y: -1) assign_node root.Std_k98ojb.Std.Assign {}\n    side_f6f5d4 -> assign_node.a\n    6 -> assign_node.b\n    assign_node.result -> side_f6f5d4\n\n\n    instance(x: 0, y: 0) math_sqrt_node root.Std_k98ojb.Math.Sqrt {}\n    side_f6f5d4 -> math_sqrt_node.input\n    math_sqrt_node.result -> side_f6f5d4\n\n    \n\n    instance(x: -10, y: 1) list_get_at_node root.Std_k98ojb.List.GetAt {}\n    side_f6f5d4 -> list_get_at_node.index\n    3 -> list_get_at_node.list\n    list_get_at_node.result -> side_f6f5d4\n\n\n    instance(x: -9, y: 2) math_pow_node root.Std_k98ojb.Math.Pow {}\n    side_f6f5d4 -> math_pow_node.base\n    math_sqrt_node.result -> math_pow_node.exponent\n    math_pow_node.result -> side_f6f5d4\n\n    \n\n    instance(x: -8, y: 3) ifexpression_0e3a2 root.Std_k98ojb.Std.IfExpression {\n        expression: \"side == 0\"\n    }\n    side_f6f5d4 -> ifexpression_0e3a2.gen_0\n    0 -> ifexpression_0e3a2.then\n    side_f6f5d4 -> ifexpression_0e3a2.gen_1\n\n\n    instance(x: -7, y: 4) log10_node root.Std_k98ojb.Math.Log10 {}\n    side_f6f5d4 -> log10_node.input\n    log10_node.result -> side_f6f5d4\n\n    \n\n    instance(x: -6, y: 5) exp_node root.Std_k98ojb.Math.Exp {}\n    math_add_node.result -> exp_node.input\n    exp_node.result -> side_f6f5d4\n\n\n    instance(x: -5, y: 6) round_node root.Std_k98ojb.Std.Round {}\n    side_f6f5d4 -> round_node.value\n    108 -> round_node.n\n    round_node.result -> side_f6f5d4\n\n\n    instance(x: -4, y: 7) list_repeat_node root.Std_k98ojb.List.Repeat {}\n    side_f6f5d4 -> list_repeat_node.count\n    6 -> list_repeat_node.value\n    list_repeat_node.output_list -> area_2c7b3f\n\n    \n\n    instance(x: -3, y: 8) math_add_node root.Std_k98ojb.Math.Add {}\n    area_2c7b3f -> math_add_node.first\n    6 -> math_add_node.second\n    math_add_node.result -> area_2c7b3f\n\n\n    instance(x: -2, y: 9) math_multiply_node root.Std_k98ojb.Math.Multiply {}\n    area_2c7b3f -> math_multiply_node.first\n    area_2c7b3f -> math_multiply_node.second\n    math_multiply_node.result -> area_2c7b3f\n\n\n    instance(x: -1, y: 10) ifexpression_d6aee root.Std_k98ojb.Std.IfExpression {\n        expression: \"area == 0\"\n    }\n    area_2c7b3f -> ifexpression_d6aee.gen_0\n    108 -> ifexpression_d6aee.gen_1\n\n\n    instance(x: -10, y: 11) log10_node root.Std_k98ojb.Math.Log10 {}\n    side_f6f5d4 -> log10_node.input\n    log10_node.result -> side_f6f5d4\n\n\n    instance(x: -9, y: 12) exp_node root.Std_k98ojb.Math.Exp {}\n    math_add_node.result -> exp_node.input\n    exp_node.result -> side_f6f5d4\n\n\n    instance(x: -8, y: 13) round_node root.Std_k98ojb.Std.Round {}\n    side_f6f5d4 -> round_node.value\n    108 -> round_node.n\n    round_node.result -> side_f6f5d4\n\n\n    instance(x: -7, y: 14) list_repeat_node root.Std_k98ojb.List.Repeat {}\n    side_f6f5d4 -> list_repeat_node.count\n    6 -> list_repeat_node.value\n    list_repeat_node.output_list -> area_2c7b3f\n\n    \n\n    instance(x: -6, y: 15) math_add_node root.Std_k98ojb.Math.Add {}\n    area_2c7b3f -> math_add_node.first\n    6 -> math_add_node.second\n    math_add_node.result -> area_2c7b3f\n\n\n    instance(x: -5, y: 16) math_multiply_node root.Std_k98ojb.Math.Multiply {}\n    area_2c7b3f -> math_multiply_node.first\n    area_2c7b3f -> math_multiply_node.second\n    math_multiply_node.result -> area_2c7b3f\n\n\n    instance(x: -4, y: 17) ifexpression_f6d9a root.Std_k98ojb.Std.IfExpression {\n        expression: \"area == 0\"\n    }\n    area_2c",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: 0, y: 0, name: \"side\") property(Number) side_9a6e3b\n        out(x: 0, y: 0, name: \"result\") property(Number) result_7f2d5c\n\n        instance(x: 15, y: 11) length_node root.Std_k98ojb.List.Length {}\n        instance(x: -43, y: 23) math_mul_node root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: 13) four_2d9e3f root.Std_k98ojb.Math.Expression {\n            expression: \"4 * side^2\"\n        }\n        instance(x: -74, y: 10) math_add_node root.Std_k98ojb.Math.Add {}\n        instance(x: -44, y: 24) math_mul_node_1 root.Std_k98ojb.Math.Mul {}\n        four_2d9e3f.result -> math_add_node.first\n        side_9a6e3b -> math_mul_node_1.second\n        four_2d9e3f.result -> math_mul_node_1.first\n        math_add_node.result -> result_7f2d5c\n        length_node.length -> math_mul_node.right\n        side_9a6e3b -> math_mul_node.left\n        math_mul_node.result -> four_2d9e3f.gen_0\n    }\n\n    \n\n    instance(x: 45, y: -44, name: \"surface_area\") surface_area_d4dfc7 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: 0, y: 0, name: \"side\") property(Number) side_a3f6e5\n        out(x: 162, y: -13, name: \"area\") property(Number) area_8c7d4a\n\n        instance(x: 15, y: -18) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * side ^ 2\"\n        }\n        side_a3f6e5 -> math_expr_node.gen_0\n        math_expr_node.result -> area_8c7d4a\n    }\n\n    \n    instance(x: -44, y: 19) cube_surface_area_f7d0b root.main.circle_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -219, y: 0, name: \"side\") property(Number) side_5d2a6f\n\n        out(x: 216, y: 0, name: \"output\") property(Number) output_a7d3c8\n\n        instance(x: -83, y: 11) math_pow_node root.Std_k98ojb.Math.Pow {}\n        side_5d2a6f -> math_pow_node.base\n        6 -> math_pow_node.exponent\n        math_pow_node.result -> output_a7d3c8\n    }\n\n    \n\n    instance(x: 22, y: -26) surface_area_1e9b4 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -123, y: 0, name: \"side\") property(Number) side_3f4d6b\n\n        out(x: 216, y: 0, name: \"result\") property(Number) result_a2a7c8\n    }\n\n    \n    instance(x: 120, y: -1) six_times_node root.Std_k98ojb.List.GenerateRange {}\n    six_times_node.list -> surface_area.items\n    six_times_node.from -> side_3f4d6b\n    side_3f4d6b -> six_times_node.to\n    instance(x: 123, y: -1) add_7c9f8f root.Std_k98ojb.Math.Add {}\n    six_times_node.list -> add_7c9f8f.values\n    6 -> add_7c9f8f.first\n    side_3f4d6b -> add_7c9f8f.second\n    add_7c9f8f.result -> result_a2a7c8\n    instance(x: -114, y: 0) mul_9e1e42 root.Std_k98ojb.Math.Mul {}\n    six_times_node.list -> mul_9e1f1.values\n    4 -> mul_9e1e42.first\n    result_a2a7c8 -> mul_9e1e42.second\n    mul_9e1e42.result -> result_a2a7c8\n   }\n    \n\n    instance(x: -85, y: -46, name: \"surface_area\") surface_area_node root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_ai\n        out(x: -123, y: 23, name: \"result\") property(Number) result_ai\n\n        instance(x: 12, y: 0) math_pow_node root.Std_k98ojb.Math.Pow {}\n        math_pow_node.result -> result_ai\n        6 -> math_pow_node.base\n        side_ai -> math_pow_node.exponent\n        math_pow_node.result -> surface_area_7f9c3a\n    }\n\n    instance(x: -85, y: 23, name: \"surface_area\") expression_0d8e5b root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -471, y: 23, name: \"list\") property(List) list_4a2d1f\n\n        out(x: 1210, y: -113, name: \"output\") property(Number) output_d5e7c8\n\n        instance(x: -104, y: -108) min_9b3e34 root.Std_k98ojb.List.Min {}\n        instance(x: -112, y: 25, name: \"max_4d2f0d\") root.Std_k98ojb.List.Max {}\n\n        list_4a2d1f -> max_4d2f0d.items\n        max_4d2f0d.item -> diff_largest_smallest.output_d5e7c8\n        min_9b3e34.result -> output_d5e7c8\n    }\n\n    \n\n    instance(x: 97, y: -142) diff_largest_smallest_f1a6df root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -193, y: 23, name: \"list\") property(List) list_9f5d4e\n\n        out(x: 1092, y: -19, name: \"difference\") property(Number) difference_a3c5a7\n\n        instance(x: 121, y: -104) max_f8c1f root.Std_k98ojb.List.Max {}\n        instance(x: 93, y: -20) min_0d0c2e root.Std_k98ojb.List.Min {}\n        list_9f5d4e -> max_f8c1f.items\n        list_9f5d4e -> min_0d0c2e.items\n\n        instance(x: 105, y: -109) sub_3a7b49 root.Std_k98ojb.Math.Sub {}\n        difference_a3c5a7 -> sub_3a7b49.result\n        max_f8c1f.max -> sub_3a7b49.first\n        min_0d0c2e.min -> sub_3a7b49.second\n\n    }\n\n    \n\n    instance(x: -69, y: 45) diff_max_min_b4c6a9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -292, y: 0, name: \"list\") property(List) list_bf8d1b\n\n        out(x: 1235, y: -2, name: \"output\") property(Number) output_d3a6c4\n\n        instance(x: 101, y: 47) max_9e7df0 root.Std_k98ojb.List.Max {}\n        instance(x: 93, y: -21) min_1d3f5d root.Std_k98ojb.List.Min {}\n        list_bf8d1b -> max_9e7df0.items\n        list_bf8d1b -> min_1d3f5d.items\n        max_9e7df0.result -> output_d3a6c4\n        min_1d3f5d.result -> output_d3a6c4\n    }\n\n    \n\n    instance(x: 11, y: -104) diff_max_min_e2d8b2 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -475, y: 15, name: \"list\") property(List) list_3d0f8a\n\n        out(x: 1002, y: -11, name: \"output\") property(Number) output_a9b6e1\n\n        instance(x: -105, y: -104) max_5c4b7d root.Std_k98ojb.List.Max {}\n        instance(x: -109, y: -69) min_3f2aeb root.Std_k98ojb.List.Min {}\n        list_3d0f8a -> max_5c4b7d.items\n        list_3d0f8a -> min_3f2aeb.items\n        max_5c4b7d.result -> output_a9b6e1\n        diff_max_min.output -> output_a9b6e1\n    }\n\n    \n\n    instance(x: -91, y: 44) diff_max_min_f0e8e0 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -471, y: -0, name: \"list\") property(List) list_1f4a8d\n\n        out(x: 1217, y: -5, name: \"output\") property(Number) output_f9e3eb\n\n        instance(x: 101, y: -120) max_6e5c2b root.Std_k98ojb.List.Max {}\n        instance(x: -45, y: 26, name: \"min\") property(List) min_c0f1d7\n        list_1f4a8d -> max_6e5c2b.items\n        min_c0f1d7 <- max_6e5c2b.result\n\n        instance(x: -105, y: -37) sub_9fba66 root.Std_k98ojb.Math.Sub {}\n        max_6e5c2b.result -> sub_9fba66.first\n        min_c0f1d7 <- sub_9fba66.second\n        sub_9fba66.result -> output_f9e3eb\n    }\n\n    \n\n    instance(x: -55, y: 45) diff_max_min_ba4b6c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -471, y: 24, name: \"list\") property(List) list_f4e8a9\n\n        out(x: 1020, y: -1, name: \"difference\") property(Number) difference_6d5c63\n\n        instance(x: 114, y: -110) max_7f3b45 root.Std_k98ojb.List.Max {}\n        list_f4e8a9 -> max_7f3b45.items\n        func() {\n            in(x: -231, y: -69, name: \"min\") property(Number) min_d2c0d1\n\n            out(x: 1020, y: -54, name: \"\") property(Number) result_a8c6a5\n\n            instance(x: -8, y: -53) sub_7f4e9b root.Std_k98ojb.Math.Sub {}\n            min_d2c0d1 -> sub_7f4e9b.first\n            max_7f3b45.result -> sub_7f4e9b.second\n            sub_7f4e9b.result -> result_a8c6a5\n        } -> max_7f3b45.handler\n        max_7f3b45.result -> difference_6d5c63\n    }\n\n    \n\n    instance(x: 104, y: -125) diff_max_min_e0dd41 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -469, y: 23, name: \"list\") property(List) list_4e2f1d\n\n        out(x: 1237, y: -11, name: \"output\") property(Number) output_a3a5b9\n\n        instance(x: 0, y: 0) max_min_5c869 root.Std_k98ojb.List.Max {}\n        list_4e2f1d -> max_min_5c869.items\n        instance(x: -104, y: 26) min_8aeb3d root.Std_k98ojb.List.Min {}\n        list_4e2f1d -> min_8aeb3d.items\n        sub_6bfcf7 root.Std_k98ojb.Math.Sub {}\n        max_min_5c869.max -> sub_6bfcf7.first\n        min_8aeb3d.min -> sub_6bfcf7.second\n        sub_6bfcf7.result -> output_a3a5b9\n    }\n\n    \n\n    instance(x: 95, y: -129) diff_max_min_0e4c34 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -292, y: 13, name: \"list\") property(List) list_0e9a5d\n\n        out(x: 1027, y: -1, name: \"output\") property(Number) output_e3b4f6\n\n        instance(x: 101, y: 23) max_4fba8c root.Std_k98ojb.List.Max {}\n        list_0e9a5d -> max_4fba8c.items\n        func() {\n            in(x: -232, y: -26, name: \"min\") property(Number) min_f6f3d2\n\n            out(x: 1059, y: -27, name: \"\") property(Number) _e8a5e0\n\n            instance(x: 93, y: -20) ifexpression_1c4b41 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0 || previous <= current\"\n            }\n            getter(x: 334, y: 160, name: \"getter_5d7e9f\") getter_5d7e9f = previous\n            setter(x: 679, y: -313, name: \"setter_3a2c4b\") setter_3a2c4b = previous\n            instance(x: 321, y: -20) for_f8cd6c root.Std_k98ojb.Std.For {}\n            setter(x: -0, y: -121, name: \"setter_3a2c4b\") setter_5d7e9f = previous\n            instance(x: -275, y: -35) getat_d7f1ec root.Std_k98ojb.List.GetAt {}\n            ifexpression_1c4b41.value -> _e8a5e0\n            ifexpression_1c4b41.then -> setter_3a2c4b.execute\n            list_0e9a5d -> for_f8cd6c.items\n            for_f8cd6c.item -> ifexpression_1c4b41.gen_2\n            for_f8cd6c.index -> ifexpression_1c4b41.gen_0\n            getter_5d7e9f.value -> ifexpression_1c4b41.gen_1\n            for_f8cd6c.onItem -> ifexpression_1c4b41.execute\n            for_f8cd6c.done -> setter_3a2c4b.reset\n            for_f8cd6c.item -> setter_5d7e9f.new_value\n            list_0e9a5d -> getat_d7f1ec.list\n            0 -> getat_d7f1ec.index\n            getat_d7f1ec.itemAtIndex -> setter_3a2c4b.new_value\n        } -> max_4fba8c.predicate\n        max_4fba8c.max -> output_e3b4f6\n    }\n\n    \n\n    instance(x: -92, y: 45) diff_max_min_0d9e15 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -246, y: 21, name: \"list\") property(List) list_0d2b5e\n\n        out(x: 1046, y: 7, name: \"output\") property(Number) output_a8c3f9\n\n        instance(x: -106, y: 44, name: \"max\") root.Std_k98ojb.List.Max {}\n        list_0d2b5e -> max.items\n        func() {\n            in(x: -121, y: -35, name: \"min\") property(Number) min_4c4a8f\n\n            out(x: 1119, y: -34, name: \"\") property(Number) _7dd980\n\n            instance(x: 94, y: -22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n            list_0d2b5e -> pow_584bfd.values\n            0 -> pow_584bfd.values.first\n            pow_584bfd.result -> min_4c4a8f\n        } -> max.handler\n        max.min -> output_a8c3f9\n        func() {\n            in(x: -121, y: -35, name: \"min\") property(Number) min_4c4a8f\n\n            out(x: 1119, y: -34, name: \"\") property(Number) _7dd980\n\n            instance(x: 94, y: -22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n            list_0d2b5e -> pow_584bfd.values\n            1 -> pow_584bfd.values.first\n            pow_584bfd.result -> min_4c4a8f\n        } -> max.handler\n        max.min -> output_a8c3f9\n    }\n\n    \n\n    instance(x: -94, y: 11) diff_max_min_f6d2f5 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -456, y: -236, name: \"list\") property(List) list_9b1f5a\n\n        out(x: 1134, y: -235, name: \"output\") property(Number) output_8d0c6e\n\n        instance(x: 103, y: -105) length_7f2cd3 root.Std_k98ojb.List.Length {}\n        instance(x: 409, y: 144, name: \"max_9c1a5b\") property(Number) max_9c1a5b\n        instance(x: 104, y: 145, name: \"min_7d7f6e\") property(Number) min_7d7f6e\n        instance(x: -0, y: -110, name: \"continue_4f2df8\") trigger() continue_4f2df8\n\n        list_9b1f5a -> length_7f2cd3.list\n        length_7f2cd3.length -> max_9c1a5b.length\n        length_7f2cd3.length -> min_7d7f6e.length\n        length_7f2cd3.reset -> continue_4f2df8\n        max_9c1a5b.itemAtIndex -> list_9b1f5a.max\n        max_9c1a5b.index -> list_9b1f5a.index\n        min_7d7f6e.itemAtIndex -> list_9b1f5a.min\n        min_7d7f6e.index -> list_9b1f5a.index\n        max_9c1a5b.length - 1 -> min_7d7f6e.index\n        max_9c1a5b.result -> diff_largest_smallest.output\n        min_7d7f6e.result -> output_8d0c6e\n    }\n\n    \n\n    instance(x: -47, y: 145) diff_largest_smallest_f4c2d3 root.main.diff_largest_smallest {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -294, y: 155, name: \"n\") property(Number) n_4a2f9d\n\n        out(x: 509, y: 43, name: \"output\") property(Bool) output_1b6e8c\n\n        instance(x: 0, y: 0) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: -44, y: 49) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n        n_4a2f9d -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> equal_a54bdc.left\n        0 -> equal_a54bdc.right\n        equal_a54bdc.result -> output_1b6e8c\n    }\n\n    \n\n    instance(x: -53, y: 530) is_even_bf2a5b root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 155, name: \"n\") property(Number) n_6e8f5d\n\n        out(x: 1044, y: -2, name: \"output\") property(Bool) output_0b1c7e\n\n        instance(x: 102, y: 150) modulo_e3a3c9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 108, y: 159) equal_d4f8e6 root.Std_k98ojb.Logic.Equal {}\n        n_6e8f5d -> modulo_e3a3c9.value\n        2 -> modulo_e3a3c9.divisor\n        modulo_e3a3c9.result -> equal_d4f8e6.left\n        0 -> equal_d4f8e6.right\n        equal_d4f8e6.result -> output_0b1c7e\n    }\n\n    \n\n    instance(x: -67, y: -35) is_even_e5d4f9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -285, y: 155, name: \"n\") property(Number) n_d2f1a0\n\n        out(x: 1219, y: -98, name: \"output\") property(Bool) output_6b8c3d\n\n        instance(x: 109, y: -101) modulo_4e5f7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 113, y: 104) equal_c0a5c9 root.Std_k98ojb.Logic.Equal {}\n        n_d2f1a0 -> modulo_4e5f7.value\n        2 -> modulo_4e5f7.divisor\n        modulo_4e5f7.result -> equal_c0a5c9.left\n        0 -> equal_c0a5c9.right\n        equal_c0a5c9.result -> output_6b8c3d\n    }\n\n    \n\n    instance(x: -67, y: 19) is_even_d2e9f4 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -278, y: 156, name: \"n\") property(Number) n_5e4f2d\n\n        out(x: 1018, y: 49, name: \"output\") property(Bool) output_7a0b3c\n\n        instance(x: 102, y: 44) modulo_d6f9ec root.Std_k98ojb.Math.Modulo {}\n        is_even.result -> output_7a0b3c\n        n_5e4f2d -> modulo_d6f9ec.value\n        2 -> modulo_d6f9ec.divisor\n        modulo_d6f9ec.result -> output_7a0b3c\n    }\n\n    \n\n    instance(x: -69, y: 21) is_even_8d5e1b root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -285, y: 142, name: \"n\") property(Number) n_e4f2ec\n\n        out(x: 555, y: 135, name: \"output\") property(Bool) output_8c0a1d\n\n        instance(x: 101, y: 133) modulo_d5e8d6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 313, y: 137) equal_b3f7c4 root.Std_k98ojb.Logic.Equal {}\n        n_e4f2ec -> modulo_d5e8d6.value\n        0 -> equal_b3f7c4.right\n        modulo_d5e8d6.result -> equal_b3f7c4.left\n        equal_b3f7c4.result -> output_8c0a1d\n    }\n\n    \n\n    instance(x: -294, y: 59) is_even_f2b8d9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -292, y: 23, name: \"number\") property(Number) number_b3e8a6\n\n        out(x: 1099, y: 15, name: \"output\") property(Bool) output_5c4f0b\n\n        instance(x: -114, y: -24) modulo_1d7bfc root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 22) equal_6e2a8b root.Std_k98ojb.Logic.Equal {}\n        number_b3e8a6 -> modulo_1d7bfc.value\n        0 -> equal_6e2a8b.right\n        modulo_1d7bfc.result -> equal_6e2a8b.left\n        equal_6e2a8b.result -> output_5c4f0b\n    }\n\n    \n\n    instance(x: -91, y: 43) is_even_9f6aeb root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -283, y: 0, name: \"n\") property(Number) n_e4f6e8\n\n        out(x: 1021, y: 5, name: \"output\") property(Bool) output_9b2c3d\n\n        instance(x: 0, y: 0) modulo_d3a4ec root.Std_k98ojb.Math.Modulo {}\n        n_e4f6e8 -> modulo_d3a4ec.value\n        2 -> modulo_d3a4ec.divisor\n        modulo_d3a4ec.result -> output_9b2c3d\n    }\n\n    \n\n    instance(x: -289, y: 5) is_even_6d7d14 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -285, y: 0, name: \"number\") property(Number) number_5d2a6f\n\n        out(x: 1049, y: -1, name: \"output\") property(Bool) output_7b9c4e\n\n        instance(x: -92, y: -95) modulo_e8a8db root.Std_k98ojb.Math.Modulo {}\n        instance(x: 0, y: -96, name: \"continue\") trigger() continue_2d5f1b\n        instance(x: 1049, y: -1, name: \"result\") property(Bool) result_8a3c7e\n\n        number_5d2a6f -> modulo_e8a8db.value\n        0 -> modulo_e8a8db.divisor\n        modulo_e8a8db.result -> result_8a3c7e\n    }\n\n    \n\n    instance(x: -87, y: 55) is_even_8b5f1d root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether the given number is even or not.\") IsEven {\n        in(x: -283, y: 16, name: \"n\") property(Number) n_8f9a5e\n\n        out(x: 123, y: 7, name: \"output\") property(Bool) output_b4d2b1\n        out(x: 112, y: 45, name: \"continue\") trigger() continue_c0c4e3\n\n        instance(x: -104, y: 44) modulo_8b3f5 root.Std_k98ojb.Math.Modulo {}\n        n_8f9a5e -> modulo_8b3f5.value\n        2 -> modulo_8b3f5.divisor\n        modulo_8b3f5.result -> output_b4d2b1\n    }\n\n    \n\n    instance(x: -87, y: 29) IsEven_d0c6a7 root.main.IsEven {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 23, name: \"n\") property(Number) n_6a8f4d\n\n        out(x: 1041, y: -24, name: \"output\") property(Bool) output_5c7b9e\n\n        instance(x: 0, y: 0) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 415, y: 26) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        n_6a8f4d -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> equal_f89569.left\n        0 -> equal_f89569.right\n        equal_f89569.result -> output_5c7b9e\n    }\n\n    \n\n    instance(x: -55, y: 528) is_even_b8a3eb root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") FirstRepeat {\n        in(x: -530, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n        data_instance(x: -753, y: -588) data_cc1b1b  = [charMap]\n        instance(x: -432, y: -620) count_4b8927 root.Std_k98ojb.Count {}\n        instance(x: -978, y: -566) map_3f3ee6 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 188, y: 425) list_5e8f9a root.Std_k98ojb.List {}\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        data_cc1b1b -> map_3f3ee6.items\n        charMap -> count_4b8927.count\n        input_ai -> map_3f3ee6.handler\n        tolower_7b3b7b.result -> output_ai\n        length_4b8927.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        list_5e8f9a.items -> count_4b8927.list\n        map_3f3ee6.output_list -> output_ai\n        firstitem_0c0c23 root.Std_k98ojb.List.FirstItem {}\n        data_cc1b1b.last -> firstitem_0c0c23.item\n    }\n\n    \n\n    instance(x: -97, y: 127) FirstRepeat_49c6ac root.main.FirstRepeat {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -1049, y: 375) contains_8eae56 root.Std_k98ojb.Strings.Contains {}\n        instance(x: -1099, y: 526) find_de624f root.Std_k98ojb.Iteration.Find {}\n        data_instance(x: -753, y: 588) data_cc1b1b = [first, middle, last]\n        instance(x: -432, y: 620) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        instance(x: -978, y: 566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -1191, y: 492) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1405, y: -438) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        tolower_7b3b7b.output -> contains_8eae56.input\n        input_ai -> contains_8eae56.search\n        'a' -> contains_8eae56.replace\n        contains_8eae56.result -> find_de624f.item\n        data_cc1b1b -> flatten_c31c7c.items\n        firstitem_9b1bc3.list -> data_cc1b1b.first\n        lastitem_d831ca.list -> data_cc1b1b.last\n        list_ai -> slice_3f3ee6.list\n        0 -> slice_3f3ee6.start\n        slice_3f3ee6.slice -> data_cc1b1b.middle\n        flatten_c31c7c.flattened -> output_ai\n        length_4b8927.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> slice_3f3ee6.end\n    }\n\n    \n\n    instance(x: -97, y: -68) first_repeated_496e5e root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"result\") property(Char) result_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -1049, y: -375) characters_f1e0c8 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 340, y: 77) map_4f2d4a root.Std_k98ojb.Iteration.Map {\n            handler: function(item) { return [item, input_ai.indexOf(item)] }\n        }\n        instance(x: -432, y: -620) filter_7e1ce0 root.Std_k98ojb.Query.Filter {}\n        instance(x: 772, y: 76) orElse_f4c9f6 root.Std_k98ojb.Std.OrElse {}\n\n        input_ai -> tolower_7b3b7b.input\n        characters_f1e0c8.characters -> map_4f2d4a.items\n        map_4f2d4a.itemAtIndex -> filter_7e1ce0.items\n        orElse_f4c9f6.first -> result_ai\n        orElse_f4c9f6.second -> characters_f1e0c8.characters\n    }\n\n    \n\n    instance(x: -179, y: 30) first_repeated_59bc6e root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -148, y: 2, name: \"string\") property(String) input_ai\n        out(x: 530, y: -1, name: \"continue\") trigger() continue_8f3d0e\n        out(x: 443, y: 218, name: \"output\") property(Number) output_4b6c5a\n\n        instance(x: -1039, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_4b6c5a\n        instance(x: -1058, y: 438) count_1e159f root.Std_k98ojb.Count {}\n        instance(x: -1099, y: 521) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it == 0\"\n        }\n        instance(x: -1088, y: 256) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1149, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it == 1\"\n        }\n        instance(x: -1047, y: 60) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        input_ai -> firstitem_870503.list\n        0 -> count_1e159f.reset\n        count_1e159f.count -> sub_9ff257.first\n        1 -> sub_9ff257.second\n        sub_9ff257.result -> ifexpression_a2fa90.predicate\n        firstitem_870503.item -> ifexpression_a2fa90.right\n        input_ai -> ifexpression_a2fa90.left\n        ifexpression_a2fa90.then -> continue_8f3d0e\n        count_1e159f.count -> output_4b6c5a\n        0 -> continue_8f3d0e\n    }\n\n    \n\n    instance(x: -67, y: -37) first_repeated_59bc6e root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") FirstRepeat {\n        in(x: -530, y: 3, name: \"input\") property(String) input_ai\n        out(x: 339, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 773, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -432, y: -620) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        list_instance(x: -1059, y: 438) map_8c2e0a root.Std_k98ojb.Iteration.Map {}\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first, middle, last]\n        instance(x: -978, y: -566) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 188, y: 425) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        input_ai -> tolower_7b3b7b.input\n        contains_d42dce.input -> map_8c2e0a.input\n        tolower_7b3b7b.output -> map_8c2e0a.input\n        1 -> sub_f133b2.second\n        input_ai -> if_7c284f.left\n        map_8c2e0a.itemAtIndex -> equal_aabb6e.right\n        length_4b8927.length -> sub_f133b2.first\n        contains_d42dce.result -> if_7c284f.predicate\n        if_7c284f.then -> data_cc1b1b.middle\n        map_8c2e0a.itemAtIndex -> equal_aabb6e.left\n        length_4b8927.length -> sub_f133b2.second\n        data_cc1b1b.first -> output_ai\n    }\n\n    \n\n    instance(x: -97, y: -68) FirstRepeat_b5d10a root.main.FirstRepeat {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated {\n        in(x: -1489, y: -536, name: \"string\") property(String) input_ai\n        out(x: 844, y: 53, name: \"output\") property(String) output_ai\n\n        instance(x: -1049, y: -375) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -1059, y: -696) characters_e4e6a0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 772, y: 76) map_1c2d8f root.Std_k98ojb.Iteration.Map {}\n        instance(x: -432, y: -620) filter_c31c7c root.Std_k98ojb.Query.Filter {\n            where: \"it == it.next\"\n        }\n        instance(x: -978, y: -566) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        data_instance(x: -753, y: -588) data_cc1b1b  = [map, filter, first]\n        list_ai -> map_1c2d8f.items\n        input_ai -> tolower_7b3b7b.input\n        characters_e4e6a0.characters -> map_1c2d8f.output\n        map_1c2d8f.handler -> filter_c31c7c.handler\n        tolower_7b3b7b.value -> filter_c31c7c.where\n        input_ai -> data_cc1b1b.map\n        characters_e4e6a0.characters -> data_cc1b1b.filter\n        map_1c2d8f.output -> data_cc1b1b.first\n        filter_c31c7c.result -> data_cc1b1b.first\n        firstitem_3078c6.item -> data_cc1b1b.first\n    }\n\n    \n\n    instance(x: -67, y: -37) first_repeated_f21f44 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"string\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -179, y: 30) contains_59bc6e root.Std_k98ojb.Strings.Contains {}\n        instance(x: 340, y: 77) map_8d2c43 root.Std_k98ojb.Iteration.Map {}\n        data_instance(x: -753, y: 588) data_cc1b1b  = [input]\n        instance(x: 772, y: 76) tolower_7b3b7b.output -> contains_59bc6e.input\n        input_ai -> tolower_7b3b7b.input\n        map_8d2c43.handler -> function() {\n            var found = false;\n            for (var i=0; i<input.length; i++) {\n                if (contains_59bc6e.contains(input, input.charAt(i))) {\n                    if (!found) {\n                        output_ai = input.charAt(i)\n                        found = true\n                    }\n                }\n            }\n        }\n    }\n\n    \n\n    instance(x: -34, y: 127) first_repeated_f21f44 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -179, y: 30) filter_59bc6e root.Std_k98ojb.Query.Filter {\n            where: \"it != ''\"\n        }\n        instance(x: -1059, y: 696) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_7b3b7b.output -> contains_d42dce.input\n        input_ai -> tolower_7b3b7b.input\n        contains_d42dce.contains -> \"a\"\n        filter_59bc6e.result -> output_ai\n    }\n\n    \n\n    instance(x: -67, y: -37) first_repeated_f21f44 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -1489, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: -1049, y: 100) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -1059, y: 521) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        data_instance(x: -753, y: 588) data_cc1b1b  = [char, count]\n        instance(x: -432, y: 620) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        instance(x: -978, y: 566) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        tolower_7b3b7b.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_ai -> tolower_7b3b7b.input\n        contains_d42dce.result -> data_cc1b1b.count\n        flatten_c31c7c.items -> data_cc1b1b.char\n        length_4b8927.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> data_cc1b1b.index\n    }\n\n    \n\n    instance(x: -67, y: -37) first_repeated_char_59bc6e root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -432, y: 620) characters_4f6c9d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 196, y: 425) map_8eae56 root.Std_k98ojb.Iteration.Map {}\n        instance(x: -978, y: 566) filter_c31c7c root.Std_k98ojb.Query.Filter {}\n        tolower_7b3b7b.output -> characters_4f6c9d.input\n        input_ai -> map_8eae56.items\n        map_8eae56.handler -> filter_c31c7c.predicate\n        characters_4f6c9d.characters -> output_ai\n        filter_c31c7c.result -> first_repeated.output\n    }\n\n    \n\n    instance(x: -67, y: 30) first_repeated_f21f44 root.main.first_repeated {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a sorted array.\") second_smallest {\n        in(x: -102, y: 23, name: \"list\") property(List) list_8a2f0e\n\n        out(x: 1123, y: -28, name: \"output\") property(Number) output_e7c4d1\n\n        instance(x: 94, y: -105) seconditem_8b6cd9 root.Std_k98ojb.List.SecondItem {}\n        getter(x: 0, y: 0, name: \"getter_5e6a2c\") getter_5e6a2c = index\n        setter(x: 118, y: -158, name: \"setter_d3d5f1\") setter_d3d5f1 = index\n        instance(x: 92, y: -22) less_than_a4b8cd root.Std_k98ojb.Logic.LessThan {}\n        list_8a2f0e -> seconditem_8b6cd9.items\n        getter_5e6a2c.value -> output_e7c4d1\n        seconditem_8b6cd9.index -> setter_d3d5f1.new_value\n        less_than_a4b8cd.left -> setter_d3d5f1.first\n        list_8a2f0e[1] -> less_than_a4b8cd.right\n        less_than_a4b8cd.result -> setter_d3d5f1.predicate\n    }\n\n    \n\n    instance(x: -67, y: 45) second_smallest_f6c7e9 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a given list.\") second_smallest {\n        in(x: -101, y: 0, name: \"list\") property(List) list_9d3a6e\n\n        out(x: -114, y: 85, name: \"second_min\") property(Number) second_min_c7f1b2\n        instance(x: -108, y: 75) min_8c2df5 root.Std_k98ojb.List.Min {}\n        instance(x: -107, y: 84) count_3a0e38 root.Std_k98ojb.Std.Count {}\n        instance(x: 103, y: 70) ifexpression_a6f9eb root.Std_k98ojb.Std.IfExpression {}\n        list_9d3a6e -> min_8c2df5.items\n        count_3a0e38.count -> min_8c2df5.reset\n        min_8c2df5.min -> second_min_c7f1b2\n        ifexpression_a6f9eb.then -> second_min_c7f1b2.value\n        2 -> ifexpression_a6f9eb.expression\n    }\n\n    \n\n    instance(x: -92, y: 45) second_smallest_3a4e5d root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -102, y: -83, name: \"list\") property(List) list_9e1d4a\n\n        out(x: 0, y: -104, name: \"min\") property(Number) min_e3c7f8\n        out(x: -109, y: -69, name: \"second_min\") property(Number) second_min_5b2df6\n        instance(x: -341, y: -110) sort_a0d4a root.Std_k98ojb.List.Sort {}\n        list_9e1d4a -> sort_a0d4a.items\n        sort_a0d4a.sorted -> min_e3c7f8\n        second_min_5b2df6 -> min_e3c7f8\n        min_e3c7f8.value -> min_e3c7f8\n        if(min_e3c7f8 == 999999) {\n            throw(\"No second smallest number\")\n        }\n        sort_a0d4a.unsorted_list -> list_9e1d4a\n        sort_a0d4a.first_unsorted_item -> min_e3c7f8\n        second_min_5b2df6 = sort_a0d4a.second_unsorted_item\n    }\n\n    \n\n    instance(x: -56, y: 43) second_smallest_9e1f45 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a given list.\") second_smallest {\n        in(x: -1088, y: 5, name: \"list\") property(List) list_4d3f1b\n\n        out(x: 0, y: -109, name: \"output\") property(Number) output_e9c2e7\n\n        instance(x: 91, y: -104) sort_c1a8d5 root.Std_k98ojb.List.Sort {}\n        list_4d3f1b -> sort_c1a8d5.items\n        sort_c1a8d5.sorted -> output_e9c2e7\n    }\n\n    \n\n    instance(x: 0, y: -67) second_smallest_d6b9eb root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a given list.\") second_smallest {\n        in(x: -113, y: 2, name: \"list\") property(List) list_e3f1d4\n\n        out(x: 1219, y: -67, name: \"output\") property(Number) output_0e7b5d\n\n        instance(x: 0, y: 0) find_second_min_d9a8c6 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -104, y: 28, name: \"first_min\") Std_k98ojb.Std.IfExpression {}\n        list_e3f1d4 -> find_second_min_d9a8c6.items\n        func() {\n            in(x: -113, y: -15, name: \"x\") property(Number) x_7e9eb5\n\n            out(x: 1219, y: -67, name: \"\") property(Number) _2b3f1d\n\n            instance(x: -104, y: 28) less_than_f4c6a0 root.Std_k98ojb.Math.LessThan {}\n            x_7e9eb5 -> less_than_f4c6a0.left\n            0 -> less_than_f4c6a0.right\n            less_than_f4c6a0.result -> find_second_min_d9a8c6.predicate\n        } -> first_min.then\n        func() {\n            in(x: -113, y: -15, name: \"x\") property(Number) x_7e9eb5\n\n            out(x: 1219, y: -67, name: \"\") property(Number) _2b3f1d\n\n            instance(x: -104, y: 28) less_than_f4c6a0 root.Std_k98ojb.Math.LessThan {}\n            x_7e9eb5 -> less_than_f4c6a0.left\n            0 -> less_than_f4c6a0.right\n            less_than_f4c6a0.result -> find_second_min_d9a8c6.predicate\n        } -> first_min.else\n        func() {\n            in(x: -113, y: -15, name: \"x\") property(Number) x_7e9eb5\n\n            out(x: 1219, y: -67, name: \"\") property(Number) _2b3f1d\n\n            instance(x: -104, y: 28) greater_than_f4c6a0 root.Std_k98ojb.Math.GreaterThan {}\n            x_7e9eb5 -> greater_than_f4c6a0.left\n            0 -> greater_than_f4c6a0.right\n            greater_than_f4c6a0.result -> find_second_min_d9a8c6.predicate\n        } -> first_min.then\n        find_second_min_d9a8c6.item -> _2b3f1d\n    }\n\n    \n\n    instance(x: -67, y: 43) second_smallest_5e7d74 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a given list.\") second_smallest {\n        in(x: -1018, y: 1, name: \"list\") property(List) list_3e9d21\n\n        out(x: 0, y: -1, name: \"output\") property(Number) output_b2b6e7\n        instance(x: 93, y: -105) min_8a5f4c root.Std_k98ojb.List.Min {}\n        instance(x: 91, y: -71, name: \"first_smallest\") find_second_smallest_f0d9f5 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -1097, y: -76, name: \"continue\") continue_6c4a1f root.Std_k98ojb.Std.For {}\n        list_3e9d21 -> min_8a5f4c.items\n        func() {\n            in(x: 2, y: -36, name: \"current\") property(Number) current_d7f0d5\n\n            out(x: 0, y: -1, name: \"\") property(Number) _e6b6e3\n\n            instance(x: 94, y: 23) greaterthan_9a4d2c root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: -1068, y: -85, name: \"greater\") notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_d7f0d5 -> greater.right\n            1 -> greater.left\n            greaterthan_9a4d2c.result -> notequal_148aeb.left\n            _ -> notequal_148aeb.right\n            notequal_148aeb.result -> _e6b6e3\n        } -> find_second_smallest_f0d9f5.predicate\n        func() {\n            in(x: 2, y: -36, name: \"current\") property(Number) current_d7f0d5\n\n            out(x: 0, y: -1, name: \"\") property(Number) _e6b6e3\n\n            instance(x: 94, y: 23) greaterthan_9a4d2c root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: -1068, y: -85, name: \"greater\") notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_d7f0d5 -> greater.right\n            1 -> greater.left\n            greaterthan_9a4d2c.result -> notequal_148aeb.left\n            _ -> notequal_148aeb.right\n            notequal_148aeb.result -> _e6b6e3\n        } -> find_second_smallest_f0d9f5.predicate\n        list_3e9d21 -> continue.items\n        first_smallest.item -> continue.index\n        output_b2b6e7.value -> second_smallest.output\n    }\n\n    \n\n    instance(x: -67, y: 47) second_smallest_8a5c0d root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a sorted array.\") second_smallest {\n        in(x: -113, y: 4, name: \"list\") property(List) list_9f6a3d\n\n        out(x: 1091, y: 23, name: \"output\") property(Number) output_8c7e0b\n\n        instance(x: -1032, y: 21, name: \"first_smallest\") Std_k98ojb.List.Min {}\n        instance(x: -1084, y: 46, name: \"second_smallest_node\") Std_k98ojb.List.Min {}\n        data_instance(x: -1098, y: -11, name: \"data_6c0c1f\") = [first, second]\n        instance(x: -1069, y: -78, name: \"if_expression_2a4d3e\") Std_k98ojb.Std.IfExpression {}\n        list_9f6a3d -> if_expression_2a4d3e.items\n        first_smallest.items -> if_expression_2a4d3e.first\n        second_smallest_node.items -> if_expression_2a4d3e.second\n        if_expression_2a4d3e.then -> data_6c0c1f.second\n        list_9f6a3d -> first_smallest.list\n        if_expression_2a4d3e.execute -> second_smallest_node.execute\n    }\n\n    \n\n    instance(x: 104, y: -69) second_smallest_d8a5b2 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -101, y: -43, name: \"list\") property(List) list_8a6f5e\n\n        out(x: 0, y: -1, name: \"output\") property(Number) output_fdb7c3\n\n        instance(x: -1049, y: -375) seconditem_b1cd4b root.Std_k98ojb.List.SecondItem {}\n        instance(x: -1056, y: -697) min_2d0f8e root.Std_k98ojb.List.Min {}\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first, middle, last]\n        instance(x: -432, y: -620) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_8a6f5e -> min_2d0f8e.items\n        min_2d0f8e.min -> seconditem_b1cd4b.item\n        data_cc1b1b -> flatten_c31c7c.items\n        firstitem_9b1bc3 -> data_cc1b1b.first\n        lastitem_d831ca -> data_cc1b1b.last\n        list_8a6f5e -> slice_3f3ee6.list\n        2 -> slice_3f3ee6.start\n        slice_3f3ee6.slice -> data_cc1b1b.middle\n        flatten_c31c7c.flattened -> output_fdb7c3\n        list_8a6f5e -> length_4b8927.list\n        length_4b8927.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> slice_3f3ee6.end\n    }\n\n    \n\n    instance(x: -291, y: 177) second_smallest_4d5e9a root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a given list.\") second_smallest {\n        in(x: -108, y: 2, name: \"list\") property(List) list_4a9e5d\n\n        out(x: 104, y: 23, name: \"output\") property(Number) output_a7fdd3\n\n        instance(x: 0, y: 0) ifexpression_d7c9b1 root.Std_k98ojb.Std.IfExpression {}\n        list_4a9e5d -> ifexpression_d7c9b1.items\n        func() {\n            in(x: -111, y: 3, name: \"first\") property(Number) first_6f8f2f\n\n            out(x: 0, y: 24, name: \"\") property(Number) _e7d6eb\n\n            instance(x: 109, y: 18) min_4d5c42 root.Std_k98ojb.List.Min {}\n            first_6f8f2f -> min_4d5c42.items\n            ifexpression_d7c9b1.then -> _e7d6eb.execute\n            -999 -> _e7d6eb.new_value\n            min_4d5c42.min -> output_a7fdd3\n        } -> ifexpression_d7c9b1.expression\n        instance(x: 0, y: 24) second_smallest_node root.main.second_smallest {}\n    }\n\n    \n\n    instance(x: -92, y: 49) second_smallest_5e2d4a root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a sorted array.\") second_smallest {\n        in(x: -1021, y: -49, name: \"list\") property(List) list_5d0e8f\n\n        out(x: 1234, y: -47, name: \"output\") property(Number) output_b7c3df\n\n        instance(x: 93, y: -105) seconditem_a1b2a root.Std_k98ojb.List.SecondItem {}\n        instance(x: 439, y: -75, name: \"first_smallest\") find_4f5d0a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 1023, y: -19, name: \"continue\") continue_e1c9e7 trigger() continue_e1c9e7\n        list_5d0e8f -> first_smallest.items\n        func() {\n            in(x: -1044, y: -28, name: \"current\") property(Number) current_3bfc95\n\n            out(x: 1234, y: -47, name: \"\") property(Number) _7dd980\n\n            instance(x: 97, y: -22) less_than_ea5d1b root.Std_k98ojb.Math.LessThan {}\n            current_3bfc95 -> less_than_ea5d1b.left\n            find_4f5d0a.item -> less_than_ea5d1b.right\n            less_than_ea5d1b.result -> _7dd980\n        } -> find_4f5d0a.predicate\n        func() {\n            in(x: -1044, y: -28, name: \"current\") property(Number) current_3bfc95\n\n            out(x: 1234, y: -47, name: \"\") property(Number) _7dd980\n\n            instance(x: 97, y: -22) less_than_ea5d1b root.Std_k98ojb.Math.LessThan {}\n            find_4f5d0a.item -> less_than_ea5d1b.left\n            current_3bfc95 -> less_than_ea5d1b.right\n            less_than_ea5d1b.result -> _7dd980\n        } -> seconditem_a1b2a.predicate\n        find_4f5d0a.item -> continue_e1c9e7.item\n        first_smallest.item -> output_b7c3df\n    }\n\n    \n\n    instance(x: -68, y: 43) second_smallest_6cd8f1 root.main.second_smallest {}\n}"
            ]
        }
    }
]