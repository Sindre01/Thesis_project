[
  {
    "experiment_name": "regular_RAG_10_shot",
    "best_params_optimization": "semantic",
    "temperature": 0.9,
    "top_p": 0.2,
    "top_k": 50,
    "seed": 3,
    "n_generations_per_task": 10,
    "model": "phi4:14b-fp16",
    "largest_context": 15999,
    "task_candidates": {
      "7": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -176, y: 12, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -177, y: -124, name: \"list2\") property(List) list2_eb0d7c\n\n        out(x: 525, y: -101, name: \"output\") property(Bool) output_4f5c3e\n\n        instance(x: 185, y: -103, name: \"intersection\") intersection_9a8f1f root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2f9e -> intersection_9a8f1f.left\n        list2_eb0d7c -> intersection_9a8f1f.right\n        instance(x: 492, y: -103) notempty_5a3b1c root.Std_k98ojb.List.NotEmpty {}\n        intersection_9a8f1f.intersection -> notempty_5a3b1c.list\n        notempty_5a3b1c.isEmpty -> output_4f5c3e\n    }\n\n    \n\n    instance(x: -154, y: 46) has_common_element_6d0f2c root.main.has_common_element {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -176, y: 18, name: \"list1\") property(List) list1_4e9f8a\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_eb7c6d\n\n        out(x: 505, y: -50, name: \"has_common_element\") property(Bool) has_common_element_1b0e3f\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_5a9b8c root.Std_k98ojb.Sets.Intersection {}\n        list1_4e9f8a -> intersection_5a9b8c.left\n        list2_eb7c6d -> intersection_5a9b8c.right\n        instance(x: 752, y: -49) notempty_3e9f0f root.Std_k98ojb.List.NotEmpty {}\n        intersection_5a9b8c.intersection -> notempty_3e9f0f.list\n        notempty_3e9f0f.isEmpty -> has_common_element_1b0e3f\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_7d4b6a root.main.has_common_element {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -277, y: 166, name: \"list1\") property(List) list_09fcba\n        in(x: -277, y: 166, name: \"list2\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_edc2e3\n\n        instance(x: 532, y: 147) intersection_7e1ce0 root.Std_k98ojb.Sets.Intersection {}\n        list_09fcba -> intersection_7e1ce0.left\n        list_09fcba -> intersection_7e1ce0.right\n        instance(x: -39, y: 26, name: \"First even number\") notempty_de624f root.Std_k98ojb.List.NotEmpty {}\n        intersection_7e1ce0.intersection -> notempty_de624f.list\n        notempty_de624f.isEmpty -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) common_element_f53d27 root.main.common_element {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -179, y: 18, name: \"list1\") property(List) list1_9e2f8a\n        in(x: -167, y: -120, name: \"list2\") property(List) list2_7c6d5b\n\n        out(x: 505, y: -50, name: \"has_common_element\") property(Bool) has_common_element_9e1f0a\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_8f4c3e root.Std_k98ojb.Sets.Intersection {}\n        list1_9e2f8a -> intersection_8f4c3e.left\n        list2_7c6d5b -> intersection_8f4c3e.right\n        instance(x: 188, y: -50) notempty_0c2b2d root.Std_k98ojb.List.NotEmpty {}\n        intersection_8f4c3e.intersection -> notempty_0c2b2d.list\n        notempty_0c2b2d.isEmpty -> has_common_element_9e1f0a\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_aad0c2 root.main.has_common_element {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -176, y: 18, name: \"list1\") property(List) list1_8e9f0a\n        in(x: -165, y: -122, name: \"list2\") property(List) list2_e5b3c7\n\n        out(x: 504, y: -48, name: \"output\") property(Bool) output_6d7c4e\n\n        instance(x: 223, y: -46, name: \"intersection\") intersection_f9f8a1 root.Std_k98ojb.Sets.Intersection {}\n        list1_8e9f0a -> intersection_f9f8a1.left\n        list2_e5b3c7 -> intersection_f9f8a1.right\n        instance(x: 679, y: -46) notempty_6d4d8f root.Std_k98ojb.List.NotEmpty {}\n        intersection_f9f8a1.intersection -> notempty_6d4d8f.list\n        notempty_6d4d8f.isEmpty -> output_6d7c4e\n    }\n\n    \n\n    instance(x: -137, y: 59) has_common_element_e5b2a0 root.main.has_common_element {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -178, y: 18, name: \"list1\") property(List) list1_4a8b6f\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_4a8b6f -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        instance(x: 245, y: -54) notempty_3e5c9d root.Std_k98ojb.List.NotEmpty {}\n        intersection_201051.intersection -> notempty_3e5c9d.list\n        notempty_3e5c9d.isEmpty -> output_0d40f1\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_ac7dfb root.main.common_element {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -277, y: 166, name: \"list1\") property(List) list_09fcba\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_edc2e3\n\n        instance(x: 532, y: 147) intersection_7e1ce0 root.Std_k98ojb.Sets.Intersection {}\n        list_09fcba -> intersection_7e1ce0.left\n        list2_c62075 -> intersection_7e1ce0.right\n        instance(x: -39, y: 26, name: \"First even number\") notempty_de624f root.Std_k98ojb.List.NotEmpty {}\n        intersection_7e1ce0.intersection -> notempty_de624f.list\n        notempty_de624f.isEmpty -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) has_common_element_f53d27 root.main.has_common_element {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -178, y: 18, name: \"list1\") property(List) list1_4a8b9f\n        in(x: -166, y: -121, name: \"list2\") property(List) list2_7c0e6d\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_5e1e7a\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_f3b46d root.Std_k98ojb.Sets.Intersection {}\n        list1_4a8b9f -> intersection_f3b46d.left\n        list2_7c0e6d -> intersection_f3b46d.right\n        instance(x: 188, y: -50) notempty_852f2e root.Std_k98ojb.List.NotEmpty {}\n        intersection_f3b46d.intersection -> notempty_852f2e.list\n        notempty_852f2e.isEmpty -> output_5e1e7a\n    }\n\n    \n\n    instance(x: -138, y: -63) common_element_aad0c2 root.main.common_element {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -172, y: 18, name: \"list1\") property(List) list1_94ca93\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_aa3106\n\n        out(x: 505, y: -50, name: \"has_common_element\") property(Bool) has_common_element_20b99a\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_06d2e5 root.Std_k98ojb.Sets.Intersection {}\n        list1_94ca93 -> intersection_06d2e5.left\n        list2_aa3106 -> intersection_06d2e5.right\n        instance(x: 188, y: -50) notempty_f3a9f8 root.Std_k98ojb.List.NotEmpty {}\n        intersection_06d2e5.intersection -> notempty_f3a9f8.list\n        notempty_f3a9f8.isEmpty -> has_common_element_20b99a\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_aad0c2 root.main.has_common_element {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -175, y: 10, name: \"list1\") property(List) list1_3a9b5f\n        in(x: -165, y: -123, name: \"list2\") property(List) list2_8e7c0d\n\n        out(x: 504, y: -95, name: \"output\") property(Bool) output_6e1b4a\n\n        instance(x: 146, y: -98) intersection_5f9c3e root.Std_k98ojb.Sets.Intersection {}\n        list1_3a9b5f -> intersection_5f9c3e.left\n        list2_8e7c0d -> intersection_5f9c3e.right\n        instance(x: 385, y: -97) notempty_6e4f9c root.Std_k98ojb.List.NotEmpty {}\n        intersection_5f9c3e.intersection -> notempty_6e4f9c.list\n        notempty_6e4f9c.isEmpty -> output_6e1b4a\n    }\n\n    \n\n    instance(x: -93, y: 60) has_common_element_a8d7d2 root.main.has_common_element {}\n}"
      ],
      "11": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 3, name: \"list\") property(List) list_9a8f1e\n\n        out(x: 1227, y: 2, name: \"output\") property(Bool) output_eb0d5c\n\n        instance(x: 772, y: 76) filter_6e4c7c root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: -92, y: -97) intersection_c9a3f8 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_9a8f1e -> filter_6e4c7c.list\n        filter_6e4c7c.result -> intersection_c9a3f8.left\n        list_9a8f1e -> intersection_c9a3f8.right\n        length_6e87f2.length -> equal_f89569.left\n        intersection_c9a3f8.intersection -> length_6e87f2.list\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_eb0d5c\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_7f7f4 root.main.is_consecutive {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 3, name: \"list\") property(List) list_1a8f9e\n\n        out(x: 557, y: -2, name: \"output\") property(Bool) output_5b0c7d\n\n        instance(x: 146, y: 0) sort_b6a4ef root.Std_k98ojb.List.Sort {}\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 679, y: 51) lessthan_7f8d1c root.Std_k98ojb.Math.LessThan {}\n        instance(x: 1058, y: -203) and_9e2a4f root.Std_k98ojb.Logic.And {}\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        sort_b6a4ef.sorted -> for_d26972.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) add_b4554f root.Std_k98ojb.Math.Add {}\n            instance(x: 285, y: -25) lessthan_1a9d3c root.Std_k98ojb.Math.LessThan {}\n            current_81298e -> lessthan_1a9d3c.left\n            add_b4554f.result -> lessthan_1a9d3c.right\n            1 -> add_b4554f.second\n            for_d26972.index -> add_b4554f.first\n            lessthan_1a9d3c.result -> bool_4524be\n        } -> and_9e2a4f.left\n        for_d26972.item -> and_9e2a4f.right\n        and_9e2a4f.result -> if_e19a62.predicate\n        for_d26972.onItem -> if_e19a62.execute\n        if_e19a62.else -> output_5b0c7d\n        1 -> lessthan_7f8d1c.right\n        for_d26972.item -> lessthan_7f8d1c.left\n        lessthan_7f8d1c.result -> if_e19a62.then\n        for_d26972.done -> output_5b0c7d\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_2e3f6 root.main.is_consecutive {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 0, name: \"list\") property(List) list_1e3f8a\n\n        out(x: 1217, y: 15, name: \"output\") property(Bool) output_eb9c4d\n\n        instance(x: 1006, y: -5) ifexpression_0a2c1c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 489, y: 22, name: \"getter_9e7d3f\") getter_9e7d3f = previous\n        setter(x: 935, y: -310, name: \"setter_b5b6a8\") setter_b5b6a8 = previous\n        instance(x: 467, y: -18) for_1c0a4f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -119, name: \"setter_b5b6a8\") setter_2e7d9d = previous\n        instance(x: -276, y: -33) getat_3b1c6c root.Std_k98ojb.List.GetAt {}\n        ifexpression_0a2c1c.else -> continue_4f5a9c\n        ifexpression_0a2c1c.value -> output_eb9c4d\n        ifexpression_0a2c1c.then -> setter_b5b6a8.execute\n        list_1e3f8a -> for_1c0a4f.items\n        for_1c0a4f.item -> ifexpression_0a2c1c.gen_2\n        for_1c0a4f.index -> ifexpression_0a2c1c.gen_0\n        getter_9e7d3f.value -> ifexpression_0a2c1c.gen_1\n        for_1c0a4f.onItem -> ifexpression_0a2c1c.execute\n        for_1c0a4f.done -> continue_4f5a9c\n        for_1c0a4f.item -> setter_b5b6a8.new_value\n        list_1e3f8a -> getat_3b1c6c.list\n        0 -> getat_3b1c6c.index\n        getat_3b1c6c.itemAtIndex -> setter_2e7d9d.new_value\n        execute_4a9b9c -> setter_2e7d9d.execute\n        setter_2e7d9d.continue -> for_1c0a4f.reset\n        setter_b5b6a8.continue -> for_1c0a4f.next\n    }\n\n    \n\n    instance(x: -83, y: 60) is_consecutive_3e3c0c root.main.is_consecutive {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -277, y: 2, name: \"list\") property(List) list_1e9d8a\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_6c3b4f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_6c3b4f\n        ifexpression_875761.value -> output_6c3b4f\n        list_1e9d8a -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_2c9f8e root.main.is_consecutive {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -278, y: 5, name: \"list\") property(List) list_1a8f9e\n\n        out(x: 1223, y: 4, name: \"output\") property(Bool) output_e6b2c7\n\n        instance(x: 0, y: 0) filter_8d9b1c root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 100, y: -10) for_5e6f3a root.Std_k98ojb.Std.For {}\n        instance(x: 400, y: 30) lessthan_1d9c8f root.Std_k98ojb.Math.LessThan {}\n        instance(x: 700, y: 0) if_2b4c5e root.Std_k98ojb.Std.If {}\n        instance(x: 900, y: -10) and_3a7d9f root.Std_k98ojb.Logic.And {}\n        instance(x: 1100, y: 30) add_6e1b8f root.Std_k98ojb.Math.Add {}\n        list_1a8f9e -> filter_8d9b1c.list\n        func() {\n            in(x: -192, y: 34, name: \"current\") property(Number) current_7f5c4f\n\n            out(x: 705, y: 44, name: \"bool\") property(Bool) bool_6a3d8e\n\n            instance(x: 226, y: 29) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 35) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_7f5c4f -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_6a3d8e\n        } -> filter_8d9b1c.handler\n        filter_8d9b1c.result -> for_5e6f3a.items\n        func() {\n            in(x: -192, y: 34, name: \"current\") property(Number) current_7f5c4f\n\n            out(x: 705, y: 44, name: \"bool\") property(Bool) bool_6a3d8e\n\n            instance(x: 226, y: 29) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 35) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_7f5c4f -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_6a3d8e\n        } -> for_5e6f3a.handler\n        func() {\n            in(x: -192, y: 34, name: \"current\") property(Number) current_7f5c4f\n\n            out(x: 705, y: 44, name: \"bool\") property(Bool) bool_6a3d8e\n\n            instance(x: 226, y: 29) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 35) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_7f5c4f -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_6a3d8e\n        } -> if_2b4c5e.predicate\n        for_5e6f3a.onItem -> if_2b4c5e.execute\n        func() {\n            in(x: -192, y: 34, name: \"current\") property(Number) current_7f5c4f\n\n            out(x: 705, y: 44, name: \"bool\") property(Bool) bool_6a3d8e\n\n            instance(x: 226, y: 29) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 35) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_7f5c4f -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_6a3d8e\n        } -> add_6e1b8f.first\n        for_5e6f3a.index -> add_6e1b8f.second\n        if_2b4c5e.then -> lessthan_1d9c8f.execute\n        func() {\n            in(x: -192, y: 34, name: \"current\") property(Number) current_7f5c4f\n\n            out(x: 705, y: 44, name: \"bool\") property(Bool) bool_6a3d8e\n\n            instance(x: 226, y: 29) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 35) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_7f5c4f -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_6a3d8e\n        } -> lessthan_1d9c8f.left\n        add_6e1b8f.result -> lessthan_1d9c8f.right\n        lessthan_1d9c8f.result -> and_3a7d9f.left\n        for_5e6f3a.item -> and_3a7d9f.right\n        if_2b4c5e.else -> output_e6b2c7\n        and_3a7d9f.result -> if_2b4c5e.value\n        for_5e6f3a.done -> output_e6b2c7\n    }\n\n    \n\n    instance(x: -67, y: 127) is_consecutive_8a1c4f root.main.is_consecutive {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 3, name: \"list\") property(List) list_1a0f2e\n\n        out(x: 1227, y: 6, name: \"output\") property(Bool) output_9c4b5d\n\n        instance(x: 772, y: 75) ifexpression_8f8f3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_9e7a6d\") getter_9e7a6d = previous\n        setter(x: 679, y: -313, name: \"setter_5c4f2b\") setter_5c4f2b = previous\n        instance(x: 321, y: -20) for_8a3a0c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_5c4f2b\") setter_1e7d6c = previous\n        instance(x: -275, y: -35) getat_9a8a3f root.Std_k98ojb.List.GetAt {}\n        ifexpression_8f8f3c.else -> continue_a96db6\n        ifexpression_8f8f3c.value -> output_5bbcd7\n        ifexpression_8f8f3c.then -> setter_5c4f2b.execute\n        list_1a0f2e -> for_8a3a0c.items\n        for_8a3a0c.item -> ifexpression_8f8f3c.gen_2\n        for_8a3a0c.index -> ifexpression_8f8f3c.gen_0\n        getter_9e7a6d.value -> ifexpression_8f8f3c.gen_1\n        for_8a3a0c.onItem -> ifexpression_8f8f3c.execute\n        for_8a3a0c.done -> continue_a96db6\n        for_8a3a0c.item -> setter_5c4f2b.new_value\n        list_1a0f2e -> getat_9a8a3f.list\n        0 -> getat_9a8a3f.index\n        getat_9a8a3f.itemAtIndex -> setter_1e7d6c.new_value\n        execute_90aaec -> setter_1e7d6c.execute\n        setter_1e7d6c.continue -> for_8a3a0c.reset\n        setter_5c4f2b.continue -> for_8a3a0c.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_9a4f7d root.main.is_consecutive {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 2, name: \"list\") property(List) list_1a9f0e\n\n        out(x: 1217, y: 11, name: \"output\") property(Bool) output_8c3d5b\n\n        instance(x: 772, y: 76) filter_6b4b9c root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -39, y: 26, name: \"First even number\") find_1a7f5d root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"First odd number\") ``First even number_2e8c6`` root.Std_k98ojb.Iteration.Find {}\n        list_1a9f0e -> find_1a7f5d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_a3d5e2\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_9c1a8f\n\n            instance(x: 112, y: 80) modulo_7b6c0c root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_5e3d4c root.Std_k98ojb.Logic.Equal {}\n            current_a3d5e2 -> modulo_7b6c0c.value\n            2 -> modulo_7b6c0c.divisor\n            modulo_7b6c0c.result -> equal_5e3d4c.left\n            0 -> equal_5e3d4c.right\n            equal_5e3d4c.result -> bool_9c1a8f\n        } -> find_1a7f5d.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_a3d5e2\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_9c1a8f\n\n            instance(x: 112, y: 80) modulo_7b6c0c root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_5d3e2f root.Std_k98ojb.Logic.NotEqual {}\n            current_a3d5e2 -> modulo_7b6c0c.value\n            2 -> modulo_7b6c0c.divisor\n            modulo_7b6c0c.result -> notequal_5d3e2f.left\n            0 -> notequal_5d3e2f.right\n            notequal_5d3e2f.result -> bool_9c1a8f\n        } -> ``First even number_2e8c6``.predicate\n        list_1a9f0e -> ``First even number_2e8c6``.items\n        find_1a7f5d.item -> filter_6b4b9c.list\n        ``First even number_2e8c6``.item -> filter_6b4b9c.list\n        instance(x: 0, y: 0) reduce_3a3d5c root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -113, y: 34, name: \"acc\") property(Bool) acc_1f8e9c\n            in(x: -192, y: 84, name: \"current\") property(Number) current_a3d5e2\n\n            out(x: 515, y: 44, name: \"\") property(Bool) _b7a6b0\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            current_a3d5e2 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> _b7a6b0\n        } -> reduce_3a3d5c.handler\n        filter_6b4b9c.result -> reduce_3a3d5c.items\n        true -> reduce_3a3d5c.initialValue\n        reduce_3a3d5c.output -> output_8c3d5b\n    }\n\n    \n\n    instance(x: -55, y: 529) is_consecutive_1f7e6 root.main.is_consecutive {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 3, name: \"list\") property(List) list_1a0f2e\n\n        out(x: 1027, y: -4, name: \"output\") property(Bool) output_9c8b7d\n\n        instance(x: 0, y: 0) for_5a6a5c root.Std_k98ojb.Std.For {}\n        instance(x: 321, y: -1) lessthan_3e2f9f root.Std_k98ojb.Math.LessThan {}\n        instance(x: 630, y: 10) if_8d0b4c root.Std_k98ojb.Std.If {}\n        instance(x: 905, y: -13) add_e5a7ee root.Std_k98ojb.Math.Add {}\n        list_1a0f2e -> for_5a6a5c.items\n        func() {\n            in(x: -112, y: 35, name: \"current\") property(Number) current_8d9c3f\n\n            out(x: 518, y: 45, name: \"bool\") property(Bool) bool_7e1b0a\n\n            instance(x: 90, y: 30) modulo_2b5b4f root.Std_k98ojb.Math.Modulo {}\n            instance(x: 313, y: 36) equal_8d9c6f root.Std_k98ojb.Logic.Equal {}\n            current_8d9c3f -> modulo_2b5b4f.value\n            2 -> modulo_2b5b4f.divisor\n            modulo_2b5b4f.result -> equal_8d9c6f.left\n            0 -> equal_8d9c6f.right\n            equal_8d9c6f.result -> bool_7e1b0a\n        } -> for_5a6a5c.handler\n        func() {\n            in(x: -112, y: 35, name: \"current\") property(Number) current_8d9c3f\n\n            out(x: 518, y: 45, name: \"bool\") property(Bool) bool_7e1b0a\n\n            instance(x: 90, y: 30) modulo_2b5b4f root.Std_k98ojb.Math.Modulo {}\n            instance(x: 313, y: 36) notequal_8d9c6f root.Std_k98ojb.Logic.NotEqual {}\n            current_8d9c3f -> modulo_2b5b4f.value\n            2 -> modulo_2b5b4f.divisor\n            modulo_2b5b4f.result -> notequal_8d9c6f.left\n            0 -> notequal_8d9c6f.right\n            notequal_8d9c6f.result -> bool_7e1b0a\n        } -> if_8d0b4c.predicate\n        for_5a6a5c.index -> lessthan_3e2f9f.left\n        list_1a0f2e.length - 1 -> lessthan_3e2f9f.right\n        func() {\n            in(x: -112, y: 35, name: \"current\") property(Number) current_8d9c3f\n\n            out(x: 518, y: 45, name: \"bool\") property(Bool) bool_7e1b0a\n\n            instance(x: 90, y: 30) modulo_2b5b4f root.Std_k98ojb.Math.Modulo {}\n            instance(x: 313, y: 36) equal_8d9c6f root.Std_k98ojb.Logic.Equal {}\n            current_8d9c3f -> modulo_2b5b4f.value\n            2 -> modulo_2b5b4f.divisor\n            modulo_2b5b4f.result -> equal_8d9c6f.left\n            0 -> equal_8d9c6f.right\n            equal_8d9c6f.result -> bool_7e1b0a\n        } -> add_e5a7ee.first\n        for_5a6a5c.item -> add_e5a5ee.second\n        lessthan_3e2f9f.result -> if_8d0b4c.predicate\n        1 -> add_e5a7ee.second\n        add_e5a7ee.result -> for_5a6a5c.items.getAt.index\n        list_1a0f2e.getAt.itemAtIndex -> lessthan_3e2f9f.right\n        if_8d0b4c.else -> output_9c8b7d\n        if_8d0b4c.then -> for_5a6a5c.next\n        for_5a6a5c.done -> output_9c8b7d\n    }\n\n    \n\n    instance(x: -68, y: 119) is_consecutive_1e3f9f root.main.is_consecutive {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -277, y: 0, name: \"list\") property(List) list_1a9d5e\n\n        out(x: 443, y: -1, name: \"output\") property(Bool) output_7c8b4f\n\n        instance(x: 0, y: 0) filter_3b6c2c root.Std_k98ojb.Query.Filter {\n            where: \"it + 1 == next\"\n        }\n        instance(x: -277, y: 148, name: \"list\") map_c9e7d8 root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> map_c9e7d8.handler\n        list_1a9d5e -> map_c9e7d8.items\n        instance(x: 0, y: 0) for_4f2b6c root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -192, y: -25, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> for_4f2b6c.handler\n        map_c9e7d8.output_list -> for_4f2b6c.items\n        instance(x: -277, y: 298) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        func() {\n            in(x: -192, y: -25, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> getat_ce2a48.handler\n        for_4f2b6c.index -> getat_ce2a48.index\n        list_1a9d5e -> getat_ce2a48.list\n        instance(x: 0, y: 0) add_b4554f root.Std_k98ojb.Math.Add {}\n        func() {\n            in(x: -192, y: -25, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> add_b4554f.handler\n        for_4f2b6c.item -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> getat_ce2a48.new_value\n        getat_ce2a48.itemAtIndex -> filter_3b6c2c.gen_0\n        for_4f2b6c.item -> filter_3b6c2c.gen_1\n        list_1a9d5e -> filter_3b6c2c.list\n        instance(x: 0, y: 0) length_8166b0 root.Std_k98ojb.List.Length {}\n        func() {\n            in(x: -192, y: -25, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> length_8166b0.handler\n        filter_3b6c2c.result -> length_8166b0.list\n        instance(x: -277, y: 449) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        length_8166b0.length -> equal_f89569.left\n        func() {\n            in(x: -192, y: -25, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> equal_f89569.handler\n        for_4f2b6c.onItem -> for_4f2b6c.next\n        length_8166b0.length -> equal_f89569.right\n        equal_f89569.result -> output_7c8b4f\n    }\n\n    \n\n    instance(x: -55, y: 529) is_consecutive_1e9d1a root.main.is_consecutive {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -278, y: 5, name: \"list\") property(List) list_0e9d6f\n\n        out(x: 1023, y: -2, name: \"output\") property(Bool) output_1a7c8b\n\n        instance(x: 0, y: 0) filter_1e4b5c root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -10, y: -12) length_9d6f7a root.Std_k98ojb.List.Length {}\n        instance(x: 240, y: -13) greaterthan_3e8c1f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 520, y: -11) ifexpression_c0a2f9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"length == 1 || (list[length-1] - list[0]) == length - 1\"\n        }\n        instance(x: 790, y: -12) getat_7e6d5c root.Std_k98ojb.List.GetAt {}\n        instance(x: 1022, y: -13) getat_8a9f4a root.Std_k98ojb.List.GetAt {}\n        list_0e9d6f -> filter_1e4b5c.list\n        filter_1e4b5c.result -> length_9d6f7a.list\n        1 -> greaterthan_3e8c1f.right\n        length_9d6f7a.length -> greaterthan_3e8c1f.left\n        list_0e9d6f -> getat_7e6d5c.list\n        length_9d6f7a.length -> getat_7e6d5c.index\n        getat_7e6d5c.itemAtIndex -> ifexpression_c0a2f9.gen_1\n        list_0e9d6f -> getat_8a9f4a.list\n        0 -> getat_8a9f4a.index\n        getat_8a9f4a.itemAtIndex -> ifexpression_c0a2f9.gen_0\n        length_9d6f7a.length -> ifexpression_c0a2f9.gen_2\n        greaterthan_3e8c1f.result -> ifexpression_c0a2f9.predicate\n        ifexpression_c0a2f9.value -> output_1a7c8b\n    }\n\n    \n\n    instance(x: -64, y: 127) is_consecutive_6d4d5c root.main.is_consecutive {}\n}"
      ],
      "17": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 11, name: \"sublist\") property(List) sublist_3f8a9e\n        in(x: -298, y: -186, name: \"list\") property(List) list_1c7b0d\n\n        out(x: 1025, y: -110, name: \"output\") property(Bool) output_6e4b1e\n\n        instance(x: 103, y: -178, name: \"is sublist\") filter_3f8a9e root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_7c1d5e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            sublist_3f8a9e -> contains_32727d.list\n            current_7c1d5e -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> filter_3f8a9e.handler\n        list_1c7b0d -> filter_3f8a9e.items\n        instance(x: 103, y: -178) length_8166b0 root.Std_k98ojb.List.Length {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_7c1d5e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            sublist_3f8a9e -> contains_32727d.list\n            current_7c1d5e -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> length_8166b0.handler\n        filter_3f8a9e.output_list -> length_8166b0.items\n        instance(x: 103, y: -178) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        length_8166b0.length -> equal_f89569.left\n        sublist_3f8a9e -> equal_f89569.right\n        equal_f89569.result -> output_6e4b1e\n    }\n\n    \n\n    instance(x: -290, y: 5) is_sublist_2c9d0f root.main.is_sublist {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 20, name: \"sublist\") property(List) sublist_1a8f9e\n        in(x: -284, y: -160, name: \"list\") property(List) list_3b0c6d\n\n        out(x: 555, y: -127, name: \"output\") property(Bool) output_e7c4ba\n\n        instance(x: -91, y: -126, name: \"sublist length\") length_9a1e5f root.Std_k98ojb.List.Length {}\n        instance(x: 146, y: -125) contains_32727d root.Std_k98ojb.List.Contains {}\n        sublist_1a8f9e -> length_9a1e5f.list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) slice_c6f7a1 root.Std_k98ojb.List.Slice {}\n            instance(x: 285, y: -25) contains_9e5d3c root.Std_k98ojb.List.Contains {}\n            list_3b0c6d -> slice_c6f7a1.list\n            current_81298e -> slice_c6f7a1.start\n            length_9a1e5f.length -> slice_c6f7a1.end\n            sublist_1a8f9e -> contains_9e5d3c.item\n            slice_c6f7a1.slice -> contains_9e5d3c.list\n            contains_9e5d3c.is_contained -> bool_4524be\n        } -> contains_32727d.handler\n        list_3b0c6d -> contains_32727d.list\n        length_9a1e5f.length -> contains_32727d.count\n        contains_32727d.result -> output_e7c4ba\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_a8b3e2 root.main.is_sublist {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -298, y: 5, name: \"sublist\") property(List) sublist_1d0a9f\n        in(x: -299, y: -186, name: \"list\") property(List) list_3e7c4b\n\n        out(x: 1032, y: -110, name: \"output\") property(Bool) output_e6a5ec\n\n        instance(x: 101, y: -121) contains_1d0f8f root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -31, y: -27, name: \"current\") property(List) current_9c2e4e\n            in(x: -25, y: 41, name: \"_index\") property(Number) _index_7f1d5b\n\n            out(x: 693, y: 37, name: \"output\") property(Bool) output_3a8a6c\n\n            instance(x: 224, y: 43) slice_4e9b0c root.Std_k98ojb.List.Slice {}\n            instance(x: 464, y: 40) contains_1d0f8f_2 root.Std_k98ojb.List.Contains {}\n            current_9c2e4e -> slice_4e9b0c.list\n            _index_7f1d5b -> slice_4e9b0c.start\n            -1 -> slice_4e9b0c.end\n            slice_4e9b0c.slice -> contains_1d0f8f_2.list\n            sublist_1d0a9f -> contains_1d0f8f_2.item\n            contains_1d0f8f_2.is_contained -> output_3a8a6c\n        } -> contains_1d0f8f.handler\n        list_3e7c4b -> contains_1d0f8f.items\n        contains_1d0f8f.result -> output_e6a5ec\n    }\n\n    \n\n    instance(x: -84, y: 61) is_sublist_9f7b1c root.main.is_sublist {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 20, name: \"sublist\") property(List) sublist_1f0d8a\n        in(x: -283, y: -150, name: \"list\") property(List) list_3b9e6c\n\n        out(x: 558, y: -129, name: \"output\") property(Bool) output_5f2f4c\n\n        instance(x: -95, y: -128, name: \"find sublist in list\") find_1a0d7c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -191, y: 6, name: \"current\") property(List) current_8f9e4\n\n            out(x: 705, y: 17, name: \"bool\") property(Bool) bool_5c1d0a\n\n            instance(x: 224, y: 12) contains_7b3c6 root.Std_k98ojb.List.Contains {}\n            sublist_1f0d8a -> contains_7b3c6.item\n            current_8f9e4 -> contains_7b3c6.list\n            contains_7b3c6.is_contained -> bool_5c1d0a\n        } -> find_1a0d7c.predicate\n        list_3b9e6c -> find_1a0d7c.items\n        find_1a0d7c.item -> output_5f2f4c\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_f8f1a root.main.is_sublist {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -275, y: 20, name: \"sublist\") property(List) sublist_1d8f9e\n        in(x: -276, y: -170, name: \"list\") property(List) list_7b3c4a\n\n        out(x: 1000, y: -110, name: \"output\") property(Bool) output_e6b2c5\n\n        instance(x: 106, y: -164) contains_1f8e1d root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -192, y: -25, name: \"current\") property(List) current_7a3c9f\n\n            out(x: 705, y: -28, name: \"output\") property(Bool) output_8e1d4b\n\n            instance(x: 226, y: -23) contains_c5f0ec root.Std_k98ojb.List.Contains {}\n            sublist_1d8f9e -> contains_c5f0ec.list\n            current_7a3c9f -> contains_c5f0ec.item\n        } -> contains_1f8e1d.handler\n        list_7b3c4a -> contains_1f8e1d.items\n        contains_1f8e1d.result -> output_e6b2c5\n    }\n\n    \n\n    instance(x: -291, y: 19) is_sublist_9c7b0f root.main.is_sublist {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -287, y: 15, name: \"sublist\") property(List) sublist_1a9f2e\n        in(x: -289, y: -175, name: \"list\") property(List) list_0b075e\n\n        out(x: 554, y: -111, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 198, y: -109) contains_32727d root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -232, y: -67, name: \"current\") property(List) current_3e9a2c\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -7, y: -53) contains_1f0b4d root.Std_k98ojb.List.Contains {}\n            sublist_1a9f2e -> contains_1f0b4d.list\n            current_3e9a2c -> contains_1f0b4d.item\n            contains_1f0b4d.is_contained -> result_e245cb\n        } -> contains_32727d.handler\n        list_0b075e -> contains_32727d.list\n        func() {\n            in(x: -232, y: -67, name: \"current\") property(List) current_3e9a2c\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -7, y: -53) contains_1f0b4d root.Std_k98ojb.List.Contains {}\n            sublist_1a9f2e -> contains_1f0b4d.list\n            current_3e9a2c -> contains_1f0b4d.item\n            contains_1f0b4d.is_contained -> result_e245cb\n        } -> contains_32727d.handler\n        list_0b075e -> contains_32727d.list\n        contains_32727d.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: -37) is_sublist_15f9e9 root.main.is_sublist {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 10, name: \"sublist\") property(List) sublist_1a0f8e\n        in(x: -286, y: -156, name: \"list\") property(List) list_2b9d7c\n\n        out(x: 556, y: -127, name: \"output\") property(Bool) output_3d4e6f\n\n        instance(x: -94, y: -129) contains_1a0f8e root.Std_k98ojb.List.Contains {}\n        list_2b9d7c -> contains_1a0f8e.list\n        sublist_1a0f8e -> contains_1a0f8e.item\n        contains_1a0f8e.is_contained -> output_3d4e6f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_7a4dad root.main.is_sublist {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 20, name: \"sublist\") property(List) sublist_1d9f6a\n        in(x: -294, y: -169, name: \"list\") property(List) list_0b075e\n\n        out(x: 557, y: -96, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        sublist_1d9f6a -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_0b075e -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        sublist_1d9f6a -> length_8166b0.list\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -277, y: 166, name: \"list1\") property(List) list_09fcba\n        in(x: -285, y: -84, name: \"list2\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_09fcba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        list_3af6ba -> ``First even number_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) is_sublist_f53d27 root.main.is_sublist {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -275, y: 20, name: \"sublist\") property(List) sublist_0a8d6f\n        in(x: -277, y: -170, name: \"list\") property(List) list_7c9b3e\n\n        out(x: 1005, y: -145, name: \"output\") property(Bool) output_4e2c1e\n\n        instance(x: 1020, y: -160) contains_c8a6d2 root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -230, y: -56, name: \"sublist\") property(List) sublist_7f3f9c\n            in(x: -223, y: 19, name: \"list\") property(List) list_f1a6e8\n\n            out(x: 245, y: -41, name: \"output\") property(Bool) output_4d5b0f\n\n            instance(x: -10, y: -40) length_7c9e2a root.Std_k98ojb.List.Length {}\n            instance(x: 171, y: -42) sub_1b8a6c root.Std_k98ojb.Math.Sub {}\n            instance(x: 331, y: -43) greaterthan_3f5d4c root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: 475, y: -44) for_d9e7a1 root.Std_k98ojb.Std.For {}\n            instance(x: 679, y: -45) contains_8a6b0f root.Std_k98ojb.List.Contains {}\n            sublist_7f3f9c -> length_7c9e2a.list\n            list_f1a6e8 -> length_7c9e2a.list\n            length_7c9e2a.length -> sub_1b8a6c.first\n            0 -> sub_1b8a6c.second\n            sub_1b8a6c.result -> greaterthan_3f5d4c.left\n            0 -> greaterthan_3f5d4c.right\n            greaterthan_3f5d4c.result -> for_d9e7a1.trigger\n            sublist_7f3f9c -> for_d9e7a1.items\n            func() {\n                in(x: -230, y: -56, name: \"sublist\") property(List) sublist_7f3f9c\n                in(x: -223, y: 19, name: \"list\") property(List) list_f1a6e8\n\n                out(x: 245, y: -41, name: \"output\") property(Bool) output_4d5b0f\n\n                instance(x: -10, y: -40) length_7c9e2a root.Std_k98ojb.List.Length {}\n                instance(x: 171, y: -42) sub_1b8a6c root.Std_k98ojb.Math.Sub {}\n                instance(x: 331, y: -43) greaterthan_3f5d4c root.Std_k98ojb.Math.GreaterThan {}\n                instance(x: 475, y: -44) for_d9e7a1 root.Std_k98ojb.Std.For {}\n                instance(x: 679, y: -45) contains_8a6b0f root.Std_k98ojb.List.Contains {}\n                sublist_7f3f9c -> length_7c9e2a.list\n                list_f1a6e8 -> length_7c9e2a.list\n                length_7c9e2a.length -> sub_1b8a6c.first\n                0 -> sub_1b8a6c.second\n                sub_1b8a6c.result -> greaterthan_3f5d4c.left\n                0 -> greaterthan_3f5d4c.right\n                greaterthan_3f5d4c.result -> for_d9e7a1.trigger\n                sublist_7f3f9c -> for_d9e7a1.items\n                func() {\n                    in(x: -230, y: -56, name: \"sublist\") property(List) sublist_7f3f9c\n                    in(x: -223, y: 19, name: \"list\") property(List) list_f1a6e8\n\n                    out(x: 245, y: -41, name: \"output\") property(Bool) output_4d5b0f\n\n                    instance(x: -10, y: -40) length_7c9e2a root.Std_k98ojb.List.Length {}\n                    instance(x: 171, y: -42) sub_1b8a6c root.Std_k98ojb.Math.Sub {}\n                    instance(x: 331, y: -43) greaterthan_3f5d4c root.Std_k98ojb.Math.GreaterThan {}\n                    instance(x: 475, y: -44) for_d9e7a1 root.Std_k98ojb.Std.For {}\n                    instance(x: 679, y: -45) contains_8a6b0f root.Std_k98ojb.List.Contains {}\n                    sublist_7f3f9c -> length_7c9e2a.list\n                    list_f1a6e8 -> length_7c9e2a.list\n                    length_7c9e2a.length -> sub_1b8a6c.first\n                    0 -> sub_1b8a6c.second\n                    sub_1b8a6c.result -> greaterthan_3f5d4c.left\n                    0 -> greaterthan_3f5d4c.right\n                    greaterthan_3f5d4c.result -> for_d9e7a1.trigger\n                    sublist_7f3f9c -> for_d9e7a1.items\n                    func() {\n                        in(x: -230, y: -56, name: \"sublist\") property(List) sublist_7f3f9c\n                        in(x: -223, y: 19, name: \"list\") property(List) list_f1a6e8\n\n                        out(x: 245, y: -41, name: \"output\") property(Bool) output_4d5b0f\n\n                        instance(x: -10, y: -40) length_7c9e2a root.Std_k98ojb.List.Length {}\n                        instance(x: 171, y: -42) sub_1b8a6c root.Std_k98ojb.Math.Sub {}\n                        instance(x: 331, y: -43) greaterthan_3f5d4c root.Std_k98ojb.Math.GreaterThan {}\n                        instance(x: 475, y: -44) for_d9e7a1 root.Std_k98ojb.Std.For {}\n                        instance(x: 679, y: -45) contains_8a6b0f root.Std_k98ojb.List.Contains {}\n                        sublist_7f3f9c -> length_7c9e2a.list\n                        list_f1a6e8 -> length_7c9e2a.list\n                        length_7c9e2a.length -> sub_1b8a6c.first\n                        0 -> sub_1b8a6c.second\n                        sub_1b8a6c.result -> greaterthan_3f5d4c.left\n                        0 -> greaterthan_3f5d4c.right\n                        greaterthan_3f5d4c.result -> for_d9e7a1.trigger\n                        sublist_7f3f9c -> for_d9e7a1.items\n                        func() {\n                            in(x: -230, y: -56, name: \"sublist\") property(List) sublist_7f3f9c\n                            in(x: -223, y: 19, name: \"list\") property(List) list_f1a6e8\n\n                            out(x: 245, y: -41, name: \"output\") property(Bool) output_4d5b0f\n\n                            instance(x: -10, y: -40) length_7c9e2a root.Std_k98ojb.List.Length {}\n                            instance(x: 171, y: -42) sub_1b8a6c root.Std_k98ojb.Math.Sub {}\n                            instance(x: 331, y: -43) greaterthan_3f5d4c root.Std_k98ojb.Math.GreaterThan {}\n                            instance(x: 475, y: -44) for_d9e7a1 root.Std_k98ojb.Std.For {}\n                            instance(x: 679, y: -45) contains_8a6b0f root.Std_k98ojb.List.Contains {}\n                            sublist_7f3f9c -> length_7c9e2a.list\n                            list_f1a6e8 -> length_7c9e2a.list\n                            length_7c"
      ],
      "27": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 2, name: \"list\") property(List) list_3a1f9e\n        in(x: -314, y: -224, name: \"execute\") trigger() execute_5c7d8b\n\n        out(x: 1066, y: -223, name: \"continue\") trigger() continue_e2c4ed\n        out(x: 1053, y: 28, name: \"output\") property(Number) output_1e0a1f\n\n        instance(x: 0, y: 0) for_9d5b8f root.Std_k98ojb.Std.For {}\n        instance(x: 321, y: -20) ifexpression_7c2b6e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_7c2b6e.else -> continue_e2c4ed\n        ifexpression_7c2b6e.value -> output_1e0a1f\n        ifexpression_7c2b6e.then -> setter_9d4f1c.execute\n        list_3a1f9e -> for_9d5b8f.items\n        for_9d5b8f.item -> ifexpression_7c2b6e.gen_2\n        for_9d5b8f.index -> ifexpression_7c2b6e.gen_0\n        getter_b280eb.value -> ifexpression_7c2b6e.gen_1\n        for_9d5b8f.onItem -> ifexpression_7c2b6e.execute\n        for_9d5b8f.done -> continue_e2c4ed\n        for_9d5b8f.item -> setter_9d4f1c.new_value\n        list_3a1f9e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        execute_5c7d8b -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> for_9d5b8f.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_6a2e3c root.main.find_missing {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 2, name: \"list\") property(List) list_9e3f8a\n        in(x: -283, y: -240, name: \"execute\") trigger() execute_eb1c6d\n\n        out(x: 592, y: 7, name: \"continue\") trigger() continue_4d0c5e\n        out(x: 593, y: 148, name: \"output\") property(Number) output_8a3f2e\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_e38995.else -> continue_4d0c5e\n        ifexpression_e38995.value -> output_8a3f2e\n        ifexpression_e38995.then -> setter_9d4f1c.execute\n        list_9e3f8a -> for_d26972.items\n        for_d26972.item -> ifexpression_e38995.gen_2\n        for_d26972.index -> ifexpression_e38995.gen_0\n        getter_b280eb.value -> ifexpression_e38995.gen_1\n        for_d26972.onItem -> ifexpression_e38995.execute\n        for_d26972.done -> continue_4d0c5e\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_9e3f8a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_eb1c6d -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_7b8a0f root.main.find_missing {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 0, name: \"list\") property(List) list_9e6f1d\n        in(x: -310, y: -225, name: \"execute\") trigger() execute_ea7c8b\n\n        out(x: 1055, y: -230, name: \"continue\") trigger() continue_3c0f4f\n        out(x: 1046, y: 150, name: \"output\") property(Number) output_1e2d9f\n\n        instance(x: 0, y: 0, name: \"for_7a5b6c\") for_7a5b6c root.Std_k98ojb.Std.For {}\n        instance(x: 315, y: -30, name: \"ifexpression_e8e1d4\") ifexpression_e8e1d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 0, y: 0, name: \"getter_9c7f5a\") getter_9c7f5a = previous\n        setter(x: 0, y: 0, name: \"setter_eb8d3e\") setter_eb8d3e = previous\n        instance(x: 0, y: 0, name: \"getat_1c2b6c\") getat_1c2b6c root.Std_k98ojb.List.GetAt {}\n        ifexpression_e8e1d4.else -> continue_3c0f4f\n        ifexpression_e8e1d4.value -> output_1e2d9f\n        ifexpression_e8e1d4.then -> setter_eb8d3e.execute\n        list_9e6f1d -> for_7a5b6c.items\n        for_7a5b6c.item -> ifexpression_e8e1d4.gen_2\n        for_7a5b6c.index -> ifexpression_e8e1d4.gen_0\n        getter_9c7f5a.value -> ifexpression_e8e1d4.gen_1\n        for_7a5b6c.onItem -> ifexpression_e8e1d4.execute\n        for_7a5b6c.done -> continue_3c0f4f\n        for_7a5b6c.item -> setter_eb8d3e.new_value\n        list_9e6f1d -> getat_1c2b6c.list\n        0 -> getat_1c2b6c.index\n        getat_1c2b6c.itemAtIndex -> setter_eb8d3e.new_value\n        execute_ea7c8b -> setter_eb8d3e.execute\n        setter_eb8d3e.continue -> for_7a5b6c.reset\n        setter_eb8d3e.continue -> for_7a5b6c.next\n    }\n\n    \n\n    instance(x: -17, y: 129) find_missing_1f0d4f root.main.find_missing {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -283, y: 0, name: \"list\") property(List) list_9e8b5f\n        in(x: -284, y: -240, name: \"execute\") trigger() execute_1a3d4c\n\n        out(x: 593, y: -241, name: \"continue\") trigger() continue_e7c2ea\n        out(x: 592, y: 0, name: \"output\") property(Number) output_8e6f9b\n\n        instance(x: 0, y: 0) for_1a3d4c root.Std_k98ojb.Std.For {}\n        instance(x: -100, y: -80) ifexpression_e7c2ea root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 89, y: 29, name: \"getter_9f6850\") getter_9f6850 = previous\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_e7c2ea.else -> continue_e7c2ea\n        ifexpression_e7c2ea.value -> output_8e6f9b\n        ifexpression_e7c2ea.then -> setter_9d4f1c.execute\n        list_9e8b5f -> for_1a3d4c.items\n        for_1a3d4c.item -> ifexpression_e7c2ea.gen_2\n        for_1a3d4c.index -> ifexpression_e7c2ea.gen_0\n        getter_9f6850.value -> ifexpression_e7c2ea.gen_1\n        for_1a3d4c.onItem -> ifexpression_e7c2ea.execute\n        for_1a3d4c.done -> continue_e7c2ea\n        for_1a3d4c.item -> setter_9d4f1c.new_value\n        list_9e8b5f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        execute_1a3d4c -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> for_1a3d4c.reset\n    }\n\n    \n\n    instance(x: -34, y: 127) find_missing_2c856f root.main.find_missing {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -283, y: 2, name: \"list\") property(List) list_9e3f8a\n        in(x: -284, y: -232, name: \"execute\") trigger() execute_7b1d5c\n\n        out(x: 1016, y: -228, name: \"continue\") trigger() continue_e4b0ed\n        out(x: 1009, y: 2, name: \"output\") property(Number) output_3f8e9a\n\n        instance(x: 0, y: 0) for_1d7c6c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) ifexpression_4a5a5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -2, y: 40, name: \"getter_e9d7c6\") getter_e9d7c6 = previous\n        setter(x: 0, y: 0, name: \"setter_4a5b3f\") setter_4a5b3f = previous\n        instance(x: -274, y: -10) getat_1e2f9c root.Std_k98ojb.List.GetAt {}\n        ifexpression_4a5a5f.else -> continue_e4b0ed\n        ifexpression_4a5a5f.then -> setter_4a5b3f.execute\n        list_9e3f8a -> for_1d7c6c.items\n        for_1d7c6c.item -> ifexpression_4a5a5f.gen_2\n        for_1d7c6c.index -> ifexpression_4a5a5f.gen_0\n        getter_e9d7c6.value -> ifexpression_4a5a5f.gen_1\n        for_1d7c6c.onItem -> ifexpression_4a5a5f.execute\n        for_1d7c6c.done -> continue_e4b0ed\n        for_1d7c6c.item -> setter_4a5b3f.new_value\n        list_9e3f8a -> getat_1e2f9c.list\n        0 -> getat_1e2f9c.index\n        getat_1e2f9c.itemAtIndex -> setter_4a5b3f.new_value\n        execute_7b1d5c -> setter_4a5b3f.execute\n        ifexpression_4a5a5f.value -> output_3f8e9a\n        getter_e9d7c6.value + 1 -> output_3f8e9a\n        setter_4a5b3f.continue -> for_1d7c6c.next\n        setter_4a5b3f.continue -> for_1d7c6c.reset\n    }\n\n    \n\n    instance(x: -50, y: 125) find_missing_2e9b0f root.main.find_missing {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -305, y: 1, name: \"list\") property(List) list_9f0b2e\n        in(x: -324, y: -225, name: \"execute\") trigger() execute_ea7d3c\n\n        out(x: 1045, y: -223, name: \"continue\") trigger() continue_1a8f4f\n        out(x: 1036, y: 147, name: \"output\") property(Number) output_2b9e0f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_1a8f4f\n        ifexpression_875761.value -> output_2b9e0f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_9f0b2e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_1a8f4f\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_9f0b2e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_ea7d3c -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_2a7b6f root.main.find_missing {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9e8f5a\n        in(x: -299, y: -220, name: \"execute\") trigger() execute_eb1d7c\n\n        out(x: 594, y: -221, name: \"continue\") trigger() continue_6e3b0d\n        out(x: 591, y: 40, name: \"output\") property(Number) output_9f5a8e\n\n        instance(x: 0, y: 0) for_7c2a4f root.Std_k98ojb.Std.For {}\n        instance(x: 319, y: -12) ifexpression_1d6f8f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == expected\"\n        }\n        getter(x: 504, y: 164, name: \"getter_9cceb3\") getter_9cceb3 = index\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = index\n        instance(x: 118, y: -56) setter_37db7f root.Std_k98ojb.Setting.Setter {}\n        list_9e8f5a -> for_7c2a4f.items\n        execute_eb1d7c -> for_7c2a4f.trigger\n        getter_9cceb3.value -> output_9f5a8e\n        0 -> setter_1cedb2.new_value\n        for_7c2a4f.done -> continue_6e3b0d\n        setter_1cedb2.continue -> for_7c2a4f.reset\n        for_7c2a4f.onItem -> ifexpression_1d6f8f.execute\n        1 -> setter_37db7f.new_value\n        for_7c2a4f.index -> ifexpression_1d6f8f.gen_0\n        for_7c2a4f.item -> ifexpression_1d6f8f.gen_1\n        ifexpression_1d6f8f.then -> setter_37db7f.execute\n        ifexpression_1d6f8f.else -> for_7c2a4f.next\n        0 -> ifexpression_1d6f8f.gen_2\n        setter_37db7f.continue -> continue_6e3b0d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_9f5a8e root.main.find_missing {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -305, y: 1, name: \"list\") property(List) list_9f0b2e\n        in(x: -321, y: -232, name: \"execute\") trigger() execute_7a3c6d\n\n        out(x: 1065, y: -231, name: \"continue\") trigger() continue_8f4a6d\n        out(x: 1059, y: 2, name: \"output\") property(Number) output_1e9b0f\n\n        instance(x: 0, y: 0, name: \"for_3c5b6f\") for_3c5b6f root.Std_k98ojb.Std.For {}\n        instance(x: 323, y: -17, name: \"ifexpression_1a8e7d\") ifexpression_1a8e7d root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 14, y: 31, name: \"getter_3c5b6f\") getter_3c5b6f = previous\n        setter(x: 358, y: -301, name: \"setter_1a8e7d\") setter_1a8e7d = previous\n        instance(x: -278, y: -30, name: \"getat_9f0b2e\") getat_9f0b2e root.Std_k98ojb.List.GetAt {}\n        ifexpression_1a8e7d.else -> continue_8f4a6d\n        ifexpression_1a8e7d.then -> setter_1a8e7d.execute\n        list_9f0b2e -> for_3c5b6f.items\n        for_3c5b6f.item -> ifexpression_1a8e7d.gen_2\n        for_3c5b6f.index -> ifexpression_1a8e7d.gen_0\n        getter_3c5b6f.value -> ifexpression_1a8e7d.gen_1\n        for_3c5b6f.onItem -> ifexpression_1a8e7d.execute\n        for_3c5b6f.done -> continue_8f4a6d\n        for_3c5b6f.item -> setter_1a8e7d.new_value\n        list_9f0b2e -> getat_9f0b2e.list\n        0 -> getat_9f0b2e.index\n        getat_9f0b2e.itemAtIndex -> setter_1a8e7d.new_value\n        execute_7a3c6d -> setter_1a8e7d.execute\n        ifexpression_1a8e7d.value -> output_1e9b0f\n        for_3c5b6f.next -> continue_8f4a6d\n        setter_1a8e7d.continue -> for_3c5b6f.next\n        execute_7a3c6d -> getat_9f0b2e.execute\n        getat_9f0b2e.result -> setter_1a8e7d.new_value\n        getat_9f0b2e.continue -> for_3c5b6f.reset\n    }\n\n    \n\n    instance(x: -70, y: 126) find_missing_4f3b6f root.main.find_missing {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -280, y: 0, name: \"list\") property(List) list_9e3b5f\n        in(x: -285, y: -240, name: \"execute\") trigger() execute_1c7d4a\n\n        out(x: 39, y: 147, name: \"continue\") trigger() continue_6a8b0d\n        out(x: 46, y: -237, name: \"output\") property(Number) output_e9e3f2\n\n        instance(x: 0, y: 0, name: \"for_1e7c4f\") for_1e7c4f root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0, name: \"ifexpression_5d9a2f\") ifexpression_5d9a2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -186, y: 147, name: \"getter_7c8e4d\") getter_7c8e4d = previous\n        setter(x: 339, y: -313, name: \"setter_eb9f6a\") setter_eb9f6a = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_5d9a2f.else -> continue_6a8b0d\n        ifexpression_5d9a2f.then -> setter_eb9f6a.execute\n        list_9e3b5f -> for_1e7c4f.items\n        for_1e7c4f.item -> ifexpression_5d9a2f.gen_2\n        for_1e7c4f.index -> ifexpression_5d9a2f.gen_0\n        getter_7c8e4d.value -> ifexpression_5d9a2f.gen_1\n        for_1e7c4f.onItem -> ifexpression_5d9a2f.execute\n        for_1e7c4f.done -> continue_6a8b0d\n        for_1e7c4f.item -> setter_eb9f6a.new_value\n        list_9e3b5f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_eb9f6a.new_value\n        execute_1c7d4a -> setter_eb9f6a.execute\n        setter_eb9f6a.continue -> for_1e7c4f.reset\n        ifexpression_5d9a2f.value -> output_e9e3f2\n        previous + 1 -> output_e9e3f2\n    }\n\n    \n\n    instance(x: -177, y: -57) find_missing_8b0f1f root.main.find_missing {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 1, name: \"list\") property(List) list_2d9b3f\n        in(x: -283, y: -224, name: \"execute\") trigger() execute_7e6c8a\n\n        out(x: 1015, y: -225, name: \"continue\") trigger() continue_e1a4ef\n        out(x: 1009, y: 129, name: \"output\") property(Number) output_2f0b9d\n\n        instance(x: 0, y: 0) for_7e8c3c root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) ifexpression_ea1b5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -2, y: 131, name: \"getter_8c9d3e\") getter_8c9d3e = previous\n        setter(x: 343, y: -316, name: \"setter_ea4f0b\") setter_ea4f0b = previous\n        instance(x: -277, y: -32) getat_a5b2d1 root.Std_k98ojb.List.GetAt {}\n        ifexpression_ea1b5f.else -> continue_e1a4ef\n        ifexpression_ea1b5f.value -> output_2f0b9d\n        ifexpression_ea1b5f.then -> setter_ea4f0b.execute\n        list_2d9b3f -> for_7e8c3c.items\n        for_7e8c3c.item -> ifexpression_ea1b5f.gen_2\n        for_7e8c3c.index -> ifexpression_ea1b5f.gen_0\n        getter_8c9d3e.value -> ifexpression_ea1b5f.gen_1\n        for_7e8c3c.onItem -> ifexpression_ea1b5f.execute\n        for_7e8c3c.done -> continue_e1a4ef\n        for_7e8c3c.item -> setter_ea4f0b.new_value\n        list_2d9b3f -> getat_a5b2d1.list\n        0 -> getat_a5b2d1.index\n        getat_a5b2d1.itemAtIndex -> setter_ea4f0b.new_value\n        execute_7e6c8a -> setter_ea4f0b.execute\n        setter_ea4f0b.continue -> for_7e8c3c.reset\n    }\n\n    \n\n    instance(x: -55, y: 129) find_missing_2e1d5e root.main.find_missing {}\n}"
      ],
      "31": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5c3d9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7e8a6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9c4c7c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5c3d9f.input\n        \" \" -> replace_5c3d9f.search\n        \":\" -> replace_5c3d9f.replace\n        replace_5c3d9f.output -> replace_7e8a6f.input\n        \",\" -> replace_7e8a6f.search\n        \":\" -> replace_7e8a6f.replace\n        replace_7e8a6f.output -> replace_9c4c7c.input\n        \".\" -> replace_9c4c7c.search\n        \":\" -> replace_9c4c7c.replace\n        replace_9c4c7c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_d3e8d1 root.main.replace_spaces_commas_dots {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -227, y: 0, name: \"input\") property(String) input_9f1a8e\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_5c7b4d\n\n        instance(x: 0, y: 0) replace_1 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_3 root.Std_k98ojb.Strings.Replace {}\n        input_9f1a8e -> replace_1.input\n        \" \" -> replace_1.search\n        \":\" -> replace_1.replace\n        replace_1.output -> replace_2.input\n        \",\" -> replace_2.search\n        \":\" -> replace_2.replace\n        replace_2.output -> replace_3.input\n        \".\" -> replace_3.search\n        \":\" -> replace_3.replace\n        replace_3.output -> output_5c7b4d\n   }\n   \n\n    instance(x: -177, y: 32, name: \"replace\") replace_1e9f2a root.main.replace {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -172, y: 0, name: \"input\") property(String) input_9b1e4f\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_8a3c6d\n\n        instance(x: 0, y: 0) replace_spaces root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_commas root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_dots root.Std_k98ojb.Strings.Replace {}\n        input_9b1e4f -> replace_spaces.input\n        \" \" -> replace_spaces.search\n        \":\" -> replace_spaces.replace\n        replace_spaces.output -> replace_commas.input\n        \",\" -> replace_commas.search\n        \":\" -> replace_commas.replace\n        replace_commas.output -> replace_dots.input\n        \".\" -> replace_dots.search\n        \":\" -> replace_dots.replace\n        replace_dots.output -> output_8a3c6d\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_spaces_commas_dots_9e4b2f root.main.replace_spaces_commas_dots {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -200, y: 0, name: \"input\") property(String) input_1f9a8e\n\n        out(x: 600, y: -2, name: \"output\") property(String) output_3c7d4b\n\n        instance(x: 0, y: 0) replace_5c6a4e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_9f8a1d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_7c2b9f root.Std_k98ojb.Strings.Replace {}\n        input_1f9a8e -> replace_5c6a4e.input\n        \" \" -> replace_5c6a4e.search\n        \":\" -> replace_5c6a4e.replace\n        replace_5c6a4e.output -> replace_9f8a1d.input\n        \",\" -> replace_9f8a1d.search\n        \":\" -> replace_9f8a1d.replace\n        replace_9f8a1d.output -> replace_7c2b9f.input\n        \".\" -> replace_7c2b9f.search\n        \":\" -> replace_7c2b9f.replace\n        replace_7c2b9f.output -> output_3c7d4b\n    }\n\n    \n\n    instance(x: -140, y: 32, name: \"replace\") replace_5e8a1f root.main.replace {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -227, y: 0, name: \"input\") property(String) input_8f1a9d\n\n        out(x: 506, y: -2, name: \"output\") property(String) output_7c3b4e\n\n        instance(x: 0, y: 0) replace_5d1c6e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_8f9a8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_3e7b4f root.Std_k98ojb.Strings.Replace {}\n        input_8f1a9d -> replace_5d1c6e.input\n        \" \" -> replace_5d1c6e.search\n        \":\" -> replace_5d1c6e.replace\n        replace_5d1c6e.output -> replace_8f9a8f.input\n        \",\" -> replace_8f9a8f.search\n        \":\" -> replace_8f9a8f.replace\n        replace_8f9a8f.output -> replace_3e7b4f.input\n        \".\" -> replace_3e7b4f.search\n        \":\" -> replace_3e7b4f.replace\n        replace_3e7b4f.output -> output_7c3b4e\n    }\n\n    \n\n    instance(x: -176, y: 38, name: \"replace\") replace_1a8d5c root.main.replace {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -227, y: 0, name: \"input\") property(String) input_8e9b2f\n\n        out(x: 505, y: -3, name: \"output\") property(String) output_7a5d6c\n\n        instance(x: 94, y: -19) replace_4e1e0f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 93, y: 39) replace_9a2b3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 92, y: 77) replace_c8d7b6 root.Std_k98ojb.Strings.Replace {}\n        input_8e9b2f -> replace_4e1e0f.input\n        \" \" -> replace_4e1e0f.search\n        \":\" -> replace_4e1e0f.replace\n        replace_4e1e0f.output -> replace_9a2b3c.input\n        \",\" -> replace_9a2b3c.search\n        \":\" -> replace_9a2b3c.replace\n        replace_9a2b3c.output -> replace_c8d7b6.input\n        \".\" -> replace_c8d7b6.search\n        \":\" -> replace_c8d7b6.replace\n        replace_c8d7b6.output -> output_7a5d6c\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_9e3f2f root.main.replace_spaces_commas_dots {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -200, y: 0, name: \"input\") property(String) input_9f1a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_8e4b7c\n\n        instance(x: 0, y: 0) replace_5c6d0e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_9f3a2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_7f8a4b root.Std_k98ojb.Strings.Replace {}\n        input_9f1a3d -> replace_5c6d0e.input\n        \" \" -> replace_5c6d0e.search\n        \":\" -> replace_5c6d0e.replace\n        replace_5c6d0e.output -> replace_9f3a2d.input\n        \",\" -> replace_9f3a2d.search\n        \":\" -> replace_9f3a2d.replace\n        replace_9f3a2d.output -> replace_7f8a4b.input\n        \".\" -> replace_7f8a4b.search\n        \":\" -> replace_7f8a4b.replace\n        replace_7f8a4b.output -> output_8e4b7c\n    }\n\n    \n\n    instance(x: -89, y: 46, name: \"replace\") replace_1d0b6c root.main.replace {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -156, y: 0, name: \"input\") property(String) input_8e9b3f\n\n        out(x: 540, y: -2, name: \"output\") property(String) output_7c1d4a\n\n        instance(x: 0, y: 0) replace_6e5f9e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_8a1c2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_3d7de6 root.Std_k98ojb.Strings.Replace {}\n        input_8e9b3f -> replace_6e5f9e.input\n        \" \" -> replace_6e5f9e.search\n        \":\" -> replace_6e5f9e.replace\n        replace_6e5f9e.output -> replace_8a1c2f.input\n        \",\" -> replace_8a1c2f.search\n        \":\" -> replace_8a1c2f.replace\n        replace_8a1c2f.output -> replace_3d7de6.input\n        \".\" -> replace_3d7de6.search\n        \":\" -> replace_3d7de6.replace\n        replace_3d7de6.output -> output_7c1d4a\n    }\n\n    \n\n    instance(x: -89, y: 30, name: \"replace_spaces_commas_dots\") replace_spaces_commas_dots_8f5e2b root.main.replace_spaces_commas_dots {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -122, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_3c0f9d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: -1) replace_7a5e4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 772, y: -129) replace_6b8f1f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3c0f9d.input\n        \" \" -> replace_3c0f9d.search\n        \":\" -> replace_3c0f9d.replace\n        replace_3c0f9d.output -> replace_7a5e4f.input\n        \",\" -> replace_7a5e4f.search\n        \":\" -> replace_7a5e4f.replace\n        replace_7a5e4f.output -> replace_6b8f1f.input\n        \".\" -> replace_6b8f1f.search\n        \":\" -> replace_6b8f1f.replace\n        replace_6b8f1f.output -> output_ai\n   }\n   \n\n    instance(x: -179, y: 30) replace_59bc6e root.main.replace {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -198, y: 0, name: \"input\") property(String) input_9f2e8a\n\n        out(x: 504, y: -1, name: \"output\") property(String) output_7b3c6d\n\n        instance(x: 0, y: 0) replace_4d5d2f root.Std_k98ojb.Strings.Replace {}\n        input_9f2e8a -> replace_4d5d2f.input\n        \" \" -> replace_4d5d2f.search\n        \":\" -> replace_4d5d2f.replace\n        instance(x: 0, y: -1) replace_3c6b7c root.Std_k98ojb.Strings.Replace {}\n        replace_4d5d2f.output -> replace_3c6b7c.input\n        \",\" -> replace_3c6b7c.search\n        \":\" -> replace_3c6b7c.replace\n        instance(x: 0, y: -1) replace_8a9e5e root.Std_k98ojb.Strings.Replace {}\n        replace_3c6b7c.output -> replace_8a9e5e.input\n        \".\" -> replace_8a9e5e.search\n        \":\" -> replace_8a9e5e.replace\n        replace_8a9e5e.output -> output_7b3c6d\n    }\n\n    \n\n    instance(x: -128, y: 30) replace_bf1d0c root.main.replace {}\n}"
      ],
      "33": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -290, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 538, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 3) characters_7e9f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 264, y: 1) all_equal_4a6d5f root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n                instance(x: 226, y: 56) equal_2e4f8c root.Std_k98ojb.Logic.Equal {}\n                elem_9f6850 -> equal_2e4f8c.left\n                characters_7e9f8c.characters[_index_769593] -> equal_2e4f8c.right\n                equal_2e4f8c.result -> output_efbc78\n            }\n        }\n        instance(x: 528, y: -1) length_5b3a0d root.Std_k98ojb.List.Length {}\n        string_0 -> characters_7e9f8c.input\n        all_equal_4a6d5f.output_list -> length_5b3a0d.list\n        characters_7e9f8c.characters -> all_equal_4a6d5f.items\n        length_5b3a0d.length == string_0.len() -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_2e1d7f root.main.check_same {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -290, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 531, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_7e9c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) all_equal_5a4d3c root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -76, y: 46, name: \"current\") property(String) current_1\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_2\n\n                out(x: 382, y: 19, name: \"out\") property(Bool) out_3\n\n                instance(x: 106, y: 17) equal_1a8c4f root.Std_k98ojb.Logic.Equal {}\n                current_1 -> equal_1a8c4f.left\n                characters_7e9c8f.characters[_index_2] -> equal_1a8c4f.right\n                equal_1a8c4f.result -> out_3\n            }\n        }\n        instance(x: 530, y: -2) not_5b6d7f root.Std_k98ojb.Logic.Not {}\n        characters_7e9c8f.characters -> all_equal_5a4d3c.items\n        input_0 -> characters_7e9c8f.input\n        all_equal_5a8d3c.output_list -> not_5b6d7f.input\n        not_5b6d7f.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_2f4e9f root.main.is_same {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -285, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 540, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_5c7d9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -3) set_ea8e6f root.Std_k98ojb.Sets.Difference {}\n        instance(x: 480, y: 1) is_empty_4a0b5c root.Std_k98ojb.List.IsEmpty {}\n        characters_5c7d9f.characters -> set_ea8e6f.left\n        characters_5c7d9f.characters -> set_ea8e6f.right\n        is_empty_4a0b5c.isEmpty -> output_1\n        set_ea8e6f.difference -> is_empty_4a0b5c.list\n        string_1 -> characters_5c7d9f.input\n    }\n\n    \n\n    instance(x: -55, y: 529) check_same_2c856f root.main.check_same {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -280, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_4a3c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) all_equal_9d5e6f root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_1\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_2\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3\n\n                instance(x: 89, y: 29) equal_1d7b5c root.Std_k98ojb.Logic.Equal {}\n                elem_1 -> equal_1d7b5c.left\n                characters_4a3c8f.characters[_index_2] -> equal_1d7b5c.right\n                equal_1d7b5c.result -> bool_3\n            }\n        }\n        instance(x: 0, y: -1) length_9e6a8f root.Std_k98ojb.List.Length {}\n        input_1 -> characters_4a3c8f.input\n        all_equal_9d5e6f.output_list.length == length_9e6a8f.list.length -> result_1\n        characters_4a3c8f.characters -> all_equal_9d5e6f.items\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_7b2a6f root.main.is_same {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -290, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 557, y: -1, name: \"output\") property(Bool) output_0\n\n        instance(x: 0, y: 0) characters_7b3f6a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) allroot_k98ojb root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            input_0 -> equal_f89569.left\n            elem_9f6850 -> equal_f89569.right\n            equal_f89569.result -> bool_af09a7\n        } -> allroot_k98ojb.handler\n        characters_7b3f6a.characters -> allroot_k98ojb.items\n        instance(x: 530, y: -1) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 744, y: 0) equal_f89569_2 root.Std_k98ojb.Logic.Equal {}\n        characters_7b3f6a.characters -> length_8166b0.list\n        allroot_k98ojb.output_list -> equal_f89569_2.left\n        length_8166b0.length -> equal_f89569_2.right\n        equal_f89569_2.result -> output_0\n    }\n\n    \n\n    instance(x: -55, y: 529) is_same_7a4dad root.main.is_same {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -531, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_0\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -4, y: 79) characters_5f8a9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) reduce_6d05b0 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            in(x: -111, y: -16, name: \"acc\") property(String) acc_1e3a7c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) equal_1088d5 root.Std_k98ojb.Logic.Equal {}\n            elem_9f6850 -> equal_1088d5.left\n            acc_1e3a7c -> equal_1088d5.right\n            equal_1088d5.result -> bool_af09a7\n        } -> reduce_6d05b0.reducer\n        characters_5f8a9c.characters -> reduce_6d05b0.items\n        tolower_7b3b7b.output -> characters_5f8a9c.input\n        input_0 -> tolower_7b3b7b.input\n        reduce_6d05b0.result -> output_0\n    }\n\n    \n\n    instance(x: -179, y: 30) check_same_59bc6e root.main.check_same {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -283, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) all_equal_d42dce root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) equal_1088d5 root.Std_k98ojb.Logic.Equal {}\n                elem_9f6850 -> equal_1088d5.left\n                characters_2e1444.characters[_index_769593] -> equal_1088d5.right\n                equal_1088d5.result -> bool_af09a7\n            }\n        }\n        instance(x: 525, y: -1) length_852f2e root.Std_k98ojb.List.Length {}\n        characters_2e1444.characters -> all_equal_d42dce.items\n        length_852f2e.length -> all_equal_d42dce.output_list.Length\n        input_0 -> characters_2e1444.input\n        all_equal_d42dce.output_list.IsEmpty -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_e54b7f root.main.is_same {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -531, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_0\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -0, y: 0) length_6d05b0 root.Std_k98ojb.List.Length {}\n        instance(x: 0, y: 0) find_1088d5 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_7b3b7b.output -> length_6d05b0.list\n        input_0 -> tolower_7b3b7b.input\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_807ffd root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_1088d5 root.Std_k98ojb.Logic.NotEqual {}\n            length_6d05b0.length -> modulo_807ffd.divisor\n            1 -> modulo_807ffd.value\n            modulo_807ffd.result -> notequal_1088d5.left\n            0 -> notequal_1088d5.right\n            notequal_1088d5.result -> bool_af09a7\n        } -> find_1088d5.predicate\n        tolower_7b3b7b.output -> find_1088d5.items\n        find_1088d5.item -> contains_d42dce.input\n        input_0 -> contains_d42dce.contains\n        contains_d42dce.result -> output_0\n    }\n\n    \n\n    instance(x: -179, y: 30) check_same_59bc6e root.main.check_same {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -284, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 557, y: -2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 1) characters_5c7f4a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: -2) length_6e87f2 root.Std_k98ojb.List.Length {}\n        characters_5c7f4a.characters -> contains_d42dce.list\n        characters_5c7f4a.characters -> length_6e87f2.list\n        \"1\" -> contains_d42dce.item\n        length_6e87f2.length -> contains_d42dce.count\n        string_1 -> characters_5c7f4a.input\n        contains_d42dce.result -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_e54b7f root.main.is_same {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -299, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 557, y: 3, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_c5e9d2 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -4) uniquelist_7f6c7a root.Std_k98ojb.List.UniqueList {}\n        instance(x: 530, y: 1) length_8f0f8f root.Std_k98ojb.List.Length {}\n        characters_c5e9d2.input -> characters_c5e9d2.input\n        characters_c5e9d2.characters -> uniquelist_7f6c7a.list\n        uniquelist_7f6c7a.uniqueList -> length_8f0f8f.list\n        1 -> length_8f0f8f.length\n        length_8f0f8f.result -> output_1\n    }\n\n    \n\n    instance(x: -53, y: 12) is_same_2e9d4c root.main.is_same {}\n}"
      ],
      "37": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -77) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 772, y: -77) count_digits_59bc6e root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1030, y: -2) filter_9f8c1a root.Std_k98ojb.Iteration.Filter {\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n                isnumeric_1088d5.input -> elem_9f6850\n                isnumeric_1088d5.is_numeric -> bool_af09a7\n            }\n        }\n        instance(x: 1296, y: -2) length_1e3c4a root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_9f8c1a.items\n        filter_9f8c1a.output_list -> length_1e3c4a.list\n        length_1e3c4a.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 0, y: 0) length_6d05b0 root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_6d05b0.list\n        length_6d05b0.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: -1) filter_6d05b0 root.Std_k98ojb.Iteration.Filter {\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n                isnumeric_1088d5.input -> elem_9f6850\n                isnumeric_1088d5.isnumeric -> bool_af09a7\n            }\n        }\n        instance(x: 0, y: -1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_6d05b0.items\n        filter_6d05b0.output_list -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1099, y: 76) filter_8a4f2e root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n                isnumeric_1088d5.input -> elem_9f6850\n                isnumeric_1088d5.is_numeric -> bool_af09a7\n            }\n        }\n        instance(x: 1436, y: 76) length_3e2c1f root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_8a4f2e.items\n        filter_8a4f2e.output_list -> length_3e2c1f.list\n        length_3e2c1f.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 118, y: -26) count_digits_9dcc3d root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: -1) filter_6e87f2 root.Std_k98ojb.Query.Filter {\n            where: \"it.isNumeric()\"\n        }\n        instance(x: 426, y: -303) length_node root.Std_k98ojb.List.Length {}\n\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_6e87f2.list\n        filter_6e87f2.result -> length_node.items\n        length_node.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 118, y: -26) count_digits_9dcc3d root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: -1) filter_6e87f2 root.Std_k98ojb.Query.Filter {\n            where: \"it.isNumeric()\"\n        }\n        instance(x: 426, y: -303) length_node root.Std_k98ojb.List.Length {}\n\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_6e87f2.list\n        filter_6e87f2.result -> length_node.items\n        length_node.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1099, y: 76) filter_8f6a2e root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n                isnumeric_1088d5.input -> elem_9f6850\n                isnumeric_1088d5.is_numeric -> bool_af09a7\n            }\n        }\n        instance(x: 1386, y: 76) length_3e2c1a root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_8f6a2e.items\n        filter_8f6a2e.output_list -> length_3e2c1a.list\n        length_3e2c1a.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}"
      ],
      "38": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9c2e4d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c8f5e.gen_0\n        pow_4c8f5e.result -> sum_365f7b\n        4 -> pow_4c8f5e.y\n        expression_2d6da6.result -> pow_4c8f5e.x\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 55, name: \"n\") property(Number) n_c88d35\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4a3c8e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_5f9a7c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_4a3c8e.second\n        n_c88d35 -> pow_4a3c8e.first\n        expression_2d6da6.result -> pow_4a3c8e.first\n        n_c88d35 -> expression_2d6da6.gen_0\n        pow_4a3c8e.result -> add_5f9a7c.second\n        add_5f9a7c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = [sum]\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(n * (2*n-1)*(2*n+1))/3\"\n        }\n        instance(x: 62, y: -226, name: \"fourth power\") pow_4f0a8c root.Std_k98ojb.Math.Pow {}\n        data_3c713b -> output_ebef81\n        n_c88d35 -> expression_634b7e.gen_0\n        expression_634b7e.result -> data_3c713b.sum\n        n_c88d35 -> pow_4f0a8c.x\n        4 -> pow_4f0a8c.y\n        pow_4f0a8c.output -> data_3c713b.sum\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        expression_2d6da6.result -> add_64046c.first\n        pow_f892a4.result -> add_64046c.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: 55, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4a3c8e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n-3\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_4a3c8e.y\n        n_c88d35 -> pow_4a3c8e.x\n        expression_2d6da6.result -> pow_4a3c8e.x\n        add_64046c.result -> sum_365f7b\n        pow_4a3c8e.result -> add_64046c.second\n        n_c88d35 -> expression_2d6da6.gen_0\n        n_c88d35 -> add_64046c.first\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -344, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4d9c5e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4d9c5e.y\n        data_cde0dc -> pow_4d9c5e.x\n        expression_2d6da6.result -> pow_4d9c5e.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_4d9c5e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 55, name: \"n\") property(Number) n_c88d35\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        data_cde0dc -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.input\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.output -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -344, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4d9c5e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4d9c5e.y\n        data_cde0dc -> pow_4d9c5e.x\n        expression_2d6da6.result -> pow_4d9c5e.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_4d9c5e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        expression_2d6da6.result -> add_64046c.first\n        pow_f892a4.result -> add_64046c.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: 55, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_3a8e2c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n-1\"\n        }\n        n_3a3116 -> pow_3a8e2c.second\n        data_cde0dc -> pow_3a8e2c.y\n        expression_2d6da6.result -> pow_3a8e2c.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_3a8e2c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}"
      ],
      "46": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_b2508f\n\n        instance(x: -105, y: -110) mul_2d7c1e root.Std_k98ojb.Math.Mul {}\n        instance(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = surface_area\n        instance(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = surface_area\n        a_9f7759 -> mul_2d7c1e.first\n        6 -> mul_2d7c1e.second\n        getter_9cceb3.value -> surface_area_b2508f\n        mul_2d7c1e.result -> setter_1cedb2.new_value\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_cube_d6e930 root.main.surface_area_cube {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_3e5f9a\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_96023e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_adfa16 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_547f34 root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        6 -> mul_adfa16.first\n        side_length_6b655b -> mul_adfa16.second\n        mul_adfa16.result -> add_88bb8a.first\n        2 -> mul_547f34.first\n        side_length_6b655b -> mul_547f34.second\n        mul_547f34.result -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_3e5f9a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> surface_area_cube_96023e.execute_cdac2a\n        surface_area_cube_96023e.continue_d9efd7 -> setter_375321.execute\n        getter_38583a.value -> output_732a8a\n        0 -> setter_41e4ad.new_value\n        setter_375321.continue -> continue_d9efd7\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -280, y: -211, name: \"execute\") trigger() execute_1a9f0e\n        in(x: -268, y: -92, name: \"size\") property(Number) size_a7c8d3\n\n        out(x: 1046, y: -212, name: \"continue\") trigger() continue_e5b2ee\n        out(x: 1071, y: -94, name: \"surface area\") property(Number) surface_area_4e0f9a\n\n        instance(x: 80, y: -210) mul_3d8c6c root.Std_k98ojb.Math.Mul {}\n        instance(x: 96, y: -89) mul_2a1b5a root.Std_k98ojb.Math.Mul {}\n        instance(x: 99, y: -10) mul_f9e7f4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 101, y: 100) add_3c6d8f root.Std_k98ojb.Math.Add {}\n        instance(x: 103, y: 211) add_1a5a0f root.Std_k98ojb.Math.Add {}\n        size_a7c8d3 -> mul_3d8c6c.first\n        size_a7c8d3 -> mul_2a1b5a.first\n        size_a7c8d3 -> mul_f9e7f4.first\n        mul_3d8c6c.result -> mul_2a1b5a.second\n        mul_2a1b5a.result -> add_3c6d8f.left\n        mul_f9e7f4.result -> add_3c6d8f.right\n        add_3c6d8f.result -> add_1a5a0f.left\n        add_1a5a0f.result -> surface_area_4e0f9a\n        2 -> mul_f9e7f4.second\n        2 -> mul_2a1b5a.second\n        execute_1a9f0e -> continue_e5b2ee\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_cube_6d8c1e root.main.surface_area_cube {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -451, y: -419, name: \"execute\") trigger() execute_1f0d9a\n        in(x: -436, y: -213, name: \"size\") property(Number) size_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"size <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_96023e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_adfa16 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) pow_547f34 root.Std_k98ojb.Math.Pow {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = surface_area\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = surface_area\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = surface_area\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        6 -> pow_547f34.y\n        size_6b655b -> pow_547f34.x\n        pow_547f34.result -> mul_adfa16.first\n        2 -> mul_adfa16.second\n        mul_adfa16.result -> add_88bb8a.first\n        surface_area_cube_96023e.output_732a8a -> add_88bb8a.second\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> surface_area_cube_96023e.execute_cdac2a\n        surface_area_cube_96023e.continue_d9efd7 -> setter_375321.execute\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        size_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -451, y: -379, name: \"execute\") trigger() execute_1a0f9e\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_a6cea7\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_96023e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_adfa16 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_547f34 root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        6 -> mul_adfa16.second\n        side_length_a6cea7 -> mul_adfa16.first\n        mul_adfa16.result -> add_88bb8a.first\n        2 -> mul_547f34.second\n        side_length_a6cea7 -> mul_547f34.first\n        mul_547f34.result -> surface_area_cube.side_length_a6cea7\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_1a0f9e -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> surface_area_cube.execute_1a0f9e\n        surface_area_cube.continue_d9efd7 -> setter_375321.execute\n        surface_area_cube.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -452, y: -378, name: \"execute\") trigger() execute_1f3a5b\n        in(x: -438, y: -160, name: \"size\") property(Number) size_ae\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_e7d9c8\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_1f3a5b\n\n        instance(x: 80, y: -417) ifexpression_4e6c1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"size <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_9d8f2a root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_4e6c1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_3f5c7 root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        6 -> mul_4e6c1.second\n        size_ae -> mul_4e6c1.first\n        mul_4e6c1.result -> add_3f5c7.first\n        mul_4e6c1.result -> add_3f5c7.second\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_4e6c1.execute\n        ifexpression_4e6c1.then -> continue_e7efd7\n        execute_1f3a5b -> setter_41e4ad.execute\n        ifexpression_4e6c1.else -> surface_area_cube_9d8f2a.execute_1f3a5b\n        surface_area_cube_9d8f2a.continue_e7efd7 -> setter_375321.execute\n        surface_area_cube_9d8f2a.output_1f3a5b -> add_3f5c7.first\n        add_3f5c7.result -> setter_375321.new_value\n        setter_375321.continue -> continue_e7efd7\n        getter_38583a.value -> output_1f3a5b\n        size_ae -> floor_61b38d.input\n        floor_61b38d.output -> ifexpression_4e6c1.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_9d8f2a root.main.surface_area_cube {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9f0a8b\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_7e5c6d\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_1e3c2f\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_4b0a9f\n\n        instance(x: 80, y: -417) ifexpression_5d7d6e root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_3c1a9f root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_7d5e6f root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) mul_8f4a0c root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_3a1d9e\") setter_3a1d9e = surface_area\n        setter(x: 875, y: -518, name: \"setter_2f8c7a\") setter_2f8c7a = surface_area\n        getter(x: 902, y: -314, name: \"getter_4b0c1d\") getter_4b0c1d = surface_area\n        instance(x: -202, y: -236) floor_9e5b6d root.Std_k98ojb.Math.Floor {}\n        6 -> mul_8f4a0c.first\n        side_length_7e5c6d -> mul_7d5e6f.first\n        side_length_7e5c6d -> mul_7d5e6f.second\n        mul_7d5e6f.result -> surface_area_cube_3c1a9f.side_length_7e5c6d\n        0 -> setter_3a1d9e.new_value\n        setter_3a1d9e.continue -> ifexpression_5d7d6e.execute\n        ifexpression_5d7d6e.then -> continue_1e3c2f\n        execute_9f0a8b -> setter_3a1d9e.execute\n        ifexpression_5d7d6e.else -> surface_area_cube_3c1a9f.execute_9f0a8b\n        surface_area_cube_3c1a9f.continue_1e3c2f -> setter_2f8c7a.execute\n        mul_7d5e6f.result -> mul_8f4a0c.second\n        mul_8f4a0c.result -> setter_2f8c7a.new_value\n        setter_2f8c7a.continue -> continue_1e3c2f\n        getter_4b0c1d.value -> output_4b0a9f\n        side_length_7e5c6d -> floor_9e5b6d.input\n        floor_9e5b6d.output -> ifexpression_5d7d6e.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_1f3a4f root.main.surface_area_cube {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -452, y: -379, name: \"execute\") trigger() execute_1a9f2b\n        in(x: -438, y: -213, name: \"size\") property(Number) size_7c0e3d\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_e5a8cf\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_4b2f2f\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"size <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_9c8e1a root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_3d5f7c root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_f0e6da root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = surface_area\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = surface_area\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = surface_area\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        size_7c0e3d -> mul_f0e6da.first\n        2 -> mul_f0e6da.second\n        mul_f0e6da.result -> add_88bb8a.first\n        mul_f0e6da.result -> mul_3d5f7c.first\n        size_7c0e3d -> mul_3d5f7c.second\n        6 -> add_88bb8a.second\n        6 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_e5efd7\n        execute_1a9f2b -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> surface_area_cube_9c8e1a.execute_1a9f2b\n        surface_area_cube_9c8e1a.continue_e5efd7 -> setter_375321.execute\n        mul_3d5f7c.result -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_e5efd7\n        getter_38583a.value -> output_4b2f2f\n        size_7c0e3d -> floor_61b38d.input\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -426, y: -421, name: \"execute\") trigger() execute_1f3e6a\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_9c7b2d\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_5e8f4d\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_1a0c3d\n\n        instance(x: 80, y: -417) ifexpression_e6b2b7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_1a9c8f root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_3e7d6f root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_b0b5ec root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_1a8c2c root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_3f9d7e\") setter_3f9d7e = surface_area\n        setter(x: 875, y: -518, name: \"setter_2a8c5f\") setter_2a8c5f = surface_area\n        getter(x: 902, y: -314, name: \"getter_1b6c9d\") getter_1b6c9d = surface_area\n        instance(x: -202, y: -236) floor_3e4a7f root.Std_k98ojb.Math.Floor {}\n        side_length_9c7b2d -> mul_1a8c2c.first\n        6 -> mul_1a8c2c.second\n        mul_1a8c2c.result -> add_b0b5ec.first\n        mul_3e7d6f.result -> add_b0b5ec.second\n        add_b0b5ec.result -> surface_area_cube_1a9c8f.side_length_9c7b2d\n        0 -> setter_3f9d7e.new_value\n        setter_3f9d7e.continue -> ifexpression_e6b2b7.execute\n        ifexpression_e6b2b7.then -> continue_5e8f4d\n        execute_1f3e6a -> setter_3f9d7e.execute\n        ifexpression_e6b2b7.else -> surface_area_cube_1a9c8f.execute_1f3e6a\n        surface_area_cube_1a9c8f.continue_5e8f4d -> setter_2a8c5f.execute\n        surface_area_cube_1a9c8f.output_1a0c3d -> mul_3e7d6f.first\n        add_b0b5ec.result -> mul_3e7d6f.second\n        setter_2a8c5f.continue -> continue_5e8f4d\n        getter_1b6c9d.value -> output_1a0c3d\n        side_length_9c7b2d -> floor_3e4a7f.input\n        floor_3e4a7f.output -> ifexpression_e6b2b7.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_1e5a6c root.main.surface_area_cube {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -300, y: -220, name: \"execute\") trigger() execute_3e9a5f\n        in(x: -287, y: -103, name: \"size\") property(Number) size_a6cea7\n\n        out(x: 566, y: -10, name: \"continue\") trigger() continue_8ba06b\n        out(x: 656, y: -68, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: 97, y: -127) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 395, y: -378) surface_area_cube_96023e root.main.surface_area_cube {}\n        size_a6cea7 -> mul_2f9d09.first\n        size_a6cea7 -> div_547f34.second\n        6 -> div_547f34.first\n        mul_2f9d09.result -> add_88bb8a.first\n        surface_area_cube_96023e.output_b1d7f8 -> add_88bb8a.second\n        execute_3e9a5f -> surface_area_cube_96023e.execute_3e9a5f\n        div_547f34.result -> mul_2f9d09.second\n        add_88bb8a.result -> output_b1d7f8\n        surface_area_cube_96023e.continue_8ba06b -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}"
      ],
      "19": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 157, name: \"list\") property(List) list_9a3f8e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_9a3f8e -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_a54bdc root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_a54bdc.left\n            find_de624f.item -> greaterthan_a54bdc.right\n            greaterthan_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_148aeb root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_afd5b1 -> lessthan_148aeb.left\n            ``Max value_0b1361``.item -> lessthan_148aeb.right\n            lessthan_148aeb.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_9a3f8e -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -284, y: 1, name: \"list\") property(List) list_0e6f9d\n\n        out(x: 593, y: 20, name: \"difference\") property(Number) difference_3bc2ae\n\n        instance(x: 0, y: 0) max_6d05b0 root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 0) min_6d05b0 root.Std_k98ojb.List.Min {}\n        list_0e6f9d -> max_6d05b0.items\n        list_0e6f9d -> min_6d05b0.items\n        instance(x: 752, y: 93) sub_875761 root.Std_k98ojb.Math.Sub {}\n        max_6d05b0.max -> sub_875761.first\n        min_6d05b0.min -> sub_875761.second\n        sub_875761.result -> difference_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_max_min_2c856f root.main.diff_max_min {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 0, name: \"list\") property(List) list_1e3b9f\n\n        out(x: 443, y: 63, name: \"output\") property(Number) output_b5a8c7\n\n        instance(x: -79, y: 10) max_2d6c4f root.Std_k98ojb.List.Max {}\n        instance(x: -78, y: 151) min_1e3b9f root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 62) sub_7a5c0c root.Std_k98ojb.Math.Sub {}\n        list_1e3b9f -> max_2d6c4f.items\n        list_1e3b9f -> min_1e3b9f.items\n        max_2d6c4f.max -> sub_7a5c0c.first\n        min_1e3b9f.min -> sub_7a5c0c.second\n        sub_7a5c0c.result -> output_b5a8c7\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_4d2d2f root.main.diff_max_min {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 165, name: \"list\") property(List) list_0f9d8e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_0f9d8e -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_a54bdc root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_a54bdc.left\n            max -> greaterthan_a54bdc.right\n            greaterthan_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_148aeb root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_148aeb.left\n            min -> lessthan_148aeb.right\n            lessthan_148aeb.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_0f9d8e -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -281, y: 165, name: \"list\") property(List) list_1a8f9e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_eb2d3c\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_1a8f9e -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_a54bdc root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_a54bdc.left\n            find_de624f.item -> greaterthan_a54bdc.right\n            greaterthan_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_148aeb root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_afd5b1 -> lessthan_148aeb.left\n            ``Max value_0b1361``.item -> lessthan_148aeb.right\n            lessthan_148aeb.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_1a8f9e -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_eb2d3c\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 1, name: \"list\") property(List) list_0e3f5a\n\n        out(x: 543, y: 11, name: \"output\") property(Number) output_eb9d6c\n\n        instance(x: 187, y: 2) sub_4f8f7f root.Std_k98ojb.Math.Sub {}\n        instance(x: -105, y: -55, name: \"Max\") max_1a3e5f root.Std_k98ojb.List.Max {}\n        instance(x: -107, y: 80, name: \"Min\") min_2d7c6c root.Std_k98ojb.List.Min {}\n        list_0e3f5a -> max_1a3e5f.items\n        list_0e3f5a -> min_2d7c6c.items\n        max_1a3e5f.max -> sub_4f8f7f.first\n        min_2d7c6c.min -> sub_4f8f7f.second\n        sub_4f8f7f.result -> output_eb9d6c\n    }\n\n    \n\n    instance(x: -57, y: 11) diff_max_min_3e5a0f root.main.diff_max_min {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1e9f3a\n\n        out(x: 593, y: 11, name: \"output\") property(Number) output_eb2d7c\n\n        instance(x: 0, y: 0) max_6d05b0 root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 0) min_6d05b0 root.Std_k98ojb.List.Min {}\n        list_1e9f3a -> max_6d05b0.items\n        list_1e9f3a -> min_6d05b0.items\n        instance(x: 752, y: 93) sub_875761 root.Std_k98ojb.Math.Sub {}\n        max_6d05b0.max -> sub_875761.first\n        min_6d05b0.min -> sub_875761.second\n        sub_875761.result -> output_eb2d7c\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_max_min_2c856f root.main.diff_max_min {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 165, name: \"list\") property(List) list_0d9b1f\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_ea2c6e\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_0d9b1f -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_de624f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_0d9b1f -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_ea2c6e\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 0, name: \"list\") property(List) list_1a8b5e\n\n        out(x: 544, y: 9, name: \"output\") property(Number) output_7c2d4f\n\n        instance(x: 188, y: 3) sub_6f1b1e root.Std_k98ojb.Math.Sub {}\n        instance(x: -107, y: 0, name: \"Max\") max_f8a5bc root.Std_k98ojb.List.Max {}\n        instance(x: -108, y: 121, name: \"Min\") min_9c7d3f root.Std_k98ojb.List.Min {}\n        list_1a8b5e -> max_f8a5bc.items\n        list_1a8b5e -> min_9c7d3f.items\n        max_f8a5bc.max -> sub_6f1b1e.first\n        min_9c7d3f.min -> sub_6f1b1e.second\n        sub_6f1b1e.result -> output_7c2d4f\n    }\n\n    \n\n    instance(x: -57, y: 10) diff_max_min_5a0b2f root.main.diff_max_min {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -283, y: 157, name: \"list\") property(List) list_0f9d6e\n\n        out(x: 443, y: 127, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: 188, y: 125) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it == max\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it == min\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -105, y: 358) max_1a7f9d root.Std_k98ojb.List.Max {}\n        instance(x: -105, y: 521) min_c5e2ef root.Std_k98ojb.List.Min {}\n        list_0f9d6e -> firstitem_870503.list\n        list_0f9d6e -> max_f3b46d.list\n        list_0f9d6e -> firstitem_3078c6.list\n        list_0f9d6e -> min_4d4556.list\n        max_f3b46d.result -> firstitem_870503.list\n        min_4d4556.result -> firstitem_3078c6.list\n        max_1a7f9d.max -> max_f3b46d.gen_0\n        min_c5e2ef.min -> min_4d4556.gen_0\n        list_0f9d6e -> max_1a7f9d.items\n        list_0f9d6e -> min_c5e2ef.items\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}"
      ],
      "22": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 6, name: \"input\") property(Number) input_0a3f9e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_1b7c4d\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_e5a8ed\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_f9e3f0\n\n        instance(x: -105, y: -110) ifexpression_1c7b2d root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_0a3f9e -> ifexpression_1c7b2d.gen_0\n        2 -> ifexpression_1c7b2d.gen_1\n        execute_1b7c4d -> ifexpression_1c7b2d.execute\n        ifexpression_1c7b2d.value -> output_f9e3f0\n        ifexpression_1c7b2d.then -> continue_e5a8ed\n        ifexpression_1c7b2d.else -> continue_e5a8ed\n    }\n\n    \n\n    instance(x: -175, y: 11) is_even_6f9e4f root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 11, name: \"input\") property(Number) input_1a8f9e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_eb2c0d\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_f3c7ee\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_9f8a6e\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a8f9e -> ifexpression_e38995.gen_0\n        execute_eb2c0d -> ifexpression_e38995.execute\n        ifexpression_e38995.value -> output_f3c7ee\n        ifexpression_e38995.then -> continue_9f8a6e\n        ifexpression_e38995.else -> continue_9f8a6e\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_1d5b2f root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 0, name: \"input\") property(Number) input_1f9a3e\n        in(x: -451, y: -115, name: \"execute\") trigger() execute_e5b7c6\n\n        out(x: 1228, y: 2, name: \"output\") property(Bool) output_f0d4aa\n        out(x: 1219, y: -114, name: \"continue\") trigger() continue_1a3e9f\n\n        instance(x: 0, y: 0) modulo_7b8c5c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 336, y: 16) equal_2d6c1f root.Std_k98ojb.Logic.Equal {}\n        input_1f9a3e -> modulo_7b8c5c.value\n        2 -> modulo_7b8c5c.divisor\n        modulo_7b8c5c.result -> equal_2d6c1f.left\n        0 -> equal_2d6c1f.right\n        equal_2d6c1f.result -> output_f0d4aa\n        execute_e5b7c6 -> continue_1a3e9f\n    }\n\n    \n\n    instance(x: -175, y: -64) is_even_8c8f8f root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 0, name: \"input\") property(Number) input_1a9e8f\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_7c2d3b\n\n        out(x: 1226, y: -115, name: \"continue\") trigger() continue_4a0c8e\n        out(x: 1215, y: 125, name: \"output\") property(Bool) output_9f1c8f\n\n        instance(x: 752, y: 127) ifexpression_6d2b3f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a9e8f -> ifexpression_6d2b3f.gen_0\n        execute_7c2d3b -> ifexpression_6d2b3f.execute\n        ifexpression_6d2b3f.value -> output_9f1c8f\n        ifexpression_6d2b3f.then -> continue_4a0c8e\n        ifexpression_6d2b3f.else -> continue_4a0c8e\n    }\n\n    \n\n    instance(x: -291, y: 11) is_even_1a9f8f root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 6, name: \"input\") property(Number) input_1a8f9e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_eb0d5c\n\n        out(x: 1267, y: 4, name: \"output\") property(Bool) output_6a2f9e\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_8e3f8f\n\n        instance(x: -105, y: -110) ifexpression_1b7d5c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_1a8f9e -> ifexpression_1b7d5c.gen_0\n        2 -> ifexpression_1b7d5c.gen_1\n        getter_9cceb3.value -> output_6a2f9e\n        ifexpression_1b7d5c.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_1b7d5c.else -> continue_8e3f8f\n        execute_eb0d5c -> ifexpression_1b7d5c.execute\n        setter_1cedb2.continue -> continue_8e3f8f\n    }\n\n    \n\n    instance(x: -291, y: 11) is_even_6a9d4f root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 2, name: \"input\") property(Number) input_1f8a5e\n        in(x: -452, y: -111, name: \"execute\") trigger() execute_eb9d3c\n\n        out(x: 558, y: 13, name: \"output\") property(Bool) output_f0f7ba\n        out(x: 512, y: -111, name: \"continue\") trigger() continue_8e1a5f\n\n        instance(x: -92, y: -106) ifexpression_eb6d4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -131, y: 110, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 153, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_1f8a5e -> ifexpression_eb6d4c.gen_0\n        2 -> ifexpression_eb6d4c.gen_1\n        getter_9cceb3.value -> output_f0f7ba\n        ifexpression_eb6d4c.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_eb6d4c.else -> continue_8e1a5f\n        execute_eb9d3c -> ifexpression_eb6d4c.execute\n        setter_1cedb2.continue -> continue_8e1a5f\n    }\n\n    \n\n    instance(x: -174, y: 29) is_even_f7c0a8 root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 17, name: \"input\") property(Number) input_1a9f0e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_e5b8d7\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_f6c3ee\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_9a2f4e\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a9f0e -> ifexpression_e38995.gen_0\n        execute_e5b8d7 -> ifexpression_e38995.execute\n        ifexpression_e38995.value -> output_f6c3ee\n        ifexpression_e38995.then -> continue_9a2f4e\n        ifexpression_e38995.else -> continue_9a2f4e\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_1b8d7f root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 3, name: \"input\") property(Number) input_1a0f5e\n        in(x: -451, y: -112, name: \"execute\") trigger() execute_9b2c6d\n\n        out(x: 1234, y: -111, name: \"continue\") trigger() continue_7f8a5e\n        out(x: 1223, y: 120, name: \"output\") property(Bool) output_1a0f5e\n\n        instance(x: -81, y: 119) ifexpression_6c2b4d root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a0f5e -> ifexpression_6c2b4d.gen_0\n        2 -> ifexpression_6c2b4d.gen_1\n        execute_9b2c6d -> ifexpression_6c2b4d.execute\n        ifexpression_6c2b4d.value -> output_1a0f5e\n        ifexpression_6c2b4d.then -> continue_7f8a5e\n        ifexpression_6c2b4d.else -> continue_7f8a5e\n    }\n\n    \n\n    instance(x: -63, y: 11) is_even_f0be66 root.main.is_even {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 166, name: \"input\") property(Number) input_1a8e6f\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_eb9c0d\n\n        instance(x: 532, y: 147) modulo_7e1ce0 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -39, y: 26, name: \"is even\") equal_de624f root.Std_k98ojb.Logic.Equal {}\n        input_1a8e6f -> modulo_7e1ce0.value\n        2 -> modulo_7e1ce0.divisor\n        modulo_7e1ce0.result -> equal_de624f.left\n        0 -> equal_de624f.right\n        equal_de624f.result -> output_eb9c0d\n    }\n\n    \n\n    instance(x: -291, y: 177) is_even_f53d27 root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 3, name: \"input\") property(Number) input_9e8a0f\n        in(x: -449, y: -111, name: \"execute\") trigger() execute_eb2c7d\n\n        out(x: 1224, y: 5, name: \"continue\") trigger() continue_6f1f3b\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_0e9a3f\n\n        instance(x: -92, y: -97) modulo_2d7c4f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 146, y: -96) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        input_9e8a0f -> modulo_2d7c4f.value\n        2 -> modulo_2d7c4f.divisor\n        modulo_2d7c4f.result -> equal_f89569.left\n        0 -> equal_f89569.right\n        equal_f89569.result -> output_0e9a3f\n        execute_eb2c7d -> continue_6f1f3b\n    }\n\n    \n\n    instance(x: -84, y: 59) is_even_5e4b8c root.main.is_even {}\n\n}"
      ],
      "23": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 1, name: \"input\") property(String) input_0\n\n        out(x: 533, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 1) find_4d5e6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) firstitem_d831ca root.Std_k98ojb.List.FirstItem {}\n        characters_7b3b7b.characters -> find_4d5e6f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            find_4d5e6f.item -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_4d5e6f.predicate\n        input_0 -> characters_7b3b7b.input\n        find_4d5e6f.item -> firstitem_d831ca.list\n        firstitem_d831ca.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_807ffd.left\n            false -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: 0, y: -1) for_065883 root.Std_k98ojb.Std.For {}\n        input_0 -> for_065883.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) characters_1088d5 root.Std_k98ojb.Strings.Characters {}\n            instance(x: 310, y: 35) contains_aabb6e root.Std_k98ojb.Strings.Contains {}\n            for_065883.item -> characters_1088d5.input\n            elem_9f6850 -> contains_aabb6e.contains\n            characters_1088d5.characters -> contains_aabb6e.input\n            contains_aabb6e.result -> bool_af09a7\n        } -> find_6d05b0.items\n        for_065883.onItem -> find_6d05b0.execute\n        find_6d05b0.item -> output_3bc2ae\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -105, y: 126) find_5e8c9f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 340, y: 0) map_1a4d8f root.Std_k98ojb.Iteration.Map {\n            handler: \"Std.If(it in list, Std.OrElse(Std.IndexOf(list, it), -1))\"\n        }\n        instance(x: 0, y: 0) ifexpression_7c2e9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"a != -1\"\n        }\n        characters_7b3b7b.characters -> map_1a4d8f.items\n        list_ai -> find_5e8c9f.items\n        input_ai -> characters_7b3b7b.input\n        map_1a4d8f.output_list -> find_5e8c9f.predicate\n        ifexpression_7c2e9f.else -> output_ai\n        find_5e8c9f.item -> ifexpression_7c2e9f.gen_0\n        ifexpression_7c2e9f.then -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) first_repeated_char_node root.main.first_repeated_char {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 756, y: -371, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 394, y: -339) data_3c713b  = [chars, seen]\n        instance(x: 46, y: -383, name: \"characters\") characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"find repeated char\") find_d42dce root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 1) tolower_634b7e root.Std_k98ojb.Strings.ToLower {}\n        data_3c713b -> output_ebef81\n        input_0 -> characters_2e1444.input\n        characters_2e1444.characters -> find_d42dce.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            tolower_634b7e.output -> contains_45e806.input\n            current_afd5b1 -> contains_45e806.contains\n            data_3c713b.seen -> contains_45e806.search\n            contains_45e806.result -> bool_1eb6e9\n        } -> find_d42dce.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            tolower_634b7e.output -> contains_45e806.input\n            current_afd5b1 -> contains_45e806.contains\n            data_3c713b.seen -> contains_45e806.search\n            contains_45e806.result -> bool_1eb6e9\n        } -> find_d42dce.predicate\n        input_0 -> tolower_634b7e.input\n        find_d42dce.item -> data_3c713b.first\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 756, y: -371, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 394, y: -339) data_3c713b  = [chars, seen]\n        instance(x: 46, y: -383, name: \"characters\") characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"find repeated char\") find_d42dce root.Std_k98ojb.Iteration.Find {}\n        instance(x: 265, y: 0) contains_c3c713b root.Std_k98ojb.List.Contains {}\n        characters_2e1444.characters -> data_3c713b.chars\n        input_0 -> characters_2e1444.input\n        data_3c713b.chars -> find_d42dce.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            data_3c713b.seen -> contains_c3c713b.list\n            current_afd5b1 -> contains_c3c713b.item\n            contains_c3c713b.contains -> bool_1eb6e9\n        } -> find_d42dce.predicate\n        find_d42dce.item -> output_ebef81\n        data_3c713b.seen -> contains_c3c713b.list\n        find_d42dce.item -> data_3c713b.seen\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3c7b4e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -2) filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: 265, y: -4) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_3c7b4e.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) substring_45e806 root.Std_k98ojb.Strings.Substring {}\n            instance(x: 415, y: 86) contains_a54bdc root.Std_k98ojb.Strings.Contains {}\n            input_0 -> substring_45e806.input\n            substring_45e806.start -> filter_f3b46d.index\n            current_afd5b1 -> substring_45e806.end\n            substring_45e806.substring -> contains_a54bdc.input\n            current_afd5b1 -> contains_a54bdc.contains\n            contains_a54bdc.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        find_6d05b0.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_2\n\n        instance(x: 0, y: 0) find_3 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_4\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5\n\n            instance(x: 89, y: 29) contains_6 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_7 root.Std_k98ojb.Logic.NotEqual {}\n            input_1 -> contains_6.input\n            elem_4 -> contains_6.contains\n            contains_6.result -> notequal_7.left\n            find_3.item -> notequal_7.right\n            notequal_7.result -> bool_5\n        } -> find_3.predicate\n        instance(x: 0, y: -1) characters_8 root.Std_k98ojb.Strings.Characters {}\n        input_1 -> characters_8.input\n        characters_8.characters -> find_3.items\n        find_3.item -> output_2\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_9 root.main.first_repeated_char {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3c7b4e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 465, y: -40) contains_d42dce root.Std_k98ojb.Query.Filter {\n            where: \"it.contains(it)\"\n        }\n        characters_3c7b4e.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(List) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            contains_d42dce.list -> current_afd5b1\n            current_afd5b1 -> contains_d42dce.list\n            find_6d05b0.item -> result_0\n        } -> find_6d05b0.predicate\n        input_0 -> characters_3c7b4e.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_1\n\n        instance(x: 0, y: 1) characters_3e9b7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_3e9b7c.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) substring_7c2f4a root.Std_k98ojb.Strings.Substring {}\n            instance(x: 415, y: 86) contains_d42dce_0 root.Std_k98ojb.Strings.Contains {}\n            input_1 -> substring_7c2f4a.input\n            substring_7c2f4a.start -> substring_7c2f4a.end\n            find_6d05b0.index + 1 -> substring_7c2f4a.start\n            substring_7c2f4a.substring -> contains_d42dce_0.input\n            current_afd5b1 -> contains_d42dce_0.contains\n            contains_d42dce_0.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        find_6d05b0.item -> result_1\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 756, y: -371, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 394, y: -339) data_3c713b  = [chars, seen]\n        instance(x: 46, y: -383, name: \"characters\") characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"find repeated char\") find_d42dce root.Std_k98ojb.Iteration.Find {}\n        instance(x: 265, y: 0) contains_c7c9f6 root.Std_k98ojb.List.Contains {}\n        characters_2e1444.characters -> data_3c713b.chars\n        input_0 -> characters_2e1444.input\n        data_3c713b.chars -> find_d42dce.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``seen``_45e806 root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> ``seen``_45e806.item\n            data_3c713b.seen -> ``seen``_45e806.list\n            ``seen``_45e806.contains -> bool_1eb6e9\n        } -> find_d42dce.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``seen``_45e806 root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> ``seen``_45e806.item\n            data_3c713b.seen -> ``seen``_45e806.list\n            ``seen``_45e806.contains -> bool_1eb6e9\n        } -> contains_c7c9f6.predicate\n        find_d42dce.item -> output_ebef81\n        contains_c7c9f6.result -> data_3c713b.seen\n        find_d42dce.item -> data_3c713b.seen\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
      ],
      "35": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -280, y: 17, name: \"list\") property(List) list_8f3a9e\n\n        out(x: 0, y: 0, name: \"second_smallest\") property(Number) second_smallest_7c2b5d\n\n        instance(x: -101, y: -103) min_c3e343 root.Std_k98ojb.List.Min {}\n        instance(x: -10, y: -104) filter_6f8a1c root.Std_k98ojb.Query.Filter {\n            where: \"it > min\"\n        }\n        instance(x: 110, y: -103) min_9e7d3f root.Std_k98ojb.List.Min {}\n        list_8f3a9e -> min_c3e343.items\n        min_c3e343.min -> filter_6f8a1c.where.gen_0\n        list_8f3a9e -> filter_6f8a1c.list\n        filter_6f8a1c.result -> min_9e7d3f.items\n        min_9e7d3f.min -> second_smallest_7c2b5d\n    }\n\n    \n\n    instance(x: -67, y: 127) second_smallest_4e0b3f root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9e4f8a\n\n        out(x: 593, y: 79, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9e4f8a -> find_6d05b0.items\n        instance(x: 0, y: 0) filter_2c1b5f root.Std_k98ojb.Query.Filter {\n            where: \"it != first\"\n        }\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            find_6d05b0.item -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> filter_2c1b5f.where\n        list_9e4f8a -> filter_2c1b5f.list\n        instance(x: 0, y: 0) min_c3e343 root.Std_k98ojb.List.Min {}\n        filter_2c1b5f.result -> min_c3e343.items\n        min_c3e343.min -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 127) second_smallest_2c856f root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -285, y: 0, name: \"list\") property(List) list_9f6a1e\n\n        out(x: 600, y: 3, name: \"second_smallest\") property(Number) second_smallest_8b7c4d\n\n        instance(x: -10, y: -16, name: \"First pass\") filter_2b5c0c root.Std_k98ojb.Query.Filter {\n            where: \"it != min(list)\"\n        }\n        instance(x: 188, y: 1) min_7a3f8e root.Std_k98ojb.List.Min {}\n        list_9f6a1e -> filter_2b5c0c.list\n        list_9f6a1e -> min_7a3f8e.items\n        min_7a3f8e.min -> filter_2b5c0c.where.gen_0\n        filter_2b5c0c.result -> second_smallest_8b7c4d\n    }\n\n    \n\n    instance(x: -64, y: 37) second_smallest_b1c9d6 root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 1, name: \"list\") property(List) list_9e8a3f\n\n        out(x: 593, y: 0, name: \"second_smallest\") property(Number) second_smallest_7c2d4b\n\n        instance(x: 0, y: 0) min_5e1a8c root.Std_k98ojb.List.Min {}\n        instance(x: -320, y: 49) filter_9f6c7c root.Std_k98ojb.Query.Filter {\n            where: \"it != smallest\"\n        }\n        instance(x: -319, y: 180) min_1e5d3a root.Std_k98ojb.List.Min {}\n        list_9e8a3f -> min_5e1a8c.items\n        min_5e1a8c.min -> filter_9f6c7c.where.gen_0\n        list_9e8a3f -> filter_9f6c7c.list\n        filter_9f6c7c.result -> min_1e5d3a.items\n        min_1e5d3a.min -> second_smallest_7c2d4b\n    }\n\n    \n\n    instance(x: -57, y: 127) second_smallest_8e0b2c root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) min_1a8f9d root.Std_k98ojb.List.Min {}\n        instance(x: -39, y: 26, name: \"First smallest number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Second smallest number\") ``First smallest number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> min_1a8f9d.items\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            min_1a8f9d.min -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            min_1a8f9d.min -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> ``First smallest number_0b1361``.predicate\n        list_09fcba -> ``First smallest number_0b1361``.items\n        find_de624f.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) second_smallest_f53d27 root.main.second_smallest {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 1, name: \"list\") property(List) list_9f5a2e\n\n        out(x: 460, y: 0, name: \"second_smallest\") property(Number) second_smallest_8c7d4b\n\n        instance(x: -6, y: -104, name: \"first pass\") find_1c1b3f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: 0, y: 0, name: \"current\") property(Number) current_9e7a2d\n\n            out(x: 0, y: 0, name: \"\") property(Bool) _c8f6ee\n\n            instance(x: -114, y: -40) less_than_b3b1ed root.Std_k98ojb.Math.LessThan {}\n            current_9e7a2d -> less_than_b3b1ed.left\n            first_smallest_f4c5c0 -> less_than_b3b1ed.right\n            less_than_b3b1ed.result -> _c8f6ee\n        } -> find_1c1b3f.predicate\n        instance(x: 272, y: -105, name: \"second pass\") find_7e9a2d root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: 0, y: 0, name: \"current\") property(Number) current_8c5f3f\n\n            out(x: 0, y: 0, name: \"\") property(Bool) _7d9a6e\n\n            instance(x: -114, y: -40) less_than_4b1a2d root.Std_k98ojb.Math.LessThan {}\n            current_8c5f3f -> less_than_4b1a2d.left\n            first_smallest_f4c5c0 -> less_than_4b1a2d.right\n            less_than_4b1a2d.result -> _7d9a6e\n        } -> find_7e9a2d.predicate\n        instance(x: -210, y: 40) min_8f3c5d root.Std_k98ojb.List.Min {}\n        list_9f5a2e -> min_8f3c5d.items\n        min_8f3c5d.min -> first_smallest_f4c5c0\n        list_9f5a2e -> find_1c1b3f.items\n        find_1c1b3f.item -> second_pass_list_7f3c5d.list\n        instance(x: -211, y: 160) min_7f3c5d root.Std_k98ojb.List.Min {}\n        find_7e9a2d.item -> second_smallest_8c7d4b\n        list_9f5a2e -> find_7e9a2d.items\n        second_pass_list_7f3c5d.list -> min_7f3c5d.items\n    }\n\n    \n\n    instance(x: -68, y: 12) second_smallest_1b8c4f root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9e8f6a\n\n        out(x: 593, y: 29, name: \"number\") property(Number) number_7b1d3c\n\n        instance(x: 0, y: 0) find_2d5f9f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_6a8e4a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1c7f3b\n\n            instance(x: 89, y: 29) min_5e2d9c root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_8a0d4c root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -46, y: 38) find_7f3f6c root.Std_k98ojb.Iteration.Find {}\n            list_9e8f6a -> find_7f3f6c.items\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(Number) current_1d5c0a\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_eb9e8f\n\n                instance(x: 112, y: 80) min_2a7f3c root.Std_k98ojb.Math.Min {}\n                current_1d5c0a -> min_2a7f3c.left\n                elem_6a8e4a -> min_2a7f3c.right\n                min_2a7f3c.result -> bool_eb9e8f\n            } -> find_7f3f6c.predicate\n            find_7f3f6c.item -> min_5e2d9c.left\n            elem_6a8e4a -> min_5e2d9c.right\n            notequal_8a0d4c.result -> bool_1c7f3b\n            min_5e2d9c.result -> notequal_8a0d4c.left\n            find_7f3f6c.item -> notequal_8a0d4c.right\n        } -> find_2d5f9f.predicate\n        list_9e8f6a -> find_2d5f9f.items\n        find_2d5f9f.item -> number_7b1d3c\n    }\n\n    \n\n    instance(x: -55, y: 127) second_smallest_4f0f7f root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 2, name: \"list\") property(List) list_9e6f5a\n\n        out(x: 0, y: 0, name: \"second_smallest\") property(Number) second_smallest_1b7c3d\n\n        instance(x: 0, y: 0) min_2f8b1f root.Std_k98ojb.List.Min {}\n        instance(x: -101, y: -61) remove_f6a9e4 root.Std_k98ojb.List.Remove {}\n        instance(x: 0, y: 0) min_5c3d7f root.Std_k98ojb.List.Min {}\n        list_9e6f5a -> min_2f8b1f.items\n        min_2f8b1f.min -> remove_f6a9e4.index\n        list_9e6f5a -> remove_f6a9e4.list\n        remove_f6a9e4.listWithoutItem -> min_5c3d7f.items\n        min_5c3d7f.min -> second_smallest_1b7c3d\n    }\n\n    \n\n    instance(x: -34, y: 127) second_smallest_2d0d9f root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 0, name: \"list\") property(List) list_9e3a1f\n\n        out(x: 595, y: 29, name: \"second_smallest\") property(Number) second_smallest_8c2b4d\n\n        instance(x: -41, y: 28, name: \"First smallest number\") find_5e7b6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -42, y: 179, name: \"Second smallest number\") ``First smallest number_2c9a8d`` root.Std_k98ojb.Iteration.Find {}\n        list_9e3a1f -> find_5e7b6f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_a0f4c2\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_a0f4c2 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_5e7b6f.predicate\n        list_9e3a1f -> ``First smallest number_2c9a8d``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_a0f4c2\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_a0f4c2 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            find_5e7b6f.item -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First smallest number_2c9a8d``.predicate\n        ``First smallest number_2c9a8d``.item -> second_smallest_8c2b4d\n    }\n\n    \n\n    instance(x: -292, y: 29) second_smallest_7e1f0c root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) min_1a9f0d root.Std_k98ojb.List.Min {}\n        instance(x: -39, y: 26, name: \"First smallest number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Second smallest number\") ``First smallest number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> min_1a9f0d.items\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            min_1a9f0d.min -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        list_09fcba -> ``First smallest number_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            min_1a9f0d.min -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First smallest number_0b1361``.predicate\n        find_de624f.item -> min_1a9f0d.items\n        ``First smallest number_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) second_smallest_f53d27 root.main.second_smallest {}\n\n}"
      ]
    }
  },
  {
    "experiment_name": "regular_RAG_10_shot",
    "best_params_optimization": "semantic",
    "temperature": 0.9,
    "top_p": 0.2,
    "top_k": 50,
    "seed": 75,
    "n_generations_per_task": 10,
    "model": "phi4:14b-fp16",
    "largest_context": 15999,
    "task_candidates": {
      "7": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -176, y: 12, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -177, y: -124, name: \"list2\") property(List) list2_eb0d7c\n\n        out(x: 525, y: -101, name: \"output\") property(Bool) output_4f5c3e\n\n        instance(x: 185, y: -103, name: \"intersection\") intersection_9a8f1f root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2f9e -> intersection_9a8f1f.left\n        list2_eb0d7c -> intersection_9a8f1f.right\n        instance(x: 492, y: -103) notempty_5a3b1c root.Std_k98ojb.List.NotEmpty {}\n        intersection_9a8f1f.intersection -> notempty_5a3b1c.list\n        notempty_5a3b1c.isEmpty -> output_4f5c3e\n    }\n\n    \n\n    instance(x: -154, y: 46) has_common_element_6d0f2c root.main.has_common_element {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -171, y: 17, name: \"list1\") property(List) list1_3a8b9f\n        in(x: -161, y: -124, name: \"list2\") property(List) list2_7c0d6e\n\n        out(x: 555, y: -98, name: \"output\") property(Bool) output_5e4b1a\n\n        instance(x: 146, y: -96) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_3a8b9f -> intersection_c7c7e6.left\n        list2_7c0d6e -> intersection_c7c7e6.right\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        false -> contains_32727d.item\n        intersection_c7c7e6.intersection -> contains_32727d.list\n        not_75283f.result -> output_5e4b1a\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -92, y: 45) common_element_b9ff6b root.main.common_element {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -179, y: 11, name: \"list1\") property(List) list1_3a2f8e\n        in(x: -178, y: -125, name: \"list2\") property(List) list2_9b0c5d\n\n        out(x: 560, y: -109, name: \"output\") property(Bool) output_7e1c4a\n\n        instance(x: 142, y: -110, name: \"intersection\") intersection_3f6b8c root.Std_k98ojb.Sets.Intersection {}\n        list1_3a2f8e -> intersection_3f6b8c.left\n        list2_9b0c5d -> intersection_3f6b8c.right\n        instance(x: 424, y: -109) notempty_7f4f2f root.Std_k98ojb.List.NotEmpty {}\n        intersection_3f6b8c.intersection -> notempty_7f4f2f.list\n        notempty_7f4f2f.isEmpty -> output_7e1c4a\n    }\n\n    \n\n    instance(x: -95, y: 44) common_element_e9d5a0 root.main.common_element {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -172, y: 19, name: \"list1\") property(List) list1_9a8f6b\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_7e3c4d\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_b0e5e9\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_f8b6f1 root.Std_k98ojb.Sets.Intersection {}\n        list1_9a8f6b -> intersection_f8b6f1.left\n        list2_7e3c4d -> intersection_f8b6f1.right\n        instance(x: 680, y: -50) notempty_5a0e9c root.Std_k98ojb.List.NotEmpty {}\n        intersection_f8b6f1.intersection -> notempty_5a0e9c.list\n        notempty_5a0e9c.isEmpty -> output_b0e5e9\n    }\n\n    \n\n    instance(x: -138, y: -63) common_element_3d4b2a root.main.common_element {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -179, y: 19, name: \"list1\") property(List) list1_9a3b6f\n        in(x: -177, y: -111, name: \"list2\") property(List) list2_8c7d0e\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_f9f3b1 root.Std_k98ojb.Sets.Intersection {}\n        list1_9a3b6f -> intersection_f9f3b1.left\n        list2_8c7d0e -> intersection_f9f3b1.right\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"intersection.length > 0\"\n        }\n        intersection_f9f3b1.intersection -> ifexpression_875761.gen_0\n        ifexpression_875761.value -> output_5bbcd7\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_aad0c2 root.main.has_common_element {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -179, y: 12, name: \"list1\") property(List) list1_9e3f5a\n        in(x: -167, y: -110, name: \"list2\") property(List) list2_eb7c8d\n\n        out(x: 554, y: -92, name: \"output\") property(Bool) output_6a0f4f\n\n        instance(x: 138, y: -97, name: \"intersection\") intersection_9e1b5f root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3f5a -> intersection_9e1b5f.left\n        list2_eb7c8d -> intersection_9e1b5f.right\n        instance(x: 365, y: -96) notempty_4a0a6 root.Std_k98ojb.List.NotEmpty {}\n        intersection_9e1b5f.intersection -> notempty_4a0a6.list\n        notempty_4a0a6.isEmpty -> output_6a0f4f\n    }\n\n    \n\n    instance(x: -95, y: 60) common_element_7c2d3 root.main.common_element {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -176, y: 18, name: \"list1\") property(List) list1_3f0a8e\n        in(x: -161, y: -122, name: \"list2\") property(List) list2_9c7d5b\n\n        out(x: 555, y: -101, name: \"output\") property(Bool) output_e4c6ec\n\n        instance(x: 144, y: -129) intersection_c8e1a3 root.Std_k98ojb.Sets.Intersection {}\n        list1_3f0a8e -> intersection_c8e1a3.left\n        list2_9c7d5b -> intersection_c8e1a3.right\n        instance(x: 442, y: -100) notempty_4a6b5c root.Std_k98ojb.List.NotEmpty {}\n        intersection_c8e1a3.intersection -> notempty_4a6b5c.list\n        notempty_4a6b5c.isEmpty -> output_e4c6ec\n    }\n\n    \n\n    instance(x: -138, y: 59) common_element_7d0f9c root.main.common_element {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -171, y: 19, name: \"list1\") property(List) list1_9e3f8a\n        in(x: -161, y: -120, name: \"list2\") property(List) list2_7b0d6c\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_4b5a9e\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_3f1c8e root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3f8a -> intersection_3f1c8e.left\n        list2_7b0d6c -> intersection_3f1c8e.right\n        instance(x: 188, y: -50) notempty_5b4b4f root.Std_k98ojb.List.NotEmpty {}\n        intersection_3f1c8e.intersection -> notempty_5b4b4f.list\n        notempty_5b4b4f.isEmpty -> output_4b5a9e\n    }\n\n    \n\n    instance(x: -138, y: -63) common_element_aad0c2 root.main.common_element {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -178, y: 20, name: \"list1\") property(List) list1_3a2b8f\n        in(x: -177, y: -119, name: \"list2\") property(List) list2_7e9c6d\n\n        out(x: 506, y: -47, name: \"output\") property(Bool) output_5b1f4a\n\n        instance(x: 221, y: -45, name: \"intersection\") intersection_8c3a1f root.Std_k98ojb.Sets.Intersection {}\n        list1_3a2b8f -> intersection_8c3a1f.left\n        list2_7e9c6d -> intersection_8c3a1f.right\n        instance(x: 452, y: -47) notempty_5b0c4c root.Std_k98ojb.List.NotEmpty {}\n        intersection_8c3a1f.intersection -> notempty_5b0c4c.list\n        notempty_5b0c4c.isEmpty -> output_5b1f4a\n    }\n\n    \n\n    instance(x: -140, y: 43) has_common_element_7e2d9c root.main.has_common_element {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -277, y: 167, name: \"list1\") property(List) list1_8a3f5e\n        in(x: -276, y: 334, name: \"list2\") property(List) list2_eb9d7c\n\n        out(x: 800, y: 315, name: \"output\") property(Bool) output_6e0f4e\n\n        instance(x: 532, y: 317) intersection_c5a8d1 root.Std_k98ojb.Sets.Intersection {}\n        list1_8a3f5e -> intersection_c5a8d1.left\n        list2_eb9d7c -> intersection_c5a8d1.right\n        instance(x: 1040, y: 317) notempty_6b4b1f root.Std_k98ojb.List.NotEmpty {}\n        intersection_c5a8d1.intersection -> notempty_6b4b1f.list\n        notempty_6b4b1f.isEmpty -> output_6e0f4e\n    }\n\n    \n\n    instance(x: -291, y: 177) has_common_element_f53d27 root.main.has_common_element {}\n\n}"
      ],
      "11": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 3, name: \"list\") property(List) list_9a8f1e\n\n        out(x: 1227, y: 2, name: \"output\") property(Bool) output_eb0d5c\n\n        instance(x: 772, y: 76) filter_6e4c7c root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: -92, y: -97) intersection_c9a3f8 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_9a8f1e -> filter_6e4c7c.list\n        filter_6e4c7c.result -> intersection_c9a3f8.left\n        list_9a8f1e -> intersection_c9a3f8.right\n        length_6e87f2.length -> equal_f89569.left\n        intersection_c9a3f8.intersection -> length_6e87f2.list\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_eb0d5c\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_7f7f4 root.main.is_consecutive {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -280, y: 3, name: \"list\") property(List) list_1e8f6a\n\n        out(x: 1065, y: -2, name: \"output\") property(Bool) output_9c0d7b\n\n        instance(x: 1054, y: 48) ifexpression_3e1b7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 536, y: 161, name: \"getter_ea9d5f\") getter_ea9d5f = previous\n        setter(x: 979, y: -312, name: \"setter_8b4e7c\") setter_8b4e7c = previous\n        instance(x: 514, y: -20) for_d0f3c1 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_8b4e7c\") setter_5a9d2c = previous\n        instance(x: -274, y: -35) getat_e6f7ba root.Std_k98ojb.List.GetAt {}\n        ifexpression_3e1b7c.else -> continue_a96db6\n        ifexpression_3e1b7c.value -> output_5bbcd7\n        ifexpression_3e1b7c.then -> setter_8b4e7c.execute\n        list_1e8f6a -> for_d0f3c1.items\n        for_d0f3c1.item -> ifexpression_3e1b7c.gen_2\n        for_d0f3c1.index -> ifexpression_3e1b7c.gen_0\n        getter_ea9d5f.value -> ifexpression_3e1b7c.gen_1\n        for_d0f3c1.onItem -> ifexpression_3e1b7c.execute\n        for_d0f3c1.done -> continue_a96db6\n        for_d0f3c1.item -> setter_8b4e7c.new_value\n        list_1e8f6a -> getat_e6f7ba.list\n        0 -> getat_e6f7ba.index\n        getat_e6f7ba.itemAtIndex -> setter_5a9d2c.new_value\n        execute_90aaec -> setter_5a9d2c.execute\n        setter_5a9d2c.continue -> for_d0f3c1.reset\n        setter_8b4e7c.continue -> for_d0f3c1.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_6a4dfb root.main.is_consecutive {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 1, name: \"list\") property(List) list_3e8a9f\n\n        out(x: 1057, y: 2, name: \"output\") property(Bool) output_5b4c0d\n\n        instance(x: 321, y: -11) sort_6f1f7c root.Std_k98ojb.List.Sort {}\n        instance(x: 682, y: 8) for_3e2a7c root.Std_k98ojb.Std.For {}\n        instance(x: 1050, y: 9) sub_5d4f7c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1066, y: -17) if_1c8f8c root.Std_k98ojb.Std.If {}\n        list_3e8a9f -> sort_6f1f7c.list\n        sort_6f1f7c.sortedList -> for_3e2a7c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_0b8d4e\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_0b8d4e -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> for_3e2a7c.handler\n        sub_5d4f7c.first -> if_1c8f8c.predicate\n        for_3e2a7c.item -> sub_5d4f7c.second\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_0b8d4e\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_0b8d4e -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> for_3e2a7c.handler\n        sub_5d4f7c.result -> if_1c8f8c.value\n        sort_6f1f7c.sortedList -> sub_5d4f7c.first\n        1 -> sub_5d4f7c.second\n        for_3e2a7c.onItem -> if_1c8f8c.execute\n        for_3e2a7c.done -> output_5b4c0d\n        if_1c8f8c.then -> output_5b4c0d\n    }\n\n    \n\n    instance(x: -83, y: 69) is_consecutive_f9f6a8 root.main.is_consecutive {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 0, name: \"list\") property(List) list_3a8f1e\n\n        out(x: 1056, y: -5, name: \"output\") property(Bool) output_7b9d4c\n\n        instance(x: 107, y: 2) sort_b0b7f2 root.Std_k98ojb.List.Sort {}\n        instance(x: 408, y: -1) map_3e8a5c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 728, y: 9) filter_4d6a3c root.Std_k98ojb.Query.Filter {\n            where: \"it[0] + 1 == it[1]\"\n        }\n        instance(x: 1002, y: -10) length_7e5f1f root.Std_k98ojb.List.Length {}\n        instance(x: 1036, y: 69) greaterthanorequal_f9d3c8 root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        list_3a8f1e -> sort_b0b7f2.list\n        sort_b0b7f2.sortedList -> map_3e8a5c.items\n        func() {\n            in(x: -119, y: 34, name: \"current\") property(Number) current_9d6a3c\n\n            out(x: 397, y: 44, name: \"\") property(List) _7f1b4c\n\n            instance(x: 91, y: 30) list_generate_range_e8e5e2 root.Std_k98ojb.List.GenerateRange {}\n            current_9d6a3c -> list_generate_range_e8e5e2.to\n            0 -> list_generate_range_e8e5e2.from\n            list_generate_range_e8e5e2.list -> _7f1b4c\n        } -> map_3e8a5c.handler\n        map_3e8a5c.output_list -> filter_4d6a3c.list\n        length_7e5f1f.length -> greaterthanorequal_f9d3c8.left\n        1 -> greaterthanorequal_f9d3c8.right\n        filter_4d6a3c.result -> output_7b9d4c\n    }\n\n    \n\n    instance(x: -64, y: 127) is_consecutive_5f0e2c root.main.is_consecutive {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -285, y: 1, name: \"list\") property(List) list_3f9a5e\n\n        out(x: 555, y: -4, name: \"output\") property(Bool) output_7b8c0d\n\n        instance(x: 771, y: -6) ifexpression_2e1e4f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 127, name: \"getter_9c8d7a\") getter_9c8d7a = previous\n        setter(x: 679, y: -321, name: \"setter_b3b5e2\") setter_b3b5e2 = previous\n        instance(x: 321, y: -17) for_d1f0da root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_b3b5e2\") setter_8c9a4d = previous\n        instance(x: -275, y: -31) getat_e7f1ba root.Std_k98ojb.List.GetAt {}\n        ifexpression_2e1e4f.else -> continue_a96db6\n        ifexpression_2e1e4f.value -> output_5bbcd7\n        ifexpression_2e1e4f.then -> setter_b3b5e2.execute\n        list_3f9a5e -> for_d1f0da.items\n        for_d1f0da.item -> ifexpression_2e1e4f.gen_2\n        for_d1f0da.index -> ifexpression_2e1e4f.gen_0\n        getter_9c8d7a.value -> ifexpression_2e1e4f.gen_1\n        for_d1f0da.onItem -> ifexpression_2e1e4f.execute\n        for_d1f0da.done -> continue_a96db6\n        for_d1f0da.item -> setter_b3b5e2.new_value\n        list_3f9a5e -> getat_e7f1ba.list\n        0 -> getat_e7f1ba.index\n        getat_e7f1ba.itemAtIndex -> setter_8c9a4d.new_value\n        execute_90aaec -> setter_8c9a4d.execute\n        setter_8c9a4d.continue -> for_d1f0da.reset\n        setter_b3b5e2.continue -> for_d1f0da.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_7f6b5f root.main.is_consecutive {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 1, name: \"list\") property(List) list_9e8f0a\n\n        out(x: 1007, y: -3, name: \"output\") property(Bool) output_eb2c6d\n\n        instance(x: 352, y: 20) sort_4a1b1f root.Std_k98ojb.List.Sort {}\n        instance(x: 696, y: -12) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1040, y: 16) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1282, y: -5) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1516, y: 14) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1758, y: -3) if_07b8c7 root.Std_k98ojb.Std.If {}\n        list_9e8f0a -> sort_4a1b1f.list\n        sort_4a1b1f.sortedList -> for_8cb3f6.items\n        func() {\n            in(x: -77, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> for_8cb3f6.handler\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> lessthanorequal_f11fda.left\n        sort_4a1b1f.sortedList -> lessthanorequal_f11fda.right\n        for_8cb3f6.onItem -> lessthanorequal_f11fda.execute\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        sort_4a1b1f.sortedList -> equal_f89569.left\n        add_b4554f.result -> equal_f89569.right\n        for_8cb3f6.index -> equal_f89569.gen_0\n        0 -> equal_f89569.gen_1\n        if_07b8c7.else -> output_eb2c6d\n        if_07b8c7.then -> for_8cb3f6.next\n        for_8cb3f6.done -> output_eb2c6d\n    }\n\n    \n\n    instance(x: -68, y: 128) is_consecutive_1a9e0c root.main.is_consecutive {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 5, name: \"list\") property(List) list_1a9f2e\n\n        out(x: 1218, y: 10, name: \"output\") property(Bool) output_7b3d6c\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_1a9f2e -> filter_7b3b7b.list\n        filter_7b3b7b.result -> length_8166b0.list\n        1 -> equal_f89569.right\n        length_8166b0.length -> equal_f89569.left\n        equal_f89569.result -> output_7b3d6c\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_ae2a9f root.main.is_consecutive {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 3, name: \"list\") property(List) list_1e8a9f\n\n        out(x: 1217, y: 0, name: \"output\") property(Bool) output_5b2d7c\n\n        instance(x: 0, y: -10) sort_4b6b3f root.Std_k98ojb.List.Sort {}\n        instance(x: 240, y: 8) for_1e9a3c root.Std_k98ojb.Std.For {}\n        instance(x: 1012, y: 5) sub_0d7a2c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1024, y: -95) lessthanorequal_8f1e9f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1376, y: -5) if_0d3a7c root.Std_k98ojb.Std.If {}\n        list_1e8a9f -> sort_4b6b3f.list\n        sort_4b6b3f.sortedList -> for_1e9a3c.items\n        func() {\n            in(x: -114, y: 33, name: \"current\") property(Number) current_0e7d5f\n\n            out(x: 708, y: 43, name: \"bool\") property(Bool) bool_2b1f9a\n\n            instance(x: 113, y: 29) sub_8c3f4c root.Std_k98ojb.Math.Sub {}\n            instance(x: 349, y: 34) lessthanorequal_e5e7d6 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_0e7d5f -> sub_8c3f4c.first\n            for_1e9a3c.index -> sub_8c3f4c.second\n            sub_8c3f4c.result -> lessthanorequal_e5e7d6.left\n            1 -> lessthanorequal_e5e7d6.right\n            lessthanorequal_e5e7d6.result -> bool_2b1f9a\n        } -> if_0d3a7c.predicate\n        for_1e9a3c.item -> sub_0d7a2c.first\n        for_1e9a3c.index -> sub_0d7a2c.second\n        sub_0d7a2c.result -> lessthtanorequal_8f1e9f.left\n        1 -> lessthanorequal_8f1e9f.right\n        lessthanorequal_8f1e9f.result -> if_0d3a7c.value\n        for_1e9a3c.onItem -> if_0d3a7c.execute\n        if_0d3a7c.else -> output_5b2d7c\n        if_0d3a7c.then -> for_1e9a3c.next\n        for_1e9a3c.done -> output_5b2d7c\n    }\n\n    \n\n    instance(x: -55, y: 129) is_consecutive_f8f6f4 root.main.is_consecutive {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -285, y: 1, name: \"list\") property(List) list_2a9d5e\n\n        out(x: 1066, y: 0, name: \"output\") property(Bool) output_8b3c7f\n\n        instance(x: 1054, y: -11) filter_1a7f2c root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: 1055, y: 88) sort_8d9e6c root.Std_k98ojb.List.Sort {}\n        instance(x: 1054, y: 169) map_7f2a3f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1055, y: 250) zip_1b7f8d root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 1056, y: 331) filter_4e0c8c root.Std_k98ojb.Query.Filter {\n            where: \"it[0] + 1 == it[1]\"\n        }\n        instance(x: 1055, y: 412) length_9a3f2d root.Std_k98ojb.List.Length {}\n        instance(x: 1054, y: 493) greaterthan_8c7e2f root.Std_k98ojb.Math.GreaterThan {}\n        list_2a9d5e -> filter_1a7f2c.list\n        filter_1a7f2c.result -> sort_8d9e6c.list\n        sort_8d9e6c.sortedList -> map_7f2a3f.items\n        func() {\n            in(x: -122, y: 179, name: \"current\") property(Number) current_0b5a1f\n\n            out(x: 782, y: 178, name: \"\") property(Number) _4c9e6d\n\n            instance(x: 94, y: 163) add_7b8c2d root.Std_k98ojb.Math.Add {}\n            current_0b5a1f -> add_7b8c2d.first\n            1 -> add_7b8c2d.second\n            add_7b8c2d.result -> _4c9e6d\n        } -> map_7f2a3f.handler\n        map_7f2a3f.output_list -> zip_1b7f8d.left\n        sort_8d9e6c.sortedList -> zip_1b7f8d.right\n        zip_1b7f8d.zipped -> filter_4e0c8c.list\n        length_9a3f2d.length -> greaterthan_8c7e2f.left\n        1 -> greaterthan_8c7e2f.right\n        filter_4e0c8c.resultLength -> length_9a3b5e.list\n        filter_4e0c8c.result -> greaterthan_8c7e2f.result\n        greaterthan_8c7e2f.result -> output_8b3c7f\n    }\n\n    \n\n    instance(x: -55, y: 529) is_consecutive_1a5d9f root.main.is_consecutive {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 2, name: \"list\") property(List) list_0f9d5e\n\n        out(x: 1218, y: 1, name: \"output\") property(Bool) output_eb3a7c\n\n        instance(x: 772, y: 77) filter_4a6c2c root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -318, y: 521, name: \"Odd list\") filter_5e9f8d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: 146, y: -96) length_7c6a1c root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f8e3d4 root.Std_k98ojb.Logic.Equal {}\n        list_0f9d5e -> filter_4a6c2c.list\n        filter_4a6c2c.result -> length_7c6a1c.list\n        list_0f9d5e -> filter_5e9f8d.list\n        filter_5e9f8d.result -> equal_f8e3d4.left\n        length_7c6a1c.length -> equal_f8e3d4.right\n        2 -> equal_f8e3d4.right\n        equal_f8e3d4.result -> output_eb3a7c\n    }\n\n    \n\n    instance(x: -55, y: 529) is_consecutive_0f9d5e root.main.is_consecutive {}\n}"
      ],
      "17": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 11, name: \"sublist\") property(List) sublist_3f8a9e\n        in(x: -298, y: -186, name: \"list\") property(List) list_1c7b0d\n\n        out(x: 1025, y: -110, name: \"output\") property(Bool) output_6e4b1e\n\n        instance(x: 103, y: -178, name: \"is sublist\") filter_3f8a9e root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_7c1d5e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            sublist_3f8a9e -> contains_32727d.list\n            current_7c1d5e -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> filter_3f8a9e.handler\n        list_1c7b0d -> filter_3f8a9e.items\n        instance(x: 103, y: -178) length_8166b0 root.Std_k98ojb.List.Length {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_7c1d5e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            sublist_3f8a9e -> contains_32727d.list\n            current_7c1d5e -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> length_8166b0.handler\n        filter_3f8a9e.output_list -> length_8166b0.items\n        instance(x: 103, y: -178) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        length_8166b0.length -> equal_f89569.left\n        sublist_3f8a9e -> equal_f89569.right\n        equal_f89569.result -> output_6e4b1e\n    }\n\n    \n\n    instance(x: -290, y: 5) is_sublist_2c9d0f root.main.is_sublist {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -280, y: 30, name: \"sublist\") property(List) sublist_1d8a9f\n        in(x: -279, y: -120, name: \"list\") property(List) list_0c2e3b\n\n        out(x: 1025, y: -11, name: \"output\") property(Bool) output_7e6f4c\n\n        instance(x: 105, y: -13) contains_9d1a2f root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -20, name: \"current\") property(List) current_8f3a5e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_9d1a2f.handler\n        list_0c2e3b -> contains_9d1a2f.list\n        sublist_1d8a9f -> contains_9d1a2f.item\n        contains_9d1a2f.is_contained -> output_7e6f4c\n    }\n\n    \n\n    instance(x: -283, y: 10) is_sublist_5b0c1e root.main.is_sublist {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -298, y: 20, name: \"sublist\") property(List) sublist_0a9d8e\n        in(x: -298, y: -139, name: \"list\") property(List) list_7c1b5f\n\n        out(x: 1052, y: -109, name: \"output\") property(Bool) output_4e3b6f\n\n        instance(x: 100, y: -138) contains_c9a0d8 root.Std_k98ojb.List.Contains {}\n        list_7c1b5f -> contains_c9a0d8.list\n        sublist_0a9d8e -> contains_c9a0d8.item\n        contains_c9a0d8.is_contained -> output_4e3b6f\n    }\n\n    \n\n    instance(x: -293, y: 11) is_sublist_a7c5d1 root.main.is_sublist {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -280, y: 0, name: \"list1\") property(List) list1_3f8a2b\n        in(x: -281, y: 170, name: \"list2\") property(List) list2_7c9d5e\n\n        out(x: 1036, y: 95, name: \"output\") property(Bool) output_e0b1ea\n\n        instance(x: 106, y: -8, name: \"is sublist\") filter_3f4a9c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -192, y: 85, name: \"current\") property(List) current_1d0e6\n            in(x: -184, y: 206, name: \"_index\") property(Number) _index_3c9a8\n\n            out(x: 698, y: 127, name: \"output\") property(Bool) output_7b5f2f\n\n            instance(x: 112, y: 122) contains_4d1e0c root.Std_k98ojb.List.Contains {}\n            instance(x: 416, y: 123) notequal_3a9b8f root.Std_k98ojb.Logic.NotEqual {}\n            current_1d0e6 -> contains_4d1e0c.list\n            list2_7c9d5e -> contains_4d1e0c.item\n            contains_4d1e0c.is_contained -> notequal_3a9b8f.left\n            0 -> notequal_3a9b8f.right\n            notequal_3a9b8f.result -> output_7b5f2f\n        } -> filter_3f4a9c.handler\n        instance(x: -277, y: 170) slice_f1d6e0 root.Std_k98ojb.List.Slice {}\n        list1_3f8a2b -> slice_f1d6e0.list\n        _index_3c9a8 -> slice_f1d6e0.start\n        length(list1_3f8a2b) - length(list2_7c9d5e) + 1 -> slice_f1d6e0.end\n        filter_3f4a9c.output_list -> list_7f9c6a\n        instance(x: 106, y: 170, name: \"is empty\") notempty_7b2c1f root.Std_k98ojb.List.NotEmpty {}\n        list_7f9c6a -> notempty_7b2c1f.list\n        notempty_7b2c1f.is_not_empty -> output_e0b1ea\n        instance(x: -278, y: 0) generate_range_3e5d4f root.Std_k98ojb.List.GenerateRange {}\n        0 -> generate_range_3e5d4f.from\n        length(list1_3f8a2b) - length(list2_7c9d5e) + 1 -> generate_range_3e5d4f.to\n        generate_range_3e5d4f.range -> filter_3f4a9c.items\n    }\n\n    \n\n    instance(x: -290, y: 179) is_sublist_8b2c7 root.main.is_sublist {}\n\n    \n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -277, y: 166, name: \"sublist\") property(List) sublist_09fcba\n        in(x: -277, y: -81, name: \"list\") property(List) list_63c248\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_edc2e3\n\n        instance(x: 532, y: 147) mul_7e1ce0 root.Std_k98ojb.Math.Mul {}\n        instance(x: -39, y: 26, name: \"First even number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"First odd number\") ``First even number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        sublist_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        sublist_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) is_sublist_f53d27 root.main.is_sublist {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -287, y: 20, name: \"sublist\") property(List) sublist_3a0f9e\n        in(x: -288, y: -150, name: \"list\") property(List) list_7b8c1d\n\n        out(x: 557, y: -99, name: \"output\") property(Bool) output_e6f2ea\n\n        instance(x: -82, y: -149) length_4e5a0c root.Std_k98ojb.List.Length {}\n        instance(x: 146, y: -97) contains_1d9f8f root.Std_k98ojb.List.Contains {}\n        instance(x: 360, y: -96) equal_f2f3b6 root.Std_k98ojb.Logic.Equal {}\n        sublist_3a0f9e -> length_4e5a0c.list\n        list_7b8c1d -> contains_1d9f8f.list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_6f3f7e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4a1b5c\n\n            instance(x: 74, y: -23) slice_8d0b2f root.Std_k98ojb.List.Slice {}\n            instance(x: 285, y: -25) length_7e9b6c root.Std_k98ojb.List.Length {}\n            instance(x: 496, y: -24) equal_1a3f5c root.Std_k98ojb.Logic.Equal {}\n            current_6f3f7e -> slice_8d0b2f.list\n            length_4e5a0c.length -> slice_8d0b2f.start\n            0 -> slice_8d0b2f.end\n            slice_8d0b2f.slice -> length_7e9b6c.list\n            sublist_3a0f9e -> equal_1a3f5c.left\n            length_7e9b6c.length -> equal_1a3f5c.right\n            equal_1a3f5c.result -> bool_4a1b5c\n        } -> contains_1d9f8f.handler\n        length_4e5a0c.length -> equal_f2f3b6.left\n        list_7b8c1d -> equal_f2f3b6.right\n        equal_f2f3b6.result -> output_e6f2ea\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_9e4a1 root.main.is_sublist {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -280, y: 15, name: \"sublist\") property(List) sublist_1a0f2e\n        in(x: -279, y: -186, name: \"list\") property(List) list_5c7d8b\n\n        out(x: 1119, y: -175, name: \"output\") property(Bool) output_e6d4ee\n\n        instance(x: 1020, y: -173) contains_3f2e1a root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -29, y: -28, name: \"sublist\") property(List) sublist_5c7d8b\n            in(x: -27, y: 47, name: \"list\") property(List) list_1a0f2e\n\n            out(x: 706, y: 26, name: \"output\") property(Bool) output_3e6d4e\n\n            instance(x: 226, y: 31) map_7b9c8a root.Std_k98ojb.Iteration.Map {}\n            func() {\n                in(x: -30, y: -25, name: \"current\") property(List) current_1a0f2e\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_5c7d8b\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_e6d4ee\n\n                instance(x: 226, y: 56) contains_3f2e1a root.Std_k98ojb.List.Contains {}\n                current_1a0f2e -> contains_3f2e1a.list\n                sublist_5c7d8b -> contains_3f2e1a.item\n                contains_3f2e1a.is_contained -> output_e6d4ee\n            } -> map_7b9c8a.handler\n            list_1a0f2e -> map_7b9c8a.items\n            func() {\n                in(x: -192, y: -16, name: \"current\") property(List) current_5c7d8b\n\n                out(x: 521, y: -28, name: \"bool\") property(Bool) bool_1a0f2e\n\n                instance(x: 74, y: -23) slice_3f2e1a root.Std_k98ojb.List.Slice {}\n                current_5c7d8b -> slice_3f2e1a.list\n                _index_5c7d8b -> slice_3f2e1a.start\n                sublist_1a0f2e.length -> slice_3f2e1a.end\n                slice_3f2e1a.slice -> bool_1a0f2e\n            } -> map_7b9c8a.index_handler\n            map_7b9c8a.output_list -> contains_3f2e1a.list\n        } -> contains_3f2e1a.handler\n        list_5c7d8b -> contains_3f2e1a.list\n        sublist_1a0f2e -> contains_3f2e1a.item\n        contains_3f2e1a.is_contained -> output_e6d4ee\n    }\n\n    \n\n    instance(x: -290, y: 11) is_sublist_5c7d8b root.main.is_sublist {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -298, y: 30, name: \"sublist\") property(List) sublist_1f8a9e\n        in(x: -297, y: -140, name: \"list\") property(List) list_7c0b2d\n\n        out(x: 1035, y: -10, name: \"output\") property(Bool) output_3c4f1f\n\n        instance(x: 104, y: -6) contains_9e8a7 root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -230, y: 26, name: \"sublist\") property(List) sublist_2b0d3c\n            in(x: -232, y: -125, name: \"list\") property(List) list_7f1e9a\n\n            out(x: 699, y: 15, name: \"output\") property(Bool) output_8c6c4f\n\n            instance(x: 112, y: -111) map_f0d5b2 root.Std_k98ojb.Iteration.Map {}\n            func() {\n                in(x: -193, y: -37, name: \"x\") property(Number) x_1e9a7\n                in(x: -191, y: 32, name: \"index\") property(Number) index_2c0d3\n\n                out(x: 335, y: -20, name: \"\") property(List) _6b8f4\n\n                instance(x: 92, y: -14) slice_1e9a7 root.Std_k98ojb.List.Slice {}\n                func() {\n                    in(x: -193, y: -37, name: \"x\") property(Number) x_1e9a7\n                    in(x: -191, y: 32, name: \"index\") property(Number) index_2c0d3\n\n                    out(x: 335, y: -20, name: \"\") property(List) _6b8f4\n\n                    instance(x: 92, y: -14) slice_1e9a7 root.Std_k98ojb.List.Slice {}\n                    x_1e9a7 -> slice_1e9a7.list\n                    index_2c0d3 -> slice_1e9a7.start\n                    func() {\n                        in(x: -193, y: -37, name: \"x\") property(Number) x_1e9a7\n\n                        out(x: 335, y: -20, name: \"\") property(Number) _6b8f4\n\n                        instance(x: 92, y: -14) length_1e9a7 root.Std_k98ojb.List.Length {}\n                        x_1e9a7 -> length_1e9a7.list\n                        length_1e9a7.length -> slice_1e9a7.end\n                    } -> slice_1e9a7.execute\n                } -> map_f0d5b2.handler\n                list_7f1e9a -> map_f0d5b2.items\n            } -> contains_9e8a7.list\n            sublist_2b0d3c -> contains_9e8a7.item\n            contains_9e8a7.is_contained -> output_8c6c4f\n        } -> contains_9e8a7.handler\n        list_7c0b2d -> contains_9e8a7.list\n        sublist_1f8a9e -> contains_9e8a7.item\n        contains_9e8a7.is_contained -> output_3c4f1f\n    }\n\n    \n\n    instance(x: -290, y: 35) is_sublist_f5d6b root.main.is_sublist {}\n\n    \n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 15, name: \"sublist\") property(List) sublist_3f0d9e\n        in(x: -279, y: -186, name: \"list\") property(List) list_1b2a7c\n\n        out(x: 1005, y: -97, name: \"output\") property(Bool) output_8c6f4f\n\n        instance(x: 106, y: -185) contains_3d0e9 root.Std_k98ojb.List.Contains {}\n        list_1b2a7c -> contains_3d0e9.list\n        sublist_3f0d9e -> contains_3d0e9.item\n        contains_3d0e9.is_contained -> output_8c6f4f\n    }\n\n    \n\n    instance(x: -293, y: 59) is_sublist_f1a2b5 root.main.is_sublist {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 10, name: \"sublist\") property(List) sublist_3f0a9e\n        in(x: -285, y: -120, name: \"list\") property(List) list_7c1d6b\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        sublist_3f0a9e -> intersection_c7c7e6.left\n        list_7c1d6b -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        sublist_3f0a9e -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_8d5c4 root.main.is_sublist {}\n\n}"
      ],
      "27": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 2, name: \"list\") property(List) list_3a1f9e\n        in(x: -314, y: -224, name: \"execute\") trigger() execute_5c7d8b\n\n        out(x: 1066, y: -223, name: \"continue\") trigger() continue_e2c4ed\n        out(x: 1053, y: 28, name: \"output\") property(Number) output_1e0a1f\n\n        instance(x: 0, y: 0) for_9d5b8f root.Std_k98ojb.Std.For {}\n        instance(x: 321, y: -20) ifexpression_7c2b6e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_7c2b6e.else -> continue_e2c4ed\n        ifexpression_7c2b6e.value -> output_1e0a1f\n        ifexpression_7c2b6e.then -> setter_9d4f1c.execute\n        list_3a1f9e -> for_9d5b8f.items\n        for_9d5b8f.item -> ifexpression_7c2b6e.gen_2\n        for_9d5b8f.index -> ifexpression_7c2b6e.gen_0\n        getter_b280eb.value -> ifexpression_7c2b6e.gen_1\n        for_9d5b8f.onItem -> ifexpression_7c2b6e.execute\n        for_9d5b8f.done -> continue_e2c4ed\n        for_9d5b8f.item -> setter_9d4f1c.new_value\n        list_3a1f9e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        execute_5c7d8b -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> for_9d5b8f.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_6a2e3c root.main.find_missing {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -279, y: 1, name: \"list\") property(List) list_9e3f6a\n        in(x: -284, y: -225, name: \"execute\") trigger() execute_5b8d4c\n\n        out(x: 1020, y: -227, name: \"continue\") trigger() continue_7f1b2e\n        out(x: 1013, y: 148, name: \"output\") property(Number) output_6a7c7b\n\n        instance(x: 0, y: 0) for_5d8a4c root.Std_k98ojb.Std.For {}\n        instance(x: 339, y: -21) ifexpression_1f3e2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 332, y: 157, name: \"getter_7d5a8f\") getter_7d5a8f = previous\n        setter(x: 677, y: -313, name: \"setter_e9c3e2\") setter_e9c3e2 = previous\n        instance(x: 320, y: -20) getat_c4b1ea root.Std_k98ojb.List.GetAt {}\n        ifexpression_1f3e2c.else -> continue_7f1b2e\n        ifexpression_1f3e2c.value -> output_6a7c7b\n        ifexpression_1f3e2c.then -> setter_e9c3e2.execute\n        list_9e3f6a -> for_5d8a4c.items\n        for_5d8a4c.item -> ifexpression_1f3e2c.gen_2\n        for_5d8a4c.index -> ifexpression_1f3e2c.gen_0\n        getter_7d5a8f.value -> ifexpression_1f3e2c.gen_1\n        for_5d8a4c.onItem -> ifexpression_1f3e2c.execute\n        for_5d8a4c.done -> continue_7f1b2e\n        for_5d8a4c.item -> setter_e9c3e2.new_value\n        list_9e3f6a -> getat_c4b1ea.list\n        0 -> getat_c4b1ea.index\n        getat_c4b1ea.itemAtIndex -> setter_e9c3e2.new_value\n        execute_5b8d4c -> setter_e9c3e2.execute\n        setter_e9c3e2.continue -> for_5d8a4c.reset\n    }\n\n    \n\n    instance(x: -13, y: 126) find_missing_1f6f0f root.main.find_missing {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 1, name: \"list\") property(List) list_2d0b9e\n        in(x: -302, y: -230, name: \"execute\") trigger() execute_ea7f3c\n\n        out(x: 1056, y: -233, name: \"continue\") trigger() continue_8a1b4f\n        out(x: 1045, y: 150, name: \"output\") property(Number) output_9d2e0f\n\n        instance(x: 451, y: 57) ifexpression_6c3c7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 333, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_6c3c7c.else -> continue_8a1b4f\n        ifexpression_6c3c7c.value -> output_9d2e0f\n        ifexpression_6c3c7c.then -> setter_9d4f1c.execute\n        list_2d0b9e -> for_d26972.items\n        for_d26972.item -> ifexpression_6c3c7c.gen_2\n        for_d26972.index -> ifexpression_6c3c7c.gen_0\n        getter_b280eb.value -> ifexpression_6c3c7c.gen_1\n        for_d26972.onItem -> ifexpression_6c3c7c.execute\n        for_d26972.done -> continue_8a1b4f\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_2d0b9e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_ea7f3c -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_2b8a6c root.main.find_missing {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 0, name: \"list\") property(List) list_1a3f8e\n        in(x: -311, y: -224, name: \"execute\") trigger() execute_9b2c5d\n\n        out(x: 1016, y: -227, name: \"continue\") trigger() continue_4b0f6e\n        out(x: 1007, y: 74, name: \"output\") property(Number) output_1a3f8e\n\n        instance(x: 0, y: 0, name: \"for_5c2d9d\") for_5c2d9d root.Std_k98ojb.Std.For {}\n        instance(x: 339, y: -12, name: \"ifexpression_1a3f8e\") ifexpression_1a3f8e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 328, y: 72, name: \"getter_5c2d9d\") getter_5c2d9d = previous\n        setter(x: 679, y: -311, name: \"setter_5c2d9d\") setter_5c2d9d = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_5c2d9d\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_1a3f8e.else -> continue_4b0f6e\n        ifexpression_1a3f8e.value -> output_1a3f8e\n        ifexpression_1a3f8e.then -> setter_5c2d9d.execute\n        list_1a3f8e -> for_d26972.items\n        for_d26972.item -> ifexpression_1a3f8e.gen_2\n        for_d26972.index -> ifexpression_1a3f8e.gen_0\n        getter_5c2d9d.value -> ifexpression_1a3f8e.gen_1\n        for_d26972.onItem -> ifexpression_1a3f8e.execute\n        for_d26972.done -> continue_4b0f6e\n        for_d26972.item -> setter_5c2d9d.new_value\n        list_1a3f8e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_9b2c5d -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_5c2d9d.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_f7f1b8 root.main.find_missing {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 2, name: \"list\") property(List) list_9f6b1e\n        in(x: -272, y: -228, name: \"execute\") trigger() execute_7c8a0d\n\n        out(x: 46, y: 158, name: \"missing\") property(Number) missing_a5f3aa\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_6b1e2d\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = previous\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = missing\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        ifexpression_e38995.else -> continue_6b1e2d\n        ifexpression_e38995.value -> missing_a5f3aa\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        list_9f6b1e -> for_d26972.items\n        for_d26972.item -> ifexpression_e38995.gen_2\n        for_d26972.index -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> ifexpression_e38995.gen_1\n        for_d26972.onItem -> ifexpression_e38995.execute\n        for_d26972.done -> continue_6b1e2d\n        for_d26972.item -> setter_38e107.new_value\n        list_9f6b1e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_7c8a0d -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_1cedb2.continue -> continue_6b1e2d\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_f3f9c5 root.main.find_missing {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -305, y: 1, name: \"list\") property(List) list_3e9f8a\n        in(x: -316, y: -239, name: \"execute\") trigger() execute_e5b7c0\n\n        out(x: 1036, y: -245, name: \"continue\") trigger() continue_4d1b2e\n        out(x: 1028, y: 15, name: \"output\") property(Number) output_3f9a4e\n\n        instance(x: 0, y: 0, name: \"for_5c6f9d\") for_5c6f9d root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0, name: \"ifexpression_1a7f2e\") ifexpression_1a7f2e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -186, y: 160, name: \"getter_9c4d3d\") getter_9c4d3d = previous\n        setter(x: 678, y: -313, name: \"setter_8b5f6e\") setter_8b5f6e = previous\n        instance(x: -0, y: -121, name: \"setter_8b5f6e\") setter_9a4c7d = previous\n        instance(x: -275, y: -35, name: \"getat_3e1d2f\") getat_3e1d2f root.Std_k98ojb.List.GetAt {}\n        ifexpression_1a7f2e.else -> continue_4d1b2e\n        ifexpression_1a7f2e.value -> output_3f9a4e\n        ifexpression_1a7f2e.then -> setter_8b5f6e.execute\n        list_3e9f8a -> for_5c6f9d.items\n        for_5c6f9d.item -> ifexpression_1a7f2e.gen_2\n        for_5c6f9d.index -> ifexpression_1a7f2e.gen_0\n        getter_9c4d3d.value -> ifexpression_1a7f2e.gen_1\n        for_5c6f9d.onItem -> ifexpression_1a7f2e.execute\n        for_5c6f9d.done -> continue_4d1b2e\n        for_5c6f9d.item -> setter_8b5f6e.new_value\n        list_3e9f8a -> getat_3e1d2f.list\n        0 -> getat_3e1d2f.index\n        getat_3e1d2f.itemAtIndex -> setter_9a4c7d.new_value\n        execute_e5b7c0 -> setter_9a4c7d.execute\n        setter_9a4c7d.continue -> for_5c6f9d.reset\n        setter_8b5f6e.continue -> for_5c6f9d.next\n    }\n\n    \n\n    instance(x: -10, y: 159) find_missing_1f3b2e root.main.find_missing {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 2, name: \"list\") property(List) list_9e8f6a\n        in(x: -311, y: -221, name: \"execute\") trigger() execute_eb1d7c\n\n        out(x: 1063, y: -225, name: \"continue\") trigger() continue_4f0e2e\n        out(x: 1056, y: 29, name: \"output\") property(Number) output_8a5e7e\n\n        instance(x: 0, y: 0) for_9b3c1d root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) ifexpression_4f6c2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index != current\"\n        }\n        getter(x: 0, y: 0, name: \"getter_9d5e3a\") getter_9d5e3a = index\n        setter(x: 0, y: 0, name: \"setter_7b8c6f\") setter_7b8c6f = index\n        list_9e8f6a -> for_9b3c1d.items\n        execute_eb1d7c -> setter_7b8c6f.execute\n        0 -> setter_7b8c6f.new_value\n        getter_9d5e3a.value -> ifexpression_4f6c2f.gen_0\n        for_9b3c1d.index -> ifexpression_4f6c2f.gen_0\n        for_9b3c1d.item -> ifexpression_4f6c2f.gen_1\n        ifexpression_4f6c2f.then -> setter_7b8c6f.execute\n        for_9b3c1d.onItem -> ifexpression_4f6c2f.execute\n        for_9b3c1d.done -> continue_4f0e2e\n        setter_7b8c6f.continue -> for_9b3c1d.reset\n        setter_7b8c6f.continue -> for_9b3c1d.next\n        ifexpression_4f6c2f.else -> continue_4f0e2e\n        getter_9d5e3a.value -> output_8a5e7e\n    }\n\n    \n\n    instance(x: 11, y: -13) find_missing_8b7c6f root.main.find_missing {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 1, name: \"list\") property(List) list_9e3b8f\n        in(x: -299, y: -223, name: \"execute\") trigger() execute_7a2c5d\n\n        out(x: 1000, y: -224, name: \"continue\") trigger() continue_1c4b7f\n        out(x: 1003, y: 50, name: \"output\") property(Number) output_9e8a6d\n\n        instance(x: 0, y: 0) for_2b5b6c root.Std_k98ojb.Std.For {}\n        instance(x: 336, y: -20) ifexpression_1f3b7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 0, y: 0, name: \"getter_9cceb3\") getter_9cceb3 = previous\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_1f3b7f.else -> continue_1c4b7f\n        ifexpression_1f3b7f.value -> output_9e8a6d\n        ifexpression_1f3b7f.then -> setter_9d4f1c.execute\n        list_9e3b8f -> for_2b5b6c.items\n        for_2b5b6c.item -> ifexpression_1f3b7f.gen_2\n        for_2b5b6c.index -> ifexpression_1f3b7f.gen_0\n        getter_9cceb3.value -> ifexpression_1f3b7f.gen_1\n        for_2b5b6c.onItem -> ifexpression_1f3b7f.execute\n        for_2b5b6c.done -> continue_1c4b7f\n        for_2b5b6c.item -> setter_9d4f1c.new_value\n        list_9e3b8f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        execute_7a2c5d -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> for_2b5b6c.reset\n    }\n\n    \n\n    instance(x: -50, y: 128) find_missing_3e0d4c root.main.find_missing {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 2, name: \"list\") property(List) list_1a8b5e\n        in(x: -301, y: -218, name: \"execute\") trigger() execute_9c6d7f\n\n        out(x: 593, y: -217, name: \"continue\") trigger() continue_3f2f0d\n        out(x: 594, y: 148, name: \"output\") property(Number) output_5a8e4b\n\n        instance(x: 0, y: 0) for_1c9f7c root.Std_k98ojb.Std.For {}\n        instance(x: -144, y: 112, name: \"ifexpression_3d6d9f\") ifexpression_3d6d9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 89, y: 29, name: \"getter_7e2a4c\") getter_7e2a4c = previous\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) getat_8b5c3e root.Std_k98ojb.List.GetAt {}\n        ifexpression_3d6d9f.else -> continue_3f2f0d\n        ifexpression_3d6d9f.then -> setter_9d4f1c.execute\n        list_1a8b5e -> for_1c9f7c.items\n        for_1c9f7c.item -> ifexpression_3d6d9f.gen_2\n        for_1c9f7c.index -> ifexpression_3d6d9f.gen_0\n        getter_7e2a4c.value -> ifexpression_3d6d9f.gen_1\n        for_1c9f7c.onItem -> ifexpression_3d6d9f.execute\n        for_1c9f7c.done -> continue_3f2f0d\n        for_1c9f7c.item -> setter_9d4f1c.new_value\n        list_1a8b5e -> getat_8b5c3e.list\n        0 -> getat_8b5c3e.index\n        getat_8b5c3e.itemAtIndex -> setter_9d4f1c.new_value\n        execute_9c6d7f -> setter_9d4f1c.execute\n        ifexpression_3d6d9f.value -> output_5a8e4b\n        setter_9d4f1c.continue -> for_1c9f7c.next\n        setter_9d4f1c.continue -> for_1c9f7c.reset\n    }\n\n    \n\n    instance(x: -174, y: -63) find_missing_2b8a0e root.main.find_missing {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_2f1b8e\n        in(x: -303, y: -225, name: \"execute\") trigger() execute_e5a3d7\n\n        out(x: 593, y: -226, name: \"continue\") trigger() continue_6c0b9e\n        out(x: 594, y: 2, name: \"output\") property(Number) output_8f4c1f\n\n        instance(x: 0, y: 0) for_7d5a2f root.Std_k98ojb.Std.For {}\n        instance(x: 310, y: -75) ifexpression_e6e9ee root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == item\"\n        }\n        setter(x: -187, y: -246, name: \"setter_7a5f0c\") setter_7a5f0c = index\n        getter(x: 502, y: 166, name: \"getter_c8e9d2\") getter_c8e9d2 = index\n        instance(x: 780, y: -125) if_1b4f6f root.Std_k98ojb.Std.If {}\n        list_2f1b8e -> for_7d5a2f.items\n        execute_e5a3d7 -> setter_7a5f0c.execute\n        0 -> setter_7a5f0c.new_value\n        getter_c8e9d2.value -> output_8f4c1f\n        for_7d5a2f.done -> continue_6c0b9e\n        setter_7a5f0c.continue -> for_7d5a2f.reset\n        for_7d5a2f.onItem -> ifexpression_e6e9ee.execute\n        for_7d5a2f.index -> ifexpression_e6e9ee.gen_0\n        for_7d5a2f.item -> ifexpression_e6e9ee.gen_1\n        ifexpression_e6e9ee.then -> for_7d5a2f.next\n        ifexpression_e6e9ee.else -> if_1b4f6f.execute\n        if_1b4f6f.predicate = true\n        if_1b4f6f.then -> continue_6c0b9e\n        for_7d5a2f.index -> setter_7a5f0c.new_value\n    }\n\n    \n\n    instance(x: -203, y: -53) find_missing_3a8c9e root.main.find_missing {}\n}"
      ],
      "31": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5c3d9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7e8a6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9c4c7c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5c3d9f.input\n        \" \" -> replace_5c3d9f.search\n        \":\" -> replace_5c3d9f.replace\n        replace_5c3d9f.output -> replace_7e8a6f.input\n        \",\" -> replace_7e8a6f.search\n        \":\" -> replace_7e8a6f.replace\n        replace_7e8a6f.output -> replace_9c4c7c.input\n        \".\" -> replace_9c4c7c.search\n        \":\" -> replace_9c4c7c.replace\n        replace_9c4c7c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_d3e8d1 root.main.replace_spaces_commas_dots {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -156, y: 0, name: \"input\") property(String) input_1f2a9e\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7b8d3c\n\n        instance(x: 94, y: 0) replace_4a6b1c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: -48) replace_5f9e7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 338, y: -96) replace_3d8a2f root.Std_k98ojb.Strings.Replace {}\n        input_1f2a9e -> replace_4a6b1c.input\n        \" \" -> replace_4a6b1c.search\n        \":\" -> replace_4a6b1c.replace\n        replace_4a6b1c.output -> replace_5f9e7f.input\n        \",\" -> replace_5f9e7f.search\n        \":\" -> replace_5f9e7f.replace\n        replace_5f9e7f.output -> replace_3d8a2f.input\n        \".\" -> replace_3d8a2f.search\n        \":\" -> replace_3d8a2f.replace\n        replace_3d8a2f.output -> output_7b8d3c\n    }\n\n    \n\n    instance(x: -137, y: 35) replace_spaces_commas_dots_9e1b4f root.main.replace_spaces_commas_dots {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -227, y: 44, name: \"string\") property(String) string_1d0f8e\n\n        out(x: 744, y: 146, name: \"output\") property(String) output_9a7c5b\n\n        instance(x: 52, y: 47, name: \"replace_spaces\") replace_node root.Std_k98ojb.Strings.Replace {}\n        instance(x: 69, y: 185, name: \"replace_commas\") replace_node_1 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 279, y: 73) replace_dots_node root.Std_k98ojb.Strings.Replace {}\n        string_1d0f8e -> replace_spaces.input\n        \" \" -> replace_spaces.search\n        \":\" -> replace_spaces.replace\n        replace_spaces.output -> replace_commas.input\n        \",\" -> replace_commas.search\n        \":\" -> replace_commas.replace\n        replace_commas.output -> replace_dots_node.input\n        \".\" -> replace_dots_node.search\n        \":\" -> replace_dots_node.replace\n        replace_dots_node.output -> output_9a7c5b\n    }\n\n    \n\n    instance(x: -280, y: 136) replace_spaces_commas_dots_2d0f6e root.main.replace_spaces_commas_dots {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -122, y: 2, name: \"input\") property(String) input_ai\n\n        out(x: 505, y: -68, name: \"output\") property(String) output_ai\n\n        instance(x: 94, y: -105) replace_3c0b1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: -48) replace_2a7d5e root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4c8e7d root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_spaces_commas_dots.input\n        \" \" -> replace_3c0b1f.search\n        \":\" -> replace_3c0b1f.replace\n        \",\" -> replace_2a7d5e.search\n        \":\" -> replace_2a7d5e.replace\n        \".\" -> replace_4c8e7d.search\n        \":\" -> replace_4c8e7d.replace\n        replace_3c0b1f.output -> replace_2a7d5e.input\n        replace_2a7d5e.output -> replace_4c8e7d.input\n        replace_4c8e7d.output -> output_ai\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_1b3f0f root.main.replace_spaces_commas_dots {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3c6d4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5a7e9d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_8e9f1f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3c6d4f.input\n        \" \" -> replace_3c6d4f.search\n        \":\" -> replace_3c6d4f.replace\n        replace_3c6d4f.output -> replace_5a7e9d.input\n        \",\" -> replace_5a7e9d.search\n        \":\" -> replace_5a7e9d.replace\n        replace_5a7e9d.output -> replace_8e9f1f.input\n        \".\" -> replace_8e9f1f.search\n        \":\" -> replace_8e9f1f.replace\n        replace_8e9f1f.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceAll_e54b7f root.main.replace {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -227, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 94, y: -105) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        list_instance(x: 221, y: -48, name: \"list\") list_2 = [space, comma, dot]\n        instance(x: -11, y: 9) sub_4aeea6 root.Std_k98ojb.Math.Sub {}\n        instance(x: 92, y: -22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        instance(x: 221, y: -48) replace_d42dce root.Std_k98ojb.Strings.Replace {}\n        input_0 -> map_f2330d.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(String) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(String) _7dd980\n\n            instance(x: 92, y: -22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n            sub_4aeea6.result -> pow_584bfd.x\n            x_8ee839 -> replace_d42dce.input\n            list_2.last -> replace_d42dce.search\n            \":\" -> replace_d42dce.replace\n            replace_d42dce.output -> _7dd980\n        } -> map_f2330d.handler\n        map_f2330d.output_list -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_aad0c2 root.main.replace_spaces_commas_dots {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3a9c5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7d8e4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c6b1ba root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3a9c5f.input\n        \" \" -> replace_3a9c5f.search\n        \":\" -> replace_3a9c5f.replace\n        replace_3a9c5f.output -> replace_7d8e4f.input\n        \",\" -> replace_7d8e4f.search\n        \":\" -> replace_7d8e4f.replace\n        replace_7d8e4f.output -> replace_c6b1ba.input\n        \".\" -> replace_c6b1ba.search\n        \":\" -> replace_c6b1ba.replace\n        replace_c6b1ba.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_7c8f9e root.main.replace_spaces_commas_dots {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -156, y: 0, name: \"input\") property(String) input_1d8f9e\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7c3b4a\n\n        instance(x: 0, y: 0) replace_spaces root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_commas root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_dots root.Std_k98ojb.Strings.Replace {}\n        input_1d8f9e -> replace_spaces.input\n        \" \" -> replace_spaces.search\n        \":\" -> replace_spaces.replace\n        replace_spaces.output -> replace_commas.input\n        \",\" -> replace_commas.search\n        \":\" -> replace_commas.replace\n        replace_commas.output -> replace_dots.input\n        \".\" -> replace_dots.search\n        \":\" -> replace_dots.replace\n        replace_dots.output -> output_7c3b4a\n   }\n   \n\n    instance(x: -93, y: 43, name: \"replace_spaces_commas_dots\") replace_spaces_commas_dots_9f8e1d root.main.replace_spaces_commas_dots {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5a8c4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7d9e3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c6f1ed root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5a8c4f.input\n        \" \" -> replace_5a8c4f.search\n        \":\" -> replace_5a8c4f.replace\n        replace_5a8c4f.output -> replace_7d9e3c.input\n        \",\" -> replace_7d9e3c.search\n        \":\" -> replace_7d9e3c.replace\n        replace_7d9e3c.output -> replace_c6f1ed.input\n        \".\" -> replace_c6f1ed.search\n        \":\" -> replace_c6f1ed.replace\n        replace_c6f1ed.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceAll_e54b7f root.main.replace {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -199, y: 0, name: \"input\") property(String) input_9a1f6e\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_8b7d3c\n\n        instance(x: 0, y: 0) replace_5a1c1c root.Std_k98ojb.Strings.Replace {}\n        input_9a1f6e -> replace_5a1c1c.input\n        \" \" -> replace_5a1c1c.search\n        \":\" -> replace_5a1c1c.replace\n        instance(x: 0, y: -40) replace_2d7b8c root.Std_k98ojb.Strings.Replace {}\n        replace_5a1c1c.output -> replace_2d7b8c.input\n        \",\" -> replace_2d7b8c.search\n        \":\" -> replace_2d7b8c.replace\n        instance(x: 0, y: -80) replace_4f3e9f root.Std_k98ojb.Strings.Replace {}\n        replace_2d7b8c.output -> replace_4f3e9f.input\n        \".\" -> replace_4f3e9f.search\n        \":\" -> replace_4f3e9f.replace\n        replace_4f3e9f.output -> output_8b7d3c\n    }\n\n    \n\n    instance(x: -176, y: 32) replace_b0a1e2 root.main.replace {}\n}"
      ],
      "33": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -290, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 538, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 3) characters_7e9f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 264, y: 1) all_equal_4a6d5f root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n                instance(x: 226, y: 56) equal_2e4f8c root.Std_k98ojb.Logic.Equal {}\n                elem_9f6850 -> equal_2e4f8c.left\n                characters_7e9f8c.characters[_index_769593] -> equal_2e4f8c.right\n                equal_2e4f8c.result -> output_efbc78\n            }\n        }\n        instance(x: 528, y: -1) length_5b3a0d root.Std_k98ojb.List.Length {}\n        string_0 -> characters_7e9f8c.input\n        all_equal_4a6d5f.output_list -> length_5b3a0d.list\n        characters_7e9f8c.characters -> all_equal_4a6d5f.items\n        length_5b3a0d.length == string_0.len() -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_2e1d7f root.main.check_same {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -287, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 540, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_5e9d4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) all_equal_f7c8a6 root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -76, y: 46, name: \"current\") property(String) current_1\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_2\n\n                out(x: 382, y: 19, name: \"out\") property(Bool) out_3\n\n                instance(x: 106, y: 17) equal_7e1b9c root.Std_k98ojb.Logic.Equal {}\n                current_1 -> equal_7e1b9c.left\n                characters_5e9d4f.characters[_index_2] -> equal_7e1b9c.right\n                equal_7e1b9c.result -> out_3\n            }\n        }\n        string_1 -> characters_5e9d4f.input\n        characters_5e9d4f.characters -> all_equal_f7c8a6.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_3\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4\n\n            instance(x: 74, y: -23) not_1a7b9c root.Std_k98ojb.Logic.Not {}\n            current_3 -> not_1a7b9c.input\n            not_1a7b9c.result -> bool_4\n        } -> all_equal_f7c8a6.handler\n        all_equal_f7c8a6.output_list.Length -> result_1\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_e54b7f root.main.check_same {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -286, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 540, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_3c8a4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) all_equal_f7e6d9 root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -30, y: -25, name: \"current\") property(String) current_1\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_2\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_3\n\n                instance(x: 226, y: 56) equal_1a8c9f root.Std_k98ojb.Logic.Equal {}\n                current_1 -> equal_1a8c9f.left\n                characters_3c8a4f.characters[_index_2] -> equal_1a8c9f.right\n                equal_1a8c9f.result -> output_3\n            }\n        }\n        string_1 -> characters_3c8a4f.input\n        characters_3c8a4f.characters -> all_equal_f7e6d9.items\n        func() {\n            out(x: 0, y: 0, name: \"output\") property(Bool) output_2\n\n            instance(x: -1, y: -1) length_5b2f3c root.Std_k98ojb.List.Length {}\n            instance(x: 88, y: -2) equal_9a8e7d root.Std_k98ojb.Iteration.Map {\n                handler: func() {\n                    in(x: -113, y: 34, name: \"elem\") property(Bool) elem_3\n\n                    out(x: 515, y: 44, name: \"bool\") property(Bool) bool_4\n\n                    instance(x: 89, y: 29) equal_1a8c9f root.Std_k98ojb.Logic.Equal {}\n                    length_5b2f3c.length -> equal_1a8c9f.left\n                    elem_3 -> equal_1a8c9f.right\n                    equal_1a8c9f.result -> bool_4\n                }\n            }\n            all_equal_f7e6d9.output_list -> length_5b2f3c.list\n            func() {\n                out(x: 0, y: 0, name: \"output\") property(Bool) output_1\n\n                instance(x: -1, y: -1) count_4a8e7d root.Std_k98ojb.Count {}\n                true -> count_4a8e7d.new_value\n                count_4a8e7d.count -> output_1\n            } -> equal_9a8e7d.handler\n            length_5b2f3c.length -> equal_9a8e7d.items\n            equal_9a8e7d.output_list -> all_equal_f7e6d9.items\n            equal_9a8e7d.output_list -> count_4a8e7d.reset\n            equal_9a8e7d.output_list -> count_4a8e7d.count\n            length_5b2f3c.length -> output_2\n        } -> all_equal_f7e6d9.handler\n        all_equal_f7e6d9.result -> result_1\n    }\n\n    \n\n    instance(x: -63, y: 528) check_same_8a0d7f root.main.check_same {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -284, y: 0, name: \"string\") property(String) string_3f9a6e\n\n        out(x: 557, y: -1, name: \"output\") property(Bool) output_7c8d4b\n\n        instance(x: 0, y: 0) intersection_2e1b1f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 265, y: 0) length_f3a6f9 root.Std_k98ojb.List.Length {}\n        instance(x: -1, y: 0) characters_7c5d8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) equal_4e9d2f root.Std_k98ojb.Logic.Equal {}\n        string_3f9a6e -> characters_7c5d8c.input\n        characters_7c5d8c.characters -> intersection_2e1b1f.left\n        length_f3a8f9.length -> equal_4e9d2f.right\n        1 -> equal_4e9d2f.left\n        intersection_2e1b1f.intersection -> length_f3a8f9.list\n        characters_7c5d8c.characters -> intersection_2e1b1f.right\n        equal_4e9d2f.result -> output_7c8d4b\n    }\n\n    \n\n    instance(x: -57, y: 10) check_same_3a0d6f root.main.check_same {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -280, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 555, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_c7f8a6 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 270, y: -3) filter_5c9d4e root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -76, y: 45, name: \"current\") property(String) current_1\n\n            out(x: 383, y: 18, name: \"output\") property(Bool) output_2\n\n            instance(x: 106, y: 17) equal_9a3b7c root.Std_k98ojb.Logic.Equal {}\n            characters_c7f8a6.characters -> equal_9a3b7c.left\n            current_1 -> equal_9a3b7c.right\n            equal_9a3b7c.result -> output_2\n        } -> filter_5c9d4e.handler\n        characters_c7f8a6.output -> filter_5c9d4e.items\n        input_1 -> characters_c7f8a6.input\n        func() {\n            in(x: -76, y: 45, name: \"current\") property(String) current_2\n\n            out(x: 383, y: 18, name: \"output\") property(Bool) output_3\n\n            instance(x: 106, y: 17) equal_9a3b7c root.Std_k98ojb.Logic.Equal {}\n            characters_c7f8a6.characters -> equal_9a3b7c.left\n            current_2 -> equal_9a3b7c.right\n            equal_9a3b7c.result -> output_3\n        } -> filter_5c9d4e.predicate\n        length_0.length -> list_contains_1.contains\n        characters_c7f8a6.characters -> length_0.list\n        filter_5c9d4e.output_list -> list_contains_1.list\n        true -> list_contains_1.item\n        list_contains_1.is_contained -> output_1\n    }\n\n    \n\n    instance(x: -62, y: 52) is_same_2f7a8b root.main.is_same {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -286, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_3e9c4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) uniquelist_f8a7d6 root.Std_k98ojb.List.UniqueList {}\n        instance(x: 480, y: -2) length_5b1b9c root.Std_k98ojb.List.Length {}\n        characters_3e9c4f.characters -> uniquelist_f8a7d6.list\n        uniquelist_f8a7d6.unique_list -> length_5b1b9c.list\n        1 -> greaterthanorequal_2c0a4c.right\n        length_5b1b9c.length -> greaterthanorequal_2c0a4c.left\n        string_0 -> characters_3e9c4f.input\n        greaterthanorequal_2c0a4c.result -> result_0\n        instance(x: 696, y: -2) greaterthanorequal_2c0a4c root.Std_k98ojb.Math.GreaterThanOrEqual {}\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_f54b7f root.main.check_same {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -290, y: 0, name: \"string\") property(String) string_3a8d9e\n\n        out(x: 531, y: -1, name: \"output\") property(Bool) output_bf7b5c\n\n        instance(x: 0, y: 0) all_same_4a6d9c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_1e3f2c\n            in(x: -112, y: -24, name: \"_index\") property(Number) _index_5d9a7b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_8f6a0c\n\n            instance(x: 89, y: 29) equal_1e3c9c root.Std_k98ojb.Logic.Equal {}\n            elem_1e3f2c -> equal_1e3c9c.left\n            string_3a8d9e -> equal_1e3c9c.right\n            equal_1e3c9c.result -> bool_8f6a0c\n        } -> all_same_4a6d9c.handler\n        instance(x: 0, y: -26) characters_7b2c5c root.Std_k98ojb.Strings.Characters {}\n        string_3a8d9e -> characters_7b2c5c.input\n        characters_7b2c5c.characters -> all_same_4a6d9c.items\n        instance(x: 0, y: -53) length_1f7f5c root.Std_k98ojb.List.Length {}\n        characters_7b2c5c.characters -> length_1f7f5c.list\n        length_1f7f5c.length -> all_same_4a6d9c.index\n        instance(x: 0, y: -80) equal_3e8c1c root.Std_k98ojb.Logic.Equal {}\n        length_1f7f5c.length -> equal_3e8c1c.left\n        all_same_4a6d9c.output_list.length -> equal_3e8c1c.right\n        equal_3e8c1c.result -> output_bf7b5c\n    }\n\n    \n\n    instance(x: -55, y: 529) check_same_2c856f root.main.check_same {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -287, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 533, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_3a9c4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) all_equal_7d8e5c root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -76, y: 46, name: \"element\") property(String) element_1\n\n                out(x: 382, y: 19, name: \"out\") property(Bool) out_2\n\n                instance(x: 106, y: 17) equal_9b8c4f root.Std_k98ojb.Logic.Equal {}\n                characters_3a9c4f.characters -> equal_9b8c4f.left\n                element_1 -> equal_9b8c4f.right\n                equal_9b8c4f.result -> out_2\n            }\n        }\n        string_1 -> characters_3a9c4f.input\n        characters_3a9c4f.characters -> all_equal_7d8e5c.items\n        instance(x: 530, y: -2) length_0b6f7f root.Std_k98ojb.List.Length {}\n        instance(x: 746, y: -1) equal_0a2f7f root.Std_k98ojb.Logic.Equal {}\n        all_equal_7d8e5c.output_list -> length_0b6f7f.list\n        length_0b6f7f.length -> equal_0a2f7f.left\n        1 -> equal_0a2f7f.right\n        equal_0a2f7f.result -> result_1\n    }\n\n    \n\n    instance(x: -57, y: 55) check_same_f9e3d8 root.main.check_same {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -286, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 531, y: -1, name: \"output\") property(Bool) output_0\n\n        instance(x: 0, y: 1) characters_7e6f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -3, y: -2) length_8a4f9f root.Std_k98ojb.List.Length {}\n        characters_7e6f9c.characters -> contains_d42dce.list\n        0 -> contains_d42dce.item\n        input_0 -> characters_7e6f9c.input\n        characters_7e6f9c.characters -> length_8a4f9f.list\n        length_8a4f9f.length -> contains_d42dce.count\n        contains_d42dce.result -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_7e5b1c root.main.is_same {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -283, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 529, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_3a9c7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) all_equal_f6e8d4 root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -114, y: 34, name: \"current\") property(String) current_1\n                in(x: -113, y: -26, name: \"_index\") property(Number) _index_2\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3\n\n                instance(x: 89, y: 29) equal_1d9c7f root.Std_k98ojb.Logic.Equal {}\n                current_1 -> equal_1d9c7f.left\n                characters_3a9c7f.characters[_index_2] -> equal_1d9c7f.right\n                equal_1d9c7f.result -> bool_3\n            }\n        }\n        instance(x: 0, y: -1) length_5e8b4a root.Std_k98ojb.List.Length {}\n        characters_3a9c7f.characters -> all_equal_f6e8d4.items\n        length_5e8b4a.length -> all_equal_f6e8d4.output_list.length\n        input_0 -> characters_3a9c7f.input\n        length_5e8b4a.list -> characters_3a9c7f.characters\n        all_equal_f6e8d4.output_list.isEmpty -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_e54b7f root.main.is_same {}\n\n\n}"
      ],
      "37": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -77) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 772, y: -77) count_digits_59bc6e root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 0, y: -2) CountDigits_5e9f8a root.main.CountDigits {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 0, y: -2) CountDigits_1a6f8e root.main.CountDigits {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 0, y: 0) length_6d05b0 root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_6d05b0.list\n        length_6d05b0.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: -1) filter_6d05b0 root.Std_k98ojb.Iteration.Filter {\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n                isnumeric_1088d5.input -> elem_9f6850\n                isnumeric_1088d5.isnumeric -> bool_af09a7\n            }\n        }\n        instance(x: 0, y: -1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_6d05b0.items\n        filter_6d05b0.output_list -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -100) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 0, y: -1) CountDigits_2c856f root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 118, y: -26) count_digits_9dcc3d root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 0, y: -2) CountDigits_5a6f9e root.main.CountDigits {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1056, y: 75) filter_8f2c5a root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n                isnumeric_1088d5.input -> elem_9f6850\n                isnumeric_1088d5.is_numeric -> bool_af09a7\n            }\n        }\n        instance(x: 1341, y: 75) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_8f2c5a.items\n        filter_8f2c5a.output_list -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: -1) filter_2d6da6 root.Std_k98ojb.Query.Filter {\n            where: \"it.isNumeric\"\n        }\n        instance(x: 0, y: 0) length_cde0dc root.Std_k98ojb.List.Length {}\n\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_2d6da6.list\n        filter_2d6da6.result -> length_cde0dc.items\n        length_cde0dc.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) CountDigits_59bc6e root.main.CountDigits {}\n\n}"
      ],
      "38": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9c2e4d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c8f5e.gen_0\n        pow_4c8f5e.result -> sum_365f7b\n        4 -> pow_4c8f5e.y\n        expression_2d6da6.result -> pow_4c8f5e.x\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -285, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4c0e8d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c0e8d.second\n        data_cde0dc -> pow_4c0e8d.first\n        expression_2d6da6.result -> pow_4c0e8d.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_4c0e8d.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = [sum]\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(n * (2*n-1)*(2*n+1))/3\"\n        }\n        instance(x: 62, y: -226, name: \"fourth power\") pow_5f8a4c root.Std_k98ojb.Math.Pow {}\n        data_3c713b -> output_ebef81\n        n_c88d35 -> expression_634b7e.gen_0\n        expression_634b7e.result -> data_3c713b.sum\n        expression_634b7e.result -> pow_5f8a4c.first\n        4 -> pow_5f8a4c.second\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        data_cde0dc -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.output -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 55, name: \"n\") property(Number) n_c88d35\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        data_cde0dc -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.input\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.output -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -344, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        data_cde0dc -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.output -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -285, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4d0c5e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4d0c5e.y\n        data_cde0dc -> pow_4d0c5e.x\n        expression_2d6da6.result -> pow_4d0c5e.z\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_4d0c5e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = [sum]\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(n * (2*n-1)*(2*n+1))/3\"\n        }\n        instance(x: 62, y: -226, name: \"fourth power\") pow_5f8c0a root.Std_k98ojb.Math.Pow {}\n        data_3c713b -> output_ebef81\n        n_c88d35 -> expression_634b7e.gen_0\n        expression_634b7e.result -> data_3c713b.sum\n        expression_634b7e.result -> pow_5f8c0a.first\n        4 -> pow_5f8c0a.second\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 55, name: \"n\") property(Number) n_c88d35\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9a3e8c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> pow_9a3e8c.y\n        n_c88d35 -> pow_9a3e8c.x\n        expression_2d6da6.result -> mul_f892a4.first\n        pow_9a3e8c.result -> mul_f892a4.second\n        mul_f892a4.result -> sum_365f7b\n        n_c88d35 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 55, name: \"n\") property(Number) n_c88d35\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        data_cde0dc -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.input\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.output -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
      ],
      "46": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_b2508f\n\n        instance(x: -105, y: -110) mul_2d7c1e root.Std_k98ojb.Math.Mul {}\n        instance(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = surface_area\n        instance(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = surface_area\n        a_9f7759 -> mul_2d7c1e.first\n        6 -> mul_2d7c1e.second\n        getter_9cceb3.value -> surface_area_b2508f\n        mul_2d7c1e.result -> setter_1cedb2.new_value\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_cube_d6e930 root.main.surface_area_cube {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -100, y: 0, name: \"size\") property(Number) size_3a3116\n\n        out(x: 571, y: 7, name: \"surface area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        expression_instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        div_instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        size_3a3116 -> mul_f892a4.first\n        size_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -280, y: -210, name: \"execute\") trigger() execute_9e3a8f\n        in(x: -267, y: -86, name: \"size\") property(Number) size_a6cea7\n\n        out(x: 546, y: 63, name: \"continue\") trigger() continue_b1d7f8\n        out(x: 544, y: -13, name: \"output\") property(Number) output_0b075e\n\n        instance(x: 16, y: -211) mul_2c9a3c root.Std_k98ojb.Math.Mul {}\n        instance(x: 15, y: -86) mul_1d8f7f root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -13) mul_6e87f2 root.Std_k98ojb.Math.Mul {}\n        size_a6cea7 -> mul_2c9a3c.first\n        size_a6cea7 -> mul_1d8f7f.first\n        6 -> mul_2c9a3c.second\n        6 -> mul_1d8f7f.second\n        mul_2c9a3c.result -> mul_6e87f2.first\n        mul_1d8f7f.result -> mul_6e87f2.second\n        mul_6e87f2.result -> output_0b075e\n        execute_9e3a8f -> continue_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) surface_area_cube_15f9e9 root.main.surface_area_cube {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_b2508f\n\n        instance(x: -105, y: -110) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: -144, y: 112) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 116, y: -268) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"6*a*a\"\n        }\n        a_9f7759 -> mul_f892a4.first\n        a_9f7759 -> mul_f892a4.second\n        mul_f892a4.result -> mul_2f9d09.first\n        1 -> mul_2f9d09.second\n        mul_2f9d09.result -> expression_b720d7.gen_0\n        a_9f7759 -> expression_b720d7.gen_1\n        expression_b720d7.result -> surface_area_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_cube_d6e930 root.main.surface_area_cube {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -426, y: -421, name: \"execute\") trigger() execute_9e8a3f\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_a1\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_f7c0b5\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_3f8d4a\n\n        instance(x: 80, y: -417) ifexpression_1e6c8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_3f9d4a root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_f8c6a1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_7e2c5a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_9f3d4a root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_1e6c8\") setter_1e6c8 = surface_area\n        getter(x: 902, y: -314, name: \"getter_3f9d4a\") getter_3f9d4a = surface_area\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        6 -> mul_f8c6a1.second\n        side_length_a1 -> mul_f8c6a1.first\n        mul_f8c6a1.result -> add_7e2c5a.first\n        2 -> mul_9f3d4a.second\n        side_length_a1 -> mul_9f3d4a.first\n        mul_9f3d4a.result -> add_7e2c5a.second\n        add_7e2c5a.result -> surface_area_cube_3f9d4a.side_length_a1\n        0 -> setter_1e6c8.new_value\n        setter_1e6c8.continue -> ifexpression_1e6c8.execute\n        ifexpression_1e6c8.then -> continue_f7c0b5\n        execute_9e8a3f -> setter_1e6c8.execute\n        ifexpression_1e6c8.else -> surface_area_cube_3f9d4a.execute_9e8a3f\n        surface_area_cube_3f9d4a.continue_f7c0b5 -> continue_f7c0b5\n        getter_3f9d4a.value -> output_3f8d4a\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_1e6c8 root.main.surface_area_cube {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -452, y: -378, name: \"execute\") trigger() execute_3e9f8a\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_7c0b1d\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_4d2c5f\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_8a3e3d\n\n        instance(x: 80, y: -417) ifexpression_eb1f7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_2c9a6e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_1d7f4f root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_8e3c0c root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_9a6b2e root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_4f1d7\") setter_4f1d7 = surface_area\n        setter(x: 875, y: -518, name: \"setter_5a3c2e\") setter_5a3c2e = surface_area\n        getter(x: 902, y: -314, name: \"getter_6b4d9f\") getter_6b4d9f = surface_area\n\n        instance(x: -202, y: -236) floor_7c8e1d root.Std_k98ojb.Math.Floor {}\n        10 -> mul_1d7f4f.second\n        side_length_7c0b1d -> mul_1d7f4f.first\n        mul_1d7f4f.result -> ifexpression_eb1f7.gen_0\n        6 -> add_8e3c0c.second\n        mul_9a6b2e.result -> add_8e3c0c.first\n        side_length_7c0b1d -> mul_9a6b2e.first\n        2 -> mul_9a6b2e.second\n        add_8e3c0c.result -> setter_5a3c2e.new_value\n        0 -> setter_4f1d7.new_value\n        setter_4f1d7.continue -> ifexpression_eb1f7.execute\n        ifexpression_eb1f7.then -> continue_4d2c5f\n        execute_3e9f8a -> setter_4f1d7.execute\n        ifexpression_eb1f7.else -> surface_area_cube_2c9a6e.execute\n        surface_area_cube_2c9a6e.continue -> setter_5a3c2e.execute\n        getter_6b4d9f.value -> output_8a3e3d\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_b1c7d root.main.surface_area_cube {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_b2508f\n\n        instance(x: -105, y: -110) mul_1c7b5e root.Std_k98ojb.Math.Mul {}\n        a_9f7759 -> mul_1c7b5e.first\n        6 -> mul_1c7b5e.second\n        instance(x: -144, y: -56) pow_e0a8d2 root.Std_k98ojb.Math.Pow {}\n        a_9f7759 -> pow_e0a8d2.x\n        2 -> pow_e0a8d2.y\n        mul_1c7b5e.result -> surface_area_b2508f\n        pow_e0a8d2.result -> mul_1c7b5e.first\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_cube_d6e930 root.main.surface_area_cube {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -280, y: -241, name: \"execute\") trigger() execute_1a0d9f\n        in(x: -268, y: -114, name: \"size\") property(Number) size_7c8b2e\n\n        out(x: 511, y: -114, name: \"continue\") trigger() continue_5e6b4f\n        out(x: 535, y: -306, name: \"surface area\") property(Number) surface_area_ba1d9c\n\n        instance(x: 12, y: -240) mul_2b8f3c root.Std_k98ojb.Math.Mul {}\n        instance(x: 10, y: -113) mul_7e6b4c root.Std_k98ojb.Math.Mul {}\n        instance(x: 11, y: -306) mul_1a0d9f root.Std_k98ojb.Math.Mul {}\n        instance(x: 12, y: -127) mul_5e6b4f root.Std_k98ojb.Math.Mul {}\n        size_7c8b2e -> mul_2b8f3c.first\n        size_7c8b2e -> mul_7e6b4c.first\n        6 -> mul_1a0d9f.second\n        2 -> mul_5e6b4f.second\n        mul_2b8f3c.result -> mul_7e6b4c.second\n        mul_1a0d9f.result -> mul_5e6b4f.first\n        mul_7e6b4c.result -> surface_area_ba1d9c\n        execute_1a0d9f -> mul_2b8f3c.execute\n        mul_2b8f3c.continue -> mul_7e6b4c.execute\n        mul_7e6b4c.continue -> mul_1a0d9f.execute\n        mul_1a0d9f.continue -> mul_5e6b4f.execute\n        mul_5e6b4f.continue -> continue_5e6b4f\n    }\n\n    \n\n    instance(x: 48, y: -39) surface_area_cube_3c8f7c root.main.surface_area_cube {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9e6a1f\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_a5b7c3\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_e4d0cf\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_8e1f2a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_8e9f4c root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_1d3a2c root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_5e7c6f root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = surface_area\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = surface_area\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = surface_area\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        6 -> mul_1d3a2c.second\n        side_length_a5b7c3 -> mul_1d3a2c.first\n        mul_1d3a2c.result -> add_5e7c6f.first\n        mul_1d3a2c.result -> add_5e7c6f.second\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_e4efd7\n        execute_9e6a1f -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> surface_area_cube_8e9f4c.execute_9e6a1f\n        surface_area_cube_8e9f4c.continue_e4efd7 -> setter_375321.execute\n        add_5e7c6f.result -> setter_375321.new_value\n        setter_375321.continue -> continue_e4d0cf\n        getter_38583a.value -> output_8e1f2a\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_9b7c3 root.main.surface_area_cube {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9e6a8f\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_7c3d5b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_e2f1d0\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_4a8e6b\n\n        instance(x: 80, y: -417) ifexpression_c7c5c3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_1a9f6e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_f8d7c5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_2f0c4f root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_1e6a9f root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_5d3e8f\") setter_5d3e8f = surface_area\n        setter(x: 875, y: -518, name: \"setter_2c9a6d\") setter_2c9a6d = surface_area\n        getter(x: 902, y: -314, name: \"getter_1b7f5e\") getter_1b7f5e = surface_area\n        instance(x: -202, y: -236) floor_8f0f3f root.Std_k98ojb.Math.Floor {}\n        side_length_7c3d5b -> mul_f8d7c5.first\n        6 -> mul_f8d7c5.second\n        mul_f8d7c5.result -> add_2f0c4f.first\n        side_length_7c3d5b -> mul_1e6a9f.first\n        12 -> mul_1e6a9f.second\n        mul_1e6a9f.result -> add_2f0c4f.second\n        0 -> setter_5d3e8f.new_value\n        setter_5d3e8f.continue -> ifexpression_c7c5c3.execute\n        ifexpression_c7c5c3.then -> continue_e2f1d0\n        execute_9e6a8f -> setter_5d3e8f.execute\n        ifexpression_c7c5c3.else -> surface_area_cube_1a9f6e.execute_9e6a8f\n        surface_area_cube_1a9f6e.continue_e2f1d0 -> setter_2c9a6d.execute\n        add_2f0c4f.result -> setter_2c9a6d.new_value\n        setter_2c9a6d.continue -> continue_e2f1d0\n        getter_1b7f5e.value -> output_4a8e6b\n        side_length_7c3d5b -> floor_8f0f3f.input\n        floor_8f0f3f.output -> ifexpression_c7c5c3.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_9e6a8f root.main.surface_area_cube {}\n\n}"
      ],
      "19": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 157, name: \"list\") property(List) list_9a3f8e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_9a3f8e -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_a54bdc root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_a54bdc.left\n            find_de624f.item -> greaterthan_a54bdc.right\n            greaterthan_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_148aeb root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_afd5b1 -> lessthan_148aeb.left\n            ``Max value_0b1361``.item -> lessthan_148aeb.right\n            lessthan_148aeb.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_9a3f8e -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 160, name: \"list\") property(List) list_1a8f3e\n\n        out(x: 544, y: 145, name: \"output\") property(Number) output_5b9d6c\n\n        instance(x: 0, y: 0) max_2b7f4c root.Std_k98ojb.List.Max {}\n        instance(x: -1, y: -1) min_8e3a4f root.Std_k98ojb.List.Min {}\n        instance(x: 528, y: 146) sub_5d9a0c root.Std_k98ojb.Math.Sub {}\n        list_1a8f3e -> max_2b7f4c.items\n        list_1a8f3e -> min_8e3a4f.items\n        max_2b7f4c.max -> sub_5d9a0c.first\n        min_8e3a4f.min -> sub_5d9a0c.second\n        sub_5d9a0c.result -> output_5b9d6c\n    }\n\n    \n\n    instance(x: -52, y: 179) diff_max_min_1f2f7c root.main.diff_max_min {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 166, name: \"list\") property(List) list_1a8b9f\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_e7c2d0\n\n        instance(x: 532, y: 147) sub_3e6b4f root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_1a8b9f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_1a8b9f -> find_1a8b9f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_1a8b9f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_1a8b9f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_1a8b9f -> ``Max value_0b1361``.items\n        find_1a8b9f.item -> sub_3e6b4f.first\n        ``Max value_0b1361``.item -> sub_3e6b4f.second\n        sub_3e6b4f.result -> output_e7c2d0\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9a2f1e\n\n        out(x: 500, y: 5, name: \"output\") property(Number) output_7c6b4d\n\n        instance(x: 0, y: 0) max_8e1b1f root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 0) min_2a3f9f root.Std_k98ojb.List.Min {}\n        list_9a2f1e -> max_8e1b1f.items\n        list_9a2f1e -> min_2a3f9f.items\n        instance(x: 0, y: 0) sub_7c5d4f root.Std_k98ojb.Math.Sub {}\n        max_8e1b1f.max -> sub_7c5d4f.first\n        min_2a3f9f.min -> sub_7c5d4f.second\n        sub_7c5d4f.result -> output_7c6b4d\n    }\n\n    \n\n    instance(x: -57, y: 12) diff_max_min_e8e1ed root.main.diff_max_min {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_de624f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_09fcba -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 1, name: \"list\") property(List) list_2e9f8a\n\n        out(x: 545, y: 11, name: \"output\") property(Number) output_e5b7c0\n\n        instance(x: -110, y: 13) max_4d3f6f root.Std_k98ojb.List.Max {}\n        instance(x: -112, y: -111) min_9a1e2c root.Std_k98ojb.List.Min {}\n        list_2e9f8a -> max_4d3f6f.items\n        list_2e9f8a -> min_9a1e2c.items\n        instance(x: 188, y: -7) sub_0e5f2c root.Std_k98ojb.Math.Sub {}\n        max_4d3f6f.max -> sub_0e5f2c.first\n        min_9a1e2c.min -> sub_0e5f2c.second\n        sub_0e5f2c.result -> output_e5b7c0\n    }\n\n    \n\n    instance(x: 48, y: -68) diff_max_min_3d8c6f root.main.diff_max_min {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 157, name: \"list\") property(List) list_1f0b8a\n\n        out(x: 546, y: 127, name: \"output\") property(Number) output_e5c9d4\n\n        instance(x: 188, y: 124) sub_7e3a6c root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 154) max_2f8b0c root.Std_k98ojb.List.Max {}\n        instance(x: -317, y: -20) min_d5d9ef root.Std_k98ojb.List.Min {}\n        list_1f0b8a -> max_2f8b0c.items\n        list_1f0b8a -> min_d5d9ef.items\n        max_2f8b0c.max -> sub_7e3a6c.first\n        min_d5d9ef.min -> sub_7e3a6c.second\n        sub_7e3a6c.result -> output_e5c9d4\n    }\n\n    \n\n    instance(x: 48, y: -67) diff_max_min_2f8b0c root.main.diff_max_min {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 10, name: \"list\") property(List) list_1a8b9f\n\n        out(x: 443, y: 27, name: \"output\") property(Number) output_5e7c0d\n\n        instance(x: -103, y: 11) max_3f6a4c root.Std_k98ojb.List.Max {}\n        instance(x: -104, y: -133) min_f9a8aa root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 27) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        list_1a8b9f -> max_3f6a4c.items\n        list_1a8b9f -> min_f9a8aa.items\n        max_3f6a4c.max -> sub_7e1ce0.first\n        min_f9a8aa.min -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_5e7c0d\n    }\n\n    \n\n    instance(x: 48, y: -11) diff_max_min_15f9e9 root.main.diff_max_min {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_de624f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_09fcba -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -284, y: 0, name: \"list\") property(List) list_6a3f8e\n\n        out(x: 594, y: 1, name: \"output\") property(Number) output_e5b9d7\n\n        instance(x: 0, y: 0) max_2c4e7c root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 0) min_3f8a6f root.Std_k98ojb.List.Min {}\n        list_6a3f8e -> max_2c4e7c.items\n        list_6a3f8e -> min_3f8a6f.items\n        instance(x: 594, y: -1) sub_9d5a8c root.Std_k98ojb.Math.Sub {}\n        max_2c4e7c.max -> sub_9d5a8c.first\n        min_3f8a6f.min -> sub_9d5a8c.second\n        sub_9d5a8c.result -> output_e5b9d7\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_max_min_2e4c0e root.main.diff_max_min {}\n}"
      ],
      "22": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 6, name: \"input\") property(Number) input_0a3f9e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_1b7c4d\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_e5a8ed\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_f9e3f0\n\n        instance(x: -105, y: -110) ifexpression_1c7b2d root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_0a3f9e -> ifexpression_1c7b2d.gen_0\n        2 -> ifexpression_1c7b2d.gen_1\n        execute_1b7c4d -> ifexpression_1c7b2d.execute\n        ifexpression_1c7b2d.value -> output_f9e3f0\n        ifexpression_1c7b2d.then -> continue_e5a8ed\n        ifexpression_1c7b2d.else -> continue_e5a8ed\n    }\n\n    \n\n    instance(x: -175, y: 11) is_even_6f9e4f root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 3, name: \"input\") property(Number) input_1f8a0e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_5c7d6b\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_3b9f4f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_1a2e9f\n\n        instance(x: -106, y: -110) ifexpression_8c6d0c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_b1a7f9\") getter_b1a7f9 = output\n        setter(x: 116, y: -268, name: \"setter_8e6c4d\") setter_8e6c4d = output\n        input_1f8a0e -> ifexpression_8c6d0c.gen_0\n        execute_5c7d6b -> ifexpression_8c6d0c.execute\n        getter_b1a7f9.value -> output_3b9f4f\n        ifexpression_8c6d0c.then -> setter_8e6c4d.execute\n        true -> setter_8e6c4d.new_value\n        false -> setter_8e6c4d.new_value\n        setter_8e6c4d.continue -> continue_1a2e9f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_3b0c7f root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 5, name: \"input\") property(Number) input_9e6a8f\n        in(x: -449, y: -119, name: \"execute\") trigger() execute_eb7d3c\n\n        out(x: 1212, y: -118, name: \"continue\") trigger() continue_f1b4ef\n        out(x: 1205, y: 112, name: \"output\") property(Bool) output_8e9f6a\n\n        instance(x: -99, y: 107, name: \"if expression\") ifexpression_e3c7d2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -138, y: 209, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_9e6a8f -> ifexpression_e3c7d2.gen_0\n        2 -> ifexpression_e3c7d2.gen_1\n        getter_9cceb3.value -> output_8e9f6a\n        ifexpression_e3c7d2.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        execute_eb7d3c -> ifexpression_e3c7d2.execute\n        ifexpression_e3c7d2.else -> continue_f1b4ef\n        setter_1cedb2.continue -> continue_f1b4ef\n    }\n\n    \n\n    instance(x: -175, y: 36) is_even_8f6e0a root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 0, name: \"input\") property(Number) input_9f1e6d\n        in(x: -451, y: -115, name: \"execute\") trigger() execute_7a3c4b\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_e5c2ec\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_f1e9f0\n\n        instance(x: -105, y: -110) ifexpression_7a4b3d root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_9f1e6d -> ifexpression_7a4b3d.gen_0\n        2 -> ifexpression_7a4b3d.gen_1\n        ifexpression_7a4b3d.value -> output_f1e9f0\n        execute_7a3c4b -> ifexpression_7a4b3d.execute\n        ifexpression_7a4b3d.then -> continue_e5c2ec\n        ifexpression_7a4b3d.else -> continue_e5c2ec\n    }\n\n    \n\n    instance(x: -173, y: 59) is_even_f9f1d8 root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 165, name: \"input\") property(Number) input_1e3f5d\n        in(x: -452, y: -113, name: \"execute\") trigger() execute_9b7c0a\n\n        out(x: 1234, y: 146, name: \"output\") property(Bool) output_8e2a9e\n        out(x: 1225, y: -114, name: \"continue\") trigger() continue_e6d3f1\n\n        instance(x: 0, y: 0) modulo_4c7b2f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        input_1e3f5d -> modulo_4c7b2f.value\n        2 -> modulo_4c7b2f.divisor\n        modulo_4c7b2f.result -> ifexpression_875761.gen_0\n        execute_9b7c0a -> ifexpression_875761.execute\n        ifexpression_875761.then -> continue_e6d3f1\n        ifexpression_875761.else -> continue_e6d3f1\n        ifexpression_875761.value -> output_8e2a9e\n    }\n\n    \n\n    instance(x: -292, y: 177) is_even_7c0b5f root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 2, name: \"input\") property(Number) input_0e9f1d\n        in(x: -454, y: -111, name: \"execute\") trigger() execute_ea7c8b\n\n        out(x: 546, y: 3, name: \"output\") property(Bool) output_f4b2ef\n        out(x: 512, y: -112, name: \"continue\") trigger() continue_1f0e5d\n\n        instance(x: -104, y: -108) ifexpression_9a8c3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_0e9f1d -> ifexpression_9a8c3c.gen_0\n        2 -> ifexpression_9a8c3c.gen_1\n        getter_9cceb3.value -> output_f4b2ef\n        ifexpression_9a8c3c.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_9a8c3c.else -> continue_1f0e5d\n        execute_ea7c8b -> ifexpression_9a8c3c.execute\n        setter_1cedb2.continue -> continue_1f0e5d\n    }\n\n    \n\n    instance(x: -84, y: 59) is_even_f6a7a4 root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 6, name: \"input\") property(Number) input_1a9f5e\n        in(x: -451, y: -116, name: \"execute\") trigger() execute_eb0d7c\n\n        out(x: 1188, y: -115, name: \"continue\") trigger() continue_f6c2ec\n        out(x: 1211, y: 65, name: \"output\") property(Bool) output_5a3e4f\n\n        instance(x: -99, y: 66, name: \"is even?\") ifexpression_9b7d8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a9f5e -> ifexpression_9b7d8c.gen_0\n        execute_eb0d7c -> ifexpression_9b7d8c.execute\n        ifexpression_9b7d8c.value -> output_5a3e4f\n        ifexpression_9b7d8c.then -> continue_f6c2ec\n        ifexpression_9b7d8c.else -> continue_f6c2ec\n    }\n\n    \n\n    instance(x: -173, y: 15) is_even_1e5a0c root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 10, name: \"input\") property(Number) input_1f0e9d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_5a7c6b\n\n        out(x: 1228, y: 4, name: \"continue\") trigger() continue_3a7b8f\n        out(x: 1219, y: 147, name: \"output\") property(Bool) output_e1d0e2\n\n        instance(x: -107, y: 148, name: \"ifexpression_5c6d4c\") ifexpression_5c6d4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 333, y: 160, name: \"getter_b280eb\") getter_b280eb = output\n        setter(x: 678, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = output\n        instance(x: 320, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = output\n        ifexpression_5c6d4c.else -> continue_3a7b8f\n        ifexpression_5c6d4c.value -> output_e1d0e2\n        ifexpression_5c6d4c.then -> setter_9d4f1c.execute\n        execute_5a7c6b -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n        getter_b280eb.value -> ifexpression_5c6d4c.gen_0\n        input_1f0e9d -> ifexpression_5c6d4c.gen_1\n        for_d26972.onItem -> ifexpression_5c6d4c.execute\n        for_d26972.done -> continue_3a7b8f\n    }\n\n    \n\n    instance(x: 10, y: -177) is_even_f9e0ed root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 16, name: \"input\") property(Number) input_0a3e8f\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_eb7d5c\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_9e2f1f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_6a3f4f\n\n        instance(x: -105, y: -110) ifexpression_7c0b5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_0a3e8f -> ifexpression_7c0b5d.gen_0\n        execute_eb7d5c -> ifexpression_7c0b5d.execute\n        getter_9cceb3.value -> output_9e2f1f\n        ifexpression_7c0b5d.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        false -> setter_37db7f.new_value\n        ifexpression_7c0b5d.else -> setter_37db7f.execute\n        setter_1cedb2.continue -> continue_6a3f4f\n        setter_37db7f.continue -> continue_6a3f4f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_8e9c5d root.main.is_even {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 1, name: \"input\") property(Number) input_8f2a3e\n        in(x: -451, y: -114, name: \"execute\") trigger() execute_e9b6d7\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_5c0b1e\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_8f2a3e\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_8f2a3e -> ifexpression_e38995.gen_0\n        execute_e9b6d7 -> ifexpression_e38995.execute\n        ifexpression_e38995.value -> output_5c0b1e\n        ifexpression_e38995.then -> continue_8f2a3e\n        ifexpression_e38995.else -> continue_8f2a3e\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f9d7e6 root.main.is_even {}\n\n}"
      ],
      "23": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 1, name: \"input\") property(String) input_0\n\n        out(x: 533, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 1) find_4d5e6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) firstitem_d831ca root.Std_k98ojb.List.FirstItem {}\n        characters_7b3b7b.characters -> find_4d5e6f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            find_4d5e6f.item -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_4d5e6f.predicate\n        input_0 -> characters_7b3b7b.input\n        find_4d5e6f.item -> firstitem_d831ca.list\n        firstitem_d831ca.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_1\n\n        instance(x: 0, y: 1) characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"First repeated character\") filter_d42dce root.Std_k98ojb.Query.Filter {\n            where: \"it == it[0]\"\n        }\n        characters_3c713b.characters -> find_repeated_char.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> filter_d42dce.list\n            characters_3c713b.characters -> contains_45e806.input\n            current_afd5b1 -> contains_45e806.contains\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_repeated_char.predicate\n        filter_d42dce.result -> result_1\n    }\n\n    \n\n    instance(x: -81, y: 159) first_repeated_char_f15bad root.main.first_repeated_char {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Contains\") contains_0b1361 root.Std_k98ojb.Query.Filter {\n            where: \"it in list\"\n        }\n        characters_7b3b7b.characters -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_7b3b7b.characters -> contains_d42dce.list\n            current_afd5b1 -> contains_d42dce.input\n            bool_1eb6e9 -> contains_d42dce.result\n        } -> find_de624f.predicate\n        instance(x: 0, y: 0) list_2c7a8f root.Std_k98ojb.List.Empty {}\n        characters_7b3b7b.characters -> contains_0b1361.list\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            list_2c7a8f.list -> contains_d42dce.list\n            current_afd5b1 -> contains_d42dce.input\n            bool_1eb6e9 -> contains_d42dce.result\n        } -> contains_0b1361.predicate\n        find_de624f.item -> output_ai\n        list_2c7a8f.listWithItem -> list_2c7a8f.list\n        find_de624f.item -> list_2c7a8f.item\n    }\n\n    \n\n    instance(x: -179, y: 30) first_repeated_char_59bc6e root.main.first_repeated_char {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3e7b4e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") ``first occurrence_2f1444`` root.Std_k98ojb.Iteration.Find {}\n        characters_3e7b4e.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            ``first occurrence_2f1444``.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        characters_3e7b4e.characters -> ``first occurrence_2f1444``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``first occurrence_2f1444``.predicate\n        find_6d05b0.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5e3b9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 310, y: -75) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_5e3b9c.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) substring_7c2f3a root.Std_k98ojb.Strings.Substring {}\n            instance(x: 415, y: 86) contains_d42dce_0 root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> substring_7c2f3a.input\n            substring_7c2f3a.start -> substring_7c2f3a.end\n            substring_7c2f3a.substring -> contains_d42dce_0.input\n            characters_5e3b9c.characters -> contains_d42dce_0.contains\n            contains_d42dce_0.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        input_0 -> characters_5e3b9c.input\n        find_6d05b0.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3e4d7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6f8a8d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) ifexpression_1e5c3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"it in list\"\n        }\n        characters_3e4d7c.characters -> find_6f8a8d.items\n        func() {\n            in(x: 0, y: 0, name: \"current\") property(String) current_1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 89, y: 29) contains_3c8f9d root.Std_k98ojb.Strings.Contains {}\n            current_1 -> contains_3c8f9d.input\n            list -> contains_3c8f9d.contains\n            contains_3c8f9d.result -> bool_2\n        } -> find_6f8a8d.predicate\n        func() {\n            in(x: 0, y: 0, name: \"current\") property(String) current_1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 89, y: 29) contains_3c8f9d root.Std_k98ojb.Strings.Contains {}\n            list -> contains_3c8f9d.input\n            current_1 -> contains_3c8f9d.contains\n            contains_3c8f9d.result -> bool_2\n        } -> ifexpression_1e5c3c.predicate\n        input_0 -> characters_3e4d7c.input\n        find_6f8a8d.item -> result_0\n        list -> ifexpression_1e5c3c.gen_0\n        ifexpression_1e5c3c.then -> find_6f8a8d.next\n        characters_3e4d7c.characters -> ifexpression_1e5c3c.a\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_1\n\n        instance(x: 0, y: 1) characters_3e4b9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7a6f8d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 465, y: -75) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == 1\"\n        }\n        instance(x: 535, y: -145) count_5f3e8c root.Std_k98ojb.Std.Count {}\n        characters_3e4b9c.characters -> find_7a6f8d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            count_5f3e8c.count -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_7a6f8d.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_d42dce.input\n            count_5f3e8c.count -> contains_d42dce.contains\n            contains_d42dce.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> ifexpression_a2fa90.predicate\n        input_1 -> characters_3e4b9c.input\n        find_7a6f8d.item -> result_1\n        find_7a6f8d.onItem -> count_5f3e8c.trigger\n        ifexpression_a2fa90.then -> count_5f3e8c.reset\n        ifexpression_a2fa90.else -> count_5f3e8c.count\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -119, y: 0, name: \"first repeated char\") find_1e159f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 772, y: 76) map_5c9a8d root.Std_k98ojb.Iteration.Map {\n            handler: func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n                current_afd5b1 -> contains_d42dce.input\n                input_ai -> contains_d42dce.contains\n                contains_d42dce.result -> notequal_148aeb.left\n                true -> notequal_148aeb.right\n                notequal_148aeb.result -> bool_1eb6e9\n            }\n        }\n        instance(x: 772, y: 76) filter_5c9a8d root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -192, y: 84, name: \"current\") property(Bool) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) not_45e806 root.Std_k98ojb.Logic.Not {}\n                current_afd5b1 -> not_45e806.input\n                not_45e806.result -> bool_1eb6e9\n            }\n        }\n        characters_7b3b7b.characters -> map_5c9a8d.items\n        map_5c9a8d.output_list -> filter_5c9a8d.items\n        filter_5c9a8d.output_list -> find_1e159f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_d42dce.input\n            input_ai -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_1e159f.predicate\n        input_ai -> characters_7b3b7b.input\n        find_1e159f.item -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) first_repeated_char_node root.main.first_repeated_char {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_807ffd.left\n            false -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: 0, y: -1) for_065883 root.Std_k98ojb.Std.For {}\n        input_0 -> for_065883.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) characters_1088d5 root.Std_k98ojb.Strings.Characters {}\n            instance(x: 310, y: 35) contains_aabb6e root.Std_k98ojb.Strings.Contains {}\n            for_065883.item -> characters_1088d5.input\n            elem_9f6850 -> contains_aabb6e.contains\n            characters_1088d5.characters -> contains_aabb6e.input\n            contains_aabb6e.result -> bool_af09a7\n        } -> find_6d05b0.items\n        for_065883.onItem -> find_6d05b0.execute\n        find_6d05b0.item -> output_3bc2ae\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_2\n\n        instance(x: 0, y: 0) find_3 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_4\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5\n\n            instance(x: 89, y: 29) contains_6 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_7 root.Std_k98ojb.Logic.NotEqual {}\n            input_1 -> contains_6.input\n            elem_4 -> contains_6.contains\n            contains_6.result -> notequal_7.left\n            find_3.item -> notequal_7.right\n            notequal_7.result -> bool_5\n        } -> find_3.predicate\n        instance(x: 0, y: -1) characters_8 root.Std_k98ojb.Strings.Characters {}\n        input_1 -> characters_8.input\n        characters_8.characters -> find_3.items\n        find_3.item -> output_2\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_9 root.main.first_repeated_char {}\n\n}"
      ],
      "35": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -280, y: 17, name: \"list\") property(List) list_8f3a9e\n\n        out(x: 0, y: 0, name: \"second_smallest\") property(Number) second_smallest_7c2b5d\n\n        instance(x: -101, y: -103) min_c3e343 root.Std_k98ojb.List.Min {}\n        instance(x: -10, y: -104) filter_6f8a1c root.Std_k98ojb.Query.Filter {\n            where: \"it > min\"\n        }\n        instance(x: 110, y: -103) min_9e7d3f root.Std_k98ojb.List.Min {}\n        list_8f3a9e -> min_c3e343.items\n        min_c3e343.min -> filter_6f8a1c.where.gen_0\n        list_8f3a9e -> filter_6f8a1c.list\n        filter_6f8a1c.result -> min_9e7d3f.items\n        min_9e7d3f.min -> second_smallest_7c2b5d\n    }\n\n    \n\n    instance(x: -67, y: 127) second_smallest_4e0b3f root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: 2, name: \"list\") property(List) list_9f8a5e\n\n        out(x: 593, y: 77, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f8a5e -> find_6d05b0.items\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it != min\"\n        }\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n            find_6d05b0.item -> equal_aabb6e.left\n            elem_9f6850 -> equal_aabb6e.right\n            equal_aabb6e.result -> bool_af09a7\n        } -> filter_7b3b7b.where\n        list_9f8a5e -> filter_7b3b7b.list\n        instance(x: 0, y: 0) find_1d2c9e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min2_1e3c6d root.Std_k98ojb.Math.Min2 {}\n            find_6d05b0.item -> min2_1e3c6d.left\n            elem_9f6850 -> min2_1e3c6d.right\n            min2_1e3c6d.min -> bool_af09a7\n        } -> find_1d2c9e.predicate\n        filter_7b3b7b.result -> find_1d2c9e.items\n        find_1d2c9e.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -67, y: -37) second_smallest_f21f44 root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -285, y: 1, name: \"list\") property(List) list_8e3a9f\n\n        out(x: 595, y: 2, name: \"second_smallest\") property(Number) second_smallest_5c7d0b\n\n        instance(x: -15, y: -13, name: \"First smallest number\") find_4a1c8e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0, name: \"Second smallest number\") ``First smallest number_7d3f9`` root.Std_k98ojb.Iteration.Find {}\n        list_8e3a9f -> find_4a1c8e.items\n        func() {\n            in(x: -114, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) less_than_2d3b1c root.Std_k98ojb.Math.LessThan {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            find_4a1c8e.item -> less_than_2d3b1c.right\n            elem_9f6850 -> less_than_2d3b1c.left\n            less_than_2d3b1c.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_4a1c8e.predicate\n        list_8e3a9f -> ``First smallest number_7d3f9``.items\n        func() {\n            in(x: -114, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) less_than_2d3b1c root.Std_k98ojb.Math.LessThan {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            find_4a1c8e.item -> less_than_2d3b1c.right\n            elem_9f6850 -> less_than_2d3b1c.left\n            less_than_2d3b1c.result -> notequal_807ffd.left\n            ``First smallest number_7d3f9``.item -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> ``First smallest number_7d3f9``.predicate\n        ``First smallest number_7d3f9``.item -> second_smallest_5c7d0b\n    }\n\n    \n\n    instance(x: -67, y: 127) second_smallest_2a8e6c root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -280, y: 0, name: \"list\") property(List) list_1a3f8e\n\n        out(x: 600, y: 0, name: \"second_smallest\") property(Number) second_smallest_7c9d6b\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268,",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: 158, name: \"list\") property(List) list_9f7759\n\n        out(x: 46, y: 358, name: \"second_min\") property(Number) second_min_f9110a\n\n        instance(x: -105, y: 112) min_c3e343 root.Std_k98ojb.List.Min {}\n        instance(x: -144, y: 312) filter_807ffd root.Std_k98ojb.Query.Filter {\n            where: \"it > min\"\n        }\n        list_9f7759 -> min_c3e343.items\n        min_c3e343.min -> filter_807ffd.list\n        func() {\n            in(x: -113, y: 242, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 252, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 236) greaterthan_1088d5 root.Std_k98ojb.Math.GreaterThan {}\n            elem_9f6850 -> greaterthan_1088d5.left\n            min_c3e343.min -> greaterthan_1088d5.right\n            greaterthan_1088d5.result -> bool_af09a7\n        } -> filter_807ffd.predicate\n        instance(x: 116, y: 312) min_1cedb2 root.Std_k98ojb.List.Min {}\n        filter_807ffd.result -> min_1cedb2.items\n        min_1cedb2.min -> second_min_f9110a\n    }\n\n    \n\n    instance(x: -174, y: 257) second_smallest_d6e930 root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 1, name: \"list\") property(List) list_4e9f8a\n\n        out(x: 600, y: 0, name: \"second_smallest\") property(Number) second_smallest_5b7c6d\n\n        instance(x: -105, y: -109) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -109) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: -105, y: -109) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -109) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -109) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -109) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -109) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -109) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -109) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -109) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -109) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -109) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -109) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: 2, name: \"list\") property(List) list_9e8f5a\n\n        out(x: 592, y: 77, name: \"output\") property(Number) output_eb7d1c\n\n        instance(x: 0, y: 0) min_4e6f9c root.Std_k98ojb.List.Min {}\n        instance(x: -105, y: -114) remove_2a8e1c root.Std_k98ojb.List.Remove {}\n        instance(x: 0, y: 0) min_5d3f7c root.Std_k98ojb.List.Min {}\n        list_9e8f5a -> min_4e6f9c.items\n        min_4e6f9c.min -> remove_2a8e1c.index\n        list_9e8f5a -> remove_2a8e1c.list\n        remove_2a8e1c.listWithoutItem -> min_5d3f7c.items\n        min_5d3f7c.min -> output_eb7d1c\n    }\n\n    \n\n    instance(x: -67, y: 127) second_smallest_9b6f4f root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -285, y: 2, name: \"list\") property(List) list_9f8e1a\n\n        out(x: 592, y: 3, name: \"second_smallest\") property(Number) second_smallest_7c6b4d\n\n        instance(x: 0, y: 0) min_5c2b9f root.Std_k98ojb.List.Min {}\n        instance(x: -281, y: 127, name: \"filter\") filter_1e8a3c root.Std_k98ojb.Query.Filter {\n            where: \"it != min\"\n        }\n        list_9f8e1a -> min_5c2b9f.items\n        min_5c2b9f.min -> filter_1e8a3c.where.gen_0\n        list_9f8e1a -> filter_1e8a3c.list\n        instance(x: 0, y: 0) min_6d7b4c root.Std_k98ojb.List.Min {}\n        filter_1e8a3c.result -> min_6d7b4c.items\n        min_6d7b4c.min -> second_smallest_7c6b4d\n    }\n\n    \n\n    instance(x: -54, y: 27) second_smallest_b9f5d2 root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1a8e4f\n\n        out(x: 593, y: 29, name: \"number\") property(Number) number_7c2d5b\n\n        instance(x: 0, y: 0) find_3a9c6f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1e7c2d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9f6a5b\n\n            instance(x: 89, y: 29) min_3e4b0f root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_7c1d8c root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -2, y: 44) find_6a9c4f root.Std_k98ojb.Iteration.Find {}\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(Number) current_e7d1e5\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_9f6a5b\n\n                instance(x: 112, y: 80) less_than_2c3f0c root.Std_k98ojb.Math.LessThan {}\n                current_e7d1e5 -> less_than_2c3f0c.left\n                elem_1e7c2d -> less_than_2c3f0c.right\n                less_than_2c3f0c.result -> bool_9f6a5b\n            } -> find_6a9c4f.predicate\n            list_1a8e4f -> find_6a9c4f.items\n            find_6a9c4f.item -> min_3e4b0f.left\n            elem_1e7c2d -> min_3e4b0f.right\n            min_3e4b0f.result -> notequal_7c1d8c.left\n            find_6a9c4f.item -> notequal_7c1d8c.right\n            notequal_7c1d8c.result -> bool_9f6a5b\n        } -> find_3a9c6f.predicate\n        list_1a8e4f -> find_3a9c6f.items\n        find_3a9c6f.item -> number_7c2d5b\n    }\n\n    \n\n    instance(x: -55, y: 129) second_smallest_0c8b7c root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1a3f8e\n\n        out(x: 593, y: 29, name: \"number\") property(Number) number_7b2c5d\n\n        instance(x: 0, y: 0) find_4a9d8c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1f7e2a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9c6d4b\n\n            instance(x: 89, y: 29) min_5c8b0a root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_1e7f3f root.Std_k98ojb.Logic.NotEqual {}\n            list_1a3f8e -> min_5c8b0a.values\n            elem_1f7e2a -> min_5c8b0a.values\n            min_5c8b0a.result -> notequal_1e7f3f.left\n            0 -> notequal_1e7f3f.right\n            notequal_1e7f3f.result -> bool_9c6d4b\n        } -> find_4a9d8c.predicate\n        list_1a3f8e -> find_4a9d8c.items\n        find_4a9d8c.item -> number_7b2c5d\n    }\n\n    \n\n    instance(x: -55, y: 129) second_smallest_6a0b4f root.main.second_smallest {}\n}"
      ]
    }
  },
  {
    "experiment_name": "regular_RAG_10_shot",
    "best_params_optimization": "semantic",
    "temperature": 0.9,
    "top_p": 0.2,
    "top_k": 50,
    "seed": 346,
    "n_generations_per_task": 10,
    "model": "phi4:14b-fp16",
    "largest_context": 15999,
    "task_candidates": {
      "7": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -176, y: 12, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -177, y: -124, name: \"list2\") property(List) list2_eb0d7c\n\n        out(x: 525, y: -101, name: \"output\") property(Bool) output_4f5c3e\n\n        instance(x: 185, y: -103, name: \"intersection\") intersection_9a8f1f root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2f9e -> intersection_9a8f1f.left\n        list2_eb0d7c -> intersection_9a8f1f.right\n        instance(x: 492, y: -103) notempty_5a3b1c root.Std_k98ojb.List.NotEmpty {}\n        intersection_9a8f1f.intersection -> notempty_5a3b1c.list\n        notempty_5a3b1c.isEmpty -> output_4f5c3e\n    }\n\n    \n\n    instance(x: -154, y: 46) has_common_element_6d0f2c root.main.has_common_element {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -175, y: 10, name: \"list1\") property(List) list1_3a0f8e\n        in(x: -165, y: -123, name: \"list2\") property(List) list2_eb7c9d\n\n        out(x: 560, y: -104, name: \"output\") property(Bool) output_b6f4ed\n\n        instance(x: 133, y: -131) intersection_1a8e5 root.Std_k98ojb.Sets.Intersection {}\n        list1_3a0f8e -> intersection_1a8e5.left\n        list2_eb7c9d -> intersection_1a8e5.right\n        instance(x: 362, y: -95) notempty_6f1b9 root.Std_k98ojb.List.NotEmpty {}\n        intersection_1a8e5.intersection -> notempty_6f1b9.list\n        notempty_6f1b9.isEmpty -> output_b6f4ed\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_ac7dfb root.main.common_element {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -173, y: 16, name: \"list1\") property(List) list1_4e9f5a\n        in(x: -157, y: -121, name: \"list2\") property(List) list2_7b0d8c\n\n        out(x: 504, y: -50, name: \"output\") property(Bool) output_3e1c4e\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_9a6f1 root.Std_k98ojb.Sets.Intersection {}\n        list1_4e9f5a -> intersection_9a6f1.left\n        list2_7b0d8c -> intersection_9a6f1.right\n        instance(x: 679, y: -20) notempty_3a9b4 root.Std_k98ojb.List.NotEmpty {}\n        intersection_9a6f1.intersection -> notempty_3a9b4.list\n        notempty_3a9b4.isEmpty -> output_3e1c4e\n    }\n\n    \n\n    instance(x: -138, y: -63) common_element_5d0d8 root.main.common_element {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -171, y: 12, name: \"list1\") property(List) list1_3f0a6b\n        in(x: -172, y: -125, name: \"list2\") property(List) list2_9e7c8d\n\n        out(x: 540, y: -107, name: \"output\") property(Bool) output_4e1f5c\n\n        instance(x: 154, y: -104) intersection_6a3b2c root.Std_k98ojb.Sets.Intersection {}\n        list1_3f0a6b -> intersection_6a3b2c.left\n        list2_9e7c8d -> intersection_6a3b2c.right\n        instance(x: 440, y: -106) notempty_4b5f8a root.Std_k98ojb.List.NotEmpty {}\n        intersection_6a3b2c.intersection -> notempty_4b5f8a.list\n        notempty_4b5f8a.isEmpty -> output_4e1f5c\n    }\n\n    \n\n    instance(x: -139, y: 45) common_element_9d7c0f root.main.common_element {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -176, y: 18, name: \"list1\") property(List) list1_9a3b6f\n        in(x: -164, y: -121, name: \"list2\") property(List) list2_8e5c7d\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_4d1a9e\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_6f3b8c root.Std_k98ojb.Sets.Intersection {}\n        list1_9a3b6f -> intersection_6f3b8c.left\n        list2_8e5c7d -> intersection_6f3b8c.right\n        instance(x: 487, y: -49) notempty_f4c0ed root.Std_k98ojb.List.NotEmpty {}\n        intersection_6f3b8c.intersection -> notempty_f4c0ed.list\n        notempty_f4c0ed.isEmpty -> output_4d1a9e\n    }\n\n    \n\n    instance(x: -138, y: -63) common_element_7b5f8d root.main.common_element {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -178, y: 10, name: \"list1\") property(List) list1_8a2f6e\n        in(x: -162, y: -121, name: \"list2\") property(List) list2_e5b9d4\n\n        out(x: 505, y: -50, name: \"has_common_element\") property(Bool) has_common_element_7c1a3f\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_f8e0ba root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2f6e -> intersection_f8e0ba.left\n        list2_e5b9d4 -> intersection_f8e0ba.right\n        instance(x: 443, y: -50) notempty_3c1b2c root.Std_k98ojb.List.NotEmpty {}\n        intersection_f8e0ba.intersection -> notempty_3c1b2c.list\n        notempty_3c1b2c.isEmpty -> has_common_element_7c1a3f\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_aad0c2 root.main.has_common_element {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -176, y: 19, name: \"list1\") property(List) list1_8e6f9a\n        in(x: -162, y: -121, name: \"list2\") property(List) list2_5c7b4d\n\n        out(x: 507, y: -50, name: \"output\") property(Bool) output_3f0b1e\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_9a8f6f root.Std_k98ojb.Sets.Intersection {}\n        list1_8e6f9a -> intersection_9a8f6f.left\n        list2_5c7b4d -> intersection_9a8f6f.right\n        instance(x: 487, y: -49) notempty_0a9f8f root.Std_k98ojb.List.NotEmpty {}\n        intersection_9a8f6f.intersection -> notempty_0a9f8f.list\n        notempty_0a9f8f.isEmpty -> output_3f0b1e\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_7d5c4c root.main.has_common_element {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -277, y: 167, name: \"list1\") property(List) list1_0e9f2a\n        in(x: -276, y: 338, name: \"list2\") property(List) list2_7c6d5b\n\n        out(x: 802, y: 317, name: \"output\") property(Bool) output_8e3b4e\n\n        instance(x: 532, y: 319) intersection_9a0f1f root.Std_k98ojb.Sets.Intersection {}\n        list1_0e9f2a -> intersection_9a0f1f.left\n        list2_7c6d5b -> intersection_9a0f1f.right\n        instance(x: 1063, y: 317) notempty_f8b7bc root.Std_k98ojb.List.NotEmpty {}\n        intersection_9a0f1f.intersection -> notempty_f8b7bc.list\n        notempty_f8b7bc.isEmpty -> output_8e3b4e\n    }\n\n    \n\n    instance(x: -291, y: 177) has_common_element_e5c6a2 root.main.has_common_element {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -176, y: 14, name: \"list1\") property(List) list1_9e3b8a\n        in(x: -163, y: -111, name: \"list2\") property(List) list2_6c0d7f\n\n        out(x: 558, y: -89, name: \"output\") property(Bool) output_5a4c1e\n\n        instance(x: 142, y: -97) intersection_c9b8dc root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3b8a -> intersection_c9b8dc.left\n        list2_6c0d7f -> intersection_c9b8dc.right\n        instance(x: 446, y: -90) notempty_e4b8aa root.Std_k98ojb.List.NotEmpty {}\n        intersection_c9b8dc.intersection -> notempty_e4b8aa.list\n        notempty_e4b8aa.isEmpty -> output_5a4c1e\n    }\n\n    \n\n    instance(x: 0, y: -3) common_element_7f2d1e root.main.common_element {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -172, y: 18, name: \"list1\") property(List) list1_94ca93\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_aa3106\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_20b99a\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_06d2e5 root.Std_k98ojb.Sets.Intersection {}\n        list1_94ca93 -> intersection_06d2e5.left\n        list2_aa3106 -> intersection_06d2e5.right\n        instance(x: 772, y: -48) notempty_f3b46d root.Std_k98ojb.List.NotEmpty {}\n        intersection_06d2e5.intersection -> notempty_f3b46d.list\n        notempty_f3b46d.isEmpty -> output_20b99a\n    }\n\n    \n\n    instance(x: -138, y: -63) common_element_aad0c2 root.main.common_element {}\n\n\n}"
      ],
      "11": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 3, name: \"list\") property(List) list_9a8f1e\n\n        out(x: 1227, y: 2, name: \"output\") property(Bool) output_eb0d5c\n\n        instance(x: 772, y: 76) filter_6e4c7c root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: -92, y: -97) intersection_c9a3f8 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_9a8f1e -> filter_6e4c7c.list\n        filter_6e4c7c.result -> intersection_c9a3f8.left\n        list_9a8f1e -> intersection_c9a3f8.right\n        length_6e87f2.length -> equal_f89569.left\n        intersection_c9a3f8.intersection -> length_6e87f2.list\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_eb0d5c\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_7f7f4 root.main.is_consecutive {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 5, name: \"list\") property(List) list_0a9f8e\n\n        out(x: 1056, y: 2, name: \"output\") property(Bool) output_eb7c1d\n\n        instance(x: 752, y: 51) ifexpression_4b3e8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 168, name: \"getter_7f6a5d\") getter_7f6a5d = previous\n        setter(x: 679, y: -313, name: \"setter_b9c3e2\") setter_b9c3e2 = previous\n        instance(x: 321, y: -20) for_8b0a1d root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_b9c3e2\") setter_6f7b5c = previous\n        instance(x: -275, y: -35) getat_4b9c8a root.Std_k98ojb.List.GetAt {}\n        ifexpression_4b3e8c.else -> continue_1a0d3c\n        ifexpression_4b3e8c.value -> output_eb7c1d\n        ifexpression_4b3e8c.then -> setter_b9c3e2.execute\n        list_0a9f8e -> for_8b0a1d.items\n        for_8b0a1d.item -> ifexpression_4b3e8c.gen_2\n        for_8b0a1d.index -> ifexpression_4b3e8c.gen_0\n        getter_7f6a5d.value -> ifexpression_4b3e8c.gen_1\n        for_8b0a1d.onItem -> ifexpression_4b3e8c.execute\n        for_8b0a1d.done -> continue_1a0d3c\n        for_8b0a1d.item -> setter_b9c3e2.new_value\n        list_0a9f8e -> getat_4b9c8a.list\n        0 -> getat_4b9c8a.index\n        getat_4b9c8a.itemAtIndex -> setter_6f7b5c.new_value\n        execute_1d2a2e -> setter_6f7b5c.execute\n        setter_6f7b5c.continue -> for_8b0a1d.reset\n        setter_b9c3e2.continue -> for_8b0a1d.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_c4a1a9 root.main.is_consecutive {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -280, y: 2, name: \"list\") property(List) list_3f1e9a\n\n        out(x: 1057, y: 5, name: \"output\") property(Bool) output_8c6d4b\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_8c6d4b\n        ifexpression_875761.value -> output_8c6d4b\n        list_3f1e9a -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list_3f1e9a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        setter_38e107.continue -> for_d26972.reset\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_d26972.done -> output_8c6d4b\n        for_d26972.item -> setter_9d4f1c.new_value\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_7a3e0c root.main.is_consecutive {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -280, y: 3, name: \"list\") property(List) list_9a1f6e\n\n        out(x: 1015, y: -4, name: \"output\") property(Bool) output_8b7c0d\n\n        instance(x: 100, y: 13) sort_1e2f2c root.Std_k98ojb.List.Sort {}\n        instance(x: 352, y: -17) for_9a5b3f root.Std_k98ojb.Std.For {}\n        instance(x: 683, y: 0) sub_7d4a8c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1001, y: 13) lessthanorequal_6e9b2f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1003, y: -17) if_7d4a8c root.Std_k98ojb.Std.If {}\n        list_9a1f6e -> sort_1e2f2c.list\n        sort_1e2f2c.sortedList -> for_9a5b3f.items\n        func() {\n            in(x: -192, y: 34, name: \"current\") property(Number) current_8d0f4e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_1c7a5b\n\n            instance(x: 226, y: 56) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) lessthanorequal_7836b4 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_8d0f4e -> sub_c76d2b.first\n            for_9a5b3f.index -> sub_c76d2b.second\n            sub_c76d2b.result -> lesstthanorequal_7836b4.left\n            1 -> lessthanorequal_7836b4.right\n            lessthanorequal_7836b4.result -> output_1c7a5b\n        } -> for_9a5b3f.handler\n        for_9a5b3f.onItem -> if_7d4a8c.execute\n        func() {\n            in(x: -192, y: 34, name: \"current\") property(Number) current_8d0f4e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_1c7a5b\n\n            instance(x: 226, y: 56) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n            current_8d0f4e -> sub_c76d2b.first\n            for_9a5b3f.index -> sub_c76d2b.second\n            sub_c76d2b.result -> output_1c7a5b\n        } -> lessthanorequal_6e9b2f.handler\n        for_9a5b3f.item -> lessthanorequal_6e9b2f.left\n        1 -> lessthanorequal_6e9b2f.right\n        if_7d4a8c.predicate -> sub_7d4a8c.first\n        if_7d4a8c.predicate -> sub_7d4a8c.second\n        for_9a5b3f.index -> sub_7d4a8c.first\n        1 -> sub_7d4a8c.second\n        lessthanorequal_6e9b2f.result -> if_7d4a8c.predicate\n        sort_1e2f2c.sortedList -> for_9a5b3f.items\n        func() {\n            in(x: -192, y: 34, name: \"current\") property(Number) current_8d0f4e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_1c7a5b\n\n            instance(x: 226, y: 56) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n            current_8d0f4e -> sub_c76d2b.first\n            for_9a5b3f.index -> sub_c76d2b.second\n            sub_c76d2b.result -> output_1c7a5b\n        } -> lessthanorequal_6e9b2f.handler\n        if_7d4a8c.then -> output_8b7c0d\n        for_9a5b3f.done -> output_8b7c0d\n    }\n\n    \n\n    instance(x: -67, y: 59) is_consecutive_6e2d9 root.main.is_consecutive {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 3, name: \"list\") property(List) list_1e0a9f\n\n        out(x: 1237, y: -2, name: \"output\") property(Bool) output_5b8c6d\n\n        instance(x: 0, y: 0) for_4a7b9f root.Std_k98ojb.Std.For {}\n        instance(x: 350, y: 1) lessthan_f2e3e8 root.Std_k98ojb.Math.LessThan {}\n        instance(x: 651, y: -5) if_6d0c4a root.Std_k98ojb.Std.If {}\n        instance(x: 1017, y: -15) not_9f8b8c root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -114, y: 40, name: \"current\") property(Number) current_5e1d6a\n\n            out(x: 698, y: 49, name: \"bool\") property(Bool) bool_e9f7c8\n\n            instance(x: 111, y: 34) sub_3b2b4c root.Std_k98ojb.Math.Sub {}\n            current_5e1d6a -> sub_3b2b4c.first\n            for_4a7b9f.index -> sub_3b2b4c.second\n            sub_3b2b4c.result -> lessthan_f2e3e8.left\n            1 -> lessthan_f2e3e8.right\n            lessthan_f2e3e8.result -> bool_e9f7c8\n        } -> if_6d0c4a.predicate\n        list_1e0a9f -> for_4a7b9f.items\n        for_4a7b9f.item -> if_6d0c4a.gen_2\n        for_4a7b9f.index -> if_6d0c4a.gen_0\n        if_6d0c4a.value -> not_9f8b8c.input\n        if_6d0c4a.then -> for_4a7b9f.next\n        if_6d0c4a.else -> for_4a7b9f.reset\n        not_9f8b8c.result -> output_5b8c6d\n    }\n\n    \n\n    instance(x: -64, y: 57) is_consecutive_1e3d4f root.main.is_consecutive {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -285, y: 1, name: \"list\") property(List) list_0e8f6a\n\n        out(x: 555, y: -2, name: \"output\") property(Bool) output_e5c7b4\n\n        instance(x: 774, y: 0) ifexpression_9e1d3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 117, name: \"getter_7a2f6c\") getter_7a2f6c = previous\n        setter(x: 679, y: -317, name: \"setter_e5b8e9\") setter_e5b8e9 = previous\n        instance(x: 321, y: -21) for_d1d0cc root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_e5b8e9\") setter_3a7f6c = previous\n        instance(x: -275, y: -35) getat_4e2d9f root.Std_k98ojb.List.GetAt {}\n        ifexpression_9e1d3c.else -> continue_a96db6\n        ifexpression_9e1d3c.value -> output_e5c7b4\n        ifexpression_9e1d3c.then -> setter_e5b8e9.execute\n        list_0e8f6a -> for_d1d0cc.items\n        for_d1d0cc.item -> ifexpression_9e1d3c.gen_2\n        for_d1d0cc.index -> ifexpression_9e1d3c.gen_0\n        getter_7a2f6c.value -> ifexpression_9e1d3c.gen_1\n        for_d1d0cc.onItem -> ifexpression_9e1d3c.execute\n        for_d1d0cc.done -> continue_a96db6\n        for_d1d0cc.item -> setter_e5b8e9.new_value\n        list_0e8f6a -> getat_4e2d9f.list\n        0 -> getat_4e2d9f.index\n        getat_4e2d9f.itemAtIndex -> setter_3a7f6c.new_value\n        execute_90aaec -> setter_3a7f6c.execute\n        setter_3a7f6c.continue -> for_d1d0cc.reset\n        setter_e5b8e9.continue -> for_d1d0cc.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_2c4a9f root.main.is_consecutive {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -285, y: 3, name: \"list\") property(List) list_1a8d9e\n\n        out(x: 1225, y: -2, name: \"output\") property(Bool) output_6c7f0b\n\n        instance(x: 751, y: 4) ifexpression_3f1c9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 127, name: \"getter_7e8d2a\") getter_7e8d2a = previous\n        setter(x: 679, y: -313, name: \"setter_bf6c0b\") setter_bf6c0b = previous\n        instance(x: 321, y: -20) for_9e3f1c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_bf6c0b\") setter_8a5d2e = previous\n        instance(x: -275, y: -35) getat_4a9d7f root.Std_k98ojb.List.GetAt {}\n        ifexpression_3f1c9f.else -> continue_7c1b6c\n        ifexpression_3f1c9f.value -> output_6c7f0b\n        ifexpression_3f1c9f.then -> setter_bf6c0b.execute\n        list_1a8d9e -> for_9e3f1c.items\n        for_9e3f1c.item -> ifexpression_3f1c9f.gen_2\n        for_9e3f1c.index -> ifexpression_3f1c9f.gen_0\n        getter_7e8d2a.value -> ifexpression_3f1c9f.gen_1\n        for_9e3f1c.onItem -> ifexpression_3f1c9f.execute\n        for_9e3f1c.done -> continue_7c1b6c\n        for_9e3f1c.item -> setter_bf6c0b.new_value\n        list_1a8d9e -> getat_4a9d7f.list\n        0 -> getat_4a9d7f.index\n        getat_4a9d7f.itemAtIndex -> setter_8a5d2e.new_value\n        execute_3c7b9c -> setter_8a5d2e.execute\n        setter_8a5d2e.continue -> for_9e3f1c.reset\n        setter_bf6c0b.continue -> for_9e3f1c.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_7a4dad root.main.is_consecutive {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -277, y: 2, name: \"list\") property(List) list_0a9f8e\n\n        out(x: 443, y: -1, name: \"output\") property(Bool) output_7c6d3b\n\n        instance(x: 188, y: 4) sort_5e2b3f root.Std_k98ojb.List.Sort {}\n        instance(x: 531, y: 0) for_8a9b1c root.Std_k98ojb.Std.For {}\n        instance(x: -39, y: 26, name: \"is_consecutive\") if_5d4e7f root.Std_k98ojb.Std.If {\n            then: \"continue\"\n            else: \"false\"\n        }\n        list_0a9f8e -> sort_5e2b3f.list\n        sort_5e2b3f.sortedList -> for_8a9b1c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_7d0b6e\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_2f3a5e\n\n            instance(x: 112, y: 80) sub_1c8b4c root.Std_k98ojb.Math.Sub {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_7d0b6e -> sub_1c8b4c.first\n            for_8a9b1c.index -> sub_1c8b4c.second\n            sub_1c8b4c.result -> equal_a54bdc.left\n            1 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_2f3a5e\n        } -> if_5d4e7f.predicate\n        for_8a9b1c.onItem -> if_5d4e7f.execute\n        if_5d4e7f.value -> output_7c6d3b\n        for_8a9b1c.done -> \"continue\"\n    }\n\n    \n\n    instance(x: -291, y: 177) is_consecutive_2e0b8f root.main.is_consecutive {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 5, name: \"list\") property(List) list_3e8a6f\n\n        out(x: 1229, y: 0, name: \"output\") property(Bool) output_1c2d7b\n\n        instance(x: 772, y: -11) ifexpression_5e4b2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_5e4b2c.else -> output_1c2d7b\n        ifexpression_5e4b2c.value -> output_1c2d7b\n        list_3e8a6f -> for_d26972.items\n        for_d26972.item -> ifexpression_5e4b2c.gen_2\n        for_d26972.index -> ifexpression_5e4b2c.gen_0\n        getter_b280eb.value -> ifexpression_5e4b2c.gen_1\n        for_d26972.onItem -> ifexpression_5e4b2c.execute\n        for_d26972.done -> output_1c2d7b\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3e8a6f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_f3a7b8 root.main.is_consecutive {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 0, name: \"list\") property(List) list_1a3d9f\n\n        out(x: 1225, y: 11, name: \"output\") property(Bool) output_eb7c6e\n\n        instance(x: 1004, y: 10) ifexpression_8e2f0c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 487, y: 127, name: \"getter_ea7d5f\") getter_ea7d5f = previous\n        setter(x: 932, y: -314, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 465, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_8e2f0c.else -> output_eb7c6e\n        ifexpression_8e2f0c.value -> output_eb7c6e\n        list_1a3d9f -> for_d26972.items\n        for_d26972.item -> ifexpression_8e2f0c.gen_2\n        for_d26972.index -> ifexpression_8e2f0c.gen_0\n        getter_ea7d5f.value -> ifexpression_8e2f0c.gen_1\n        for_d26972.onItem -> ifexpression_8e2f0c.execute\n        for_d26972.done -> output_eb7c6e\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1a3d9f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        ifexpression_8e2f0c.then -> setter_9d4f1c.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_7a5b2c root.main.is_consecutive {}\n\n}"
      ],
      "17": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 11, name: \"sublist\") property(List) sublist_3f8a9e\n        in(x: -298, y: -186, name: \"list\") property(List) list_1c7b0d\n\n        out(x: 1025, y: -110, name: \"output\") property(Bool) output_6e4b1e\n\n        instance(x: 103, y: -178, name: \"is sublist\") filter_3f8a9e root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_7c1d5e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            sublist_3f8a9e -> contains_32727d.list\n            current_7c1d5e -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> filter_3f8a9e.handler\n        list_1c7b0d -> filter_3f8a9e.items\n        instance(x: 103, y: -178) length_8166b0 root.Std_k98ojb.List.Length {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_7c1d5e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            sublist_3f8a9e -> contains_32727d.list\n            current_7c1d5e -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> length_8166b0.handler\n        filter_3f8a9e.output_list -> length_8166b0.items\n        instance(x: 103, y: -178) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        length_8166b0.length -> equal_f89569.left\n        sublist_3f8a9e -> equal_f89569.right\n        equal_f89569.result -> output_6e4b1e\n    }\n\n    \n\n    instance(x: -290, y: 5) is_sublist_2c9d0f root.main.is_sublist {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -280, y: 40, name: \"sublist\") property(List) sublist_0a8f1e\n        in(x: -281, y: -139, name: \"list\") property(List) list_9c7b3d\n\n        out(x: 1056, y: -60, name: \"output\") property(Bool) output_e2f4ee\n\n        instance(x: 1000, y: -61) contains_5a8e1c root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -20, y: -16, name: \"current\") property(List) current_7d3a2f\n\n            out(x: 695, y: 17, name: \"\") property(Bool) _0e8c9f\n\n            instance(x: 226, y: 14) filter_5b4b1f root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -30, y: -25, name: \"current\") property(Number) current_7d3a2f\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n                instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n                instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n                2 -> modulo_c76d2b.divisor\n                0 -> notequal_7836b4.right\n                notequal_7836b4.result -> output_efbc78\n                modulo_c76d2b.result -> notequal_7836b4.left\n                _index_769593 -> modulo_c76d2b.value\n            } -> filter_5b4b1f.handler\n            current_7d3a2f -> filter_5b4b1f.items\n            filter_5b4b1f.output_list -> contains_5a8e1c.list\n            sublist_0a8f1e -> contains_5a8e1c.item\n        } -> list_9c7b3d.map\n        list_9c7b3d.map.output_list -> contains_5a8e1c.list\n        contains_5a8e1c.is_contained -> output_e2f4ee\n    }\n\n    \n\n    instance(x: -290, y: 59) is_sublist_0c6b6c root.main.is_sublist {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 5, name: \"sublist\") property(List) sublist_0a8f9e\n        in(x: -294, y: -170, name: \"list\") property(List) list_1b7d4c\n\n        out(x: 1116, y: -105, name: \"output\") property(Bool) output_e5f2ee\n\n        instance(x: 1013, y: -109) contains_9e0a8 root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -32, y: -25, name: \"current\") property(List) current_1c7d6c\n\n            out(x: 706, y: -10, name: \"output\") property(Bool) output_8e0a3f\n\n            instance(x: 227, y: 4) contains_2b9c1 root.Std_k98ojb.List.Contains {}\n            sublist_0a8f9e -> contains_2b9c1.list\n            current_1c7d6c -> contains_2b9c1.item\n        } -> filter_c5f9a4.handler\n        func() {\n            in(x: -32, y: -25, name: \"current\") property(List) current_1c7d6c\n\n            out(x: 706, y: -10, name: \"output\") property(Bool) output_8e0a3f\n\n            instance(x: 227, y: 4) contains_2b9c1 root.Std_k98ojb.List.Contains {}\n            sublist_0a8f9e -> contains_2b9c1.list\n            current_1c7d6c -> contains_2b9c1.item\n        } -> map_c5f9a4.handler\n        list_1b7d4c -> filter_c5f9a4.items\n        func() {\n            in(x: -32, y: -25, name: \"current\") property(List) current_1c7d6c\n\n            out(x: 706, y: -10, name: \"output\") property(Bool) output_8e0a3f\n\n            instance(x: 227, y: 4) contains_2b9c1 root.Std_k98ojb.List.Contains {}\n            sublist_0a8f9e -> contains_2b9c1.list\n            current_1c7d6c -> contains_2b9c1.item\n        } -> map_c5f9a4.handler\n        filter_c5f9a4.output_list -> map_c5f9a4.items\n        map_c5f9a4.output_list -> contains_9e0a8.list\n        true -> contains_9e0a8.item\n        contains_9e0a8.is_contained -> output_e5f2ee\n    }\n\n    \n\n    instance(x: -290, y: 15) is_sublist_7b4c1d root.main.is_sublist {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 30, name: \"sublist\") property(List) sublist_3f1a2b\n        in(x: -293, y: -110, name: \"list\") property(List) list_0c9d7e\n\n        out(x: 1005, y: -20, name: \"output\") property(Bool) output_e8f4f6\n\n        instance(x: 107, y: -19) contains_3b1a8f root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -193, y: 30, name: \"sublist\") property(List) sublist_7e9c2d\n            in(x: -192, y: -110, name: \"list\") property(List) list_3f1a8b\n\n            out(x: 1005, y: -20, name: \"output\") property(Bool) output_0b6c4f\n\n            instance(x: 107, y: -19) contains_3b1a8f root.Std_k98ojb.List.Contains {}\n            func() {\n                in(x: -193, y: 30, name: \"sublist\") property(List) sublist_7e9c2d\n                in(x: -192, y: -110, name: \"list\") property(List) list_3f1a8b\n\n                out(x: 1005, y: -20, name: \"output\") property(Bool) output_0b6c4f\n\n                instance(x: 107, y: -19) contains_3b1a8f root.Std_k98ojb.List.Contains {}\n                func() {\n                    in(x: -193, y: 30, name: \"sublist\") property(List) sublist_7e9c2d\n                    in(x: -192, y: -110, name: \"list\") property(List) list_3f1a8b\n\n                    out(x: 1005, y: -20, name: \"output\") property(Bool) output_0b6c4f\n\n                    instance(x: 107, y: -19) contains_3b1a8f root.Std_k98ojb.List.Contains {}\n                    sublist_7e9c2d -> contains_3b1a8f.list\n                    list_3f1a8b -> contains_3b1a8f.item\n                    contains_3b1a8f.is_contained -> output_0b6c4f\n                } -> filter_c91965.handler\n                instance(x: -92, y: 30) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n                sublist_7e9c2d -> filter_c91965.items\n                func() {\n                    in(x: -192, y: -110, name: \"current\") property(Any) current_0a8f3f\n\n                    out(x: 1005, y: -20, name: \"output\") property(Bool) output_7c9d6e\n\n                    instance(x: 107, y: -19) contains_3b1a8f root.Std_k98ojb.List.Contains {}\n                    current_0a8f3f -> contains_3b1a8f.item\n                    list_3f1a8b -> contains_3b1a8f.list\n                    contains_3b1a8f.is_contained -> output_7c9d6e\n                } -> map_c73e3b.handler\n                instance(x: -92, y: -110) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n                list_3f1a8b -> map_c73e3b.items\n                func() {\n                    in(x: -192, y: -110, name: \"current\") property(Any) current_0a8f3f\n\n                    out(x: 1005, y: -20, name: \"output\") property(List) output_7c9d6e\n\n                    instance(x: 107, y: -19) contains_3b1a8f root.Std_k98ojb.List.Contains {}\n                    current_0a8f3f -> contains_3b1a8f.item\n                    list_3f1a8b -> contains_3b1a8f.list\n                    contains_3b1a8f.is_contained -> output_7c9d6e\n                } -> reduce_5e4b2a.handler\n                instance(x: -92, y: -110) reduce_5e4b2a root.Std_k98ojb.Iteration.Reduce {}\n                map_c73e3b.output_list -> reduce_5e4b2a.items\n                func() {\n                    in(x: -192, y: -110, name: \"current\") property(Any) current_0a8f3f\n\n                    out(x: 1005, y: -20, name: \"output\") property(List) output_7c9d6e\n\n                    instance(x: 107, y: -19) contains_3b1a8f root.Std_k98ojb.List.Contains {}\n                    current_0a8f3f -> contains_3b1a8f.item\n                    list_3f1a8b -> contains_3b1a8f.list\n                    contains_3b1a8f.is_contained -> output_7c9d6e\n                } -> filter_c91965.handler\n                sublist_7e9c2d -> filter_c91965.items\n                func() {\n                    in(x: -192, y: -110, name: \"current\") property(Any) current_0a8f3f\n\n                    out(x: 1005, y: -20, name: \"output\") property(List) output_7c9d6e\n\n                    instance(x: 107, y: -19) contains_3b1a8f root.Std_k98ojb.List.Contains {}\n                    current_0a8f3f -> contains_3b1a8f.item\n                    list_3f1a8b -> contains_3b1a8f.list\n                    contains_3b1a8f.is_contained -> output_7c9d6e\n                } -> map_c73e3b.handler\n                sublist_7e9c2d -> map_c73e3b.items\n                func() {\n                    in(x: -192, y: -110, name: \"current\") property(Any) current_0a8f3f\n\n                    out(x: 1005, y: -20, name: \"output\") property(List) output_7c9d6e\n\n                    instance(x: 107, y: -19) contains_3b1a8f root.Std_k98ojb.List.Contains {}\n                    current_0a8f3f -> contains_3b1a8f.item\n                    list_3f1a8b -> contains_3b1a8f.list\n                    contains_3b1a8f.is_contained -> output_7c9d6e\n                } -> reduce_5e4b2a.handler\n                map_c73e3b.output_list -> reduce_5e4b2a.items\n                func() {\n                    in(x: -192, y: -110, name: \"current\") property(Any) current_0a8f3f\n\n                    out(x: 1005, y: -20, name: \"output\") property(List) output_7c9d6e\n\n                    instance(x: 107, y: -19) contains_3b1a8f root.Std_k98ojb.List.Contains {}\n                    current_0a8f3f -> contains_3b1a8f.item\n                    list_3f1a8b -> contains_3b1a8f.list\n                    contains_3b1a8f.is_contained -> output_7c9d6e\n                } -> filter_c91965.handler\n                reduce_5e4b2a.result -> filter_c91965.items\n                func() {\n                    in(x: -192, y: -110, name: \"current\") property(Any) current_0a8f3f\n\n                    out(x: 1005, y: -20, name: \"output\") property(List) output_7c9d6e\n\n                    instance(x: 107, y: -19) contains_3b1a8f root.Std_k98ojb.List.Contains {}\n                    current_0a8f3f -> contains_3b1a8f.item\n                    list_3f1a8b -> contains_3b1a8f.list\n                    contains_3b1a8f.is_contained -> output_7c9d6e\n                } -> map_c73e3b.handler\n                filter_c91965.output_list -> map_c73e3b.items\n                func() {\n                    in(x: -192, y: -110",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -298, y: 11, name: \"sublist\") property(List) sublist_1f9d5a\n        in(x: -300, y: -186, name: \"list\") property(List) list_0b075e\n\n        out(x: 1027, y: -105, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 104, y: -187) contains_32727d root.Std_k98ojb.List.Contains {}\n        sublist_1f9d5a -> contains_32727d.list\n        list_0b075e -> contains_32727d.item\n        contains_32727d.is_contained -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: -121) is_sublist_15f9e9 root.main.is_sublist {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 15, name: \"sublist\") property(List) sublist_0f8a3e\n        in(x: -280, y: -169, name: \"list\") property(List) list_7b2c6d\n\n        out(x: 1065, y: -120, name: \"output\") property(Bool) output_9f1a4d\n\n        instance(x: 1058, y: -204) contains_0e3e0c root.Std_k98ojb.List.Contains {}\n        instance(x: 1037, y: -35) filter_6a2f9c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -23, y: -16, name: \"current\") property(List) current_1e0d3e\n\n            out(x: 702, y: -28, name: \"output\") property(Bool) output_9a7f2c\n\n            instance(x: 226, y: -22) contains_5b8f4f root.Std_k98ojb.List.Contains {}\n            sublist_0f8a3e -> contains_5b8f4f.list\n            current_1e0d3e -> contains_5b8f4f.item\n            contains_5b8f4f.is_contained -> output_9a7f2c\n        } -> filter_6a2f9c.handler\n        list_7b2c6d -> filter_6a2f9c.items\n        func() {\n            in(x: -192, y: 56, name: \"current\") property(List) current_8e3b1e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_e7d0a4\n\n            instance(x: 226, y: 52) contains_5b8f4f root.Std_k98ojb.List.Contains {}\n            sublist_0f8a3e -> contains_5b8f4f.list\n            current_8e3b1e -> contains_5b8f4f.item\n            contains_5b8f4f.is_contained -> output_e7d0a4\n        } -> contains_0e3e0c.handler\n        filter_6a2f9c.output_list -> contains_0e3e0c.list\n        contains_0e3e0c.is_contained -> output_9f1a4d\n    }\n\n    \n\n    instance(x: -278, y: 15) is_sublist_a8b5a7 root.main.is_sublist {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 30, name: \"sublist\") property(List) sublist_1d0a8f\n        in(x: -277, y: -137, name: \"list\") property(List) list_7c2e9b\n\n        out(x: 1056, y: -107, name: \"output\") property(Bool) output_e5f3ad\n\n        instance(x: 1041, y: -138) contains_8a0d4 root.Std_k98ojb.List.Contains {}\n        sublist_1d0a8f -> contains_8a0d4.item\n        list_7c2e9b -> contains_8a0d4.list\n        contains_8a0d4.is_contained -> output_e5f3ad\n    }\n\n    \n\n    instance(x: -291, y: 59) is_sublist_f6f8c1 root.main.is_sublist {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -277, y: 166, name: \"list1\") property(List) list_09fcba\n        in(x: -39, y: 257, name: \"list2\") property(List) ``First even number_0b1361``\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_edc2e3\n\n        instance(x: 532, y: 147) mul_7e1ce0 root.Std_k98ojb.Math.Mul {}\n        instance(x: -39, y: 26, name: \"First even number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"First odd number\") ``First even number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        list_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) is_sublist_f53d27 root.main.is_sublist {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -287, y: 11, name: \"sublist\") property(List) sublist_3a8d6f\n        in(x: -286, y: -177, name: \"list\") property(List) list_1b9e4c\n\n        out(x: 1067, y: -95, name: \"output\") property(Bool) output_2f0c8f\n\n        instance(x: 1025, y: -99) contains_6d3a2f root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -28, y: -21, name: \"current\") property(List) current_7e1e0c\n            in(x: -18, y: 53, name: \"_index\") property(Number) _index_3a8d6f\n\n            out(x: 700, y: 47, name: \"output\") property(Bool) output_e5b9ea\n\n            instance(x: 210, y: 50) contains_7e1c0c root.Std_k98ojb.List.Contains {}\n            func() {\n                in(x: -28, y: -21, name: \"current\") property(List) current_7e1e0c\n                in(x: -18, y: 53, name: \"_index\") property(Number) _index_3a8d6f\n\n                out(x: 700, y: 47, name: \"output\") property(Bool) output_e5b9ea\n\n                instance(x: 210, y: 50) contains_7e1c0c root.Std_k98ojb.List.Contains {}\n                func() {\n                    in(x: -28, y: -21, name: \"current\") property(List) current_7e1e0c\n                    in(x: -18, y: 53, name: \"_index\") property(Number) _index_3a8d6f\n\n                    out(x: 700, y: 47, name: \"output\") property(Bool) output_e5b9ea\n\n                    instance(x: 210, y: 50) contains_7e1c0c root.Std_k98ojb.List.Contains {}\n                    sublist_3a8d6f -> contains_7e1c0c.list\n                    current_7e1e0c -> contains_7e1c0c.item\n                } -> contains_7e1c0c.handler\n                list_1b9e4c -> contains_7e1c0c.list\n                _index_3a8d6f -> contains_7e1c0c.index\n            } -> contains_7e1c0c.handler\n            list_1b9e4c -> contains_7e1c0c.list\n            current_7e1e0c -> contains_7e1c0c.item\n        } -> contains_7e1c0c.handler\n        contains_7e1c0c.result -> output_e5b9ea\n        list_1b9e4c -> contains_6d3a2f.list\n        sublist_3a8d6f -> contains_6d3a2f.item\n        contains_6d3a2f.is_contained -> output_2f0c8f\n    }\n\n    \n\n    instance(x: -287, y: 11) is_sublist_ae1b9f root.main.is_sublist {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -280, y: 0, name: \"sublist\") property(List) sublist_3f9a8e\n        in(x: -281, y: 145, name: \"list\") property(List) list_7b1c4d\n\n        out(x: 1115, y: 65, name: \"output\") property(Bool) output_6e2f0d\n\n        instance(x: 1058, y: -10) contains_3a9a2f root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -230, y: 60, name: \"sublist\") property(List) sublist_7c1e6\n            in(x: -232, y: 175, name: \"list\") property(List) list_8a0d9\n\n            out(x: 702, y: 95, name: \"output\") property(Bool) output_5f2b4\n\n            instance(x: 246, y: 120) map_7e1c6f root.Std_k98ojb.Iteration.Map {}\n            func() {\n                in(x: -192, y: 80, name: \"current\") property(Number) current_8a0d9\n                out(x: 521, y: 93, name: \"\") property(List) _7dd980\n\n                instance(x: 74, y: 78) slice_5e1c6f root.Std_k98ojb.List.Slice {}\n                list_8a0d9 -> slice_5e1c6f.list\n                current_8a0d9 -> slice_5e1c6f.start\n                -1 -> slice_5e1c6f.end\n                slice_5e1c6f.slice -> _7dd980\n            } -> map_7e1c6f.handler\n            list_8a0d9 -> map_7e1c6f.items\n            func() {\n                in(x: -192, y: 80, name: \"current\") property(List) current_8a0d9\n\n                out(x: 521, y: 93, name: \"\") property(Bool) _7dd980\n\n                instance(x: 74, y: 78) contains_5e1c6f root.Std_k98ojb.List.Contains {}\n                sublist_7c1e6 -> contains_5e1c6f.item\n                current_8a0d9 -> contains_5e1c6f.list\n                contains_5e1c6f.is_contained -> _7dd980\n            } -> filter_c91965.handler\n            map_7e1c6f.output_list -> filter_c91965.items\n            instance(x: 146, y: -97) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -192, y: -25, name: \"current\") property(Bool) current_81298e\n\n                out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n                instance(x: 74, y: -23) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n                current_81298e -> notequal_cb8a55.left\n                false -> notequal_cb8a55.right\n                notequal_cb8a55.result -> bool_4524be\n            } -> map_c73e3b.handler\n            filter_c91965.output_list -> map_c73e3b.items\n            instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n            func() {\n                in(x: -192, y: -25, name: \"current\") property(Bool) current_81298e\n\n                out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n                instance(x: 74, y: -23) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n                current_81298e -> notequal_cb8a55.left\n                false -> notequal_cb8a55.right\n                notequal_cb8a55.result -> bool_4524be\n            } -> map_c73e3b.handler\n            filter_c91965.output_list -> map_c73e3b.items\n            instance(x: 1058, y: -203) contains_32727d root.Std_k98ojb.List.Contains {}\n            map_c73e3b.output_list -> contains_32727d.list\n            false -> contains_32727d.item\n            contains_32727d.is_contained -> output_5f2b4\n        } -> contains_3a9a2f.handler\n        list_7b1c4d -> contains_3a9a2f.list\n        sublist_3f9a8e -> contains_3a9a2f.item\n        contains_3a9a2f.is_contained -> output_6e2f0d\n    }\n\n    \n\n    instance(x: -293, y: 59) is_sublist_node root.main.is_sublist {}\n}"
      ],
      "27": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 2, name: \"list\") property(List) list_3a1f9e\n        in(x: -314, y: -224, name: \"execute\") trigger() execute_5c7d8b\n\n        out(x: 1066, y: -223, name: \"continue\") trigger() continue_e2c4ed\n        out(x: 1053, y: 28, name: \"output\") property(Number) output_1e0a1f\n\n        instance(x: 0, y: 0) for_9d5b8f root.Std_k98ojb.Std.For {}\n        instance(x: 321, y: -20) ifexpression_7c2b6e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_7c2b6e.else -> continue_e2c4ed\n        ifexpression_7c2b6e.value -> output_1e0a1f\n        ifexpression_7c2b6e.then -> setter_9d4f1c.execute\n        list_3a1f9e -> for_9d5b8f.items\n        for_9d5b8f.item -> ifexpression_7c2b6e.gen_2\n        for_9d5b8f.index -> ifexpression_7c2b6e.gen_0\n        getter_b280eb.value -> ifexpression_7c2b6e.gen_1\n        for_9d5b8f.onItem -> ifexpression_7c2b6e.execute\n        for_9d5b8f.done -> continue_e2c4ed\n        for_9d5b8f.item -> setter_9d4f1c.new_value\n        list_3a1f9e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        execute_5c7d8b -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> for_9d5b8f.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_6a2e3c root.main.find_missing {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 2, name: \"list\") property(List) list_1a9f8e\n        in(x: -316, y: -224, name: \"execute\") trigger() execute_5c7b3d\n\n        out(x: 1056, y: -228, name: \"continue\") trigger() continue_e4f0ba\n        out(x: 1049, y: 156, name: \"output\") property(Number) output_1e2a8e\n\n        instance(x: 0, y: 0) for_5c7b3d root.Std_k98ojb.Std.For {}\n        instance(x: 324, y: -19) ifexpression_e9f4f6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 336, y: 160, name: \"getter_7a2d8e\") getter_7a2d8e = previous\n        setter(x: 678, y: -313, name: \"setter_e9b3f6\") setter_e9b3f6 = previous\n        instance(x: 322, y: -21) getat_c5c0f1 root.Std_k98ojb.List.GetAt {}\n        ifexpression_e9f4f6.else -> continue_e4f0ba\n        ifexpression_e9f4f6.value -> output_1e2a8e\n        ifexpression_e9f4f6.then -> setter_e9b3f6.execute\n        list_1a9f8e -> for_5c7b3d.items\n        for_5c7b3d.item -> ifexpression_e9f4f6.gen_2\n        for_5c7b3d.index -> ifexpression_e9f4f6.gen_0\n        getter_7a2d8e.value -> ifexpression_e9f4f6.gen_1\n        for_5c7b3d.onItem -> ifexpression_e9f4f6.execute\n        for_5c7b3d.done -> continue_e4f0ba\n        for_5c7b3d.item -> setter_e9b3f6.new_value\n        list_1a9f8e -> getat_c5c0f1.list\n        0 -> getat_c5c0f1.index\n        getat_c5c0f1.itemAtIndex -> setter_e9b3f6.new_value\n        execute_5c7b3d -> setter_e9b3f6.execute\n        setter_e9b3f6.continue -> for_5c7b3d.reset\n    }\n\n    \n\n    instance(x: -10, y: 129) find_missing_2a8e0f root.main.find_missing {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -279, y: 0, name: \"list\") property(List) list_2d9f8e\n        in(x: -280, y: -246, name: \"execute\") trigger() execute_1b3a5c\n\n        out(x: 1017, y: -242, name: \"continue\") trigger() continue_6e0f1b\n        out(x: 1022, y: 20, name: \"output\") property(Number) output_8d9d7f\n\n        instance(x: 0, y: 0, name: \"for_3c5a4f\") for_3c5a4f root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0, name: \"ifexpression_e1e8d7\") ifexpression_e1e8d7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -0, y: 0, name: \"getter_3a5c6f\") getter_3a5c6f = previous\n        setter(x: 0, y: 0, name: \"setter_7d9e8f\") setter_7d9e8f = previous\n        instance(x: -0, y: 0, name: \"setter_7d9e8f\") setter_7d9e8f = index\n        list_2d9f8e -> for_3c5a4f.items\n        execute_1b3a5c -> setter_7d9e8f.execute\n        0 -> setter_7d9e8f.new_value\n        ifexpression_e1e8d7.then -> setter_7d9e8f.execute\n        for_3c5a4f.item -> ifexpression_e1e8d7.gen_2\n        for_3c5a4f.index -> ifexpression_e1e8d7.gen_0\n        getter_3a5c6f.value -> ifexpression_e1e8d7.gen_1\n        for_3c5a4f.onItem -> ifexpression_e1e8d7.execute\n        ifexpression_e1e8d7.else -> for_3c5a4f.next\n        ifexpression_e1e8d7.value -> output_8d9d7f\n        setter_7d9e8f.continue -> for_3c5a4f.next\n        ifexpression_e1e8d7.then -> setter_7d9e8f.new_value\n        for_3c5a4f.index -> setter_7d9e8f.new_value\n        for_3c5a4f.done -> continue_6e0f1b\n        setter_7d9e8f.continue -> continue_6e0f1b\n    }\n\n    \n\n    instance(x: -34, y: 127) find_missing_2b9d4f root.main.find_missing {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -279, y: 2, name: \"list\") property(List) list_3a9f5e\n        in(x: -299, y: -224, name: \"execute\") trigger() execute_eb0c8d\n\n        out(x: 1021, y: -223, name: \"continue\") trigger() continue_6b7d4e\n        out(x: 1012, y: 148, name: \"output\") property(Number) output_3f9a7e\n\n        instance(x: 0, y: 0) for_1c5c8e root.Std_k98ojb.Std.For {}\n        instance(x: 323, y: -12) ifexpression_e6d4ea root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 0, y: 0, name: \"getter_9cceb3\") getter_9cceb3 = previous\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_e6d4ea.else -> continue_6b7d4e\n        ifexpression_e6d4ea.value -> output_3f9a7e\n        ifexpression_e6d4ea.then -> setter_9d4f1c.execute\n        list_3a9f5e -> for_1c5c8e.items\n        for_1c5c8e.item -> ifexpression_e6d4ea.gen_2\n        for_1c5c8e.index -> ifexpression_e6d4ea.gen_0\n        getter_9cceb3.value -> ifexpression_e6d4ea.gen_1\n        for_1c5c8e.onItem -> ifexpression_e6d4ea.execute\n        for_1c5c8e.done -> continue_6b7d4e\n        for_1c5c8e.item -> setter_9d4f1c.new_value\n        list_3a9f5e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        execute_eb0c8d -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> for_1c5c8e.reset\n    }\n\n    \n\n    instance(x: -34, y: 127) find_missing_2a7c6f root.main.find_missing {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 2, name: \"list\") property(List) list_9f0a1e\n        in(x: -302, y: -223, name: \"execute\") trigger() execute_7b8c5d\n\n        out(x: 1056, y: -224, name: \"continue\") trigger() continue_4b3f8f\n        out(x: 1049, y: 50, name: \"output\") property(Number) output_2a0e6e\n\n        instance(x: 0, y: 0) for_1d5c7f root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0) ifexpression_a8d9a4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index != current\"\n        }\n        getter(x: -6, y: 52, name: \"getter_1f7c2e\") getter_1f7c2e = index\n        setter(x: 0, y: 0, name: \"setter_9b8d5a\") setter_9b8d5a = index\n        instance(x: 428, y: -216) add_a6a3a4 root.Std_k98ojb.Math.Add {}\n        list_9f0a1e -> for_1d5c7f.items\n        execute_7b8c5d -> setter_9b8d5a.execute\n        0 -> setter_9b8d5a.new_value\n        getter_1f7c2e.value -> ifexpression_a8d9a4.gen_0\n        for_1d5c7f.item -> ifexpression_a8d9a4.gen_1\n        add_a6a3a4.result -> output_2a0e6e\n        1 -> add_a6a3a4.second\n        getter_1f7c2e.value -> add_a6a3a4.first\n        for_1d5c7f.onItem -> ifexpression_a8d9a4.execute\n        ifexpression_a8d9a4.then -> output_2a0e6e\n        ifexpression_a8d9a4.else -> setter_9b8d5a.new_value\n        for_1d5c7f.index -> setter_9b8d5a.new_value\n        for_1d5c7f.done -> continue_4b3f8f\n        setter_9b8d5a.continue -> for_1d5c7f.reset\n        ifexpression_a8d9a4.value -> output_2a0e6e\n        setter_9b8d5a.continue -> for_1d5c7f.next\n    }\n\n    \n\n    instance(x: -175, y: 17) find_missing_3c9c1e root.main.find_missing {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 2, name: \"list\") property(List) list_1a8f5e\n        in(x: -300, y: -224, name: \"execute\") trigger() execute_e9c3b7\n\n        out(x: 1000, y: -226, name: \"continue\") trigger() continue_6d2f4e\n        out(x: 1011, y: 8, name: \"output\") property(Number) output_5a7b4f\n\n        instance(x: 15, y: -225, name: \"for\") for_3c0f8c root.Std_k98ojb.Std.For {}\n        instance(x: 340, y: 60) ifexpression_1d9e2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_1d9e2f.else -> continue_6d2f4e\n        ifexpression_1d9e2f.value -> output_5a7b4f\n        ifexpression_1d9e2f.then -> setter_9d4f1c.execute\n        list_1a8f5e -> for_3c0f8c.items\n        for_3c0f8c.item -> ifexpression_1d9e2f.gen_2\n        for_3c0f8c.index -> ifexpression_1d9e2f.gen_0\n        getter_b280eb.value -> ifexpression_1d9e2f.gen_1\n        for_3c0f8c.onItem -> ifexpression_1d9e2f.execute\n        for_3c0f8c.done -> continue_6d2f4e\n        for_3c0f8c.item -> setter_9d4f1c.new_value\n        list_1a8f5e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        execute_e9c3b7 -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> for_3c0f8c.reset\n    }\n\n    \n\n    instance(x: -10, y: 159) find_missing_6e6bfd root.main.find_missing {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 1, name: \"list\") property(List) list_9e8b5f\n        in(x: -296, y: -227, name: \"execute\") trigger() execute_6c2a3d\n\n        out(x: 1017, y: -223, name: \"continue\") trigger() continue_1f4c8f\n        out(x: 1009, y: 145, name: \"output\") property(Number) output_5e0b9e\n\n        instance(x: 465, y: 93) ifexpression_ea2d7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_9e8f5f\") getter_9e8f5f = previous\n        setter(x: 679, y: -313, name: \"setter_6b7d2c\") setter_6b7d2c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_ea2d7c.else -> continue_1f4c8f\n        ifexpression_ea2d7c.value -> output_5e0b9e\n        ifexpression_ea2d7c.then -> setter_6b7d2c.execute\n        list_9e8b5f -> for_d26972.items\n        for_d26972.item -> ifexpression_ea2d7c.gen_2\n        for_d26972.index -> ifexpression_ea2d7c.gen_0\n        getter_9e8f5f.value -> ifexpression_ea2d7c.gen_1\n        for_d26972.onItem -> ifexpression_ea2d7c.execute\n        for_d26972.done -> continue_1f4c8f\n        for_d26972.item -> setter_6b7d2c.new_value\n        list_9e8b5f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_6c2a3d -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_6b7d2c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_f5f8a1 root.main.find_missing {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -280, y: 0, name: \"list\") property(List) list_2e9f8d\n        in(x: -299, y: -240, name: \"execute\") trigger() execute_1b3a5c\n\n        out(x: 1016, y: -243, name: \"continue\") trigger() continue_7f0f8b\n        out(x: 1009, y: 18, name: \"output\") property(Number) output_4d2e0f\n\n        instance(x: 0, y: 0, name: \"for_3c6a5d\") for_3c6a5d root.Std_k98ojb.Std.For {}\n        instance(x: 328, y: -18, name: \"ifexpression_1e7c2f\") ifexpression_1e7c2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 332, y: 92, name: \"getter_e9a3d5\") getter_e9a3d5 = previous\n        setter(x: 683, y: -310, name: \"setter_7e2b42\") setter_7e2b42 = previous\n        instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_1e7c2f.else -> continue_7f0f8b\n        ifexpression_1e7c2f.value -> output_4d2e0f\n        ifexpression_1e7c2f.then -> setter_7e2b42.execute\n        list_2e9f8d -> for_3c6a5d.items\n        for_3c6a5d.item -> ifexpression_1e7c2f.gen_2\n        for_3c6a5d.index -> ifexpression_1e7c2f.gen_0\n        getter_e9a3d5.value -> ifexpression_1e7c2f.gen_1\n        for_3c6a5d.onItem -> ifexpression_1e7c2f.execute\n        for_3c6a5d.done -> continue_7f0f8b\n        for_3c6a5d.item -> setter_7e2b42.new_value\n        list_2e9f8d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_7e2b42.new_value\n        execute_1b3a5c -> setter_7e2b42.execute\n        setter_7e2b42.continue -> for_3c6a5d.reset\n    }\n\n    \n\n    instance(x: -34, y: 127) find_missing_8f9f9f root.main.find_missing {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -305, y: 2, name: \"list\") property(List) list_3e8b1f\n        in(x: -320, y: -225, name: \"execute\") trigger() execute_9c6d4a\n\n        out(x: 1015, y: -227, name: \"continue\") trigger() continue_e2f7ee\n        out(x: 1008, y: 147, name: \"output\") property(Number) output_3b1e1c\n\n        instance(x: 0, y: 0) for_9d5a8a root.Std_k98ojb.Std.For {}\n        instance(x: 323, y: -6) ifexpression_4f2f7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 0, y: 0, name: \"getter_8e9c3d\") getter_8e9c3d = previous\n        setter(x: -187, y: -246, name: \"setter_6a6081\") setter_6a6081 = previous\n        instance(x: 780, y: -125) setter_60cfcd root.Std_k98ojb.Setting.Setter {\n            new_value: index\n        }\n        list_3e8b1f -> for_9d5a8a.items\n        execute_9c6d4a -> setter_6a6081.execute\n        -1 -> setter_6a6081.new_value\n        ifexpression_4f2f7f.else -> continue_e2f7ee\n        ifexpression_4f2f7f.value -> output_3b1e1c\n        ifexpression_4f2f7f.then -> setter_60cfcd.execute\n        for_9d5a8a.onItem -> ifexpression_4f2f7f.execute\n        getter_8e9c3d.value -> ifexpression_4f2f7f.gen_1\n        for_9d5a8a.index -> ifexpression_4f2f7f.gen_0\n        for_9d5a8a.item -> ifexpression_4f2f7f.gen_2\n        setter_6a6081.continue -> for_9d5a8a.reset\n        for_9d5a8a.done -> continue_e2f7ee\n        setter_60cfcd.continue -> for_9d5a8a.next\n    }\n\n    \n\n    instance(x: -203, y: -53) find_missing_9181e6 root.main.find_missing {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 0, name: \"list\") property(List) list_9f8d1e\n        in(x: -309, y: -246, name: \"execute\") trigger() execute_ea7c5b\n\n        out(x: 1043, y: -250, name: \"continue\") trigger() continue_6a2c4f\n        out(x: 1038, y: 0, name: \"output\") property(Number) output_1e9d3f\n\n        instance(x: 15, y: -247, name: \"for\") for_7b5b1f root.Std_k98ojb.Std.For {}\n        instance(x: 340, y: -6) ifexpression_4a2c0e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 330, y: 20, name: \"getter_e9d5f7\") getter_e9d5f7 = previous\n        setter(x: 690, y: -248, name: \"setter_8c3e2b\") setter_8c3e2b = previous\n        instance(x: 0, y: 0, name: \"set_previous\") setter_1a6d9f root.Std_k98ojb.Setting {}\n        list_9f8d1e -> for_7b5b1f.items\n        execute_ea7c5b -> setter_1a6d9f.execute\n        0 -> setter_1a6d9f.new_value\n        setter_1a6d9f.continue -> for_7b5b1f.reset\n        ifexpression_4a2c0e.then -> setter_8c3e2b.execute\n        for_7b5b1f.item -> ifexpression_4a2c0e.gen_2\n        for_7b5b1f.index -> ifexpression_4a2c0e.gen_0\n        getter_e9d5f7.value -> ifexpression_4a2c0e.gen_1\n        for_7b5b1f.onItem -> ifexpression_4a2c0e.execute\n        ifexpression_4a2c0e.else -> for_7b5b1f.next\n        for_7b5b1f.done -> continue_6a2c4f\n        setter_8c3e2b.continue -> for_7b5b1f.next\n        ifexpression_4a2c0e.value -> output_1e9d3f\n        for_7b5b1f.item -> setter_8c3e2b.new_value\n    }\n\n    \n\n    instance(x: -198, y: 10) find_missing_6a6c7f root.main.find_missing {}\n}"
      ],
      "31": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5c3d9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7e8a6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9c4c7c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5c3d9f.input\n        \" \" -> replace_5c3d9f.search\n        \":\" -> replace_5c3d9f.replace\n        replace_5c3d9f.output -> replace_7e8a6f.input\n        \",\" -> replace_7e8a6f.search\n        \":\" -> replace_7e8a6f.replace\n        replace_7e8a6f.output -> replace_9c4c7c.input\n        \".\" -> replace_9c4c7c.search\n        \":\" -> replace_9c4c7c.replace\n        replace_9c4c7c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_d3e8d1 root.main.replace_spaces_commas_dots {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -198, y: 0, name: \"input\") property(String) input_9f1b3e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_8a7c6d\n\n        instance(x: 0, y: 0) replace_4d1d5e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_3f9b2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_6a8c9f root.Std_k98ojb.Strings.Replace {}\n        input_9f1b3e -> replace_4d1d5e.input\n        \" \" -> replace_4d1d5e.search\n        \":\" -> replace_4d1d5e.replace\n        replace_4d1d5e.output -> replace_3f9b2d.input\n        \",\" -> replace_3f9b2d.search\n        \":\" -> replace_3f9b2d.replace\n        replace_3f9b2d.output -> replace_6a8c9f.input\n        \".\" -> replace_6a8c9f.search\n        \":\" -> replace_6a8c9f.replace\n        replace_6a8c9f.output -> output_8a7c6d\n    }\n\n    \n\n    instance(x: -93, y: 30) replace_spaces_commas_dots_2b3e5c root.main.replace_spaces_commas_dots {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -199, y: 0, name: \"input\") property(String) input_9f1b2e\n\n        out(x: 506, y: -2, name: \"output\") property(String) output_7a8d3c\n\n        instance(x: 0, y: 0) replace_spaces root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_commas root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_dots root.Std_k98ojb.Strings.Replace {}\n        input_9f1b2e -> replace_spaces.input\n        \" \" -> replace_spaces.search\n        \":\" -> replace_spaces.replace\n        replace_spaces.output -> replace_commas.input\n        \",\" -> replace_commas.search\n        \":\" -> replace_commas.replace\n        replace_commas.output -> replace_dots.input\n        \".\" -> replace_dots.search\n        \":\" -> replace_dots.replace\n        replace_dots.output -> output_7a8d3c\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_spaces_commas_dots_9e4f2b root.main.replace_spaces_commas_dots {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5c8f7e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a4d9c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6e9a8c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5c8f7e.input\n        \" \" -> replace_5c8f7e.search\n        \":\" -> replace_5c8f7e.replace\n        replace_5c8f7e.output -> replace_3a4d9c.input\n        \",\" -> replace_3a4d9c.search\n        \":\" -> replace_3a4d9c.replace\n        replace_3a4d9c.output -> replace_6e9a8c.input\n        \".\" -> replace_6e9a8c.search\n        \":\" -> replace_6e9a8c.replace\n        replace_6e9a8c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_d5b7d1 root.main.replace_spaces_commas_dots {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3c8d7e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5f9a4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c6e7da root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3c8d7e.input\n        \" \" -> replace_3c8d7e.search\n        \":\" -> replace_3c8d7e.replace\n        replace_3c8d7e.output -> replace_5f9a4c.input\n        \",\" -> replace_5f9a4c.search\n        \":\" -> replace_5f9a4c.replace\n        replace_5f9a4c.output -> replace_c6e7da.input\n        \".\" -> replace_c6e7da.search\n        \":\" -> replace_c6e7da.replace\n        replace_c6e7da.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_9f3d4c root.main.replace_spaces_commas_dots {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -156, y: 2, name: \"input\") property(String) input_1d0f8e\n\n        out(x: 504, y: -6, name: \"output\") property(String) output_5a7b4c\n\n        instance(x: 92, y: -11) replace_9e3a2c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: 41) replace_8d1f1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 95, y: 93) replace_6e7c5e root.Std_k98ojb.Strings.Replace {}\n        input_1d0f8e -> replace_9e3a2c.input\n        \" \" -> replace_9e3a2c.search\n        \":\" -> replace_9e3a2c.replace\n        replace_9e3a2c.output -> replace_8d1f1f.input\n        \",\" -> replace_8d1f1f.search\n        \":\" -> replace_8d1f1f.replace\n        replace_8d1f1f.output -> replace_6e7c5e.input\n        \".\" -> replace_6e7c5e.search\n        \":\" -> replace_6e7c5e.replace\n        replace_6e7c5e.output -> output_5a7b4c\n    }\n\n    \n\n    instance(x: -140, y: 31) replace_1f3d8f root.main.replace {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -227, y: 0, name: \"input\") property(String) input_8f9a3d\n\n        out(x: 540, y: -2, name: \"output\") property(String) output_1c6e7b\n\n        instance(x: 0, y: 0) replace_4d5a2e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_3f9c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_1e7c9d root.Std_k98ojb.Strings.Replace {}\n        input_8f9a3d -> replace_4d5a2e.input\n        \" \" -> replace_4d5a2e.search\n        \":\" -> replace_4d5a2e.replace\n        replace_4d5a2e.output -> replace_3f9c8f.input\n        \",\" -> replace_3f9c8f.search\n        \":\" -> replace_3f9c8f.replace\n        replace_3f9c8f.output -> replace_1e7c9d.input\n        \".\" -> replace_1e7c9d.search\n        \":\" -> replace_1e7c9d.replace\n        replace_1e7c9d.output -> output_1c6e7b\n    }\n\n    \n\n    instance(x: -85, y: 136, name: \"replace\") replace_3a2f0f root.main.replace {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -199, y: 0, name: \"input\") property(String) input_9f1a3d\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7e8b6c\n\n        instance(x: 94, y: 0) replace_4e5c8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: -105) replace_9a1d3f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 394, y: -210) replace_6e2b0e root.Std_k98ojb.Strings.Replace {}\n        input_9f1a3d -> replace_4e5c8c.input\n        \" \" -> replace_4e5c8c.search\n        \":\" -> replace_4e5c8c.replace\n        replace_4e5c8c.output -> replace_9a1d3f.input\n        \",\" -> replace_9a1d3f.search\n        \":\" -> replace_9a1d3f.replace\n        replace_9a1d3f.output -> replace_6e2b0e.input\n        \".\" -> replace_6e2b0e.search\n        \":\" -> replace_6e2b0e.replace\n        replace_6e2b0e.output -> output_7e8b6c\n    }\n\n    \n\n    instance(x: -178, y: 30) replace_bf9d5a root.main.replace {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5e9f7c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3d4a8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c6b7c1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5e9f7c.input\n        \" \" -> replace_5e9f7c.search\n        \":\" -> replace_5e9f7c.replace\n        replace_5e9f7c.output -> replace_3d4a8f.input\n        \",\" -> replace_3d4a8f.search\n        \":\" -> replace_3d4a8f.replace\n        replace_3d4a8f.output -> replace_c6b7c1.input\n        \".\" -> replace_c6b7c1.search\n        \":\" -> replace_c6b7c1.replace\n        replace_c6b7c1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_d9f8d2 root.main.replace_spaces_commas_dots {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -122, y: 0, name: \"input\") property(String) input_8e1f9d\n\n        out(x: 504, y: -2, name: \"output\") property(String) output_5a7c4b\n\n        instance(x: 94, y: 1) replace_3f6f0f root.Std_k98ojb.Strings.Replace {}\n        input_8e1f9d -> replace_3f6f0f.input\n        \" \" -> replace_3f6f0f.search\n        \":\" -> replace_3f6f0f.replace\n        replace_3f6f0f.output -> output_5a7c4b\n        instance(x: 94, y: -31) replace_9e1d2f root.Std_k98ojb.Strings.Replace {}\n        output_5a7c4b -> replace_9e1d2f.input\n        \",\" -> replace_9e1d2f.search\n        \":\" -> replace_9e1d2f.replace\n        replace_9e1d2f.output -> output_5a7c4b\n        instance(x: 94, y: -62) replace_e6a3bf root.Std_k98ojb.Strings.Replace {}\n        output_5a7c4b -> replace_e6a3bf.input\n        \".\" -> replace_e6a3bf.search\n        \":\" -> replace_e6a3bf.replace\n        replace_e6a3bf.output -> output_5a7c4b\n    }\n\n    \n\n    instance(x: -93, y: 30) replace_spaces_commas_dots_9e8f2d root.main.replace_spaces_commas_dots {}\n}"
      ],
      "33": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -290, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 538, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 3) characters_7e9f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 264, y: 1) all_equal_4a6d5f root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n                instance(x: 226, y: 56) equal_2e4f8c root.Std_k98ojb.Logic.Equal {}\n                elem_9f6850 -> equal_2e4f8c.left\n                characters_7e9f8c.characters[_index_769593] -> equal_2e4f8c.right\n                equal_2e4f8c.result -> output_efbc78\n            }\n        }\n        instance(x: 528, y: -1) length_5b3a0d root.Std_k98ojb.List.Length {}\n        string_0 -> characters_7e9f8c.input\n        all_equal_4a6d5f.output_list -> length_5b3a0d.list\n        characters_7e9f8c.characters -> all_equal_4a6d5f.items\n        length_5b3a0d.length == string_0.len() -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_2e1d7f root.main.check_same {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -299, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_3a9c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) all_equal_7e6d5c root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_1\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1\n\n                instance(x: 89, y: 29) equal_3a8c5f root.Std_k98ojb.Logic.Equal {}\n                characters_3a9c8f.characters -> equal_3a8c5f.left\n                elem_1 -> equal_3a8c5f.right\n                equal_3a8c5f.result -> bool_1\n            }\n        }\n        string_1 -> characters_3a9c8f.input\n        characters_3a9c8f.characters -> all_equal_7e6d5c.items\n        func() {\n            in(x: -0, y: 0, name: \"output_list\") property(List) output_list_1\n\n            out(x: 0, y: 0, name: \"result\") property(Bool) result_2\n\n            instance(x: 0, y: 0) length_7b3d9f root.Std_k98ojb.List.Length {}\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_2\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2\n\n                instance(x: 89, y: 29) equal_3a8c5f root.Std_k98ojb.Logic.Equal {}\n                characters_3a9c8f.characters -> equal_3a8c5f.left\n                elem_2 -> equal_3a8c5f.right\n                equal_3a8c5f.result -> bool_2\n            } -> all_equal_7e6d5c.handler\n            all_equal_7e6d5c.output_list -> length_7b3d9f.list\n            1 -> length_7b3d9f.length\n            length_7b3d9f.result -> result_2\n        } -> all_equal_7e6d5c.handler\n        all_equal_7e6d5c.output_list -> result_1\n    }\n\n    \n\n    instance(x: -57, y: 0) check_same_4a8d8b root.main.check_same {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -280, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 540, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_7e6f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) all_equal_f3d5a8 root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n                instance(x: 226, y: 56) equal_1a8f7c root.Std_k98ojb.Logic.Equal {}\n                characters_7e6f9c.characters[_index_769593] -> equal_1a8f7c.left\n                elem_9f6850 -> equal_1a8f7c.right\n                equal_1a8f7c.result -> output_efbc78\n            }\n        }\n        instance(x: 530, y: -2) length_6e87f2 root.Std_k98ojb.List.Length {}\n        characters_7e6f9c.characters -> all_equal_f3d5a8.items\n        length_6e87f2.length -> equal_1a8f7c.right\n        1 -> equal_1a8f7c.left\n        input_0 -> characters_7e6f9c.input\n        length_6e87f2.list -> all_equal_f3d5a8.items\n        all_equal_f3d5a8.output_list.length -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_e54b7f root.main.check_same {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -287, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 529, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_7e6c4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: -2) length_9a8f3f root.Std_k98ojb.List.Length {}\n        characters_7e6c4f.characters -> contains_d42dce.list\n        string_0 -> characters_7e6c4f.input\n        \"1\" -> contains_d42dce.item\n        characters_7e6c4f.characters -> length_9a8f3f.list\n        length_9a8f3f.length -> contains_d42dce.count\n        contains_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_f54b7f root.main.check_same {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -290, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 533, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_d9f8a4 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) unique_element_c7e3d6 root.main.unique_Element {}\n        characters_d9f8a4.input -> unique_element_c7e3d6.list\n        string_1 -> characters_d9f8a4.input\n        unique_element_c7e3d6.output -> result_1\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_2c0b5c root.main.check_same {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -286, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 533, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_3a9c7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -319, y: 358, name: \"list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it == first\"\n        }\n        characters_3a9c7f.input -> contains_d42dce.list\n        input_0 -> characters_3a9c7f.input\n        instance(x: -319, y: 358) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        contains_d42dce.result -> result_0\n        characters_3a9c7f.characters -> filter_f3b46d.list\n        characters_3a9c7f.characters -> getat_ce2a48.list\n        1 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> filter_f3b46d.first\n        characters_3a9c7f.characters -> firstitem_870503.list\n    }\n\n    \n\n    instance(x: -55, y: 529) is_same_5e1d0f root.main.is_same {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -290, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 557, y: -1, name: \"output\") property(Bool) output_0\n\n        instance(x: 0, y: 0) intersection_7b3f2c root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 265, y: 0) length_5e9a6d root.Std_k98ojb.List.Length {}\n        instance(x: -1, y: 0) characters_4e9c1c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 264, y: 0) firstitem_7f3b2c root.Std_k98ojb.List.FirstItem {}\n        instance(x: 529, y: -1) equal_6d05b0 root.Std_k98ojb.Logic.Equal {}\n        characters_4e9c1c.input -> intersection_7b3f2c.left\n        firstitem_7f3b2c.item -> intersection_7b3f2c.right\n        length_5e9a6d.list -> characters_4e9c1c.input\n        intersection_7b3f2c.intersection -> firstitem_7f3b2c.list\n        1 -> equal_6d05b0.right\n        length_5e9a6d.length -> equal_6d05b0.left\n        equal_6d05b0.result -> output_0\n    }\n\n    \n\n    instance(x: -55, y: 529) is_same_2c856f root.main.is_same {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) length_7b3b7b root.Std_k98ojb.Strings.Length {}\n        instance(x: -0, y: -121, name: \"first_char\") getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == first_char\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = first_char\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = first_char\n        ifexpression_875761.else -> output_ai\n        ifexpression_875761.value -> output_ai\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        input_ai -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_ai\n        input_ai -> length_7b3b7b.input\n        0 -> getat_ce2a48.index\n        length_7b3b7b.length -> for_d26972.count\n        input_ai -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        for_d26972.item -> setter_9d4f1c.new_value\n    }\n\n    \n\n    instance(x: -179, y: 30) is_same_59bc6e root.main.is_same {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -290, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_7b9f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) allroot_std_k98ojb_sets_intersection_a2e4d6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 530, y: -1) length_7a8f9c root.Std_k98ojb.List.Length {}\n        characters_7b9f8c.characters -> allroot_std_k98ojb_sets_intersection_a2e4d6.left\n        characters_7b9f8c.characters -> allroot_std_k98ojb_sets_intersection_a2e4d6.right\n        length_7a8f9c.length -> allroot_std_k98ojb_sets_intersection_a2e4d6.intersection -> result_0\n        string_0 -> characters_7b9f8c.input\n        characters_7b9f8c.characters -> length_7a8f9c.list\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_f21f44 root.main.check_same {}\n\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -284, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 531, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_d4f8d9 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) uniquelist_7e6a3c root.Std_k98ojb.List.Unique {}\n        instance(x: 531, y: -2) length_5f1f8f root.Std_k98ojb.List.Length {}\n        characters_d4f8d9.characters -> uniquelist_7e6a3c.list\n        uniquelist_7e6a3c.uniqueList -> length_5f1f8f.list\n        1 -> length_5f1f8f.equalTo\n        string_1 -> characters_d4f8d9.input\n        length_5f1f8f.result -> result_1\n    }\n\n    \n\n    instance(x: -57, y: 52) check_same_7e3b2c root.main.check_same {}\n}"
      ],
      "37": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -77) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 772, y: -77) count_digits_59bc6e root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 0, y: -1) CountDigits_2c856f root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 0, y: 0) length_6d05b0 root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_6d05b0.list\n        length_6d05b0.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -100) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 0, y: -1) CountDigits_2c856f root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 0, y: -76) CountDigits_59bc6e root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1056, y: 76) filter_9f8d4a root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n                isnumeric_1088d5.input -> elem_9f6850\n                isnumeric_1088d5.is_numeric -> bool_af09a7\n            }\n        }\n        instance(x: 1352, y: 76) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_9f8d4a.items\n        filter_9f8d4a.output_list -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1030, y: -4) filter_9c8f2a root.Std_k98ojb.Iteration.Filter {\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n                isnumeric_1088d5.input -> elem_9f6850\n                isnumeric_1088d5.is_numeric -> bool_af09a7\n            }\n        }\n        instance(x: 1273, y: -4) length_1e2c9a root.Std_k98ojb.List.Length {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_9c8f2a.items\n        filter_9c8f2a.output_list -> length_1e2c9a.list\n        length_1e2c9a.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: -1) filter_2d6da6 root.Std_k98ojb.Query.Filter {\n            where: \"it.isNumeric\"\n        }\n        instance(x: 0, y: 0) length_cde0dc root.Std_k98ojb.List.Length {}\n\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> filter_2d6da6.list\n        filter_2d6da6.result -> length_cde0dc.items\n        length_cde0dc.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) CountDigits_59bc6e root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 772, y: -100) length_7b3b7b root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_7b3b7b.list\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: 0, y: -38) count_digits_86117a root.main.CountDigits {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.input -> elem_9f6850\n            isnumeric_1088d5.isnumeric -> bool_af09a7\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        instance(x: 0, y: 0) length_6d05b0 root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.output_list -> length_6d05b0.list\n        length_6d05b0.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}"
      ],
      "38": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9c2e4d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c8f5e.gen_0\n        pow_4c8f5e.result -> sum_365f7b\n        4 -> pow_4c8f5e.y\n        expression_2d6da6.result -> pow_4c8f5e.x\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4d0c8e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4d0c8e.y\n        data_cde0dc -> pow_4d0c8e.x\n        expression_2d6da6.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_4d0c8e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -285, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        data_cde0dc -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.output -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -285, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9c8d2e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9c8d2e.y\n        data_cde0dc -> pow_9c8d2e.x\n        expression_2d6da6.result -> pow_9c8d2e.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_9c8d2e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = [sum]\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(n * (2*n-1)*(2*n+1))/3\"\n        }\n        instance(x: 62, y: -226, name: \"fourth power\") pow_5f8a0c root.Std_k98ojb.Math.Pow {}\n        data_3c713b -> output_ebef81\n        n_c88d35 -> expression_634b7e.gen_0\n        expression_634b7e.result -> data_3c713b.sum\n        expression_634b7e.result -> pow_5f8a0c.first\n        4 -> pow_5f8a0c.second\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 55, name: \"n\") property(Number) n_c88d35\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_3e8c9a root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"2*n-1\"\n        }\n        instance(x: 303, y: 2) add_5e8c3f root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_3e8c9a.y\n        n_c88d35 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_3e8c9a.x\n        add_5e8c3f.first -> sum_365f7b\n        pow_3e8c9a.result -> add_5e8c3f.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 55, name: \"n\") property(Number) n_c88d35\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4a8e9c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4a8e9c.second\n        expression_2d6da6.result -> pow_4a8e9c.first\n        n_c88d35 -> expression_2d6da6.gen_0\n        4 -> pow_4a8e9c.exponent\n        data_cde0dc -> sum_365f7b\n        pow_4a8e9c.result -> sum_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        n_3a3116 -> pow_f892a4.first\n        expression_2d6da6.result -> add_64046c.first\n        pow_f892a4.result -> add_64046c.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -344, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e8d5c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9e8d5c.second\n        data_cde0dc -> pow_9e8d5c.first\n        expression_2d6da6.result -> pow_9e8d5c.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_9e8d5c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        data_cde0dc -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_f892a4.output -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
      ],
      "46": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_b2508f\n\n        instance(x: -105, y: -110) mul_2d7c1e root.Std_k98ojb.Math.Mul {}\n        instance(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = surface_area\n        instance(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = surface_area\n        a_9f7759 -> mul_2d7c1e.first\n        6 -> mul_2d7c1e.second\n        getter_9cceb3.value -> surface_area_b2508f\n        mul_2d7c1e.result -> setter_1cedb2.new_value\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_cube_d6e930 root.main.surface_area_cube {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_b2508f\n\n        instance(x: -105, y: -110) mul_1c7b2e root.Std_k98ojb.Math.Mul {}\n        a_9f7759 -> mul_1c7b2e.first\n        6 -> mul_1c7b2e.second\n        instance(x: -144, y: -56) pow_5d3a8f root.Std_k98ojb.Math.Pow {}\n        a_9f7759 -> pow_5d3a8f.x\n        2 -> pow_5d3a8f.y\n        mul_1c7b2e.result -> surface_area_b2508f\n        pow_5d3a8f.result -> mul_1c7b2e.first\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_cube_d6e930 root.main.surface_area_cube {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -100, y: 0, name: \"size\") property(Number) size_1f9d8a\n\n        out(x: 0, y: 0, name: \"surface area\") property(Number) surface_area_7c6b4e\n\n        instance(x: -80, y: 40) mul_3a2b8c root.Std_k98ojb.Math.Mul {}\n        instance(x: -50, y: 20) pow_1d9f0a root.Std_k98ojb.Math.Pow {}\n        instance(x: 10, y: 0) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size^2\"\n        }\n        size_1f9d8a -> mul_3a2b8c.first\n        6 -> mul_3a2b8c.second\n        pow_1d9f0a.x -> math_expr_node.gen_1\n        size_1f9d8a -> pow_1d9f0a.x\n        2 -> pow_1d9f0a.y\n        mul_3a2b8c.result -> math_expr_node.gen_0\n        math_expr_node.result -> surface_area_7c6b4e\n    }\n\n    \n\n    instance(x: -85, y: -46, name: \"surface area cube\") expression_1d9f0a root.main.surface_area_cube {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -100, y: 0, name: \"size\") property(Number) size_3f1a8d\n\n        out(x: 50, y: 0, name: \"surface area\") property(Number) surface_area_b9b7e6\n\n        instance(x: -40, y: 0) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size * size\"\n        }\n        size_3f1a8d -> math_expr_node.gen_0\n        math_expr_node.result -> surface_area_b9b7e6\n    }\n\n    \n\n    instance(x: -100, y: 0) surface_area_cube_5c4d2f root.main.surface_area_cube {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -280, y: -212, name: \"execute\") trigger() execute_1f9d5a\n        in(x: -264, y: -95, name: \"size\") property(Number) size_7e6c0b\n\n        out(x: 1168, y: -647, name: \"continue\") trigger() continue_4a2c9f\n        out(x: 1191, y: -269, name: \"output\") property(Number) output_e5d3ec\n\n        instance(x: 97, y: -127) mul_f7e8d6 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_1a9f4c root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_2c3b0a root.Std_k98ojb.Math.Mul {}\n        instance(x: 395, y: -378) surface_area_cube_8d5e1e root.main.surface_area_cube {}\n        instance(x: 80, y: -417) ifexpression_7f9f6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"size <= 0\"\n        }\n        setter(x: -215, y: -463, name: \"setter_1c2d3a\") setter_1c2d3a = surface_area\n        getter(x: 902, y: -314, name: \"getter_5e9b8f\") getter_5e9b8f = surface_area\n        instance(x: -202, y: -236) floor_7c0b6c root.Std_k98ojb.Math.Floor {}\n        size_7e6c0b -> mul_f7e8d6.first\n        2 -> mul_f7e8d6.second\n        mul_f7e8d6.result -> add_1a9f4c.first\n        mul_f7e8d6.result -> mul_2c3b0a.first\n        size_7e6c0b -> mul_2c3b0a.second\n        6 -> add_1a9f4c.second\n        add_1a9f4c.result -> surface_area_cube_8d5e1e.size_7e6c0b\n        0 -> setter_1c2d3a.new_value\n        setter_1c2d3a.continue -> ifexpression_7f9f6f.execute\n        ifexpression_7f9f6f.then -> continue_4a2c9f\n        execute_1f9d5a -> setter_1c2d3a.execute\n        ifexpression_7f9f6f.else -> surface_area_cube_8d5e1e.execute_1f9d5a\n        surface_area_cube_8d5e1e.continue_4a2c9f -> setter_1c2d3a.execute\n        surface_area_cube_8d5e1e.output_e5d3ec -> add_1a9f4c.second\n        add_1a9f4c.result -> getter_5e9b8f.value\n        size_7e6c0b -> floor_7c0b6c.input\n        floor_7c0b6c.output -> mul_f7e8d6.first\n        floor_7c0b6c.output -> mul_2c3b0a.first\n        floor_7c0b6c.output -> ifexpression_7f9f6f.gen_0\n        getter_5e9b8f.value -> output_e5d3ec\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_4a2c1f root.main.surface_area_cube {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9e6a1f\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_8c0d3b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_5e2c8f\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_7a1b4f\n\n        instance(x: 80, y: -417) ifexpression_e6d3b0 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_7c1a2f root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_9e8d3c root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_5a0c4f root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_c1a7c6 root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_3e9d5d\") setter_3e9d5d = sum\n        setter(x: 875, y: -518, name: \"setter_1c8f6a\") setter_1c8f6a = sum\n        getter(x: 902, y: -314, name: \"getter_4b0b3e\") getter_4b0b3e = sum\n        instance(x: -202, y: -236) floor_2d7a9c root.Std_k98ojb.Math.Floor {}\n        6 -> mul_c1a7c6.first\n        side_length_8c0d3b -> mul_c1a7c6.second\n        12 -> add_5a0c4f.first\n        mul_c1a7c6.result -> add_5a0c4f.second\n        0 -> setter_3e9d5d.new_value\n        setter_3e9d5d.continue -> ifexpression_e6d3b0.execute\n        ifexpression_e6d3b0.then -> continue_5e2c8f\n        execute_9e6a1f -> setter_3e9d5d.execute\n        ifexpression_e6d3b0.else -> surface_area_cube_7c1a2f.execute\n        surface_area_cube_7c1a2f.continue -> setter_1c8f6a.execute\n        add_5a0c4f.result -> setter_1c8f6a.new_value\n        setter_1c8f6a.continue -> continue_5e2c8f\n        getter_4b0b3e.value -> output_7a1b4f\n        side_length_8c0d3b -> floor_2d7a9c.input\n        floor_2d7a9c.output -> mul_9e8d3c.first\n        floor_2d7a9c.output -> mul_9e8d3c.second\n        mul_9e8d3c.result -> surface_area_cube_7c1a2f.side_length_8c0d3b\n        floor_2d7a9c.output -> ifexpression_e6d3b0.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_5e4a6c root.main.surface_area_cube {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_3e1f0a\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_96023e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_adfa16 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_547f34 root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        6 -> mul_adfa16.first\n        side_length_6b655b -> mul_adfa16.second\n        mul_adfa16.result -> add_88bb8a.first\n        2 -> mul_547f34.first\n        side_length_6b655b -> mul_547f34.second\n        mul_547f34.result -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_3e1f0a -> setter_41e4ad.execute\n        0 -> setter_41e4ad.new_value\n        ifexpression_3d7de6.else -> surface_area_cube_96023e.execute_cdac2a\n        surface_area_cube_96023e.continue_d9efd7 -> setter_375321.execute\n        getter_38583a.value -> output_732a8a\n        setter_375321.continue -> continue_d9efd7\n        side_length_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -426, y: -421, name: \"execute\") trigger() execute_9f1e8a\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_7c0b5d\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_e4a3bc\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_1f8e2c\n\n        instance(x: 80, y: -417) ifexpression_5d0b7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_1f8e2c root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_9a3d6f root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_b4f0ea root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_f8c7e2 root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_3d9a6f\") setter_3d9a6f = surface_area\n        setter(x: 875, y: -518, name: \"setter_1c8e2c\") setter_1c8e2c = surface_area\n        getter(x: 902, y: -314, name: \"getter_5b7d9a\") getter_5b7d9a = surface_area\n        instance(x: -202, y: -236) floor_3f0b8d root.Std_k98ojb.Math.Floor {}\n        side_length_7c0b5d -> mul_f8c7e2.first\n        6 -> mul_f8c7e2.second\n        mul_f8c7e2.result -> add_b4f0ea.first\n        mul_9a3d6f.result -> add_b4f0ea.second\n        add_b4f0ea.result -> setter_1c8e2c.new_value\n        0 -> setter_3d9a6f.new_value\n        setter_3d9a6f.continue -> ifexpression_5d0b7c.execute\n        ifexpression_5d0b7c.then -> continue_e4a3bc\n        execute_9f1e8a -> setter_3d9a6f.execute\n        ifexpression_5d0b7c.else -> surface_area_cube_1f8e2c.execute_9f1e8a\n        surface_area_cube_1f8e2c.continue_e4a3bc -> setter_1c8e2c.execute\n        mul_f8c7e2.first -> floor_3f0b8d.input\n        floor_3f0b8d.output -> mul_9a3d6f.first\n        floor_3f0b8d.output -> mul_9a3d6f.second\n        floor_3f0b8d.output -> ifexpression_5d0b7c.gen_0\n        getter_5b7d9a.value -> output_1f8e2c\n        setter_1c8e2c.continue -> continue_e4a3bc\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_6f8e8c root.main.surface_area_cube {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -452, y: -211, name: \"execute\") trigger() execute_9e3a5f\n        in(x: -437, y: -92, name: \"size\") property(Number) size_1b8d4c\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_2a7f7f\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_3e5a0c\n\n        instance(x: 80, y: -417) ifexpression_1d4b6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"size <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_e8e7a9 root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_1c2f5d root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_6b0f9c root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) pow_3a7e8f root.Std_k98ojb.Math.Pow {}\n        setter(x: -215, y: -463, name: \"setter_4d1c2f\") setter_4d1c2f = surface_area\n        setter(x: 875, y: -518, name: \"setter_5a3e9c\") setter_5a3e9c = surface_area\n        getter(x: 902, y: -314, name: \"getter_6b4d7e\") getter_6b4d7e = surface_area\n        instance(x: -202, y: -236) floor_2f8d1e root.Std_k98ojb.Math.Floor {}\n        10 -> pow_3a7e8f.y\n        size_1b8d4c -> pow_3a7e8f.x\n        pow_3a7e8f.result -> mul_1c2f5d.first\n        6 -> mul_1c2f5d.second\n        mul_1c2f5d.result -> add_6b0f9c.first\n        mul_1c2f5d.result -> add_6b0f9c.second\n        0 -> setter_4d1c2f.new_value\n        setter_4d1c2f.continue -> ifexpression_1d4b6f.execute\n        ifexpression_1d4b6f.then -> continue_2a7f7f\n        execute_9e3a5f -> setter_4d1c2f.execute\n        ifexpression_1d4b6f.else -> surface_area_cube_e8e7a9.execute_9e3a5f\n        surface_area_cube_e8e7a9.continue_2a7f7f -> setter_5a3e9c.execute\n        surface_area_cube_e8e7a9.output_3e5a0c -> add_6b0f9c.first\n        add_6b0f9c.result -> setter_5a3e9c.new_value\n        setter_5a3e9c.continue -> continue_2a7f7f\n        getter_6b4d7e.value -> output_3e5a0c\n        size_1b8d4c -> floor_2f8d1e.input\n        floor_2f8d1e.output -> ifexpression_1d4b6f.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_e8e7a9 root.main.surface_area_cube {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_b2508f\n\n        instance(x: -105, y: -110) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: -144, y: 112) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"6*a*a\"\n        }\n        a_9f7759 -> mul_f892a4.first\n        a_9f7759 -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_b2508f\n        a_9f7759 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> surface_area_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_cube_d6e930 root.main.surface_area_cube {}\n}"
      ],
      "19": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 157, name: \"list\") property(List) list_9a3f8e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_9a3f8e -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_a54bdc root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_a54bdc.left\n            find_de624f.item -> greaterthan_a54bdc.right\n            greaterthan_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_148aeb root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_afd5b1 -> lessthan_148aeb.left\n            ``Max value_0b1361``.item -> lessthan_148aeb.right\n            lessthan_148aeb.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_9a3f8e -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 160, name: \"list\") property(List) list_0d4b9e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_5f8c1a\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_0d4b9e -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_de624f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_0d4b9e -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_5f8c1a\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_de624f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_09fcba -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 160, name: \"list\") property(List) list_9a1f5e\n\n        out(x: 548, y: 145, name: \"output\") property(Number) output_eb2c8d\n\n        instance(x: 0, y: 0) max_7b4c8f root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 0) min_9e5a3c root.Std_k98ojb.List.Min {}\n        list_9a1f5e -> max_7b4c8f.items\n        list_9a1f5e -> min_9e5a3c.items\n        instance(x: 518, y: 147) sub_2d0a1f root.Std_k98ojb.Math.Sub {}\n        max_7b4c8f.max -> sub_2d0a1f.first\n        min_9e5a3c.min -> sub_2d0a1f.second\n        sub_2d0a1f.result -> output_eb2c8d\n    }\n\n    \n\n    instance(x: -56, y: 177) diff_max_min_4b7f6f root.main.diff_max_min {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 20, name: \"list\") property(List) list_1e3f8d\n\n        out(x: 500, y: 21, name: \"output\") property(Number) output_7c2b9a\n\n        instance(x: 0, y: 0) max_5a6c6c root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 0) min_4e1f3d root.Std_k98ojb.List.Min {}\n        list_1e3f8d -> max_5a6c6c.items\n        list_1e3f8d -> min_4e1f3d.items\n        instance(x: 202, y: 20) sub_9f7c1c root.Std_k98ojb.Math.Sub {}\n        max_5a6c6c.max -> sub_9f7c1c.first\n        min_4e1f3d.min -> sub_9f7c1c.second\n        sub_9f7c1c.result -> output_7c2b9a\n    }\n\n    \n\n    instance(x: -67, y: 11) diff_max_min_6c0c8e root.main.diff_max_min {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_de624f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_09fcba -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_de624f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_09fcba -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_45e806.left\n            find_de624f.item -> greaterthan_45e806.right\n            greaterthan_45e806.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_45e806.left\n            ``Max value_0b1361``.item -> lessthan_45e806.right\n            lessthan_45e806.result -> bool_1eb6e9\n        } -> ``Max value_0b1361``.predicate\n        list_09fcba -> ``Max value_0b1361``.items\n        find_de624f.item -> sub_7e1ce0.first\n        ``Max value_0b1361``.item -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 167, name: \"list\") property(List) list_9e8b3f\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_ea7d6c\n\n        instance(x: 532, y: 147) sub_2b1c5c root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") find_9e3f0f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Min value\") ``Max value_1c7a2d`` root.Std_k98ojb.Iteration.Find {}\n        list_9e8b3f -> find_9e3f0f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_a6f5c7\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) greaterthan_3b8a4d root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_3b8a4d.left\n            find_9e3f0f.item -> greaterthan_3b8a4d.right\n            greaterthan_3b8a4d.result -> bool_1eb6e9\n        } -> find_9e3f0f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) lessthan_ea7f2c root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_ea7f2c.left\n            ``Max value_1c7a2d``.item -> lessthan_ea7f2c.right\n            lessthan_ea7f2c.result -> bool_1eb6e9\n        } -> ``Max value_1c7a2d``.predicate\n        list_9e8b3f -> ``Max value_1c7a2d``.items\n        find_9e3f0f.item -> sub_2b1c5c.first\n        ``Max value_1c7a2d``.item -> sub_2b1c5c.second\n        sub_2b1c5c.result -> output_ea7d6c\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_9f3e0f root.main.diff_max_min {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 0, name: \"list\") property(List) list_1e6b5f\n\n        out(x: 800, y: 27, name: \"output\") property(Number) output_e9a7d8\n\n        instance(x: 531, y: 26) sub_3c2b4f root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 157, name: \"Max value\") find_1e6f0f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -40, y: -65, name: \"Min value\") ``Max value_3a9d8c`` root.Std_k98ojb.Iteration.Find {}\n        list_1e6b5f -> find_1e6f0f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_a7a2aa\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_3b8d5e\n\n            instance(x: 112, y: 80) greaterthan_4c9f1c root.Std_k98ojb.Math.GreaterThan {}\n            current_afd5b1 -> greaterthan_4c9f1c.left\n            find_1e6f0f.item -> greaterthan_4c9f1c.right\n            greaterthan_4c9f1c.result -> bool_3b8d5e\n        } -> find_1e6f0f.predicate\n        list_1e6b5f -> ``Max value_3a9d8c``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_a7a2aa\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_3b8d5e\n\n            instance(x: 112, y: 80) lessthan_4c9f1c root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> lessthan_4c9f1c.left\n            ``Max value_3a9d8c``.item -> lessthan_4c9f1c.right\n            lessthan_4c9f1c.result -> bool_3b8d5e\n        } -> ``Max value_3a9d8c``.predicate\n        find_1e6f0f.item -> sub_3c2b4f.first\n        ``Max value_3a9d8c``.item -> sub_3c2b4f.second\n        sub_3c2b4f.result -> output_e9a7d8\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}"
      ],
      "22": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 6, name: \"input\") property(Number) input_0a3f9e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_1b7c4d\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_e5a8ed\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_f9e3f0\n\n        instance(x: -105, y: -110) ifexpression_1c7b2d root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_0a3f9e -> ifexpression_1c7b2d.gen_0\n        2 -> ifexpression_1c7b2d.gen_1\n        execute_1b7c4d -> ifexpression_1c7b2d.execute\n        ifexpression_1c7b2d.value -> output_f9e3f0\n        ifexpression_1c7b2d.then -> continue_e5a8ed\n        ifexpression_1c7b2d.else -> continue_e5a8ed\n    }\n\n    \n\n    instance(x: -175, y: 11) is_even_6f9e4f root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 3, name: \"input\") property(Number) input_9f6a8e\n        in(x: -451, y: -115, name: \"execute\") trigger() execute_e1b7c0\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_f4d5ef\n        out(x: 1222, y: 10, name: \"output\") property(Bool) output_9f6a8e\n\n        instance(x: -103, y: -110) ifexpression_7c3b1e root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -142, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output\n        input_9f6a8e -> ifexpression_7c3b1e.gen_0\n        getter_9cceb3.value -> output_9f6a8e\n        ifexpression_7c3b1e.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_7c3b1e.else -> setter_37db7f.execute\n        false -> setter_37db7f.new_value\n        execute_e1b7c0 -> ifexpression_7c3b1e.execute\n        setter_1cedb2.continue -> continue_f4d5ef\n        setter_37db7f.continue -> continue_f4d5ef\n    }\n\n    \n\n    instance(x: -175, y: -63) is_even_d6e930 root.main.is_even {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 0, name: \"input\") property(Number) input_3a9f8e\n        in(x: -451, y: -112, name: \"execute\") trigger() execute_1b2d5c\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 0, y: 0) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        input_3a9f8e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> ifexpression_e38995.gen_0\n        execute_1b2d5c -> ifexpression_e38995.execute\n        ifexpression_e38995.then -> continue_685c8f\n        ifexpression_e38995.value -> output_b1d7f8\n        ifexpression_e38995.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -55, y: 529) is_even_2c856f root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 5, name: \"input\") property(Number) input_0a9f3e\n        in(x: -456, y: -111, name: \"execute\") trigger() execute_eb2c8d\n\n        out(x: 1217, y: -112, name: \"continue\") trigger() continue_f1f6ea\n        out(x: 1209, y: 62, name: \"output\") property(Bool) output_3e5a4f\n\n        instance(x: -95, y: 60, name: \"is even\") ifexpression_eb7d0c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        execute_eb2c8d -> ifexpression_eb7d0c.execute\n        ifexpression_eb7d0c.then -> continue_f1f6ea\n        input_0a9f3e -> ifexpression_eb7d0c.gen_0\n        2 -> ifexpression_eb7d0c.gen_1\n        ifexpression_eb7d0c.value -> output_3e5a4f\n        ifexpression_eb7d0c.else -> continue_f1f6ea\n    }\n\n    \n\n    instance(x: -65, y: 119) is_even_9e8f2f root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 3, name: \"input\") property(Number) input_1f9e0d\n        in(x: -453, y: -115, name: \"execute\") trigger() execute_7b2c6a\n\n        out(x: 1218, y: -114, name: \"continue\") trigger() continue_4b5f9f\n        out(x: 1220, y: 3, name: \"output\") property(Bool) output_eb1d1e\n\n        instance(x: -104, y: -115) ifexpression_c8a7c6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -143, y: 3, name: \"getter_9d5e4f\") getter_9d5e4f = output\n        ifexpression_c8a7c6.then -> continue_4b5f9f\n        ifexpression_c8a7c6.else -> continue_4b5f9f\n        input_1f9e0d -> ifexpression_c8a7c6.gen_0\n        2 -> ifexpression_c8a7c6.gen_1\n        getter_9d5e4f.value -> output_eb1d1e\n        execute_7b2c6a -> ifexpression_c8a7c6.execute\n    }\n\n    \n\n    instance(x: -173, y: 12) is_even_0a9d3f root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 2, name: \"input\") property(Number) input_9e6f1d\n        in(x: -451, y: -114, name: \"execute\") trigger() execute_eb3c0a\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_5e7c2f\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_1d8f4e\n\n        instance(x: -104, y: -110) ifexpression_ea3b6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_9e6f1d -> ifexpression_ea3b6c.gen_0\n        ifexpression_ea3b6c.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_ea3b6c.else -> continue_5e7c2f\n        execute_eb3c0a -> ifexpression_ea3b6c.execute\n        getter_9cceb3.value -> output_1d8f4e\n        setter_1cedb2.continue -> continue_5e7c2f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_0a1b1f root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 11, name: \"input\") property(Number) input_1a9e8f\n        in(x: -450, y: -115, name: \"execute\") trigger() execute_2c3b5d\n\n        out(x: 46, y: 159, name: \"output\") property(Bool) output_7e4b0f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_1a9b8f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a9e8f -> ifexpression_e38995.gen_0\n        execute_2c3b5d -> ifexpression_e38995.execute\n        ifexpression_e38995.then -> continue_1a9b8f\n        ifexpression_e38995.else -> continue_1a9b8f\n        ifexpression_e38995.value -> output_7e4b0f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_3c2d5f root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 0, name: \"input\") property(Number) input_3a9f8e\n        in(x: -454, y: -114, name: \"execute\") trigger() execute_1c2d5b\n\n        out(x: 1227, y: 4, name: \"continue\") trigger() continue_6f0f0b\n        out(x: 1218, y: 146, name: \"output\") property(Bool) output_9a3e2f\n\n        instance(x: -82, y: 148) ifexpression_1c5d4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = output\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = output\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = output\n        ifexpression_1c5d4c.else -> continue_6f0f0b\n        ifexpression_1c5d4c.value -> output_9a3e2f\n        ifexpression_1c5d4c.then -> setter_9d4f1c.execute\n        execute_1c2d5b -> for_d26972.reset\n        for_d26972.onItem -> ifexpression_1c5d4c.execute\n        getter_b280eb.value -> ifexpression_1c5d4c.gen_0\n        input_3a9f8e -> ifexpression_1c5d4c.gen_1\n        for_d26972.done -> continue_6f0f0b\n        setter_38e107.continue -> for_d26972.next\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_even_f3a7d8 root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 3, name: \"input\") property(Number) input_0e6a5f\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_1c7d4b\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_8a9f2f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_6e3a0b\n\n        instance(x: -105, y: -110) ifexpression_1d5c4f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_0e6a5f -> ifexpression_1d5c4f.gen_0\n        2 -> ifexpression_1d5c4f.gen_1\n        execute_1c7d4b -> ifexpression_1d5c4f.execute\n        ifexpression_1d5c4f.value -> output_8a9f2f\n        ifexpression_1d5c4f.then -> continue_6e3a0b\n        ifexpression_1d5c4f.else -> continue_6e3a0b\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f9f8f2 root.main.is_even {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 0, name: \"input\") property(Number) input_1a3e8f\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_e9c7d5\n\n        out(x: 1226, y: 2, name: \"output\") property(Bool) output_4b0f7f\n        out(x: 1218, y: -112, name: \"continue\") trigger() continue_3a1e6f\n\n        instance(x: -82, y: -111) ifexpression_9d2c5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a3e8f -> ifexpression_9d2c5f.gen_0\n        2 -> ifexpression_9d2c5f.gen_1\n        execute_e9c7d5 -> ifexpression_9d2c5f.execute\n        ifexpression_9d2c5f.value -> output_4b3e8f\n        ifexpression_9d2c5f.then -> continue_3a1e6f\n        ifexpression_9d2c5f.else -> continue_3a1e6f\n    }\n\n    \n\n    instance(x: -173, y: 13) is_even_4b0f7f root.main.is_even {}\n}"
      ],
      "23": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 1, name: \"input\") property(String) input_0\n\n        out(x: 533, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 1) find_4d5e6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) firstitem_d831ca root.Std_k98ojb.List.FirstItem {}\n        characters_7b3b7b.characters -> find_4d5e6f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            find_4d5e6f.item -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_4d5e6f.predicate\n        input_0 -> characters_7b3b7b.input\n        find_4d5e6f.item -> firstitem_d831ca.list\n        firstitem_d831ca.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 1, name: \"input\") property(String) input_0\n\n        out(x: 531, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 1) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -38, name: \"First repeated character\") ``First repeated character_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        characters_3c713b.characters -> find_repeated_char.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            find_repeated_char.output -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First repeated character_0b1361``.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            find_repeated_char.output -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_repeated_char.predicate\n        input_0 -> characters_3c713b.input\n        ``First repeated character_0b1361``.item -> output_0\n        list_09fcba -> find_de624f.items\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5b8c4d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7e3f9a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) ifexpression_a1b6f5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it in list\"\n        }\n        characters_5b8c4d.characters -> find_7e3f9a.items\n        func() {\n            in(x: 0, y: 0, name: \"current\") property(String) current_1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 89, y: 29) contains_7b3f6d root.Std_k98ojb.Strings.Contains {}\n            list -> contains_7b3f6d.input\n            current_1 -> contains_7b3f6d.contains\n            contains_7b3f6d.result -> bool_2\n        } -> find_7e3f9a.predicate\n        func() {\n            in(x: 0, y: 0, name: \"current\") property(String) current_1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 89, y: 29) contains_7b3f6d root.Std_k98ojb.Strings.Contains {}\n            list -> contains_7b3f6d.input\n            current_1 -> contains_7b3f6d.contains\n            contains_7b3f6d.result -> bool_2\n        } -> ifexpression_a1b6f5.predicate\n        input_0 -> characters_5b8c4d.input\n        find_7e3f9a.item -> result_0\n        list -> ifexpression_a1b6f5.gen_0\n        ifexpression_a1b6f5.then -> add_2c8e9a.execute\n        current -> add_2c8e9a.new_value\n        find_7e3f9a.onItem -> ifexpression_a1b6f5.execute\n        characters_5b8c4d.characters -> list\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_1\n\n        instance(x: 0, y: 1) characters_5a3c9d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4e8f7f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -2) filter_6e7f1d root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: 265, y: -3) map_4c9a8f root.Std_k98ojb.Iteration.Map {}\n        characters_5a3c9d.characters -> find_4e8f7f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 112, y: 80) contains_7f8b6d root.Std_k98ojb.Strings.Contains {}\n            map_4c9a8f.output_list -> filter_6e7f1d.list\n            current_1 -> contains_7f8b6d.input\n            characters_5a3c9d.characters -> contains_7f8b6d.contains\n            contains_7f8b6d.result -> bool_2\n        } -> find_4e8f7f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"output\") property(Any) output_2\n\n            instance(x: 112, y: 80) indexof_7f8b6d root.Std_k98ojb.Strings.IndexOf {}\n            characters_5a3c9d.characters -> indexof_7f8b6d.input\n            current_1 -> indexof_7f8b6d.contains\n            indexof_7f8b6d.index -> output_2\n        } -> map_4c9a8f.handler\n        filter_6e7f1d.result -> map_4c9a8f.items\n        find_4e8f7f.item -> result_1\n        input_1 -> characters_5a3c9d.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_2b0d6f root.main.first_repeated_char {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -106, y: 0, name: \"first repeated char\") find_1d5e9f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 772, y: 76) map_3a2c7b root.Std_k98ojb.Iteration.Map {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                characters_7b3b7b.characters -> contains_d42dce.input\n                elem_9f6850 -> contains_d42dce.contains\n                contains_d42dce.result -> notequal_807ffd.left\n                1 -> notequal_807ffd.right\n                notequal_807ffd.result -> bool_af09a7\n            }\n        }\n        instance(x: -106, y: 0) filter_3e5f9c root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(Bool) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) not_3b8d6c root.Std_k98ojb.Logic.Not {}\n                elem_9f6850 -> not_3b8d6c.input\n                not_3b8d6c.result -> bool_af09a7\n            }\n        }\n        instance(x: -106, y: 0) map_1e2f5f root.Std_k98ojb.Iteration.Map {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"string\") property(String) string_ae09a7\n\n                instance(x: 89, y: 29) substring_1088d5 root.Std_k98ojb.Strings.Substring {}\n                characters_7b3b7b.characters -> substring_1088d5.input\n                map_3a2c7b.output_list.map_index -> substring_1088d5.start\n                1 -> substring_1088d5.end\n                substring_1088d5.substring -> string_ae09a7\n            }\n        }\n        instance(x: -106, y: 0) find_3f9c6b root.Std_k98ojb.Iteration.Find {}\n        input_ai -> characters_7b3b7b.input\n        characters_7b3b7b.characters -> map_3a2c7b.items\n        map_3a2c7b.output_list -> filter_3e5f9c.items\n        filter_3e5f9c.output_list -> find_1d5e9f.items\n        find_1d5e9f.item -> output_ai\n        characters_7b3b7b.characters -> map_1e2f5f.items\n        map_1e2f5f.output_list -> find_3f9c6b.items\n        find_3f9c6b.item -> first_repeated_char\n    }\n\n    \n\n    instance(x: -34, y: 127) first_repeated_char_node root.main.first_repeated_char {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3e9c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"First repeated character\") ``First repeated character_2f9a1c`` root.Std_k98ojb.Iteration.Find {}\n        characters_3e9c8f.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            find_6d05b0.item -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        characters_3e9c8f.characters -> ``First repeated character_2f9a1c``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_d42dce.input\n            find_6d05b0.item -> contains_d42dce.contains\n            contains_d42dce.result -> equal_a54bdc.left\n            true -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> ``First repeated character_2f9a1c``.predicate\n        find_6d05b0.item -> result_0\n        input_0 -> characters_3e9c8f.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_5a7d9f root.main.first_repeated_char {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_807ffd.left\n            false -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: 0, y: -1) for_2f5c4e root.Std_k98ojb.Std.For {}\n        input_0 -> for_2f5c4e.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) characters_1e3c8d root.Std_k98ojb.Strings.Characters {}\n            instance(x: 310, y: 35) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> characters_1e3c8d.input\n            for_2f5c4e.item -> elem_9f6850\n            characters_1e3c8d.characters -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> for_2f5c4e.onItem\n        find_6d05b0.items -> for_2f5c4e.trigger\n        find_6d05b0.item -> output_3bc2ae\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_1\n\n        instance(x: 0, y: 1) characters_5a3c4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -2) filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: 265, y: -2) find_7e9f5c root.Std_k98ojb.Iteration.Find {}\n        characters_5a3c4f.characters -> filter_f3b46d.list\n        input_1 -> characters_5a3c4f.input\n        filter_f3b46d.result -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            filter_f3b46d.result -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_d42dce.input\n            filter_f3b46d.result -> contains_d42dce.contains\n            contains_d42dce.result -> equal_a54bdc.left\n            1 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e9f5c.predicate\n        filter_f3b46d.result -> find_7e9f5c.items\n        find_6d05b0.item -> result_1\n        find_7e9f5c.item -> result_1\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -106, y: 125) find_0f1e9c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 340, y: 77) map_2d5a6f root.Std_k98ojb.Iteration.Map {}\n        characters_7b3b7b.characters -> find_0f1e9c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.input\n            map_2d5a6f.output_list -> contains_45e806.contains\n            contains_45e806.result -> notequal_a54bdc.left\n            true -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_0f1e9c.predicate\n        characters_7b3b7b.characters -> map_2d5a6f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"output\") property(Any) output_1eb6e9\n\n            instance(x: 112, y: 80) data_instance_45e806  = [current]\n            current_afd5b1 -> data_instance_45e806.current\n            data_instance_45e806 -> output_1eb6e9\n        } -> map_2d5a6f.handler\n        find_0f1e9c.item -> output_ai\n        input_ai -> characters_7b3b7b.input\n    }\n\n    \n\n    instance(x: -34, y: 127) first_repeated_char_node root.main.first_repeated_char {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5b8d7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6f9e4a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -1) filter_3a2f9c root.Std_k98ojb.Query.Filter {\n            where: \"it in list\"\n        }\n        instance(x: 265, y: -60) ``list``_d7e6d4 root.Std_k98ojb.Iteration.Map {}\n        characters_5b8d7c.characters -> find_6f9e4a.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            ``list``_d7e6d4.output_list -> contains_d42dce.list\n            current_afd5b1 -> contains_d42dce.input\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_6f9e4a.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            ``list``_d7e6d4.output_list -> contains_d42dce.list\n            current_afd5b1 -> contains_d42dce.input\n            contains_d42dce.result -> bool_1eb6e9\n        } -> filter_3a2f9c.where\n        characters_5b8d7c.characters -> ``list``_d7e6d4.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"string\") property(String) string_3a2f9c\n\n            instance(x: 112, y: 80) data_object_7e4b0c root.Std_k98ojb.Data.Object {}\n            current_afd5b1 -> data_object_7e4b0c.value\n            data_object_7e4b0c.output -> string_3a2f9c\n        } -> ``list``_d7e6d4.handler\n        find_6f9e4a.item -> result_0\n        input_0 -> characters_5b8d7c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}"
      ],
      "35": [
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -280, y: 17, name: \"list\") property(List) list_8f3a9e\n\n        out(x: 0, y: 0, name: \"second_smallest\") property(Number) second_smallest_7c2b5d\n\n        instance(x: -101, y: -103) min_c3e343 root.Std_k98ojb.List.Min {}\n        instance(x: -10, y: -104) filter_6f8a1c root.Std_k98ojb.Query.Filter {\n            where: \"it > min\"\n        }\n        instance(x: 110, y: -103) min_9e7d3f root.Std_k98ojb.List.Min {}\n        list_8f3a9e -> min_c3e343.items\n        min_c3e343.min -> filter_6f8a1c.where.gen_0\n        list_8f3a9e -> filter_6f8a1c.list\n        filter_6f8a1c.result -> min_9e7d3f.items\n        min_9e7d3f.min -> second_smallest_7c2b5d\n    }\n\n    \n\n    instance(x: -67, y: 127) second_smallest_4e0b3f root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -280, y: 3, name: \"list\") property(List) list_1a9f8e\n\n        out(x: 592, y: 2, name: \"second_smallest\") property(Number) second_smallest_5b7c6d\n\n        instance(x: -105, y: -110) find_3e0f7c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min2_1e3c5d root.Std_k98ojb.Math.Min2 {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            find_3e0f7c.item -> min2_1e3c5d.left\n            elem_9f6850 -> min2_1e3c5d.right\n            min2_1e3c5d.min -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_3e0f7c.predicate\n        list_1a9f8e -> find_3e0f7c.items\n        instance(x: -105, y: 108) find_5b2d6c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min2_1e3c5d root.Std_k98ojb.Math.Min2 {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            find_3e0f7c.item -> min2_1e3c5d.left\n            elem_9f6850 -> min2_1e3c5d.right\n            min2_1e3c5d.min -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_5b2d6c.predicate\n        list_1a9f8e -> find_5b2d6c.items\n        find_5b2d6c.item -> second_smallest_5b7c6d\n    }\n\n    \n\n    instance(x: -67, y: 0) second_smallest_4c3b8f root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 0, name: \"list\") property(List) list_8e9f1a\n\n        out(x: 594, y: 21, name: \"second_smallest\") property(Number) second_smallest_7c2d6b\n\n        instance(x: -104, y: -110) find_4e3c1f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min2_3b1c6e root.Std_k98ojb.Math.Min2 {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            find_4e3c1f.item -> min2_3b1c6e.left\n            elem_9f6850 -> min2_3b1c6e.right\n            min2_3b1c6e.min -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_4e3c1f.predicate\n        list_8e9f1a -> find_4e3c1f.items\n        instance(x: -104, y: 112) find_2b0d5f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min2_3b1c6e root.Std_k98ojb.Math.Min2 {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            find_4e3c1f.item -> min2_3b1c6e.left\n            elem_9f6850 -> min2_3b1c6e.right\n            min2_3b1c6e.min -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_2b0d5f.predicate\n        list_8e9f1a -> find_2b0d5f.items\n        find_2b0d5f.item -> second_smallest_7c2d6b\n    }\n\n    \n\n    instance(x: -55, y: 127) second_smallest_4f3d2e root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: 2, name: \"list\") property(List) list_8f1e0a\n\n        out(x: 591, y: 3, name: \"second_smallest\") property(Number) second_smallest_9c6b7d\n\n        instance(x: 0, y: 0) min_2c4b5c root.Std_k98ojb.List.Min {}\n        instance(x: -341, y: -301) remove_1e8f8a root.Std_k98ojb.List.Remove {}\n        instance(x: -174, y: -63) min_d6e930 root.main.min_of_three {}\n        list_8f1e0a -> min_2c4b5c.items\n        min_2c4b5c.min -> remove_1e8f8a.index\n        list_8f1e0a -> remove_1e8f8a.list\n        remove_1e8f8a.listWithoutItem -> min_d6e930.items_abed4a\n        instance(x: 322, y: 568) min_of_three_cee202 root.main.min_of_three {}\n        min_d6e930.smallest_8713cf -> second_smallest_9c6b7d\n    }\n\n    \n\n    instance(x: -55, y: 127) second_smallest_1a8f4f root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -285, y: 3, name: \"list\") property(List) list_9e6a1f\n\n        out(x: 596, y: 2, name: \"second_smallest\") property(Number) second_smallest_7c0d5b\n\n        instance(x: -10, y: -4, name: \"First smallest number\") find_8b3e9c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0, name: \"Second smallest number\") ``First smallest number_7f6a2d`` root.Std_k98ojb.Iteration.Find {}\n        list_9e6a1f -> find_8b3e9c.items\n        func() {\n            in(x: -191, y: 41, name: \"current\") property(Number) current_5b4f7f\n\n            out(x: 702, y: 42, name: \"bool\") property(Bool) bool_e1d0a8\n\n            instance(x: 113, y: 37, name: \"\") min_9c6e9c root.Std_k98ojb.Math.Min {}\n            current_5b4f7f -> min_9c6e9c.values\n            find_8b3e9c.item -> min_9c6e9c.values\n            min_9c6e9c.result -> bool_e1d0a8\n        } -> find_8b3e9c.predicate\n        list_9e6a1f -> ``First smallest number_7f6a2d``.items\n        func() {\n            in(x: -191, y: 41, name: \"current\") property(Number) current_5b4f7f\n\n            out(x: 702, y: 42, name: \"bool\") property(Bool) bool_e1d0a8\n\n            instance(x: 113, y: 37, name: \"\") min_9c6e9c root.Std_k98ojb.Math.Min {}\n            current_5b4f7f -> min_9c6e9c.values\n            find_8b3e9c.item -> min_9c6e9c.values\n            ``First smallest number_7f6a2d``.item -> min_9c6e9c.values\n            min_9c6e9c.result -> bool_e1d0a8\n        } -> ``First smallest number_7f6a2d``.predicate\n        ``First smallest number_7f6a2d``.item -> second_smallest_7c0d5b\n    }\n\n    \n\n    instance(x: -292, y: 4) second_smallest_1e9d8f root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: 158, name: \"list\") property(List) list_1a8f6e\n\n        out(x: 46, y: 358, name: \"second_min\") property(Number) second_min_9b3c4d\n\n        instance(x: -105, y: 133) find_2b7a0c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -144, y: 243, name: \"elem\") property(Number) elem_8f9e1e\n\n            out(x: 116, y: 253, name: \"bool\") property(Bool) bool_a0c6d2\n\n            instance(x: 89, y: 238) min_3a5b4f root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 244) notequal_7e1f8f root.Std_k98ojb.Logic.NotEqual {}\n            list_1a8f6e -> min_3a5b4f.values\n            elem_8f9e1e -> min_3a5b4f.values\n            min_3a5b4f.result -> notequal_7e1f8f.left\n            find_2b7a0c.item -> notequal_7e1f8f.right\n            notequal_7e1f8f.result -> bool_a0c6d2\n        } -> find_2b7a0c.predicate\n        list_1a8f6e -> find_2b7a0c.items\n        find_2b7a0c.item -> second_min_9b3c4d\n    }\n\n    \n\n    instance(x: -174, y: 268) second_smallest_5f9f4f root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: 166, name: \"list\") property(List) list_9e8a1f\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_3b2d5c\n\n        instance(x: 532, y: 147) min_7e1ce0 root.Std_k98ojb.List.Min {}\n        instance(x: -39, y: 26, name: \"First smallest number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Second smallest number\") ``First smallest number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_9e8a1f -> min_7e1ce0.items\n        list_9e8a1f -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            min_7e1ce0.min -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        list_9e8a1f -> ``First smallest number_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            min_7e1ce0.min -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First smallest number_0b1361``.predicate\n        find_de624f.item -> ``First smallest number_0b1361``.min\n        ``First smallest number_0b1361``.item -> output_3b2d5c\n    }\n\n    \n\n    instance(x: -291, y: 177) second_smallest_f53d27 root.main.second_smallest {}\n\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 0, name: \"list\") property(List) list_8f1a9e\n\n        out(x: 597, y: 2, name: \"second_smallest\") property(Number) second_smallest_7c3d4b\n\n        instance(x: -17, y: -11, name: \"first_min\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min2_1e3b6c root.Std_k98ojb.Math.Min2 {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            first_min -> min2_1e3b6c.left\n            elem_9f6850 -> min2_1e3b6c.right\n            min2_1e3b6c.min -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> first_min.predicate\n        list_8f1a9e -> first_min.items\n        instance(x: -17, y: 120, name: \"second_min\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min2_1e3b6c root.Std_k98ojb.Math.Min2 {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            first_min -> min2_1e3b6c.left\n            elem_9f6850 -> min2_1e3b6c.right\n            min2_1e3b6c.min -> notequal_807ffd.left\n            second_min -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> second_min.predicate\n        list_8f1a9e -> second_min.items\n        second_min.item -> second_smallest_7c3d4b\n    }\n\n    \n\n    instance(x: -54, y: 46) second_smallest_6e5a2c root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 3, name: \"list\") property(List) list_8e6a2f\n\n        out(x: 593, y: 22, name: \"second_smallest\") property(Number) second_smallest_7c9d5b\n\n        instance(x: -61, y: -1) min_4f3f9f root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) filter_2a8e2c root.Std_k98ojb.Query.Filter {\n            where: \"it != smallest\"\n        }\n        instance(x: 341, y: -1) min_7e3d5f root.Std_k98ojb.List.Min {}\n        list_8e6a2f -> min_4f3f9f.items\n        min_4f3f9f.min -> filter_2a8e2c.where.gen_0\n        list_8e6a2f -> filter_2a8e2c.list\n        filter_2a8e2c.result -> min_7e3d5f.items\n        min_7e3d5f.min -> second_smallest_7c9d5b\n    }\n\n    \n\n    instance(x: -57, y: 64) second_smallest_b0f1a4 root.main.second_smallest {}\n}",
        "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -280, y: 0, name: \"list\") property(List) list_9e4a1f\n\n        out(x: 593, y: 79, name: \"second_smallest\") property(Number) second_smallest_3c2b8d\n\n        instance(x: 0, y: 0) min_5c7b6c root.Std_k98ojb.List.Min {}\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: 0, y: 0) filter_6c8a9d root.Std_k98ojb.Query.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> filter_6c8a9d.predicate\n        list_9e4a1f -> min_5c7b6c.items\n        list_9e4a1f -> filter_6c8a9d.list\n        min_5c7b6c.min -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> ifexpression_e38995.gen_1\n        a_9f7759 -> ifexpression_e38995.gen_2\n        b_f9110a -> ifexpression_e38995.gen_3\n        filter_6c8a9d.result -> ifexpression_e38995.gen_4\n        getter_9cceb3.value -> second_smallest_3c2b8d\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        ifexpression_e38995.else -> setter_37db7f.execute\n        min_5c7b6c.min -> a_9f7759\n        filter_6c8a9d.result -> b_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}"
      ]
    }
  }
]