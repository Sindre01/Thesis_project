[
    {
        "experiment_name": "regular_RAG_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15912,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -387, y: -202, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -393, y: 28, name: \"list2\") property(List) list2_5b4c0d\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_3f6c1a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_3f6c1a\n        ifexpression_875761.value -> output_3f6c1a\n        list1_8a2f9e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_5b4c0d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        list1_8a2f9e -> getat_ce2a48.list\n        for_d26972.item -> setter_9d4f1c.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_3b7c5f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -387, y: -214, name: \"list1\") property(List) list1_3f0b8e\n        in(x: -389, y: 32, name: \"list2\") property(List) list2_7a4c5d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_6e1c3f\n\n        instance(x: -105, y: -205, name: \"intersection\") intersection_8b0f64 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 847, y: -207) notempty_7a4d2f root.Std_k98ojb.List.NotEmpty {}\n        list1_3f0b8e -> intersection_8b0f64.left\n        list2_7a4c5d -> intersection_8b0f64.right\n        intersection_8b0f64.intersection -> notempty_7a4d2f.list\n        notempty_7a4d2f.isEmpty -> output_6e1c3f\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_9a4dad root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -425, y: -214, name: \"list1\") property(List) list1_3a0b8f\n        in(x: -435, y: 31, name: \"list2\") property(List) list2_9e7d4c\n\n        out(x: 1265, y: 16, name: \"output\") property(Bool) output_6e1f3a\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list1_3a0b8f -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        list2_9e7d4c -> contains_32727d.item\n        contains_32727d.is_contained -> output_6e1f3a\n    }\n\n    \n\n    instance(x: -293, y: -5) common_element_7a4dad root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -333, y: -214, name: \"list1\") property(List) list1_9e6f8d\n        in(x: -343, y: 26, name: \"list2\") property(List) list2_7b0a3c\n\n        out(x: 1265, y: 11, name: \"output\") property(Bool) output_4b1b9e\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list1_9e6f8d -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        list2_7b0a3c -> contains_32727d.item\n        contains_32727d.is_contained -> output_4b1b9e\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_7a4dad root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -387, y: -214, name: \"list1\") property(List) list1_0e9f8d\n        in(x: -377, y: 30, name: \"list2\") property(List) list2_5a6c7b\n\n        out(x: 1223, y: 5, name: \"output\") property(Bool) output_e4b1aa\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_e4b1aa\n        ifexpression_875761.value -> output_e4b1aa\n        list1_0e9f8d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_5a6c7b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_d26972.done -> output_e4b1aa\n        for_d26972.item -> setter_9d4f1c.new_value\n        setter_9d4f1c.continue -> for_d26972.next\n        setter_38e107.continue -> for_d26972.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_3a5b2 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -467, y: -214, name: \"list1\") property(List) list1_3a0b6f\n        in(x: -465, y: 31, name: \"list2\") property(List) list2_7e5c4d\n\n        out(x: 1229, y: 8, name: \"output\") property(Bool) output_8f1f3a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 752, y: 93) intersection_7b3a8d root.Std_k98ojb.Sets.Intersection {}\n        list1_3a0b6f -> intersection_7b3a8d.left\n        list2_7e5c4d -> intersection_7b3a8d.right\n        instance(x: 752, y: 93) notempty_9e3b7f root.Std_k98ojb.List.NotEmpty {}\n        intersection_7b3a8d.intersect -> notempty_9e3b7f.list\n        notempty_9e3b7f.isEmpty -> output_8f1f3a\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_fc79d5 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -375, y: -206, name: \"list1\") property(List) list1_8e9f5d\n        in(x: -367, y: 29, name: \"list2\") property(List) list2_6b7a3c\n\n        out(x: 1224, y: 13, name: \"output\") property(Bool) output_0c1e8f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -427, y: -214, name: \"list1\") property(List) list1_2f3b5e\n        in(x: -439, y: 30, name: \"list2\") property(List) list2_9c8a0d\n\n        out(x: 1267, y: -209, name: \"output\") property(Bool) output_4e6a1f\n\n        instance(x: -153, y: -205, name: \"intersection\") intersection_5b3f5f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 847, y: -207) notempty_9d8c2c root.Std_k98ojb.List.NotEmpty {}\n        list1_2f3b5e -> intersection_5b3f5f.left\n        list2_9c8a0d -> intersection_5b3f5f.right\n        intersection_5b3f5f.intersection -> notempty_9d8c2c.list\n        notempty_9d8c2c.isEmpty -> output_4e6a1f\n    }\n\n    \n\n    instance(x: -293, y: -5) common_element_7a4dad root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -465, y: -235, name: \"list1\") property(List) list_0a9b3f\n        in(x: -485, y: 30, name: \"list2\") property(List) list_8e6c4d\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_1f7c0a\n\n        instance(x: 752, y: 93) intersection_c9b3f9 root.Std_k98ojb.Sets.Intersection {}\n        list_0a9b3f -> intersection_c9b3f9.left\n        list_8e6c4d -> intersection_c9b3f9.right\n        instance(x: 321, y: -20) notempty_5b2e1f root.Std_k98ojb.List.NotEmpty {}\n        intersection_c9b3f9.intersection -> notempty_5b2e1f.list\n        notempty_5b2e1f.isEmpty -> output_1f7c0a\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_8d4b6f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -475, y: -213, name: \"list1\") property(List) list1_9e6b4f\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_7c8a3d\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_0a1e9f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_0a1e9f\n        ifexpression_875761.value -> output_0a1e9f\n        list1_9e6b4f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_7c8a3d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        for_d26972.item -> setter_9d4f1c.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_5b7b3a root.main.has_common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -535, y: 5, name: \"list\") property(List) list_4f8a3e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_4f8a3e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_4f8a3e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_3a5b7f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -485, y: 30, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3af6ba -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3af6ba -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -515, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -525, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -525, y: 5, name: \"list\") property(List) list_1f3a9e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_6b2d8c\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_4c0b1e\n\n        instance(x: 752, y: 93) ifexpression_9f3a7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_8c2e5d\") getter_8c2e5d = previous\n        setter(x: 679, y: -313, name: \"setter_7b4f6a\") setter_7b4f6a = previous\n        instance(x: 321, y: -20) for_9c1d3e root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7b4f6a\") setter_2b5e8c = previous\n        instance(x: -275, y: -35) getat_9f1d3e root.Std_k98ojb.List.GetAt {}\n        ifexpression_9f3a7f.else -> continue_6b2d8c\n        ifexpression_9f3a7f.value -> output_4c0b1e\n        ifexpression_9f3a7f.then -> setter_7b4f6a.execute\n        list_1f3a9e -> for_9c1d3e.items\n        for_9c1d3e.item -> ifexpression_9f3a7f.gen_2\n        for_9c1d3e.index -> ifexpression_9f3a7f.gen_0\n        getter_8c2e5d.value -> ifexpression_9f3a7f.gen_1\n        for_9c1d3e.onItem -> ifexpression_9f3a7f.execute\n        for_9c1d3e.done -> continue_6b2d8c\n        for_9c1d3e.item -> setter_7b4f6a.new_value\n        list_1f3a9e -> getat_9f1d3e.list\n        0 -> getat_9f1d3e.index\n        getat_9f1d3e.itemAtIndex -> setter_2b5e8c.new_value\n        execute_6b2d8c -> setter_2b5e8c.execute\n        setter_2b5e8c.continue -> for_9c1d3e.reset\n        setter_7b4f6a.continue -> for_9c1d3e.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_3f2d8c root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -523, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -485, y: 30, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3af6ba -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3af6ba -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -523, y: 1, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 577, y: 1) sort_on_7c3a9f root.Std_k98ojb.List.SortOn {\n            key: \"it\"\n        }\n        instance(x: 775, y: 5) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1000, y: -95) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it[1] == it[0]+1\"\n        }\n        list_3af6ba -> sort_on_7c3a9f.list\n        sort_on_7c3a9f.sorted_list -> map_c73e3b.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_efbc78\n\n            instance(x: 226, y: 56) slice_c76d2b root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) concat_7836b4 root.Std_k98ojb.List.Concat {}\n            _index_170471 -> slice_c76d2b.items\n            0 -> slice_c76d2b.start\n            2 -> slice_c76d2b.end\n            slice_c76d2b.slice -> concat_7836b4.left\n            [] -> concat_7836b4.right\n            concat_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        map_c73e3b.output_list -> filter_7b3b7b.list\n        filter_7b3b7b.result -> intersection_c7c7e6.left\n        list_3af6ba -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_ac7dfb root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -465, y: 4, name: \"list\") property(List) list_1a0e5f\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_1a0e5f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1a0e5f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -475, y: 20, name: \"sublist\") property(List) sublist_2a1f8d\n        in(x: -476, y: -150, name: \"list\") property(List) list_3b0c5e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"previous\") setter_9d4f1c root.Std_k98ojb.List.SetAt {}\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        instance(x: 679, y: -313, name: \"setter\") setter_9d4f1c root.Std_k98ojb.List.SetAt {}\n        getter(x: 334, y: 160, name: \"getter\") getter_b280eb = previous\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3b0c5e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        sublist_2a1f8d -> getter_b280eb.list\n        0 -> getter_b280eb.index\n        list_3b0c5e -> setter_9d4f1c.list\n        execute_a96db6 -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 60, name: \"list1\") property(List) list_2e9f6b\n        in(x: -284, y: -119, name: \"list2\") property(List) list_3c7a5d\n\n        out(x: 556, y: -107, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -106) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -105) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -104) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_2e9f6b -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3c7a5d -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        list_2e9f6b -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -459, y: 5, name: \"list1\") property(List) list1_3f0a6d\n        in(x: -463, y: -169, name: \"list2\") property(List) list2_7e9b4c\n\n        out(x: 1218, y: -145, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -276, y: -144) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> contains_32727d.execute\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_3f0a6d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> contains_32727d.execute\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_7e9b4c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        contains_32727d.is_contained -> output_5bbcd7\n        execute -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_1f846b\n        in(x: -485, y: -120, name: \"sub_list\") property(List) sub_list_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35, name: \"getat_ce2a48\") getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: -303, y: -205) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: -0, y: 30) is_sublist_2 root.main.is_sublist {}\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_1f846b\n        in(x: -485, y: -120, name: \"sub_list\") property(List) sub_list_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35, name: \"getat_ce2a48\") getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: -303, y: -205) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: -0, y: 30) is_sublist_2 root.main.is_sublist {}\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_1f846b\n        in(x: -485, y: -120, name: \"sub_list\") property(List) sub_list_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35, name: \"getat_ce2a48\") getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: -303, y: -205) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_2 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -435, y: 15, name: \"list1\") property(List) list1_5e9f8d\n        in(x: -437, y: 147, name: \"list2\") property(List) list2_3a0b7c\n\n        out(x: 1206, y: 45, name: \"output\") property(Bool) output_e4d1ad\n\n        instance(x: -185, y: 40, name: \"length of list1\") length_9f8e5f root.Std_k98ojb.List.Length {}\n        instance(x: -186, y: 164, name: \"length of list2\") length_7a3c4d root.Std_k98ojb.List.Length {}\n        instance(x: 1040, y: 44) greaterthan_8e9f1c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -184, y: 78, name: \"for loop\") for_7a3d6f root.Std_k98ojb.Std.For {}\n        instance(x: 1040, y: 168) greaterthan_8e9f1c_2 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1054, y: -5) and_7a3d6f root.Std_k98ojb.Logic.And {}\n        instance(x: 1040, y: 102) greaterthan_8e9f1c_3 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1054, y: 126) and_7a3d6f_2 root.Std_k98ojb.Logic.And {}\n        instance(x: -184, y: 202, name: \"slice list2\") slice_9f8e5f root.Std_k98ojb.List.Slice {}\n        instance(x: 1054, y: 150) and_7a3d6f_3 root.Std_k98ojb.Logic.And {}\n        instance(x: -184, y: 226, name: \"compare lists\") equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list1_5e9f8d -> length_9f8e5f.list\n        list2_3a0b7c -> length_7a3c4d.list\n        length_9f8e5f.length -> greaterthan_8e9f1c.left\n        0 -> greaterthan_8e9f1c.right\n        greaterthan_8e9f1c.result -> for_7a3d6f.reset\n        list2_3a0b7c -> for_7a3d6f.items\n        length_7a3c4d.length -> greaterthan_8e9f1c_2.left\n        0 -> greaterthan_8e9f1c_2.right\n        greaterthan_8e9f1c_2.result -> for_7a3d6f.trigger\n        for_7a3d6f.index -> greaterthan_8e9f1c_3.left\n        length_9f8e5f.length -> greaterthan_8e9f1c_3.right\n        greaterthan_8e9f1c_3.result -> and_7a3d6f.left\n        for_7a3d6f.index -> slice_9f8e5f.start\n        length_9f8e5f.length -> slice_9f8e5f.end\n        list2_3a0b7c -> slice_9f8e5f.list\n        and_7a3d6f.result -> greaterthan_8e9f1c_2.left\n        0 -> greaterthan_8e9f1c_2.right\n        greaterthan_8e9f1c_2.result -> for_7a3d6f.next\n        slice_9f8e5f.slice -> equal_f89569.left\n        list1_5e9f8d -> equal_f89569.right\n        equal_f89569.result -> and_7a3d6f_2.left\n        true -> and_7a3d6f_2.right\n        and_7a3d6f_2.result -> and_7a3d6f_3.left\n        for_7a3d6f.index -> greaterthan_8e9f1c.left\n        0 -> greaterthan_8e9f1c.right\n        greaterthan_8e9f1c.result -> and_7a3d6f_3.right\n        and_7a3d6f_3.result -> output_e4d1ad\n    }\n\n    \n\n    instance(x: -72, y: 15) is_sublist_5e9f8d root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -427, y: 10, name: \"list1\") property(List) list1_5a3b6f\n        in(x: -425, y: 130, name: \"list2\") property(List) list2_9e4c0d\n\n        out(x: 1117, y: 55, name: \"output\") property(Bool) output_8b1c5a\n\n        instance(x: -173, y: 56, name: \"is sublist\") filter_3f6c7c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -0, y: -25, name: \"current\") property(List) current_8a1e2d\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            false -> contains_32727d.item\n            current_8a1e2d -> contains_32727d.list\n            contains_32727d.is_contained -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_3f6c7c.handler\n        instance(x: -303, y: -205, name: \"only odd indexes\") for_d26972 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: 0, y: 0, name: \"item\") property(List) item_9f3a8c\n\n            out(x: 0, y: 0, name: \"output\") property(Bool) output_5bbcd7\n\n            instance(x: -275, y: -35) slice_ce2a48 root.Std_k98ojb.List.Slice {}\n            instance(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = item_9f3a8c\n            instance(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = item_9f3a8c\n            instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n            ifexpression_875761.else -> continue_a96db6\n            ifexpression_875761.value -> output_5bbcd7\n            ifexpression_875761.then -> setter_9d4f1c.execute\n            item_9f3a8c -> for_d26972.items\n            for_d26972.item -> ifexpression_875761.gen_2\n            for_d26972.index -> ifexpression_875761.gen_0\n            getter_b280eb.value -> ifexpression_875761.gen_1\n            for_d26972.onItem -> ifexpression_875761.execute\n            for_d26972.done -> continue_a96db6\n            for_d26972.item -> setter_9d4f1c.new_value\n            item_9f3a8c -> getat_ce2a48.list\n            0 -> getat_ce2a48.index\n            getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n            execute_90aaec -> setter_38e107.execute\n            setter_38e107.continue -> for_d26972.reset\n            setter_9d4f1c.continue -> for_d26972.next\n        } -> filter_3f6c7c.items\n        list2_9e4c0d -> for_d26972.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_769593 -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> for_d26972.handler\n        instance(x: -275, y: -35) slice_ce2a48 root.Std_k98ojb.List.Slice {}\n        list1_5a3b6f -> slice_ce2a48.list\n        _index_769593 -> slice_ce2a48.start\n        for_d26972.index + 1 -> slice_ce2a48.end\n        filter_3f6c7c.output_list -> contains_32727d.list\n        list1_5a3b6f -> contains_32727d.item\n        contains_32727d.is_contained -> output_8b1c5a\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 0, name: \"list1\") property(List) list_9e8f3a\n        in(x: -293, y: 122, name: \"list2\") property(List) list_7b5c4d\n\n        out(x: 557, y: 111, name: \"output\") property(Bool) output_1f6f0d\n\n        instance(x: -92, y: 116) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 115) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 114) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_9e8f3a -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_7b5c4d -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        list_9e8f3a -> equal_f89569.right\n        equal_f89569.result -> output_1f6f0d\n    }\n\n    \n\n    instance(x: -84, y: 239) is_sublist_a7c5f4 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -427, y: 20, name: \"list1\") property(List) list1_5a3b8f\n        in(x: -429, y: 180, name: \"list2\") property(List) list2_7c6e0d\n\n        out(x: 1044, y: 85, name: \"output\") property(Bool) output_9f1a5f\n\n        instance(x: -175, y: 84, name: \"length of list1\") length_8b3c2c root.Std_k98ojb.List.Length {}\n        instance(x: -174, y: 224, name: \"length of list2\") length_6d9e4f root.Std_k98ojb.List.Length {}\n        instance(x: 104, y: 84) sub_5a7f3c root.Std_k98ojb.Math.Sub {}\n        instance(x: -174, y: 374, name: \"list1 slice\") slice_6d8e9f root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 224) greaterthan_5a7f3c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 524, name: \"list2 slice\") slice_6d8e9f_1 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 374) greaterthan_5a7f3c_1 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 674, name: \"list2 slice\") slice_6d8e9f_2 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 524) greaterthan_5a7f3c_2 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 824, name: \"list1 slice\") slice_6d8e9f_3 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 674) greaterthan_5a7f3c_3 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 974, name: \"list2 slice\") slice_6d8e9f_4 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 824) greaterthan_5a7f3c_4 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 1124, name: \"list1 slice\") slice_6d8e9f_5 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 974) greaterthan_5a7f3c_5 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 1274, name: \"list2 slice\") slice_6d8e9f_6 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 1124) greaterthan_5a7f3c_6 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 1424, name: \"list1 slice\") slice_6d8e9f_7 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 1274) greaterthan_5a7f3c_7 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 1574, name: \"list2 slice\") slice_6d8e9f_8 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 1424) greaterthan_5a7f3c_8 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 1724, name: \"list1 slice\") slice_6d8e9f_9 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 1574) greaterthan_5a7f3c_9 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 1874, name: \"list2 slice\") slice_6d8e9f_10 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 1724) greaterthan_5a7f3c_10 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 2024, name: \"list1 slice\") slice_6d8e9f_11 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 1874) greaterthan_5a7f3c_11 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 2174, name: \"list2 slice\") slice_6d8e9f_12 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 2024) greaterthan_5a7f3c_12 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 2324, name: \"list1 slice\") slice_6d8e9f_13 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 2174) greaterthan_5a7f3c_13 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 2474, name: \"list2 slice\") slice_6d8e9f_14 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 2324) greaterthan_5a7f3c_14 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 2624, name: \"list1 slice\") slice_6d8e9f_15 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 2474) greaterthan_5a7f3c_15 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 2774, name: \"list2 slice\") slice_6d8e9f_16 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 2624) greaterthan_5a7f3c_16 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 2924, name: \"list1 slice\") slice_6d8e9f_17 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 2774) greaterthan_5a7f3c_17 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 3074, name: \"list2 slice\") slice_6d8e9f_18 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 2924) greaterthan_5a7f3c_18 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 3224, name: \"list1 slice\") slice_6d8e9f_19 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 3074) greaterthan_5a7f3c_19 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 3374, name: \"list2 slice\") slice_6d8e9f_20 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 3224) greaterthan_5a7f3c_20 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 3524, name: \"list1 slice\") slice_6d8e9f_21 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 3374) greaterthan_5a7f3c_21 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 3674, name: \"list2 slice\") slice_6d8e9f_22 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 3524) greaterthan_5a7f3c_22 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -174, y: 3824, name: \"list1 slice\") slice_6d8e9f_23 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 3674) greaterthan_5a7f3c_23 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x:",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"list1\") property(List) list1_5e3f6b\n        in(x: -485, y: -120, name: \"list2\") property(List) list2_7c4a9d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_5e3f6b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_7c4a9d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -435, y: 35, name: \"list1\") property(List) list1_3f9a4b\n        in(x: -436, y: -147, name: \"list2\") property(List) list2_6e7c8d\n\n        out(x: 1225, y: -155, name: \"output\") property(Bool) output_0e1b3f\n\n        instance(x: -185, y: -145, name: \"length of list2\") length_4a9c1f root.Std_k98ojb.List.Length {}\n        instance(x: 110, y: -153) contains_7d8f5f root.Std_k98ojb.List.Contains {}\n        instance(x: 448, y: -152) greaterthan_6e2b3f root.Std_k98ojb.Math.GreaterThan {}\n        list1_3f9a4b -> length_4a9c1f.list\n        func() {\n            in(x: -0, y: -25, name: \"current\") property(Number) _index_7e8d5f\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_6b9c1f\n\n            instance(x: 226, y: 56) slice_c76d2b root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_7e8d5f -> slice_c76d2b.start\n            length_4a9c1f.length -> slice_c76d2b.end\n            list1_3f9a4b -> slice_c76d2b.list\n            0 -> notequal_7836b4.right\n            slice_c76d2b.slice -> notequal_7836b4.left\n            notequal_7836b4.result -> output_6b9c1f\n        } -> contains_7d8f5f.item\n        list1_3f9a4b -> contains_7d8f5f.list\n        greaterthan_6e2b3f.left -> length_4a9c1f.length\n        0 -> greaterthan_6e2b3f.right\n        contains_7d8f5f.is_contained -> output_0e1b3f\n        greaterthan_6e2b3f.result -> contains_7d8f5f.execute\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a1b8e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c2f5d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 36, name: \"index\") property(Number) index_7e5a8c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_3b2f6d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7e5a8c -> add_3b2f6d.first\n            1 -> add_3b2f6d.second\n            add_3b2f6d.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3a1b8e -> find_6d05b0.items\n        find_6d05b0.item -> missing_7c2f5d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e8f9a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c2d5b\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 35, name: \"index\") property(Number) index_1a3e8c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_9b2f6d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_1a3e8c -> add_9b2f6d.first\n            1 -> add_9b2f6d.second\n            elem_9f6850 -> notequal_807ffd.right\n            add_9b2f6d.result -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3e8f9a -> find_6d05b0.items\n        index_1a3e8c -> find_6d05b0.index\n        find_6d05b0.item -> missing_7c2d5b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_9f4d6f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 0, name: \"list\") property(List) list_9f5b6a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -118, y: -32, name: \"index\") property(Number) index_7e5a3c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_2b8f1d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7e5a3c -> add_2b8f1d.first\n            0 -> add_2b8f1d.second\n            add_2b8f1d.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f5b6a -> find_6d05b0.items\n        find_6d05b0.index -> find_6d05b0.context\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1f8d4a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: 35, name: \"index\") property(Number) index_1e7d6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_3f8b2c root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_1e7d6a -> add_3f8b2c.first\n            0 -> add_3f8b2c.second\n            add_3f8b2c.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_1f8d4a -> find_6d05b0.items\n        find_6d05b0.index -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e4f9a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c6b2d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 38, name: \"index\") property(Number) index_7c1d3e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_9f5b8a root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7c1d3e -> add_9f5b8a.first\n            0 -> add_9f5b8a.second\n            add_9f5b8a.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3e4f9a -> find_6d05b0.items\n        find_6d05b0.item -> missing_7c6b2d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9e4f5a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -107, y: 29, name: \"index\") property(Number) index_8e3a1c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_4f9d5b root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_8e3a1c -> add_4f9d5b.first\n            0 -> add_4f9d5b.second\n            add_4f9d5b.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9e4f5a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_4f9d5b root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_8e3a1c -> add_4f9d5b.first\n            -1 -> add_4f9d5b.second\n            add_4f9d5b.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.context\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f6a8e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -112, y: 35, name: \"index\") property(Number) index_ea1d8e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_3f0c5b root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_ea1d8e -> add_3f0c5b.first\n            1 -> add_3f0c5b.second\n            add_3f0c5b.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f6a8e -> find_6d05b0.items\n        find_6d05b0.index -> index_ea1d8e\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9e4f5a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c2b6d\n\n        instance(x: 0, y: 0) find_3a8c7f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -107, y: 36, name: \"index\") property(Number) index_ea7c8e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_2f1b9d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_ea7c8e -> add_2f1b9d.first\n            1 -> add_2f1b9d.second\n            elem_9f6850 -> notequal_807ffd.right\n            add_2f1b9d.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_3a8c7f.predicate\n        list_9e4f5a -> find_3a8c7f.items\n        find_3a8c7f.item -> missing_7c2b6d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1d0d5f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f6a2e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 35, name: \"index\") property(Number) index_7e3a6c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1b0d5f root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7e3a6c -> add_1b0d5f.first\n            1 -> add_1b0d5f.second\n            add_1b0d5f.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f6a2e -> find_6d05b0.items\n        find_6d05b0.index -> index_7e3a6c\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e8f5a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_2b9d7c\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -116, y: 1, name: \"index\") property(Number) index_7e8d5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_2c3f9b root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7e8d5a -> sub_2c3f9b.first\n            elem_9f6850 -> sub_2c3f9b.second\n            1 -> notequal_807ffd.right\n            sub_2c3f9b.result -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3e8f5a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_7e8d5a\n\n            instance(x: 89, y: 29) length_3b2c1a root.Std_k98ojb.List.Length {}\n            instance(x: 310, y: 35) generate_range_9f4d0a root.Std_k98ojb.List.GenerateRange {\n                from: 0\n            }\n            list_3e8f5a -> length_3b2c1a.list\n            length_3b2c1a.length -> generate_range_9f4d0a.to\n            generate_range_9f4d0a.list -> index_7e8d5a\n        } -> find_6d05b0.index\n        find_6d05b0.item -> missing_2b9d7c\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1f3a4a root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -124, y: 0, name: \"input\") property(String) input_9f8a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1b4c5e\n\n        instance(x: 0, y: 1) replace_7a6d1e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3f9c2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4f8b5f root.Std_k98ojb.Strings.Replace {}\n        input_9f8a3d -> replace_7a6d1e.input\n        \" \" -> replace_7a6d1e.search\n        \":\" -> replace_7a6d1e.replace\n        replace_7a6d1e.output -> replace_3f9c2d.input\n        \",\" -> replace_3f9c2d.search\n        \":\" -> replace_3f9c2d.replace\n        replace_3f9c2d.output -> replace_4f8b5f.input\n        \".\" -> replace_4f8b5f.search\n        \":\" -> replace_4f8b5f.replace\n        replace_4f8b5f.output -> output_1b4c5e\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -123, y: 0, name: \"input\") property(String) input_1a3f9e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4c8b7d\n\n        instance(x: 0, y: 1) replace_6f5c0f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9e3a2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4d7b8a root.Std_k98ojb.Strings.Replace {}\n        input_1a3f9e -> replace_6f5c0f.input\n        \" \" -> replace_6f5c0f.search\n        \":\" -> replace_6f5c0f.replace\n        replace_6f5c0f.output -> replace_9e3a2f.input\n        \",\" -> replace_9e3a2f.search\n        \":\" -> replace_9e3a2f.replace\n        replace_9e3a2f.output -> replace_4d7b8a.input\n        \".\" -> replace_4d7b8a.search\n        \":\" -> replace_4d7b8a.replace\n        replace_4d7b8a.output -> output_4c8b7d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_1e9f2f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"input\") property(String) input_1f8d3a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_7c6b9e\n\n        instance(x: 0, y: 1) replace_4b5b6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a3d2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9c7e1a root.Std_k98ojb.Strings.Replace {}\n        input_1f8d3a -> replace_4b5b6f.input\n        \" \" -> replace_4b5b6f.search\n        \":\" -> replace_4b5b6f.replace\n        replace_4b5b6f.output -> replace_8a3d2d.input\n        \",\" -> replace_8a3d2d.search\n        \":\" -> replace_8a3d2d.replace\n        replace_8a3d2d.output -> replace_9c7e1a.input\n        \".\" -> replace_9c7e1a.search\n        \":\" -> replace_9c7e1a.replace\n        replace_9c7e1a.output -> output_7c6b9e\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -172, y: 0, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4d5e6f\n\n        instance(x: 0, y: 1) replace_7g8h9i root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_jk0l1m root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_nopqrs root.Std_k98ojb.Strings.Replace {}\n        input_1a2b3c -> replace_7g8h9i.input\n        \" \" -> replace_7g8h9i.search\n        \":\" -> replace_7g8h9i.replace\n        replace_7g8h9i.output -> replace_jk0l1m.input\n        \",\" -> replace_jk0l1m.search\n        \":\" -> replace_jk0l1m.replace\n        replace_jk0l1m.output -> replace_nopqrs.input\n        \".\" -> replace_nopqrs.search\n        \":\" -> replace_nopqrs.replace\n        replace_nopqrs.output -> output_4d5e6f\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_e54b7f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -128, y: 0, name: \"input\") property(String) input_2a1f9e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4b8c5d\n\n        instance(x: 0, y: 1) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9f6a2e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_d8c4d1 root.Std_k98ojb.Strings.Replace {}\n        \" \" -> replace_7b3b7b.search\n        \":\" -> replace_7b3b7b.replace\n        input_2a1f9e -> replace_7b3b7b.input\n        replace_7b3b7b.output -> replace_9f6a2e.input\n        \",\" -> replace_9f6a2e.search\n        \":\" -> replace_9f6a2e.replace\n        replace_9f6a2e.output -> replace_d8c4d1.input\n        \".\" -> replace_d8c4d1.search\n        \":\" -> replace_d8c4d1.replace\n        replace_d8c4d1.output -> output_4b8c5d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_e54b7f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -172, y: 0, name: \"input\") property(String) input_9f1d3a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_8e6c5b\n\n        instance(x: 0, y: 1) replace_7b4f8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9a3d2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_5e6c1f root.Std_k98ojb.Strings.Replace {}\n        input_9f1d3a -> replace_7b4f8f.input\n        \" \" -> replace_7b4f8f.search\n        \":\" -> replace_7b4f8f.replace\n        replace_7b4f8f.output -> replace_9a3d2f.input\n        \",\" -> replace_9a3d2f.search\n        \":\" -> replace_9a3d2f.replace\n        replace_9a3d2f.output -> replace_5e6c1f.input\n        \".\" -> replace_5e6c1f.search\n        \":\" -> replace_5e6c1f.replace\n        replace_5e6c1f.output -> output_8e6c5b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -172, y: 0, name: \"input\") property(String) input_9a1b6f\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_4e3c8d\n\n        instance(x: 221, y: -48, name: \"replace_spaces_commas_dots_with_colon\") replace_0e9a7b root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) or_5f2d6c root.Std_k98ojb.Logic.Or {}\n        instance(x: -11, y: 9) or_8e1f4c root.Std_k98ojb.Logic.Or {}\n        \" \" -> or_5f2d6c.left\n        \",\" -> or_5f2d6c.right\n        or_5f2d6c.result -> replace_0e9a7b.search\n        \":\" -> replace_0e9a7b.replace\n        input_9a1b6f -> replace_0e9a7b.input\n        \".\" -> or_8e1f4c.left\n        or_5f2d6c.result -> or_8e1f4c.right\n        or_8e1f4c.result -> replace_0e9a7b.search\n        input_9a1b6f -> replace_0e9a7b.input\n        replace_0e9a7b.output -> output_4e3c8d\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_spaces_commas_dots_with_colon_5f2f6f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -156, y: 0, name: \"input\") property(String) input_9f1d6a\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7e8b5c\n\n        instance(x: 221, y: 1) replace_3e4b0c root.Std_k98ojb.Strings.Replace {}\n        input_9f1d6a -> replace_3e4b0c.input\n        \" ,.\" -> replace_3e4b0c.search\n        \":\" -> replace_3e4b0c.replace\n        replace_3e4b0c.output -> output_7e8b5c\n    }\n\n    \n\n    instance(x: 101, y: -67) replace_chars_aad0c2 root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -122, y: 0, name: \"input\") property(String) input_9a3f6d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_7e1c5b\n\n        instance(x: 0, y: 1) replace_4a8d3f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9b6c2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c7e5ea root.Std_k98ojb.Strings.Replace {}\n        input_9a3f6d -> replace_4a8d3f.input\n        \" \" -> replace_4a8d3f.search\n        \":\" -> replace_4a8d3f.replace\n        replace_4a8d3f.output -> replace_9b6c2d.input\n        \",\" -> replace_9b6c2d.search\n        \":\" -> replace_9b6c2d.replace\n        replace_9b6c2d.output -> replace_c7e5ea.input\n        \".\" -> replace_c7e5ea.search\n        \":\" -> replace_c7e5ea.replace\n        replace_c7e5ea.output -> output_7e1c5b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_3f4d2a root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -144, y: 0, name: \"input\") property(String) input_1a2f6e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5c7b9d\n\n        instance(x: 0, y: 1) replace_3e4b8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6a7d2c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9f8b1d root.Std_k98ojb.Strings.Replace {}\n        input_1a2f6e -> replace_3e4b8f.input\n        \" \" -> replace_3e4b8f.search\n        \":\" -> replace_3e4b8f.replace\n        replace_3e4b8f.output -> replace_6a7d2c.input\n        \",\" -> replace_6a7d2c.search\n        \":\" -> replace_6a7d2c.replace\n        replace_6a7d2c.output -> replace_9f8b1d.input\n        \".\" -> replace_9f8b1d.search\n        \":\" -> replace_9f8b1d.replace\n        replace_9f8b1d.output -> output_5c7b9d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_3e4a2f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -275, y: 1, name: \"input\") property(String) input_5f3e9d\n\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) characters_c7a8aa root.Std_k98ojb.Strings.Characters {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        characters_c7a8aa.characters -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_5f3e9d -> characters_c7a8aa.input\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_same_f6b3a8 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -275, y: 0, name: \"input\") property(String) input_9e8f3d\n\n        out(x: 1221, y: 5, name: \"output\") property(Bool) output_7a4b2c\n\n        instance(x: -94, y: 10) characters_6f0b6c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 8) length_1e9d5f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 7) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 574, y: -4) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 790, y: 5) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 1004, y: 3) equal_f89569_1 root.Std_k98ojb.Logic.Equal {}\n        characters_6f0b6c.characters -> intersection_c7c7e6.left\n        input_9e8f3d -> intersection_c7c7e6.right\n        length_1e9d5f.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> equal_f89569_1.left\n        equal_f89569.result -> equal_f89569_1.right\n        equal_f89569_1.result -> output_7a4b2c\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_5f9e0d root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -284, y: 0, name: \"input\") property(String) input_1a9d6f\n\n        out(x: 557, y: 5, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -95) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -275, y: -35) characters_c2e8c9 root.Std_k98ojb.Strings.Characters {}\n        input_1a9d6f -> characters_c2e8c9.input\n        characters_c2e8c9.characters -> intersection_c7c7e6.left\n        characters_c2e8c9.characters -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_ac7dfb root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -290, y: 0, name: \"input\") property(String) input_9e1f8d\n\n        out(x: 557, y: 5, name: \"output\") property(Bool) output_7c3a6b\n\n        instance(x: -92, y: 30) characters_c7c7e6 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 29) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 28) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 574, y: -1) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        input_9e1f8d -> characters_c7c7e6.input\n        characters_c7c7e6.characters -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        intersection_c7c7e6.intersection -> output_7c3a6b\n        characters_c7c7e6.characters -> intersection_c7c7e6.left\n        characters_c7c7e6.characters -> intersection_c7c7e6.right\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -277, y: 0, name: \"input\") property(String) input_8e9f1d\n\n        out(x: 1116, y: 7, name: \"output\") property(Bool) output_eb4c5a\n\n        instance(x: -120, y: 3) characters_c2a0ef root.Std_k98ojb.Strings.Characters {}\n        instance(x: 391, y: 1) map_9f8d7e root.Std_k98ojb.Iteration.Map {}\n        instance(x: 719, y: 4) all_f6c5ed root.Std_k98ojb.List.All {}\n        instance(x: 1010, y: -3) equal_2a7c1c root.Std_k98ojb.Logic.Equal {}\n        characters_c2a0ef.characters -> map_9f8d7e.items\n        func() {\n            in(x: -30, y: 49, name: \"element\") property(String) element_6e3e4f\n\n            out(x: 592, y: 41, name: \"output\") property(String) output_2a9b5c\n\n            instance(x: 106, y: 38) firstitem_7d1c8f root.Std_k98ojb.List.FirstItem {}\n            element_6e3e4f -> firstitem_7d1c8f.list\n            firstitem_7d1c8f.item -> output_2a9b5c\n        } -> map_9f8d7e.handler\n        map_9f8d7e.output_list -> all_f6c5ed.items\n        input_8e9f1d -> equal_2a7c1c.left\n        map_9f8d7e.output_list -> equal_2a7c1c.right\n        equal_2a7c1c.result -> all_f6c5ed.predicate\n        all_f6c5ed.all -> output_eb4c5a\n    }\n\n    \n\n    instance(x: 13, y: -9) is_same_3f8d0e root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -316, y: 0, name: \"input\") property(String) input_8f3a2d\n\n        out(x: 1016, y: 5, name: \"output\") property(Bool) output_7c9e4b\n\n        instance(x: -111, y: 1) characters_8e0e8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 341, y: 2) map_3a6d5f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 650, y: -4) contains_9b1c7f root.Std_k98ojb.List.Contains {}\n        instance(x: 870, y: 0) equal_f8e2ea root.Std_k98ojb.Logic.Equal {}\n        input_8f3a2d -> characters_8e0e8c.input\n        func() {\n            in(x: -20, y: 46, name: \"element\") property(String) element_9f6f7c\n\n            out(x: 386, y: 19, name: \"out\") property(String) out_5a2b1e\n\n            instance(x: 106, y: 17) tolowercase_3d0b8c root.Std_k98ojb.Strings.ToLower {}\n            element_9f6f7c -> tolowercase_3d0b8c.input\n            tolowercase_3d0b8c.output -> out_5a2b1e\n        } -> map_3a6d5f.handler\n        characters_8e0e8c.characters -> map_3a6d5f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(String) current_4b7b1e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_9c2a8d\n\n            instance(x: 74, y: -23) notequal_6f3c5c root.Std_k98ojb.Logic.NotEqual {}\n            current_4b7b1e -> notequal_6f3c5c.left\n            map_3a6d5f.output_list[0] -> notequal_6f3c5c.right\n            not(notequal_6f3c5c.result) -> bool_9c2a8d\n        } -> contains_9b1c7f.handler\n        map_3a6d5f.output_list -> contains_9b1c7f.list\n        contains_9b1c7f.is_contained -> equal_f8e2ea.left\n        true -> equal_f8e2ea.right\n        equal_f8e2ea.result -> output_7c9e4b\n    }\n\n    \n\n    instance(x: -80, y: 64) is_same_6a5d3f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -286, y: 0, name: \"input\") property(String) input_8e9f6d\n\n        out(x: 556, y: 93, name: \"output\") property(Bool) output_5b7a1c\n\n        instance(x: -92, y: 91) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 90) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 89) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -275, y: -35) characters_c5e8c9 root.Std_k98ojb.Strings.Characters {}\n        input_8e9f6d -> characters_c5e8c9.input\n        characters_c5e8c9.characters -> intersection_c7c7e6.left\n        characters_c5e8c9.characters -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_5b7a1c\n    }\n\n    \n\n    instance(x: -84, y: 159) is_same_8f2e3d root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -297, y: 0, name: \"input\") property(String) input_8f3a1e\n\n        out(x: 1009, y: 10, name: \"output\") property(Bool) output_6c2d7b\n\n        instance(x: -93, y: 11) characters_4b5e0f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 12) map_9a8f3f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 360, y: 13) allroot_6c1d7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 574, y: 14) equal_4e2a9f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 788, y: 15) firstitem_5c0f3f root.Std_k98ojb.List.FirstItem {}\n        characters_4b5e0f.characters -> map_9a8f3f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(String) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_9a8f3f.handler\n        map_9a8f3f.output_list -> allroot_6c1d7b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) not_75283f root.Std_k98ojb.Logic.Not {}\n            current_81298e -> not_75283f.input\n            not_75283f.result -> bool_4524be\n        } -> allroot_6c1d7b.handler\n        firstitem_5c0f3f.item -> equal_4e2a9f.left\n        map_9a8f3f.output_list -> equal_4e2a9f.right\n        equal_4e2a9f.result -> output_6c2d7b\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -285, y: -86, name: \"string\") property(String) string_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        string_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        string_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -288, y: 5, name: \"input\") property(String) input_1f0a3d\n\n        out(x: 1116, y: 7, name: \"output\") property(Bool) output_9e8c4b\n\n        instance(x: -133, y: 10) characters_c2f5ec root.Std_k98ojb.Strings.Characters {}\n        instance(x: 375, y: 15) map_3a1d6c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 693, y: 16) contains_9e4f0f root.Std_k98ojb.List.Contains {}\n        instance(x: 1007, y: 14) not_5a8f2c root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -24, y: 49, name: \"current\") property(String) current_1d9e0f\n\n            out(x: 687, y: 54, name: \"output\") property(Bool) output_5a8c2b\n\n            instance(x: 224, y: 57) equal_f3b7ea root.Std_k98ojb.Logic.Equal {}\n            current_1d9e0f -> equal_f3b7ea.left\n            input_1f0a3d.characters[0] -> equal_f3b7ea.right\n            equal_f3b7ea.result -> output_5a8c2b\n        } -> map_3a1d6c.handler\n        characters_c2f5ec.characters -> map_3a1d6c.items\n        false -> contains_9e4f0f.item\n        map_3a1d6c.output_list -> contains_9e4f0f.list\n        not_5a8f2c.result -> output_9e8c4b\n        contains_9e4f0f.is_contained -> not_5a8f2c.input\n    }\n\n    \n\n    instance(x: -71, y: 117) is_same_3d6d1f root.main.is_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -40, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n    instance(x: -40, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n        where: \"Std.Str.IsNumeric(it)\"\n    }\n    \n\n    instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -15, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"list\") property(List) list_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -15, y: 0) filter_2 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node_1 root.Std_k98ojb.List.Length {}\n        list_ai -> filter_2.list\n        filter_2.result -> list_length_node_1.items\n        list_length_node_1.length -> result_ai\n    }\n\n    \n    instance(x: -15, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -45, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 15, y: 0) count_node root.Std_k98ojb.Count {}\n        instance(x: 90, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.isNumeric()\"\n        }\n        string_ai -> characters_node.input\n        characters_node.characters -> count_node.items\n        count_node.onCount -> filter_7b3b7b.trigger\n        filter_7b3b7b.result -> count_node.count\n        count_node.iterations -> result_ai\n    }\n\n    \n    instance(x: 0, y: -46) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -10, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -10, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"list\") property(List) list_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -10, y: 0) filter_2 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node_1 root.Std_k98ojb.List.Length {}\n        list_ai -> filter_2.list\n        filter_2.result -> list_length_node_1.items\n        list_length_node_1.length -> result_ai\n    }\n\n    \n    instance(x: -10, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -10, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 20, y: 0) count_node root.Std_k98ojb.Count {}\n        instance(x: 40, y: 0) filter_1e2c8a root.Std_k98ojb.Query.Filter {\n            where: \"Std.IsNumeric(it)\"\n        }\n        string_ai -> characters_node.input\n        characters_node.characters -> count_node.items\n        count_node.onCount -> filter_1e2c8a.trigger\n        filter_1e2c8a.result -> count_node.count\n        count_node.iteration -> count_node.interation\n        count_node.done -> result_ai\n    }\n    \n\n    instance(x: 0, y: -30) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -16, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -16, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_7b3b7b.list\n        filter_7b3b7b.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_1 root.main.count_digits {}\n\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 30, y: 0) count_node root.Std_k98ojb.Count {}\n        instance(x: 60, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.isNumeric()\"\n        }\n        string_ai -> characters_node.input\n        characters_node.characters -> count_node.items\n        count_node.onCount -> filter_7b3b7b.trigger\n        filter_7b3b7b.result -> count_node.count\n        count_node.iterations -> result_ai\n    }\n\n    \n    instance(x: 0, y: -46) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -16, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 15, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        instance(x: -16, y: 40) count_node root.Std_k98ojb.Count {}\n        string_ai -> characters_node.input\n        characters_node.characters -> filter_7b3b7b.list\n        filter_7b3b7b.result -> count_node.items\n        count_node.onCount -> result_ai\n    }\n    \n\n    instance(x: 0, y: -16) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -20, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 30, y: 0) count_node root.Std_k98ojb.Count {}\n        instance(x: 60, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Std.IsNumeric(it)\"\n        }\n        string_ai -> characters_node.input\n        characters_node.characters -> filter_7b3b7b.list\n        count_node.iterations -> result_ai\n        filter_7b3b7b.result -> count_node.items\n        count_node.onCount -> count_node.count\n    }\n\n    \n    instance(x: 0, y: -30) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -30, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -30, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_7b3b7b.list\n        filter_7b3b7b.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_1 root.main.count_digits {}\n\n    \n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -344, y: 0, name: \"n\") property(Number) n_1a8f3e\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_2b4c6d\n\n        instance(x: 12, y: 136) expression_5f9a0c root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 303, y: 2) div_4d3e7f root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_9a8c0c  = 1\n        instance(x: 23, y: -1) mul_5e6f1f root.Std_k98ojb.Math.Mul {}\n        expression_5f9a0c.result -> mul_5e6f1f.second\n        n_1a8f3e -> mul_5e6f1f.first\n        data_9a8c0c -> div_4d3e7f.second\n        mul_5e6f1f.result -> div_4d3e7f.first\n        expression_5f9a0c.gen_0 -> n_1a8f3e\n        div_4d3e7f.result -> sum_2b4c6d\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_1a1f92 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = sum\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 62, y: -226) setter_2d44da root.Std_k98ojb.Variable.Setter {}\n        data_3c713b -> setter_2d44da.variable_name\n        expression_634b7e.result -> setter_2d44da.new_value\n        n_c88d35 -> expression_634b7e.gen_0\n        setter_2d44da.continue -> output_ebef81\n        0 -> setter_2d44da.new_value\n        n_c88d35 -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -341, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"(4*n*n-1)*(4*n*n-1)\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        div_64046c.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 23, y: -1) pow_5e9f8c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_5e9f8c.first\n        4 -> pow_5e9f8c.second\n        instance(x: 303, y: 2) add_1a0d3c root.Std_k98ojb.Math.Add {}\n        pow_5e9f8c.result -> add_1a0d3c.second\n        add_1a0d3c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 12, y: -1) pow_7e9f5c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_7e9f5c.x\n        4 -> pow_7e9f5c.y\n        pow_7e9f5c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -342, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"(4*n*n-1)*(4*n*n-1)\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        div_64046c.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = sum\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 62, y: -226) setter_2d44da root.Std_k98ojb.Variable.Setter {}\n        data_3c713b -> setter_2d44da.variable_name\n        expression_634b7e.result -> setter_2d44da.new_value\n        n_c88d35 -> expression_634b7e.gen_0\n        setter_2d44da.continue -> output_ebef81\n        0 -> setter_2d44da.new_value\n        n_c88d35 -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"(4*n*n-1)*(4*n*n-1)\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        div_64046c.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = sum\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 62, y: -226) setter_2d44da root.Std_k98ojb.Variable.Setter {}\n        data_3c713b -> setter_2d44da.variable_name\n        expression_634b7e.result -> setter_2d44da.new_value\n        n_c88d35 -> expression_634b7e.gen_0\n        setter_2d44da.continue -> output_ebef81\n        0 -> setter_2d44da.new_value\n        n_c88d35 -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 23, y: -1) pow_5f7c9e root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_5f7c9e.x\n        4 -> pow_5f7c9e.y\n        pow_5f7c9e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -104, y: 24, name: \"size\") property(Number) size_8f1e3d\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_9a2c5b\n\n        instance(x: 0, y: -26) mul_6e4b7c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_8f1e3d -> mul_6e4b7c.first\n        data_cde0dc -> mul_6e4b7c.second\n        mul_6e4b7c.result -> surface_area_9a2c5b\n    }\n\n    \n\n    instance(x: 322, y: 568) cube_surface_area_e3f8d1 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -102, y: 21, name: \"size\") property(Number) size_9a0f8d\n\n        out(x: 1046, y: 11, name: \"surface area\") property(Number) surface_area_1e3c2b\n\n        instance(x: 17, y: -18) mul_7f4f5c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 327, y: 133) data_cde0dc  = 6\n        size_9a0f8d -> mul_7f4f5c.first\n        data_cde0dc -> mul_7f4f5c.second\n        mul_7f4f5c.result -> surface_area_1e3c2b\n    }\n\n    \n\n    instance(x: 120, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: 45, name: \"size\") property(Number) size_9f2e6d\n\n        out(x: 656, y: -68, name: \"surface area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: -105) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9f2e6d root.Std_k98ojb.Math.Mul {}\n        size_9f2e6d -> mul_f892a4.first\n        size_9f2e6d -> mul_f892a4.second\n        mul_f892a4.result -> mul_9f2e6d.first\n        6 -> mul_9f2e6d.second\n        mul_9f2e6d.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -101, y: 15, name: \"size\") property(Number) size_9e8a1f\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_5c3d0b\n\n        instance(x: 94, y: -22) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -105) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        size_9e8a1f -> pow_584bfd.x\n        3 -> pow_584bfd.y\n        pow_584bfd.result -> mul_2f9d09.first\n        6 -> mul_2f9d09.second\n        mul_2f9d09.result -> surface_area_5c3d0b\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -103, y: 25, name: \"size\") property(Number) size_1a3f9e\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_7b4c2d\n\n        instance(x: 0, y: -10) mul_f8a6d5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 93, y: -55) mul_1f3e9c root.Std_k98ojb.Math.Mul {}\n        size_1a3f9e -> mul_f8a6d5.first\n        size_1a3f9e -> mul_f8a6d5.second\n        6 -> mul_1f3e9c.first\n        mul_f8a6d5.result -> mul_1f3e9c.second\n        mul_1f3e9c.result -> surface_area_7b4c2d\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -107, y: 15, name: \"size\") property(Number) size_1a3f6d\n\n        out(x: 111, y: -18, name: \"surface area\") property(Number) surface_area_7e2c5b\n\n        instance(x: 9, y: -25) mul_4b8f0f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 92, y: 36) data_1d3a6d  = 6\n        size_1a3f6d -> mul_4b8f0f.first\n        data_1d3a6d -> mul_4b8f0f.second\n        mul_4b8f0f.result -> surface_area_7e2c5b\n    }\n\n    \n\n    instance(x: 140, y: -29) cube_surface_area_9a9d3f root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -102, y: 35, name: \"size\") property(Number) size_1a9f3e\n\n        out(x: 1072, y: 14, name: \"surface area\") property(Number) surface_area_8c7d6b\n\n        instance(x: 12, y: -10) mul_4b5e0f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a9f3e -> mul_4b5e0f.first\n        data_cde0dc -> mul_4b5e0f.second\n        mul_4b5e0f.result -> surface_area_8c7d6b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -107, y: 23, name: \"size\") property(Number) size_1a3f0d\n\n        out(x: 1024, y: 7, name: \"surface area\") property(Number) surface_area_9b8c2e\n\n        instance(x: 16, y: -12) mul_5a6e78 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a3f0d -> mul_5a6e78.first\n        data_cde0dc -> mul_5a6e78.second\n        mul_5a6e78.result -> surface_area_9b8c2e\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -100, y: 0, name: \"size\") property(Number) size_1a8e3f\n\n        out(x: 0, y: 0, name: \"surface area\") property(Number) surface_area_7b2d6c\n\n        instance(x: 0, y: -100) mul_5f9b4c root.Std_k98ojb.Math.Mul {}\n        size_1a8e3f -> mul_5f9b4c.first\n        6 -> mul_5f9b4c.second\n        instance(x: 0, y: -200) mul_2d7a1f root.Std_k98ojb.Math.Mul {}\n        mul_5f9b4c.result -> mul_2d7a1f.first\n        size_1a8e3f -> mul_2d7a1f.second\n        mul_2d7a1f.result -> surface_area_7b2d6c\n    }\n\n    \n\n    instance(x: 100, y: -200) cube_surface_area_5f9b4c root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -103, y: 41, name: \"size\") property(Number) size_1f3a2d\n\n        out(x: 1025, y: 11, name: \"surface area\") property(Number) surface_area_8e7c9b\n\n        instance(x: 0, y: -15) mul_6e4c2c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 240, y: 67) data_1a3f5d  = [size]\n        size_1f3a2d -> data_1a3f5d.size\n        mul_6e4c2c.first -> data_1a3f5d.a\n        6 -> mul_6e4c2c.second\n        data_1a3f5d.b -> mul_6e4c2c.first\n        size_1f3a2d -> data_1a3f5d.b\n        mul_6e4c2c.result -> surface_area_8e7c9b\n    }\n\n    \n\n    instance(x: 325, y: -26) cube_surface_area_0e6f92 root.main.cube_surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 10, name: \"list\") property(List) list_6a9f1e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5b3c4d\n\n        instance(x: 201, y: 62) sub_7c8a2f root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1e0f6c root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_3d9f5a root.Std_k98ojb.List.Min {}\n        list_6a9f1e -> max_1e0f6c.items\n        list_6a9f1e -> min_3d9f5a.items\n        max_1e0f6c.max -> sub_7c8a2f.first\n        min_3d9f5a.min -> sub_7c8a2f.second\n        sub_7c8a2f.result -> output_5b3c4d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_1e0f6c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 10, name: \"list\") property(List) list_1a8f9e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5c2b3d\n\n        instance(x: 201, y: 62) sub_6c4a0f root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1e7c8f root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_5d3c9f root.Std_k98ojb.List.Min {}\n        list_1a8f9e -> max_1e7c8f.items\n        list_1a8f9e -> min_5d3c9f.items\n        max_1e7c8f.max -> sub_6c4a0f.first\n        min_5d3c9f.min -> sub_6c4a0f.second\n        sub_6c4a0f.result -> output_5c2b3d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_7e8b1e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -28, y: 0, name: \"list\") property(List) list_1e3f6a\n\n        out(x: 441, y: 12, name: \"difference\") property(Number) difference_2b9c8d\n\n        instance(x: 72, y: 15) sub_7f4f5c root.Std_k98ojb.Math.Sub {}\n        instance(x: -148, y: 0) max_1a3e6f root.Std_k98ojb.List.Max {}\n        instance(x: -147, y: -162) min_8d2d9c root.Std_k98ojb.List.Min {}\n        list_1e3f6a -> max_1a3e6f.items\n        list_1e3f6a -> min_8d2d9c.items\n        max_1a3e6f.max -> sub_7f4f5c.first\n        min_8d2d9c.min -> sub_7f4f5c.second\n        sub_7f4f5c.result -> difference_2b9c8d\n    }\n\n    \n\n    instance(x: 48, y: -37) diff_max_min_1a3e6f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1e9b8a\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5f3d2c\n\n        instance(x: 201, y: 62) sub_6e7a0f root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_4e1b9f root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_5c3d8c root.Std_k98ojb.List.Min {}\n        list_1e9b8a -> max_4e1b9f.items\n        list_1e9b8a -> min_5c3d8c.items\n        max_4e1b9f.max -> sub_6e7a0f.first\n        min_5c3d8c.min -> sub_6e7a0f.second\n        sub_6e7a0f.result -> output_5f3d2c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 15, name: \"list\") property(List) list_1a8f6e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_870503 root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_1a8f6e -> max_f3b46d.items\n        list_1a8f6e -> min_870503.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_870503.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -31, y: 13, name: \"list\") property(List) list_1a0f5e\n\n        out(x: 445, y: 11, name: \"difference\") property(Number) difference_4c9d3b\n\n        instance(x: 188, y: 10) sub_6c7c2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1a8f0f root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -375) min_3d4a5f root.Std_k98ojb.List.Min {}\n        list_1a0f5e -> max_1a8f0f.items\n        list_1a0f5e -> min_3d4a5f.items\n        max_1a8f0f.max -> sub_6c7c2e.first\n        min_3d4a5f.min -> sub_6c7c2e.second\n        sub_6c7c2e.result -> difference_4c9d3b\n    }\n\n    \n\n    instance(x: 48, y: -11) diff_max_min_1f8f0f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1a9f0e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_f3b46d.items -> list_1a9f0e\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.items -> list_1a9f0e\n        min_4d4556.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -31, y: 14, name: \"list\") property(List) list_1a0f2e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_4c7d9b\n\n        instance(x: 201, y: 62) sub_6a3f8e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_2e1f5f root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_7d9c4f root.Std_k98ojb.List.Min {}\n        list_1a0f2e -> max_2e1f5f.items\n        list_1a0f2e -> min_7d9c4f.items\n        max_2e1f5f.max -> sub_6a3f8e.first\n        min_7d9c4f.min -> sub_6a3f8e.second\n        sub_6a3f8e.result -> output_4c7d9b\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_5f2d1e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1a8b6f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_f3b46d.items -> list_1a8b6f\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.items -> list_1a8b6f\n        min_4d4556.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 27, name: \"list\") property(List) list_1e9b6f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_870503 root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_1e9b6f -> max_f3b46d.items\n        list_1e9b6f -> min_870503.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_870503.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: 0, name: \"input\") property(Number) input_5f9a3e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 438, y: 57) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n        input_5f9a3e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> equal_7836b4.left\n        0 -> equal_7836b4.right\n        equal_7836b4.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_f15e9e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: 0, name: \"input\") property(Number) input_1a8f9e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: 62) modulo_cb50ae root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: -26) equal_5e9c3a root.Std_k98ojb.Logic.Equal {}\n        input_1a8f9e -> modulo_cb50ae.value\n        2 -> modulo_cb50ae.divisor\n        modulo_cb50ae.result -> equal_5e9c3a.left\n        0 -> equal_5e9c3a.right\n        equal_5e9c3a.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -36, y: 2, name: \"input\") property(Number) input_1e3f0d\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_1e3f0d -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_1e3f0d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_1e3f0d -> expression_9fba8c.gen_0\n        input_1e3f0d -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_0d4e1c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_1e9d8f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: 62) modulo_cb50ae root.Std_k98ojb.Math.Modulo {}\n        instance(x: 442, y: 57) equal_9a4e2c root.Std_k98ojb.Logic.Equal {}\n        input_1e9d8f -> modulo_cb50ae.value\n        2 -> modulo_cb50ae.divisor\n        modulo_cb50ae.result -> equal_9a4e2c.left\n        0 -> equal_9a4e2c.right\n        equal_9a4e2c.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_15f9e9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: 11, name: \"n\") property(Number) n_1a8f5e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7b2c0d\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 432, y: 56) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n        n_1a8f5e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> equal_7836b4.left\n        0 -> equal_7836b4.right\n        equal_7836b4.result -> output_7b2c0d\n    }\n\n    \n\n    instance(x: 48, y: -5) is_even_15f9e9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -32, y: 2, name: \"input\") property(Number) input_1a0f5e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_1a0f5e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_1a0f5e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_1a0f5e -> expression_9fba8c.gen_0\n        input_1a0f5e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_0e5d4c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_1a9f0e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_1a9f0e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_1a9f0e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_1a9f0e -> expression_9fba8c.gen_0\n        input_1a9f0e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_0e5d4c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -32, y: 2, name: \"input\") property(Number) input_1a0f6e\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) equal_1f9a3c root.Std_k98ojb.Logic.Equal {}\n            2 -> modulo_c76d2b.divisor\n            0 -> equal_1f9a3c.right\n            equal_1f9a3c.result -> output_efbc78\n            modulo_c76d2b.result -> equal_1f9a3c.left\n            _index_170471 -> modulo_c76d2b.value\n        } -> map_c73e3b.context\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        false -> contains_32727d.item\n        map_c73e3b.output_list -> contains_32727d.list\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n        input_1a0f6e -> map_c73e3b.items\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_1a8e5f\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_1a8e5f -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_1a8e5f -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_1a8e5f -> expression_9fba8c.gen_0\n        input_1a8e5f -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5e4d0c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: 11, name: \"n\") property(Number) n_9e8a2f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 432, y: 57) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n        n_9e8a2f -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        0 -> equal_7836b4.right\n        modulo_c76d2b.result -> equal_7836b4.left\n        equal_7836b4.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: -5) is_even_15f9e9 root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"characters\") characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"first repeated character\") find_2d44da root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 1) tolower_634b7e root.Std_k98ojb.Strings.ToLower {}\n        characters_3c713b.characters -> find_2d44da.items\n        input_0 -> characters_3c713b.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            tolower_634b7e.output -> contains_45e806.input\n            current_afd5b1 -> contains_45e806.contains\n            input_0 -> tolower_634b7e.input\n            contains_45e806.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_2d44da.predicate\n        find_2d44da.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"characters\") characters_1a7f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"first repeated character\") find_2d4e3f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``characters_1a7f8c``_9e5b6a root.Std_k98ojb.List.Flatten {}\n        characters_1a7f8c.characters -> ``characters_1a7f8c``.list\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Any) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2f8c0a root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            ``characters_1a7f8c``.list -> contains_2f8c0a.input\n            current_afd5b1 -> contains_2f8c0a.contains\n            contains_2f8c0a.result -> notequal_148aeb.left\n            false -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_2d4e3f.predicate\n        ``characters_1a7f8c``.list -> find_2d4e3f.items\n        input_0 -> characters_1a7f8c.input\n        find_2d4e3f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -288, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5e3f7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_8d4a9f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -1, y: 0) filter_6a2f7c root.Std_k98ojb.Iteration.Filter {}\n        characters_5e3f7c.characters -> filter_6a2f7c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2f8c7a root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_2f8c7a.input\n            input_0 -> contains_2f8c7a.contains\n            contains_2f8c7a.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> filter_6a2f7c.handler\n        find_8d4a9f.items -> characters_5e3f7c.characters\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2f8c7a root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_2f8c7a.input\n            input_0 -> contains_2f8c7a.contains\n            contains_2f8c7a.result -> bool_1eb6e9\n        } -> find_8d4a9f.predicate\n        filter_6a2f7c.output_list -> find_8d4a9f.items\n        find_8d4a9f.item -> result_0\n        input_0 -> characters_5e3f7c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.characters -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) substring_45e806 root.Std_k98ojb.Strings.Substring {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> substring_45e806.input\n            substring_45e806.start -> substring_45e806.end\n            find_de624f.index -> substring_45e806.start\n            substring_45e806.substring -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"characters\") characters_1a7f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"first repeated character\") find_0d5e3c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_2f9a1f root.Std_k98ojb.Strings.Contains {}\n        characters_1a7f9c.characters -> find_0d5e3c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) list_3c713b root.Std_k98ojb.List.Empty {}\n            contains_2f9a1f.input -> characters_1a7f9c.input\n            current_afd5b1 -> contains_2f9a1f.contains\n            list_3c713b.list -> contains_2f9a1f.list\n            contains_2f9a1f.result -> bool_1eb6e9\n        } -> find_0d5e3c.predicate\n        input_0 -> characters_1a7f9c.input\n        find_0d5e3c.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5e7f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4a8d6c root.Std_k98ojb.Iteration.Find {}\n        instance(x: -55, y: 52) ``Find repeated character_1`` root.Std_k98ojb.Iteration.Filter {}\n        characters_5e7f9c.characters -> ``Find repeated character_1``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3a7c8f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_3a7c8f.input\n            input_0 -> contains_3a7c8f.contains\n            contains_3a7c8f.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``Find repeated character_1``.handler\n        ``Find repeated character_1``.output_list -> find_4a8d6c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3a7c8f root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_3a7c8f.input\n            input_0 -> contains_3a7c8f.contains\n            contains_3a7c8f.result -> bool_1eb6e9\n        } -> find_4a8d6c.predicate\n        characters_5e7f9c.characters -> find_4a8d6c.items\n        find_4a8d6c.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.characters -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) substring_45e806 root.Std_k98ojb.Strings.Substring {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> substring_45e806.input\n            substring_45e806.start -> substring_45e806.end\n            find_de624f.index -> substring_45e806.start\n            substring_45e806.substring -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_4e7b8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5a9d3f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -55, y: 60) filter_2a1f6c root.Std_k98ojb.Iteration.Filter {}\n        characters_4e7b8c.characters -> find_5a9d3f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Any) current_0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2a7b3c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_0 -> contains_2a7b3c.input\n            characters_4e7b8c.characters -> contains_2a7b3c.contains\n            contains_2a7b3c.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_5a9d3f.predicate\n        instance(x: -55, y: 60) ``Finds the first repeated character in a given string_0b1361`` root.Std_k98ojb.Iteration.Filter {}\n        characters_4e7b8c.characters -> ``Finds the first repeated character in a given string_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Any) current_0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2a7b3c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_0 -> contains_2a7b3c.input\n            characters_4e7b8c.characters -> contains_2a7b3c.contains\n            contains_2a7b3c.result -> equal_a54bdc.left\n            1 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> ``Finds the first repeated character in a given string_0b1361``.handler\n        find_5a9d3f.item -> filter_2a1f6c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Any) current_0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2a7b3c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_0 -> contains_2a7b3c.input\n            ``Finds the first repeated character in a given string_0b1361``.output_list -> contains_2a7b3c.contains\n            contains_2a7b3c.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> filter_2a1f6c.handler\n        filter_2a1f6c.output_list -> result_0\n        input_0 -> characters_4e7b8c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.characters -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) substring_45e806 root.Std_k98ojb.Strings.Substring {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> substring_45e806.input\n            substring_45e806.start -> substring_45e806.end\n            find_de624f.index -> substring_45e806.start\n            substring_45e806.substring -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"characters\") characters_1a9d4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"first repeated character\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_1a9d4f.characters -> find_1e8c5c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_2f8a3c root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) contains_d42dce_0 root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> slice_2f8a3c.start\n            -1 -> slice_2f8a3c.end\n            characters_1a9d4f.characters -> slice_2f8a3c.list\n            slice_2f8a3c.output -> contains_d42dce_.input\n            current_afd5b1 -> contains_d42dce_.contains\n            contains_d42dce_.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        input_0 -> characters_1a9d4f.input\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3b2d8c root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -1) list_remove_7e6f9a root.Std_k98ojb.List.Remove {}\n            min_3b2d8c.items -> list_remove_7e6f9a.list\n            min_3b2d8c.min -> list_remove_7e6f9a.index\n            list_remove_7e6f9a.resultWithoutItem -> find_6d05b0.items\n            elem_9f6850 -> notequal_807ffd.right\n            list_remove_7e6f9a.resultWithoutItem -> min_3b2d8c.items\n            0 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3e8c1d root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -50) list_remove_7a9f2f root.Std_k98ojb.List.Remove {}\n            min_3e8c1d.items -> list_remove_7a9f2f.list\n            find_6d05b0.index -> list_remove_7a9f2f.index\n            list_remove_7a9f2f.listWithoutItem -> min_3e8c1d.items\n            elem_9f6850 -> notequal_807ffd.right\n            min_3e8c1d.min -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -290, y: -0, name: \"list\") property(List) list_9f5a6e\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_2d8c1e root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -60) list_remove_3a7f6f root.Std_k98ojb.List.Remove {}\n            min_2d8c1e.items -> list_remove_3a7f6f.list\n            find_6d05b0.index -> list_remove_3a7f6f.index\n            list_remove_3a7f6f.listWithoutItem -> min_2d8c1e.items\n            0 -> notequal_807ffd.right\n            elem_9f6850 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f5a6e -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_2c1b6e root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_2c1b6e.items\n            instance(x: -113, y: 34) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            elem_9f6850 -> notequal_807ffd.left\n            min_2c1b6e.min -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3e6c1d root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -113) list_remove_2a7f8c root.Std_k98ojb.List.Remove {}\n            min_3e6c1d.items -> list_remove_2a7f8c.list\n            elem_9f6850 -> list_remove_2a7f8c.index\n            list_remove_2a7f8c.listWithoutItem -> min_3e6c1d.items\n            min_3e6c1d.min -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: -0, name: \"list\") property(List) list_9a5f3e\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_8c6b7d\n\n        instance(x: 0, y: 0) min_2f4b4c root.Std_k98ojb.List.Min {}\n        list_9a5f3e -> min_2f4b4c.items\n        instance(x: -1, y: 0) filter_6d05b0 root.Std_k98ojb.Query.Filter {\n            where: \"it != min\"\n        }\n        func() {\n            in(x: -113, y: 34, name: \"min\") property(Number) min_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) notequal_1088d5 root.Std_k98ojb.Logic.NotEqual {}\n            min_2f4b4c.min -> notequal_1088d5.left\n            it -> notequal_1088d5.right\n            notequal_1088d5.result -> bool_af09a7\n        } -> filter_6d05b0.handler\n        list_9a5f3e -> filter_6d05b0.list\n        instance(x: 0, y: 0) min_2f4b4c_1 root.Std_k98ojb.List.Min {}\n        filter_6d05b0.result -> min_2f4b4c_1.items\n        min_2f4b4c_1.min -> number_8c6b7d\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1c3b2d root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -100) list_remove_4f8e5a root.Std_k98ojb.List.Remove {}\n            min_1c3b2d.items -> list_remove_4f8e5a.list\n            0 -> list_remove_4f8e5a.index\n            list_remove_4f8e5a.listWithoutItem -> min_1c3b2d.items\n            elem_9f6850 -> notequal_807ffd.right\n            min_1c3b2d.min -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: -193, name: \"items\") property(List) items_ai\n        out(x: 46, y: 158, name: \"second_min\") property(Number) second_min_9f7759\n\n        instance(x: -105, y: -110) min_node root.Std_k98ojb.List.Min {}\n        instance(x: -105, y: 111) remove_node root.Std_k98ojb.List.Remove {}\n        instance(x: -105, y: 222) min2_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> min_node.items\n        min_node.min -> remove_node.index\n        items_ai -> remove_node.list\n        remove_node.listWithoutItem -> min2_node.items\n\n        min2_node.min -> second_min_9f7759\n    }\n\n    \n\n    instance(x: -174, y: -63) second_smallest_d6e930 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1c3b4e root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -90) list_remove_7f8a2d root.Std_k98ojb.List.Remove {}\n            min_1c3b4e.items -> list_remove_7f8a2d.list\n            0 -> list_remove_7f8a2d.index\n            list_remove_7f8a2d.listWithoutItem -> min_1c3b4e.items\n            elem_9f6850 -> notequal_807ffd.right\n            min_1c3b4e.min -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3e8c2d root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 410, y: 44) list_remove_7f0a9c root.Std_k98ojb.List.Remove {}\n            min_3e8c2d.items -> list_remove_7f0a9c.list\n            min_3e8c2d.min -> list_remove_7f0a9c.index\n            list_remove_7f0a9c.resultWithoutItem -> find_6d05b0.items\n            elem_9f6850 -> notequal_807ffd.right\n            list_remove_7f0a9c.itemAtIndex -> notequal_807ffd.left\n            0 -> min_3e8c2d.items\n            list_abed4a -> min_3e8c2d.items\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_RAG_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15912,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -387, y: -202, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -393, y: 28, name: \"list2\") property(List) list2_5b4c0d\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_3f6c1a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_3f6c1a\n        ifexpression_875761.value -> output_3f6c1a\n        list1_8a2f9e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_5b4c0d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        list1_8a2f9e -> getat_ce2a48.list\n        for_d26972.item -> setter_9d4f1c.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_3b7c5f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -325, y: -206, name: \"list1\") property(List) list1_9e3b8f\n        in(x: -333, y: 20, name: \"list2\") property(List) list2_6c0d7a\n\n        out(x: 1265, y: -205, name: \"output\") property(Bool) output_4b1f9e\n\n        instance(x: 1058, y: -203) intersection_3f2c6c root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3b8f -> intersection_3f2c6c.left\n        list2_6c0d7a -> intersection_3f2c6c.right\n        instance(x: 1055, y: -37) notempty_c4e8f9 root.Std_k98ojb.List.NotEmpty {}\n        intersection_3f2c6c.intersect -> notempty_c4e8f9.list\n        notempty_c4e8f9.isEmpty -> output_4b1f9e\n    }\n\n    \n\n    instance(x: -293, y: -5) common_element_7a4dad root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -467, y: -215, name: \"list1\") property(List) list1_9a2f6d\n        in(x: -469, y: 25, name: \"list2\") property(List) list2_7c3b8e\n\n        out(x: 1225, y: 0, name: \"output\") property(Bool) output_4c1f9a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 752, y: 93) intersection_7a5b3f root.Std_k98ojb.Sets.Intersection {}\n        list1_9a2f6d -> intersection_7a5b3f.left\n        list2_7c3b8e -> intersection_7a5b3f.right\n        instance(x: 752, y: 93) notempty_4f0b3a root.Std_k98ojb.List.NotEmpty {}\n        intersection_7a5b3f.intersect -> notempty_4f0b3a.list\n        notempty_4f0b3a.isEmpty -> output_4c1f9a\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_fc79d5 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -465, y: -235, name: \"list1\") property(List) list_3a8f6e\n        in(x: -485, y: 30, name: \"list2\") property(List) list_7c9b5d\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_1a0e3c\n\n        instance(x: 752, y: 93) intersection_8f6a4f root.Std_k98ojb.Sets.Intersection {}\n        list_3a8f6e -> intersection_8f6a4f.left\n        list_7c9b5d -> intersection_8f6a4f.right\n        instance(x: 1218, y: 147) notempty_1f0e2a root.Std_k98ojb.List.NotEmpty {}\n        intersection_8f6a4f.intersection -> notempty_1f0e2a.list\n        notempty_1f0e2a.isEmpty -> output_1a0e3c\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_9b7d5f root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -467, y: -214, name: \"list1\") property(List) list1_9a2b4f\n        in(x: -469, y: 30, name: \"list2\") property(List) list2_6e8d0c\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_3c1b9a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_3c1b9a\n        ifexpression_875761.value -> output_3c1b9a\n        list1_9a2b4f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_6e8d0c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        for_d26972.item -> setter_9d4f1c.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_7b5d6f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -333, y: -215, name: \"list1\") property(List) list1_9e3f6d\n        in(x: -341, y: 13, name: \"list2\") property(List) list2_8a7c5b\n\n        out(x: 1240, y: -207, name: \"output\") property(Bool) output_4f1f9e\n\n        instance(x: 1006, y: -204) contains_3d9c8f root.Std_k98ojb.List.Contains {}\n        instance(x: 375, y: -206) filter_7a2e5c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -28, y: -25, name: \"current\") property(Any) current_1f0d9f\n\n            out(x: 706, y: 49, name: \"output\") property(Bool) output_5e7b2c\n\n            instance(x: 226, y: 56) contains_4a6b8c root.Std_k98ojb.List.Contains {}\n            current_1f0d9f -> contains_4a6b8c.item\n            list2_8a7c5b -> contains_4a6b8c.list\n            contains_4a6b8c.is_contained -> output_5e7b2c\n        } -> filter_7a2e5c.handler\n        list1_9e3f6d -> filter_7a2e5c.items\n        filter_7a2e5c.output_list -> contains_3d9c8f.list\n        true -> contains_3d9c8f.item\n        contains_3d9c8f.is_contained -> output_4f1f9e\n    }\n\n    \n\n    instance(x: -300, y: 0) common_element_eb7a2 root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -475, y: -214, name: \"list1\") property(List) list1_0e9b5f\n        in(x: -483, y: 30, name: \"list2\") property(List) list2_8c7d3a\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_6c4b0e\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_6c4b0e\n        ifexpression_875761.value -> output_6c4b0e\n        list1_0e9b5f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_8c7d3a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_d26972.done -> output_6c4b0e\n        for_d26972.item -> setter_9d4f1c.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_5a3d7f root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -325, y: -205, name: \"list1\") property(List) list1_9e3f5d\n        in(x: -323, y: 27, name: \"list2\") property(List) list2_7a4c6b\n\n        out(x: 1220, y: 15, name: \"output\") property(Bool) output_8f1b9e\n\n        instance(x: 1023, y: -21) intersection_5d8c7f root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3f5d -> intersection_5d8c7f.left\n        list2_7a4c6b -> intersection_5d8c7f.right\n        instance(x: 1050, y: -152) notempty_3e5a3f root.Std_k98ojb.List.NotEmpty {}\n        intersection_5d8c7f.intersection -> notempty_3e5a3f.list\n        notempty_3e5a3f.isEmpty -> output_8f1b9e\n    }\n\n    \n\n    instance(x: -311, y: 0) common_element_2f6c4f root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -285, y: -86, name: \"list1\") property(List) list1_3af6ba\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_5d1a3c root.Std_k98ojb.List.NotEmpty {}\n        list1_3af6ba -> intersection_c7c7e6.left\n        list2_c62075 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_5d1a3c.list\n        notempty_5d1a3c.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -299, y: -216, name: \"list1\") property(List) list1_3a0f6e\n        in(x: -311, y: 19, name: \"list2\") property(List) list2_9c4b5d\n\n        out(x: 1237, y: -208, name: \"output\") property(Bool) output_8e1b3a\n\n        instance(x: 1020, y: -206) contains_6f3c2c root.Std_k98ojb.List.Contains {}\n        instance(x: 450, y: -207) intersection_5d4f7c root.Std_k98ojb.Sets.Intersection {}\n        list1_3a0f6e -> intersection_5d4f7c.left\n        list2_9c4b5d -> intersection_5d4f7c.right\n        intersection_5d4f7c.intersection -> contains_6f3c2c.list\n        1 -> contains_6f3c2c.item\n        contains_6f3c2c.is_contained -> output_8e1b3a\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_7a4dad root.main.has_common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -535, y: 5, name: \"list\") property(List) list_4f8a3e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_4f8a3e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_4f8a3e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_3a5b7f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -533, y: 1, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 574, y: -97) not_75283f root.Std_k98ojb.Logic.Not {}\n        list_3af6ba -> intersection_c7c7e6.left\n        instance(x: 0, y: -96) generate_range_1a9d2f root.Std_k98ojb.List.GenerateRange {\n            from: \"first\"\n            to: \"last\"\n        }\n        generate_range_1a9d2f.list -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        not_75283f.result -> output_c7097f\n        equal_f89569.result -> not_75283f.input\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        list_3af6ba -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> generate_range_1a9d2f.from\n        instance(x: -275, y: 34) getat_7e5b3c root.Std_k98ojb.List.GetAt {}\n        list_3af6ba -> getat_7e5b3c.list\n        length_8166b0.length -> getat_7e5b3c.index\n        getat_7e5b3c.itemAtIndex -> generate_range_1a9d2f.to\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_ac7dfb root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -521, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 574, y: 3) map_1c8f2a root.Std_k98ojb.Iteration.Map {\n            func() {\n                in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n\n                out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n                instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n                instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n                current_81298e -> modulo_ad7b2a.value\n                1 -> modulo_ad7b2a.divisor\n                modulo_ad7b2a.result -> notequal_cb8a55.left\n                0 -> notequal_cb8a55.right\n                notequal_cb8a55.result -> bool_4524be\n            }\n        }\n        instance(x: -276, y: 18) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        list_3af6ba -> map_1c8f2a.items\n        map_1c8f2a.output_list -> filter_c91965.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Bool) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        instance(x: -276, y: 87) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 574, y: 88) map_1c8f2a_2 root.Std_k98ojb.Iteration.Map {\n            func() {\n                in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n\n                out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n                instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n                instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n                current_81298e -> modulo_ad7b2a.value\n                1 -> modulo_ad7b2a.divisor\n                modulo_ad7b2a.result -> notequal_cb8a55.left\n                0 -> notequal_cb8a55.right\n                notequal_cb8a55.result -> bool_4524be\n            }\n        }\n        instance(x: -276, y: 158) filter_c91965_2 root.Std_k98ojb.Iteration.Filter {}\n        list_3af6ba -> getat_ce2a48.list\n        1 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> map_1c8f2a_2.items\n        map_1c8f2a_2.output_list -> filter_c91965_2.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Bool) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965_2.handler\n        instance(x: -276, y: 227) getat_ce2a48_2 root.Std_k98ojb.List.GetAt {}\n        instance(x: 574, y: 228) map_1c8f2a_3 root.Std_k98ojb.Iteration.Map {\n            func() {\n                in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n\n                out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n                instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n                instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n                current_81298e -> modulo_ad7b2a.value\n                1 -> modulo_ad7b2a.divisor\n                modulo_ad7b2a.result -> notequal_cb8a55.left\n                0 -> notequal_cb8a55.right\n                notequal_cb8a55.result -> bool_4524be\n            }\n        }\n        instance(x: -276, y: 298) filter_c91965_3 root.Std_k98ojb.Iteration.Filter {}\n        list_3af6ba -> getat_ce2a48_2.list\n        2 -> getat_ce2a48_2.index\n        getat_ce2a48_2.itemAtIndex -> map_1c8f2a_3.items\n        map_1c8f2a_3.output_list -> filter_c91965_3.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Bool) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965_3.handler\n        instance(x: -276, y: 367) getat_ce2a48_3 root.Std_k98ojb.List.GetAt {}\n        instance(x: 574, y: 368) map_1c8f2a_4 root.Std_k98ojb.Iteration.Map {\n            func() {\n                in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n\n                out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n                instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n                instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n                current_81298e -> modulo_ad7b2a.value\n                1 -> modulo_ad7b2a.divisor\n                modulo_ad7b2a.result -> notequal_cb8a55.left\n                0 -> notequal_cb8a55.right\n                notequal_cb8a55.result -> bool_",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -569, y: 438, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"output\") property(Bool) output_57c890\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_542a51 -> filter_f3b46d.list\n        filter_f3b46d.result -> firstitem_870503.list\n        list_542a51 -> filter_4d4556.list\n        filter_4d4556.result -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> output_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) is_consecutive_f21f44 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3af6ba -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3af6ba -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -505, y: 2, name: \"list\") property(List) list_4f8a9e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_6b3c1d\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_2c0b5f\n\n        instance(x: -273, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        ifexpression_875761.else -> continue_6b3c1d\n        ifexpression_875761.value -> output_2c0b5f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_4f8a9e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_6b3c1d\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_4f8a9e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_6b3c1d -> setter_38e107.continue\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_5b8a6f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -529, y: 5, name: \"list\") property(List) list_1f8a2e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_1f8a2e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1f8a2e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_3b7a5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -515, y: 1, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -485, y: 30, name: \"list\") property(List) list_5f3a6b\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_9d4e1c\n\n        instance(x: 752, y: 93) ifexpression_3f7b2a root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_9d4e1c\") getter_9d4e1c = previous\n        setter(x: 679, y: -313, name: \"setter_3f7b2a\") setter_3f7b2a = previous\n        instance(x: 321, y: -20) for_5f3a6b root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_3f7b2a\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_9d4e1c root.Std_k98ojb.List.GetAt {}\n        ifexpression_3f7b2a.else -> continue_a96db6\n        ifexpression_3f7b2a.value -> output_9d4e1c\n        ifexpression_3f7b2a.then -> setter_3f7b2a.execute\n        list_5f3a6b -> for_5f3a6b.items\n        for_5f3a6b.item -> ifexpression_3f7b2a.gen_2\n        for_5f3a6b.index -> ifexpression_3f7b2a.gen_0\n        getter_9d4e1c.value -> ifexpression_3f7b2a.gen_1\n        for_5f3a6b.onItem -> ifexpression_3f7b2a.execute\n        for_5f3a6b.done -> continue_a96db6\n        for_5f3a6b.item -> setter_3f7b2a.new_value\n        list_5f3a6b -> getat_9d4e1c.list\n        0 -> getat_9d4e1c.index\n        getat_9d4e1c.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_5f3a6b.reset\n        setter_3f7b2a.continue -> for_5f3a6b.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_9d4e1c root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -485, y: 30, name: \"list\") property(List) list_1f8e3a\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_9b4c2d\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_6b0c1f\n\n        instance(x: 752, y: 93) ifexpression_7a5e3f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_8c2d4f\") getter_8c2d4f = previous\n        setter(x: 679, y: -313, name: \"setter_3b9e5a\") setter_3b9e5a = previous\n        instance(x: 321, y: -20) for_1d6a7e root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_3b9e5a\") setter_d4f2c8 = previous\n        instance(x: -275, y: -35) getat_1e8d6f root.Std_k98ojb.List.GetAt {}\n        ifexpression_7a5e3f.else -> continue_9b4c2d\n        ifexpression_7a5e3f.value -> output_6b0c1f\n        ifexpression_7a5e3f.then -> setter_3b9e5a.execute\n        list_1f8e3a -> for_1d6a7e.items\n        for_1d6a7e.item -> ifexpression_7a5e3f.gen_2\n        for_1d6a7e.index -> ifexpression_7a5e3f.gen_0\n        getter_8c2d4f.value -> ifexpression_7a5e3f.gen_1\n        for_1d6a7e.onItem -> ifexpression_7a5e3f.execute\n        for_1d6a7e.done -> continue_9b4c2d\n        for_1d6a7e.item -> setter_3b9e5a.new_value\n        list_1f8e3a -> getat_1e8d6f.list\n        0 -> getat_1e8d6f.index\n        getat_1e8d6f.itemAtIndex -> setter_d4f2c8.new_value\n        execute_9b4c2d -> setter_d4f2c8.execute\n        setter_d4f2c8.continue -> for_1d6a7e.reset\n        setter_3b9e5a.continue -> for_1d6a7e.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_0a4d3f root.main.is_consecutive {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -475, y: 20, name: \"sublist\") property(List) sublist_2a1f8d\n        in(x: -476, y: -150, name: \"list\") property(List) list_3b0c5e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"previous\") setter_9d4f1c root.Std_k98ojb.List.SetAt {}\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        instance(x: 679, y: -313, name: \"setter\") setter_9d4f1c root.Std_k98ojb.List.SetAt {}\n        getter(x: 334, y: 160, name: \"getter\") getter_b280eb = previous\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3b0c5e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        sublist_2a1f8d -> getter_b280eb.list\n        0 -> getter_b280eb.index\n        list_3b0c5e -> setter_9d4f1c.list\n        execute_a96db6 -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 20, name: \"list1\") property(List) list1_3a0b9f\n        in(x: -306, y: -156, name: \"list2\") property(List) list2_5c8d7e\n\n        out(x: 1224, y: -121, name: \"output\") property(Bool) output_6c1c3a\n\n        instance(x: -0, y: -120, name: \"is sublist\") filter_9f2b4f root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: 11, y: -25, name: \"current\") property(List) current_7c3e5d\n\n            out(x: 710, y: -1, name: \"output\") property(Bool) output_9f2a6b\n\n            instance(x: 246, y: 0) contains_8c4c9f root.Std_k98ojb.List.Contains {}\n            current_7c3e5d -> contains_8c4c9f.list\n            list1_3a0b9f -> contains_8c4c9f.item\n            contains_8c4c9f.is_contained -> output_9f2a6b\n        } -> filter_9f2b4f.handler\n        instance(x: -276, y: 20) generateRange_5e7d3c root.Std_k98ojb.List.GenerateRange {}\n        list2_5c8d7e -> generateRange_5e7d3c.from\n        length_1a6f9f.list -> generateRange_5e7d3c.to\n        instance(x: -276, y: -156) length_1a6f9f root.Std_k98ojb.List.Length {}\n        list2_5c8d7e -> length_1a6f9f.list\n        filter_9f2b4f.output_list -> output_6c1c3a\n        generateRange_5e7d3c.list -> filter_9f2b4f.items\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_8c0d6 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -459, y: 10, name: \"list1\") property(List) list1_3a8f5b\n        in(x: -461, y: 162, name: \"list2\") property(List) list2_7c0e6d\n\n        out(x: 1229, y: 77, name: \"output\") property(Bool) output_4a1f3d\n\n        instance(x: -265, y: 78, name: \"is sublist\") filter_8b5a5f root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -0, y: -25, name: \"current\") property(List) current_1e9c7d\n            in(x: -13, y: 79, name: \"_index\") property(Number) _index_2a5f6b\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_e8b3ad\n\n            instance(x: 226, y: 56) contains_7e1c0d root.Std_k98ojb.List.Contains {}\n            instance(x: 463, y: 51) notequal_5a6f9f root.Std_k98ojb.Logic.NotEqual {}\n            list2_7c0e6d -> contains_7e1c0d.list\n            current_1e9c7d -> contains_7e1c0d.item\n            contains_7e1c0d.is_contained -> notequal_5a6f9f.left\n            0 -> notequal_5a6f9f.right\n            notequal_5a6f9f.result -> output_e8b3ad\n        } -> filter_8b5a5f.handler\n        func() {\n            in(x: -0, y: -25, name: \"current\") property(List) current_1e9c7d\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_e8b3ad\n\n            instance(x: 226, y: 56) contains_7e1c0d root.Std_k98ojb.List.Contains {}\n            list2_7c0e6d -> contains_7e1c0d.list\n            current_1e9c7d -> contains_7e1c0d.item\n            contains_7e1c0d.is_contained -> output_e8b3ad\n        } -> map_c73e3b.handler\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        list1_3a8f5b -> filter_8b5a5f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_8b5a5f.output_list -> map_c73e3b.items\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n        filter_8b5a5f.output_list -> list_0d40f1\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_4a1f3d\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 0, name: \"list1\") property(List) list_3f9a4b\n        in(x: -285, y: -210, name: \"list2\") property(List) list_7c5e6d\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3f9a4b -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_7c5e6d -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        list_3f9a4b -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 5, name: \"list1\") property(List) list1_2a3b4f\n        in(x: -467, y: 145, name: \"list2\") property(List) list2_8d9c7e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_2a3b4f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_8d9c7e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> for_d26972.reset\n        setter_38e107.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -464, y: 0, name: \"mainList\") property(List) mainList_1f846b\n        in(x: -465, y: -210, name: \"subList\") property(List) subList_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 446, y: -125) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(List) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) contains_7f3b0c root.Std_k98ojb.List.Contains {}\n            list2_1d86d4 -> contains_7f3b0c.item\n            list1_42bc6f -> contains_7f3b0c.list\n            contains_7f3b0c.is_contained -> result_e245cb\n        } -> zip_201051.handler\n        mainList_1f846b -> zip_201051.left\n        subList_c62075 -> zip_201051.right\n        zip_201051.zipped -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_0d40f1\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: 93, y: -122) is_sublist_cbc0b6 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -445, y: 15, name: \"list1\") property(List) list1_5e9b4f\n        in(x: -447, y: 170, name: \"list2\") property(List) list2_6c7d8a\n\n        out(x: 1200, y: 95, name: \"output\") property(Bool) output_3f1b5e\n\n        instance(x: -186, y: 105, name: \"is sublist\") filter_4e9f4f root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -0, y: -25, name: \"current\") property(List) current_1c3a8d\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_5f7e9b\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_4f2b6d\n\n            instance(x: 226, y: 56) contains_3c8a1d root.Std_k98ojb.List.Contains {}\n            current_1c3a8d -> contains_3c8a1d.list\n            list2_6c7d8a -> contains_3c8a1d.item\n            contains_3c8a1d.is_contained -> output_4f2b6d\n        } -> filter_4e9f4f.handler\n        instance(x: -277, y: 105) generateRange_7c5b0f root.Std_k98ojb.List.GenerateRange {}\n        list1_5e9b4f -> filter_4e9f4f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_8a7d3c\n\n            out(x: 521, y: -28, name: \"list\") property(List) list_1b6e5d\n\n            instance(x: 74, y: -23) slice_9f4c2e root.Std_k98ojb.List.Slice {}\n            current_8a7d3c -> slice_9f4c2e.start\n            _index_5f7e9b -> slice_9f4c2e.end\n            list1_5e9b4f -> slice_9f4c2e.items\n            slice_9f4c2e.slice -> list_1b6e5d\n        } -> generateRange_7c5b0f.handler\n        0 -> generateRange_7c5b0f.from\n        length(list1_5e9b4f) -> generateRange_7c5b0f.to\n        generateRange_7c5b0f.list -> filter_4e9f4f.items\n        filter_4e9f4f.output_list -> contains_3c8a1d.list\n        true -> contains_3c8a1d.item\n        contains_3c8a1d.is_contained -> output_3f1b5e\n    }\n\n    \n\n    instance(x: 13, y: -7) is_sublist_2b6a4f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -459, y: 30, name: \"list1\") property(List) list1_2e8f5b\n        in(x: -465, y: -235, name: \"list2\") property(List) list2_7a9c3d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        list2_7a9c3d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_2e8f5b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 10, name: \"subList\") property(List) sub_list_3a6b8f\n        in(x: -283, y: -140, name: \"mainList\") property(List) main_list_2e9c7d\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        sub_list_3a6b8f -> intersection_c7c7e6.left\n        main_list_2e9c7d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        sub_list_3a6b8f -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 0, name: \"sublist\") property(List) sublist_2a3f6b\n        in(x: -284, y: 170, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: 59, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: 64) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 63) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 62) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        sublist_2a3f6b -> intersection_c7c7e6.left\n        list_3af6ba -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        sublist_2a3f6b -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 229) is_sublist_ac7dfb root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a1b8e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c2f5d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 36, name: \"index\") property(Number) index_7e5a8c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_3b2f6d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7e5a8c -> add_3b2f6d.first\n            1 -> add_3b2f6d.second\n            add_3b2f6d.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3a1b8e -> find_6d05b0.items\n        find_6d05b0.item -> missing_7c2f5d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 0, name: \"list\") property(List) list_9f7759\n        out(x: 46, y: 158, name: \"missing\") property(Number) missing_f9110a\n\n        instance(x: 0, y: 0) find_12bf99 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_af09a7\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3bc2ae\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_af09a7 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_3bc2ae\n        } -> find_12bf99.predicate\n        list_9f7759 -> find_12bf99.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"elem\") property(Number) elem_af09a7\n\n            instance(x: 89, y: 29) getat_1088d5 root.Std_k98ojb.List.GetAt {}\n            index_9f6850 -> getat_1088d5.index\n            list_9f7759 -> getat_1088d5.list\n            getat_1088d5.itemAtIndex -> elem_af09a7\n        } -> find_12bf99.handler\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n\n            out(x: 515, y: 44, name: \"elem\") property(Number) elem_af09a7\n\n            instance(x: 89, y: 29) generate_range_1088d5 root.Std_k98ojb.List.GenerateRange {}\n            1 -> generate_range_1088d5.from\n            list_9f7759.Length -> generate_range_1088d5.to\n            generate_range_1088d5.list -> elem_af09a7\n        } -> find_12bf99.context\n        find_12bf99.item -> missing_f9110a\n    }\n\n    \n\n    instance(x: -174, y: -63) find_missing_d6e930 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 159, y: 77, name: \"missing\") property(Number) missing_f9110a\n\n        instance(x: 426, y: 76) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n            in(x: -114, y: 35, name: \"item\") property(Number) item_af09a7\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1088d5\n\n            instance(x: 89, y: 29) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n                expression: \"item != index + 1\"\n            }\n            getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = bool\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = bool\n            setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = bool\n            index_9f6850 -> ifexpression_e38995.gen_0\n            item_af09a7 -> ifexpression_e38995.gen_1\n            getter_9cceb3.value -> bool_1088d5\n            ifexpression_e38995.then -> setter_1cedb2.execute\n            1 -> setter_1cedb2.new_value\n            ifexpression_e38995.else -> setter_37db7f.execute\n            0 -> setter_37db7f.new_value\n        } -> find_missing_node.predicate\n        list_9f7759 -> find_missing_node.items\n        find_missing_node.index -> missing_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -116, y: 44, name: \"index\") property(Number) index_ae8c7a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index + 1 != elem\"\n            }\n            index_ae8c7a -> ifexpression_e38995.gen_0\n            elem_9f6850 -> ifexpression_e38995.gen_1\n            ifexpression_e38995.then -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        find_6d05b0.index -> index_ae8c7a\n        find_6d05b0.item -> missing_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1f8b3a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_2e4c6d\n\n        instance(x: 0, y: 0) find_5e9b7c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1f8a4f\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_2e5c4d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_1f8a4f -> add_2e5c4d.first\n            1 -> add_2e5c4d.second\n            elem_9f6850 -> notequal_807ffd.right\n            add_2e5c4d.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_5e9b7c.predicate\n        list_1f8b3a -> find_5e9b7c.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1f8a4f\n\n            out(x: 515, y: 44, name: \"elem\") property(Number) elem_9f6850\n\n            instance(x: 89, y: 29) getat_2e5c4d root.Std_k98ojb.List.GetAt {}\n            index_1f8a4f -> getat_2e5c4d.index\n            list_1f8b3a -> getat_2e5c4d.list\n            getat_2e5c4d.itemAtIndex -> elem_9f6850\n        } -> find_5e9b7c.handler\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1f8a4f\n\n            out(x: 515, y: 44, name: \"elem\") property(Number) elem_9f6850\n\n            instance(x: 89, y: 29) getat_2e5c4d root.Std_k98ojb.List.GetAt {}\n            index_1f8a4f -> getat_2e5c4d.index\n            list_1f8b3a -> getat_2e5c4d.list\n            getat_2e5c4d.itemAtIndex -> elem_9f6850\n        } -> find_5e9b7c.context\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1f8a4f\n\n            out(x: 515, y: 44, name: \"elem\") property(Number) elem_9f6850\n\n            instance(x: 89, y: 29) getat_2e5c4d root.Std_k98ojb.List.GetAt {}\n            index_1f8a4f -> getat_2e5c4d.index\n            list_1f8b3a -> getat_2e5c4d.list\n            getat_2e5c4d.itemAtIndex -> elem_9f6850\n        } -> find_5e9b7c.handler_context\n        instance(x: 0, y: 0) add_1f8a4f root.Std_k98ojb.Math.Add {}\n        index_1f8a4f -> add_1f8a4f.first\n        1 -> add_1f8a4f.second\n        find_5e9b7c.index -> add_1f8a4f.context\n        add_1f8a4f.result -> find_5e9b7c.handler_index\n        instance(x: -105, y: 112) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < length\"\n        }\n        func() {\n            in(x: -113, y: 34, name: \"length\") property(Number) length_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) len_2e5c4d root.Std_k98ojb.List.Length {}\n            list_1f8b3a -> len_2e5c4d.list\n            len_2e5c4d.length -> length_9f6850\n            index_1f8a4f -> ifexpression_e38995.gen_0\n            length_9f6850 -> ifexpression_e38995.gen_1\n            ifexpression_e38995.then -> add_1f8a4f.execute\n            ifexpression_e38995.else -> find_5e9b7c.done\n        } -> ifexpression_e38995.execute\n        instance(x: 0, y: 0) len_1f8a4f root.Std_k98ojb.List.Length {}\n        list_1f8b3a -> len_1f8a4f.list\n        len_1f8a4f.length -> find_5e9b7c.index\n        instance(x: 0, y: 0) if_1f8a4f root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -113, y: 34, name: \"length\") property(Number) length_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) len_2e5c4d root.Std_k98ojb.List.Length {}\n            list_1f8b3a -> len_2e5c4d.list\n            len_2e5c4d.length -> length_9f6850\n            index_1f8a4f -> if_1f8a4f.input\n            length_9f6850 -> if_1f8a4f.right\n            0 -> if_1f8a4f.left\n        } -> if_1f8a4f.execute\n        if_1f8a4f.then -> find_5e9b7c.trigger\n        if_1f8a4f.else -> len_1f8a4f.execute\n        instance(x: 0, y: 0) getat_2e5c4d root.Std_k98ojb.List.GetAt {}\n        index_1f8a4f -> getat_2e5c4d.index\n        list_1f8b3a -> getat_2e5c4d.list\n        getat_2e5c4d.itemAtIndex -> missing_2e4c6d\n    }\n\n    \n\n    instance(x: -34, y: 127) find_missing_node root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -283, y: 0, name: \"list\") property(List) list_3a9f8e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7b5c6d\n\n        instance(x: 0, y: 0) find_2e4a4f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 35, name: \"index\") property(Number) index_8c7a2e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_3f5b4d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_8c7a2e -> add_3f5b4d.first\n            1 -> add_3f5b4d.second\n            add_3f5b4d.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_2e4a4f.predicate\n        list_3a9f8e -> find_2e4a4f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_3f5b4d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_8c7a2e -> add_3f5b4d.first\n            1 -> add_3f5b4d.second\n            add_3f5b4d.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_2e4a4f.context\n        find_2e4a4f.item -> missing_7b5c6d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1c8b3f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 0, name: \"list\") property(List) list_9d8f3a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_6e7c5b\n\n        instance(x: 0, y: 0) find_2f4a1e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_8d6b3c\n            in(x: -116, y: -45, name: \"index\") property(Number) index_7f5a9e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1b2c4d\n\n            instance(x: 89, y: 29) ifexpression_3a8b6f root.Std_k98ojb.Std.IfExpression {\n                expression: \"index + 1 != elem\"\n            }\n            getter(x: -144, y: 112, name: \"getter_5c9d2e\") getter_5c9d2e = bool\n            setter(x: 116, y: -268, name: \"setter_6f8a3b\") setter_6f8a3b = bool\n            setter(x: 118, y: -56, name: \"setter_4b7c1d\") setter_4b7c1d = bool\n            index_7f5a9e -> ifexpression_3a8b6f.gen_0\n            elem_8d6b3c -> ifexpression_3a8b6f.gen_1\n            getter_5c9d2e.value -> bool_1b2c4d\n            ifexpression_3a8b6f.then -> setter_6f8b3b.execute\n            1 -> setter_6f8b3b.new_value\n            ifexpression_3a8b6f.else -> setter_4b7c1d.execute\n            0 -> setter_4b7c1d.new_value\n        } -> find_2f4a1e.predicate\n        list_9d8f3a -> find_2f4a1e.items\n        index_7f5a9e -> find_2f4a1e.index\n        find_2f4a1e.item -> missing_6e7c5b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_3d8f2b root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 0, name: \"list\") property(List) list_9f8d5a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: 35, name: \"index\") property(Number) index_7e3d5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1c0b2f root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7e3d5a -> add_1c0b2f.first\n            1 -> add_1c0b2f.second\n            elem_9f6850 -> notequal_807ffd.right\n            add_1c0b2f.result -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f8d5a -> find_6d05b0.items\n        find_6d05b0.index -> find_6d05b0.context\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1a3b8f\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_9c6d7e\n\n        instance(x: 0, y: 0) find_4b2f5f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_3a8c9d\n            in(x: -108, y: 112, name: \"item\") property(Number) item_7f2e1b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5d6f4a\n\n            instance(x: 89, y: 29) add_8c3f9a root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_2e1f7b root.Std_k98ojb.Logic.NotEqual {}\n            index_3a8c9d -> add_8c3f9a.first\n            1 -> add_8c3f9a.second\n            item_7f2e1b -> notequal_2e1f7b.right\n            add_8c3f9a.result -> notequal_2e1f7b.left\n            notequal_2e1f7b.result -> bool_5d6f4a\n        } -> find_4b2f5f.predicate\n        list_1a3b8f -> find_4b2f5f.items\n        add_8c3f9a.result -> missing_9c6d7e\n        find_4b2f5f.index -> index_3a8c9d\n        find_4b2f5f.item -> item_7f2e1b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_3b6f92 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9e3b1a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c2d6f\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -110, y: 39, name: \"index\") property(Number) index_7e3a8c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_2b1d4f root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7e3a8c -> add_2b1d4f.first\n            0 -> add_2b1d4f.second\n            add_2b1d4f.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9e3b1a -> find_6d05b0.items\n        find_6d05b0.item -> missing_7c2d6f\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -124, y: 0, name: \"input\") property(String) input_9f8a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1b4c5e\n\n        instance(x: 0, y: 1) replace_7a6d1e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3f9c2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4f8b5f root.Std_k98ojb.Strings.Replace {}\n        input_9f8a3d -> replace_7a6d1e.input\n        \" \" -> replace_7a6d1e.search\n        \":\" -> replace_7a6d1e.replace\n        replace_7a6d1e.output -> replace_3f9c2d.input\n        \",\" -> replace_3f9c2d.search\n        \":\" -> replace_3f9c2d.replace\n        replace_3f9c2d.output -> replace_4f8b5f.input\n        \".\" -> replace_4f8b5f.search\n        \":\" -> replace_4f8b5f.replace\n        replace_4f8b5f.output -> output_1b4c5e\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -1489, y: 0, name: \"input\") property(String) input_1a3b8f\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5e4c6d\n\n        instance(x: 0, y: 1) replace_9c7f3f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a1f2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4d6e5e root.Std_k98ojb.Strings.Replace {}\n        input_1a3b8f -> replace_9c7f3f.input\n        \" \" -> replace_9c7f3f.search\n        \":\" -> replace_9c7f3f.replace\n        replace_9c7f3f.output -> replace_8a1f2f.input\n        \",\" -> replace_8a1f2f.search\n        \":\" -> replace_8a1f2f.replace\n        replace_8a1f2f.output -> replace_4d6e5e.input\n        \".\" -> replace_4d6e5e.search\n        \":\" -> replace_4d6e5e.replace\n        replace_4d6e5e.output -> output_5e4c6d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_3b7f8a root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -172, y: 0, name: \"input\") property(String) input_1f3a6d\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7e9b4c\n\n        instance(x: 221, y: 0) replace_5b8b2f root.Std_k98ojb.Strings.Replace {}\n        input_1f3a6d -> replace_5b8b2f.input\n        \" ,.\" -> replace_5b8b2f.search\n        \":\" -> replace_5b8b2f.replace\n        replace_5b8b2f.output -> output_7e9b4c\n    }\n\n    \n\n    instance(x: -138, y: 30) replace_chars_1a0d3f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"input\") property(String) input_2f1a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5e9b8c\n\n        instance(x: 0, y: 1) replace_4e6c7c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a8d2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_5a9b1d root.Std_k98ojb.Strings.Replace {}\n        input_2f1a3d -> replace_4e6c7c.input\n        \" \" -> replace_4e6c7c.search\n        \":\" -> replace_4e6c7c.replace\n        replace_4e6c7c.output -> replace_3a8d2f.input\n        \",\" -> replace_3a8d2f.search\n        \":\" -> replace_3a8d2f.replace\n        replace_3a8d2f.output -> replace_5a9b1d.input\n        \".\" -> replace_5a9b1d.search\n        \":\" -> replace_5a9b1d.replace\n        replace_5a9b1d.output -> output_5e9b8c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -172, y: 0, name: \"input\") property(String) input_1f3b6a\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_5e8c7d\n\n        instance(x: 221, y: -48, name: \"replace_spaces_commas_dots_with_colon\") replace_0c9f1b root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) or_2a5e4f root.Std_k98ojb.Logic.Or {}\n        instance(x: -11, y: 9) or_8d3e7f root.Std_k98ojb.Logic.Or {}\n        \" \" -> or_2a5e4f.left\n        \",\" -> or_2a5e4f.right\n        or_2a5e4f.result -> or_8d3e7f.left\n        \".\" -> or_8d3e7f.right\n        or_8d3e7f.result -> replace_0c9f1b.search\n        \":\" -> replace_0c9f1b.replace\n        input_1f3b6a -> replace_0c9f1b.input\n        replace_0c9f1b.output -> output_5e8c7d\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_spaces_commas_dots_with_colon_aad0c2 root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) or_3 root.Std_k98ojb.Logic.Or {}\n        instance(x: -11, y: 9) or_4 root.Std_k98ojb.Logic.Or {}\n        \" \" -> or_3.left\n        \",\" -> or_3.right\n        or_3.result -> or_4.left\n        \".\" -> or_4.right\n        input_0 -> replace_2.input\n        or_4.result -> replace_2.search\n        \":\" -> replace_2.replace\n        replace_2.output -> output_1\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_chars_a root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -150, y: 0, name: \"input\") property(String) input_2a1d9f\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4e7b3c\n\n        instance(x: 0, y: 1) replace_6e5f8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9d3a2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4a7b1c root.Std_k98ojb.Strings.Replace {}\n        input_2a1d9f -> replace_6e5f8c.input\n        \" \" -> replace_6e5f8c.search\n        \":\" -> replace_6e5f8c.replace\n        replace_6e5f8c.output -> replace_9d3a2d.input\n        \",\" -> replace_9d3a2d.search\n        \":\" -> replace_9d3a2d.replace\n        replace_9d3a2d.output -> replace_4a7b1c.input\n        \".\" -> replace_4a7b1c.search\n        \":\" -> replace_4a7b1c.replace\n        replace_4a7b1c.output -> output_4e7b3c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -1489, y: 0, name: \"input\") property(String) input_1a3f8e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5c7b6d\n\n        instance(x: 0, y: 1) replace_9a4b5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3f8e2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_b6a7d1 root.Std_k98ojb.Strings.Replace {}\n        input_1a3f8e -> replace_9a4b5c.input\n        \" \" -> replace_9a4b5c.search\n        \":\" -> replace_9a4b5c.replace\n        replace_9a4b5c.output -> replace_3f8e2d.input\n        \",\" -> replace_3f8e2d.search\n        \":\" -> replace_3f8e2d.replace\n        replace_3f8e2d.output -> replace_b6a7d1.input\n        \".\" -> replace_b6a7d1.search\n        \":\" -> replace_b6a7d1.replace\n        replace_b6a7d1.output -> output_5c7b6d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -1489, y: 0, name: \"input\") property(String) input_6f8b1a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5e7d4c\n\n        instance(x: 0, y: 1) replace_9e3f8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6a9f2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_7d4c1d root.Std_k98ojb.Strings.Replace {}\n        input_6f8b1a -> replace_9e3f8f.input\n        \" \" -> replace_9e3f8f.search\n        \":\" -> replace_9e3f8f.replace\n        replace_9e3f8f.output -> replace_6a9f2f.input\n        \",\" -> replace_6a9f2f.search\n        \":\" -> replace_6a9f2f.replace\n        replace_6a9f2f.output -> replace_7d4c1d.input\n        \".\" -> replace_7d4c1d.search\n        \":\" -> replace_7d4c1d.replace\n        replace_7d4c1d.output -> output_5e7d4c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_e54b7f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -122, y: 0, name: \"input\") property(String) input_2f1a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4c7e6b\n\n        instance(x: 0, y: 1) replace_9b8b5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3d5a2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_7e4c6d root.Std_k98ojb.Strings.Replace {}\n        \" \" -> replace_9b8b5f.search\n        \":\" -> replace_9b8b5f.replace\n        input_2f1a3d -> replace_9b8b5f.input\n        \",\" -> replace_3d5a2f.search\n        \":\" -> replace_3d5a2f.replace\n        replace_9b8b5f.output -> replace_3d5a2f.input\n        \".\" -> replace_7e4c6d.search\n        \":\" -> replace_7e4c6d.replace\n        replace_3d5a2f.output -> replace_7e4c6d.input\n        replace_7e4c6d.output -> output_4c7e6b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_1c9c0f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -275, y: 1, name: \"input\") property(String) input_5f3e9d\n\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) characters_c7a8aa root.Std_k98ojb.Strings.Characters {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        characters_c7a8aa.characters -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_5f3e9d -> characters_c7a8aa.input\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_same_f6b3a8 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -305, y: 10, name: \"input\") property(String) input_1a3e9f\n\n        out(x: 1056, y: 15, name: \"output\") property(Bool) output_8c0b5d\n\n        instance(x: -149, y: 11) characters_7a2b4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 365, y: 13) map_9e3a1c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 681, y: 14) allroot_5d8b7a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1000, y: 15) equal_2f4b9e root.Std_k98ojb.Logic.Equal {}\n        func() {\n            in(x: -20, y: 59, name: \"current\") property(String) current_7c8d6a\n\n            out(x: 641, y: 49, name: \"output\") property(Bool) output_9f0e5b\n\n            instance(x: 226, y: 56) tolowercase_2e3b1c root.Std_k98ojb.Strings.ToLower {}\n            current_7c8d6a -> tolowercase_2e3b1c.input\n            tolowercase_2e3b1c.output -> output_9f0e5b\n        } -> map_9e3a1c.handler\n        characters_7a2b4f.characters -> map_9e3a1c.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(String) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> allroot_5d8b7a.handler\n        map_9e3a1c.output_list -> allroot_5d8b7a.items\n        getter(x: 328, y: -10, name: \"getter_2f0b6c\") getter_2f0b6c = current\n        instance(x: 557, y: -11) getat_1e4a9f root.Std_k98ojb.List.GetAt {}\n        allroot_5d8b7a.output_list -> equal_2f4b9e.left\n        getter_2f0b6c.value -> equal_2f4b9e.right\n        input_1a3e9f -> getat_1e4a9f.list\n        0 -> getat_1e4a9f.index\n        getat_1e4a9f.itemAtIndex -> getter_2f0b6c.value\n        map_9e3a1c.output_list -> equal_2f4b9e.left\n        input_1a3e9f -> equal_2f4b9e.right\n        equal_2f4b9e.result -> output_8c0b5d\n    }\n\n    \n\n    instance(x: -91, y: 59) is_same_a7b6f9 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -296, y: 11, name: \"input\") property(String) input_9a8f3e\n\n        out(x: 1040, y: 10, name: \"output\") property(Bool) output_5b1d7c\n\n        instance(x: -140, y: 12) characters_4f2c6c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 310, y: 11) map_8a3e9f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 610, y: -1) allroot_7d5d0c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 870, y: 10) equal_6e2f8a root.Std_k98ojb.Logic.Equal {}\n        func() {\n            in(x: -30, y: 46, name: \"element\") property(String) element_9c1d4f\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_7e5a8f\n\n            instance(x: 106, y: 17) characters_3b0f2f root.Std_k98ojb.Strings.Characters {}\n            element_9c1d4f -> characters_3b0f2f.input\n            characters_3b0f2f.characters -> out_7e5a8f\n        } -> map_8a3e9f.handler\n        instance(x: 1050, y: -10) firstitem_6c1d4f root.Std_k98ojb.List.FirstItem {}\n        characters_4f2c6c.characters -> map_8a3e9f.items\n        map_8a3e9f.output_list -> allroot_7d5d0c.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(String) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) firstitem_6c1d4f root.Std_k98ojb.List.FirstItem {}\n            instance(x: 285, y: -25) equal_6e2f8a root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> equal_6e2f8a.left\n            firstitem_6c1d4f.item -> equal_6e2f8a.right\n            equal_6e2f8a.result -> bool_4524be\n        } -> allroot_7d5d0c.handler\n        allroot_7d5d0c.output_list -> equal_6e2f8a.left\n        1 -> equal_6e2f8a.right\n        equal_6e2f8a.result -> output_5b1d7c\n    }\n\n    \n\n    instance(x: -71, y: 61) check_same_3a9f4f root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -285, y: -86, name: \"string\") property(String) string_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        string_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        string_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -294, y: 155, name: \"input\") property(String) input_0d3e6f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 0, y: -1) characters_9a3d4c root.Std_k98ojb.Strings.Characters {}\n        length_6e87f2.length -> equal_f89569.right\n        1 -> equal_f89569.left\n        input_0d3e6f -> characters_9a3d4c.input\n        characters_9a3d4c.characters -> equal_f89569.list\n        equal_f89569.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) is_same_15f9e9 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -290, y: 13, name: \"input\") property(String) input_9e3f5d\n\n        out(x: 557, y: 35, name: \"output\") property(Bool) output_8b7c4a\n\n        instance(x: -99, y: 14) characters_1f0f6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 34) contains_5d9e2c root.Std_k98ojb.List.Contains {}\n        instance(x: 360, y: 35) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        characters_1f0f6f.characters -> contains_5d9e2c.list\n        input_9e3f5d -> characters_1f0f6f.input\n        characters_1f0f6f.characters -> equal_f89569.left\n        1 -> equal_f89569.right\n        contains_5d9e2c.is_contained -> equal_f89569.result\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_ac7dfb root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -277, y: 0, name: \"input\") property(String) input_8e9a3f\n\n        out(x: 1006, y: 1, name: \"output\") property(Bool) output_5b4c2d\n\n        instance(x: -126, y: 12, name: \"get all characters\") characters_0a7e88 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 312, y: 1) intersection_c6f9ea root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 639, y: -2) length_5d4c8f root.Std_k98ojb.List.Length {}\n        instance(x: 856, y: 0) equal_f3e7a1 root.Std_k98ojb.Logic.Equal {}\n        input_8e9a3f -> characters_0a7e88.input\n        characters_0a7e88.characters -> intersection_c6f9ea.left\n        characters_0a7e88.characters -> intersection_c6f9ea.right\n        length_5d4c8f.length -> equal_f3e7a1.left\n        1 -> equal_f3e7a1.right\n        intersection_c6f9ea.intersect -> length_5d4c8f.list\n        equal_f3e7a1.result -> output_5b4c2d\n    }\n\n    \n\n    instance(x: -62, y: 113) is_same_0a8c8f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -275, y: 10, name: \"input\") property(String) input_9e3f8d\n\n        out(x: 1225, y: 15, name: \"output\") property(Bool) output_7a1b6c\n\n        instance(x: -120, y: 11) characters_0a4b2c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 360, y: 14) length_8e3f9d root.Std_k98ojb.List.Length {}\n        instance(x: 579, y: 13) getat_5a6f7c root.Std_k98ojb.List.GetAt {}\n        instance(x: 800, y: 12) equal_1a4b2c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1019, y: 11) for_3e8d72 root.Std_k98ojb.Std.For {}\n        instance(x: 1240, y: 10) and_7f6e5c root.Std_k98ojb.Logic.And {}\n        characters_0a4b2c.characters -> length_8e3f9d.list\n        input_9e3f8d -> characters_0a4b2c.input\n        for_3e8d72.items -> getat_5a6f7c.list\n        0 -> getat_5a6f7c.index\n        length_8e3f9d.length -> for_3e8d72.to\n        characters_0a4b2c.characters -> for_3e8d72.items\n        input_9e3f8d -> equal_1a4b2c.left\n        getat_5a6f7c.itemAtIndex -> equal_1a4b2c.right\n        equal_1a4b2c.result -> and_7f6e5c.left\n        for_3e8d72.onItem -> and_7f6e5c.execute\n        0 -> getat_5a6f7c.index\n        input_9e3f8d -> getat_5a6f7c.input\n        equal_1a4b2c.result -> for_3e8d72.next\n        and_7f6e5c.result -> output_7a1b6c\n        0 -> for_3e8d72.from\n    }\n\n    \n\n    instance(x: -19, y: -11) check_same_9b4f2c root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -316, y: 15, name: \"input\") property(String) input_8f1a5e\n\n        out(x: 1224, y: 13, name: \"output\") property(Bool) output_6b7c3d\n\n        instance(x: -123, y: 14, name: \"characters\") characters_9e0f2f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 306, y: 13) intersection_8a1e4c root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 630, y: 12) length_6d5f9c root.Std_k98ojb.List.Length {}\n        instance(x: 840, y: 11) equal_7b3a0c root.Std_k98ojb.Logic.Equal {}\n        characters_9e0f2f.characters -> intersection_8a1e4c.left\n        characters_9e0f2f.characters -> intersection_8a1e4c.right\n        length_6d5f9c.length -> equal_7b3a0c.left\n        1 -> equal_7b3a0c.right\n        intersection_8a1e4c.intersection -> length_6d5f9c.list\n        equal_7b3a0c.result -> output_6b7c3d\n        input_8f1a5e -> characters_9e0f2f.input\n    }\n\n    \n\n    instance(x: -82, y: 131) is_same_4c1b6f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -333, y: 20, name: \"input\") property(String) input_9a3f6d\n\n        out(x: 1018, y: 23, name: \"output\") property(Bool) output_5c7b0e\n\n        instance(x: -179, y: 21, name: \"characters\") characters_1e4b2c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 36, y: 22) contains_8f9a6d root.Std_k98ojb.List.Contains {}\n        instance(x: 453, y: 23) not_5f0c7f root.Std_k98ojb.Logic.Not {}\n        input_9a3f6d -> characters_1e4b2c.input\n        characters_1e4b2c.characters -> contains_8f9a6d.list\n        func() {\n            in(x: -30, y: 78, name: \"current\") property(String) current_5e7b0f\n\n            out(x: 525, y: 79, name: \"output\") property(Bool) output_1c3b8a\n\n            instance(x: 226, y: 76) equal_9d6f2f root.Std_k98ojb.Logic.Equal {}\n            current_5e7b0f -> equal_9d6f2f.left\n            characters_1e4b2c.characters[0] -> equal_9d6f2f.right\n            equal_9d6f2f.result -> output_1c3b8a\n        } -> contains_8f9a6d.handler\n        not_5f0c7f.result -> output_5c7b0e\n        contains_8f9a6d.is_contained -> not_5f0c7f.input\n    }\n\n    \n\n    instance(x: -86, y: 123) is_same_1f4b2c root.main.is_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -40, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n    instance(x: -40, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n        where: \"Std.Str.IsNumeric(it)\"\n    }\n    \n\n    instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -1, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        count_digits_2.result -> result_ai\n\n    }\n    \n\n    func(doc: \"count the number of digits in a list.\") count_digits {\n        in(x: 0, y: 0, name: \"list\") property(List) list_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -1, y: 0) filter_node root.Std_k98ojb.Query.Filter {\n            where: \"Strings.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        list_ai -> filter_node.list\n        filter_node.result -> count_digits_2.list_ai\n        count_digits_2.result -> result_ai\n\n    }\n\n    \n    instance(x: -1, y: 0) characters_node root.main.count_digits.characters {}\n    \n\n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits.count_digits {}\n    \n\n    instance(x: 0, y: 0) filter_node root.main.count_digits.filter {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -25, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -25, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -25, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n    instance(x: -25, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n        where: \"Std.Str.IsNumeric(it)\"\n    }\n    \n\n    instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -40, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n    instance(x: -40, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n        where: \"Std.Str.IsNumeric(it)\"\n    }\n    \n\n    instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -15, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -15, y: 0) characters_node root.main.count_digits {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -35, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -35, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -35, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n    instance(x: -35, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n        where: \"Std.Str.IsNumeric(it)\"\n    }\n    \n\n    instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -1, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        count_digits_2.result -> result_ai\n\n    }\n    \n\n    func(doc: \"count the number of digits in a list.\") count_digits {\n        in(x: 0, y: 0, name: \"list\") property(List) list_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -1, y: 0) filter_node root.Std_k98ojb.Query.Filter {\n            where: \"Strings.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        list_ai -> filter_node.list\n        filter_node.result -> count_digits_2.list_ai\n        count_digits_2.result -> result_ai\n\n    }\n\n    \n    instance(x: -1, y: 0) characters_node root.main.count_digits.characters {}\n    \n\n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits.count_digits {}\n    \n\n    instance(x: 0, y: 0) filter_node root.main.count_digits.filter {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -45, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 15, y: 0) count_node root.Std_k98ojb.Count {}\n        instance(x: 15, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_node.items\n        count_node.onCount -> is_numeric_node.execute\n        is_numeric_node.value -> count_node.count\n        count_node.iterations -> result_ai\n    }\n    \n\n    instance(x: 15, y: -46) count_digits_1 root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -15, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"list\") property(List) list_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -15, y: 0) filter_2 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node_1 root.Std_k98ojb.List.Length {}\n        list_ai -> filter_2.list\n        filter_2.result -> list_length_node_1.items\n        list_length_node_1.length -> result_ai\n    }\n\n    \n    instance(x: -15, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -15, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"list\") property(List) list_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -15, y: 0) filter_2 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node_1 root.Std_k98ojb.List.Length {}\n        list_ai -> filter_2.list\n        filter_2.result -> list_length_node_1.items\n        list_length_node_1.length -> result_ai\n    }\n\n    \n    instance(x: -15, y: 0) count_digits_node root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -344, y: 0, name: \"n\") property(Number) n_1a8f3e\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_2b4c6d\n\n        instance(x: 12, y: 136) expression_5f9a0c root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 303, y: 2) div_4d3e7f root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_9a8c0c  = 1\n        instance(x: 23, y: -1) mul_5e6f1f root.Std_k98ojb.Math.Mul {}\n        expression_5f9a0c.result -> mul_5e6f1f.second\n        n_1a8f3e -> mul_5e6f1f.first\n        data_9a8c0c -> div_4d3e7f.second\n        mul_5e6f1f.result -> div_4d3e7f.first\n        expression_5f9a0c.gen_0 -> n_1a8f3e\n        div_4d3e7f.result -> sum_2b4c6d\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_1a1f92 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_9e8b1f\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_ea7c5d\n\n        instance(x: 532, y: 147) add_4f0b2f root.Std_k98ojb.Math.Add {}\n        data_instance(x: 394, y: -339) data_3c713b  = [sum]\n        instance(x: 62, y: -226, name: \"fourth_power\") pow_7a8e9d root.Std_k98ojb.Math.Pow {}\n        instance(x: 46, y: -383, name: \"odd_number\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"2*n-1\"\n        }\n        data_3c713b -> output_ea7c5d\n        n_9e8b1f -> pow_7a8e9d.y\n        4 -> pow_7a8e9d.x\n        expression_634b7e.result -> pow_7a8e9d.x\n        n_9e8b1f -> expression_634b7e.gen_0\n        add_4f0b2f.second -> data_3c713b.sum\n        pow_7a8e9d.result -> add_4f0b2f.second\n        0 -> add_4f0b2f.first\n    }\n\n    \n\n    instance(x: -55, y: 529) sum_fourth_power_6e1b5c root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -280, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        pow_f892a4.result -> add_64046c.first\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 23, y: -1) pow_9f7b8c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_9f7b8c.first\n        4 -> pow_9f7b8c.second\n        pow_9f7b8c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = sum\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 62, y: -226) setter_2d44da root.Std_k98ojb.Variable.Setter {}\n        data_3c713b -> setter_2d44da.variable_name\n        expression_634b7e.result -> setter_2d44da.new_value\n        n_c88d35 -> expression_634b7e.gen_0\n        setter_2d44da.continue -> output_ebef81\n        0 -> setter_2d44da.new_value\n        n_c88d35 -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -285, y: 0, name: \"n\") property(Number) n_1f3b9a\n\n        out(x: 595, y: -2, name: \"sum\") property(Number) sum_e7c8d4\n\n        instance(x: 12, y: 136) expression_5e6b0c root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 303, y: 2) div_4a8f7d root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_e6c9e5  = 1\n        instance(x: 23, y: -1) mul_3a0f3c root.Std_k98ojb.Math.Mul {}\n        expression_5e6b0c.result -> mul_3a0f3c.second\n        n_1f3b9a -> mul_3a0f3c.first\n        data_e6c9e5 -> div_4a8f7d.second\n        mul_3a0f3c.result -> div_4a8f7d.first\n        div_4a8f7d.result -> sum_e7c8d4\n        n_1f3b9a -> expression_5e6b0c.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_2f6c8f root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_9e6f1a\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_eb2d8c\n\n        instance(x: 532, y: 147) add_4f3a5f root.Std_k98ojb.Math.Add {}\n        data_instance(x: 394, y: -339) data_1e6b7c  = [sum]\n        instance(x: 62, y: -226, name: \"fourth_power\") pow_8d0c4e root.Std_k98ojb.Math.Pow {}\n        instance(x: 46, y: -383, name: \"odd_number\") expression_1a9f7f root.Std_k98ojb.Math.Expression {\n            expression: \"2*n-1\"\n        }\n        data_1e6b7c -> output_eb2d8c\n        n_9e6f1a -> pow_8d0c4e.y\n        4 -> pow_8d0c4e.x\n        expression_1a9f7f.result -> pow_8d0c4e.gen_0\n        pow_8d0c4e.result -> add_4f3a5f.second\n        data_1e6b7c.sum -> add_4f3a5f.first\n        n_9e6f1a -> expression_1a9f7f.gen_0\n    }\n\n    \n\n    instance(x: -55, y: 529) sum_fourth_power_2d8f1f root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -341, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"(4*n*n-1)*(4*n*n-1)\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        div_64046c.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = sum\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 62, y: -226) setter_2d44da root.Std_k98ojb.Variable.Setter {}\n        data_3c713b -> setter_2d44da.variable_name\n        expression_634b7e.result -> setter_2d44da.new_value\n        n_c88d35 -> expression_634b7e.gen_0\n        setter_2d44da.continue -> output_ebef81\n        0 -> setter_2d44da.new_value\n        n_c88d35 -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = sum\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 62, y: -226) setter_2d44da root.Std_k98ojb.Variable.Setter {}\n        data_3c713b -> setter_2d44da.variable_name\n        expression_634b7e.result -> setter_2d44da.new_value\n        n_c88d35 -> expression_634b7e.gen_0\n        setter_2d44da.continue -> output_ebef81\n        0 -> setter_2d44da.new_value\n        n_c88d35 -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -104, y: 24, name: \"size\") property(Number) size_8f1e3d\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_9a2c5b\n\n        instance(x: 0, y: -26) mul_6e4b7c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_8f1e3d -> mul_6e4b7c.first\n        data_cde0dc -> mul_6e4b7c.second\n        mul_6e4b7c.result -> surface_area_9a2c5b\n    }\n\n    \n\n    instance(x: 322, y: 568) cube_surface_area_e3f8d1 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -106, y: 21, name: \"size\") property(Number) size_1f8e0d\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_9c6a2b\n\n        instance(x: 92, y: -22) mul_3f7c5f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -105) pow_4d0e8f root.Std_k98ojb.Math.Pow {}\n        size_1f8e0d -> pow_4d0e8f.x\n        2 -> pow_4d0e8f.y\n        pow_4d0e8f.result -> mul_3f7c5f.first\n        6 -> mul_3f7c5f.second\n        mul_3f7c5f.result -> surface_area_9c6a2b\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_8d0e4f root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: 55, name: \"size\") property(Number) size_1f8a3d\n\n        out(x: 656, y: -68, name: \"surface area\") property(Number) surface_area_6c7b0e\n\n        instance(x: 94, y: -105) mul_2b5c9f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_1a4d3f root.Std_k98ojb.Math.Mul {}\n        size_1f8a3d -> mul_2b5c9f.first\n        6 -> mul_2b5c9f.second\n        mul_2b5c9f.result -> mul_1a4d3f.first\n        size_1f8a3d -> mul_1a4d3f.second\n        mul_1a4d3f.result -> surface_area_6c7b0e\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_9a5a2c root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -105, y: 45, name: \"size\") property(Number) size_9e1f6d\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_7a3b5c\n\n        instance(x: 116, y: -268) mul_8e0c2f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -144, y: 112) data_e6d1ec  = 6\n        size_9e1f6d -> mul_8e0c2f.first\n        data_e6d1ec -> mul_8e0c2f.second\n        mul_8e0c2f.result -> surface_area_7a3b5c\n    }\n\n    \n\n    instance(x: -174, y: -63) cube_surface_area_9e4f3f root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -100, y: 40, name: \"size\") property(Number) size_1a3f0d\n\n        out(x: 48, y: -19, name: \"surface area\") property(Number) surface_area_9b7c5e\n\n        instance(x: 16, y: -26) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 332, y: 133) data_cde0dc  = 6\n        size_1a3f0d -> mul_2f9d09.first\n        data_cde0dc -> mul_2f9d09.second\n        mul_2f9d09.result -> surface_area_9b7c5e\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -110, y: 17, name: \"size\") property(Number) size_8e9f6d\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_5a1c0b\n\n        instance(x: 12, y: -56) mul_7f3f2f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_9e4d8c  = 6\n        size_8e9f6d -> mul_7f3f2f.first\n        data_9e4d8c -> mul_7f3f2f.second\n        mul_7f3f2f.result -> surface_area_5a1c0b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_6f9a8c root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -106, y: 43, name: \"size\") property(Number) size_1a9f2e\n\n        out(x: 1020, y: 44, name: \"surface area\") property(Number) surface_area_8c7d5b\n\n        instance(x: 13, y: -3) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a9f2e -> mul_f892a4.first\n        data_cde0dc -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_8c7d5b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: 25, name: \"size\") property(Number) size_9e8f1d\n\n        out(x: 656, y: -68, name: \"surface area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: -105) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        size_9e8f1d -> mul_f892a4.first\n        size_9e8f1d -> mul_f892a4.second\n        mul_f892a4.result -> mul_2f9d09.first\n        6 -> mul_2f9d09.second\n        mul_2f9d09.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -102, y: 27, name: \"size\") property(Number) size_3f8a6d\n\n        out(x: 1071, y: 7, name: \"surface area\") property(Number) surface_area_5c2e9b\n\n        instance(x: 16, y: -4) mul_0f8f01 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_3f8a6d -> mul_0f8f01.first\n        data_cde0dc -> mul_0f8f01.second\n        mul_0f8f01.result -> surface_area_5c2e9b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -102, y: 22, name: \"size\") property(Number) size_9a1f3e\n\n        out(x: 0, y: -10, name: \"surface area\") property(Number) surface_area_8b4d7c\n\n        instance(x: 16, y: -32) mul_5e2f6c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 90, y: 28) data_9a9c70  = [size]\n        size_9a1f3e -> data_9a9c70.size\n        data_9a9c70.size -> mul_5e2f6c.first\n        6 -> mul_5e2f6c.second\n        instance(x: -11, y: -61) mul_4b8d7c root.Std_k98ojb.Math.Mul {}\n        mul_5e2f6c.result -> mul_4b8d7c.first\n        mul_5e2f6c.result -> mul_4b8d7c.second\n        mul_4b8d7c.result -> surface_area_8b4d7c\n    }\n\n    \n\n    instance(x: 101, y: -25) cube_surface_area_1a9f3d root.main.cube_surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 10, name: \"list\") property(List) list_6a9f1e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5b3c4d\n\n        instance(x: 201, y: 62) sub_7c8a2f root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1e0f6c root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_3d9f5a root.Std_k98ojb.List.Min {}\n        list_6a9f1e -> max_1e0f6c.items\n        list_6a9f1e -> min_3d9f5a.items\n        max_1e0f6c.max -> sub_7c8a2f.first\n        min_3d9f5a.min -> sub_7c8a2f.second\n        sub_7c8a2f.result -> output_5b3c4d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_1e0f6c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 12, name: \"list\") property(List) list_1e8f3a\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_870503 root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_1e8f3a -> max_f3b46d.items\n        list_1e8f3a -> min_870503.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_870503.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -26, y: 14, name: \"list\") property(List) list_1e8b5f\n\n        out(x: 441, y: 16, name: \"difference\") property(Number) difference_4a7d2c\n\n        instance(x: 0, y: 14) max_9b3f6f root.Std_k98ojb.List.Max {}\n        instance(x: -26, y: -25) min_5e8f1f root.Std_k98ojb.List.Min {}\n        instance(x: 201, y: 16) sub_2c4a7d root.Std_k98ojb.Math.Sub {}\n        list_1e8b5f -> max_9b3f6f.items\n        list_1e8b5f -> min_5e8f1f.items\n        max_9b3f6f.max -> sub_2c4a7d.first\n        min_5e8f1f.min -> sub_2c4a7d.second\n        sub_2c4a7d.result -> difference_4a7d2c\n    }\n\n    \n\n    instance(x: 48, y: -11) diff_max_min_6b0b3c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_0a3f8e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) max_6e87f2 root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_cb50ae root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        max_6e87f2.max -> sub_852f2e.first\n        min_cb50ae.min -> sub_852f2e.second\n        list_0a3f8e -> max_6e87f2.items\n        list_0a3f8e -> min_cb50ae.items\n        sub_852f2e.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1e3f5a\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_f3b46d.items -> list_1e3f5a\n        max_f3b46d.max -> firstitem_870503.list\n        min_4d4556.items -> list_1e3f5a\n        min_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -34, y: 10, name: \"list\") property(List) list_6e9f1a\n\n        out(x: 544, y: 63, name: \"output\") property(Number) output_e5c3d7\n\n        instance(x: 201, y: 62) sub_2b4c8c root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_6e1a0f root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -375) min_9d7f3c root.Std_k98ojb.List.Min {}\n        sub_2b4c8c.result -> output_e5c3d7\n        max_6e1a0f.max -> sub_2b4c8c.first\n        min_9d7f3c.min -> sub_2b4c8c.second\n        list_6e9f1a -> max_6e1a0f.items\n        list_6e9f1a -> min_9d7f3c.items\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_5b4f2f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 15, name: \"list\") property(List) list_1a9f2e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_870503 root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_1a9f2e -> max_f3b46d.items\n        list_1a9f2e -> min_870503.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_870503.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -28, y: 16, name: \"list\") property(List) list_1e3b8a\n\n        out(x: 446, y: 63, name: \"difference\") property(Number) difference_7f2c0d\n\n        instance(x: 201, y: 62) sub_6e5c4f root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_3a9b8c root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -375) min_7d1b0c root.Std_k98ojb.List.Min {}\n        list_1e3b8a -> max_3a9b8c.items\n        list_1e3b8a -> min_7d1b0c.items\n        max_3a9b8c.max -> sub_6e5c4f.first\n        min_7d1b0c.min -> sub_6e5c4f.second\n        sub_6e5c4f.result -> difference_7f2c0d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_3a8a9f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_6a9b1f\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_7c2d3e\n\n        instance(x: 201, y: 62) sub_5f8b4a root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1b9b6c root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_7e2d3b root.Std_k98ojb.List.Min {}\n        list_6a9b1f -> max_1b9b6c.items\n        list_6a9b1f -> min_7e2d3b.items\n        max_1b9b6c.max -> sub_5f8b4a.first\n        min_7e2d3b.min -> sub_5f8b4a.second\n        sub_5f8b4a.result -> output_7c2d3e\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_1f9e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_0a3f1e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_870503 root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_0a3f1e -> max_f3b46d.items\n        list_0a3f1e -> min_870503.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_870503.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: 0, name: \"input\") property(Number) input_5f9a3e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 438, y: 57) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n        input_5f9a3e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> equal_7836b4.left\n        0 -> equal_7836b4.right\n        equal_7836b4.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_f15e9e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -34, y: 127, name: \"input\") property(Number) input_f5c03d\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1d4e5c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -30, y: 2, name: \"input\") property(Number) input_0e8a3f\n\n        out(x: 1746, y: -10, name: \"output\") property(Bool) output_7b4c1d\n        instance(x: 1619, y: 120, name: \"continue\") trigger() continue_2f5b8f\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_0e8a3f -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_0e8a3f -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_2f5b8f\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_0e8a3f -> expression_9fba8c.gen_0\n        input_0e8a3f -> expression_b720d7.gen_0\n        if_07b8c7.value -> output_7b4c1d\n        if_e19a62.then -> continue_2f5b8f\n        for_8cb3f6.done -> continue_2f5b8f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_0a8f1e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_0a8f1e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_0a8f1e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_0a8f1e -> expression_9fba8c.gen_0\n        input_0a8f1e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e0d2c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_1e3f6d\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_eb7a8c\n\n        instance(x: 772, y: 76) modulo_5c0f9f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1054, y: 74) equal_2e6d1f root.Std_k98ojb.Logic.Equal {}\n        input_1e3f6d -> modulo_5c0f9f.value\n        2 -> modulo_5c0f9f.divisor\n        modulo_5c0f9f.result -> equal_2e6d1f.left\n        0 -> equal_2e6d1f.right\n        equal_2e6d1f.result -> output_eb7a8c\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_9e3c5f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -32, y: 2, name: \"input\") property(Number) input_9e8f5d\n\n        out(x: 1266, y: 74, name: \"output\") property(Bool) output_1a7c3b\n\n        instance(x: 1014, y: 75) modulo_0e2f54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1395, y: 76) equal_6d9b8f root.Std_k98ojb.Logic.Equal {}\n        input_9e8f5d -> modulo_0e2f54.value\n        2 -> modulo_0e2f54.divisor\n        modulo_0e2f54.result -> equal_6d9b8f.left\n        0 -> equal_6d9b8f.right\n        equal_6d9b8f.result -> output_1a7c3b\n    }\n\n    \n\n    instance(x: -14, y: -11) is_even_5e4d2f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -34, y: 127, name: \"input\") property(Number) input_f5c03d\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_0e1d2c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -36, y: 1, name: \"input\") property(Number) input_0e8f9d\n\n        out(x: 1024, y: 2, name: \"output\") property(Bool) output_7a6b3c\n\n        instance(x: 544, y: -5) modulo_3b1c7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 824, y: 4) equal_0e2d8c root.Std_k98ojb.Logic.Equal {}\n        input_0e8f9d -> modulo_3b1c7f.value\n        2 -> modulo_3b1c7f.divisor\n        modulo_3b1c7f.result -> equal_0e2d8c.left\n        0 -> equal_0e2d8c.right\n        equal_0e2d8c.result -> output_7a6b3c\n    }\n\n    \n\n    instance(x: -5, y: -4) is_even_f1f9f8 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_9a8f6e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_9a8f6e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_9a8f6e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_9a8f6e -> expression_9fba8c.gen_0\n        input_9a8f6e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_0a8f1e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_0a8f1e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_0a8f1e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_0a8f1e -> expression_9fba8c.gen_0\n        input_0a8f1e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_4d5e2c root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"characters\") characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"first repeated character\") find_2d44da root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 1) tolower_634b7e root.Std_k98ojb.Strings.ToLower {}\n        characters_3c713b.characters -> find_2d44da.items\n        input_0 -> characters_3c713b.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            tolower_634b7e.output -> contains_45e806.input\n            current_afd5b1 -> contains_45e806.contains\n            input_0 -> tolower_634b7e.input\n            contains_45e806.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_2d44da.predicate\n        find_2d44da.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_4e7b9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3f5a6d root.Std_k98ojb.Iteration.Find {}\n        instance(x: -10, y: 60) filter_2f8b1c root.Std_k98ojb.Iteration.Filter {}\n        characters_4e7b9c.characters -> find_3f5a6d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0f2da\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3b8c4d root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_a0f2da -> contains_3b8c4d.input\n            characters_4e7b9c.characters -> contains_3b8c4d.contains\n            contains_3b8c4d.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_3f5a6d.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0f2da\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3b8c4d root.Std_k98ojb.Strings.Contains {}\n            current_a0f2da -> contains_3b8c4d.input\n            characters_4e7b9c.characters -> contains_3b8c4d.contains\n            contains_3b8c4d.result -> bool_1eb6e9\n        } -> filter_2f8b1c.handler\n        find_3f5a6d.item -> result_0\n        characters_4e7b9c.characters -> filter_2f8b1c.items\n        filter_2f8b1c.output_list -> find_3f5a6d.items\n        input_0 -> characters_4e7b9c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -290, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_4a3f6c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_8e9d5f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -40, y: 60, name: \"first\") ``find_8e9d5f`` root.Std_k98ojb.Iteration.Find {}\n        characters_4a3f6c.characters -> find_8e9d5f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_0f8c4a root.Std_k98ojb.Strings.Contains {}\n            ``find_8e9d5f``.output_list -> contains_0f8c4a.input\n            current_afd5b1 -> contains_0f8c4a.contains\n            contains_0f8c4a.result -> bool_1eb6e9\n        } -> find_8e9d5f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_0f8c4a root.Std_k98ojb.Strings.Contains {}\n            ``first``.output_list -> contains_0f8c4a.input\n            current_afd5b1 -> contains_0f8c4a.contains\n            contains_0f8c4a.result -> bool_1eb6e9\n        } -> ``find_8e9d5f``.predicate\n        characters_4a3f6c.characters -> ``first``.items\n        find_8e9d5f.item -> result_0\n        input_0 -> characters_4a3f6c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5e3f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7a9d4f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -2, y: 130) ``characters_5e3f8c`` root.Std_k98ojb.List.Slice {}\n        characters_5e3f8c.characters -> ``characters_5e3f8c``.list\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2f3a4c root.Std_k98ojb.Strings.Contains {}\n            ``characters_5e3f8c``.list -> contains_2f3a4c.input\n            current_afd5b1 -> contains_2f3a4c.contains\n            contains_2f3a4c.result -> bool_1eb6e9\n        } -> find_7a9d4f.predicate\n        ``characters_5e3f8c``.slice -> find_7a9d4f.items\n        input_0 -> characters_5e3f8c.input\n        1 -> ``characters_5e3f8c``.start\n        find_7a9d4f.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) ``First repeated character_0b1361`` root.Std_k98ojb.Iteration.Filter {}\n        characters_2e1444.characters -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``First repeated character_2c3a0f`` root.Std_k98ojb.Iteration.Find {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> ``First repeated character_2c3a0f``.items\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) ``First repeated character_2c3a0f`` root.Std_k98ojb.Iteration.Filter {}\n                current_afd5b1 -> ``First repeated character_2c3a0f``.items\n                func() {\n                    in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                    out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                    instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                    input_0 -> contains_d42dce.input\n                    current_afd5b1 -> contains_d42dce.contains\n                    contains_d42dce.result -> bool_1eb6e9\n                } -> ``First repeated character_2c3a0f``.handler\n            } -> equal_a54bdc.left\n            1 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        characters_2e1444.characters -> ``First repeated character_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``First repeated character_2c3a0f`` root.Std_k98ojb.Iteration.Find {}\n            current_afd5b1 -> ``First repeated character_2c3a0f``.items\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                input_0 -> contains_d42dce.input\n                current_afd5b1 -> contains_d42dce.contains\n                contains_d42dce.result -> bool_1eb6e9\n            } -> ``First repeated character_2c3a0f``.handler\n        } -> ``First repeated character_0b1361``.handler\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -279, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0, name: \"characters\") characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 1, name: \"first repeated character\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26) ``first repeated character_0b1361`` root.Std_k98ojb.Iteration.Filter {}\n        characters_3c713b.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            ``first repeated character_0b1361``.output_list -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        characters_3c713b.characters -> ``first repeated character_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_1 -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``first repeated character_0b1361``.handler\n        find_6d05b0.item -> output_0\n        input_1 -> characters_3c713b.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3e5b8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257) ``find_6d05b0_1`` root.Std_k98ojb.Iteration.Find {}\n        characters_3e5b8c.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_3e5b8c.characters -> contains_d42dce.list\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_3e5b8c.characters -> contains_d42dce.list\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``find_6d05b0_1``.predicate\n        characters_3e5b8c.characters -> ``find_6d05b0_1``.items\n        find_6d05b0.item -> result_0\n        input_0 -> characters_3e5b8c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -288, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_4a3b7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5f8d9e root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257) filter_6b2c1d root.Std_k98ojb.Iteration.Filter {}\n        characters_4a3b7c.characters -> find_5f8d9e.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0c6c2\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_8b3f5a root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_a0c6c2 -> contains_8b3f5a.input\n            characters_4a3b7c.characters -> contains_8b3f5a.contains\n            contains_8b3f5a.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_5f8d9e.predicate\n        instance(x: -39, y: 26, name: \"First repeated character\") ``First repeated character_3c2b7f`` root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0c6c2\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_8b3f5a root.Std_k98ojb.Strings.Contains {}\n            current_a0c6c2 -> contains_8b3f5a.input\n            characters_4a3b7c.characters -> contains_8b3f5a.contains\n            contains_8b3f5a.result -> bool_1eb6e9\n        } -> ``First repeated character_3c2b7f``.predicate\n        find_5f8d9e.item -> filter_6b2c1d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0c6c2\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_8b3f5a root.Std_k98ojb.Strings.Contains {}\n            current_a0c6c2 -> contains_8b3f5a.input\n            ``First repeated character_3c2b7f``.item -> contains_8b3f5a.contains\n            contains_8b3f5a.result -> bool_1eb6e9\n        } -> filter_6b2c1d.handler\n        filter_6b2c1d.output_list -> ``First repeated character_3c2b7f``.items\n        input_0 -> characters_4a3b7c.input\n        ``First repeated character_3c2b7f``.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_1e5d8f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"characters\") characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"first repeated character\") find_2d44da root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 1) tolower_634b7e root.Std_k98ojb.Strings.ToLower {}\n        characters_3c713b.characters -> find_2d44da.items\n        input_0 -> characters_3c713b.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            tolower_634b7e.output -> contains_45e806.input\n            current_afd5b1 -> contains_45e806.contains\n            input_0 -> tolower_634b7e.input\n            contains_45e806.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_2d44da.predicate\n        find_2d44da.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_3e5b7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"first repeated char\") find_2c4a6d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_3e5b7f.input -> find_2c4a6d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) substring_2f3a4c root.Std_k98ojb.Strings.Substring {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            characters_3e5b7f.characters -> substring_2f3a4c.input\n            find_2c4a6d.index -> substring_2f3a4c.start\n            current_afd5b1 -> substring_2f3a4c.end\n            substring_2f3a4c.substring -> contains_d42dce.input\n            input_0 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            false -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_2c4a6d.predicate\n        find_2c4a6d.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3b2d8c root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -1) list_remove_7e6f9a root.Std_k98ojb.List.Remove {}\n            min_3b2d8c.items -> list_remove_7e6f9a.list\n            min_3b2d8c.min -> list_remove_7e6f9a.index\n            list_remove_7e6f9a.resultWithoutItem -> find_6d05b0.items\n            elem_9f6850 -> notequal_807ffd.right\n            list_remove_7e6f9a.resultWithoutItem -> min_3b2d8c.items\n            0 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: -193, name: \"items\") property(List) items_ai\n        out(x: 46, y: 158, name: \"second_min\") property(Number) second_min_1\n\n        instance(x: -105, y: -110) min_node root.Std_k98ojb.List.Min {}\n        instance(x: -105, y: -210) remove_node root.Std_k98ojb.List.Remove {}\n        instance(x: 426, y: -303) min2_node root.main.min {}\n\n        items_ai -> min_node.items\n        min_node.min -> remove_node.index\n        items_ai -> remove_node.list\n        remove_node.listWithoutItem -> min2_node.items\n\n        min2_node.min -> second_min_1\n    }\n\n    \n    instance(x: -174, y: -63) min_d6e930 root.main.min {}\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -285, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1c8d4e root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -40) list_remove_2a9f3f root.Std_k98ojb.List.Remove {}\n            min_1c8d4e.items -> list_remove_2a9f3f.list\n            elem_9f6850 -> list_remove_2a9f3f.index\n            list_remove_2a9f3f.listWithoutItem -> min_1c8d4e.items\n            min_1c8d4e.min -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1e8b2c root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -100) list_remove_7a9f3d root.Std_k98ojb.List.Remove {}\n            min_1e8b2c.items -> list_remove_7a9f3d.list\n            0 -> list_remove_7a9f3d.index\n            list_remove_7a9f3d.listWithoutItem -> min_1e8b2c.items\n            elem_9f6850 -> notequal_807ffd.right\n            min_1e8b2c.min -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_2c1d4e root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 489, y: 45) list_remove_5a9f8f root.Std_k98ojb.List.Remove {}\n            min_2c1d4e.items -> list_remove_5a9f8f.list\n            elem_9f6850 -> list_remove_5a9f8f.index\n            list_remove_5a9f8f.listWithoutItem -> min_2c1d4e.items\n            min_2c1d4e.min -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: -0, name: \"list\") property(List) list_8f9d6a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) min_7e4c5b root.Std_k98ojb.List.Min {}\n        list_8f9d6a -> min_7e4c5b.items\n        instance(x: -1, y: 0) remove_3b2f2f root.Std_k98ojb.List.Remove {}\n        min_7e4c5b.min -> remove_3b2f2f.index\n        list_8f9d6a -> remove_3b2f2f.list\n        instance(x: 0, y: -1) min_2c3b3b root.Std_k98ojb.List.Min {}\n        remove_3b2f2f.listWithoutItem -> min_2c3b3b.items\n        min_2c3b3b.min -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_5e7d6a root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3e6c1d root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 311, y: -34) list_remove_8f7a5f root.Std_k98ojb.List.Remove {}\n            min_3e6c1d.items -> list_remove_8f7a5f.list\n            elem_9f6850 -> list_remove_8f7a5f.index\n            list_remove_8f7a5f.listWithoutItem -> min_3e6c1d.items\n            min_3e6c1d.min -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -290, y: -193, name: \"items\") property(List) items_9f7759\n\n        out(x: 46, y: 158, name: \"second_min\") property(Number) min_b2508f\n\n        instance(x: -105, y: -110) find_smallest_e38995 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1088d5 root.Std_k98ojb.Math.Min {}\n            items_9f7759 -> min_1088d5.right\n            elem_9f6850 -> min_1088d5.left\n            min_1088d5.result -> bool_af09a7\n        } -> find_smallest_e38995.predicate\n        items_9f7759 -> find_smallest_e38995.items\n\n        instance(x: -105, y: 110) filter_1cedb2 root.Std_k98ojb.Query.Filter {\n            where: \"it != smallest\"\n        }\n        find_smallest_e38995.item -> filter_1cedb2.smallest\n        items_9f7759 -> filter_1cedb2.list\n\n        instance(x: -105, y: 110) min_37db7f root.Std_k98ojb.List.Min {}\n        filter_1cedb2.result -> min_37db7f.items\n        min_37db7f.min -> min_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) second_smallest_d6e930 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_2d8b5c root.Std_k98ojb.List.Min {}\n            list_abed4a -> min_2d8b5c.items\n            instance(x: -50, y: 0) filter_1e3f6f root.Std_k98ojb.Query.Filter {\n                where: \"it != min\"\n            }\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                min_2d8b5c.min -> notequal_807ffd.left\n                elem_9f6850 -> notequal_807ffd.right\n                notequal_807ffd.result -> bool_af09a7\n            } -> filter_1e3f6f.handler\n            list_abed4a -> filter_1e3f6f.list\n            instance(x: 772, y: 76) min_2d8b5c_2 root.Std_k98ojb.List.Min {}\n            filter_1e3f6f.result -> min_2d8b5c_2.items\n            min_2d8b5c_2.min -> number_3bc2ae\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1e8b3c root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -90) list_remove_7f2d4a root.Std_k98ojb.List.Remove {}\n            min_1e8b3c.items -> list_remove_7f2d4a.list\n            elem_9f6850 -> list_remove_7f2d4a.index\n            list_remove_7f2d4a.listWithoutItem -> min_1e8b3c.items\n            min_1e8b3c.min -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_RAG_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15912,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -387, y: -202, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -393, y: 28, name: \"list2\") property(List) list2_5b4c0d\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_3f6c1a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_3f6c1a\n        ifexpression_875761.value -> output_3f6c1a\n        list1_8a2f9e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_5b4c0d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        list1_8a2f9e -> getat_ce2a48.list\n        for_d26972.item -> setter_9d4f1c.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_3b7c5f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -305, y: -213, name: \"list1\") property(List) list1_3a0f8e\n        in(x: -303, y: 28, name: \"list2\") property(List) list2_9b7c4d\n\n        out(x: 1225, y: 12, name: \"output\") property(Bool) output_6c1c3a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 752, y: 93) intersection_5b3a7f root.Std_k98ojb.Sets.Intersection {}\n        list1_3a0f8e -> intersection_5b3a7f.left\n        list2_9b7c4d -> intersection_5b3a7f.right\n        instance(x: 752, y: 93) notempty_6c1c3a root.Std_k98ojb.List.NotEmpty {}\n        intersection_5b3a7f.intersect -> notempty_6c1c3a.list\n        notempty_6c1c3a.isEmpty -> output_6c1c3a\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_fc79d5 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -485, y: -235, name: \"list1\") property(List) list1_9e8f6d\n        in(x: -475, y: 30, name: \"list2\") property(List) list2_7a3b4c\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_5bbcd7\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_9e8f6d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_7a3b4c -> contains_32727d.list\n        for_d26972.item -> contains_32727d.item\n        contains_32727d.is_contained -> ifexpression_875761.input\n        for_d26972.done -> output_5bbcd7\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_9e8f6d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_fc79d5 root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -325, y: -170, name: \"list1\") property(List) list1_3f0e5d\n        in(x: -333, y: 29, name: \"list2\") property(List) list2_7a9c8b\n\n        out(x: 1186, y: 15, name: \"output\") property(Bool) output_4f1c3d\n\n        instance(x: 1000, y: -17) intersection_5e1f5c root.Std_k98ojb.Sets.Intersection {}\n        list1_3f0e5d -> intersection_5e1f5c.left\n        list2_7a9c8b -> intersection_5e1f5c.right\n        instance(x: 1116, y: -17) notempty_4b7f8f root.Std_k98ojb.List.NotEmpty {}\n        intersection_5e1f5c.intersection -> notempty_4b7f8f.list\n        notempty_4b7f8f.isEmpty -> output_4f1d3d\n    }\n\n    \n\n    instance(x: -290, y: 0) common_element_9a6d2f root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -457, y: -214, name: \"list1\") property(List) list1_9a8b2f\n        in(x: -465, y: 30, name: \"list2\") property(List) list2_6c0e3d\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_4e1c9a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_4e1c9a\n        ifexpression_875761.value -> output_4e1c9a\n        list1_9a8b2f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_6c0e3d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        for_d26972.item -> setter_9d4f1c.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_3b7d6f root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -464, y: -236, name: \"list1\") property(List) list1_3f8b4e\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_e5a6c7\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_9d1c3f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_9d1c3f\n        ifexpression_875761.value -> output_9d1c3f\n        list1_3f8b4e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_e5a6c7 -> contains_32727d.list\n        for_d26972.item -> contains_32727d.item\n        contains_32727d.is_contained -> ifexpression_875761.then\n        contains_32727d.is_contained -> output_9d1c3f\n        for_d26972.done -> output_9d1c3f\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_e5a6c7 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_3f8b4e root.main.has_common_element {}\n    instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -325, y: -186, name: \"list1\") property(List) list1_4e3f8d\n        in(x: -329, y: 31, name: \"list2\") property(List) list2_7b9c0a\n\n        out(x: 1205, y: 10, name: \"output\") property(Bool) output_6f1b4e\n\n        instance(x: 1003, y: -8) intersection_1d9c3 root.Std_k98ojb.Sets.Intersection {}\n        list1_4e3f8d -> intersection_1d9c3.left\n        list2_7b9c0a -> intersection_1d9c3.right\n        instance(x: 1036, y: -133) notempty_5b9c9 root.Std_k98ojb.List.NotEmpty {}\n        intersection_1d9c3.intersection -> notempty_5b9c9.list\n        notempty_5b9c9.isEmpty -> output_6f1b4e\n    }\n\n    \n\n    instance(x: -263, y: 7) has_common_element_2a0f8 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -341, y: -170, name: \"list1\") property(List) list1_3f0b6a\n        in(x: -349, y: 19, name: \"list2\") property(List) list2_7c5d8e\n\n        out(x: 1069, y: -165, name: \"output\") property(Bool) output_4e1b3f\n\n        instance(x: 725, y: -160) ifexpression_6a0c8f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous\"\n        }\n        getter(x: 307, y: 167, name: \"getter_1d5e9c\") getter_1d5e9c = previous\n        setter(x: 652, y: -313, name: \"setter_7b3f2a\") setter_7b3f2a = previous\n        instance(x: 329, y: -29) for_e6a0ea root.Std_k98ojb.Std.For {}\n        setter(x: -1, y: -120, name: \"setter_7b3f2a\") setter_8e9c5d = previous\n        instance(x: -276, y: -45) contains_4b1b6f root.Std_k98ojb.List.Contains {}\n        ifexpression_6a0c8f.else -> output_4e1b3f\n        ifexpression_6a0c8f.value -> output_4e1b3f\n        ifexpression_6a0c8f.then -> setter_7b3f2a.execute\n        list1_3f0b6a -> for_e6a0ea.items\n        for_e6a0ea.item -> ifexpression_6a0c8f.gen_2\n        for_e6a0ea.index -> ifexpression_6a0c8f.gen_0\n        getter_1d5e9c.value -> ifexpression_6a0c8f.gen_1\n        for_e6a0ea.onItem -> ifexpression_6a0c8f.execute\n        for_e6a0ea.done -> output_4e1b3f\n        for_e6a0ea.item -> setter_7b3f2a.new_value\n        list2_7c5d8e -> contains_4b1b6f.list\n        for_e6a0ea.item -> contains_4b1b6f.item\n        contains_4b1b6f.is_contained -> ifexpression_6a0c8f.gen_3\n        setter_7b3f2a.continue -> for_e6a0ea.next\n    }\n\n    \n\n    instance(x: 13, y: -177) has_common_element_9e5d4f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -387, y: -202, name: \"list1\") property(List) list1_9e3b8f\n        in(x: -391, y: 31, name: \"list2\") property(List) list2_5c0d7a\n\n        out(x: 1264, y: 17, name: \"output\") property(Bool) output_6a1c9e\n\n        instance(x: 1053, y: -11) intersection_c8b2f8 root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3b8f -> intersection_c8b2f8.left\n        list2_5c0d7a -> intersection_c8b2f8.right\n        instance(x: 1064, y: -130) notempty_6b8a7f root.Std_k98ojb.List.NotEmpty {}\n        intersection_c8b2f8.intersection -> notempty_6b8a7f.list\n        notempty_6b8a7f.isEmpty -> output_6a1c9e\n    }\n\n    \n\n    instance(x: -299, y: 3) common_element_5d4c0c root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -465, y: -235, name: \"list1\") property(List) list_0a8b5f\n        in(x: -485, y: 30, name: \"list2\") property(List) list_7c6d9e\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_1f4c0a\n\n        instance(x: 752, y: 93) intersection_3b8f4f root.Std_k98ojb.Sets.Intersection {}\n        list_0a8b5f -> intersection_3b8f4f.left\n        list_7c6d9e -> intersection_3b8f4f.right\n        instance(x: 1218, y: 147) notempty_1b2c8f root.Std_k98ojb.List.NotEmpty {}\n        intersection_3b8f4f.intersection -> notempty_1b2c8f.list\n        notempty_1b2c8f.isEmpty -> output_1f4c0a\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_7e5d6f root.main.common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -535, y: 5, name: \"list\") property(List) list_4f8a3e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_4f8a3e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_4f8a3e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_3a5b7f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -569, y: 438, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"output\") property(Bool) output_57c890\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_542a51 -> filter_f3b46d.list\n        filter_f3b46d.result -> firstitem_870503.list\n        list_542a51 -> filter_4d4556.list\n        filter_4d4556.result -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> output_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) is_consecutive_f21f44 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -526, y: 2, name: \"list\") property(List) list_1a0f9e\n\n        out(x: 1268, y: -5, name: \"output\") property(Bool) output_7b4d6c\n\n        instance(x: -302, y: -3) filter_1b2f6a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -5) contains_9e8b0f root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -7, name: \"transform numbers to true/false\") map_1c3d2a root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: 1) not_5f6e9b root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -11, name: \"current\") property(Number) _index_3a7d2c\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_6f8e4b\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_9f8d1b\n\n            instance(x: 226, y: 56) modulo_3c7a2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_4e8b5c root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_3c7a2b.divisor\n            _index_6f8e4b -> modulo_3c7a2b.value\n            modulo_3c7a2b.result -> notequal_4e8b5c.left\n            0 -> notequal_4e8b5c.right\n            notequal_4e8b5c.result -> output_9f8d1b\n        } -> filter_1b2f6a.handler\n        list_1a0f9e -> filter_1b2f6a.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_5c8d2e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_7e9b4f\n\n            instance(x: 74, y: -23) modulo_6a3d1b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_2f8c5d root.Std_k98ojb.Logic.NotEqual {}\n            current_5c8d2e -> modulo_6a3d1b.value\n            1 -> modulo_6a3d1b.divisor\n            modulo_6a3d1b.result -> notequal_2f8c5d.left\n            0 -> notequal_2f8c5d.right\n            notequal_2f8c5d.result -> bool_7e9b4f\n        } -> map_1c3d2a.handler\n        filter_1b2f6a.output_list -> map_1c3d2a.items\n        map_1c3d2a.output_list -> contains_9e8b0f.list\n        false -> contains_9e8b0f.item\n        not_5f6e9b.result -> output_7b4d6c\n        contains_9e8b0f.is_contained -> not_5f6e9b.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_3a2f1b root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -526, y: 5, name: \"list\") property(List) list_4f3a1e\n\n        out(x: 1230, y: 8, name: \"output\") property(Bool) output_9c7b2d\n\n        instance(x: 752, y: -12) ifexpression_5b6c6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 85, name: \"getter_8f9a2d\") getter_8f9a2d = previous\n        setter(x: 679, y: -311, name: \"setter_7b3c6e\") setter_7b3c6e = previous\n        instance(x: 321, y: -125) for_1a5b4f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -226, name: \"setter_7b3c6e\") setter_2d9f8e = previous\n        instance(x: -275, y: -141) getat_1a5b4f root.Std_k98ojb.List.GetAt {}\n        ifexpression_5b6c6c.else -> continue_a96db6\n        ifexpression_5b6c6c.value -> output_5bbcd7\n        ifexpression_5b6c6c.then -> setter_7b3c6e.execute\n        list_4f3a1e -> for_1a5b4f.items\n        for_1a5b4f.item -> ifexpression_5b6c6c.gen_2\n        for_1a5b4f.index -> ifexpression_5b6c6c.gen_0\n        getter_8f9a2d.value -> ifexpression_5b6c6c.gen_1\n        for_1a5b4f.onItem -> ifexpression_5b6c6c.execute\n        for_1a5b4f.done -> continue_a96db6\n        for_1a5b4f.item -> setter_7b3c6e.new_value\n        list_4f3a1e -> getat_1a5b4f.list\n        0 -> getat_1a5b4f.index\n        getat_1a5b4f.itemAtIndex -> setter_2d9f8e.new_value\n        execute_90aaec -> setter_2d9f8e.execute\n        setter_2d9f8e.continue -> for_1a5b4f.reset\n        setter_7b3c6e.continue -> for_1a5b4f.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_f21f44 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -515, y: 1, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 584, y: -97) not_75283f root.Std_k98ojb.Logic.Not {}\n        list_3af6ba -> intersection_c7c7e6.left\n        instance(x: 0, y: -35) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 321, y: -20) add_7f1c5d root.Std_k98ojb.List.Add {}\n        for_d26972.item -> intersection_c7c7e6.right\n        list_3af6ba -> getat_ce2a48.list\n        for_d26972.index -> getat_ce2a48.index\n        add_7f1c5d.item -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> add_7f1c5d.item\n        for_d26972.onItem -> add_7f1c5d.execute\n        list_3af6ba -> for_d26972.items\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        not_75283f.input -> output_c7097f\n        equal_f89569.result -> not_75283f.input\n        for_d26972.done -> add_7f1c5d.execute\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_ac7dfb root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 575, y: 3) sort_on_9e8c5f root.Std_k98ojb.List.SortOn {\n            key: \"it\"\n        }\n        instance(x: 775, y: 2) map_4a7d0c root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Number) output_efbc78\n\n            instance(x: 226, y: 56) add_c76d2b root.Std_k98ojb.Math.Add {}\n            current_81298e -> add_c76d2b.first\n            _index_769593 -> add_c76d2b.second\n            add_c76d2b.result -> output_efbc78\n        } -> map_4a7d0c.handler\n        sort_on_9e8c5f.sorted_list -> map_4a7d0c.items\n        instance(x: 1011, y: -97) intersection_3c6b5f root.Std_k98ojb.Sets.Intersection {}\n        list_3af6ba -> intersection_c7c7e6.left\n        sort_on_9e8c5f.sorted_list -> intersection_c7c7e6.right\n        map_4a7d0c.output_list -> intersection_3c6b5f.left\n        sort_on_9e8c5f.sorted_list -> intersection_3c6b5f.right\n        length_8166b0.length -> equal_f89569.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        0 -> equal_f89569.right\n        intersection_3c6b5f.intersection -> length_8166b0.list\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_ac7dfb root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -489, y: 6, name: \"list\") property(List) list_5e8f4a\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_5e8f4a -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_5e8f4a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -569, y: 438, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"output\") property(Bool) output_57c890\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_542a51 -> filter_f3b46d.list\n        filter_f3b46d.result -> firstitem_870503.list\n        list_542a51 -> filter_4d4556.list\n        filter_4d4556.result -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> output_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) is_consecutive_f21f44 root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -475, y: 20, name: \"sublist\") property(List) sublist_2a1f8d\n        in(x: -476, y: -150, name: \"list\") property(List) list_3b0c5e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"previous\") setter_9d4f1c root.Std_k98ojb.List.SetAt {}\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        instance(x: 679, y: -313, name: \"setter\") setter_9d4f1c root.Std_k98ojb.List.SetAt {}\n        getter(x: 334, y: 160, name: \"getter\") getter_b280eb = previous\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3b0c5e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        sublist_2a1f8d -> getter_b280eb.list\n        0 -> getter_b280eb.index\n        list_3b0c5e -> setter_9d4f1c.list\n        execute_a96db6 -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 25, name: \"list1\") property(List) list1_3f0b8a\n        in(x: -285, y: -111, name: \"list2\") property(List) list2_7e9c5d\n\n        out(x: 558, y: -100, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -101) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -102) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -103) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list1_3f0b8a -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list2_7e9c5d -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        instance(x: 493, y: -103) len_list1 root.Std_k98ojb.List.Length {}\n        list1_3f0b8a -> len_list1.list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -420, y: 5, name: \"mainList\") property(List) mainList_1f846b\n        in(x: -421, y: -165, name: \"subList\") property(List) subList_c62075\n\n        out(x: 1000, y: -110, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -180, y: -135, name: \"all possible slices of main list\") map_1c7f3a root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: 0, y: 0, name: \"list\") property(List) list_2e6d5f\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_efbc78\n\n            instance(x: 226, y: 56) slice_c76d2b root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) add_7836b4 root.Std_k98ojb.List.Add {}\n            list_2e6d5f -> slice_c76d2b.items\n            _index_769593 -> slice_c76d2b.start\n            -1 -> slice_c76d2b.end\n            slice_c76d2b.slice -> add_7836b4.list\n            0 -> add_7876b4.item\n            add_7876b4.listWithItem -> output_efbc78\n        } -> map_1c7f3a.handler\n        mainList_1f846b -> map_1c7f3a.items\n        instance(x: -10, y: 5) contains_32727d root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) equal_c76d2b root.Std_k98ojb.Logic.Equal {}\n            subList_c62075 -> equal_c76d2b.left\n            _index_170471 -> equal_c76d2b.right\n            equal_c76d2b.result -> output_efbc78\n        } -> contains_32727d.handler\n        map_1c7f3a.output_list -> contains_32727d.list\n        subList_c62075 -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -420, y: 30, name: \"mainList\") property(List) mainList_3f8a4b\n        in(x: -419, y: -143, name: \"subList\") property(List) subList_1c7e5d\n\n        out(x: 1110, y: -15, name: \"output\") property(Bool) output_9e6c3f\n\n        instance(x: -165, y: -142, name: \"length of main list\") length_8b2a4c root.Std_k98ojb.List.Length {}\n        instance(x: 10, y: -143, name: \"length of sub list\") length_1d5e9f root.Std_k98ojb.List.Length {}\n        instance(x: 224, y: -142) greaterthan_7a8c4f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 438, y: -143) greaterthan_3c2a1d root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        instance(x: 652, y: -142) ifexpression_5e8c4f root.Std_k98ojb.Std.IfExpression {\n            expression: \"subListLength <= mainListLength\"\n        }\n        instance(x: 866, y: -143) for_1d9a7f root.Std_k98ojb.Std.For {}\n        instance(x: 1080, y: -142) ifexpression_8c4e5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index + subListLength <= mainListLength\"\n        }\n        instance(x: 1294, y: -143) for_3a2d1f root.Std_k98ojb.Std.For {}\n        instance(x: 1508, y: -142) ifexpression_5c4e5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"subList[index] == mainList[index + i]\"\n        }\n        instance(x: 1722, y: -143) count_1d9a7f root.Std_k98ojb.Std.Count {}\n        instance(x: 1936, y: -142) ifexpression_8c4e5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index + subListLength == mainListLength\"\n        }\n        instance(x: 2150, y: -143) count_3a2d1f root.Std_k98ojb.Std.Count {}\n        instance(x: 2364, y: -142) ifexpression_5c4e5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == subListLength\"\n        }\n        instance(x: 2578, y: -143) count_1d9a7f root.Std_k98ojb.Std.Count {}\n        instance(x: 2792, y: -142) ifexpression_5c4e5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == subListLength\"\n        }\n        mainList_3f8a4b -> length_8b2a4c.list\n        subList_1c7e5d -> length_1d5e9f.list\n        length_8b2a4c.length -> greaterthan_7a8c4f.left\n        length_1d5e9f.length -> greaterthan_7a8c4f.right\n        greaterthan_7a8c4f.result -> ifexpression_5e8c4f.gen_0\n        subListLength -> ifexpression_5e8c4f.gen_1\n        mainListLength -> ifexpression_5e8c4f.gen_2\n        length_1d5e9f.length -> greaterthan_3c2a1d.left\n        0 -> greaterthan_3c2a1d.right\n        greaterthan_3c2a1d.result -> for_1d9a7f.items\n        ifexpression_5e8c4f.value -> for_1d9a7f.trigger\n        mainList_3f8a4b -> for_1d9a7f.items\n        subListLength -> count_1d9a7f.count\n        0 -> count_1d9a7f.reset\n        ifexpression_5e8c4f.value -> count_1d9a7f.continue\n        for_1d9a7f.item -> ifexpression_8c4e5f.gen_0\n        index -> ifexpression_8c4e5f.gen_1\n        subListLength -> ifexpression_8c4e5f.gen_2\n        ifexpression_8c4e5f.value -> for_3a2d1f.items\n        mainList_3f8a4b -> for_3a2d1f.items\n        ifexpression_8c4e5f.value -> for_3a2d1f.trigger\n        subList_1c7e5d -> for_3a2d1f.items\n        index -> ifexpression_5c4e5f.gen_0\n        i -> ifexpression_5c4e5f.gen_1\n        subList_1c7e5d -> ifexpression_5c4e5f.gen_2\n        for_3a2d1f.item -> ifexpression_5c4e5f.gen_3\n        mainList_3f8a4b -> ifexpression_5c4e5f.gen_4\n        index -> ifexpression_5c4e5f.gen_5\n        i -> ifexpression_5c4e5f.gen_6\n        ifexpression_5c4e5f.value -> count_3a2d1f.continue\n        for_3a2d1f.item -> count_3a2d1f.new_value\n        0 -> count_3a2d1f.reset\n        ifexpression_8c4e5f.value -> count_3a2d1f.trigger\n        ifexpression_5c4e5f.value -> ifexpression_5c4e5f.then\n        for_3a2d1f.done -> ifexpression_5c4e5f.else\n        ifexpression_5c4e5f.value -> count_1d9a7f.continue\n        0 -> count_1d9a7f.reset\n        ifexpression_8c4e5f.value -> count_1d9a7f.trigger\n        for_3a2d1f.item -> count_1d9a7f.new_value\n        ifexpression_5c4e5f.value -> ifexpression_5c4e5f.then\n        for_3a2d1f.done -> ifexpression_5c4e5f.else\n        ifexpression_5c4e5f.value -> count_1d9a7f.continue\n        0 -> count_1d9a7f.reset\n        ifexpression_8c4e5f.value -> count_1d9a7f.trigger\n        for_3a2d1f.item -> count_1d9a7f.new_value\n        count_1d9a7f.count -> ifexpression_5c4e5f.gen_0\n        subListLength -> ifexpression_5c4e5f.gen_1\n        ifexpression_5c4e5f.value -> for_1d9a7f.next\n        count_3a2d1f.count -> ifexpression_8c4e5f.gen_0\n        subListLength -> ifexpression_8c4e5f.gen_1\n        mainListLength -> ifexpression_8c4e5f.gen_2\n        ifexpression_8c4e5f.value -> for_3a2d1f.next\n        count_1d9a7f.count -> output_9e6c3f\n    }\n\n    \n\n    instance(x: -67, y: 59) is_sublist_0b4c6f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -459, y: 20, name: \"list1\") property(List) list1_2a8b3f\n        in(x: -465, y: -235, name: \"list2\") property(List) list2_5c9d4e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"previous\") setter_9d4f1c root.Std_k98ojb.List.SetAt {}\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        instance(x: 679, y: -313, name: \"current\") setter_9d4f1c root.Std_k98ojb.List.SetAt {}\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> for_d26972.handler\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_2a8b3f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        list2_5c9d4e -> setter_9d4f1c.list\n        for_d26972.item -> setter_9d4f1c.new_value\n        0 -> setter_9d4f1c.index\n        getter_b280eb.value -> previous\n        setter_9d4f1c.continue -> for_d26972.reset\n        setter_9d4f1c.execute -> continue_a96db6\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 5, name: \"mainList\") property(List) mainList_3f0b6a\n        in(x: -464, y: -160, name: \"subList\") property(List) subList_9e8d1c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_3f0b6a -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_3f0b6a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: -465, y: 5) is_sublist_2 root.main.is_sublist {}\n        instance(x: -464, y: -160) is_sublist_3 root.main.is_sublist {}\n        instance(x: -463, y: -320) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 847, y: -207) not_75283f root.Std_k98ojb.Logic.Not {}\n        is_sublist_2.output -> contains_32727d.list\n        subList_9e8d1c -> contains_32727d.item\n        contains_32727d.is_contained -> not_75283f.input\n        not_75283f.result -> ifexpression_875761.gen_0\n        is_sublist_3.output -> ifexpression_875761.gen_1\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 5, name: \"list1\") property(List) list1_4e6f8d\n        in(x: -473, y: 147, name: \"list2\") property(List) list2_9c7b3a\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_4e6f8d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_9c7b3a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> is_sublist.execute\n        execute -> for_d26972.trigger\n        output_5bbcd7 -> is_sublist.output\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_3a9f1e\n        in(x: -485, y: -235, name: \"sub_list\") property(List) sub_list_7c2d6b\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_3a9f1e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_3a9f1e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        sub_list_7c2d6b -> for_d26972.items\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -480, y: 0, name: \"mainList\") property(List) mainList_1f846b\n        in(x: -479, y: 140, name: \"subList\") property(List) subList_c62075\n\n        out(x: 784, y: 25, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 133, y: 43) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_f89569.left\n            list2_1d86d4 -> equal_f89569.right\n            equal_f89569.result -> result_e245cb\n        } -> zip_201051.handler\n        mainList_1f846b -> for_d26972.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_efbc78\n\n            instance(x: 226, y: 56) slice_c76d2b root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) contains_7836b4 root.Std_k98ojb.List.Contains {}\n            _index_170471 -> slice_c76d2b.start\n            subList_c62075.length + _index_170471 - 1 -> slice_c76d2b.end\n            mainList_1f846b -> slice_c76d2b.list\n            subList_c62075 -> contains_7836b4.item\n            slice_c76d2b.slice -> contains_7836b4.list\n            contains_7836b4.is_contained -> output_efbc78\n        } -> for_d26972.handler\n        zip_201051.zipped -> not_75283f.input\n        for_d26972.output_list -> output_0d40f1\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_ac7dfb root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 0, name: \"list1\") property(List) list_9a8f6b\n        in(x: -282, y: 166, name: \"list2\") property(List) list_5e7c3d\n\n        out(x: 1064, y: 50, name: \"output\") property(Bool) output_1e0c9a\n\n        instance(x: -89, y: 51, name: \"is sublist\") filter_6f2b8f root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            list_5e7c3d -> contains_32727d.list\n            _index_769593 -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> filter_6f2b8f.handler\n        instance(x: 0, y: -1) generateRange_7e9a3c root.Std_k98ojb.List.GenerateRange {}\n        list_9a8f6b -> generateRange_7e9a3c.from\n        length_5d4a2a.length -> generateRange_7e9a3c.to\n        instance(x: -279, y: 165) length_5d4a2a root.Std_k98ojb.List.Length {}\n        list_9a8f6b -> length_5d4a2a.list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> generateRange_7e9a3c.handler\n        instance(x: -88, y: -1) slice_2f6b5d root.Std_k98ojb.List.Slice {}\n        generateRange_7e9a3c.list -> slice_2f6b5d.items\n        0 -> slice_2f6b5d.start\n        length_5d4a2a.length - list_5e7c3d.Length() + 1 -> slice_2f6b5d.end\n        instance(x: -88, y: -1) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        slice_2f6b5d.slice -> map_c73e3b.items\n        instance(x: -88, y: -1) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Bool) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) and_9c7f0a root.Std_k98ojb.Logic.And {}\n            map_c73e3b.output_list[_index_769593] -> and_9c7f0a.left\n            _index_170471 -> and_9c7f0a.right\n            and_9c7f2a.result -> output_efbc78\n        } -> filter_c91965.handler\n        map_c73e3b.output_list -> filter_c91965.items\n        instance(x: -88, y: -1) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            list_5e7c3d -> contains_32727d.list\n            _index_769593 -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> filter_c91965.handler\n        instance(x: -88, y: -1) reduce_9f2b8a root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> reduce_9f2b8a.handler\n        filter_c91965.output_list -> reduce_9f2b8a.items\n        true -> reduce_9f2b8a.initialValue\n        reduce_9f2b8a.reduced -> not_75283f.input\n        not_75283f.result -> output_1e0c9a\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a1b8e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c2f5d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 36, name: \"index\") property(Number) index_7e5a8c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_3b2f6d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7e5a8c -> add_3b2f6d.first\n            1 -> add_3b2f6d.second\n            add_3b2f6d.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3a1b8e -> find_6d05b0.items\n        find_6d05b0.item -> missing_7c2f5d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e8f9a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c6d4b\n\n        instance(x: 0, y: 0) find_5a2f5e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1e8c3d\n            in(x: -108, y: 117, name: \"elem\") property(Number) elem_6f5a9b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_e2f4ae\n\n            instance(x: 89, y: 29) add_3c1e0d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_7a8d5f root.Std_k98ojb.Logic.NotEqual {}\n            index_1e8c3d -> add_3c1e0d.first\n            1 -> add_3c1e0d.second\n            add_3c1e0d.result -> notequal_7a8d5f.left\n            elem_6f5a9b -> notequal_7a8d5f.right\n            notequal_7a8d5f.result -> bool_e2f4ae\n        } -> find_5a2f5e.predicate\n        list_3e8f9a -> find_5a2f5e.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1e8c3d\n            in(x: -108, y: 117, name: \"elem\") property(Number) elem_6f5a9b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_e2f4ae\n\n            instance(x: 89, y: 29) add_3c1e0d root.Std_k98ojb.Math.Add {}\n            index_1e8c3d -> add_3c1e0d.first\n            1 -> add_3c1e0d.second\n            add_3c1e0d.result -> bool_e2f4ae\n        } -> find_5a2f5e.context\n        find_5a2f5e.item -> missing_7c6d4b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_8f9e0a root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_3a9f8e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_6c7b4d\n\n        instance(x: 0, y: 0) find_5f2d7e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1a9c6f\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_8d5e7b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3f2b4d\n\n            instance(x: 89, y: 29) add_9c6a1b root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_7e8f5d root.Std_k98ojb.Logic.NotEqual {}\n            index_1a9c6f -> add_9c6a1b.first\n            0 -> add_9c6a1b.second\n            add_9c6a1b.result -> notequal_7e8f5d.left\n            elem_8d5e7b -> notequal_7e8f5d.right\n            notequal_7e8f5d.result -> bool_3f2b4d\n        } -> find_5f2d7e.predicate\n        list_3a9f8e -> find_5f2d7e.items\n        add_9c6a1b.result -> missing_6c7b4d\n        index_1a9c6f -> add_9c6a1b.first\n        0 -> add_9c6a1b.second\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_8e2b5f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_3e9f5a\n\n        out(x: 595, y: -1, name: \"missing\") property(Number) missing_7b2d8c\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 35, name: \"index\") property(Number) index_1a7d8c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_3e5b9f root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_1a7d8c -> add_3e5b9f.first\n            0 -> add_3e5b9f.second\n            add_3e5b9f.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3e9f5a -> find_6d05b0.items\n        find_6d05b0.item -> missing_7b2d8c\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1e4c0f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -279, y: 0, name: \"list\") property(List) list_9f8d4a\n\n        out(x: 591, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 35, name: \"index\") property(Number) index_1e8c5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_2b3f4d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_1e8c5a -> add_2b3f4d.first\n            0 -> add_2b3f4d.second\n            add_2b3f4d.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f8d4a -> find_6d05b0.items\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1a3b8f\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7e9d2c\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -118, y: -36, name: \"index\") property(Number) index_8c1a2e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_9f3b6d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_8c1a2e -> add_9f3b6d.first\n            1 -> add_9f3b6d.second\n            elem_9f6850 -> notequal_807ffd.right\n            add_9f3b6d.result -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_1a3b8f -> find_6d05b0.items\n        find_6d05b0.index -> index_8c1a2e\n        find_6d05b0.item -> missing_7e9d2c\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_3f4c5e root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e4f1a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c8b5d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -112, y: 35, name: \"index\") property(Number) index_1e3c8a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_2f9d0b root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_1e3c8a -> add_2f9d0b.first\n            1 -> add_2f9d0b.second\n            elem_9f6850 -> notequal_807ffd.right\n            add_2f9d0b.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3e4f1a -> find_6d05b0.items\n        find_6d05b0.index -> missing_7c8b5d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9e3f8a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7b2c6d\n\n        instance(x: 0, y: 0) find_5a4c8f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9e3f8a\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_8b5c4d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9e3f8a -> add_8b5c4d.first\n            1 -> add_8b5c4d.second\n            add_8b5c4d.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_5a4c8f.predicate\n        list_9e3f8a -> find_5a4c8f.items\n        find_5a4c8f.index + 1 -> missing_7b2c6d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -280, y: 0, name: \"list\") property(List) list_3a8f6e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_9c7d2b\n\n        instance(x: 0, y: 0) find_4b5c0e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1a8f7d\n            in(x: -108, y: 89, name: \"elem\") property(Number) elem_9c5e2b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_6b3c4f\n\n            instance(x: 89, y: 29) sub_7a8d1f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_5e9f2d root.Std_k98ojb.Logic.NotEqual {}\n            index_1a8f7d -> sub_7a8d1f.first\n            elem_9c5e2b -> sub_7a8d1f.second\n            1 -> notequal_5e9f2d.right\n            sub_7a8d1f.result -> notequal_5e9f2d.left\n            notequal_5e9f2d.result -> bool_6b3c4f\n        } -> find_4b5c0e.predicate\n        list_3a8f6e -> find_4b5c0e.items\n        find_4b5c0e.index -> missing_9c7d2b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1b8f6e root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f8d4a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 29, name: \"index\") property(Number) index_8d5a1c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_8d5a1c -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f8d4a -> find_6d05b0.items\n        find_6d05b0.index -> index_8d5a1c\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -124, y: 0, name: \"input\") property(String) input_9f8a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1b4c5e\n\n        instance(x: 0, y: 1) replace_7a6d1e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3f9c2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4f8b5f root.Std_k98ojb.Strings.Replace {}\n        input_9f8a3d -> replace_7a6d1e.input\n        \" \" -> replace_7a6d1e.search\n        \":\" -> replace_7a6d1e.replace\n        replace_7a6d1e.output -> replace_3f9c2d.input\n        \",\" -> replace_3f9c2d.search\n        \":\" -> replace_3f9c2d.replace\n        replace_3f9c2d.output -> replace_4f8b5f.input\n        \".\" -> replace_4f8b5f.search\n        \":\" -> replace_4f8b5f.replace\n        replace_4f8b5f.output -> output_1b4c5e\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -135, y: 0, name: \"input\") property(String) input_1a8f6e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5b7c9d\n\n        instance(x: 0, y: 1) replace_3e4d0f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a6c2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_f7e9ae root.Std_k98ojb.Strings.Replace {}\n        input_1a8f6e -> replace_3e4d0f.input\n        \" \" -> replace_3e4d0f.search\n        \":\" -> replace_3e4d0f.replace\n        replace_3e4d0f.output -> replace_8a6c2f.input\n        \",\" -> replace_8a6c2f.search\n        \":\" -> replace_8a6c2f.replace\n        replace_8a6c2f.output -> replace_f7e9ae.input\n        \".\" -> replace_f7e9ae.search\n        \":\" -> replace_f7e9ae.replace\n        replace_f7e9ae.output -> output_5b7c9d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"input\") property(String) input_1a3f8e\n\n        out(x: 532, y: -2, name: \"output\") property(String) output_5c7d4b\n\n        instance(x: 0, y: 1) replace_6e9f1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a3b2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_5c4d7f root.Std_k98ojb.Strings.Replace {}\n        input_1a3f8e -> replace_6e9f1f.input\n        \" \" -> replace_6e9f1f.search\n        \":\" -> replace_6e9f1f.replace\n        replace_6e9f1f.output -> replace_8a3b2f.input\n        \",\" -> replace_8a3b2f.search\n        \":\" -> replace_8a3b2f.replace\n        replace_8a3b2f.output -> replace_5c4d7f.input\n        \".\" -> replace_5c4d7f.search\n        \":\" -> replace_5c4d7f.replace\n        replace_5c4d7f.output -> output_5c7d4b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -123, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5d8c9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4e6a1f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7b3b7b.input\n        \" \" -> replace_7b3b7b.search\n        \":\" -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> replace_5d8c9f.input\n        \",\" -> replace_5d8c9f.search\n        \":\" -> replace_5d8c9f.replace\n        replace_5d8c9f.output -> replace_4e6a1f.input\n        \".\" -> replace_4e6a1f.search\n        \":\" -> replace_4e6a1f.replace\n        replace_4e6a1f.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -149, y: 0, name: \"input\") property(String) input_1f3d5a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4e8b9c\n\n        instance(x: 0, y: 1) replace_7a6f6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5d3c2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9e4b8c root.Std_k98ojb.Strings.Replace {}\n        input_1f3d5a -> replace_7a6f6f.input\n        \" \" -> replace_7a6f6f.search\n        \":\" -> replace_7a6f6f.replace\n        replace_7a6f6f.output -> replace_5d3c2f.input\n        \",\" -> replace_5d3c2f.search\n        \":\" -> replace_5d3c2f.replace\n        replace_5d3c2f.output -> replace_9e4b8c.input\n        \".\" -> replace_9e4b8c.search\n        \":\" -> replace_9e4b8c.replace\n        replace_9e4b8c.output -> output_4e8b9c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -156, y: 0, name: \"input\") property(String) input_2f8a6d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_7b1c3e\n\n        instance(x: 0, y: 1) replace_9e5c4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a6f2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_f3e7ea root.Std_k98ojb.Strings.Replace {}\n        input_2f8a6d -> replace_9e5c4c.input\n        \" \" -> replace_9e5c4c.search\n        \":\" -> replace_9e5c4c.replace\n        replace_9e5c4c.output -> replace_8a6f2d.input\n        \",\" -> replace_8a6f2d.search\n        \":\" -> replace_8a6f2d.replace\n        replace_8a6f2d.output -> replace_f3e7ea.input\n        \".\" -> replace_f3e7ea.search\n        \":\" -> replace_f3e7ea.replace\n        replace_f3e7ea.output -> output_7b1c3e\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_e54b7f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -124, y: 0, name: \"input\") property(String) input_9a3f1e\n\n        out(x: 529, y: -2, name: \"output\") property(String) output_7b4d8c\n\n        instance(x: 0, y: 1) replace_5b6f8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9e3a2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_7d4a1d root.Std_k98ojb.Strings.Replace {}\n        input_9a3f1e -> replace_5b6f8c.input\n        \" \" -> replace_5b6f8c.search\n        \":\" -> replace_5b6f8c.replace\n        replace_5b6f8c.output -> replace_9e3a2f.input\n        \",\" -> replace_9e3a2f.search\n        \":\" -> replace_9e3a2f.replace\n        replace_9e3a2f.output -> replace_7d4a1d.input\n        \".\" -> replace_7d4a1d.search\n        \":\" -> replace_7d4a1d.replace\n        replace_7d4a1d.output -> output_7b4d8c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_2e9f6f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -122, y: 0, name: \"input\") property(String) input_2a1f6e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_7c8d3b\n\n        instance(x: 0, y: 1) replace_5b9c4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6a4e2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_3d8c1f root.Std_k98ojb.Strings.Replace {}\n        input_2a1f6e -> replace_5b9c4f.input\n        \" \" -> replace_5b9c4f.search\n        \":\" -> replace_5b9c4f.replace\n        replace_5b9c4f.output -> replace_6a4e2f.input\n        \",\" -> replace_6a4e2f.search\n        \":\" -> replace_6a4e2f.replace\n        replace_6a4e2f.output -> replace_3d8c1f.input\n        \".\" -> replace_3d8c1f.search\n        \":\" -> replace_3d8c1f.replace\n        replace_3d8c1f.output -> output_7c8d3b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_2e5a4 root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -124, y: 0, name: \"input\") property(String) input_1a3d9f\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5e4b8c\n\n        instance(x: 0, y: 1) replace_6e7b3f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9a7d2c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4a5f8a root.Std_k98ojb.Strings.Replace {}\n        input_1a3d9f -> replace_6e7b3f.input\n        \" \" -> replace_6e7b3f.search\n        \":\" -> replace_6e7b3f.replace\n        replace_6e7b3f.output -> replace_9a7d2c.input\n        \",\" -> replace_9a7d2c.search\n        \":\" -> replace_9a7d2c.replace\n        replace_9a7d2c.output -> replace_4a5f8a.input\n        \".\" -> replace_4a5f8a.search\n        \":\" -> replace_4a5f8a.replace\n        replace_4a5f8a.output -> output_5e4b8c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_3d1e6 root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"input\") property(String) input_2f3a8e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_7b9c6d\n\n        instance(x: 0, y: 1) replace_4b5c6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a8e2b root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9d7b1a root.Std_k98ojb.Strings.Replace {}\n        input_2f3a8e -> replace_4b5c6f.input\n        \" \" -> replace_4b5c6f.search\n        \":\" -> replace_4b5c6f.replace\n        replace_4b5c6f.output -> replace_3a8e2b.input\n        \",\" -> replace_3a8e2b.search\n        \":\" -> replace_3a8e2b.replace\n        replace_3a8e2b.output -> replace_9d7b1a.input\n        \".\" -> replace_9d7b1a.search\n        \":\" -> replace_9d7b1a.replace\n        replace_9d7b1a.output -> output_7b9c6d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -275, y: 1, name: \"input\") property(String) input_5f3e9d\n\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) characters_c7a8aa root.Std_k98ojb.Strings.Characters {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        characters_c7a8aa.characters -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_5f3e9d -> characters_c7a8aa.input\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_same_f6b3a8 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -288, y: 5, name: \"input\") property(String) input_1f3e8d\n\n        out(x: 1116, y: 11, name: \"output\") property(Bool) output_9a7c4b\n\n        instance(x: -122, y: 2) characters_0c5c1c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 375, y: 8) map_f6f3d2 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 680, y: 7) allroot_9e4a6a root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -22, y: 0, name: \"current\") property(String) current_5f8c1d\n\n                out(x: 406, y: 18, name: \"output\") property(Bool) output_9e3a7b\n\n                instance(x: 164, y: 15) equal_f4b0ef root.Std_k98ojb.Logic.Equal {}\n                input_1f3e8d -> equal_f4b0ef.left\n                current_5f8c1d -> equal_f4b0ef.right\n                equal_f4b0ef.result -> output_9e3a7b\n            }\n        }\n\n        characters_0c5c1c.characters -> map_f6f3d2.items\n        func() {\n            in(x: -24, y: 28, name: \"current\") property(String) current_4f8f5f\n\n            out(x: 404, y: 45, name: \"output\") property(Bool) output_7c9e3b\n\n            instance(x: 164, y: 42) equal_f4b0ef root.Std_k98ojb.Logic.Equal {}\n            input_1f3e8d -> equal_f4b0ef.left\n            current_4f8f5f -> equal_f4b0ef.right\n            equal_f4b0ef.result -> output_7c9e3b\n        } -> map_f6f3d2.handler\n        allroot_9e4a6a.output_list -> output_9a7c4b\n        map_f6f3d2.output_list -> allroot_9e4a6a.items\n    }\n\n    \n\n    instance(x: -65, y: 112) is_same_5f1b0f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -293, y: 12, name: \"input\") property(String) input_1f3e8d\n\n        out(x: 560, y: 13, name: \"output\") property(Bool) output_9b4a7c\n\n        instance(x: -83, y: 11) characters_6b0b5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 201, y: 12) intersection_c8e3f2 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 360, y: 13) length_7a9d4f root.Std_k98ojb.List.Length {}\n        instance(x: 482, y: 14) equal_f6c5ea root.Std_k98ojb.Logic.Equal {}\n        characters_6b0b5c.characters -> intersection_c8e3f2.left\n        characters_6b0b5c.characters -> intersection_c8e3f2.right\n        length_7a9d4f.length -> equal_f6c5ea.left\n        1 -> equal_f6c5ea.right\n        intersection_c8e3f2.intersection -> length_7a9d4f.list\n        equal_f6c5ea.result -> output_9b4a7c\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_a0c1c9 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -278, y: 13, name: \"input\") property(String) input_1f3a4d\n\n        out(x: 1016, y: 5, name: \"output\") property(Bool) output_9e7c2b\n\n        instance(x: -93, y: 14) characters_c8e0cd root.Std_k98ojb.Strings.Characters {}\n        instance(x: 224, y: 4) contains_1a3f6d root.Std_k98ojb.List.Contains {}\n        input_1f3a4d -> characters_c8e0cd.input\n        func() {\n            in(x: -26, y: 39, name: \"current\") property(String) current_7c2e5f\n\n            out(x: 586, y: 49, name: \"output\") property(Bool) output_9a3b1d\n\n            instance(x: 174, y: 46) replace_4a0f8f root.Std_k98ojb.Strings.Replace {}\n            current_7c2e5f -> replace_4a0f8f.input\n            input_1f3a4d -> replace_4a0f8f.search\n            \"\" -> replace_4a0f8f.replace\n            replace_4a0f8f.output -> output_9a3b1d\n        } -> contains_1a3f6d.handler\n        characters_c8e0cd.characters -> contains_1a3f6d.list\n        input_1f3a4d -> contains_1a3f6d.item\n        contains_1a3f6d.is_contained -> output_9e7c2b\n    }\n\n    \n\n    instance(x: -63, y: 110) is_same_8e5f0f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -305, y: 0, name: \"input\") property(String) input_1f9d4e\n\n        out(x: 1225, y: 10, name: \"output\") property(Bool) output_ea3c7b\n\n        instance(x: -92, y: 11) characters_8b2b6c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 12) length_9f5e1d root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 13) getat_7a4f0c root.Std_k98ojb.List.GetAt {}\n        instance(x: 571, y: -6) equal_3e2e8f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 786, y: 10) for_9d1f5c root.Std_k98ojb.Std.For {}\n        instance(x: 1047, y: 0) ifexpression_4a6b8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 334, y: 127, name: \"getter_9e1d2f\") getter_9e1d2f = previous\n        setter(x: 679, y: -313, name: \"setter_8c3a7b\") setter_8c3a7b = previous\n        ifexpression_4a6b8c.else -> for_9d1f5c.next\n        ifexpression_4a6b8c.value -> output_ea3c7b\n        ifexpression_4a6b8c.then -> setter_8c3a7b.execute\n        characters_8b2b6c.characters -> for_9d1f5c.items\n        for_9d1f5c.item -> ifexpression_4a6b8c.gen_2\n        for_9d1f5c.index -> ifexpression_4a6b8c.gen_0\n        getter_9e1d2f.value -> ifexpression_4a6b8c.gen_1\n        for_9d1f5c.onItem -> ifexpression_4a6b8c.execute\n        for_9d1f5c.done -> output_ea3c7b\n        length_9f5e1d.list -> getat_7a4f0c.list\n        0 -> getat_7a4f0c.index\n        getat_7a4f0c.itemAtIndex -> setter_8c3a7b.new_value\n        input_1f9d4e -> characters_8b2b6c.input\n        for_9d1f5c.item -> setter_8c3a7b.execute\n        length_9f5e1d.list -> length_9f5e1d.list\n        for_9d1f5c.item -> equal_3e2e8f.left\n        getter_9e1d2f.value -> equal_3e2e8f.right\n        equal_3e2e8f.result -> ifexpression_4a6b8c.predicate\n    }\n\n    \n\n    instance(x: 10, y: -177) check_same_f5c0c7 root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -297, y: 1, name: \"input\") property(String) input_5f8a0e\n\n        out(x: 1013, y: 20, name: \"output\") property(Bool) output_7b4c9d\n\n        instance(x: -140, y: 2, name: \"characters\") characters_1a6c5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 242, y: 22) contains_0e8b3c root.Std_k98ojb.List.Contains {}\n        instance(x: 554, y: 20) not_2d9f7f root.Std_k98ojb.Logic.Not {}\n        input_5f8a0e -> characters_1a6c5f.input\n        characters_1a6c5f.characters -> contains_0e8b3c.list\n        func() {\n            in(x: -24, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_0e8b3c.handler\n        characters_1a6c5f.characters[0] -> contains_0e8b3c.item\n        not_2d9f7f.result -> output_7b4c9d\n        contains_0e8b3c.is_contained -> not_2d9f7f.input\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -278, y: 0, name: \"input\") property(String) input_8e1f3d\n\n        out(x: 1146, y: 10, name: \"output\") property(Bool) output_7a2c4b\n\n        instance(x: -123, y: 5) characters_9f0b2f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 391, y: 11) map_8d1e6f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 721, y: -3) uniquelist_7c4a9f root.Std_k98ojb.List.Flatten {}\n        instance(x: 1022, y: 10) length_5a0c8d root.Std_k98ojb.List.Length {}\n        instance(x: 1241, y: 11) equal_f6e3ad root.Std_k98ojb.Logic.Equal {}\n        characters_9f0b2f.characters -> map_8d1e6f.items\n        func() {\n            in(x: -19, y: 29, name: \"current\") property(String) current_7c4a5e\n\n            out(x: 559, y: 39, name: \"output\") property(String) output_3b8d1e\n\n            instance(x: 226, y: 36) tolowercase_2f9c6f root.Std_k98ojb.Strings.ToLower {}\n            current_7c4a5e -> tolowercase_2f9c6f.input\n            tolowercase_2f9c6f.output -> output_3b8d1e\n        } -> map_8d1e6f.handler\n        map_8d1e6f.output_list -> uniquelist_7c4a9f.list\n        length_5a0c8d.length -> equal_f6e3ad.left\n        1 -> equal_f6e3ad.right\n        uniquelist_7c4a9f.flattenedList -> length_5a0c8d.list\n        input_8e1b3d -> characters_9f0b2f.input\n        equal_f6e3ad.result -> output_7a2c4b\n    }\n\n    \n\n    instance(x: -64, y: 110) is_same_3a5f4f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -333, y: 12, name: \"input\") property(String) input_9e8f5d\n\n        out(x: 1056, y: 13, name: \"output\") property(Bool) output_1b2c0a\n\n        instance(x: -192, y: 14, name: \"characters\") characters_7a4b3c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 226, y: 13) intersection_9f8d5e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 552, y: 12) length_2f1b6a root.Std_k98ojb.List.Length {}\n        instance(x: 770, y: 11) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        characters_7a4b3c.characters -> intersection_9f8d5e.left\n        input_9e8f5d -> intersection_9f8d5e.right\n        length_2f1b6a.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        intersection_9f8d5e.intersection -> length_2f1b6a.list\n        equal_f89569.result -> output_1b2c0a\n    }\n\n    \n\n    instance(x: -91, y: 122) is_same_7a4dfb root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -288, y: 30, name: \"input\") property(String) input_9e3a8f\n\n        out(x: 1224, y: 5, name: \"output\") property(Bool) output_6b2c1d\n        out(x: 1217, y: 147, name: \"continue\") trigger() continue_0a7b6f\n\n        instance(x: -85, y: 30) characters_3e5e8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 752, y: 93) ifexpression_9d1f2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_8c6a3e\") getter_8c6a3e = previous\n        setter(x: 679, y: -313, name: \"setter_e9f1d7\") setter_e9f1d7 = previous\n        instance(x: 321, y: -20) for_0b2c5d root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_e9f1d7\") setter_6e8a4d = previous\n        instance(x: -275, y: -35) getat_3b9b2c root.Std_k98ojb.List.GetAt {}\n        ifexpression_9d1f2f.else -> continue_0a7b6f\n        ifexpression_9d1f2f.value -> output_6b2c1d\n        ifexpression_9d1f2f.then -> setter_e9f1d7.execute\n        characters_3e5e8c.characters -> for_0b2c5d.items\n        for_0b2c5d.item -> ifexpression_9d1f2f.gen_2\n        for_0b2c5d.index -> ifexpression_9d1f2f.gen_0\n        getter_8c6a3e.value -> ifexpression_9d1f2f.gen_1\n        for_0b2c5d.onItem -> ifexpression_9d1f2f.execute\n        for_0b2c5d.done -> continue_0a7b6f\n        for_0b2c5d.item -> setter_e9f1d7.new_value\n        characters_3e5e8c.characters -> getat_3b9b2c.list\n        0 -> getat_3b9b2c.index\n        getat_3b9b2c.itemAtIndex -> setter_6e8a4d.new_value\n        input_9e3a8f -> characters_3e5e8c.input\n        setter_6e8a4d.continue -> for_0b2c5d.reset\n        setter_e9f1d7.continue -> for_0b2c5d.next\n    }\n\n    \n\n    instance(x: 10, y: -177) check_same_c3f9b9 root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -285, y: -86, name: \"string\") property(String) string_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        string_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        string_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -40, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n    instance(x: -40, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n        where: \"Std.Str.IsNumeric(it)\"\n    }\n    \n\n    instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -40, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n    instance(x: -40, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n        where: \"Std.Str.IsNumeric(it)\"\n    }\n    \n\n    instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -50, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -50, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -50, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n    instance(x: -50, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n        where: \"Std.Str.IsNumeric(it)\"\n    }\n    \n\n    instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -50, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -50, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -50, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n    instance(x: -50, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n        where: \"Std.Str.IsNumeric(it)\"\n    }\n    \n\n    instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -45, y: 15) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        instance(x: 0, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_1.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_1.result -> list_length_node.list\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -45, y: 15) characters_node root.main.count_digits {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -15, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"list\") property(List) list_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -15, y: 0) filter_2 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node_1 root.Std_k98ojb.List.Length {}\n        list_ai -> filter_2.list\n        filter_2.result -> list_length_node_1.items\n        list_length_node_1.length -> result_ai\n    }\n\n    \n    instance(x: -15, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -15, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"list\") property(List) list_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -15, y: 0) filter_2 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node_1 root.Std_k98ojb.List.Length {}\n        list_ai -> filter_2.list\n        filter_2.result -> list_length_node_1.items\n        list_length_node_1.length -> result_ai\n    }\n\n    \n    instance(x: -15, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -20, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -20, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -20, y: 0) characters_node root.main.count_digits {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -12, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -12, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -12, y: 0) characters_node root.main.count_digits {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -40, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_7b3b7b.list\n        filter_7b3b7b.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_1 root.main.count_digits {}\n\n    \n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -344, y: 0, name: \"n\") property(Number) n_1a8f3e\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_2b4c6d\n\n        instance(x: 12, y: 136) expression_5f9a0c root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 303, y: 2) div_4d3e7f root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_9a8c0c  = 1\n        instance(x: 23, y: -1) mul_5e6f1f root.Std_k98ojb.Math.Mul {}\n        expression_5f9a0c.result -> mul_5e6f1f.second\n        n_1a8f3e -> mul_5e6f1f.first\n        data_9a8c0c -> div_4d3e7f.second\n        mul_5e6f1f.result -> div_4d3e7f.first\n        expression_5f9a0c.gen_0 -> n_1a8f3e\n        div_4d3e7f.result -> sum_2b4c6d\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_1a1f92 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_1f0b5e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_9a3d8c\n\n        instance(x: 532, y: 147) sum_4f7b6f root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_ae2a0d\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> sum_4f7b6f.predicate\n        instance(x: -39, y: 26) generate_range_8a5c3d root.Std_k98ojb.List.GenerateRange {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_ae2a0d\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> generate_range_8a5c3d.predicate\n        instance(x: -39, y: 257) pow_7f4c2c root.Std_k98ojb.Math.Pow {}\n        instance(x: 532, y: 147) add_88bb8a root.Std_k98ojb.Math.Add {}\n        generate_range_8a5c3d.list -> sum_4f7b6f.items\n        n_1f0b5e -> generate_range_8a5c3d.to\n        1 -> generate_range_8a5c3d.from\n        pow_7f4c2c.result -> add_88bb8a.second\n        sum_4f7b6f.accumulated -> add_88bb8a.first\n        n_1f0b5e -> pow_7f4c2c.y\n        3 -> pow_7f4c2c.x\n        generate_range_8a5c3d.item -> pow_7f4c2c.gen_0\n        add_88bb8a.result -> sum_4f7b6f.reduced\n        0 -> sum_4f7b6f.initial_value\n        sum_4f7b6f.output -> output_9a3d8c\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 0, name: \"n\") property(Number) n_1f3b5a\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_2e9c4d\n\n        instance(x: 23, y: -1) pow_6c8f0c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_5a3c7c  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_9a8f7c root.Std_k98ojb.Math.Add {}\n        data_5a3c7c -> pow_6c8f0c.second\n        n_1f3b5a -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_6c8f0c.first\n        pow_6c8f0c.result -> add_9a8f7c.first\n        add_9a8f7c.result -> sum_2e9c4d\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_1b3f5f root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -278, y: 0, name: \"n\") property(Number) n_1b9f2e\n\n        out(x: 755, y: -1, name: \"sum\") property(Number) sum_ea4c8d\n\n        instance(x: 12, y: 136) expression_6f7a3c root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 303, y: 2) div_5d0e8f root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_9a4c6c  = 1\n        instance(x: 23, y: -1) mul_3e7f1f root.Std_k98ojb.Math.Mul {}\n        expression_6f7a3c.result -> mul_3e7f1f.second\n        n_1b9f2e -> mul_3e7f1f.first\n        data_9a4c6c -> div_5d0e8f.second\n        mul_3e7f1f.result -> div_5d0e8f.first\n        div_5d0e8f.result -> sum_ea4c8d\n        n_1b9f2e -> expression_6f7a3c.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9a9f2f root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -341, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"(4*n*n-1)*(4*n*n-1)\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        div_64046c.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = sum\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 62, y: -226) setter_2d44da root.Std_k98ojb.Variable.Setter {}\n        data_3c713b -> setter_2d44da.variable_name\n        expression_634b7e.result -> setter_2d44da.new_value\n        n_c88d35 -> expression_634b7e.gen_0\n        setter_2d44da.continue -> output_ebef81\n        0 -> setter_2d44da.new_value\n        n_c88d35 -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = sum\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 62, y: -226) setter_2d44da root.Std_k98ojb.Variable.Setter {}\n        data_3c713b -> setter_2d44da.variable_name\n        expression_634b7e.result -> setter_2d44da.new_value\n        n_c88d35 -> expression_634b7e.gen_0\n        setter_2d44da.continue -> output_ebef81\n        0 -> setter_2d44da.new_value\n        n_c88d35 -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = sum\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 62, y: -226) setter_2d44da root.Std_k98ojb.Setting.Setter {}\n        data_3c713b -> setter_2d44da.value\n        expression_634b7e.result -> setter_2d44da.new_value\n        n_c88d35 -> expression_634b7e.gen_0\n        setter_2d44da.continue -> output_ebef81\n        0 -> setter_2d44da.new_value\n        n_c88d35 -> setter_2d44da.execute\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -282, y: 0, name: \"n\") property(Number) n_1f8a5e\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"(4*n*n-1)*(4*n*n-1)\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 303, y: 2) div_9f6e5c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        expression_2d6da6.result -> mul_f892a4.first\n        n_1f8a5e -> mul_f892a4.second\n        mul_f892a4.result -> div_9f6e5c.first\n        4 -> div_9f6e5c.second\n        div_9f6e5c.result -> sum_365f7b\n        n_1f8a5e -> expression_2d6da6.gen_0\n        mul_f892a4.result -> div_64046c.first\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 12, y: -1) pow_9f5c7e root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_9f5c7e.x\n        4 -> pow_9f5c7e.y\n        instance(x: 303, y: 2) add_1a3d6f root.Std_k98ojb.Math.Add {}\n        pow_9f5c7e.result -> add_1a3d6f.second\n        sum_365f7b -> add_1a3d6f.first\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -104, y: 24, name: \"size\") property(Number) size_8f1e3d\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_9a2c5b\n\n        instance(x: 0, y: -26) mul_6e4b7c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_8f1e3d -> mul_6e4b7c.first\n        data_cde0dc -> mul_6e4b7c.second\n        mul_6e4b7c.result -> surface_area_9a2c5b\n    }\n\n    \n\n    instance(x: 322, y: 568) cube_surface_area_e3f8d1 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -105, y: 43, name: \"size\") property(Number) size_1a9f3e\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_8c7b5d\n\n        instance(x: 116, y: -268) mul_6b0f4c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -144, y: 112) data_9a9c70  = [size]\n        instance(x: 118, y: -56) mul_3e7d8f root.Std_k98ojb.Math.Mul {}\n        size_1a9f3e -> mul_6b0f4c.first\n        data_9a9c70.size -> mul_6b0f4c.second\n        6 -> mul_3e7d8f.first\n        mul_6b0b5c.result -> mul_3e7d8f.second\n        mul_3e7d8f.result -> surface_area_8c7b5d\n    }\n\n    \n\n    instance(x: -174, y: -63) cube_surface_area_e9a2b1 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -107, y: 22, name: \"size\") property(Number) size_8e9f1d\n\n        out(x: 1024, y: 7, name: \"surface area\") property(Number) surface_area_5c6a3b\n\n        instance(x: 24, y: -2) mul_0c7c3f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_8e9f1d -> mul_0c7c3f.first\n        data_cde0dc -> mul_0c7c3f.second\n        mul_0c7c3f.result -> surface_area_5c6a3b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -108, y: 21, name: \"size\") property(Number) size_8f3e5d\n\n        out(x: 112, y: -18, name: \"surface area\") property(Number) surface_area_7a9c6b\n\n        instance(x: 1, y: -31) mul_4a0b2f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 8, y: 38) data_5e3d3c  = 6\n        size_8f3e5d -> mul_4a0b2f.first\n        data_5e3d3c -> mul_4a0b2f.second\n        mul_4a0b2f.result -> surface_area_7a9c6b\n    }\n\n    \n\n    instance(x: 111, y: -57) cube_surface_area_8e1f1f root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -219, y: 55, name: \"size\") property(Number) size_3a3116\n\n        out(x: 571, y: 7, name: \"surface area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        data_cde0dc -> mul_f892a4.first\n        expression_2d6da6.result -> mul_f892a4.second\n        size_3a3116 -> expression_2d6da6.gen_0\n        mul_f892a4.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -100, y: 15, name: \"size\") property(Number) size_9f6e1d\n\n        out(x: 101, y: 14, name: \"surface area\") property(Number) surface_area_f3a7b4\n\n        instance(x: 0, y: -2) mul_e5c8ef root.Std_k98ojb.Math.Mul {}\n        size_9f6e1d -> mul_e5c8ef.first\n        6 -> mul_e5c8ef.second\n        instance(x: 50, y: -3) mul_4a0b2c root.Std_k98ojb.Math.Mul {}\n        mul_e5c8ef.result -> mul_4a0b2c.first\n        size_9f6e1d -> mul_4a0b2c.second\n        mul_4a0b2c.result -> surface_area_f3a7b4\n    }\n\n    \n\n    instance(x: 101, y: -10) cube_surface_area_5e8c1f root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -102, y: 43, name: \"size\") property(Number) size_1a9e8f\n\n        out(x: 1006, y: 7, name: \"surface area\") property(Number) surface_area_3c2b5d\n\n        instance(x: 20, y: -4) mul_0a8b7c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a9e8f -> mul_0a8b7c.first\n        data_cde0dc -> mul_0a8b7c.second\n        mul_0a8b7c.result -> surface_area_3c2b5d\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -100, y: 55, name: \"size\") property(Number) size_3e9f1d\n\n        out(x: 57, y: 7, name: \"surface area\") property(Number) surface_area_6a4b2c\n\n        instance(x: 12, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_3e9f1d -> mul_f892a4.first\n        data_cde0dc -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_6a4b2c\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -109, y: 24, name: \"size\") property(Number) size_8e3f6d\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_9c4a2b\n\n        instance(x: 92, y: -22) mul_7a1f5c root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -94) mul_3e0d8c root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -166) mul_f6e4ea root.Std_k98ojb.Math.Mul {}\n        size_8e3f6d -> mul_7a1f5c.first\n        size_8e3f6d -> mul_7a1f5c.second\n        6 -> mul_3e1f8c.first\n        mul_7a1f5c.result -> mul_3e1f8c.second\n        mul_3e0d8c.result -> mul_f6e4ea.first\n        size_8e3f6d -> mul_f6e4ea.second\n        mul_f6e4ea.result -> surface_area_9c4a2b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_1e5e0c root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -105, y: 45, name: \"size\") property(Number) size_1f9e6d\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_8b7c3a\n\n        instance(x: 116, y: -268) mul_f5f2ef root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -144, y: 112) data_9e4d6c  = 6\n        size_1f9e6d -> mul_f5f2ef.first\n        data_9e4d6c -> mul_f5f2ef.second\n        instance(x: 118, y: -56) mul_3a0b7f root.Std_k98ojb.Math.Mul {}\n        size_1f9e6d -> mul_3a0b7f.first\n        mul_3a0b7f.first -> mul_3a0b7f.second\n        mul_f5f2ef.result -> surface_area_8b7c3a\n        mul_3a0b7f.result -> mul_f5f2ef.second\n    }\n\n    \n\n    instance(x: -174, y: -63) cube_surface_area_1e9d4f root.main.cube_surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 10, name: \"list\") property(List) list_6a9f1e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5b3c4d\n\n        instance(x: 201, y: 62) sub_7c8a2f root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1e0f6c root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_3d9f5a root.Std_k98ojb.List.Min {}\n        list_6a9f1e -> max_1e0f6c.items\n        list_6a9f1e -> min_3d9f5a.items\n        max_1e0f6c.max -> sub_7c8a2f.first\n        min_3d9f5a.min -> sub_7c8a2f.second\n        sub_7c8a2f.result -> output_5b3c4d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_1e0f6c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 17, name: \"list\") property(List) list_0f9b5e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_870503 root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_0f9b5e -> max_f3b46d.items\n        list_0f9b5e -> min_870503.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_870503.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -32, y: 0, name: \"list\") property(List) list_6e9f8a\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) max_5c4b0f root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -375) min_9a2e6c root.Std_k98ojb.List.Min {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_6e9f8a -> max_5c4b0f.items\n        list_6e9f8a -> min_9a2e6c.items\n        max_5c4b0f.max -> sub_852f2e.first\n        min_9a2e6c.min -> sub_852f2e.second\n        sub_852f2e.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -32, y: 20, name: \"list\") property(List) list_6a1f0e\n\n        out(x: 454, y: 63, name: \"difference\") property(Number) difference_4c9b7d\n\n        instance(x: 201, y: 62) sub_5b2c3e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1f0a8f root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -375) min_7d4f9f root.Std_k98ojb.List.Min {}\n        list_6a1f0e -> max_1f0a8f.items\n        list_6a1f0e -> min_7d4f9f.items\n        max_1f0a8f.max -> sub_5b2c3e.first\n        min_7d4f9f.min -> sub_5b2c3e.second\n        sub_5b2c3e.result -> difference_4c9b7d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_6a1f0e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -27, y: 15, name: \"list\") property(List) list_1e3b5f\n\n        out(x: 488, y: 11, name: \"difference\") property(Number) difference_7a2d9c\n\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358) list_min_node root.Std_k98ojb.List.Min {}\n        list_1e3b5f -> list_max_node.items\n        list_1e3b5f -> list_min_node.items\n        list_max_node.max -> sub_852f2e.first\n        list_min_node.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_7a2d9c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_0a1f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_870503 root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_0a1f8e -> max_f3b46d.items\n        list_0a1f8e -> min_870503.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_870503.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 13, name: \"list\") property(List) list_1a9b8f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_5e3d6f root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_4a8d7f root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_1a9b8f -> max_5e3d6f.items\n        list_1a9b8f -> min_4a8d7f.items\n        max_5e3d6f.max -> sub_852f2e.first\n        min_4a8d7f.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_6a1f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_f3b46d.items -> list_6a1f8e\n        max_f3b46d.max -> firstitem_870503.list\n        min_4d4556.items -> list_6a1f8e\n        min_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -35, y: 16, name: \"list\") property(List) list_6e8a2f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.min -> sub_852f2e.second\n        list_6e8a2f -> max_f3b46d.items\n        max_f3b46d.max -> firstitem_870503.list\n        list_6e8a2f -> min_4d4556.items\n        min_4d4556.min -> firstitem_3078c6.list\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1a0b8f\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5c7e3d\n\n        instance(x: 201, y: 62) sub_6c2c9c root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1a0f4f root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_5e3d7c root.Std_k98ojb.List.Min {}\n        list_1a0b8f -> max_1a0f4f.items\n        list_1a0b8f -> min_5e3d7c.items\n        max_1a0f4f.max -> sub_6c2c9c.first\n        min_5e3d7c.min -> sub_6c2c9c.second\n        sub_6c2c9c.result -> output_5c7e3d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_1f0b8a root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: 0, name: \"input\") property(Number) input_5f9a3e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 438, y: 57) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n        input_5f9a3e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> equal_7836b4.left\n        0 -> equal_7836b4.right\n        equal_7836b4.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_f15e9e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: 1, name: \"input\") property(Number) input_9a3f5e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 439, y: 57) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n        input_9a3f5e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> equal_7836b4.left\n        0 -> equal_7836b4.right\n        equal_7836b4.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_f15e9e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -34, y: 127, name: \"input\") property(Number) input_f5c03d\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -34, y: 127, name: \"input\") property(Number) input_f5c03d\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -27, y: 3, name: \"input\") property(Number) input_1e6a5f\n        out(x: 1044, y: 2, name: \"output\") property(Bool) output_9c8b7d\n\n        instance(x: 0, y: -11, name: \"modulo\") modulo_3f1f93 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 312, y: 6) equal_4a5e2f root.Std_k98ojb.Logic.Equal {}\n        input_1e6a5f -> modulo_3f1f93.value\n        2 -> modulo_3f1f93.divisor\n        modulo_3f1f93.result -> equal_4a5e2f.left\n        0 -> equal_4a5e2f.right\n        equal_4a5e2f.result -> output_9c8b7d\n    }\n\n    \n\n    instance(x: -11, y: -19) is_even_f1c6b3 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_0a9f1e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_0a9f1e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_0a9f1e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_0a9f1e -> expression_9fba8c.gen_0\n        input_0a9f1e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_4d1e5c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: 0, name: \"input\") property(Number) input_1a9d8e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_7c3b2f\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 442, y: 57) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n        input_1a9d8e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> equal_7836b4.left\n        0 -> equal_7836b4.right\n        equal_7836b4.result -> output_7c3b2f\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_15f9e9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_9a3f1e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_9a3f1e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_9a3f1e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_9a3f1e -> expression_9fba8c.gen_0\n        input_9a3f1e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e0d2c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -35, y: 3, name: \"input\") property(Number) input_9e6f5d\n\n        out(x: 1268, y: 2, name: \"output\") property(Bool) output_7c4a0b\n\n        instance(x: 1051, y: -10, name: \"modulo\") modulo_3a2f5c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1268, y: 53, name: \"equal to zero\") equal_9d4e7c root.Std_k98ojb.Logic.Equal {}\n        input_9e6f5d -> modulo_3a2f5c.value\n        2 -> modulo_3a2f5c.divisor\n        modulo_3a2f5c.result -> equal_9d4e7c.left\n        0 -> equal_9d4e7c.right\n        equal_9d4e7c.result -> output_7c4a0b\n    }\n\n    \n\n    instance(x: -13, y: -6) is_even_5f3d8f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_1a0e8f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_9b7c5d\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 434, y: 57) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n        input_1a0e8f -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> equal_7836b4.left\n        0 -> equal_7836b4.right\n        equal_7836b4.result -> output_9b7c5d\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_15f9e9 root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"characters\") characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"first repeated character\") find_2d44da root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 1) tolower_634b7e root.Std_k98ojb.Strings.ToLower {}\n        characters_3c713b.characters -> find_2d44da.items\n        input_0 -> characters_3c713b.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            tolower_634b7e.output -> contains_45e806.input\n            current_afd5b1 -> contains_45e806.contains\n            input_0 -> tolower_634b7e.input\n            contains_45e806.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_2d44da.predicate\n        find_2d44da.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3e9b7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5f8d6a root.Std_k98ojb.Iteration.Find {}\n        instance(x: -2, y: 120) ``characters_3e9b7c`` root.Std_k98ojb.List.Slice {}\n        characters_3e9b7c.characters -> ``characters_3e9b7c``.list\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Any) current_a1a5f0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3b2c4d root.Std_k98ojb.List.Contains {}\n            ``characters_3e9b7c``.list -> contains_3b2c4d.list\n            current_a1a5f0 -> contains_3b2c4d.item\n        } -> find_5f8d6a.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Any) current_a1a5f0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3b2c4d root.Std_k98ojb.List.Contains {}\n            ``characters_3e9b7c``.list -> contains_3b2c4d.list\n            current_a1a5f0 -> contains_3b2c4d.item\n        } -> find_5f8d6a.predicate\n        input_0 -> characters_3e9b7c.input\n        1 -> ``characters_3e9b7c``.start\n        -1 -> ``characters_3e9b7c``.end\n        find_5f8d6a.item -> result_0\n        characters_3e9b7c.characters -> find_5f8d6a.items\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -2, name: \"output\") property(Any) output_3\n\n        instance(x: 0, y: 0) characters_5a9d8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 1) find_7c4e6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"First repeated character\") ``First repeated character_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        characters_5a9d8f.input -> find_7c4e6f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3f0c7a root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_3f0c7a.input\n            find_7c4e6f.item -> contains_3f0c7a.contains\n            contains_3f0c7a.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_7c4e6f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3f0c7a root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_3f0c7a.input\n            ``First repeated character_0b1361``.item -> contains_3f0c7a.contains\n            contains_3f0c7a.result -> bool_1eb6e9\n        } -> ``First repeated character_0b1361``.predicate\n        characters_5a9d8f.characters -> ``First repeated character_0b1361``.items\n        find_7c4e6f.item -> output_3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: -39, y: 26, name: \"characters\") characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        input_0 -> characters_3c713b.input\n        characters_3c713b.characters -> find_6d05b0.items\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -288, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5a7b4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3e6d9f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257) filter_2f1f8c root.Std_k98ojb.Iteration.Filter {}\n        characters_5a7b4c.characters -> find_3e6d9f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0a2ba\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_5f7c8d root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_a0a2ba -> contains_5f7c8d.input\n            characters_5a7b4c.characters -> contains_5f7c8d.contains\n            contains_5f7c8d.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_3e6d9f.predicate\n        instance(x: -39, y: 26, name: \"First even number\") ``First repeated character_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0a2ba\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_5f7c8d root.Std_k98ojb.Strings.Contains {}\n            current_a0a2ba -> contains_5f7c8d.input\n            characters_5a7b4c.characters -> contains_5f7c8d.contains\n            contains_5f7c8d.result -> bool_1eb6e9\n        } -> ``First repeated character_0b1361``.predicate\n        find_3e6d9f.item -> filter_2f1f8c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0a2ba\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_5f7c8d root.Std_k98ojb.Strings.Contains {}\n            current_a0a2ba -> contains_5f7c8d.input\n            ``First repeated character_0b1361``.item -> contains_5f7c8d.contains\n            contains_5f7c8d.result -> bool_1eb6e9\n        } -> filter_2f1f8c.handler\n        filter_2f1f8c.output_list -> ``First repeated character_0b1361``.items\n        ``First repeated character_0b1361``.item -> result_0\n        input_0 -> characters_5a7b4c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"characters\") characters_1a2b3c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"first repeated character\") find_4d5e6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_g7h8i9 root.Std_k98ojb.Strings.Contains {}\n        characters_1a2b3c.characters -> find_4d5e6f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_jk0l1m\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_nopqrs\n\n            instance(x: 112, y: 80) slice_tuvwx root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) contains_yz123 root.Std_k98ojb.Strings.Contains {}\n            current_jk0l1m -> contains_yz123.contains\n            slice_tuvwx.listWithoutItem -> contains_yz123.input\n            characters_1a2b3c.characters -> slice_tuvwx.list\n            current_jk0l1m -> slice_tuvwx.start\n            -1 -> slice_tuvwx.end\n            contains_yz123.result -> bool_nopqrs\n        } -> find_4d5e6f.predicate\n        input_0 -> characters_1a2b3c.input\n        find_4d5e6f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"characters\") characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"first repeated character\") find_2d44da root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 1) tolower_634b7e root.Std_k98ojb.Strings.ToLower {}\n        characters_3c713b.characters -> find_2d44da.items\n        input_0 -> characters_3c713b.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            tolower_634b7e.output -> contains_45e806.input\n            current_afd5b1 -> contains_45e806.contains\n            input_0 -> tolower_634b7e.input\n            contains_45e806.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_2d44da.predicate\n        find_2d44da.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_3c713b.characters -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) substring_45e806 root.Std_k98ojb.Strings.Substring {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> substring_45e806.input\n            substring_45e806.start -> substring_45e806.end\n            find_de624f.index -> substring_45e806.start\n            substring_45e806.substring -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -276, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0, name: \"characters\") characters_5e7c8a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 1, name: \"first repeated character\") find_3d4f6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26) ``first repeated character_0`` root.Std_k98ojb.Iteration.Filter {}\n        characters_5e7c8a.characters -> find_3d4f6f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 112, y: 80) ``first repeated character_1`` root.Std_k98ojb.Iteration.Find {}\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_2\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_3\n\n                instance(x: 112, y: 80) contains_7e1c9a root.Std_k98ojb.Strings.Contains {}\n                ``first repeated character_0``.output_list -> contains_7e1c9a.list\n                current_2 -> contains_7e1c9a.input\n                current_1 -> contains_7e1c9a.contains\n                contains_7e1c9a.result -> bool_3\n            } -> ``first repeated character_1``.predicate\n            characters_5e7c8a.characters -> ``first repeated character_1``.items\n            ``first repeated character_1``.item -> bool_0\n        } -> find_3d4f6f.predicate\n        input_1 -> characters_5e7c8a.input\n        find_3d4f6f.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) ``First repeated character_0b1361`` root.Std_k98ojb.Iteration.Filter {}\n        characters_2e1444.characters -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``First repeated character_0b1361`` root.Std_k98ojb.List.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> ``First repeated character_0b1361``.item\n            find_de624f.item -> ``First repeated character_0b1361``.list\n            ``First repeated character_0b1361``.result -> notequal_148aeb.left\n            false -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        characters_2e1444.characters -> ``First repeated character_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``First repeated character_0b1361`` root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> ``First repeated character_0b1361``.item\n            find_de624f.item -> ``First repeated character_0b1361``.list\n            ``First repeated character_0b1361``.result -> bool_1eb6e9\n        } -> ``First repeated character_0b1361``.handler\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3b2d8c root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -1) list_remove_7e6f9a root.Std_k98ojb.List.Remove {}\n            min_3b2d8c.items -> list_remove_7e6f9a.list\n            min_3b2d8c.min -> list_remove_7e6f9a.index\n            list_remove_7e6f9a.resultWithoutItem -> find_6d05b0.items\n            elem_9f6850 -> notequal_807ffd.right\n            list_remove_7e6f9a.resultWithoutItem -> min_3b2d8c.items\n            0 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3e8c1d root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -114) list_remove_7f2a5f root.Std_k98ojb.List.Remove {}\n            min_3e8c1d.items -> list_remove_7f2a5f.list\n            elem_9f6850 -> list_remove_7f2a5f.index\n            list_remove_7f2a5f.listWithoutItem -> min_3e8c1d.items\n            min_3e8c1d.min -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: -193, name: \"items\") property(List) items_ai\n        out(x: 46, y: 158, name: \"second_min\") property(Number) second_min_9f7759\n\n        instance(x: -105, y: -110) min1_e38995 root.Std_k98ojb.List.Min {}\n        instance(x: -105, y: 112) min2_e38995 root.Std_k98ojb.List.Min {}\n        items_ai -> min1_e38995.items\n        min1_e38995.min -> min2_e38995.items\n        instance(x: -144, y: -110) ifexpression_9cceb3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"min1 == min2\"\n        }\n        getter(x: -183, y: 112, name: \"getter_37db7f\") getter_37db7f = second_min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_min\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_37db7f.value -> second_min_9f7759\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        min1_e38995.min -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        min2_e38995.min -> setter_37db7f.new_value\n        min1_e38995.min -> ifexpression_9cceb3.gen_0\n        min2_e38995.min -> ifexpression_9cceb3.gen_1\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) second_smallest_d6e930 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: -193, name: \"items\") property(List) items_ai\n        out(x: 46, y: 158, name: \"second_min\") property(Number) second_min_1f8c9a\n\n        instance(x: -105, y: -110) find_smallest_ae5b6d root.main.smallest {}\n        instance(x: -105, y: -110) filter_b3e7c4 root.Std_k98ojb.Query.Filter {\n            where: \"it > smallest\"\n        }\n        instance(x: 426, y: -303) min_2f0a1c root.Std_k98ojb.List.Min {}\n        items_ai -> find_smallest_ae5b6d.items\n        find_smallest_ae5b6d.min -> filter_b3e7c4.where.gen_0\n        items_ai -> filter_b3e7c4.list\n        filter_b3e7c4.result -> min_2f0a1c.items\n        min_2f0a1c.min -> second_min_1f8c9a\n\n        \n    }\n    \n\n    \n    instance(x: 322, y: 568) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 46, y: 158, name: \"second smallest\") property(Number) min_f9110a\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"len(list) < 2\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> min_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n\n        instance(x: -105, y: 0) min_node root.Std_k98ojb.List.Min {}\n        list_9f7759 -> min_node.items\n        min_node.min -> smallest_a89f71\n\n        instance(x: -105, y: 100) filter_node root.Std_k98ojb.Query.Filter {\n            where: \"it != smallest\"\n        }\n        list_9f7759 -> filter_node.list\n        smallest_a89f71 -> filter_node.where.gen_0\n        filter_node.result -> filtered_list_f9110a\n\n        instance(x: -105, y: 200) min_filtered root.Std_k98ojb.List.Min {}\n        filtered_list_f9110a -> min_filtered.items\n        min_filtered.min -> min_f9110a\n    }\n\n    \n\n    instance(x: -174, y: -63) second_smallest_d6e930 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_2c8d4e root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -60) list_remove_1a3f7c root.Std_k98ojb.List.Remove {}\n            min_2c8d4e.items -> list_remove_1a3f7c.list\n            elem_9f6850 -> list_remove_1a3f7c.index\n            list_remove_1a3f7c.listWithoutItem -> min_2c8d4e.items\n            min_2c8d4e.min -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3e6c5d root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -113) list_remove_9f8a7f root.Std_k98ojb.List.Remove {}\n            min_3e6c5d.items -> list_remove_9f8a7f.list\n            elem_9f6850 -> list_remove_9f8a6f.index\n            list_remove_9f8a7f.listWithoutItem -> min_3e6c5d.items\n            min_3e6c5d.min -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1e8c5b root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -46) list_remove_7f3d2a root.Std_k98ojb.List.Remove {}\n            min_1e8c5b.items -> list_remove_7f3d2a.list\n            0 -> list_remove_7f3d2a.index\n            list_remove_7f3d2a.listWithoutItem -> find_6d05b0.items\n            elem_9f6850 -> notequal_807ffd.right\n            min_1e8c5b.min -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: -194, name: \"items\") property(List) items_8f1a3e\n\n        out(x: 46, y: 158, name: \"second_min\") property(Number) second_min_9c5d6b\n\n        instance(x: -105, y: -110) find_smallest_2d7c0e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_2b1d5c root.Std_k98ojb.List.Min {}\n            items_8f1a3e -> min_2b1d5c.items\n            min_2b1d5c.min -> elem_9f6850\n\n            instance(x: 310, y: 35) greaterthan_6f7d4c root.Std_k98ojb.Math.GreaterThan {}\n            elem_9f6850 -> greaterthan_6f7d4c.left\n            min_2b1d5c.min -> greaterthan_6f7d4c.right\n\n            greaterthan_6f7d4c.result -> bool_af09a7\n        } -> find_smallest_2d7c0e.predicate\n        items_8f1a3e -> find_smallest_2d7c0e.items\n        instance(x: -105, y: 109) filter_5b6f9c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            find_smallest_2d7c0e.item -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n\n            notequal_807ffd.result -> bool_af09a7\n        } -> filter_5b6f9c.handler\n        items_8f1a3e -> filter_5b6f9c.items\n        instance(x: -105, y: -110) find_smallest_2d7c0e_2 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_2b1d5c_2 root.Std_k98ojb.List.Min {}\n            filter_5b6f9c.output_list -> min_2b1d5c_2.items\n            min_2b1d5c_2.min -> elem_9f6850\n\n            instance(x: 310, y: 35) greaterthan_6f7d4c_2 root.Std_k98ojb.Math.GreaterThan {}\n            elem_9f6850 -> greaterthan_6f7d4c_2.left\n            min_2b1d5c.min -> greaterthan_6f7d4c_2.right\n\n            greaterthan_6f7d4c_2.result -> bool_af09a7\n        } -> find_smallest_2d7c0e_2.predicate\n        filter_5b6f9c.output_list -> find_smallest_2d7c0e_2.items\n        find_smallest_2d7c0e_2.item -> second_min_9c5d6b\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_3a8f1e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1c3d5e root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -113) list_remove_2f8a9f root.Std_k98ojb.List.Remove {}\n            min_1c3d5e.items -> list_remove_2f8a9f.list\n            find_6d05b0.index -> list_remove_2f8a9f.index\n            list_remove_2f8a9f.resultWithoutItem -> min_1c3d5e.items\n            elem_9f6850 -> notequal_807ffd.right\n            min_1c3d5e.min -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}"
            ]
        }
    }
]