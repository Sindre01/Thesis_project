[
    {
        "experiment_name": "regular_RAG_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15910,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -475, y: -206, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_6b3d5c\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_4d1a8f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_4d1a8f\n        ifexpression_875761.value -> output_4d1a8f\n        list1_8a2f9e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_6b3d5c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        list1_8a2f9e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_6b3d5c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_7f9b6d root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -435, y: -214, name: \"list1\") property(List) list_0f8b5e\n        in(x: -433, y: 29, name: \"list2\") property(List) list_7a3c4d\n\n        out(x: 1229, y: 12, name: \"output\") property(Bool) output_e1a6ed\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_e1a6ed\n        ifexpression_875761.value -> output_e1a6ed\n        list_0f8b5e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list_7a3c4d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        for_d26972.done -> output_e1a6ed\n        for_d26972.item -> setter_9d4f1c.new_value\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> for_d26972.next\n        setter_38e107.continue -> for_d26972.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_3b7a5f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -425, y: -214, name: \"list1\") property(List) list1_3a0b8f\n        in(x: -435, y: 31, name: \"list2\") property(List) list2_9e7d4c\n\n        out(x: 1265, y: 16, name: \"output\") property(Bool) output_6e1f3a\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list1_3a0b8f -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        list2_9e7d4c -> contains_32727d.item\n        contains_32727d.is_contained -> output_6e1f3a\n    }\n\n    \n\n    instance(x: -293, y: -5) common_element_7a4dad root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -467, y: -214, name: \"list1\") property(List) list1_9e6f8d\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_7a5b4c\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_3e1e9f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_3e1e9f\n        ifexpression_875761.value -> output_3e1e9f\n        list1_9e6f8d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_7a5b4c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        for_d26972.item -> setter_9d4f1c.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_7b5f8d root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -475, y: -214, name: \"list1\") property(List) list1_0e9f8d\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_5b3a7c\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_4b6c1e\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_4b6c1e\n        ifexpression_875761.value -> output_4b6c1e\n        list1_0e9f8d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_5b3a7c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        list1_0e9f8d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_5b3a7c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_d26972.done -> output_4b6c1e\n        for_d26972.item -> setter_9d4f1c.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_c8a5b2 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -333, y: -186, name: \"list1\") property(List) list1_4a3b6f\n        in(x: -341, y: 20, name: \"list2\") property(List) list2_7c0e8d\n\n        out(x: 1129, y: 13, name: \"output\") property(Bool) output_5c1b4a\n\n        instance(x: 728, y: -11) ifexpression_6f3b2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous != null\"\n        }\n        getter(x: 310, y: 136, name: \"getter_9a1d4e\") getter_9a1d4e = previous\n        setter(x: 655, y: -355, name: \"setter_8c3f7b\") setter_8c3f7b = previous\n        instance(x: 322, y: -70) for_5e0f6f root.Std_k98ojb.Std.For {}\n        setter(x: -1, y: -171, name: \"setter_8c3f7b\") setter_9a4d2f = previous\n        instance(x: -276, y: -85) contains_1f5e0f root.Std_k98ojb.List.Contains {}\n        ifexpression_6f3b2c.else -> output_5c1b4a\n        ifexpression_6f3b2c.value -> output_5c1b4a\n        ifexpression_6f3b2c.then -> setter_8c3f7b.execute\n        list1_4a3b6f -> for_5e0f6f.items\n        for_5e0f6f.item -> ifexpression_6f3b2c.gen_2\n        for_5e0f6f.index -> ifexpression_6f3b2c.gen_0\n        getter_9a1d4e.value -> ifexpression_6f3b2c.gen_1\n        for_5e0f6f.onItem -> ifexpression_6f3b2c.execute\n        list2_7c0e8d -> contains_1f5e0f.list\n        for_5e0f6f.item -> contains_1f5e0f.item\n        contains_1f5e0f.is_contained -> ifexpression_6f3b2c.gen_3\n        for_5e0f6f.done -> output_5c1b4a\n        for_5e0f6f.item -> setter_8c3f7b.new_value\n        setter_9a4d2f.continue -> for_5e0f6f.reset\n        setter_8c3f7b.continue -> for_5e0f6f.next\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_1f7c1f root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -375, y: -206, name: \"list1\") property(List) list1_3a0f5e\n        in(x: -364, y: 27, name: \"list2\") property(List) list2_7c9d8b\n\n        out(x: 1224, y: 6, name: \"output\") property(Bool) output_1b8e3a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 0, y: -250) intersection_5a3b7f root.Std_k98ojb.Sets.Intersection {}\n        list1_3a0f5e -> intersection_5a3b7f.left\n        list2_7c9d8b -> intersection_5a3b7f.right\n        instance(x: 0, y: -100) notempty_6b4d7e root.Std_k98ojb.List.NotEmpty {}\n        intersection_5a3b7f.intersection -> notempty_6b4d7e.list\n        notempty_6b4d7e.isEmpty -> output_1b8e3a\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_fc79d5 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -445, y: -214, name: \"list1\") property(List) list1_3a0b5f\n        in(x: -449, y: 30, name: \"list2\") property(List) list2_9c8e6d\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_4e1e3a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_4e1e3a\n        ifexpression_875761.value -> output_4e1e3a\n        list1_3a0b5f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_9c8e6d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_d26972.done -> output_4e1e3a\n        for_d26972.item -> setter_9d4f1c.new_value\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_c7b5a8 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -465, y: -235, name: \"list1\") property(List) list_0a9b3f\n        in(x: -485, y: 30, name: \"list2\") property(List) list_8e6c4d\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_1f7c0a\n\n        instance(x: 752, y: 93) intersection_c9b3f9 root.Std_k98ojb.Sets.Intersection {}\n        list_0a9b3f -> intersection_c9b3f9.left\n        list_8e6c4d -> intersection_c9b3f9.right\n        instance(x: 1218, y: 147) notempty_5c2e1f root.Std_k98ojb.List.NotEmpty {}\n        intersection_c9b3f9.intersection -> notempty_5c2e1f.list\n        notempty_5c2e1f.is_empty -> output_1f7c0a\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_6d4b8f root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -475, y: -213, name: \"list1\") property(List) list1_9e6b4f\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_7c8a3d\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_0a1e9f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_0a1e9f\n        ifexpression_875761.value -> output_0a1e9f\n        list1_9e6b4f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_7c8a3d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        for_d26972.item -> setter_9d4f1c.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_5b7b6f root.main.has_common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -535, y: 5, name: \"list\") property(List) list_4f8a3e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_4f8a3e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_4f8a3e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_3a5b7f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -485, y: 30, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3af6ba -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3af6ba -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -515, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -525, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -525, y: 5, name: \"list\") property(List) list_1f8a3e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_6b2d9c\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_4f0c0d\n\n        instance(x: 752, y: 93) ifexpression_1e5a3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_7f8d2c\") getter_7f8d2c = previous\n        setter(x: 679, y: -313, name: \"setter_3b9a4e\") setter_3b9a4e = previous\n        instance(x: 321, y: -20) for_5f0f6c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_3b9a4e\") setter_1d8f7f = previous\n        instance(x: -275, y: -35) getat_5a2a6c root.Std_k98ojb.List.GetAt {}\n        ifexpression_1e5a3c.else -> continue_6b2d9c\n        ifexpression_1e5a3c.value -> output_4f0c0d\n        ifexpression_1e5a3c.then -> setter_3b9a4e.execute\n        list_1f8a3e -> for_5f0f6c.items\n        for_5f0f6c.item -> ifexpression_1e5a3c.gen_2\n        for_5f0f6c.index -> ifexpression_1e5a3c.gen_0\n        getter_7f8d2c.value -> ifexpression_1e5a3c.gen_1\n        for_5f0f6c.onItem -> ifexpression_1e5a3c.execute\n        for_5f0f6c.done -> continue_6b2d9c\n        for_5f0f6c.item -> setter_3b9a4e.new_value\n        list_1f8a3e -> getat_5a2a6c.list\n        0 -> getat_5a2a6c.index\n        getat_5a2a6c.itemAtIndex -> setter_1d8f7f.new_value\n        execute -> setter_1d8f7f.execute\n        setter_1d8f7f.continue -> for_5f0f6c.reset\n        setter_3b9a4e.continue -> for_5f0f6c.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_2a4a8c root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -523, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -485, y: 30, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3af6ba -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3af6ba -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -523, y: 1, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 572, y: 1) sort_on_7c3a9f root.Std_k98ojb.List.SortOn {\n            key: \"it\"\n        }\n        instance(x: 772, y: -97) filter_2d4e8f root.Std_k98ojb.Query.Filter {\n            where: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        sort_on_7c3a9f.sorted_list -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        sort_on_7c3a9f.sorted_list -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        list_3af6ba -> sort_on_7c3a9f.list\n        filter_2d4e8f.result -> intersection_c7c7e6.left\n        sort_on_7c3a9f.sorted_list -> filter_2d4e8f.list\n        length_8166b0.length -> equal_f89569.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_ac7dfb root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -465, y: 4, name: \"list\") property(List) list_1a0e5f\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_1a0e5f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1a0e5f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -475, y: 20, name: \"sublist\") property(List) sublist_5a9f1e\n        in(x: -476, y: -205, name: \"list\") property(List) list_3b0c6d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"index\") count_9d4f1c root.Std_k98ojb.Std.Count {}\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == sublist.length\"\n        }\n        instance(x: 679, y: -313, name: \"previous\") setter_9d4f1c root.Std_k98ojb.Setting.Setter {}\n        instance(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3b0c6d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3b0c6d -> getat_ce2a48.list\n        count_9d4f1c.count -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        sublist_5a9f1e -> count_9d4f1c.items\n        execute -> count_9d4f1c.reset\n        continue_a96db6 -> for_d26972.next\n        setter_9d4f1c.continue -> for_d26972.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 60, name: \"list1\") property(List) list_2e9f6a\n        in(x: -284, y: -119, name: \"list2\") property(List) list_3c7b8d\n\n        out(x: 558, y: -118, name: \"output\") property(Bool) output_e1a4ba\n\n        instance(x: -92, y: -117) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -116) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -115) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_2e9f6a -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3c7b8d -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        list_2e9f6a -> equal_f89569.right\n        equal_f89569.result -> output_e1a4ba\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_a5d7c8 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -400, y: 0, name: \"list1\") property(List) list1_3a9b6f\n        in(x: -401, y: 120, name: \"list2\") property(List) list2_7e8d4c\n\n        out(x: 1045, y: 35, name: \"output\") property(Bool) output_0f1b3a\n\n        instance(x: -170, y: 37, name: \"is sublist\") filter_9e6c4c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -27, y: -5, name: \"current\") property(List) current_8f1a2d\n\n            out(x: 707, y: 50, name: \"output\") property(Bool) output_7c3e9b\n\n            instance(x: 225, y: 47) contains_4f5c0c root.Std_k98ojb.List.Contains {}\n            current_8f1a2d -> contains_4f5c0c.list\n            list2_7e8d4c -> contains_4f5c0c.item\n            contains_4f5c0c.is_contained -> output_7c3e9b\n        } -> filter_9e6c4c.handler\n        instance(x: -271, y: 37) generateRange_1a8d2f root.Std_k98ojb.List.GenerateRange {}\n        list1_3a9b6f -> generateRange_1a8d2f.from\n        length_0c5e7e.list -> generateRange_1a8d2f.to\n        instance(x: -271, y: 157) map_4e9f0c root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -27, y: -6, name: \"current\") property(Number) current_5e1a7d\n\n            out(x: 707, y: 50, name: \"output\") property(List) output_9c3f8b\n\n            instance(x: 225, y: 47) slice_4f0a2c root.Std_k98ojb.List.Slice {}\n            current_5e1a7d -> slice_4f0a2c.start\n            length_0c5e7e.list -> slice_4f0a2c.end\n            list1_3a9b6f -> slice_4f0a2c.items\n            slice_4f0a2c.slice -> output_9c3f8b\n        } -> map_4e9f0c.handler\n        generateRange_1a8d2f.list -> map_4e9f0c.items\n        map_4e9f0c.output_list -> filter_9e6c4c.items\n        instance(x: -271, y: 277) length_0c5e7e root.Std_k98ojb.List.Length {}\n        list1_3a9b6f -> length_0c5e7e.list\n        filter_9e6c4c.output_list -> contains_2d8b4c.list\n        instance(x: -271, y: 397) contains_2d8b4c root.Std_k98ojb.List.Contains {}\n        true -> contains_2d8b4c.item\n        contains_2d8b4c.is_contained -> output_0f1b3a\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_7e5d9f root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_1f846b\n        in(x: -485, y: -120, name: \"sub_list\") property(List) sub_list_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35, name: \"getat_ce2a48\") getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: -303, y: -205) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: -0, y: 30) is_sublist_2 root.main.is_sublist {}\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_1f846b\n        in(x: -485, y: -120, name: \"sub_list\") property(List) sub_list_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35, name: \"getat_ce2a48\") getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: -303, y: -205) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: -0, y: 30) is_sublist_2 root.main.is_sublist {}\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_1f846b\n        in(x: -485, y: -120, name: \"sub_list\") property(List) sub_list_c62075\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35, name: \"getat_ce2a48\") getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: -303, y: -205) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_1f846b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_1f846b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_2 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -435, y: 15, name: \"list1\") property(List) list1_5e9f8a\n        in(x: -437, y: 147, name: \"list2\") property(List) list2_3b0c7d\n\n        out(x: 1206, y: 45, name: \"output\") property(Bool) output_e4d1ad\n\n        instance(x: -193, y: 40, name: \"is sublist\") filter_9a8f5e root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            list2_3b0c7d -> contains_32727d.list\n            _index_769593 -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> filter_9a8f5e.handler\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            list1_5e9f8a -> contains_32727d.list\n            _index_170471 -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> filter_9a8f5e.items\n        instance(x: 1058, y: -3) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) length_8166b0 root.Std_k98ojb.List.Length {}\n            filter_9a8f5e.output_list -> length_8166b0.list\n            length_8166b0.length -> output_efbc78\n        } -> not_75283f.input\n        not_75283f.result -> output_e4d1ad\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -464, y: 0, name: \"list1\") property(List) list1_5f8b6a\n        in(x: -465, y: 120, name: \"list2\") property(List) list2_9e4c3d\n\n        out(x: 1217, y: 15, name: \"output\") property(Bool) output_0b1c5f\n\n        instance(x: 752, y: -93) for_8a6c7c root.Std_k98ojb.Std.For {}\n        instance(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> for_8a6c7c.handler\n        instance(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_0b1c5f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list2_9e4c3d -> for_8a6c7c.items\n        for_8a6c7c.item -> ifexpression_875761.gen_2\n        for_8a6c7c.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_8a6c7c.onItem -> ifexpression_875761.execute\n        for_8a6c7c.done -> continue_a96db6\n        for_8a6c7c.item -> setter_9d4f1c.new_value\n        list1_5f8b6a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        instance(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        list1_5f8b6a -> for_8a6c7c.items\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_8a6c7c.reset\n        setter_9d4f1c.continue -> for_8a6c7c.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 0, name: \"list1\") property(List) list_9e8f3a\n        in(x: -293, y: 122, name: \"list2\") property(List) list_7b5c4d\n\n        out(x: 557, y: 111, name: \"output\") property(Bool) output_1f6f0d\n\n        instance(x: -92, y: 116) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 115) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 114) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_9e8f3a -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_7b5c4d -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        list_9e8f3a -> equal_f89569.right\n        equal_f89569.result -> output_1f6f0d\n    }\n\n    \n\n    instance(x: -84, y: 239) is_sublist_a7c5f4 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -464, y: 10, name: \"list1\") property(List) list1_5a9b4f\n        in(x: -466, y: -170, name: \"list2\") property(List) list2_7c6e0d\n\n        out(x: 1228, y: -159, name: \"output\") property(Bool) output_3e1e5a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_5a9b4f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_7c6e0d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"list1\") property(List) list1_5e3f6b\n        in(x: -485, y: -120, name: \"list2\") property(List) list2_7c4a9d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_5e3f6b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_7c4a9d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -435, y: 35, name: \"list1\") property(List) list1_3a8b6f\n        in(x: -436, y: -147, name: \"list2\") property(List) list2_5e9c7d\n\n        out(x: 1220, y: -107, name: \"output\") property(Bool) output_4e1f3a\n\n        instance(x: -179, y: -115, name: \"is sublist\") filter_6b8c9c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: 15, name: \"current\") property(List) current_1a7f2e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            list2_5e9c7d -> contains_32727d.list\n            current_1a7f2e -> contains_32727d.item\n            contains_32727d.is_contained -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_6b8c9c.handler\n        list1_3a8b6f -> filter_6b8c9c.items\n        instance(x: 1058, y: -103) all_5e7d2f root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_81298e\n\n            out(x: 521, y: -28, name: \"output\") property(Bool) output_7c1f5a\n\n            instance(x: 74, y: -23) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> notequal_cb8a55.left\n            true -> notequal_cb8a55.right\n            notequal_cb8a55.result -> output_7c1f5a\n        } -> all_5e7d2f.handler\n        filter_6b8c9c.output_list -> all_5e7d2f.items\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        list1_3a8b6f -> length_8166b0.list\n        instance(x: 360, y: -95) lessThanOrEqual_5e9c2d root.Std_k98ojb.Math.LessThanOrEqual {}\n        length_8166b0.length -> lessThanOrEqual_5e9c2d.left\n        filter_6b8c9c.output_list -> length_8166b0.list\n        length_8166b0.length -> lessThanOrEqual_5e9c2d.right\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        all_5e7d2f.output_list -> not_75283f.input\n        lessThanOrEqual_5e9c2d.result -> output_4e1f3a\n        not_75283f.result -> output_4e1f3a\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_a7b8c6 root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a1b8e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c2f5d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 36, name: \"index\") property(Number) index_7e5a8c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_3b0f6d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7e5a8c -> add_3b0f6d.first\n            1 -> add_3b0f6d.second\n            add_3b0f6d.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3a1b8e -> find_6d05b0.items\n        find_6d05b0.item -> missing_7c2f5d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e8f9a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c2d5b\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 35, name: \"index\") property(Number) index_1a3e8c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_9b2f6d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_1a3e8c -> add_9b2f6d.first\n            1 -> add_9b2f6d.second\n            elem_9f6850 -> notequal_807ffd.right\n            add_9b2f6d.result -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3e8f9a -> find_6d05b0.items\n        index_1a3e8c -> find_6d05b0.index\n        find_6d05b0.item -> missing_7c2d5b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_9f4a5f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 0, name: \"list\") property(List) list_9f6a1e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -107, y: 39, name: \"index\") property(Number) index_7e6d1c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_3b0f2f root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7e6d1c -> add_3b0f2f.first\n            1 -> add_3b0f2f.second\n            elem_9f6850 -> notequal_807ffd.right\n            add_3b0f2f.result -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f6a1e -> find_6d05b0.items\n        index_7e6d1c -> find_6d05b0.index\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1f8d4a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: 35, name: \"index\") property(Number) index_1e7d4a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_8c9f5b root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_1e7d4a -> add_8c9f5b.first\n            0 -> add_8c9f5b.second\n            add_8c9f5b.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_1f8d4a -> find_6d05b0.items\n        find_6d05b0.index -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e4f9a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c6b2d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 38, name: \"index\") property(Number) index_7c1d3e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_9f5b2c root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7c1d3e -> add_9f5b2c.first\n            0 -> add_9f5b2c.second\n            add_9f5b2c.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3e4f9a -> find_6d05b0.items\n        find_6d05b0.item -> missing_7c6b2d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9e4f5a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -107, y: 29, name: \"index\") property(Number) index_8e3a1c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_4f9d5b root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_8e3a1c -> add_4f9d5b.first\n            0 -> add_4f9d5b.second\n            add_4f9d5b.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9e4f5a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_4f9d5b root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_8e3a1c -> add_4f9d5b.first\n            -1 -> add_4f9d5b.second\n            add_4f9d5b.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.context\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f6a8e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -112, y: 35, name: \"index\") property(Number) index_ea1d8e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_3f0c5b root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_ea1d8e -> add_3f0c5b.first\n            1 -> add_3f0c5b.second\n            add_3f0c5b.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f6a8e -> find_6d05b0.items\n        find_6d05b0.index -> index_ea1d8e\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9e4f5a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c2b6d\n\n        instance(x: 0, y: 0) find_3e8f3f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -107, y: 36, name: \"index\") property(Number) index_ea7c8e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_2f1b5d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_ea7c8e -> add_2f1b5d.first\n            0 -> add_2f1b5d.second\n            add_2f1b5d.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_3e8f3f.predicate\n        list_9e4f5a -> find_3e8f3f.items\n        index_ea7c8e -> find_3e8f3f.index\n        find_3e8f3f.item -> missing_7c2b6d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_9b4c0e root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f6a2e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 35, name: \"index\") property(Number) index_7e3a6c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1b0d5f root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7e3a6c -> add_1b0d5f.first\n            1 -> add_1b0d5f.second\n            add_1b0d5f.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f6a2e -> find_6d05b0.items\n        find_6d05b0.index -> index_7e3a6c\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e8f5a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_2b9d7c\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -116, y: 1, name: \"index\") property(Number) index_7e8d5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_2b3f9c root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7e8d5a -> sub_2b3f9c.first\n            elem_9f6850 -> sub_2b3f9c.second\n            sub_2b3f9c.result -> notequal_807ffd.left\n            1 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3e8f5a -> find_6d05b0.items\n        find_6d05b0.index -> missing_2b9d7c\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_node root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -124, y: 0, name: \"input\") property(String) input_9f8a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1b4c5e\n\n        instance(x: 0, y: 1) replace_7a6d1e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3f9c2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4e8f5a root.Std_k98ojb.Strings.Replace {}\n        input_9f8a3d -> replace_7a6d1e.input\n        \" \" -> replace_7a6d1e.search\n        \":\" -> replace_7a6d1e.replace\n        replace_7a6d1e.output -> replace_3f9c2d.input\n        \",\" -> replace_3f9c2d.search\n        \":\" -> replace_3f9c2d.replace\n        replace_3f9c2d.output -> replace_4e8f5a.input\n        \".\" -> replace_4e8f5a.search\n        \":\" -> replace_4e8f5a.replace\n        replace_4e8f5a.output -> output_1b4c5e\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -123, y: 0, name: \"input\") property(String) input_1a3f9e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4c8b7d\n\n        instance(x: 0, y: 1) replace_6f5c0f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9e3a2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4d7b8a root.Std_k98ojb.Strings.Replace {}\n        input_1a3f9e -> replace_6f5c0f.input\n        \" \" -> replace_6f5c0f.search\n        \":\" -> replace_6f5c0f.replace\n        replace_6f5c0f.output -> replace_9e3a2f.input\n        \",\" -> replace_9e3a2f.search\n        \":\" -> replace_9e3a2f.replace\n        replace_9e3a2f.output -> replace_4d7b8a.input\n        \".\" -> replace_4d7b8a.search\n        \":\" -> replace_4d7b8a.replace\n        replace_4d7b8a.output -> output_4c8b7d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_1e9f2f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"input\") property(String) input_1f8d3a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_7c6b9e\n\n        instance(x: 0, y: 1) replace_4b5b6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a3d2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9c7e1a root.Std_k98ojb.Strings.Replace {}\n        input_1f8d3a -> replace_4b5b6f.input\n        \" \" -> replace_4b5b6f.search\n        \":\" -> replace_4b5b6f.replace\n        replace_4b5b6f.output -> replace_8a3d2d.input\n        \",\" -> replace_8a3d2d.search\n        \":\" -> replace_8a3d2d.replace\n        replace_8a3d2d.output -> replace_9c7e1a.input\n        \".\" -> replace_9c7e1a.search\n        \":\" -> replace_9c7e1a.replace\n        replace_9c7e1a.output -> output_7c6b9e\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -172, y: 0, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4d5e6f\n\n        instance(x: 0, y: 1) replace_7g8h9i root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_jk0l1m root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_nopqrs root.Std_k98ojb.Strings.Replace {}\n        input_1a2b3c -> replace_7g8h9i.input\n        \" \" -> replace_7g8h9i.search\n        \":\" -> replace_7g8h9i.replace\n        replace_7g8h9i.output -> replace_jk0l1m.input\n        \",\" -> replace_jk0l1m.search\n        \":\" -> replace_jk0l1m.replace\n        replace_jk0l1m.output -> replace_nopqrs.input\n        \".\" -> replace_nopqrs.search\n        \":\" -> replace_nopqrs.replace\n        replace_nopqrs.output -> output_4d5e6f\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_e54b7f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -128, y: 0, name: \"input\") property(String) input_2a1f9e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4b8c5d\n\n        instance(x: 0, y: 1) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9f6a2e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4d5c8f root.Std_k98ojb.Strings.Replace {}\n        input_2a1f9e -> replace_7b3b7b.input\n        \" \" -> replace_7b3b7b.search\n        \":\" -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> replace_9f6a2e.input\n        \",\" -> replace_9f6a2e.search\n        \":\" -> replace_9f6a2e.replace\n        replace_9f6a2e.output -> replace_4d5c8f.input\n        \".\" -> replace_4d5c8f.search\n        \":\" -> replace_4d5c8f.replace\n        replace_4d5c8f.output -> output_4b8c5d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_e54b7f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -172, y: 0, name: \"input\") property(String) input_9f1d3a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_8e6c5b\n\n        instance(x: 0, y: 1) replace_7b4f8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9a3d2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_5e6c1f root.Std_k98ojb.Strings.Replace {}\n        input_9f1d3a -> replace_7b4f8f.input\n        \" \" -> replace_7b4f8f.search\n        \":\" -> replace_7b4f8f.replace\n        replace_7b4f8f.output -> replace_9a3d2f.input\n        \",\" -> replace_9a3d2f.search\n        \":\" -> replace_9a3d2f.replace\n        replace_9a3d2f.output -> replace_5e6c1f.input\n        \".\" -> replace_5e6c1f.search\n        \":\" -> replace_5e6c1f.replace\n        replace_5e6c1f.output -> output_8e6c5b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -172, y: 0, name: \"input\") property(String) input_9a1b6f\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_4e3c8d\n\n        instance(x: 221, y: -48, name: \"replace_spaces_commas_dots_with_colon\") replace_0e9a7b root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) or_5f2d6c root.Std_k98ojb.Logic.Or {}\n        instance(x: -11, y: 9) or_8e1f4c root.Std_k98ojb.Logic.Or {}\n        \" \" -> or_5f2d6c.left\n        \",\" -> or_5f2d6c.right\n        or_5f2d6c.result -> replace_0e9a7b.search\n        \":\" -> replace_0e9a7b.replace\n        input_9a1b6f -> replace_0e9a7b.input\n        \".\" -> or_8e1f4c.left\n        or_5f2d6c.result -> or_8e1f4c.right\n        or_8e1f4c.result -> replace_0e9a7b.search\n        input_9a1b6f -> replace_0e9a7b.input\n        replace_0e9a7b.output -> output_4e3c8d\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_spaces_commas_dots_with_colon_5f2f6f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -172, y: 0, name: \"input\") property(String) input_9f1d6a\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7e8b5c\n\n        instance(x: 221, y: -48, name: \"replace_chars\") replace_0c3e4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) or_1d6a2f root.Std_k98ojb.Logic.Or {}\n        instance(x: -11, y: -49) or_5f7f8c root.Std_k98ojb.Logic.Or {}\n        \" \" -> or_1d6a2f.left\n        \",\" -> or_1d6a2f.right\n        or_1d6a2f.result -> or_5f7f8c.left\n        \".\" -> or_5f7f8c.right\n        or_5f7f8c.result -> replace_0c3e4f.search\n        \":\" -> replace_0c3e4f.replace\n        input_9f1d6a -> replace_0c3e4f.input\n        replace_0c3e4f.output -> output_7e8b5c\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_chars_aad0c2 root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -122, y: 0, name: \"input\") property(String) input_9a3f6e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_7c8b4d\n\n        instance(x: 0, y: 1) replace_5f0d3f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9e6a2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c7c8c1 root.Std_k98ojb.Strings.Replace {}\n        input_9a3f6e -> replace_5f0d3f.input\n        \" \" -> replace_5f0d3f.search\n        \":\" -> replace_5f0d3f.replace\n        replace_5f0d3f.output -> replace_9e6a2d.input\n        \",\" -> replace_9e6a2d.search\n        \":\" -> replace_9e6a2d.replace\n        replace_9e6a2d.output -> replace_c7c8c1.input\n        \".\" -> replace_c7c8c1.search\n        \":\" -> replace_c7c8c1.replace\n        replace_c7c8c1.output -> output_7c8b4d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_9e6a2d root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -144, y: 0, name: \"input\") property(String) input_1a2f6e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5c3b8d\n\n        instance(x: 0, y: 1) replace_7e4c9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6a9b2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_3f8a5b root.Std_k98ojb.Strings.Replace {}\n        input_1a2f6e -> replace_7e4c9f.input\n        \" \" -> replace_7e4c9f.search\n        \":\" -> replace_7e4c9f.replace\n        replace_7e4c9f.output -> replace_6a9b2d.input\n        \",\" -> replace_6a9b2d.search\n        \":\" -> replace_6a9b2d.replace\n        replace_6a9b2d.output -> replace_3f8a5b.input\n        \".\" -> replace_3f8a5b.search\n        \":\" -> replace_3f8a5b.replace\n        replace_3f8a5b.output -> output_5c3b8d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_e54b7f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -275, y: 17, name: \"input\") property(String) input_8f1e9d\n\n        out(x: 1056, y: 22, name: \"output\") property(Bool) output_7c0a5b\n\n        instance(x: -115, y: 18, name: \"get characters\") characters_2a4b3c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 375, y: 22) intersection_1f8e9d root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 688, y: 21) length_5e6a7c root.Std_k98ojb.List.Length {}\n        instance(x: 898, y: 20) equal_2f0b3f root.Std_k98ojb.Logic.Equal {}\n        input_8f1e9d -> characters_2a4b3c.input\n        characters_2a4b3c.characters -> intersection_1f8e9d.left\n        characters_2a4b3c.characters -> intersection_1f8e9d.right\n        length_5e6a7c.length -> equal_2f0b3f.left\n        1 -> equal_2f0b3f.right\n        intersection_1f8e9d.intersection -> length_5e6a7c.list\n        equal_2f0b3f.result -> output_7c0a5b\n    }\n\n    \n\n    instance(x: -71, y: 122) is_same_4a8c0f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -275, y: 0, name: \"input\") property(String) input_9e8f3d\n\n        out(x: 1221, y: 5, name: \"output\") property(Bool) output_7a4b2c\n\n        instance(x: -94, y: 10) characters_6f0b6c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 8) length_1e9d5f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 7) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 574, y: -4) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        ifexpression_875761.else -> output_7a4b2c\n        ifexpression_875761.value -> output_7a4b2c\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        characters_6f0b6c.characters -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_7a4b2c\n        characters_6f0b6c.characters -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        input_9e8f3d -> characters_6f0b6c.input\n        length_1e9d5f.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        characters_6f0b6c.characters -> length_1e9d5f.list\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_same_f7b6a8 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -284, y: 0, name: \"input\") property(String) input_1a9d6f\n\n        out(x: 557, y: 10, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: 5) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 14) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 15) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        input_1a9d6f -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        input_1a9d6f -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_ac7dfb root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -290, y: 0, name: \"input\") property(String) input_9e1f8d\n\n        out(x: 557, y: 5, name: \"output\") property(Bool) output_7c3a6b\n\n        instance(x: -92, y: 30) characters_c7c7e6 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 29) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 28) intersection_c9d5f1 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 574, y: 27) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        input_9e1f8d -> characters_c7c7e6.input\n        length_8166b0.list -> intersection_c9d5f1.left\n        characters_c7c7e6.characters -> intersection_c9d5f1.right\n        1 -> length_8166b0.list\n        equal_f89569.result -> output_7c3a6b\n        intersection_c9d5f1.intersection -> length_8166b0.list\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -277, y: 0, name: \"input\") property(String) input_9e8f1d\n\n        out(x: 1005, y: 4, name: \"output\") property(Bool) output_eb3c7a\n\n        instance(x: -93, y: 10) characters_c6a0ac root.Std_k98ojb.Strings.Characters {}\n        instance(x: 246, y: 2) map_1e9f8d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 553, y: 3) allroot_std_k98ojb_Logic_And root.Std_k98ojb.Logic.And {}\n        func() {\n            in(x: -24, y: 39, name: \"current\") property(String) current_9f1c7e\n\n            out(x: 411, y: 32, name: \"output\") property(Bool) output_3a8d0b\n\n            instance(x: 160, y: 35) equal_2f4c6f root.Std_k98ojb.Logic.Equal {}\n            input_9e8f1d -> equal_2f4c6f.left\n            current_9f1c7e -> equal_2f4c6f.right\n            equal_2f4c6f.result -> output_3a8d0b\n        } -> map_1e9f8d.handler\n        characters_c6a0ac.characters -> map_1e9f8d.items\n        map_1e9f8d.output_list -> allroot_std_k98ojb_Logic_And.inputs\n        allroot_std_k98ojb_Logic_And.result -> output_eb3c7a\n    }\n\n    \n\n    instance(x: -36, y: 80) is_same_6c0c5f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -294, y: 155, name: \"string\") property(String) string_1a9e4f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 415, y: 63) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: -1, y: -10) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 361, y: -11) length_8166b0 root.Std_k98ojb.List.Length {}\n        string_1a9e4f -> map_6030c9.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(String) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_6030c9.handler\n        length_6e87f2.list -> intersection_c7c7e6.left\n        map_6030c9.output_list -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        string_1a9e4f -> length_6e87f2.list\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        equal_f89569.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_9a3f5f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -286, y: 0, name: \"input\") property(String) input_8e9f6d\n\n        out(x: 556, y: 41, name: \"output\") property(Bool) output_1b7a3c\n\n        instance(x: -92, y: 40) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 39) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 38) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -276, y: -11) characters_7f3c5e root.Std_k98ojb.Strings.Characters {}\n        input_8e9f6d -> characters_7f3c5e.input\n        characters_7f3c5e.characters -> intersection_c7c7e6.left\n        characters_7f3c5e.characters -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        equal_f89569.result -> output_1b7a3c\n    }\n\n    \n\n    instance(x: -84, y: 159) is_same_8d4f5f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -297, y: 0, name: \"input\") property(String) input_8f3a1e\n\n        out(x: 1214, y: 10, name: \"output\") property(Bool) output_5b9d7c\n\n        instance(x: -100, y: 6) characters_2b0e8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 246, y: 11) length_1a4f3c root.Std_k98ojb.List.Length {}\n        instance(x: 470, y: 10) getat_7d9a6c root.Std_k98ojb.List.GetAt {}\n        instance(x: 704, y: 12) equal_f0e2dc root.Std_k98ojb.Logic.Equal {}\n        instance(x: 928, y: 11) for_1f5b3c root.Std_k98ojb.Std.For {}\n        instance(x: 1154, y: 10) and_7a9d6f root.Std_k98ojb.Logic.And {}\n        characters_2b0e8f.characters -> length_1a4f3c.list\n        input_8f3a1e -> characters_2b0e8f.input\n        for_1f5b3c.items -> getat_7d9a6c.list\n        0 -> getat_7d9a6c.index\n        length_1a4f3c.length -> for_1f5b3c.to\n        characters_2b0e8f.characters -> for_1f5b3c.items\n        getat_7d9a6c.itemAtIndex -> equal_f0e2dc.left\n        input_8f3a1e -> equal_f0e2dc.right\n        equal_f0e2dc.result -> and_7a9d6f.left\n        for_1f5b3c.onItem -> equal_f0e2dc.execute\n        1 -> length_1a4f3c.list\n        for_1f5b3c.index -> getat_7d9a6c.index\n        and_7a9d6f.result -> output_5b9d7c\n        equal_f0e2dc.value -> and_7a9d6f.right\n        for_1f5b3c.done -> output_5b9d7c\n    }\n\n    \n\n    instance(x: 11, y: -10) is_same_e8e4d9 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -285, y: -86, name: \"string\") property(String) string_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        string_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        string_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -288, y: 5, name: \"input\") property(String) input_1f0a3d\n\n        out(x: 1014, y: 7, name: \"output\") property(Bool) output_9e8c6b\n\n        instance(x: -123, y: 10) characters_c2f5aa root.Std_k98ojb.Strings.Characters {}\n        instance(x: 290, y: 14) map_3a1d0c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 577, y: 15) allroot_8e7f4a root.Std_k98ojb.Iteration.All {}\n        instance(x: 830, y: 16) equal_f9a5ec root.Std_k98ojb.Logic.Equal {}\n        characters_c2f5aa.characters -> map_3a1d0c.items\n        func() {\n            in(x: -26, y: 61, name: \"element\") property(String) element_7e8f4f\n\n            out(x: 451, y: 49, name: \"output\") property(String) output_9b2a1d\n\n            instance(x: 160, y: 56) tolowercase_3c0c5c root.Std_k98ojb.Strings.ToLower {}\n            element_7e8f4f -> tolowercase_3c0c5c.input\n            tolowercase_3c0c5c.output -> output_9b2a1d\n        } -> map_3a1d0c.handler\n        map_3a1d0c.output_list -> allroot_8e7f4a.items\n        func() {\n            in(x: -22, y: 135, name: \"current\") property(String) current_5b9f6e\n\n            out(x: 403, y: 123, name: \"output\") property(Bool) output_1d0c7f\n\n            instance(x: 154, y: 130) equal_2a4a8c root.Std_k98ojb.Logic.Equal {}\n            current_5b9f6e -> equal_2a4a8c.right\n            map_3a1d0c.output_list[0] -> equal_2a4a8c.left\n            equal_2a4a8c.result -> output_1d0c7f\n        } -> allroot_8e7f4a.handler\n        allroot_8e7f4a.all -> output_9e8c6b\n        input_1f0a3d -> characters_c2f5aa.input\n    }\n\n    \n\n    instance(x: -56, y: 71) is_same_8c9f6b root.main.is_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -40, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n    instance(x: -40, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n        where: \"Std.Str.IsNumeric(it)\"\n    }\n    \n\n    instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -15, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -15, y: 0) characters_node root.main.count_digits {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -45, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 15, y: 0) count_node root.Std_k98ojb.Count {}\n        instance(x: 90, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.isNumeric()\"\n        }\n        string_ai -> characters_node.input\n        characters_node.characters -> count_node.items\n        count_node.onCount -> filter_7b3b7b.trigger\n        filter_7b3b7b.result -> count_node.count\n        count_node.iterations -> result_ai\n    }\n\n    \n    instance(x: 0, y: -46) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -10, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -10, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"list\") property(List) list_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -10, y: 0) filter_2 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node_1 root.Std_k98ojb.List.Length {}\n        list_ai -> filter_2.list\n        filter_2.result -> list_length_node_1.items\n        list_length_node_1.length -> result_ai\n    }\n\n    \n    instance(x: -10, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -10, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 20, y: 0) count_node root.Std_k98ojb.Count {}\n        instance(x: 40, y: 0) filter_1e2d8a root.Std_k98ojb.Query.Filter {\n            where: \"Std.IsNumeric(it)\"\n        }\n        string_ai -> characters_node.input\n        characters_node.characters -> count_node.items\n        count_node.onCount -> filter_1e2d8a.trigger\n        filter_1e2d8a.result -> count_node.count\n        count_node.iteration -> result_ai\n    }\n\n    \n    instance(x: 0, y: -46) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -16, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -16, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_7b3b7b.list\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_1 root.main.count_digits {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 30, y: 0) count_node root.Std_k98ojb.Count {}\n        instance(x: 60, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Std.IsNumeric(it)\"\n        }\n        string_ai -> characters_node.input\n        characters_node.characters -> filter_7b3b7b.list\n        count_node.iterations -> result_ai\n        filter_7b3b7b.result -> count_node.items\n        count_node.onCount -> count_node.count\n    }\n\n    \n    instance(x: 0, y: -46) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -16, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 15, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        instance(x: -16, y: 40) count_node root.Std_k98ojb.Count {}\n        string_ai -> characters_node.input\n        characters_node.characters -> filter_7b3b7b.list\n        filter_7b3b7b.result -> count_node.items\n        count_node.onCount -> count_node.count\n        count_node.done -> count_node.reset\n        0 -> count_node.iterations\n        count_node.interation -> result_ai\n    }\n    \n\n    instance(x: -16, y: 40) count_digits_1 root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -20, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 30, y: 0) count_node root.Std_k98ojb.Count {}\n        instance(x: 60, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Std.IsNumeric(it)\"\n        }\n        string_ai -> characters_node.input\n        characters_node.characters -> filter_7b3b7b.list\n        count_node.iterations -> result_ai\n        filter_7b3b7b.result -> count_node.items\n        count_node.onCount -> count_node.count\n    }\n\n    \n    instance(x: 0, y: -20) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -30, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -30, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Strings.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_7b3b7b.list\n        filter_7b3b7b.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_1 root.main.count_digits {}\n\n    \n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -344, y: 0, name: \"n\") property(Number) n_1a8f3e\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_2b4c6d\n\n        instance(x: 12, y: 136) expression_5f9a0c root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 303, y: 2) div_4d3e7f root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_9a8c0c  = 1\n        instance(x: 23, y: -1) mul_5e6f1f root.Std_k98ojb.Math.Mul {}\n        expression_5f9a0c.result -> mul_5e6f1f.second\n        n_1a8f3e -> mul_5e6f1f.first\n        data_9a8c0c -> div_4d3e7f.second\n        mul_5e6f1f.result -> div_4d3e7f.first\n        expression_5f9a0c.gen_0 -> n_1a8f3e\n        div_4d3e7f.result -> sum_2b4c6d\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_1a1f92 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = sum\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 62, y: -226) setter_2d44da root.Std_k98ojb.Variable.Setter {}\n        data_3c713b -> setter_2d44da.variable_name\n        expression_634b7e.result -> setter_2d44da.new_value\n        n_c88d35 -> expression_634b7e.gen_0\n        setter_2d44da.continue -> output_ebef81\n        0 -> setter_2d44da.new_value\n        n_c88d35 -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -341, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"(4*n*n-1)*(4*n*n-1)\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        div_64046c.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 23, y: -1) pow_5e9f8c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_5e9f8c.first\n        4 -> pow_5e9f8c.second\n        instance(x: 303, y: 2) add_1a0d3c root.Std_k98ojb.Math.Add {}\n        pow_5e9f8c.result -> add_1a0d3c.second\n        add_1a0d3c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 12, y: -1) pow_7e9f5c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_7e9f5c.x\n        4 -> pow_7e9f5c.y\n        pow_7e9f5c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -285, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4d8c2e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_88bb8a root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_4d8c2e.second\n        pow_4d8c2e.result -> add_88bb8a.first\n        expression_2d6da6.result -> pow_4d8c2e.first\n        n_3a3116 -> pow_4d8c2e.gen_0\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_88bb8a.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = sum\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 62, y: -226) setter_2d44da root.Std_k98ojb.Variable.Setter {}\n        data_3c713b -> setter_2d44da.variable_name\n        expression_634b7e.result -> setter_2d44da.new_value\n        n_c88d35 -> expression_634b7e.gen_0\n        setter_2d44da.continue -> output_ebef81\n        0 -> setter_2d44da.new_value\n        n_c88d35 -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4d9e8c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_9e5f7c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_4d9e8c.second\n        pow_4d9e8c.result -> add_9e5f7c.first\n        expression_2d6da6.result -> pow_4d9e8c.first\n        n_3a3116 -> pow_4d9e8c.gen_0\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_9e5f7c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = sum\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 62, y: -226) setter_2d44da root.Std_k98ojb.Variable.Setter {}\n        data_3c713b -> setter_2d44da.variable_name\n        expression_634b7e.result -> setter_2d44da.new_value\n        n_c88d35 -> expression_634b7e.gen_0\n        setter_2d44da.continue -> output_ebef81\n        0 -> setter_2d44da.new_value\n        n_c88d35 -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -284, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 23, y: -1) pow_5f7c9e root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_5f7c9e.x\n        4 -> pow_5f7c9e.y\n        pow_5f7c9e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -104, y: 24, name: \"size\") property(Number) size_8f1e3d\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_9a2c4b\n\n        instance(x: 0, y: -23) mul_6e5b7c root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -53) mul_1d3f8f root.Std_k98ojb.Math.Mul {}\n        size_8f1e3d -> mul_6e5b7c.first\n        size_8f1e3d -> mul_6e5b7c.second\n        6 -> mul_1d3f8f.first\n        mul_6e5b7c.result -> mul_1d3f8f.second\n        mul_1d3f8f.result -> surface_area_9a2c4b\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -102, y: 21, name: \"size\") property(Number) size_1a8f9e\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_5c3b2d\n\n        instance(x: 12, y: -13) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a8f9e -> mul_f892a4.first\n        data_cde0dc -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_5c3b2d\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_7f8c9e root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: 45, name: \"size\") property(Number) size_9f2e6d\n\n        out(x: 656, y: -68, name: \"surface area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: -105) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_9f2e6d root.Std_k98ojb.Math.Mul {}\n        size_9f2e6d -> mul_f892a4.first\n        size_9f2e6d -> mul_f892a4.second\n        mul_f892a4.result -> mul_9f2e6d.first\n        6 -> mul_9f2e6d.second\n        mul_9f2e6d.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -101, y: 15, name: \"size\") property(Number) size_1f3a8d\n\n        out(x: 106, y: -12, name: \"surface area\") property(Number) surface_area_9b4e7c\n\n        instance(x: 0, y: -46) mul_6f5b2c root.Std_k98ojb.Math.Mul {}\n        size_1f3a8d -> mul_6f5b2c.first\n        6 -> mul_6f5b2c.second\n        instance(x: 96, y: -78) mul_9e4f7c root.Std_k98ojb.Math.Mul {}\n        mul_6f5b2c.result -> mul_9e4f7c.first\n        size_1f3a8d -> mul_9e4f7c.second\n        mul_9e4f7c.result -> surface_area_9b4e7c\n    }\n\n    \n\n    instance(x: 111, y: -28) cube_surface_area_5a2f6c root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -103, y: 25, name: \"size\") property(Number) size_1a3f9e\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_7b4c2d\n\n        instance(x: 0, y: -10) mul_f8c6f5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 93, y: -15) mul_1a9e3c root.Std_k98ojb.Math.Mul {}\n        size_1a3f9e -> mul_f8c6f5.first\n        2 -> mul_f8c6f5.second\n        mul_f8c6f5.result -> mul_1a9e3c.first\n        size_1a3f9e -> mul_1a9e3c.second\n        6 -> surface_area_7b4c2d\n        mul_1a9e3c.result -> surface_area_7b4c2d\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -107, y: 15, name: \"size\") property(Number) size_1a3f0d\n\n        out(x: 111, y: -18, name: \"surface area\") property(Number) surface_area_7e6c5b\n\n        instance(x: 14, y: -17) mul_9b8f4f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a3f0d -> mul_9b8f4f.first\n        data_cde0dc -> mul_9b8f4f.second\n        mul_9b8f4f.result -> surface_area_7e6c5b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -102, y: 35, name: \"size\") property(Number) size_1a9f3e\n\n        out(x: 1072, y: 14, name: \"surface area\") property(Number) surface_area_8c7d6b\n\n        instance(x: 12, y: -10) mul_4b5e0f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a9f3e -> mul_4b5e0f.first\n        data_cde0dc -> mul_4b5e0f.second\n        mul_4b5e0f.result -> surface_area_8c7d6b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -107, y: 23, name: \"size\") property(Number) size_1a3f0d\n\n        out(x: 1025, y: 7, name: \"surface area\") property(Number) surface_area_9b8c2e\n\n        instance(x: 11, y: -12) mul_4e6eac root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a3f0d -> mul_4e6eac.first\n        data_cde0dc -> mul_4e6eac.second\n        mul_4e6eac.result -> surface_area_9b8c2e\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -100, y: 0, name: \"size\") property(Number) size_1a8e3f\n\n        out(x: 0, y: 0, name: \"surface area\") property(Number) surface_area_7b2d6c\n\n        instance(x: 0, y: -100) mul_5f9b4c root.Std_k98ojb.Math.Mul {}\n        size_1a8e3f -> mul_5f9b4c.first\n        6 -> mul_5f9b4c.second\n        instance(x: 0, y: -200) mul_2d7a1f root.Std_k98ojb.Math.Mul {}\n        mul_5f9b4c.result -> mul_2d7a1f.first\n        size_1a8e3f -> mul_2d7a1f.second\n        mul_2d7a1f.result -> surface_area_7b2d6c\n    }\n\n    \n\n    instance(x: 100, y: -200) cube_surface_area_4f5f9d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -103, y: 41, name: \"size\") property(Number) size_1f3a2d\n\n        out(x: 1076, y: 39, name: \"surface area\") property(Number) surface_area_8e9c7b\n\n        instance(x: 0, y: -21) mul_4f5b4f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 10, y: 53) data_3a1d2d  = 6\n        size_1f3a2d -> mul_4f5b4f.first\n        data_3a1d2d -> mul_4f5b4f.second\n        mul_4f5b4f.result -> surface_area_8e9c7b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 22, name: \"list\") property(List) list_6a9f1e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_870503 root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_6a9f1e -> max_f3b46d.items\n        list_6a9f1e -> min_870503.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_870503.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 22, name: \"list\") property(List) list_0d1f9e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) max_6e87f2 root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_cb50ae root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        max_6e87f2.max -> sub_852f2e.first\n        min_cb50ae.min -> sub_852f2e.second\n        list_0d1f9e -> max_6e87f2.items\n        list_0d1f9e -> min_cb50ae.items\n        sub_852f2e.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -28, y: 12, name: \"list\") property(List) list_1e8f6a\n\n        out(x: 441, y: 13, name: \"difference\") property(Number) difference_2b9c7d\n\n        instance(x: 0, y: 24) max_3b5c4f root.Std_k98ojb.List.Max {}\n        instance(x: -28, y: -30) min_1e8a6f root.Std_k98ojb.List.Min {}\n        instance(x: 201, y: 13) sub_2d0c9c root.Std_k98ojb.Math.Sub {}\n        list_1e8f6a -> max_3b5c4f.items\n        list_1e8f6a -> min_1e8a6f.items\n        max_3b5c4f.max -> sub_2d0c9c.first\n        min_1e8a6f.min -> sub_2d0c9c.second\n        sub_2d0c9c.result -> difference_2b9c7d\n    }\n\n    \n\n    instance(x: 48, y: -37) diff_max_min_3e5b4e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1e9b8a\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_f3b46d.items -> list_1e9b8a\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.items -> list_1e9b8a\n        min_4d4556.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 15, name: \"list\") property(List) list_0a1f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_870503 root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_0a1f8e -> max_f3b46d.items\n        list_0a1f8e -> min_870503.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_870503.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -31, y: 13, name: \"list\") property(List) list_1a0f5e\n\n        out(x: 445, y: 11, name: \"difference\") property(Number) difference_4c9d3b\n\n        instance(x: 202, y: 10) sub_2f7c6e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1a0f5e root.Std_k98ojb.List.Max {}\n        instance(x: -81, y: -67) min_4d4556 root.Std_k98ojb.List.Min {}\n        list_1a0f5e -> max_1a0f5e.items\n        list_1a0f5e -> min_4d4556.items\n        max_1a0f5e.max -> sub_2f7c6e.first\n        min_4d4556.min -> sub_2f7c6e.second\n        sub_2f7c6e.result -> difference_4c9d3b\n    }\n\n    \n\n    instance(x: 48, y: -11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1a9f0e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_2b8c5d\n\n        instance(x: 201, y: 62) sub_3c4d7e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_4d5f9a root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_5e6fa1 root.Std_k98ojb.List.Min {}\n        list_1a9f0e -> max_4d5f9a.items\n        list_1a9f0e -> min_5e6fa1.items\n        max_4d5f9a.max -> sub_3c4d7e.first\n        min_5e6fa1.min -> sub_3c4d7e.second\n        sub_3c4d7e.result -> output_2b8c5d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -31, y: 20, name: \"list\") property(List) list_1a8f2e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_4c7d5b\n\n        instance(x: 201, y: 62) sub_6a3f9c root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_2e0b1c root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_4d4556 root.Std_k98ojb.List.Min {}\n        sub_6a3f9c.result -> output_4c7d5b\n        max_2e0b1c.max -> sub_6a3f9c.first\n        min_4d4556.min -> sub_6a3f9c.second\n        list_1a8f2e -> max_2e0b1c.items\n        list_1a8f2e -> min_4d4556.items\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1a8b3f\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5e9c2d\n\n        instance(x: 201, y: 62) sub_6f0c4e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1a7c8c root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -375) min_d3d9ef root.Std_k98ojb.List.Min {}\n        sub_6f0c4e.result -> output_5e9c2d\n        max_1a7c8c.max -> sub_6f0c4e.first\n        min_d3d9ef.min -> sub_6f0c4e.second\n        list_1a8b3f -> max_1a7c8c.items\n        list_1a8b3f -> min_d3d9ef.items\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_2e6f4f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 26, name: \"list\") property(List) list_0d9b3f\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_7e6c1a\n\n        instance(x: 201, y: 62) sub_5e8a2c root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_4f9d0c root.Std_k98ojb.List.Max {}\n        instance(x: -294, y: 155) min_7a3c6c root.Std_k98ojb.List.Min {}\n        sub_5e8a2c.result -> output_7e6c1a\n        max_4f9d0c.max -> sub_5e8a2c.first\n        min_7a3c6c.min -> sub_5e8a2c.second\n        list_0d9b3f -> max_4f9d0c.items\n        list_0d9b3f -> min_7a3c6c.items\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 0, name: \"input\") property(Number) input_5f3a9e\n\n        out(x: 1268, y: 2, name: \"output\") property(Bool) output_1b4c6d\n\n        instance(x: 1057, y: -12) modulo_0f6c5f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1059, y: 44) equal_3a2e8f root.Std_k98ojb.Logic.Equal {}\n        input_5f3a9e -> modulo_0f6c5f.value\n        2 -> modulo_0f6c5f.divisor\n        modulo_0f6c5f.result -> equal_3a2e8f.left\n        0 -> equal_3a2e8f.right\n        equal_3a2e8f.result -> output_1b4c6d\n    }\n\n    \n\n    instance(x: -7, y: -11) is_even_5f9b4c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 0, name: \"input\") property(Number) input_1a8f9e\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c2b3d\n\n        instance(x: 847, y: -207) modulo_4c5c6f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1058, y: -203) equal_9e1a0f root.Std_k98ojb.Logic.Equal {}\n        input_1a8f9e -> modulo_4c5c6f.value\n        2 -> modulo_4c5c6f.divisor\n        modulo_4c5c6f.result -> equal_9e1a0f.left\n        0 -> equal_9e1a0f.right\n        equal_9e1a0f.result -> output_7c2b3d\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_4a8f6f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_1e8a9f\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_5c0d6b\n\n        instance(x: 772, y: 76) modulo_7f4c2f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1119, y: 49) equal_1a3e8c root.Std_k98ojb.Logic.Equal {}\n        input_1e8a9f -> modulo_7f4c2f.value\n        2 -> modulo_7f4c2f.divisor\n        modulo_7f4c2f.result -> equal_1a3e8c.left\n        0 -> equal_1a3e8c.right\n        equal_1a3e8c.result -> output_5c0d6b\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_7f4c2f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_1e9d8f\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_32727d.handler\n        list(List) [0, 2] -> contains_32727d.list\n        input_1e9d8f -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 0, name: \"input\") property(Number) input_1a8f5e\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c3d4b\n\n        instance(x: 1086, y: -203) modulo_2e0c2c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1058, y: -203) notequal_75283f root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        input_1a8f5e -> modulo_2e0c2c.value\n        2 -> modulo_2e0c2c.divisor\n        modulo_2e0c2c.result -> notequal_75283f.left\n        0 -> notequal_75283f.right\n        not_75283f.input -> notequal_75283f.result\n        not_75283f.result -> output_7c3d4b\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -31, y: 0, name: \"input\") property(Number) input_1a3f2e\n\n        out(x: 1234, y: 5, name: \"output\") property(Bool) output_7c6b9d\n\n        instance(x: 1088, y: -11) modulo_0f1f8c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1512, y: 4) equal_5e3a4f root.Std_k98ojb.Logic.Equal {}\n        input_1a3f2e -> modulo_0f1f8c.value\n        2 -> modulo_0f1f8c.divisor\n        0 -> equal_5e3a4f.right\n        modulo_0f1f8c.result -> equal_5e3a4f.left\n        equal_5e3a4f.result -> output_7c6b9d\n    }\n\n    \n\n    instance(x: -10, y: 22) is_even_f2a6d9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_1a9f0e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_1a9f0e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_1a9f0e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_1a9f0e -> expression_9fba8c.gen_0\n        input_1a9f0e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_0e5d4c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -31, y: 0, name: \"input\") property(Number) input_1a3f6e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: 62) modulo_cb50ae root.Std_k98ojb.Math.Modulo {}\n        instance(x: 432, y: 57) equal_9a5c0e root.Std_k98ojb.Logic.Equal {}\n        input_1a3f6e -> modulo_cb50ae.value\n        2 -> modulo_cb50ae.divisor\n        modulo_cb50ae.result -> equal_9a5c0e.left\n        0 -> equal_9a5c0e.right\n        equal_9a5c0e.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: -2, y: 11) is_even_15f9e9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_1a8e5f\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_1a8e5f -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_1a8e5f -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_1a8e5f -> expression_9fba8c.gen_0\n        input_1a8e5f -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5e4d0c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 0, name: \"input\") property(Number) input_1e9d4f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_8b2c6a\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 442, y: 57) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n        input_1e9d4f -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> equal_7836b4.left\n        0 -> equal_7836b4.right\n        equal_7836b4.result -> output_8b2c6a\n    }\n\n    \n\n    instance(x: -3, y: 11) is_even_15f9e9 root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"characters\") characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"first repeated character\") find_2d44da root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 1) tolower_634b7e root.Std_k98ojb.Strings.ToLower {}\n        characters_3c713b.characters -> find_2d44da.items\n        input_0 -> characters_3c713b.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            tolower_634b7e.output -> contains_45e806.input\n            current_afd5b1 -> contains_45e806.contains\n            input_0 -> tolower_634b7e.input\n            contains_45e806.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_2d44da.predicate\n        find_2d44da.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"characters\") characters_1a7f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"first repeated character\") find_2d4e3f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``characters_1a7f8c``_9e5b6a root.Std_k98ojb.List.Flatten {}\n        characters_1a7f8c.characters -> ``characters_1a7f8c``_9e5b6a.list\n        instance(x: -39, y: 26, name: \"seen\") list_0d2f3b root.Std_k98ojb.List.Empty {}\n        instance(x: -39, y: 257, name: \"contains\") contains_1c8e4f root.Std_k98ojb.List.Contains {}\n        ``characters_1a7f8c``_9e5b6a.list -> find_2d4e3f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Any) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``seen``_c8f3a2 root.Std_k98ojb.List.Add {}\n            current_afd5b1 -> ``seen``_c8f3a2.item\n            list_0d2f3b.list -> ``seen``_c8f3a2.list\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            contains_1c8e4f.result -> equal_a54bdc.left\n            current_afd5b1 -> contains_1c8e4f.item\n            ``seen``_c8f3a2.listWithItem -> list_0d2f3b.list\n            contains_1c8e4f.list -> list_0d2f3b.list\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_2d4e3f.predicate\n        input_0 -> characters_1a7f8c.input\n        find_2d4e3f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -288, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5e3f7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_8d4a9f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -1, y: 0) ``characters_5e3f7c`` root.Std_k98ojb.List.Slice {}\n        characters_5e3f7c.characters -> ``characters_5e3f7c``.list\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2a3c0f root.Std_k98ojb.Strings.Contains {}\n            ``characters_5e3f7c``.list -> contains_2a3c0f.input\n            current_afd5b1 -> contains_2a3c0f.contains\n            contains_2a3c0f.result -> bool_1eb6e9\n        } -> find_8d4a9f.predicate\n        ``characters_5e3f7c``.list -> find_8d4a9f.items\n        input_0 -> characters_5e3f7c.input\n        1 -> ``characters_5e3f7c``.start\n        find_8d4a9f.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) ``First repeated character_0b1361`` root.Std_k98ojb.Iteration.Filter {}\n        characters_2e1444.characters -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``First repeated character_2c8f3a`` root.Std_k98ojb.Iteration.Find {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> ``First repeated character_2c8f3a``.items\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) ``First repeated character_2c8f3a`` root.Std_k98ojb.Iteration.Filter {}\n                current_afd5b1 -> ``First repeated character_2c8f3a``.items\n                func() {\n                    in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                    out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                    instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                    input_0 -> contains_d42dce.input\n                    current_afd5b1 -> contains_d42dce.contains\n                    contains_d42dce.result -> bool_1eb6e9\n                } -> ``First repeated character_2c8f3a``.predicate\n            } -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        characters_2e1444.characters -> ``First repeated character_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``First repeated character_0b1361``.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"characters\") characters_1a7f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"first repeated character\") find_0d5e3c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) ``characters_1a7f9c`` root.Std_k98ojb.List.Contains {}\n        characters_1a7f9c.characters -> find_0d5e3c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``first repeated character_0`` root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> ``first repeated character_0``.item\n            ``characters_1a7f9c``.list -> ``first repeated character_0``.list\n            ``first repeated character_0``.slice -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_0d5e3c.predicate\n        input_0 -> characters_1a7f9c.input\n        ``characters_1a7f9c``.list -> ``characters_1a7f9c``\n        find_0d5e3c.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5e7f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4a8d6c root.Std_k98ojb.Iteration.Find {}\n        instance(x: -20, y: 50) ``characters_5e7f9c`` root.Std_k98ojb.Iteration.Filter {}\n        characters_5e7f9c.characters -> ``characters_5e7f9c``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_7f8c3a root.Std_k98ojb.Strings.Contains {}\n            ``characters_5e7f9c``.output_list -> contains_7f8c3a.input\n            current_afd5b1 -> contains_7f8c3a.contains\n            contains_7f8c3a.result -> bool_1eb6e9\n        } -> ``characters_5e7f9c``.handler\n        ``characters_5e7f9c``.output_list -> find_4a8d6c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_7f8c3a root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_7f8c3a.input\n            current_afd5b1 -> contains_7f8c3a.contains\n            contains_7f8c3a.result -> bool_1eb6e9\n        } -> find_4a8d6c.predicate\n        input_0 -> characters_5e7f9c.input\n        find_4a8d6c.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) ``First repeated character_0b1361`` root.Std_k98ojb.Iteration.Filter {}\n        characters_2e1444.characters -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``First repeated character_0b1361`` root.Std_k98ojb.Iteration.Filter {}\n            characters_2e1444.characters -> ``First repeated character_0b1361``.items\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                ``First repeated character_0b1361``.output_list -> contains_d42dce.input\n                current_afd5b1 -> contains_d42dce.contains\n                find_de624f.item -> contains_d42dce.search\n                contains_d42dce.result -> bool_1eb6e9\n            } -> ``First repeated character_0b1361``.handler\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            ``First repeated character_0b1361``.output_list -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            find_de624f.item -> contains_d42dce.search\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``First repeated character_0b1361``.handler\n        input_0 -> characters_2e1444.input\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_4e7b8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5a9d3f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -20, y: 40, name: \"seen\") list_2e4f6c = []\n        characters_4e7b8c.characters -> find_5a9d3f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2a7f0c root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_2a7f0c.input\n            list_2e4f6c -> contains_2a7f0c.contains\n            contains_2a7f0c.result -> bool_1eb6e9\n        } -> find_5a9d3f.predicate\n        instance(x: 110, y: -20) add_8b5a4c root.Std_k98ojb.List.Add {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2a7f0c root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_2a7f0c.input\n            list_2e4f6c -> contains_2a7f0c.contains\n            contains_2a7f0c.result -> bool_1eb6e9\n        } -> add_8b5a4c.execute\n        find_5a9d3f.item -> result_0\n        characters_4e7b8c.characters -> add_8b5a4c.item\n        list_2e4f6c -> add_8b5a4c.list\n        input_0 -> characters_4e7b8c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) ``First repeated character_0b1361`` root.Std_k98ojb.Iteration.Filter {}\n        characters_2e1444.characters -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``First repeated character_2c8f7a`` root.Std_k98ojb.Iteration.Find {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> ``First repeated character_2c8f7a``.items\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) ``First repeated character_2c8f7a`` root.Std_k98ojb.Iteration.Filter {}\n                current_afd5b1 -> ``First repeated character_2c8f7a``.items\n                func() {\n                    in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                    out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                    instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                    input_0 -> contains_d42dce.input\n                    current_afd5b1 -> contains_d42dce.contains\n                    contains_d42dce.result -> bool_1eb6e9\n                } -> ``First repeated character_2c8f7a``.predicate\n            } -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        characters_2e1444.characters -> ``First repeated character_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``First repeated character_0b1361``.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"characters\") characters_1a2d3c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"first repeated character\") find_4f5e6d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``characters_1a2d3c``_8f7b9e root.Std_k98ojb.List.Flatten {}\n        characters_1a2d3c.characters -> ``characters_1a2d3c``_8f7b9e.list\n        instance(x: -39, y: 26, name: \"list\") list_09fcba root.Std_k98ojb.List.Empty {}\n        instance(x: -39, y: 257, name: \"seen\") seen_0a1b2c root.Std_k98ojb.List.Empty {}\n        ``characters_1a2d3c``_8f7b9e.output -> find_4f5e6d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            seen_0a1b2c -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_4f5e6d.predicate\n        instance(x: 532, y: 147) list_add_7e1ce0 root.Std_k98ojb.List.Add {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            seen_0a1b2c -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> list_add_7e1ce0.execute\n        input_0 -> characters_1a2d3c.input\n        find_4f5e6d.item -> output_ebef81\n        current_afd5b1 -> list_add_7e1ce0.item\n        list_add_7e1ce0.listWithItem -> seen_0a1b2c\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3b2d8c root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -1) list_remove_7e6f9a root.Std_k98ojb.List.Remove {}\n            min_3b2d8c.items -> list_remove_7e6f9a.list\n            min_3b2d8c.min -> list_remove_7e6f9a.index\n            list_remove_7e6f9a.resultWithoutItem -> find_6d05b0.items\n            elem_9f6850 -> notequal_807ffd.right\n            list_remove_7e6f9a.resultWithoutItem -> min_3b2d8c.items\n            0 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3e8c1d root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -50) list_remove_7a9f2f root.Std_k98ojb.List.Remove {}\n            min_3e8c1d.items -> list_remove_7a9f2f.list\n            find_6d05b0.index -> list_remove_7a9f2f.index\n            list_remove_7a9f2f.listWithoutItem -> min_3e8c1d.items\n            elem_9f6850 -> notequal_807ffd.right\n            min_3e8c1d.min -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -288, y: -0, name: \"list\") property(List) list_9f5a6e\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1d3c8e root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -45) list_remove_2a7f5c root.Std_k98ojb.List.Remove {}\n            min_1d3c8e.items -> list_remove_2a7f5c.list\n            find_6d05b0.index -> list_remove_2a7f5c.index\n            list_remove_2a7f5c.listWithoutItem -> min_1d3c8e.items\n            elem_9f6850 -> notequal_807ffd.right\n            min_1d3c8e.min -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f5a6e -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_2c1b6e root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -113) list_remove_7f3d8a root.Std_k98ojb.List.Remove {}\n            min_2c1b6e.items -> list_remove_7f3d8a.list\n            0 -> list_remove_7f3d8a.index\n            list_remove_7f3d8a.listWithoutItem -> min_2c1b6e.items\n            elem_9f6850 -> notequal_807ffd.right\n            min_2c1b6e.min -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3e6c1d root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -113) list_remove_2a7f8c root.Std_k98ojb.List.Remove {}\n            min_3e6c1d.items -> list_remove_2a7f8c.list\n            elem_9f6850 -> list_remove_2a7f8c.index\n            list_remove_2a7f8c.listWithoutItem -> min_3e6c1d.items\n            min_3e6c1d.min -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: -0, name: \"list\") property(List) list_9a5f3e\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_8c6b7d\n\n        instance(x: 0, y: 0) min_2f4b4c root.Std_k98ojb.List.Min {}\n        list_9a5f3e -> min_2f4b4c.items\n        instance(x: -1, y: 0) filter_6d05b0 root.Std_k98ojb.Query.Filter {\n            where: \"it != min\"\n        }\n        func() {\n            in(x: -113, y: 34, name: \"min\") property(Number) min_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) notequal_1088d5 root.Std_k98ojb.Logic.NotEqual {}\n            min_2f4b4c.min -> notequal_1088d5.left\n            min_9f6850 -> notequal_1088d5.right\n            notequal_1088d5.result -> bool_af09a7\n        } -> filter_6d05b0.handler\n        list_9a5f3e -> filter_6d05b0.list\n        instance(x: 0, y: 0) min_2f4b4c_1 root.Std_k98ojb.List.Min {}\n        filter_6d05b0.result -> min_2f4b4c_1.items\n        min_2f4b4c_1.min -> number_8c6b7d\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1c3b2d root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -60) list_remove_4f8e5a root.Std_k98ojb.List.Remove {}\n            min_1c3b2d.items -> list_remove_4f8e5a.list\n            0 -> list_remove_4f8e5a.index\n            list_remove_4f8e5a.listWithoutItem -> min_1c3b2d.items\n            elem_9f6850 -> notequal_807ffd.right\n            min_1c3b2d.min -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: -193, name: \"items\") property(List) items_ai\n        out(x: 46, y: 158, name: \"second_min\") property(Number) second_min_9f7759\n\n        instance(x: -105, y: -110) min_node root.Std_k98ojb.List.Min {}\n        instance(x: -105, y: 111) remove_node root.Std_k98ojb.List.Remove {}\n        instance(x: -105, y: 222) min2_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> min_node.items\n        min_node.min -> remove_node.index\n        items_ai -> remove_node.list\n        remove_node.listWithoutItem -> min2_node.items\n\n        min2_node.min -> second_min_9f7759\n    }\n\n    \n\n    instance(x: -174, y: -63) second_smallest_d6e930 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1c3b4e root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -90) list_remove_7f8a2d root.Std_k98ojb.List.Remove {}\n            min_1c3b4e.items -> list_remove_7f8a2d.list\n            0 -> list_remove_7f8a2d.index\n            list_remove_7f8a2d.listWithoutItem -> min_1c3b4e.items\n            elem_9f6850 -> notequal_807ffd.right\n            min_1c3b4e.min -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3e8c2d root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 311, y: -1) list_remove_7a9f6f root.Std_k98ojb.List.Remove {}\n            min_3e8c2d.items -> list_remove_7a9f6f.list\n            find_6d05b0.index -> list_remove_7a9f6f.index\n            list_remove_7a9f6f.listWithoutItem -> min_3e8c2d.items\n            elem_9f6850 -> notequal_807ffd.right\n            min_3e8c2d.min -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_RAG_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15910,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -475, y: -206, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_6b3d5c\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_4d1a8f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_4d1a8f\n        ifexpression_875761.value -> output_4d1a8f\n        list1_8a2f9e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_6b3d5c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        list1_8a2f9e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_6b3d5c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_7f9b6d root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -325, y: -206, name: \"list1\") property(List) list1_9e3b8f\n        in(x: -333, y: 20, name: \"list2\") property(List) list2_5c0d7a\n\n        out(x: 1266, y: -197, name: \"output\") property(Bool) output_4b1f9e\n\n        instance(x: 1058, y: -201) intersection_3f2c6c root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3b8f -> intersection_3f2c6c.left\n        list2_5c0d7a -> intersection_3f2c6c.right\n        instance(x: 1054, y: -25) notempty_c6e7ee root.Std_k98ojb.List.NotEmpty {}\n        intersection_3f2c6c.intersect -> notempty_c6e7ee.list\n        notempty_c6e7ee.isEmpty -> output_4b1f9e\n    }\n\n    \n\n    instance(x: -290, y: 0) common_element_8a5d4f root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -333, y: -184, name: \"list1\") property(List) list1_9a2f6d\n        in(x: -342, y: 39, name: \"list2\") property(List) list2_7b4c5e\n\n        out(x: 1218, y: 40, name: \"output\") property(Bool) output_3f1b9a\n\n        instance(x: 1066, y: -20) contains_0d8c93 root.Std_k98ojb.List.Contains {}\n        instance(x: 1057, y: 113) ifexpression_5e2f4f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous\"\n        }\n        getter(x: 679, y: 147, name: \"getter_3c8a9d\") getter_3c8a9d = previous\n        setter(x: -0, y: -121, name: \"setter_1b7f6e\") setter_1b7f6e = previous\n        instance(x: 321, y: -20) for_4a2e5f root.Std_k98ojb.Std.For {}\n        setter(x: -275, y: -35, name: \"setter_1b7f6e\") setter_9c0d8e = previous\n        instance(x: -490, y: -50, name: \"getat\") getat_5a2b3f root.Std_k98ojb.List.GetAt {}\n        ifexpression_5e2f4f.else -> contains_0d8c93.execute\n        ifexpression_5e2f4f.value -> output_3f1b9a\n        ifexpression_5e2f4f.then -> setter_1b7f6e.execute\n        list1_9a2f6d -> for_4a2e5f.items\n        for_4a2e5f.item -> ifexpression_5e2f4f.gen_2\n        for_4a2e5f.index -> ifexpression_5e2f4f.gen_0\n        getter_3c8a9d.value -> ifexpression_5e2f4f.gen_1\n        for_4a2e5f.onItem -> ifexpression_5e2f4f.execute\n        for_4a2e5f.done -> contains_0d8c93.list\n        list2_7b4c5e -> contains_0d8c93.list\n        for_4a2e5f.item -> setter_1b7f6e.new_value\n        list1_9a2f6d -> getat_5a2b3f.list\n        0 -> getat_5a2b3f.index\n        getat_5a2b3f.itemAtIndex -> setter_9c0d8e.new_value\n        contains_0d8c93.is_contained -> output_3f1b9a\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_7c4d6f root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -465, y: -235, name: \"list1\") property(List) list_3a8f6e\n        in(x: -485, y: 30, name: \"list2\") property(List) list_7c9b5d\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_1a0e3c\n\n        instance(x: 752, y: 93) intersection_8f6a4f root.Std_k98ojb.Sets.Intersection {}\n        list_3a8f6e -> intersection_8f6a4f.left\n        list_7c9b5d -> intersection_8f6a4f.right\n        instance(x: 1218, y: 147) notempty_1f0e2a root.Std_k98ojb.List.NotEmpty {}\n        intersection_8f6a4f.intersection -> notempty_1f0e2a.list\n        notempty_1f0e2a.isEmpty -> output_1a0e3c\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_7b5d9f root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -333, y: -186, name: \"list1\") property(List) list1_9a2b4f\n        in(x: -339, y: 30, name: \"list2\") property(List) list2_5e7d0c\n\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_6c1c9a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -285, y: -86, name: \"list1\") property(List) list1_3af6ba\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_5a9d8f root.Std_k98ojb.List.NotEmpty {}\n        list1_3af6ba -> intersection_c7c7e6.left\n        list2_c62075 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_5a9d8f.list\n        notempty_5a9d8f.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_ac7dfb root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -387, y: -214, name: \"list1\") property(List) list1_0e9b5f\n        in(x: -391, y: 28, name: \"list2\") property(List) list2_8c7d3a\n\n        out(x: 1234, y: 10, name: \"output\") property(Bool) output_e6c1ee\n\n        instance(x: 1060, y: -204) contains_5b9f6e root.Std_k98ojb.List.Contains {}\n        instance(x: 1078, y: 34) intersection_7a2d3c root.Std_k98ojb.Sets.Intersection {}\n        list1_0e9b5f -> intersection_7a2d3c.left\n        list2_8c7d3a -> intersection_7a2d3c.right\n        intersection_7a2d3c.intersect -> contains_5b9f6e.list\n        0 -> contains_5b9f6e.item\n        contains_5b9f6e.is_contained -> output_e6c1ee\n    }\n\n    \n\n    instance(x: -296, y: -7) common_element_8d2a4c root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -325, y: -205, name: \"list1\") property(List) list1_9e3f5d\n        in(x: -323, y: 27, name: \"list2\") property(List) list2_7a4c6b\n\n        out(x: 1220, y: 15, name: \"output\") property(Bool) output_8f1b9e\n\n        instance(x: 1023, y: -21) intersection_5d8c7c root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3f5d -> intersection_5d8c7c.left\n        list2_7a4c6b -> intersection_5d8c7c.right\n        instance(x: 1050, y: -131) notempty_4e5a1f root.Std_k98ojb.List.NotEmpty {}\n        intersection_5d8c7c.intersection -> notempty_4e5a1f.list\n        notempty_4e5a1f.isEmpty -> output_8f1b9e\n    }\n\n    \n\n    instance(x: -297, y: 0) common_element_3f6c2f root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -464, y: -232, name: \"list1\") property(List) list1_4a2e6f\n        in(x: -482, y: 30, name: \"list2\") property(List) list2_7b8c9d\n\n        out(x: 1225, y: 5, name: \"output\") property(Bool) output_3f1b4a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_3f1b4a\n        ifexpression_875761.value -> output_3f1b4a\n        list1_4a2e6f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_7b8c9d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        list1_4a2e6f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_7b8c9d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_f3f5b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -299, y: -216, name: \"list1\") property(List) list1_3a0f6e\n        in(x: -311, y: 19, name: \"list2\") property(List) list2_9c4b5d\n\n        out(x: 1237, y: -208, name: \"output\") property(Bool) output_8c1b3a\n\n        instance(x: 1040, y: -206) contains_6e2f4c root.Std_k98ojb.List.Contains {}\n        instance(x: 349, y: -207) filter_7d5b9c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Any) current_1e3a8f\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_2c9d5b\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_4e6f0f\n\n            instance(x: 226, y: 56) contains_1a8c7f root.Std_k98ojb.List.Contains {}\n            list2_9c4b5d -> contains_1a8c7f.list\n            current_1e3a8f -> contains_1a8c7f.item\n            contains_1a8c7f.is_contained -> output_4e6f0f\n        } -> filter_7d5b9c.handler\n        list1_3a0f6e -> filter_7d5b9c.items\n        filter_7d5b9c.output_list -> contains_6e2f4c.list\n        true -> contains_6e2f4c.item\n        contains_6e2f4c.is_contained -> output_8c1b3a\n    }\n\n    \n\n    instance(x: -293, y: 5) has_common_element_7d9f0f root.main.has_common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -535, y: 5, name: \"list\") property(List) list_4f8a3e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_4f8a3e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_4f8a3e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_3a5b7f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -526, y: 3, name: \"list\") property(List) list_1a8f2e\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c5b6d\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        list_1a8f2e -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name=\"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name=\"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_7c5b6d\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_9a4dad root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -489, y: 3, name: \"list\") property(List) list_1a8d6e\n\n        out(x: 1219, y: 4, name: \"output\") property(Bool) output_7f5c2b\n\n        instance(x: 752, y: -13) ifexpression_3a0f8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 120, name: \"getter_7e5d4c\") getter_7e5d4c = previous\n        setter(x: 679, y: -313, name: \"setter_8b9f2a\") setter_8b9f2a = previous\n        instance(x: 321, y: -20) for_1e0c3f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_8b9f2a\") setter_4d6f7c = previous\n        instance(x: -275, y: -35) getat_1e5c3f root.Std_k98ojb.List.GetAt {}\n        ifexpression_3a0f8c.else -> continue_a96db6\n        ifexpression_3a0f8c.value -> output_7f5c2b\n        ifexpression_3a0f8c.then -> setter_8b9f2a.execute\n        list_1a8d6e -> for_1e0c3f.items\n        for_1e0c3f.item -> ifexpression_3a0f8c.gen_2\n        for_1e0c3f.index -> ifexpression_3a0f8c.gen_0\n        getter_7e5d4c.value -> ifexpression_3a0f8c.gen_1\n        for_1e0c3f.onItem -> ifexpression_3a0f8c.execute\n        for_1e0c3f.done -> continue_a96db6\n        for_1e0c3f.item -> setter_8b9f2a.new_value\n        list_1a8d6e -> getat_1e5c3f.list\n        0 -> getat_1e5c3f.index\n        getat_1e5c3f.itemAtIndex -> setter_4d6f7c.new_value\n        execute_90aaec -> setter_4d6f7c.execute\n        setter_4d6f7c.continue -> for_1e0c3f.reset\n        setter_8b9f2a.continue -> for_1e0c3f.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_5f8d4b root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -569, y: 438, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"output\") property(Bool) output_57c890\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_542a51 -> filter_f3b46d.list\n        filter_f3b46d.result -> firstitem_870503.list\n        list_542a51 -> filter_4d4556.list\n        filter_4d4556.result -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) is_consecutive_f21f44 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3af6ba -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3af6ba -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -521, y: 2, name: \"list\") property(List) list_1a8f9e\n\n        out(x: 1265, y: -7, name: \"output\") property(Bool) output_eb3c6d\n\n        instance(x: 847, y: -4) contains_0b2f1f root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -6, name: \"transform numbers to true/false\") map_8e7a5c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: 0) not_9f3d4a root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_1c7e5e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_2a9f3d\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_4b8f6d\n\n            instance(x: 226, y: 56) sub_5c7e1a root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_3d9f2b root.Std_k98ojb.Logic.NotEqual {}\n            current_1c7e5e -> sub_5c7e1a.first\n            _index_2a9f3d -> sub_5c7e1a.second\n            sub_5c7e1a.result -> notequal_3d9f2b.left\n            1 -> notequal_3d9f2b.right\n            notequal_3d9f2b.result -> output_4b8f6d\n        } -> map_8e7a5c.handler\n        list_1a8f9e -> map_8e7a5c.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_3b2f4d\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_6c8e7a\n\n            instance(x: 74, y: -23) sub_9d7e5b root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) notequal_1f3d2b root.Std_k98ojb.Logic.NotEqual {}\n            current_3b2f4d -> sub_9d7e5b.first\n            _index_769593 -> sub_9d7e5b.second\n            sub_9d7e5b.result -> notequal_1f3d2b.left\n            1 -> notequal_1f3d2b.right\n            notequal_1f3d2b.result -> bool_6c8e7a\n        } -> map_8e7a5c.handler\n        map_8e7a5c.output_list -> contains_0b2f1f.list\n        false -> contains_0b2f1f.item\n        not_9f3d4a.result -> output_eb3c6d\n        contains_0b2f1f.is_contained -> not_9f3d4a.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_7a4dad root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -529, y: 5, name: \"list\") property(List) list_1f3a2e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_1f3a2e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1f3a2e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_3a7b5c root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -515, y: 1, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -485, y: 30, name: \"list\") property(List) list_5f3a6b\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_9d4e1c\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_9d4e1c\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_5f3a6b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_5f3a6b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_f7b3a5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -485, y: 30, name: \"list\") property(List) list_1f8e3a\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_9b4c2d\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_6b0c1f\n\n        instance(x: 752, y: 93) ifexpression_7e5a3a root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_8f9c2d\") getter_8f9c2d = previous\n        setter(x: 679, y: -313, name: \"setter_5b3a6e\") setter_5b3a6e = previous\n        instance(x: 321, y: -20) for_1d7f4a root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_5b3a6e\") setter_d8c9f2 = previous\n        instance(x: -275, y: -35) getat_3b1d7e root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e5a3a.else -> continue_9b4c2d\n        ifexpression_7e5a3a.value -> output_6b0c1f\n        ifexpression_7e5a3a.then -> setter_5b3a6e.execute\n        list_1f8e3a -> for_1d7f4a.items\n        for_1d7f4a.item -> ifexpression_7e5a3a.gen_2\n        for_1d7f4a.index -> ifexpression_7e5a3a.gen_0\n        getter_8f9c2d.value -> ifexpression_7e5a3a.gen_1\n        for_1d7f4a.onItem -> ifexpression_7e5a3a.execute\n        for_1d7f4a.done -> continue_9b4c2d\n        for_1d7f4a.item -> setter_5b3a6e.new_value\n        list_1f8e3a -> getat_3b1d7e.list\n        0 -> getat_3b1d7e.index\n        getat_3b1d7e.itemAtIndex -> setter_d8c9f2.new_value\n        execute_90aaec -> setter_d8c9f2.execute\n        setter_d8c9f2.continue -> for_1d7f4a.reset\n        setter_5b3a6e.continue -> for_1d7f4a.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_0e8f6 root.main.is_consecutive {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -475, y: 20, name: \"sublist\") property(List) sublist_5a9f1e\n        in(x: -476, y: -205, name: \"list\") property(List) list_3b0c6d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"index\") count_9d4f1c root.Std_k98ojb.Std.Count {}\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == sublist.length\"\n        }\n        instance(x: 679, y: -313, name: \"previous\") setter_9d4f1c root.Std_k98ojb.Setting.Setter {}\n        instance(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3b0c6d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3b0c6d -> getat_ce2a48.list\n        count_9d4f1c.count -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        sublist_5a9f1e -> count_9d4f1c.items\n        execute -> count_9d4f1c.reset\n        continue_a96db6 -> for_d26972.next\n        setter_9d4f1c.continue -> for_d26972.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -420, y: 20, name: \"list1\") property(List) list1_3a0b9f\n        in(x: -428, y: 120, name: \"list2\") property(List) list2_5c8d7e\n\n        out(x: 1016, y: 95, name: \"output\") property(Bool) output_4a1f3f\n\n        instance(x: -179, y: 94, name: \"sublists of list1\") map_9b2e5c root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> map_9b2e5c.handler\n        list1_3a0b9f -> map_9b2e5c.items\n        instance(x: 243, y: -15) contains_32727d root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_32727d.handler\n        map_9b2e5c.output_list -> contains_32727d.list\n        list2_5c8d7e -> contains_32727d.item\n        contains_32727d.is_contained -> output_4a1f3f\n    }\n\n    \n\n    instance(x: -67, y: 59) is_sublist_6b9f0f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -400, y: 10, name: \"list1\") property(List) list1_3a0f6b\n        in(x: -398, y: -154, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 0, y: -95) contains_32727d root.Std_k98ojb.List.Contains {}\n        list1_3a0f6b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n            list1_42bc6f -> modulo_4e8c54.value\n            list2_1d86d4 -> modulo_4e8c54.divisor\n            modulo_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n        contains_32727d.item -> list1_3a0f6b\n        zip_201051.zipped -> contains_32727d.list\n        contains_32727d.is_contained -> output_e245cb\n    }\n\n    \n\n    instance(x: 93, y: -122) is_sublist_cbc0b6 root.main.is_sublist {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -445, y: 5, name: \"list1\") property(List) list1_3f0b6a\n        in(x: -443, y: -155, name: \"list2\") property(List) list2_7c8d9e\n\n        out(x: 1174, y: -110, name: \"output\") property(Bool) output_5f1a3d\n\n        instance(x: -194, y: -115, name: \"length of list1\") length_6b0f2f root.Std_k98ojb.List.Length {}\n        instance(x: 102, y: -116) contains_7e4c9f root.Std_k98ojb.List.Contains {}\n        instance(x: 428, y: -117) greaterthan_3a1d5f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 647, y: -118) sub_6c8a0e root.Std_k98ojb.Math.Sub {}\n        instance(x: 869, y: -119) for_7a9b2f root.Std_k98ojb.Std.For {}\n        instance(x: 1095, y: -120) slice_3d4f1f root.Std_k98ojb.List.Slice {}\n        list1_3f0b6a -> length_6b0f2f.list\n        func() {\n            in(x: -10, y: -25, name: \"current\") property(Number) _index_9e7c5d\n\n            out(x: 708, y: -28, name: \"output\") property(Bool) output_3b1a4f\n\n            instance(x: 226, y: -29) slice_8c2c6f root.Std_k98ojb.List.Slice {}\n            instance(x: 449, y: -30) contains_9e7d5f root.Std_k98ojb.List.Contains {}\n            _index_9e7c5d -> sub_6c8a0e.first\n            length_6b0f2f.length -> sub_6c8a0e.second\n            1 -> slice_8c2c6f.end\n            list2_7c8d9e -> slice_8c2c6f.list\n            _index_9e7c5d -> slice_8c2c6f.start\n            contains_9e7d5f.item -> list1_3f0b6a\n            slice_8c2c6f.slice -> contains_9e7d5f.list\n            contains_9e7d5f.is_contained -> output_3b1a4f\n        } -> for_7a9b2f.handler\n        list2_7c8d9e -> slice_3d4f1f.list\n        0 -> slice_3d4f1f.start\n        sub_6c8a0e.result -> slice_3d4f1f.end\n        slice_3d4f1f.slice -> for_7a9b2f.items\n        greaterthan_3a1d5f.left -> length_6b0f2f.length\n        0 -> greaterthan_3a1d5f.right\n        contains_7e4c9f.item -> list1_3f0b6a\n        slice_3d4f1f.slice -> contains_7e4c9f.list\n        for_7a9b2f.output_list -> output_5f1a3d\n        greaterthan_3a1d5f.result -> contains_7e4c9f.is_contained\n    }\n\n    \n\n    instance(x: -63, y: 61) is_sublist_8c0b6a root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 5, name: \"list1\") property(List) list1_2a9b3f\n        in(x: -467, y: 145, name: \"list2\") property(List) list2_6e8d0c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_2a9b3f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_6e8d0c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -427, y: 0, name: \"sublist\") property(List) sublist_1e8f6d\n        in(x: -425, y: 176, name: \"list\") property(List) list_3a7c2b\n\n        out(x: 1075, y: 91, name: \"output\") property(Bool) output_9e4c0f\n\n        instance(x: -172, y: 95, name: \"is sublist\") filter_1d8b6f root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            sublist_1e8f6d -> contains_32727d.list\n            _index_769593 -> list_3a7c2b.getAt.index\n            list_3a7c2b.getAt.itemAtIndex -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> filter_1d8b6f.handler\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            sublist_1e8f6d -> contains_32727d.list\n            _index_769593 -> list_3a7c2b.getAt.index\n            list_3a7c2b.getAt.itemAtIndex -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> filter_1d8b6f.handler\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            sublist_1e8f6d -> contains_32727d.list\n            _index_769593 -> list_3a7c2b.getAt.index\n            list_3a7c2b.getAt.itemAtIndex -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> filter_1d8b6f.handler\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            sublist_1e8f6d -> contains_32727d.list\n            _index_769593 -> list_3a7c2b.getAt.index\n            list_3a7c2b.getAt.itemAtIndex -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> filter_1d8b6f.handler\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            sublist_1e8f6d -> contains_32727d.list\n            _index_769593 -> list_3a7c2b.getAt.index\n            list_3a7c2b.getAt.itemAtIndex -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> filter_1d8b6f.handler\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            sublist_1e8f6d -> contains_32727d.list\n            _index_769593 -> list_3a7c2b.getAt.index\n            list_3a7c2b.getAt.itemAtIndex -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> filter_1d8b6f.handler\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            sublist_1e8f6d -> contains_32727d.list\n            _index_769593 -> list_3a7c2b.getAt.index\n            list_3a7c2b.getAt.itemAtIndex -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> filter_1d8b6f.handler\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            sublist_1e8f6d -> contains_32727d.list\n            _index_769593 -> list_3a7c2b.getAt.index\n            list_3a7c2b.getAt.itemAtIndex -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> filter_1d8b6f.handler\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            sublist_1e8f6d -> contains_32727d.list\n            _index_769593 -> list_3a7c2b.getAt.index\n            list_3a7c2b.getAt.itemAtIndex -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> filter_1d8b6f.handler\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 40, name: \"list1\") property(List) list1_5e9b2f\n        in(x: -286, y: -133, name: \"list2\") property(List) list2_6c7d8a\n\n        out(x: 553, y: -124, name: \"output\") property(Bool) output_3f4b0e\n\n        instance(x: -90, y: -123) contains_5a9c1c root.Std_k98ojb.List.Contains {}\n        instance(x: 146, y: -122) length_7d8f6f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -121) greaterthan_3e4a0f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 480, y: -120) sub_1c2f9d root.Std_k98ojb.List.Slice {}\n        list1_5e9b2f -> contains_5a9c1c.list\n        func() {\n            in(x: -0, y: -16, name: \"current\") property(Number) current_6f7b3f\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_6f7b3f -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> sub_1c2f9d.handler\n        list2_6c7d8a -> sub_1c2f9d.list\n        contains_5a9c1c.item -> sub_1c2f9d.start\n        length_7d8f6f.length -> greaterthan_3e4a0f.left\n        0 -> greaterthan_3e4a0f.right\n        greaterthan_3e4a0f.result -> contains_5a9c1c.execute\n        sub_1c2f9d.slice -> contains_5a9c1c.item\n        contains_5a9c1c.is_contained -> output_3f4b0e\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_7a4dad root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -400, y: 20, name: \"list1\") property(List) list1_2e8f5b\n        in(x: -408, y: 128, name: \"list2\") property(List) list2_9a3c0d\n\n        out(x: 1056, y: 83, name: \"output\") property(Bool) output_4b1b7e\n\n        instance(x: -148, y: 78, name: \"length of list2\") length_5f8c4f root.Std_k98ojb.List.Length {}\n        instance(x: 524, y: 84) contains_3d6a0c root.Std_k98ojb.List.Contains {}\n        instance(x: -148, y: 20) slice_9e7b1f root.Std_k98ojb.List.Slice {}\n        list2_9a3c0d -> length_5f8c4f.list\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_efbc78\n\n            instance(x: 226, y: 56) add_1e8c0f root.Std_k98ojb.List.Add {}\n            instance(x: 463, y: 51) sub_2d5a6c root.Std_k98ojb.Math.Sub {}\n            _index_170471 -> sub_2d5a6c.second\n            length_5f8c4f.length -> sub_2d5a6c.first\n            slice_9e7b1f.start -> add_1e8c0f.new_value\n            list1_2e8f5b -> add_1e8c0f.list\n            sub_2d5a6c.result -> slice_9e7b1f.end\n            -1 -> slice_9e7b1f.end\n            0 -> slice_9e7b1f.start\n            add_1e8c0f.listWithItem -> output_efbc78\n        } -> slice_9e7b1f.index\n        list1_2e8f5b -> contains_3d6a0c.list\n        slice_9e7b1f.slice -> contains_3d6a0c.item\n        contains_3d6a0c.is_contained -> output_4b1b7e\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 10, name: \"subList\") property(List) sub_list_3a6b8f\n        in(x: -283, y: -140, name: \"mainList\") property(List) main_list_7e4c9d\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        sub_list_3a6b8f -> intersection_c7c7e6.left\n        main_list_7e4c9d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        sub_list_3a6b8f -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 0, name: \"sublist\") property(List) sublist_2a3f6b\n        in(x: -284, y: 170, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: 59, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: 64) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 63) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 62) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        sublist_2a3f6b -> intersection_c7c7e6.left\n        list_3af6ba -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        sublist_2a3f6b -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 229) is_sublist_ac7dfb root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a1b8e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c2f5d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 36, name: \"index\") property(Number) index_7e5a8c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_3b0f6d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7e5a8c -> add_3b0f6d.first\n            1 -> add_3b0f6d.second\n            add_3b0f6d.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3a1b8e -> find_6d05b0.items\n        find_6d05b0.item -> missing_7c2f5d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 46, y: 158, name: \"missing\") property(Number) missing_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"list.length == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = missing\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = missing\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = missing\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[0] != 1\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = missing\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = missing\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = missing\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"list.length == 1\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = missing\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = missing\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = missing\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[0] + 1 == list[1]\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = missing\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = missing\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = missing\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"list.length > 1\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = missing\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = missing\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = missing\n\n        list_9f7759 -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> missing_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        1 -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        list_9f7759 -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> missing_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        1 -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        list_9f7759 -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> missing_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        1 -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        list_9f7759 -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> missing_b2508f\n        ifexpression_e38995.then -> setter_37db7f.execute\n        ifexpression_e38995.else -> setter_1cedb2.execute\n        list_9f7759 -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> missing_b2508f\n        ifexpression_e38995.then -> setter_37db7f.execute\n        instance(x: -105, y: -110) forloop_6e1b5a root.Std_k98ojb.Std.For {\n            items: \"list\"\n        }\n        instance(x: 0, y: 0) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[i] + 1 != list[i+1]\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = missing\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = missing\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = missing\n\n        forloop_6e1b5a.items -> list_9f7759\n        ifexpression_e38995.gen_0 -> forloop_6e1b5a.index\n        getter_9cceb3.value -> missing_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        list_9f7759[i] + 1 -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        forloop_6e1b5a.next -> ifexpression_e38995.execute\n        forloop_6e1b5a.done -> continue_685c8f\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) find_missing_d6e930 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 159, y: 77, name: \"missing\") property(Number) missing_f9110a\n\n        instance(x: 426, y: 76) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n            in(x: -103, y: 44, name: \"item\") property(Number) item_af09a7\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3bc2ae\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            item_af09a7 -> notequal_807ffd.right\n            add_1088d5.result -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_3bc2ae\n        } -> find_missing_node.predicate\n        list_9f7759 -> find_missing_node.items\n        index_9f6850 -> find_missing_node.index\n        item_af09a7 -> find_missing_node.item\n        find_missing_node.item -> missing_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -116, y: 44, name: \"index\") property(Number) index_ae8c7a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_2b0f6d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_ae8c7a -> add_2b0f6d.first\n            1 -> add_2b0f6d.second\n            elem_9f6850 -> notequal_807ffd.right\n            add_2b0f6d.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        index_ae8c7a -> find_6d05b0.index\n        add_2b0b5d.first -> missing_f9110a\n        1 -> add_2b0b5d.second\n        index_ae8c7a -> add_2b0b5d.first\n        find_6d05b0.item -> add_2b0b5d.second\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1f8b3a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_2e4c7d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -116, y: 1, name: \"index\") property(Number) index_3e8c7a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_2b0d5f root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_3e8c7a -> add_2b0d5f.first\n            1 -> add_2b0d5f.second\n            add_2b0d5f.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_1f8b3a -> find_6d05b0.items\n        find_6d05b0.index -> missing_2e4c7d\n        find_6d05b0.item -> missing_2e4c7d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_3a8f9e root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -283, y: 0, name: \"list\") property(List) list_3a9f8e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7b5c6d\n\n        instance(x: 0, y: 0) find_2e4a4f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 35, name: \"index\") property(Number) index_8c7a2e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_3f5b4d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_8c7a2e -> add_3f5b4d.first\n            1 -> add_3f5b4d.second\n            add_3f5b4d.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_2e4a4f.predicate\n        list_3a9f8e -> find_2e4a4f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_3f5b4d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_8c7a2e -> add_3f5b4d.first\n            1 -> add_3f5b4d.second\n            add_3f5b4d.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_2e4a4f.context\n        find_2e4a4f.item -> missing_7b5c6d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1c8b3f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 0, name: \"list\") property(List) list_9d8f3a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_6e7c5b\n\n        instance(x: 0, y: 0) find_2f4a1e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_8d6b3c\n            in(x: -116, y: -45, name: \"index\") property(Number) index_7f5a9e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1b2c4d\n\n            instance(x: 89, y: 29) sub_3a8f6b root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_5e9d7f root.Std_k98ojb.Logic.NotEqual {}\n            index_7f5a9e -> sub_3a8f6b.first\n            elem_8d6b3c -> sub_3a8f6b.second\n            1 -> notequal_5e9d7f.right\n            sub_3a8f6b.result -> notequal_5e9d7f.left\n            notequal_5e9d7f.result -> bool_1b2c4d\n        } -> find_2f4a1e.predicate\n        list_9d8f3a -> find_2f4a1e.items\n        find_2f4a1e.item -> missing_6e7c5b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_8f3b2c root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 0, name: \"list\") property(List) list_9f8d5a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 35, name: \"index\") property(Number) index_7e3d5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7e3d5a -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f8d5a -> find_6d05b0.items\n        find_6d05b0.index -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1a3b8f\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_9c6d7e\n\n        instance(x: 0, y: 0) find_4b2f5f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_3a8c9d\n            in(x: -108, y: 112, name: \"item\") property(Number) item_7f2e1b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5d6f4a\n\n            instance(x: 89, y: 29) add_8c3f9a root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_2e1f7b root.Std_k98ojb.Logic.NotEqual {}\n            index_3a8c9d -> add_8c3f9a.first\n            1 -> add_8c3f9a.second\n            item_7f2e1b -> notequal_2e1f7b.right\n            add_8c3f9a.result -> notequal_2e1f7b.left\n            notequal_2e1f7b.result -> bool_5d6f4a\n        } -> find_4b2f5f.predicate\n        list_1a3b8f -> find_4b2f5f.items\n        add_8c3f9a.result -> missing_9c6d7e\n        index_3a8c9d -> add_8c3f9a.first\n        0 -> index_3a8c9d\n        find_4b2f5f.index -> index_3a8c9d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_7e1f6b root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9e3b1a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c2d6f\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -110, y: 39, name: \"index\") property(Number) index_7e3d5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_2c9b6f root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7e3d5a -> add_2c9b6f.first\n            1 -> add_2c9b6f.second\n            add_2c9b6f.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9e3b1a -> find_6d05b0.items\n        find_6d05b0.item -> missing_7c2d6f\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -124, y: 0, name: \"input\") property(String) input_9f8a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1b4c5e\n\n        instance(x: 0, y: 1) replace_7a6d1e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3f9c2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4e8f5a root.Std_k98ojb.Strings.Replace {}\n        input_9f8a3d -> replace_7a6d1e.input\n        \" \" -> replace_7a6d1e.search\n        \":\" -> replace_7a6d1e.replace\n        replace_7a6d1e.output -> replace_3f9c2d.input\n        \",\" -> replace_3f9c2d.search\n        \":\" -> replace_3f9c2d.replace\n        replace_3f9c2d.output -> replace_4e8f5a.input\n        \".\" -> replace_4e8f5a.search\n        \":\" -> replace_4e8f5a.replace\n        replace_4e8f5a.output -> output_1b4c5e\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -1489, y: 0, name: \"input\") property(String) input_1a3b8f\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5e4c6d\n\n        instance(x: 0, y: 1) replace_9a7b5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3f8b2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6e4b1a root.Std_k98ojb.Strings.Replace {}\n        input_1a3b8f -> replace_9a7b5c.input\n        \" \" -> replace_9a7b5c.search\n        \":\" -> replace_9a7b5c.replace\n        replace_9a7b5c.output -> replace_3f8b2d.input\n        \",\" -> replace_3f8b2d.search\n        \":\" -> replace_3f8b2d.replace\n        replace_3f8b2d.output -> replace_6e4b1a.input\n        \".\" -> replace_6e4b1a.search\n        \":\" -> replace_6e4b1a.replace\n        replace_6e4b1a.output -> output_5e4c6d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -172, y: 0, name: \"input\") property(String) input_1f2a3b\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_5d6c7e\n\n        instance(x: 221, y: -48, name: \"replace_chars\") replace_8f9abc root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) regex_3a4bcd root.Std_k98ojb.Strings.RegexMatchAll {}\n        instance(x: 0, y: 0) concat_7e6d5f root.Std_k98ojb.Strings.Concat {}\n\n        \" [,.]\" -> regex_3a4bcd.pattern\n        input_1f2a3b -> regex_3a4bcd.input\n\n        regex_3a4bcd.matches -> concat_7e6d5f.left\n        \":\" -> concat_7e6d5f.right\n\n        concat_7e6d5f.result -> replace_8f9abc.replace\n        \" [,.]\" -> replace_8f9abc.search\n        input_1f2a3b -> replace_8f9abc.input\n\n        replace_8f9abc.output -> output_5d6c7e\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_chars_instance root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"input\") property(String) input_2f1a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5e9b8c\n\n        instance(x: 0, y: 1) replace_4e6f7c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a8d2a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_5a9b1d root.Std_k98ojb.Strings.Replace {}\n        input_2f1a3d -> replace_4e6f7c.input\n        \" \" -> replace_4e6f7c.search\n        \":\" -> replace_4e6f7c.replace\n        replace_4e6f7c.output -> replace_3a8d2a.input\n        \",\" -> replace_3a8d2a.search\n        \":\" -> replace_3a8d2a.replace\n        replace_3a8d2a.output -> replace_5a9b1d.input\n        \".\" -> replace_5a9b1d.search\n        \":\" -> replace_5a9b1d.replace\n        replace_5a9b1d.output -> output_5e9b8c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -172, y: 0, name: \"input\") property(String) input_1f3b2a\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_7c9e6d\n\n        instance(x: 221, y: -48, name: \"replace_spaces_commas_dots_with_colon\") replace_4b1f3f root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) or_2a8c0e root.Std_k98ojb.Logic.Or {}\n        instance(x: -11, y: 9) or_5d7b6c root.Std_k98ojb.Logic.Or {}\n        \" \" -> or_2a8c0e.left\n        \",\" -> or_2a8c0e.right\n        or_2a8c0e.result -> replace_4b1f3f.search\n        \":\" -> replace_4b1f3f.replace\n        input_1f3b2a -> replace_4b1f3f.input\n        \".\" -> or_5d7b6c.left\n        or_2a8c0e.result -> or_5d7b6c.right\n        or_5d7b6c.result -> replace_4b1f3f.search\n        replace_4b1f3f.output -> output_7c9e6d\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_spaces_commas_dots_with_colon_8a2f0f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_chars\") replace_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) or_3 root.Std_k98ojb.Logic.Or {}\n        instance(x: -11, y: 9) or_4 root.Std_k98ojb.Logic.Or {}\n        \" \" -> or_3.left\n        \",\" -> or_3.right\n        or_3.result -> or_4.left\n        \".\" -> or_4.right\n        input_0 -> replace_2.input\n        or_4.result -> replace_2.search\n        \":\" -> replace_2.replace\n        replace_2.output -> output_1\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_chars_a root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -121, y: 0, name: \"input\") property(String) input_2a1d9f\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4e7b3c\n\n        instance(x: 0, y: 1) replace_6e5f8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9d3a2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4a7b1c root.Std_k98ojb.Strings.Replace {}\n        input_2a1d9f -> replace_6e5f8c.input\n        \" \" -> replace_6e5f8c.search\n        \":\" -> replace_6e5f8c.replace\n        replace_6e5f8c.output -> replace_9d3a2d.input\n        \",\" -> replace_9d3a2d.search\n        \":\" -> replace_9d3a2d.replace\n        replace_9d3a2d.output -> replace_4a7b1c.input\n        \".\" -> replace_4a7b1c.search\n        \":\" -> replace_4a7b1c.replace\n        replace_4a7b1c.output -> output_4e7b3c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -1489, y: 0, name: \"input\") property(String) input_1a3f8e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5c7b6d\n\n        instance(x: 0, y: 1) replace_9a4b5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3f8e2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_b6a7d1 root.Std_k98ojb.Strings.Replace {}\n        input_1a3f8e -> replace_9a4b5c.input\n        \" \" -> replace_9a4b5c.search\n        \":\" -> replace_9a4b5c.replace\n        replace_9a4b5c.output -> replace_3f8e2d.input\n        \",\" -> replace_3f8e2d.search\n        \":\" -> replace_3f8e2d.replace\n        replace_3f8e2d.output -> replace_b6a7d1.input\n        \".\" -> replace_b6a7d1.search\n        \":\" -> replace_b6a7d1.replace\n        replace_b6a7d1.output -> output_5c7b6d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -1489, y: 0, name: \"input\") property(String) input_6f8b1a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4e7d3c\n\n        instance(x: 0, y: 1) replace_9e5c9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a6c2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_7d3c4a root.Std_k98ojb.Strings.Replace {}\n        input_6f8b1a -> replace_9e5c9f.input\n        \" \" -> replace_9e5c9f.search\n        \":\" -> replace_9e5c9f.replace\n        replace_9e5c9f.output -> replace_8a6c2f.input\n        \",\" -> replace_8a6c2f.search\n        \":\" -> replace_8a6c2f.replace\n        replace_8a6c2f.output -> replace_7d3c4a.input\n        \".\" -> replace_7d3c4a.search\n        \":\" -> replace_7d3c4a.replace\n        replace_7d3c4a.output -> output_4e7d3c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_5b8f2e root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -122, y: 0, name: \"input\") property(String) input_2f1a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4c7e6b\n\n        instance(x: 0, y: 1) replace_9b8b5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3d5a2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_7e4c6d root.Std_k98ojb.Strings.Replace {}\n        input_2f1a3d -> replace_9b8b5f.input\n        \" \" -> replace_9b8b5f.search\n        \":\" -> replace_9b8b5f.replace\n        replace_9b8b5f.output -> replace_3d5a2f.input\n        \",\" -> replace_3d5a2f.search\n        \":\" -> replace_3d5a2f.replace\n        replace_3d5a2f.output -> replace_7e4c6d.input\n        \".\" -> replace_7e4c6d.search\n        \":\" -> replace_7e4c6d.replace\n        replace_7e4c6d.output -> output_4c7e6b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_5f9a2f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -275, y: 17, name: \"input\") property(String) input_8f1e9d\n\n        out(x: 1056, y: 22, name: \"output\") property(Bool) output_7c0a5b\n\n        instance(x: -115, y: 18, name: \"get characters\") characters_2a4b3c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 375, y: 22) intersection_1f8e9d root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 688, y: 21) length_5e6a7c root.Std_k98ojb.List.Length {}\n        instance(x: 898, y: 20) equal_2f0b3f root.Std_k98ojb.Logic.Equal {}\n        input_8f1e9d -> characters_2a4b3c.input\n        characters_2a4b3c.characters -> intersection_1f8e9d.left\n        characters_2a4b3c.characters -> intersection_1f8e9d.right\n        length_5e6a7c.length -> equal_2f0b3f.left\n        1 -> equal_2f0b3f.right\n        intersection_1f8e9d.intersection -> length_5e6a7c.list\n        equal_2f0b3f.result -> output_7c0a5b\n    }\n\n    \n\n    instance(x: -71, y: 122) is_same_4a8c0f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -305, y: 10, name: \"input\") property(String) input_9e3a8f\n\n        out(x: 1056, y: 15, name: \"output\") property(Bool) output_5c1b2d\n\n        instance(x: -99, y: 11) characters_7a4b0f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 244, y: 16) map_8e3a9c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 553, y: 15) allroot_1d2d6a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 850, y: 14) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        func() {\n            in(x: -28, y: 56, name: \"current\") property(String) current_1e8c9f\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_1e8c9f -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_8e3a9c.handler\n        characters_7a4b0f.characters -> map_8e3a9c.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> allroot_1d2d6a.handler\n        map_8e3a9c.output_list -> allroot_1d2d6a.items\n        allroot_1d2d6a.output_list -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_5c1b2d\n    }\n\n    \n\n    instance(x: -86, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -296, y: 11, name: \"input\") property(String) input_9a8f3e\n\n        out(x: 1040, y: 10, name: \"output\") property(Bool) output_5b1d7c\n\n        instance(x: -82, y: 12) characters_4f2c6c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 201, y: 11) uniquelist_8a3e9f root.Std_k98ojb.List.Unique {}\n        instance(x: 408, y: 10) length_1d7c0c root.Std_k98ojb.List.Length {}\n        instance(x: 626, y: 12) equal_f5b4a6 root.Std_k98ojb.Logic.Equal {}\n        characters_4f2c6c.characters -> uniquelist_8a3e9f.list\n        length_1d7c0c.length -> equal_f5b4a6.left\n        1 -> equal_f5b4a6.right\n        uniquelist_8a3e9f.unique_list -> length_1d7c0c.list\n        equal_f5b4a6.result -> output_5b1d7c\n    }\n\n    \n\n    instance(x: -27, y: 59) check_same_2f9d09 root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -285, y: -86, name: \"string\") property(String) string_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        string_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        string_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -316, y: 0, name: \"input\") property(String) input_1f8a2d\n\n        out(x: 1073, y: 5, name: \"output\") property(Bool) output_eb9e4c\n\n        instance(x: -99, y: 6) characters_7f0c4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 360, y: 8) map_1d3a2c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 666, y: -5) allroot_9e6f7c root.Std_k98ojb.Iteration.All {}\n        instance(x: 1010, y: 10) equal_4e8c1d root.Std_k98ojb.Logic.Equal {}\n        characters_7f0c4f.characters -> map_1d3a2c.items\n        func() {\n            in(x: -22, y: 36, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) getat_9a8c1e root.Std_k98ojb.List.GetAt {}\n            element_5f51f7 -> getat_9a8c1e.list\n            0 -> getat_9a8c1e.index\n            getat_9a8c1e.itemAtIndex -> out_d0fd24\n        } -> map_1d3a2c.handler\n        map_1d3a2c.output_list -> allroot_9e6f7c.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_4e8c1d root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_4e8c1d.left\n            input_1f8a2d -> equal_4e8c1d.right\n            equal_4e8c1d.result -> out_d0fd24\n        } -> allroot_9e6f7c.handler\n        allroot_9e6f7c.all -> output_eb9e4c\n    }\n\n    \n\n    instance(x: -55, y: 76) is_same_5a8f1d root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -290, y: 13, name: \"input\") property(String) input_9e3f5d\n\n        out(x: 557, y: 35, name: \"output\") property(Bool) output_8b7c4a\n\n        instance(x: -99, y: 14) characters_1f0f6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 34) contains_5d9e2c root.Std_k98ojb.List.Contains {}\n        instance(x: 360, y: 35) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        characters_1f0f6f.characters -> contains_5d9e2c.list\n        input_9e3f5d -> contains_5d9e2c.item\n        contains_5d9e2c.is_contained -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_8b7c4a\n        input_9e3f5d -> characters_1f0f6f.input\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_aac2a9 root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -277, y: 0, name: \"input\") property(String) input_8e9a3f\n\n        out(x: 1115, y: 10, name: \"output\") property(Bool) output_1b4c2d\n\n        instance(x: -126, y: 13) characters_7a0e6c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 350, y: 14) map_8f5f9f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 642, y: -1) intersection_3d4a4f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1000, y: 12) notempty_7c2e8c root.Std_k98ojb.List.NotEmpty {}\n        func() {\n            in(x: -22, y: 47, name: \"element\") property(String) element_9a1d5f\n\n            out(x: 482, y: 28, name: \"output\") property(List) output_8e7c0b\n\n            instance(x: 150, y: 34) list_c4e6c2 root.Std_k98ojb.List.Empty {}\n            element_9a1d5f -> list_c4e6c2.listWithItem\n            list_c4e6c2.listWithItem -> output_8e7c0b\n        } -> map_8f5f9f.handler\n        characters_7a0e6c.characters -> map_8f5f9f.items\n        map_8f5f9f.output_list -> intersection_3d4a4f.left\n        map_8f5f9f.output_list -> intersection_3d4a4f.right\n        notempty_7c2e8c.isEmpty -> output_1b4c2d\n        intersection_3d4a4f.intersection -> notempty_7c2e8c.list\n    }\n\n    \n\n    instance(x: 12, y: -5) is_same_6e0d9c root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -275, y: 10, name: \"input\") property(String) input_9e3f8d\n\n        out(x: 1225, y: 15, name: \"output\") property(Bool) output_7a1b6c\n\n        instance(x: -88, y: 11) characters_0a4b2c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 201, y: 14) uniquelist_9f8e5d root.Std_k98ojb.List.Unique {}\n        instance(x: 411, y: 15) length_6b3a7f root.Std_k98ojb.List.Length {}\n        instance(x: 621, y: 16) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        characters_0a4b2c.characters -> uniquelist_9f8e5d.list\n        length_6b3a7f.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        input_9e3f8d -> characters_0a4b2c.input\n        uniquelist_9f8e5d.unique_list -> length_6b3a7f.list\n        equal_f89569.result -> output_7a1b6c\n    }\n\n    \n\n    instance(x: -63, y: 112) check_same_0f4f2c root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -294, y: 155, name: \"string\") property(String) string_1a8e6f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) allroot.Std_k98ojb.Iteration.Filter {}\n        instance(x: 415, y: 63) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = first\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = first\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        allroot.Std_k98ojb.Iteration.Filter.output_list -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_b1d7f8\n        string_1a8e6f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        string_1a8e6f -> allroot.Std_k98ojb.Iteration.Filter.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(String) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> allroot.Std_k98ojb.Iteration.Filter.handler\n        length_6e87f2.length -> greaterthan_cb50ae.right\n        n_a6cea7 -> greaterthan_cb50ae.left\n        list_0b075e -> length_6e87f2.list\n    }\n\n    \n\n    instance(x: 48, y: 11) is_same_15f9e9 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -333, y: 6, name: \"input\") property(String) input_1a9f5e\n\n        out(x: 1014, y: 3, name: \"output\") property(Bool) output_8c7b0d\n\n        instance(x: -179, y: 10) characters_2a6b4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 290, y: 5) map_9e3f1f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 574, y: -13) allroot_7c8d2a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 810, y: 4) equal_6f5c9e root.Std_k98ojb.Logic.Equal {}\n        func() {\n            in(x: -18, y: 36, name: \"current\") property(String) current_7a1d3f\n\n            out(x: 492, y: 21, name: \"output\") property(Bool) output_8e9c6b\n\n            instance(x: 222, y: 28) firstitem_5a4a2c root.Std_k98ojb.List.FirstItem {}\n            current_7a1d3f -> equal_6f5c9e.left\n            firstitem_5a4a2c.item -> equal_6f5c9e.right\n            equal_6f5c9e.result -> output_8e9c6b\n        } -> map_9e3f1f.handler\n        characters_2a6b4f.characters -> map_9e3f1f.items\n        map_9e3f1f.output_list -> allroot_7c8d2a.items\n        func() {\n            in(x: -23, y: 0, name: \"current\") property(Bool) current_5b4c6f\n\n            out(x: 445, y: -12, name: \"output\") property(Bool) output_9e7d8a\n\n            instance(x: 223, y: -11) not_3e0f1c root.Std_k98ojb.Logic.Not {}\n            current_5b4c6f -> not_3e0f1c.input\n            not_3e0f1c.result -> output_9e7d8a\n        } -> allroot_7c8d2a.handler\n        allroot_7c8d2a.output_list -> equal_6f5c9e.left\n        1 -> equal_6f5c9e.right\n        equal_6f5c9e.result -> output_8c7b0d\n        input_1a9f5e -> characters_2a6b4f.input\n    }\n\n    \n\n    instance(x: -60, y: 99) is_same_3c5b8f root.main.is_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -40, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n    instance(x: -40, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n        where: \"Std.Str.IsNumeric(it)\"\n    }\n    \n\n    instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -1, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        count_digits_2.result -> result_ai\n\n    }\n    \n\n    func(doc: \"count the number of digits in a list.\") count_digits {\n        in(x: 0, y: 0, name: \"list\") property(List) list_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -1, y: 0) filter_node root.Std_k98ojb.Query.Filter {\n            where: \"Strings.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        list_ai -> filter_node.list\n        filter_node.result -> count_digits_2.list_ai\n        count_digits_2.result -> result_ai\n\n    }\n\n    \n    instance(x: -1, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -25, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -25, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -25, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n    instance(x: -25, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n        where: \"Std.Str.IsNumeric(it)\"\n    }\n    \n\n    instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -40, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n    instance(x: -40, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n        where: \"Std.Str.IsNumeric(it)\"\n    }\n    \n\n    instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -20, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -20, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 15, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -20, y: 0) characters_node root.main.count_digits {}\n\n    \n    instance(x: 15, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -35, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -35, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -35, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n    instance(x: -35, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n        where: \"Std.Str.IsNumeric(it)\"\n    }\n    \n\n    instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -1, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        count_digits_2.result -> result_ai\n\n    }\n    \n\n    func(doc: \"count the number of digits in a list.\") count_digits {\n        in(x: 0, y: 0, name: \"list\") property(List) list_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -1, y: 0) filter_node root.Std_k98ojb.Query.Filter {\n            where: \"Strings.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        list_ai -> filter_node.list\n        filter_node.result -> count_digits_2.list_ai\n        count_digits_2.result -> result_ai\n\n    }\n\n    \n    instance(x: -1, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -45, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 15, y: 0) count_node root.Std_k98ojb.Count {}\n        instance(x: 15, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_node.items\n        count_node.onCount -> is_numeric_node.execute\n        is_numeric_node.value -> count_node.trigger\n    }\n    \n\n    instance(x: -45, y: 0) count_digits_1 root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -15, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -15, y: 0) characters_node root.main.count_digits {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -15, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -15, y: 0) characters_node root.main.count_digits {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -344, y: 0, name: \"n\") property(Number) n_1a8f3e\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_2b4c6d\n\n        instance(x: 12, y: 136) expression_5f9a0c root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 303, y: 2) div_4d3e7f root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_9a8c0c  = 1\n        instance(x: 23, y: -1) mul_5e6f1f root.Std_k98ojb.Math.Mul {}\n        expression_5f9a0c.result -> mul_5e6f1f.second\n        n_1a8f3e -> mul_5e6f1f.first\n        data_9a8c0c -> div_4d3e7f.second\n        mul_5e6f1f.result -> div_4d3e7f.first\n        expression_5f9a0c.gen_0 -> n_1a8f3e\n        div_4d3e7f.result -> sum_2b4c6d\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_1a1f92 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_9e8b1f\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_ea7c2d\n\n        instance(x: 532, y: 147) sum_3e6b5c root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_1f8a9c\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_5e3d2b\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_1f8a9c -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_5e3d2b\n        } -> sum_3e6b5c.predicate\n        instance(x: -39, y: 26) generate_range_9f7a4f root.Std_k98ojb.List.GenerateRange {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_1f8a9c\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_5e3d2b\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_1f8a9c -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_5e3d2b\n        } -> generate_range_9f7a4f.predicate\n        instance(x: -39, y: 257) pow_8c6c1c root.Std_k98ojb.Math.Pow {}\n        instance(x: 0, y: 0) add_8e5a3d root.Std_k98ojb.Math.Add {}\n        generate_range_9f7a4f.list -> sum_3e6b5c.items\n        n_9e8b1f -> generate_range_9f7a4f.to\n        1 -> generate_range_9f7a4f.from\n        add_8e5a3d.result -> sum_3e6b5c.reducer\n        pow_8c6c1c.result -> add_8e5a3d.second\n        n_9e8b1f -> pow_8c6c1c.y\n        sum_3e6b5c.item -> pow_8c6c1c.x\n        0 -> add_8e5a3d.first\n        sum_3e6b5c.result -> output_ea7c2d\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_9f4c4f root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -280, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        pow_f892a4.result -> add_64046c.first\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 23, y: -1) pow_9f7b8c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_9f7b8c.first\n        4 -> pow_9f7b8c.second\n        pow_9f7b8c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = sum\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 62, y: -226) setter_2d44da root.Std_k98ojb.Variable.Setter {}\n        data_3c713b -> setter_2d44da.variable_name\n        expression_634b7e.result -> setter_2d44da.new_value\n        n_c88d35 -> expression_634b7e.gen_0\n        setter_2d44da.continue -> output_ebef81\n        0 -> setter_2d44da.new_value\n        n_c88d35 -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -342, y: 0, name: \"n\") property(Number) n_1f3b9a\n\n        out(x: 750, y: 7, name: \"sum\") property(Number) sum_6c8e5d\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9f0a3c root.Std_k98ojb.Math.Pow {}\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 1\n        instance(x: 12, y: 136) expression_2d6da6_1 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_1f3b9a -> mul_f892a4.first\n        pow_9f0a3c.result -> mul_f892a4.second\n        expression_2d6da6.result -> pow_9f0a3c.x\n        4 -> pow_9f0a3c.y\n        n_1f3b9a -> expression_2d6da6.gen_0\n        n_1f3b9a -> expression_2d6da6_1.gen_0\n        mul_f892a4.result -> sum_6c8e5d\n        data_cde0dc -> sum_6c8e5d\n        expression_2d6da6_1.result -> pow_9f0a3c.x\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_9e6f1b\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_ea3d8c\n\n        instance(x: 532, y: 147) sum_4a0c7f root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_5e1b2d\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_8c9a3f\n\n            instance(x: 112, y: 80) modulo_6f4b7c root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_2d1e5c root.Std_k98ojb.Logic.Equal {}\n            current_5e1b2d -> modulo_6f4b7c.value\n            2 -> modulo_6f4b7c.divisor\n            modulo_6f4b7c.result -> equal_2d1e5c.left\n            0 -> equal_2d1e5c.right\n            equal_2d1e5c.result -> bool_8c9a3f\n        } -> sum_4a0c7f.predicate\n        instance(x: -39, y: 26) generate_range_6b6a2f root.Std_k98ojb.List.GenerateRange {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_5e1b2d\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_8c9a3f\n\n            instance(x: 112, y: 80) modulo_6f4b7c root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_5e2d0f root.Std_k98ojb.Logic.NotEqual {}\n            current_5e1b2d -> modulo_6f4b7c.value\n            2 -> modulo_6f4b7c.divisor\n            modulo_6f4b7c.result -> notequal_5e2d0f.left\n            0 -> notequal_5e2d0f.right\n            notequal_5e2d0f.result -> bool_8c9a3f\n        } -> generate_range_6b6a2f.predicate\n        instance(x: -39, y: 257) pow_1f4c7c root.Std_k98ojb.Math.Pow {}\n        n_9e6f1b -> sum_4a0c7f.initial_value\n        generate_range_6b6a2f.list -> sum_4a0c7f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_5e1b2d\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_8c9a3f\n\n            instance(x: 112, y: 80) modulo_6f4b7c root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_2d1e5c root.Std_k98ojb.Logic.Equal {}\n            current_5e1b2d -> modulo_6f4b7c.value\n            2 -> modulo_6f4b7c.divisor\n            modulo_6f4b7c.result -> equal_2d1e5c.left\n            0 -> equal_2d1e5c.right\n            equal_2d1e5c.result -> bool_8c9a3f\n        } -> generate_range_6b6a2f.from\n        n_9e6f1b -> generate_range_6b6a2f.to\n        sum_4a0c7f.accumulated_value -> pow_1f4c7c.y\n        current_5e1b2d -> pow_1f4c7c.x\n        4 -> pow_1f4c7c.power\n        pow_1f4c7c.result -> sum_4a0c7f.value\n        sum_4a0c7f.output -> output_ea3d8c\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_9e5b2f root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -341, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"(4*n*n-1)*(4*n*n-1)\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        div_64046c.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = sum\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 62, y: -226) setter_2d44da root.Std_k98ojb.Variable.Setter {}\n        data_3c713b -> setter_2d44da.variable_name\n        expression_634b7e.result -> setter_2d44da.new_value\n        n_c88d35 -> expression_634b7e.gen_0\n        setter_2d44da.continue -> output_ebef81\n        0 -> setter_2d44da.new_value\n        n_c88d35 -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = sum\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 62, y: -226) setter_2d44da root.Std_k98ojb.Variable.Setter {}\n        data_3c713b -> setter_2d44da.variable_name\n        expression_634b7e.result -> setter_2d44da.new_value\n        n_c88d35 -> expression_634b7e.gen_0\n        setter_2d44da.continue -> output_ebef81\n        0 -> setter_2d44da.new_value\n        n_c88d35 -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -104, y: 24, name: \"size\") property(Number) size_8f1e3d\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_9a2c4b\n\n        instance(x: 0, y: -23) mul_6e5b7c root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -53) mul_1d3f8f root.Std_k98ojb.Math.Mul {}\n        size_8f1e3d -> mul_6e5b7c.first\n        size_8f1e3d -> mul_6e5b7c.second\n        6 -> mul_1d3f8f.first\n        mul_6e5b7c.result -> mul_1d3f8f.second\n        mul_1d3f8f.result -> surface_area_9a2c4b\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -106, y: 21, name: \"size\") property(Number) size_1f8e0d\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_9c6a2b\n\n        instance(x: 92, y: -22) mul_3f7c5f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -105) pow_4d0e8f root.Std_k98ojb.Math.Pow {}\n        size_1f8e0d -> pow_4d0e8f.x\n        2 -> pow_4d0e8f.y\n        pow_4d0e8f.result -> mul_3f7c5f.first\n        6 -> mul_3f7c5f.second\n        mul_3f7c5f.result -> surface_area_9c6a2b\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_8d0e4f root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: 35, name: \"size\") property(Number) size_1f8a3d\n\n        out(x: 656, y: -68, name: \"surface area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: -105) mul_f0b9c4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        size_1f8a3d -> mul_f0b9c4.first\n        6 -> mul_f0b9c4.second\n        mul_f0b9c4.result -> mul_2f9d09.first\n        size_1f8a3d -> mul_2f9d09.second\n        mul_2f9d09.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -105, y: 45, name: \"size\") property(Number) size_9f7759\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) mul_1e9b3a root.Std_k98ojb.Math.Mul {}\n        instance(x: -144, y: 112) mul_2d0c6f root.Std_k98ojb.Math.Mul {}\n        instance(x: 116, y: -268) mul_4e5c8c root.Std_k98ojb.Math.Mul {}\n        size_9f7759 -> mul_1e9b3a.first\n        6 -> mul_1e9b3a.second\n        mul_1e9b3a.result -> mul_2d0c6f.first\n        size_9f7759 -> mul_2d0c6f.second\n        mul_2d0c6f.result -> mul_4e5c8c.first\n        1 -> mul_4e5c8c.second\n        mul_4e5c8c.result -> surface_area_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) cube_surface_area_d6e930 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -100, y: 20, name: \"size\") property(Number) size_1e8f0d\n\n        out(x: 80, y: 22, name: \"surface area\") property(Number) surface_area_7c9b6a\n\n        instance(x: -5, y: 4) mul_3a2e4c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 74, y: 36) data_1f0d8c  = [size]\n        size_1e8f0d -> data_1f0d8c.size\n        mul_3a2e4c.first -> data_1f0d8c.a\n        6 -> mul_3a2e4c.second\n        data_1f0d8c.b -> mul_3a2e4c.first\n        data_1f0d8c.size -> mul_3a2e4c.second\n        mul_3a2e4c.result -> surface_area_7c9b6a\n    }\n\n    \n\n    instance(x: 114, y: -18) cube_surface_area_5b9f8f root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -110, y: 17, name: \"size\") property(Number) size_8e9f6d\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_5a1c0b\n\n        instance(x: 12, y: -56) mul_7f3f2f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_9e4d8c  = 6\n        size_8e9f6d -> mul_7f3f2f.first\n        data_9e4d8c -> mul_7f3f2f.second\n        mul_7f3f2f.result -> surface_area_5a1c0b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_6f1a2d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -106, y: 25, name: \"size\") property(Number) size_1a9f2e\n\n        out(x: 1020, y: 20, name: \"surface area\") property(Number) surface_area_8c7d6b\n\n        instance(x: 4, y: -3) mul_f5b3ec root.Std_k98ojb.Math.Mul {}\n        instance(x: 18, y: 13) mul_9a2f0e root.Std_k98ojb.Math.Mul {}\n        size_1a9f2e -> mul_f5b3ec.first\n        size_1a9f2e -> mul_f5b3ec.second\n        mul_f5b3ec.result -> mul_9a2f0e.first\n        6 -> mul_9a2f0e.second\n        mul_9a2f0e.result -> surface_area_8c7d6b\n    }\n\n    \n\n    instance(x: -10, y: -17) cube_surface_area_1e4b5c root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: 25, name: \"size\") property(Number) size_9e3f1d\n\n        out(x: 656, y: -68, name: \"surface area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: -105) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        size_9e3f1d -> mul_f892a4.first\n        size_9e3f1d -> mul_f892a4.second\n        mul_f892a4.result -> mul_2f9d09.first\n        6 -> mul_2f9d09.second\n        mul_2f9d09.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -102, y: 27, name: \"size\") property(Number) size_8f1a6d\n\n        out(x: 1010, y: 17, name: \"surface area\") property(Number) surface_area_7c3b9e\n\n        instance(x: 18, y: -2) mul_5e4f59 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_8f1a6d -> mul_5e4f59.first\n        data_cde0dc -> mul_5e4f59.second\n        mul_5e4f59.result -> surface_area_7c3b9e\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -102, y: 22, name: \"size\") property(Number) size_9a1f3e\n\n        out(x: 0, y: -68, name: \"surface area\") property(Number) surface_area_8b4d7c\n\n        instance(x: 6, y: -39) mul_5e2f4c root.Std_k98ojb.Math.Mul {}\n        instance(x: 14, y: -1) mul_9a3e0f root.Std_k98ojb.Math.Mul {}\n        size_9a1f3e -> mul_5e2f4c.first\n        6 -> mul_5e2f4c.second\n        mul_5e2f4c.result -> mul_9a3e0f.first\n        size_9a1f3e -> mul_9a3e0f.second\n        mul_9a3e0f.result -> surface_area_8b4d7c\n    }\n\n    \n\n    instance(x: 106, y: -26) cube_surface_area_2c5c6f root.main.cube_surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 22, name: \"list\") property(List) list_6a9f1e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_870503 root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_6a9f1e -> max_f3b46d.items\n        list_6a9f1e -> min_870503.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_870503.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 0, name: \"list\") property(List) list_1e8f2a\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_870503 root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_1e8f2a -> max_f3b46d.items\n        list_1e8f2a -> min_870503.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_870503.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -26, y: 14, name: \"list\") property(List) list_1e8b5f\n\n        out(x: 441, y: 16, name: \"difference\") property(Number) difference_4a7d2c\n\n        instance(x: 0, y: 14) max_9b3f6f root.Std_k98ojb.List.Max {}\n        instance(x: -26, y: -25) min_5e8f1f root.Std_k98ojb.List.Min {}\n        instance(x: 201, y: 16) sub_2c4a7d root.Std_k98ojb.Math.Sub {}\n        list_1e8b5f -> max_9b3f6f.items\n        list_1e8b5f -> min_5e8f1f.items\n        max_9b3f6f.max -> sub_2c4a7d.first\n        min_5e8f1f.min -> sub_2c4a7d.second\n        sub_2c4a7d.result -> difference_4a7d2c\n    }\n\n    \n\n    instance(x: 48, y: -11) diff_max_min_6b0b3c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_0a3f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_870503 root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_0a3f8e -> max_f3b46d.items\n        list_0a3f8e -> min_870503.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_870503.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1e3f0a\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_6e87f2 root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_4d4556 root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        list_1e3f0a -> max_6e87f2.items\n        max_6e87f2.max -> sub_852f2e.first\n        list_1e3f0a -> min_4d4556.items\n        min_4d4556.min -> sub_852f2e.second\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -34, y: 13, name: \"list\") property(List) list_6e9f1d\n\n        out(x: 544, y: 63, name: \"output\") property(Number) output_eb0c7a\n\n        instance(x: 201, y: 62) sub_4b3f8f root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1d9e5c root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -375) min_7a0f2f root.Std_k98ojb.List.Min {}\n        sub_4b3f8f.result -> output_eb0c7a\n        max_1d9e5c.max -> sub_4b3f8f.first\n        min_7a0f2f.min -> sub_4b3f8f.second\n        list_6e9f1d -> max_1d9e5c.items\n        list_6e9f1d -> min_7a0f2f.items\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_3b4d8f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 15, name: \"list\") property(List) list_0a9f2e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_870503 root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_0a9f2e -> max_f3b46d.items\n        list_0a9f2e -> min_870503.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_870503.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -28, y: 16, name: \"list\") property(List) list_1e8f9a\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.min -> sub_852f2e.second\n        list_1e8f9a -> max_f3b46d.items\n        max_f3b46d.max -> firstitem_870503.list\n        list_1e8f9a -> min_4d4556.items\n        min_4d4556.min -> firstitem_3078c6.list\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_6a9b1f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_f3b46d.items -> list_6a9b1f\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.items -> list_6a9b1f\n        min_4d4556.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_0a3f1e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) max_6e87f2 root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_cb50ae root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        max_6e87f2.max -> sub_852f2e.first\n        min_cb50ae.min -> sub_852f2e.second\n        list_0a3f1e -> max_6e87f2.items\n        list_0a3f1e -> min_cb50ae.items\n        sub_852f2e.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 0, name: \"input\") property(Number) input_5f3a9e\n\n        out(x: 1268, y: 2, name: \"output\") property(Bool) output_1b4c6d\n\n        instance(x: 1057, y: -12) modulo_0f6c5f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1059, y: 44) equal_3a2e8f root.Std_k98ojb.Logic.Equal {}\n        input_5f3a9e -> modulo_0f6c5f.value\n        2 -> modulo_0f6c5f.divisor\n        modulo_0f6c5f.result -> equal_3a2e8f.left\n        0 -> equal_3a2e8f.right\n        equal_3a2e8f.result -> output_1b4c6d\n    }\n\n    \n\n    instance(x: -7, y: -11) is_even_5f9b4c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -34, y: 127, name: \"input\") property(Number) input_f5c03d\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> out_f3db9f\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e6b4f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -27, y: 2, name: \"input\") property(Number) input_0e8a3f\n\n        out(x: 1009, y: 63, name: \"output\") property(Bool) output_7b6c4d\n\n        instance(x: 552, y: 62) modulo_1e2b5f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 827, y: 61) equal_0a8b9f root.Std_k98ojb.Logic.Equal {}\n        input_0e8a3f -> modulo_1e2b5f.value\n        2 -> modulo_1e2b5f.divisor\n        modulo_1e2b5f.result -> equal_0a8b9f.left\n        0 -> equal_0a8b9f.right\n        equal_0a8b9f.result -> output_7b6c4d\n    }\n\n    \n\n    instance(x: -12, y: -13) is_even_1e2b5f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -34, y: 127, name: \"input\") property(Number) input_f5c03d\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> out_f3db9f\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_6b1e4f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_1e3f6d\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_eb7a8c\n\n        instance(x: 772, y: 76) modulo_5c0f9f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1053, y: 49) equal_2e4d6c root.Std_k98ojb.Logic.Equal {}\n        input_1e3f6d -> modulo_5c0f9f.value\n        2 -> modulo_5c0f9f.divisor\n        modulo_5c0f9f.result -> equal_2e4d6c.left\n        0 -> equal_2e4d6c.right\n        equal_2e4d6c.result -> output_eb7a8c\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -35, y: 0, name: \"input\") property(Number) input_2e9f1d\n\n        out(x: 1278, y: 16, name: \"output\") property(Bool) output_7a3c4b\n\n        instance(x: 1036, y: -11) modulo_5e0f54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1262, y: 13) equal_9d8b1f root.Std_k98ojb.Logic.Equal {}\n        input_2e9f1d -> modulo_5e0f54.value\n        2 -> modulo_5e0f54.divisor\n        modulo_5e0f54.result -> equal_9d8b1f.left\n        0 -> equal_9d8b1f.right\n        equal_9d8b1f.result -> output_7a3c4b\n    }\n\n    \n\n    instance(x: -12, y: -11) is_even_5e6a2c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -34, y: 127, name: \"input\") property(Number) input_f5c03d\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> out_f3db9f\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_4e1b6f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_5e9f0d\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_7c1b8a\n\n        instance(x: 772, y: 76) modulo_6f4f3c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1109, y: 49) equal_2d5e0c root.Std_k98ojb.Logic.Equal {}\n        input_5e9f0d -> modulo_6f4f3c.value\n        2 -> modulo_6f4f3c.divisor\n        modulo_6f4f3c.result -> equal_2d5e0c.left\n        0 -> equal_2d5e0c.right\n        equal_2d5e0c.result -> output_7c1b8a\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_3f9b4f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_0a9f5e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_0a9f5e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_0a9f5e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_0a9f5e -> expression_9fba8c.gen_0\n        input_0a9f5e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5e2d0c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_0a8f1e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_0a8f1e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_0a8f1e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_0a8f1e -> expression_9fba8c.gen_0\n        input_0a8f1e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_4d5e2c root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"characters\") characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"first repeated character\") find_2d44da root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 1) tolower_634b7e root.Std_k98ojb.Strings.ToLower {}\n        characters_3c713b.characters -> find_2d44da.items\n        input_0 -> characters_3c713b.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            tolower_634b7e.output -> contains_45e806.input\n            current_afd5b1 -> contains_45e806.contains\n            input_0 -> tolower_634b7e.input\n            contains_45e806.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_2d44da.predicate\n        find_2d44da.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_4e7b9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3f5a6d root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257) filter_2f8b1c root.Std_k98ojb.Iteration.Filter {}\n        characters_4e7b9c.characters -> find_3f5a6d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0a2aa\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3b8c5f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_a0a2aa -> contains_3b8c5f.input\n            characters_4e7b9c.characters -> contains_3b8c5f.contains\n            contains_3b8c5f.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_3f5a6d.predicate\n        instance(x: -39, y: 26, name: \"First even number\") ``First repeated character_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0a2aa\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3b8c5f root.Std_k98ojb.Strings.Contains {}\n            current_a0a2aa -> contains_3b8c5f.input\n            input_0 -> contains_3b8c5f.contains\n            contains_3b8c5f.result -> bool_1eb6e9\n        } -> ``First repeated character_0b1361``.predicate\n        find_3f5a6d.item -> filter_2f8b1c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0a2aa\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3b8c5f root.Std_k98ojb.Strings.Contains {}\n            current_a0a2aa -> contains_3b8c5f.input\n            input_0 -> contains_3b8c5f.contains\n            contains_3b8c5f.result -> bool_1eb6e9\n        } -> filter_2f8b1c.handler\n        ``First repeated character_0b1361``.items -> filter_2f8b1c.items\n        filter_2f8b1c.output_list -> ``First repeated character_0b1361``.items\n        ``First repeated character_0b1361``.item -> result_0\n        input_0 -> characters_4e7b9c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -275, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_4a3f6c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_8e9d5f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -40, y: 60) ``characters_4a3f6c`` root.Std_k98ojb.Iteration.Filter {}\n        characters_4a3f6c.characters -> ``characters_4a3f6c``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2a7f3c root.Std_k98ojb.Strings.Contains {}\n            ``characters_4a3f6c``.output_list -> contains_2a7f3c.input\n            current_afd5b1 -> contains_2a7f3c.contains\n            contains_2a7f3c.result -> bool_1eb6e9\n        } -> ``characters_4a3f6c``.handler\n        ``characters_4a3f6c``.output_list -> find_8e9d5f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2a7f3c root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_2a7f3c.input\n            current_afd5b1 -> contains_2a7f3c.contains\n            contains_2a7f3c.result -> bool_1eb6e9\n        } -> find_8e9d5f.predicate\n        find_8e9d5f.item -> result_0\n        input_0 -> characters_4a3f6c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5e3f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7a9d4f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -2, y: 130) ``characters_5e3f8c`` root.Std_k98ojb.Iteration.Filter {}\n        characters_5e3f8c.characters -> ``characters_5e3f8c``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2a8c4f root.Std_k98ojb.Strings.Contains {}\n            ``characters_5e3f8c``.output_list -> contains_2a8c4f.input\n            current_afd5b1 -> contains_2a8c4f.contains\n            contains_2a8c4f.result -> bool_1eb6e9\n        } -> ``characters_5e3f8c``.handler\n        ``characters_5e3f8c``.output_list -> find_7a9d4f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2a8c4f root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_2a8c4f.input\n            current_afd5b1 -> contains_2a8c4f.contains\n            contains_2a8c4f.result -> bool_1eb6e9\n        } -> find_7a9d4f.predicate\n        input_0 -> characters_5e3f8c.input\n        find_7a9d4f.item -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.characters -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) substring_45e806 root.Std_k98ojb.Strings.Substring {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> substring_45e806.input\n            substring_45e806.start -> substring_45e806.end\n            find_de624f.index -> substring_45e806.start\n            substring_45e806.substring -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -279, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0, name: \"characters\") characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 1, name: \"first repeated character\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26) ``first repeated character_0b1361`` root.Std_k98ojb.Iteration.Filter {}\n        characters_3c713b.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            ``first repeated character_0b1361``.output_list -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        characters_3c713b.characters -> ``first repeated character_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_1 -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``first repeated character_0b1361``.handler\n        find_6d05b0.item -> output_0\n        input_1 -> characters_3c713b.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3e5b8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257) ``find_6d05b0_1`` root.Std_k98ojb.Iteration.Find {}\n        characters_3e5b8c.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_3e5b8c.characters -> contains_d42dce.list\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_3e5b8c.characters -> contains_d42dce.list\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``find_6d05b0_1``.predicate\n        characters_3e5b8c.characters -> ``find_6d05b0_1``.items\n        find_6d05b0.item -> result_0\n        input_0 -> characters_3e5b8c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -288, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_4a3b7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5f8d9e root.Std_k98ojb.Iteration.Find {}\n        instance(x: -40, y: 60) filter_2b1e6d root.Std_k98ojb.Iteration.Filter {}\n        characters_4a3b7c.characters -> find_5f8d9e.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3f8b5a root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_0 -> contains_3f8b5a.input\n            input_0 -> contains_3f8b5a.contains\n            contains_3f8b5a.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_5f8d9e.predicate\n        instance(x: -40, y: 60) ``Finds the first repeated character in a given string_0b1361`` root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3f8b5a root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_0 -> contains_3f8b5a.input\n            input_0 -> contains_3f8b5a.contains\n            contains_3f8b5a.result -> equal_a54bdc.left\n            1 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> ``Finds the first repeated character in a given string_0b1361``.handler\n        find_5f8d9e.item -> filter_2b1e6d.items\n        filter_2b1e6d.output_list -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_3e9f7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_3e9f7c.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) substring_3f7a8c root.Std_k98ojb.Strings.Substring {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> substring_3f7a8c.input\n            substring_3f7a8c.start -> contains_d42dce.contains\n            current_afd5b1 -> substring_3f7a8c.end\n            contains_d42dce.result -> notequal_148aeb.left\n            false -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_3e5b7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"first repeated char\") find_2c4a6d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) ``first repeated char_0`` root.Std_k98ojb.Iteration.Filter {}\n        characters_3e5b7f.characters -> find_2c4a6d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``first repeated char_0`` root.Std_k98ojb.Iteration.Find {}\n            instance(x: 415, y: 86) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_3e5b7f.characters -> ``first repeated char_0``.items\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n                current_afd5b1 -> equal_aabb6e.left\n                ``first repeated char_0``.item -> equal_aabb6e.right\n                equal_aabb6e.result -> bool_1eb6e9\n            } -> ``first repeated char_0``.predicate\n            current_afd5b1 -> contains_d42dce.input\n            characters_3e5b7f.characters -> contains_d42dce.contains\n            ``first repeated char_0``.item -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_2c4a6d.predicate\n        characters_3e5b7f.characters -> ``first repeated char_0``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            characters_3e5b7f.characters -> contains_d42dce.contains\n            current_afd5b1 -> contains_d42dce.input\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``first repeated char_0``.predicate\n        find_2c4a6d.item -> output_ebef81\n        input_0 -> characters_3e5b7f.input\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3b2d8c root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -1) list_remove_7e6f9a root.Std_k98ojb.List.Remove {}\n            min_3b2d8c.items -> list_remove_7e6f9a.list\n            min_3b2d8c.min -> list_remove_7e6f9a.index\n            list_remove_7e6f9a.resultWithoutItem -> find_6d05b0.items\n            elem_9f6850 -> notequal_807ffd.right\n            list_remove_7e6f9a.resultWithoutItem -> min_3b2d8c.items\n            0 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: -193, name: \"items\") property(List) items_ai\n        out(x: 46, y: 158, name: \"second_min\") property(Number) second_min_1\n\n        instance(x: -105, y: -110) min_node root.Std_k98ojb.List.Min {}\n        instance(x: -105, y: -210) remove_node root.Std_k98ojb.List.Remove {}\n        instance(x: 426, y: -303) min2_node root.main.min {}\n\n        items_ai -> min_node.items\n        min_node.min -> remove_node.index\n        items_ai -> remove_node.list\n        remove_node.listWithoutItem -> min2_node.items\n\n        min2_node.min -> second_min_1\n    }\n\n    \n    instance(x: -174, y: -63) min_d6e930 root.main.min {}\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -285, y: -0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1c8d4e root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -40) list_remove_2a9f3f root.Std_k98ojb.List.Remove {}\n            min_1c8d4e.items -> list_remove_2a9f3f.list\n            min_1c8d4e.min -> list_remove_2a9f3f.index\n            list_remove_2a9f3f.listWithoutItem -> find_6d05b0.items\n            elem_9f6850 -> notequal_807ffd.left\n            min_1c8d4e.min -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1e8b2c root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -60) list_remove_7a9f3d root.Std_k98ojb.List.Remove {}\n            min_1e8b2c.items -> list_remove_7a9f3d.list\n            0 -> list_remove_7a9f3d.index\n            list_remove_7a9f3d.listWithoutItem -> min_1e8b2c.items\n            elem_9f6850 -> notequal_807ffd.right\n            min_1e8b2c.min -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_2c1d4e root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 314, y: -14) list_remove_7f9a6c root.Std_k98ojb.List.Remove {}\n            min_2c1d4e.items -> list_remove_7f9a6c.list\n            elem_9f6850 -> list_remove_7f9a6c.index\n            list_remove_7f9a6c.listWithoutItem -> min_2c1d4e.items\n            min_2c1d4e.min -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: -0, name: \"list\") property(List) list_8f9d6a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) min_7e4c5b root.Std_k98ojb.List.Min {}\n        list_8f9d6a -> min_7e4c5b.items\n        instance(x: -1, y: 0) remove_3b2f2f root.Std_k98ojb.List.Remove {}\n        min_7e4c5b.min -> remove_3b2f2f.index\n        list_8f9d6a -> remove_3b2f2f.list\n        instance(x: 0, y: -1) min_2c3b3b root.Std_k98ojb.List.Min {}\n        remove_3b2f2f.listWithoutItem -> min_2c3b3b.items\n        min_2c3b3b.min -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_5e7d6a root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3e6c1d root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 311, y: -34) list_remove_8f7a5f root.Std_k98ojb.List.Remove {}\n            min_3e6c1d.items -> list_remove_8f7a5f.list\n            elem_9f6850 -> list_remove_8f7a5f.index\n            list_remove_8f7a5f.listWithoutItem -> min_3e6c1d.items\n            min_3e6c1d.min -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -288, y: -0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"second smallest\") property(Number) second_smallest_f9110a\n\n        instance(x: 0, y: 0) min_12bf99 root.Std_k98ojb.List.Min {}\n        list_9f7759 -> min_12bf99.items\n        instance(x: -341, y: -301) remove_685c8f root.Std_k98ojb.List.Remove {}\n        min_12bf99.min -> remove_685c8f.index\n        list_9f7759 -> remove_685c8f.list\n        instance(x: 0, y: 0) min2_c3e343 root.Std_k98ojb.List.Min {}\n        remove_685c8f.listWithoutItem -> min2_c3e343.items\n        min2_c3e343.min -> second_smallest_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_2d8b5c root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: -53) min_7f9e4a root.Std_k98ojb.Math.Min2 {}\n            list_abed4a -> min_2d8b5c.items\n            min_2d8b5c.min -> min_7f9e4a.left\n            elem_9f6850 -> min_7f9e4a.right\n            min_7f9e4a.min -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1e8b3c root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -90) list_remove_7f2d4a root.Std_k98ojb.List.Remove {}\n            min_1e8b3c.items -> list_remove_7f2d4a.list\n            elem_9f6850 -> list_remove_7f2d4a.index\n            list_remove_7f2d4a.listWithoutItem -> min_1e8b3c.items\n            min_1e8b3c.min -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_RAG_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 15910,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -475, y: -206, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -485, y: 30, name: \"list2\") property(List) list2_6b3d5c\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_4d1a8f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_4d1a8f\n        ifexpression_875761.value -> output_4d1a8f\n        list1_8a2f9e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_6b3d5c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        list1_8a2f9e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_6b3d5c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_7f9b6d root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -435, y: -211, name: \"list1\") property(List) list1_3f0b8e\n        in(x: -433, y: 40, name: \"list2\") property(List) list2_9a7c4d\n\n        out(x: 1265, y: 29, name: \"output\") property(Bool) output_6c1c3f\n\n        instance(x: 1058, y: -201) intersection_7e0b4c root.Std_k98ojb.Sets.Intersection {}\n        list1_3f0b8e -> intersection_7e0b4c.left\n        list2_9a7c4d -> intersection_7e0b4c.right\n        instance(x: 1056, y: -10) notempty_c5b3d8 root.Std_k98ojb.List.NotEmpty {}\n        intersection_7e0b4c.intersection -> notempty_c5b3d8.list\n        notempty_c5b3d8.isEmpty -> output_6c1c3f\n    }\n\n    \n\n    instance(x: -296, y: 13) common_element_9a2d8c root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -365, y: -198, name: \"list1\") property(List) list1_3f0b8e\n        in(x: -371, y: 30, name: \"list2\") property(List) list2_9c4d7a\n\n        out(x: 1245, y: 6, name: \"output\") property(Bool) output_5d1f3f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 0, y: -100) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_3f0b8e -> intersection_c7c7e6.left\n        list2_9c4d7a -> intersection_c7c7e6.right\n        instance(x: 300, y: -50) notempty_5f8b2a root.Std_k98ojb.List.NotEmpty {}\n        intersection_c7c7e6.intersection -> notempty_5f8b2a.list\n        notempty_5f8b2a.isEmpty -> output_5d1f3f\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_fc79d5 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -325, y: -170, name: \"list1\") property(List) list1_3f0e5d\n        in(x: -333, y: 15, name: \"list2\") property(List) list2_7a9c8b\n\n        out(x: 1186, y: -163, name: \"output\") property(Bool) output_4f1c3e\n\n        instance(x: 0, y: -158) intersection_5d1e4f root.Std_k98ojb.Sets.Intersection {}\n        list1_3f0e5d -> intersection_5d1e4f.left\n        list2_7a9c8b -> intersection_5d1e4f.right\n        instance(x: 586, y: -158) notempty_6e9f1f root.Std_k98ojb.List.NotEmpty {}\n        intersection_5d1e4f.intersection -> notempty_6e9f1f.list\n        notempty_6e9f1f.isEmpty -> output_4f1c3e\n    }\n\n    \n\n    instance(x: -299, y: 0) common_element_7a8b2f root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -457, y: -214, name: \"list1\") property(List) list1_9a8b2f\n        in(x: -465, y: 30, name: \"list2\") property(List) list2_6c0e3d\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_4e1c9a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_4e1c9a\n        ifexpression_875761.value -> output_4e1c9a\n        list1_9a8b2f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_6c0e3d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        for_d26972.done -> output_4e1c9a\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_d26972.item -> setter_9d4f1c.new_value\n        ifexpression_875761.value -> output_4e1c9a\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_3b8b2c root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -427, y: -206, name: \"list1\") property(List) list1_0a9f6e\n        in(x: -435, y: 34, name: \"list2\") property(List) list2_5b8d3c\n\n        out(x: 1267, y: 11, name: \"output\") property(Bool) output_4b1c0a\n\n        instance(x: 1056, y: -205) contains_9e5f64 root.Std_k98ojb.List.Contains {}\n        instance(x: 847, y: -207) intersection_3d7b8c root.Std_k98ojb.Sets.Intersection {}\n        list1_0a9f6e -> intersection_3d7b8c.left\n        list2_5b8d3c -> intersection_3d7b8c.right\n        intersection_3d7b8c.intersection -> contains_9e5f64.list\n        0 -> contains_9e5b64.item\n        contains_9e5f64.is_contained -> output_4b1c0a\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_7a4dad root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -457, y: -235, name: \"list1\") property(List) list1_2a8f5e\n        in(x: -465, y: 30, name: \"list2\") property(List) list2_7b3c6d\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_4f9b1a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_4f9b1a\n        ifexpression_875761.value -> output_4f9b1a\n        list1_2a8f5e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_7b3c6d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        list1_2a8f5e -> contains_32727d.left\n        for_d26972.item -> contains_32727d.right\n        contains_32727d.is_contained -> ifexpression_875761.then\n        contains_32727d.list -> list2_7b3c6d\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_1f8e5a root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -341, y: -216, name: \"list1\") property(List) list1_3f0b6a\n        in(x: -349, y: 30, name: \"list2\") property(List) list2_7c4d5e\n\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_9f1d3b\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 0, y: -100) intersection_3a5b2d root.Std_k98ojb.Sets.Intersection {}\n        list1_3f0b6a -> intersection_3a5b2d.left\n        list2_7c4d5e -> intersection_3a5b2d.right\n        instance(x: 300, y: -50) notempty_8b9c8f root.Std_k98ojb.List.NotEmpty {}\n        intersection_3a5b2d.intersection -> notempty_8b9c8f.list\n        notempty_8b9c8f.isEmpty -> output_9f1d3b\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_f7e4b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -475, y: -212, name: \"list1\") property(List) list1_9e3b8f\n        in(x: -483, y: 30, name: \"list2\") property(List) list2_5c0d7a\n\n        out(x: 1226, y: 4, name: \"output\") property(Bool) output_8e1b9f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_8e1b9f\n        ifexpression_875761.value -> output_8e1b9f\n        list1_9e3b8f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list2_5c0d7a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        for_d26972.item -> setter_9d4f1c.new_value\n    }\n\n    \n\n    instance(x: -10, y: -177) common_element_c5b8d3 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -465, y: -235, name: \"list1\") property(List) list_0a8b5f\n        in(x: -485, y: 30, name: \"list2\") property(List) list_7c6d9e\n\n        out(x: 1227, y: 5, name: \"output\") property(Bool) output_1f4c0a\n\n        instance(x: 752, y: 93) intersection_3b8f4f root.Std_k98ojb.Sets.Intersection {}\n        list_0a8b5f -> intersection_3b8f4f.left\n        list_7c6d9e -> intersection_3b8f4f.right\n        instance(x: 1218, y: 147) notempty_1b2c8f root.Std_k98ojb.List.NotEmpty {}\n        intersection_3b8f4f.intersection -> notempty_1b2c8f.list\n        notempty_1b2c8f.isEmpty -> output_1f4c0a\n    }\n\n    \n\n    instance(x: 10, y: -177) common_element_7e5d6f root.main.common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -535, y: 5, name: \"list\") property(List) list_4f8a3e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_4f8a3e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_4f8a3e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_3a5b7f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -569, y: 438, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"output\") property(Bool) output_57c890\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_542a51 -> filter_f3b46d.list\n        filter_f3b46d.result -> firstitem_870503.list\n        list_542a51 -> filter_4d4556.list\n        filter_4d4556.result -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) is_consecutive_f21f44 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -533, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -533, y: 1, name: \"list\") property(List) list_2f8a4e\n\n        out(x: 555, y: -3, name: \"output\") property(Bool) output_7b9c6d\n\n        instance(x: 772, y: 76) filter_5e0f1f root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_2f8a4e -> filter_5e0f1f.list\n        filter_5e0f1f.result -> intersection_c7c7e6.left\n        list_2f8a4e -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_7b9c6d\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_a3e5a8 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -515, y: 1, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 584, y: -97) not_75283f root.Std_k98ojb.Logic.Not {}\n        list_3af6ba -> intersection_c7c7e6.left\n        instance(x: 0, y: -35) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 321, y: -20) add_7f1c6d root.Std_k98ojb.List.Add {}\n        for_d26972.item -> intersection_c7c7e6.right\n        list_3af6ba -> getat_ce2a48.list\n        for_d26972.index -> getat_ce2a48.index\n        add_7f1c6d.item -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> add_7f1c6d.item\n        for_d26972.onItem -> add_7f1c6d.execute\n        list_3af6ba -> for_d26972.items\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        not_75283f.input -> output_c7097f\n        equal_f89569.result -> not_75283f.input\n        for_d26972.done -> add_7f1c6d.execute\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_ac7dfb root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 575, y: -97) not_75283f root.Std_k98ojb.Logic.Not {}\n        list_3af6ba -> intersection_c7c7e6.left\n        instance(x: 0, y: -5) generate_range_1a8d2f root.Std_k98ojb.List.GenerateRange {\n            from: \"min(list)\"\n            to: \"max(list)\"\n        }\n        generate_range_1a8d2f.list -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        instance(x: 0, y: -5) len_list_3a4d9f root.Std_k98ojb.List.Length {}\n        list_3af6ba -> len_list_3a4d9f.list\n        len_list_3a4d9f.length -> equal_f89569.right\n        not_75283f.result -> output_c7097f\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        equal_f89569.result -> not_75283f.input\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_ac7dfb root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -505, y: 4, name: \"list\") property(List) list_5e8f3a\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_5e8f3a -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_5e8f3a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -569, y: 438, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"output\") property(Bool) output_57c890\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_542a51 -> filter_f3b46d.list\n        filter_f3b46d.result -> firstitem_870503.list\n        list_542a51 -> filter_4d4556.list\n        filter_4d4556.result -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) is_consecutive_f21f44 root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -475, y: 20, name: \"sublist\") property(List) sublist_5a9f1e\n        in(x: -476, y: -205, name: \"list\") property(List) list_3b0c6d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"index\") count_9d4f1c root.Std_k98ojb.Std.Count {}\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == sublist.length\"\n        }\n        instance(x: 679, y: -313, name: \"previous\") setter_9d4f1c root.Std_k98ojb.Setting.Setter {}\n        instance(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3b0c6d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3b0c6d -> getat_ce2a48.list\n        count_9d4f1c.count -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        sublist_5a9f1e -> count_9d4f1c.items\n        execute -> count_9d4f1c.reset\n        continue_a96db6 -> for_d26972.next\n        setter_9d4f1c.continue -> for_d26972.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -445, y: 40, name: \"list1\") property(List) list1_3f0b8a\n        in(x: -443, y: -186, name: \"list2\") property(List) list2_7e9c4d\n\n        out(x: 1265, y: -190, name: \"output\") property(Bool) output_6c1c3f\n\n        instance(x: -274, y: -182, name: \"is sublist\") filter_8b0a3c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: 0, y: -10, name: \"current\") property(List) current_5f1d7e\n\n            out(x: 707, y: -32, name: \"output\") property(Bool) output_8a2c9b\n\n            instance(x: 240, y: -29) contains_3a0e6c root.Std_k98ojb.List.Contains {}\n            current_5f1d7e -> contains_3a0e6c.list\n            list2_7e9c4d -> contains_3a0e6c.item\n            contains_3a0e6c.is_contained -> output_8a2c9b\n        } -> filter_8b0a3c.handler\n        instance(x: 847, y: -182) length_1f7a5d root.Std_k98ojb.List.Length {}\n        list1_3f0b8a -> filter_8b0a3c.items\n        func() {\n            in(x: -32, y: -16, name: \"current\") property(List) current_4e6f2c\n\n            out(x: 521, y: -28, name: \"output\") property(Bool) output_1d7b0a\n\n            instance(x: 74, y: -23) slice_3e5b8c root.Std_k98ojb.List.Slice {}\n            current_4e6f2c -> slice_3e5b8c.list\n            0 -> slice_3e5b8c.start\n            length_1f7a5d.length -> slice_3e5b8c.end\n            slice_3e5b8c.slice -> output_1d7b0a\n        } -> filter_8b0a3c.handler\n        list1_3f0b8a -> length_1f7a5d.list\n        instance(x: 1059, y: -186) not_2e4f6f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_3c0a1e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_8f2d7b\n\n            instance(x: 226, y: 56) length_5e9b4c root.Std_k98ojb.List.Length {}\n            current_3c0a1e -> length_5e9b4c.list\n            func() {\n                in(x: -192, y: -16, name: \"current\") property(List) current_7f2d8c\n\n                out(x: 521, y: -28, name: \"output\") property(Bool) output_3a1e5b\n\n                instance(x: 74, y: -23) slice_6e4f9c root.Std_k98ojb.List.Slice {}\n                current_7f2d8c -> slice_6e4f9c.list\n                0 -> slice_6e4f9c.start\n                length_5e9b4c.length -> slice_6e4f9c.end\n                slice_6e4f9c.slice -> output_3a1e5b\n            } -> filter_8b0a3c.handler\n            list1_3f0b8a -> filter_8b0a3c.items\n            length_5e9b4c.length -> output_8f2d7b\n        } -> filter_8b0a3c.handler\n        not_2e4f6f.result -> output_6c1c3f\n        filter_8b0a3c.output_list -> not_2e4f6f.input\n    }\n\n    \n\n    instance(x: -93, y: 59) is_sublist_7d5f9c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 0, name: \"sublist\") property(List) sublist_1e9f5b\n        in(x: -310, y: -160, name: \"list\") property(List) list_7c2d8a\n\n        out(x: 1073, y: -105, name: \"output\") property(Bool) output_4b0b6f\n\n        instance(x: -94, y: -110, name: \"sublist length\") length_9e5f1f root.Std_k98ojb.List.Length {}\n        instance(x: 146, y: -111) generateRange_7a8d3c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 364, y: -112) slice_2a0b6c root.Std_k98ojb.List.Slice {}\n        instance(x: 584, y: -113) contains_1e4f9f root.Std_k98ojb.List.Contains {}\n        sublist_1e9f5b -> length_9e5f1f.list\n        0 -> generateRange_7a8d3c.from\n        length_9e5f1f.length -> generateRange_7a8d3c.to\n        list_7c2d8a -> slice_2a0b6c.items\n        generateRange_7a8d3c.list -> slice_2a0b6c.start\n        -1 -> slice_2a0b6c.end\n        slice_2a0b6c.slice -> contains_1e4f9f.list\n        sublist_1e9f5b -> contains_1e4f9f.item\n        contains_1e4f9f.is_contained -> output_4b0b6f\n    }\n\n    \n\n    instance(x: -77, y: 55) is_sublist_3a8d2c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 30, name: \"sublist\") property(List) sublist_5e9a6f\n        in(x: -306, y: -130, name: \"list\") property(List) list_7c1b3d\n\n        out(x: 1100, y: -15, name: \"output\") property(Bool) output_2a4c8d\n\n        instance(x: -91, y: -20, name: \"find sublist in list\") find_9e5f6f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: 0, y: 0, name: \"list\") property(List) list_1a3c8d\n\n            out(x: 0, y: 0, name: \"output\") property(Bool) output_2f4e9d\n\n            instance(x: -30, y: 50, name: \"find sublist in list\") find_7b5f6f root.Std_k98ojb.Iteration.Find {}\n            func() {\n                in(x: 0, y: 0, name: \"item\") property(List) item_3a4c8d\n\n                out(x: 0, y: 0, name: \"output\") property(Bool) output_5f6e9d\n\n                instance(x: -30, y: 50, name: \"find sublist in list\") find_1b5f6f root.Std_k98ojb.Iteration.Find {}\n                func() {\n                    in(x: 0, y: 0, name: \"item\") property(Any) item_2a4c8d\n\n                    out(x: 0, y: 0, name: \"output\") property(Bool) output_3f6e9d\n\n                    instance(x: -30, y: 50, name: \"find sublist in list\") find_5b5f6f root.Std_k98ojb.Iteration.Find {}\n                    func() {\n                        in(x: 0, y: 0, name: \"item\") property(Any) item_4a4c8d\n\n                        out(x: 0, y: 0, name: \"output\") property(Bool) output_1f6e9d\n\n                        instance(x: -30, y: 50, name: \"find sublist in list\") find_3b5f6f root.Std_k98ojb.Iteration.Find {}\n                        func() {\n                            in(x: 0, y: 0, name: \"item\") property(Any) item_6a4c8d\n\n                            out(x: 0, y: 0, name: \"output\") property(Bool) output_7e9f9d\n\n                            instance(x: -30, y: 50, name: \"find sublist in list\") find_2b5f6f root.Std_k98ojb.Iteration.Find {}\n                            func() {\n                                in(x: 0, y: 0, name: \"item\") property(Any) item_8a4c8d\n\n                                out(x: 0, y: 0, name: \"output\") property(Bool) output_9f6e9d\n\n                                instance(x: -30, y: 50, name: \"find sublist in list\") find_4b5f6f root.Std_k98ojb.Iteration.Find {}\n                                func() {\n                                    in(x: 0, y: 0, name: \"item\") property(Any) item_aa4c8d\n\n                                    out(x: 0, y: 0, name: \"output\") property(Bool) output_ef9f9d\n\n                                    instance(x: -30, y: 50, name: \"find sublist in list\") find_6b5f6f root.Std_k98ojb.Iteration.Find {}\n                                    func() {\n                                        in(x: 0, y: 0, name: \"item\") property(Any) item_ca4c8d\n\n                                        out(x: 0, y: 0, name: \"output\") property(Bool) output_1f6e9d\n\n                                        instance(x: -30, y: 50, name: \"find sublist in list\") find_8b5f6f root.Std_k98ojb.Iteration.Find {}\n                                        func() {\n                                            in(x: 0, y: 0, name: \"item\") property(Any) item_ea4c8d\n\n                                            out(x: 0, y: 0, name: \"output\") property(Bool) output_2f6e9d\n\n                                            instance(x: -30, y: 50, name: \"find sublist in list\") find_a5b5f6 root.Std_k98ojb.Iteration.Find {}\n                                            func() {\n                                                in(x: 0, y: 0, name: \"item\") property(Any) item_2a4c8d\n\n                                                out(x: 0, y: 0, name: \"output\") property(Bool) output_3f6e9d\n\n                                                instance(x: -30, y: 50, name: \"find sublist in list\") find_b5b5f6 root.Std_k98ojb.Iteration.Find {}\n                                                func() {\n                                                    in(x: 0, y: 0, name: \"item\") property(Any) item_4a4c8d\n\n                                                    out(x: 0, y: 0, name: \"output\") property(Bool) output_5f6e9d\n\n                                                    instance(x: -30, y: 50, name: \"find sublist in list\") find_c5b5f6 root.Std_k98ojb.Iteration.Find {}\n                                                    func() {\n                                                        in(x: 0, y: 0, name: \"item\") property(Any) item_6a4c8d\n\n                                                        out(x: 0, y: 0, name: \"output\") property(Bool) output_7f6e9d\n\n                                                        instance(x: -30, y: 50, name: \"find sublist in list\") find_d5b5f6 root.Std_k98ojb.Iteration.Find {}\n                                                        func() {\n                                                            in(x: 0, y: 0, name: \"item\") property(Any) item_8a4c8d\n\n                                                            out(x: 0, y: 0, name: \"output\") property(Bool) output_9f6e9d\n\n                                                            instance(x: -30, y: 50, name: \"find sublist in list\") find_e5b5f6 root.Std_k98ojb.Iteration.Find {}\n                                                            func() {\n                                                                in(x: 0, y: 0, name: \"item\") property(Any) item_aa4c8d\n\n                                                                out(x: 0, y: 0, name: \"output\") property(Bool) output_ef9f9d\n\n                                                                instance(x: -30, y: 50, name: \"find sublist in list\") find_f5b5f6 root.Std_k98ojb.Iteration.Find {}\n                                                                func() {\n                                                                    in(x: 0, y: 0, name: \"item\") property(Any) item_ca4c8d\n\n                                                                    out(x: 0, y: 0, name: \"output\") property(Bool) output_1f6e9d\n\n                                                                    instance(x: -30, y: 50, name: \"find sublist in list\") find_g5b5f6 root.Std_k98ojb.Iteration.Find {}\n                                                                    func() {\n                                                                        in(x: 0, y: 0, name: \"item\") property(Any) item_ea4c8d\n\n                                                                        out(x: 0, y: 0, name: \"output\") property(Bool) output_2f6e9d\n\n                                                                        instance(x: -30, y: 50, name: \"find sublist in list\") find_h5b5f6 root.Std_k98ojb.Iteration.Find {}\n                                                                        func() {\n                                                                            in(x: 0, y: 0, name: \"item\") property(Any) item_2a4c8d\n\n                                                                            out(x: 0, y: 0, name: \"output\") property(Bool) output_3f6e9d\n\n                                                                            instance(x: -30, y: 50, name: \"find sublist in list\") find_i5b5f6 root.Std_k98ojb.Iteration.Find {}\n                                                                            func() {\n                                                                                in(x: 0, y: 0, name: \"item\") property(Any) item_4a4c8d\n\n                                                                                out(x: 0, y: 0, name: \"output\") property(Bool) output_5f6e9d\n\n                                                                                instance(x: -30, y: 50, name: \"find sublist in list\") find_j5b5f6 root.Std_k98ojb.Iteration.Find {}\n                                                                                func() {\n                                                                                    in(x: 0, y: 0, name: \"item\")",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -400, y: 30, name: \"list1\") property(List) list1_2a8b3f\n        in(x: -408, y: 138, name: \"list2\") property(List) list2_5c9e4d\n\n        out(x: 1010, y: 105, name: \"output\") property(Bool) output_7e1b6a\n\n        instance(x: -147, y: 108, name: \"length of list2\") length_3f8a6f root.Std_k98ojb.List.Length {}\n        instance(x: 465, y: 105) contains_9c4d0c root.Std_k98ojb.List.Contains {}\n        instance(x: -146, y: -12, name: \"slice list1\") slice_7e5a2f root.Std_k98ojb.List.Slice {}\n        instance(x: 465, y: -14) contains_9c4d0c_3 root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> slice_7e5a2f.start\n        0 -> slice_7e5a2f.end\n        list1_2a8b3f -> slice_7e5a2f.list\n        length_3f8a6f.length -> slice_7e5a2f.end\n        contains_9c4d0c.is_contained -> output_7e1b6a\n        list2_5c9e4d -> contains_9c4d0c.item\n        slice_7e5a2f.slice -> contains_9c4d0c.list\n        length_3f8a6f.length -> contains_9c4d0c_3.end\n        0 -> contains_9c4d0c_.start\n        list1_2a8b3f -> contains_9c4d0c_.list\n        contains_9c4d0c_.is_contained -> slice_7e5a2f.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 5, name: \"superList\") property(List) superList_2f0b6d\n        in(x: -485, y: 165, name: \"subList\") property(List) subList_9a8e3c\n\n        out(x: 1227, y: 155, name: \"continue\") trigger() continue_5f1e4f\n        out(x: 1218, y: -35, name: \"output\") property(Bool) output_2d0b6f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_5f1e4f\n        ifexpression_875761.value -> output_2d0b6f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        subList_9a8e3c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_5f1e4f\n        for_d26972.item -> setter_9d4f1c.new_value\n        superList_2f0b6d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_5f1e4f -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 5, name: \"list1\") property(List) list1_4e6f8d\n        in(x: -473, y: 147, name: \"list2\") property(List) list2_9c7b3a\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_4e6f8d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_9c7b3a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> is_sublist.execute\n        execute -> for_d26972.reset\n    }\n\n    \n\n    instance(x: -10, y: -5) is_sublist_1f7d0c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_3a9f8d\n        in(x: -485, y: -235, name: \"sub_list\") property(List) sub_list_1e5c0b\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_3a9f8d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_3a9f8d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        sub_list_1e5c0b -> for_d26972.items\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -480, y: 0, name: \"mainList\") property(List) mainList_1f846b\n        in(x: -479, y: 140, name: \"subList\") property(List) subList_c62075\n\n        out(x: 784, y: 25, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 133, y: 59) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> for_d26972.handler\n        mainList_1f846b -> for_d26972.items\n        func() {\n            in(x: -192, y: -16, name=\"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name=\"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        for_d26972.output_list -> map_c73e3b.items\n        instance(x: -303, y: -205, name=\"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name=\"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        map_c73e3b.output_list -> filter_c91965.items\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name=\"transform numbers to true/false\") map_c73e3b_1 root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name=\"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name=\"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b_1.handler\n        filter_c91965.output_list -> map_c73e3b_1.items\n        instance(x: -303, y: 5, name=\"only even indexes\") filter_7f9c6a root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name=\"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) equal_1a8f6c root.Std_k98ojb.Logic.Equal {}\n            2 -> modulo_c76d2b.divisor\n            0 -> equal_1a8f6c.right\n            equal_1a8f6c.result -> output_efbc78\n            modulo_c76d2b.result -> equal_1a8f6c.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_7f9c6a.handler\n        map_c73e3b_1.output_list -> filter_7f9c6a.items\n        instance(x: 847, y: 37) contains_32727d_1 root.Std_k98ojb.List.Contains {}\n        zip_201051.left -> subList_c62075\n        zip_201051.right -> map_c73e3b.output_list\n        zip_201051.zipped -> for_d26972.items\n        func() {\n            in(x: -192, y: -16, name=\"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name=\"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        contains_32727d.is_contained -> not_75283f.input\n        for_d26972.onItem -> zip_201051.execute\n        for_d26972.done -> contains_32727d.list\n        map_c73e3b.output_list -> contains_32727d.item\n        filter_7f9c6a.output_list -> contains_32727d_1.list\n        subList_c62075 -> contains_32727d_1.item\n        not_75283f.result -> output_0d40f1\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -445, y: 5, name: \"list1\") property(List) list1_4a2f9d\n        in(x: -447, y: -179, name: \"list2\") property(List) list2_7e3c0b\n\n        out(x: 1218, y: -174, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -194, y: -175, name: \"is sublist\") filter_1a4f6d root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: 0, y: -30, name: \"current\") property(List) current_9e8c3f\n            in(x: 0, y: 50, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            list2_7e3c0b -> contains_32727d.list\n            current_9e8c3f -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> filter_1a4f6d.handler\n        instance(x: 1058, y: -169) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            list1_4a2f9d -> contains_32727d.list\n            _index_170471 -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> filter_1a4f6d.items\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            list1_4a2f9d -> contains_32727d.list\n            _index_170471 -> contains_32727d.item\n            contains_32727d.is_contained -> output_efbc78\n        } -> filter_1a4f6d.items\n        not_75283f.result -> output_5bbcd7\n        filter_1a4f6d.output_list -> not_75283f.input\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a1b8e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c2f5d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 36, name: \"index\") property(Number) index_7e5a8c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_3b0f6d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7e5a8c -> add_3b0f6d.first\n            1 -> add_3b0f6d.second\n            add_3b0f6d.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3a1b8e -> find_6d05b0.items\n        find_6d05b0.item -> missing_7c2f5d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e8f9a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c6d4b\n\n        instance(x: 0, y: 0) find_5a2f5e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1e8c3d\n            in(x: -108, y: 117, name: \"elem\") property(Number) elem_6f5a9b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_e2f4ae\n\n            instance(x: 89, y: 29) add_3c1e0d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_7a8d5f root.Std_k98ojb.Logic.NotEqual {}\n            index_1e8c3d -> add_3c1e0d.first\n            1 -> add_3c1e0d.second\n            add_3c1e0d.result -> notequal_7a8d5f.left\n            elem_6f5a9b -> notequal_7a8d5f.right\n            notequal_7a8d5f.result -> bool_e2f4ae\n        } -> find_5a2f5e.predicate\n        list_3e8f9a -> find_5a2f5e.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1e8c3d\n            in(x: -108, y: 117, name: \"elem\") property(Number) elem_6f5a9b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_e2f4ae\n\n            instance(x: 89, y: 29) add_3c1e0d root.Std_k98ojb.Math.Add {}\n            index_1e8c3d -> add_3c1e0d.first\n            1 -> add_3c1e0d.second\n            add_3c1e0d.result -> bool_e2f4ae\n        } -> find_5a2f5e.context\n        find_5a2f5e.item -> missing_7c6d4b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_8f3a0f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_3a9f8e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_6c7b4d\n\n        instance(x: 0, y: 0) find_5f2d7e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1a8c3f\n            in(x: -108, y: 117, name: \"elem\") property(Number) elem_7d9e5b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_4f2b6a\n\n            instance(x: 89, y: 29) add_3c1f0a root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_9d8e5f root.Std_k98ojb.Logic.NotEqual {}\n            index_1a8c3f -> add_3c1f0a.first\n            1 -> add_3c1f0a.second\n            add_3c1f0a.result -> notequal_9d8e5f.left\n            elem_7d9e5b -> notequal_9d8e5f.right\n            notequal_9d8e5f.result -> bool_4f2b6a\n        } -> find_5f2d7e.predicate\n        list_3a9f8e -> find_5f2d7e.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1a8c3f\n            in(x: -108, y: 117, name: \"elem\") property(Number) elem_7d9e5b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_4f2b6a\n\n            instance(x: 89, y: 29) add_3c1f0a root.Std_k98ojb.Math.Add {}\n            index_1a8c3f -> add_3c1f0a.first\n            1 -> add_3c1f0a.second\n            add_3c1f0a.result -> bool_4f2b6a\n        } -> find_5f2d7e.context\n        find_5f2d7e.item -> missing_6c7b4d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_9b8f3e root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_3e9f5a\n\n        out(x: 595, y: -1, name: \"missing\") property(Number) missing_7b2d8c\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 35, name: \"index\") property(Number) index_1a7d8c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_3e5b9f root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_1a7d8c -> add_3e5b9f.first\n            0 -> add_3e5b9f.second\n            add_3e5b9f.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3e9f5a -> find_6d05b0.items\n        find_6d05b0.item -> missing_7b2d8c\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1e4c5f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -279, y: 0, name: \"list\") property(List) list_9f8d4a\n\n        out(x: 591, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 35, name: \"index\") property(Number) index_1e8c5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_2b3f4d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_1e8c5a -> add_2b3f4d.first\n            0 -> add_2b3f4d.second\n            add_2b3f4d.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f8d4a -> find_6d05b0.items\n        find_6d05b0.item -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1a3b8f\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7e9d2c\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -118, y: -36, name: \"index\") property(Number) index_8c1a2e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_9f3b6d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_8c1a2e -> add_9f3b6d.first\n            1 -> add_9f3b6d.second\n            elem_9f6850 -> notequal_807ffd.right\n            add_9f3b6d.result -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_1a3b8f -> find_6d05b0.items\n        find_6d05b0.index -> index_8c1a2e\n        find_6d05b0.item -> missing_7e9d2c\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_5f4b3c root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e4f1a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7c8b6d\n\n        instance(x: 0, y: 0) find_2b9f5a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1e7c3a\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1e8c4d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_1e7c3a -> add_1e8c4d.first\n            1 -> add_1e8c4d.second\n            add_1e8c4d.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_2b9f5a.predicate\n        list_3e4f1a -> find_2b9f5a.items\n        find_2b9f5a.index + 1 -> missing_7c8b6d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9e3f8a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_7b2c6d\n\n        instance(x: 0, y: 0) find_5a4c8f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9e3f8a\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_8b5c4d root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9e3f8a -> add_8b5c4d.first\n            1 -> add_8b5c4d.second\n            add_8b5c4d.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_5a4c8f.predicate\n        list_9e3f8a -> find_5a4c8f.items\n        find_5a4c8f.index + 1 -> missing_7b2c6d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -280, y: 0, name: \"list\") property(List) list_3a8f6e\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_9c7d2b\n\n        instance(x: 0, y: 0) find_4b5c0e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1a8f7d\n            in(x: -108, y: 89, name: \"elem\") property(Number) elem_9c5e2b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_6b3d4f\n\n            instance(x: 89, y: 29) sub_7a8b1f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_5c9e2f root.Std_k98ojb.Logic.NotEqual {}\n            index_1a8f7d -> sub_7a8b1f.first\n            elem_9c5e2b -> sub_7a8b1f.second\n            sub_7a8b1f.result -> notequal_5c9e2f.left\n            0 -> notequal_5c9e2f.right\n            notequal_5c9e2f.result -> bool_6b3d4f\n        } -> find_4b5c0e.predicate\n        list_3a8f6e -> find_4b5c0e.items\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_1a8f7d\n            in(x: -108, y: 89, name: \"elem\") property(Number) elem_9c5e2b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_6b3d4f\n\n            instance(x: 89, y: 29) sub_7a8b1f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_5c9e2f root.Std_k98ojb.Logic.NotEqual {}\n            index_1a8f7d -> sub_7a8b1f.first\n            elem_9c5e2b -> sub_7a8b1f.second\n            sub_7a8b1f.result -> notequal_5c9e2f.left\n            0 -> notequal_5c9e2f.right\n            notequal_5c9e2f.result -> bool_6b3d4f\n        } -> find_4b5c0e.context\n        find_4b5c0e.item -> missing_9c7d2b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1a8f7d root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f8d4a\n\n        out(x: 593, y: -1, name: \"missing\") property(Number) missing_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_ae09a7\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_9f6850 -> add_1088d5.first\n            1 -> add_1088d5.second\n            add_1088d5.result -> notequal_807ffd.left\n            elem_ae09a7 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f8d4a -> find_6d05b0.items\n        find_6d05b0.index -> missing_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -124, y: 0, name: \"input\") property(String) input_9f8a3d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1b4c5e\n\n        instance(x: 0, y: 1) replace_7a6d1e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3f9c2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4e8f5a root.Std_k98ojb.Strings.Replace {}\n        input_9f8a3d -> replace_7a6d1e.input\n        \" \" -> replace_7a6d1e.search\n        \":\" -> replace_7a6d1e.replace\n        replace_7a6d1e.output -> replace_3f9c2d.input\n        \",\" -> replace_3f9c2d.search\n        \":\" -> replace_3f9c2d.replace\n        replace_3f9c2d.output -> replace_4e8f5a.input\n        \".\" -> replace_4e8f5a.search\n        \":\" -> replace_4e8f5a.replace\n        replace_4e8f5a.output -> output_1b4c5e\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -135, y: 0, name: \"input\") property(String) input_1a8f6e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5b7c9d\n\n        instance(x: 0, y: 1) replace_3e4d0f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a6c2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_f7e9ae root.Std_k98ojb.Strings.Replace {}\n        input_1a8f6e -> replace_3e4d0f.input\n        \" \" -> replace_3e4d0f.search\n        \":\" -> replace_3e4d0f.replace\n        replace_3e4d0f.output -> replace_8a6c2f.input\n        \",\" -> replace_8a6c2f.search\n        \":\" -> replace_8a6c2f.replace\n        replace_8a6c2f.output -> replace_f7e9ae.input\n        \".\" -> replace_f7e9ae.search\n        \":\" -> replace_f7e9ae.replace\n        replace_f7e9ae.output -> output_5b7c9d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"input\") property(String) input_1a3f8e\n\n        out(x: 532, y: -2, name: \"output\") property(String) output_5c7d4b\n\n        instance(x: 0, y: 1) replace_6e9f1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a3b2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_5c4d7f root.Std_k98ojb.Strings.Replace {}\n        input_1a3f8e -> replace_6e9f1f.input\n        \" \" -> replace_6e9f1f.search\n        \":\" -> replace_6e9f1f.replace\n        replace_6e9f1f.output -> replace_8a3b2f.input\n        \",\" -> replace_8a3b2f.search\n        \":\" -> replace_8a3b2f.replace\n        replace_8a3b2f.output -> replace_5c4d7f.input\n        \".\" -> replace_5c4d7f.search\n        \":\" -> replace_5c4d7f.replace\n        replace_5c4d7f.output -> output_5c7d4b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -123, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5d8c9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4e6a1f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7b3b7b.input\n        \" \" -> replace_7b3b7b.search\n        \":\" -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> replace_5d8c9f.input\n        \",\" -> replace_5d8c9f.search\n        \":\" -> replace_5d8c9f.replace\n        replace_5d8c9f.output -> replace_4e6a1f.input\n        \".\" -> replace_4e6a1f.search\n        \":\" -> replace_4e6a1f.replace\n        replace_4e6a1f.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -149, y: 0, name: \"input\") property(String) input_1f3d5a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4e8b9c\n\n        instance(x: 0, y: 1) replace_7a6f6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5d3c2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9e4b8c root.Std_k98ojb.Strings.Replace {}\n        input_1f3d5a -> replace_7a6f6f.input\n        \" \" -> replace_7a6f6f.search\n        \":\" -> replace_7a6f6f.replace\n        replace_7a6f6f.output -> replace_5d3c2f.input\n        \",\" -> replace_5d3c2f.search\n        \":\" -> replace_5d3c2f.replace\n        replace_5d3c2f.output -> replace_9e4b8c.input\n        \".\" -> replace_9e4b8c.search\n        \":\" -> replace_9e4b8c.replace\n        replace_9e4b8c.output -> output_4e8b9c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -156, y: 0, name: \"input\") property(String) input_2f8a6d\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_7b1c3e\n\n        instance(x: 0, y: 1) replace_9e5c4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a6f2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_f3e7ea root.Std_k98ojb.Strings.Replace {}\n        input_2f8a6d -> replace_9e5c4c.input\n        \" \" -> replace_9e5c4c.search\n        \":\" -> replace_9e5c4c.replace\n        replace_9e5c4c.output -> replace_8a6f2d.input\n        \",\" -> replace_8a6f2d.search\n        \":\" -> replace_8a6f2d.replace\n        replace_8a6f2d.output -> replace_f3e7ea.input\n        \".\" -> replace_f3e7ea.search\n        \":\" -> replace_f3e7ea.replace\n        replace_f3e7ea.output -> output_7b1c3e\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_e54b7f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -124, y: 0, name: \"input\") property(String) input_9a3f1e\n\n        out(x: 506, y: -2, name: \"output\") property(String) output_7b4d8c\n\n        instance(x: 0, y: 1) replace_6e5f5e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a9f2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_7d8c4c root.Std_k98ojb.Strings.Replace {}\n        input_9a3f1e -> replace_6e5f5e.input\n        \" \" -> replace_6e5f5e.search\n        \":\" -> replace_6e5f5e.replace\n        replace_6e5f5e.output -> replace_3a9f2f.input\n        \",\" -> replace_3a9f2f.search\n        \":\" -> replace_3a9f2f.replace\n        replace_3a9f2f.output -> replace_7d8c4c.input\n        \".\" -> replace_7d8c4c.search\n        \":\" -> replace_7d8c4c.replace\n        replace_7d8c4c.output -> output_7b4d8c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_3e6a1f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -122, y: 0, name: \"input\") property(String) input_2a1f6e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5c7d3b\n\n        instance(x: 0, y: 1) replace_9b8f4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6a5e2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_7d3c1d root.Std_k98ojb.Strings.Replace {}\n        input_2a1f6e -> replace_9b8f4f.input\n        \" \" -> replace_9b8f4f.search\n        \":\" -> replace_9b8f4f.replace\n        replace_9b8f4f.output -> replace_6a5e2f.input\n        \",\" -> replace_6a5e2f.search\n        \":\" -> replace_6a5e2f.replace\n        replace_6a5e2f.output -> replace_7d3c1d.input\n        \".\" -> replace_7d3c1d.search\n        \":\" -> replace_7d3c1d.replace\n        replace_7d3c1d.output -> output_5c7d3b\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_9e8a4f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -124, y: 0, name: \"input\") property(String) input_1a3d9f\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5e4b8c\n\n        instance(x: 0, y: 1) replace_6e7b3f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9a7d2c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4a5f8a root.Std_k98ojb.Strings.Replace {}\n        input_1a3d9f -> replace_6e7b3f.input\n        \" \" -> replace_6e7b3f.search\n        \":\" -> replace_6e7b3f.replace\n        replace_6e7b3f.output -> replace_9a7d2c.input\n        \",\" -> replace_9a7d2c.search\n        \":\" -> replace_9a7d2c.replace\n        replace_9a7d2c.output -> replace_4a5f8a.input\n        \".\" -> replace_4a5f8a.search\n        \":\" -> replace_4a5f8a.replace\n        replace_4a5f8a.output -> output_5e4b8c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_3d1e6 root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"input\") property(String) input_2f3a8e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_7b9c6d\n\n        instance(x: 0, y: 1) replace_4b5c6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a8e2b root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9d7b1a root.Std_k98ojb.Strings.Replace {}\n        input_2f3a8e -> replace_4b5c6f.input\n        \" \" -> replace_4b5c6f.search\n        \":\" -> replace_4b5c6f.replace\n        replace_4b5c6f.output -> replace_3a8e2b.input\n        \",\" -> replace_3a8e2b.search\n        \":\" -> replace_3a8e2b.replace\n        replace_3a8e2b.output -> replace_9d7b1a.input\n        \".\" -> replace_9d7b1a.search\n        \":\" -> replace_9d7b1a.replace\n        replace_9d7b1a.output -> output_7b9c6d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -275, y: 17, name: \"input\") property(String) input_8f1e9d\n\n        out(x: 1056, y: 22, name: \"output\") property(Bool) output_7c0a5b\n\n        instance(x: -115, y: 18, name: \"get characters\") characters_2a4b3c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 375, y: 22) intersection_1f8e9d root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 688, y: 21) length_5e6a7c root.Std_k98ojb.List.Length {}\n        instance(x: 898, y: 20) equal_2f0b3f root.Std_k98ojb.Logic.Equal {}\n        input_8f1e9d -> characters_2a4b3c.input\n        characters_2a4b3c.characters -> intersection_1f8e9d.left\n        characters_2a4b3c.characters -> intersection_1f8e9d.right\n        length_5e6a7c.length -> equal_2f0b3f.left\n        1 -> equal_2f0b3f.right\n        intersection_1f8e9d.intersection -> length_5e6a7c.list\n        equal_2f0b3f.result -> output_7c0a5b\n    }\n\n    \n\n    instance(x: -71, y: 122) is_same_4a8c0f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -288, y: 1, name: \"input\") property(String) input_8e9f0d\n\n        out(x: 1016, y: 4, name: \"output\") property(Bool) output_7a3c2b\n\n        instance(x: -122, y: 5, name: \"characters\") characters_1b8f67 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 288, y: 6) intersection_c4e9d0 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 556, y: 7) length_2c5a3c root.Std_k98ojb.List.Length {}\n        instance(x: 770, y: 8) equal_1f6c8c root.Std_k98ojb.Logic.Equal {}\n        characters_1b8f67.characters -> intersection_c4e9d0.left\n        characters_1b8f67.characters -> intersection_c4e9d0.right\n        length_2c5a3c.length -> equal_1f6c8c.left\n        1 -> equal_1f6c8c.right\n        intersection_c4e9d0.intersection -> length_2c5a3c.list\n        equal_1f6c8c.result -> output_7a3c2b\n    }\n\n    \n\n    instance(x: -74, y: 118) is_same_ea7c93 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -293, y: 12, name: \"input\") property(String) input_1f3e8d\n\n        out(x: 551, y: 63, name: \"output\") property(Bool) output_9b4a7c\n\n        instance(x: -94, y: 13) characters_6b0c2f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 62) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 360, y: 63) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 474, y: 64) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        characters_6b0c2f.characters -> intersection_c7c7e6.left\n        input_1f3e8d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_9b4a7c\n    }\n\n    \n\n    instance(x: -84, y: 159) is_same_8f3d5e root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -278, y: 13, name: \"input\") property(String) input_1f3a6d\n\n        out(x: 1014, y: 5, name: \"output\") property(Bool) output_9e7c2b\n\n        instance(x: -111, y: 14) characters_c8e0ce root.Std_k98ojb.Strings.Characters {}\n        instance(x: 341, y: 6) uniquelist_1a3f4d root.Std_k98ojb.List.UniqueList {}\n        instance(x: 601, y: 5) length_9c7b2f root.Std_k98ojb.List.Length {}\n        instance(x: 789, y: 5) equal_8e6f0f root.Std_k98ojb.Logic.Equal {}\n        characters_c8e0ce.characters -> uniquelist_1a3f4d.list\n        length_9c7b2f.length -> equal_8e6f0f.left\n        1 -> equal_8e6f0f.right\n        equal_8e6f0f.result -> output_9e7c2b\n        uniquelist_1a3f4d.uniqueList -> length_9c7b2f.list\n        input_1f3a6d -> characters_c8e0ce.input\n    }\n\n    \n\n    instance(x: -62, y: 107) is_same_5c1b2f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -305, y: 0, name: \"input\") property(String) input_1f9e3d\n\n        out(x: 1228, y: 5, name: \"output\") property(Bool) output_ea6c7b\n\n        instance(x: -93, y: 10) characters_4b2e0c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 15) length_9d5f1f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 20) equal_7a3f6a root.Std_k98ojb.Logic.Equal {}\n        instance(x: 574, y: -2) getat_4c0e8f root.Std_k98ojb.List.GetAt {}\n        instance(x: 846, y: 13) lessthanorequal_9d1f7a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1060, y: -2) for_d3e8c6 root.Std_k98ojb.Std.For {}\n        instance(x: 1284, y: 11) ifexpression_5b9d1f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 334, y: 38, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -137, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -22) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -123, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -37) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_5b9d1f.else -> output_ea6c7b\n        ifexpression_5b9d1f.value -> output_ea6c7b\n        ifexpression_5b9d1f.then -> setter_9d4f1c.execute\n        characters_4b2e0c.characters -> for_d3e8c6.items\n        for_d3e8c6.item -> getat_4c0e8f.list\n        1 -> getat_4c0e8f.index\n        getat_4c0e8f.itemAtIndex -> ifexpression_5b9d1f.gen_2\n        for_d3e8c6.index -> ifexpression_5b9d1f.gen_0\n        getter_b280eb.value -> ifexpression_5b9d1f.gen_1\n        for_d3e8c6.onItem -> ifexpression_5b9d1f.execute\n        for_d3e8c6.done -> output_ea6c7b\n        characters_4b2e0c.characters -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) check_same_f3a8b6 root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -297, y: 1, name: \"input\") property(String) input_5f8a0e\n\n        out(x: 1013, y: 20, name: \"output\") property(Bool) output_7b4c9d\n\n        instance(x: -140, y: 2, name: \"characters\") characters_1a6c5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 242, y: 22) map_0e8b3c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 547, y: -2) contains_7d9b4f root.Std_k98ojb.List.Contains {}\n        instance(x: 767, y: 20) not_5a1a6f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: 46, name: \"element\") property(String) element_7e3c8d\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_5a0f1d\n\n            instance(x: 106, y: 17) tolowercase_2b6a9c root.Std_k98ojb.Strings.ToLower {}\n            element_7e3c8d -> tolowercase_2b6a9c.input\n            tolowercase_2b6a9c.output -> out_5a0f1d\n        } -> map_0e8b3c.handler\n        characters_1a6c5f.characters -> map_0e8b3c.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(String) current_7f2d4f\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_6a1e9b\n\n            instance(x: 74, y: -23) contains_5c8c0a root.Std_k98ojb.Strings.Contains {}\n            current_7f2d4f -> contains_5c8c0a.input\n            map_0e8b3c.output_list[0] -> contains_5c8c0a.contains\n            contains_5c8c0a.result -> bool_6a1e9b\n        } -> map_0e8b3c.handler\n        characters_1a6c5f.characters -> map_0e8b3c.items\n        map_0e8b3c.output_list -> contains_7d9b4f.list\n        false -> contains_7d9b4f.item\n        not_5a1a6f.result -> output_7b4c9d\n        contains_7d9b4f.is_contained -> not_5a1a6f.input\n    }\n\n    \n\n    instance(x: -62, y: 71) is_same_e2e8d3 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -278, y: 0, name: \"input\") property(String) input_8e1f3d\n\n        out(x: 1075, y: 4, name: \"output\") property(Bool) output_7a2c6b\n\n        instance(x: -123, y: 10) characters_9f0b2f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 347, y: 5) map_8d1e4f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 648, y: -3) contains_7a6c92 root.Std_k98ojb.List.Contains {}\n        instance(x: 894, y: 2) not_0a9b5c root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -28, y: 29, name: \"current\") property(String) current_7f3e6d\n\n            out(x: 487, y: 15, name: \"output\") property(Bool) output_9a1c5b\n\n            instance(x: 214, y: 22) equal_8e2b0f root.Std_k98ojb.Logic.Equal {}\n            current_7f3e6d -> equal_8e2b0f.left\n            input_8e1f3d.characters[0] -> equal_8e2b0f.right\n            equal_8e2b0f.result -> output_9a1c5b\n        } -> map_8d1e4f.handler\n        characters_9f0b2f.characters -> map_8d1e4f.items\n        map_8d1e4f.output_list -> contains_7a6c92.list\n        false -> contains_7a6c92.item\n        not_0a9b5c.result -> output_7a2c6b\n        contains_7a6c92.is_contained -> not_0a9b5c.input\n    }\n\n    \n\n    instance(x: -55, y: 79) is_same_e1f8e4 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -333, y: 12, name: \"input\") property(String) input_1f3e5d\n\n        out(x: 1056, y: 13, name: \"output\") property(Bool) output_8b9c2a\n\n        instance(x: -192, y: 14, name: \"characters\") characters_7a0e4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 226, y: 13) intersection_1d3c6a root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 552, y: 12) length_5f8f2f root.Std_k98ojb.List.Length {}\n        instance(x: 774, y: 11) equal_7e4b9c root.Std_k98ojb.Logic.Equal {}\n        characters_7a0e4f.characters -> intersection_1d3c6a.left\n        input_1f3e5d -> intersection_1d3c6a.right\n        length_5f8f2f.length -> equal_7e4b9c.left\n        1 -> equal_7e4b9c.right\n        intersection_1d3c6a.intersection -> length_5f8f2f.list\n        equal_7e4b9c.result -> output_8b9c2a\n    }\n\n    \n\n    instance(x: -80, y: 59) is_same_0e9c1f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -288, y: 30, name: \"input\") property(String) input_9e3a8f\n\n        out(x: 1040, y: 5, name: \"output\") property(Bool) output_6b2c1d\n\n        instance(x: -127, y: 31) characters_7a4b4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 306, y: 32) uniquelist_9e5e0c root.Std_k98ojb.List.Unique {}\n        instance(x: 584, y: 33) length_8d3f2f root.Std_k98ojb.List.Length {}\n        instance(x: 798, y: 34) equal_f1a7d4 root.Std_k98ojb.Logic.Equal {}\n        characters_7a4b4f.characters -> uniquelist_9e5e0c.list\n        length_8d3f2f.length -> equal_f1a7d4.left\n        1 -> equal_f1a7d4.right\n        uniquelist_9e5e0c.unique_list -> length_8d3f2f.list\n        input_9e3a8f -> characters_7a4b4f.input\n        equal_f1a7d4.result -> output_6b2c1d\n    }\n\n    \n\n    instance(x: -77, y: 123) check_same_5e0c9c root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -285, y: -86, name: \"string\") property(String) string_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        string_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        string_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -40, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n    instance(x: -40, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n        where: \"Std.Str.IsNumeric(it)\"\n    }\n    \n\n    instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -40, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n    instance(x: -40, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n        where: \"Std.Str.IsNumeric(it)\"\n    }\n    \n\n    instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -50, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -50, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -50, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n    instance(x: -50, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n        where: \"Std.Str.IsNumeric(it)\"\n    }\n    \n\n    instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -50, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -50, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -50, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n    instance(x: -50, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n        where: \"Std.Str.IsNumeric(it)\"\n    }\n    \n\n    instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -45, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 15, y: 0) count_node root.Std_k98ojb.Count {}\n        instance(x: 75, y: 0) filter_1c8a2e root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        string_ai -> characters_node.input\n        characters_node.characters -> count_node.items\n        count_node.onCount -> filter_1c8a2e.trigger\n        filter_1c8a2e.result -> count_node.count\n        count_node.iterations -> result_ai\n    }\n\n    \n    instance(x: 0, y: -39) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -15, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -15, y: 0) characters_node root.main.count_digits {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -15, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -15, y: 0) characters_node root.main.count_digits {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -20, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -20, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -20, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n    instance(x: -20, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n        where: \"Std.Str.IsNumeric(it)\"\n    }\n    \n\n    instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -12, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -12, y: 0) filter_1 root.Std_k98ojb.Query.Filter {\n            where: \"Std.Str.IsNumeric(it)\"\n        }\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        count_digits_2.list_ai -> filter_1.list\n        filter_1.result -> list_length_node.items\n        list_length_node.length -> result_ai\n    }\n\n    \n    instance(x: -12, y: 0) characters_node root.main.count_digits {}\n\n    \n    instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_digits_2 root.main.count_digits {}\n        string_ai -> characters_node.input\n        characters_node.characters -> count_digits_2.list_ai\n        instance(x: -40, y: 0) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Std.kn.is_numeric(it)\"\n        }\n        count_digits_2.list_ai -> filter_7b3b7b.list\n        instance(x: 0, y: 0) list_length_node root.Std_k98ojb.List.Length {}\n        filter_7b3b7b.result -> list_length_node.list\n        list_length_node.length -> result_ai\n    }\n    \n\n    instance(x: -40, y: 0) count_digits_1 root.main.count_digits {}\n\n    \n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -344, y: 0, name: \"n\") property(Number) n_1a8f3e\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_2b4c6d\n\n        instance(x: 12, y: 136) expression_5f9a0c root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 303, y: 2) div_4d3e7f root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_9a8c0c  = 1\n        instance(x: 23, y: -1) mul_5e6f1f root.Std_k98ojb.Math.Mul {}\n        expression_5f9a0c.result -> mul_5e6f1f.second\n        n_1a8f3e -> mul_5e6f1f.first\n        data_9a8c0c -> div_4d3e7f.second\n        mul_5e6f1f.result -> div_4d3e7f.first\n        expression_5f9a0c.gen_0 -> n_1a8f3e\n        div_4d3e7f.result -> sum_2b4c6d\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_1a1f92 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_0e3f1b\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_9a2d8c\n\n        instance(x: 532, y: 147) sum_4f7b6f root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_ae0a2d\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> sum_4f7b6f.predicate\n        instance(x: -39, y: 26) generate_range_8a5c3d root.Std_k98ojb.List.GenerateRange {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_ae0a2d\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> generate_range_8a5c3d.predicate\n        instance(x: -39, y: 257) pow_7f4c2c root.Std_k98ojb.Math.Pow {}\n        instance(x: 0, y: 0) add_1f7c6e root.Std_k98ojb.Math.Add {}\n        generate_range_8a5c3d.list -> sum_4f7b6f.items\n        n_0e3f1b -> generate_range_8a5c3d.to\n        1 -> generate_range_8a5c3d.from\n        pow_7f4c2c.result -> add_1f7c6e.second\n        sum_4f7b6f.accumulated -> add_1f7c6e.first\n        n_0e3f1b -> pow_7f4c2c.y\n        4 -> pow_7f4c2c.x\n        generate_range_8a5c3d.item -> pow_7f4c2c.gen_0\n        add_1f7c6e.result -> sum_4f7b6f.reduced\n        sum_4f7b6f.reduced -> output_9a2d8c\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_5c3c0f root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 0, name: \"n\") property(Number) n_1f3b5a\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_2e9c4d\n\n        instance(x: 23, y: -1) pow_6b8f0c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_5a3c7c  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_9a8f7c root.Std_k98ojb.Math.Add {}\n        data_5a3c7c -> pow_6b8f0c.second\n        n_1f3b5a -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> add_9a8f7c.first\n        pow_6b8f0c.result -> add_9a8f7c.second\n        add_9a8f7c.result -> pow_6b8f0c.first\n        n_1f3b5a -> pow_6b8f0c.gen_0\n        add_9a8f7c.result -> sum_2e9c4d\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -278, y: 0, name: \"n\") property(Number) n_1b9f2e\n\n        out(x: 756, y: -1, name: \"sum\") property(Number) sum_ea4c8d\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5f3e9a root.Std_k98ojb.Math.Pow {}\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 1\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (2*n-1)*(2*n+1)*(2*n*(2*n-1)+1)/3\"\n        }\n        n_1b9f2e -> pow_5f3e9a.y\n        expression_2d6da6.result -> pow_5f3e9a.x\n        pow_5f3e9a.result -> mul_f892a4.second\n        data_cde0dc -> mul_f892a4.first\n        n_1b9f2e -> expression_634b7e.gen_0\n        mul_f892a4.result -> sum_ea4c8d\n        expression_634b7e.result -> data_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -341, y: 0, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"(4*n*n-1)*(4*n*n-1)\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        div_64046c.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = sum\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 62, y: -226) setter_2d44da root.Std_k98ojb.Variable.Setter {}\n        data_3c713b -> setter_2d44da.variable_name\n        expression_634b7e.result -> setter_2d44da.new_value\n        n_c88d35 -> expression_634b7e.gen_0\n        setter_2d44da.continue -> output_ebef81\n        0 -> setter_2d44da.new_value\n        n_c88d35 -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = sum\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 62, y: -226) setter_2d44da root.Std_k98ojb.Variable.Setter {}\n        data_3c713b -> setter_2d44da.variable_name\n        expression_634b7e.result -> setter_2d44da.new_value\n        n_c88d35 -> expression_634b7e.gen_0\n        setter_2d44da.continue -> output_ebef81\n        0 -> setter_2d44da.new_value\n        n_c88d35 -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: -287, name: \"n\") property(Number) n_c88d35\n\n        out(x: 756, y: -371, name: \"output\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_3c713b  = sum\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 62, y: -226) setter_2d44da root.Std_k98ojb.Variable.Setter {}\n        data_3c713b -> setter_2d44da.variable_name\n        expression_634b7e.result -> setter_2d44da.new_value\n        n_c88d35 -> expression_634b7e.gen_0\n        setter_2d44da.continue -> output_ebef81\n        0 -> setter_2d44da.new_value\n        n_c88d35 -> output_ebef81\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -279, y: 0, name: \"n\") property(Number) n_1f8a5e\n\n        out(x: 600, y: -2, name: \"sum\") property(Number) sum_9c6b4d\n\n        instance(x: 12, y: 136) expression_7a3f0f root.Std_k98ojb.Math.Expression {\n            expression: \"(2*n-1)*(2*n-1)*(2*n-1)*(2*n-1)\"\n        }\n        instance(x: 303, y: 2) div_5c9e4d root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_3a8f6d  = 1\n        instance(x: 23, y: -1) mul_7a0f1f root.Std_k98ojb.Math.Mul {}\n        expression_7a3f0f.result -> mul_7a0f1f.second\n        data_3a8f6d -> div_5c9e4d.second\n        n_1f8a5e -> expression_7a3f0f.gen_0\n        mul_7a0f1f.result -> div_5c9e4d.first\n        div_5c9e4d.result -> sum_9c6b4d\n        n_1f8a5e -> mul_7a0f1f.first\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_2a3a7f root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_3a3116\n\n        out(x: 756, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 12, y: -1) pow_9f5c7e root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_9f5c7e.x\n        4 -> pow_9f5c7e.y\n        instance(x: 303, y: 2) add_1a3d6f root.Std_k98ojb.Math.Add {}\n        pow_9f5c7e.result -> add_1a3d6f.second\n        sum_365f7b -> add_1a3d6f.first\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -104, y: 24, name: \"size\") property(Number) size_8f1e3d\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_9a2c4b\n\n        instance(x: 0, y: -23) mul_6e5b7c root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -53) mul_1d3f8f root.Std_k98ojb.Math.Mul {}\n        size_8f1e3d -> mul_6e5b7c.first\n        size_8f1e3d -> mul_6e5b7c.second\n        6 -> mul_1d3f8f.first\n        mul_6e5b7c.result -> mul_1d3f8f.second\n        mul_1d3f8f.result -> surface_area_9a2c4b\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -105, y: 41, name: \"size\") property(Number) size_9f7759\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) mul_1a9e6d root.Std_k98ojb.Math.Mul {}\n        instance(x: -144, y: 112) mul_2b7f5c root.Std_k98ojb.Math.Mul {}\n        instance(x: -144, y: -268) mul_3b7f5c root.Std_k98ojb.Math.Mul {}\n        size_9f7759 -> mul_1a9e6d.first\n        6 -> mul_1a9e6d.second\n        mul_1a9e6d.result -> mul_2b7f5c.first\n        size_9f7759 -> mul_3b7f5c.first\n        mul_3b7f5c.result -> mul_2b7f5c.second\n        mul_2b7f5c.result -> surface_area_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) cube_surface_area_d6e930 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -107, y: 22, name: \"size\") property(Number) size_8e9f1d\n\n        out(x: 1024, y: 7, name: \"surface area\") property(Number) surface_area_5c6a3b\n\n        instance(x: 24, y: -2) mul_0c7c3f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_8e9f1d -> mul_0c7c3f.first\n        data_cde0dc -> mul_0c7c3f.second\n        mul_0c7c3f.result -> surface_area_5c6a3b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -108, y: 21, name: \"size\") property(Number) size_8f3e5d\n\n        out(x: 1126, y: 15, name: \"surface area\") property(Number) surface_area_7a9c1b\n\n        instance(x: 18, y: -16) mul_4f0b2c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_8f3e5d -> mul_4f0b2c.first\n        data_cde0dc -> mul_4f0b2c.second\n        instance(x: 303, y: 2) mul_9a7f1f root.Std_k98ojb.Math.Mul {}\n        size_8f3e5d -> mul_9a7f1f.first\n        size_8f3e5d -> mul_9a7f1f.second\n        mul_9a7f1f.result -> mul_4f0b2c.gen_1\n        mul_4f0b2c.result -> surface_area_7a9c1b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_8e5d3f root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -112, y: 43, name: \"size\") property(Number) size_1f9e3d\n\n        out(x: 1032, y: 7, name: \"surface area\") property(Number) surface_area_6b4c8a\n\n        instance(x: 10, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1f9e3d -> mul_f892a4.first\n        data_cde0dc -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_6b4c8a\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -100, y: 15, name: \"size\") property(Number) size_9f6e1d\n\n        out(x: 101, y: 14, name: \"surface area\") property(Number) surface_area_f3a7b4\n\n        instance(x: 0, y: -2) mul_e5c8ef root.Std_k98ojb.Math.Mul {}\n        size_9f6e1d -> mul_e5c8ef.first\n        6 -> mul_e5c8ef.second\n        instance(x: 50, y: -3) mul_4a0b2c root.Std_k98ojb.Math.Mul {}\n        mul_e5c8ef.result -> mul_4a0b2c.first\n        size_9f6e1d -> mul_4a0b2c.second\n        mul_4a0b2c.result -> surface_area_f3a7b4\n    }\n\n    \n\n    instance(x: 150, y: -22) cube_surface_area_5f8c1c root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -102, y: 43, name: \"size\") property(Number) size_1a9e8f\n\n        out(x: 1006, y: 7, name: \"surface area\") property(Number) surface_area_3c2b5d\n\n        instance(x: 20, y: -4) mul_0a8b7c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a9e8f -> mul_0a8b7c.first\n        data_cde0dc -> mul_0a8b7c.second\n        mul_0a8b7c.result -> surface_area_3c2b5d\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -100, y: 55, name: \"size\") property(Number) size_3e9f1d\n\n        out(x: 104, y: 7, name: \"surface area\") property(Number) surface_area_5a0c8b\n\n        instance(x: 16, y: -2) mul_4e6c93 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_3e9f1d -> mul_4e6c93.first\n        data_cde0dc -> mul_4e6c93.second\n        mul_4e6c93.result -> surface_area_5a0c8b\n    }\n\n    \n\n    instance(x: 118, y: -26) cube_surface_area_9dcc3d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -109, y: 24, name: \"size\") property(Number) size_8e3f6d\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_1a2b5c\n\n        instance(x: 92, y: -22) mul_584bfd root.Std_k98ojb.Math.Mul {}\n        size_8e3f6d -> mul_584bfd.first\n        size_8e3f6d -> mul_584bfd.second\n        mul_584bfd.result -> surface_area_1a2b5c\n\n        instance(x: 92, y: -22) mul_7f0c9d root.Std_k98ojb.Math.Mul {}\n        6 -> mul_7f0c9d.first\n        mul_584bfd.result -> mul_7f0c9d.second\n        mul_7f0c9d.result -> surface_area_1a2b5c\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -105, y: 45, name: \"size\") property(Number) size_1f9e6d\n\n        out(x: 46, y: 158, name: \"surface area\") property(Number) surface_area_8b7c3a\n\n        instance(x: 92, y: -22) mul_f5e4f2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 93, y: -105) pow_6d1c9f root.Std_k98ojb.Math.Pow {}\n        size_1f9e6d -> pow_6d1c9f.x\n        3 -> pow_6d1c9f.y\n        mul_f5e4f2.first -> surface_area_8b7c3a\n        6 -> mul_f5e4f2.second\n        pow_6d1c9f.result -> mul_f5e4f2.second\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_0e6b1c root.main.cube_surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 22, name: \"list\") property(List) list_6a9f1e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_870503 root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_6a9f1e -> max_f3b46d.items\n        list_6a9f1e -> min_870503.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_870503.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 17, name: \"list\") property(List) list_1a9f0e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_870503 root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_1a9f0e -> max_f3b46d.items\n        list_1a9f0e -> min_870503.items\n        max_f3b46d.max -> sub_852f2e.first\n        min_870503.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -31, y: 0, name: \"list\") property(List) list_6e9f8a\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) max_5c4b0e root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -375) min_9a6d3f root.Std_k98ojb.List.Min {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_6e9f8a -> max_5c4b0e.items\n        list_6e9f8a -> min_9a6d3f.items\n        max_5c4b0e.max -> sub_852f2e.first\n        min_9a6d3f.min -> sub_852f2e.second\n        sub_852f2e.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -32, y: 20, name: \"list\") property(List) list_4a1f5e\n\n        out(x: 454, y: 63, name: \"difference\") property(Number) difference_2c9b7d\n\n        instance(x: 201, y: 62) sub_3b6f0f root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_5e8a1c root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_4d4556 root.Std_k98ojb.List.Min {}\n        list_4a1f5e -> max_5e8a1c.items\n        list_4a1f5e -> min_4d4556.items\n        max_5e8a1c.max -> sub_3b6f0f.first\n        min_4d4556.min -> sub_3b6f0f.second\n        sub_3b6f0f.result -> difference_2c9b7d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -27, y: 15, name: \"list\") property(List) list_1e3b5f\n\n        out(x: 454, y: 11, name: \"difference\") property(Number) difference_7a8d6c\n\n        instance(x: 0, y: 12) max_2a4f9f root.Std_k98ojb.List.Max {}\n        instance(x: -225, y: 15) min_1e5a3c root.Std_k98ojb.List.Min {}\n        instance(x: 183, y: 11) sub_7d6b8c root.Std_k98ojb.Math.Sub {}\n        list_1e3b5f -> max_2a4f9f.items\n        list_1e3b5f -> min_1e5a3c.items\n        max_2a4f9f.max -> sub_7d6b8c.first\n        min_1e5a3c.min -> sub_7d6b8c.second\n        sub_7d6b8c.result -> difference_7a8d6c\n    }\n\n    \n\n    instance(x: 48, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_0a1f8e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: -82, y: 155) max_6e87f2 root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 62) min_cb50ae root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        max_6e87f2.max -> sub_852f2e.first\n        min_cb50ae.min -> sub_852f2e.second\n        list_0a1f8e -> max_6e87f2.items\n        list_0a1f8e -> min_cb50ae.items\n        sub_852f2e.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 13, name: \"list\") property(List) list_1a9b8f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_5e3d6f root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_4a8d7f root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_1a9b8f -> max_5e3d6f.items\n        list_1a9b8f -> min_4a8d7f.items\n        max_5e3d6f.max -> sub_852f2e.first\n        min_4a8d7f.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_6a1f8e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5c9d0b\n\n        instance(x: 201, y: 62) sub_7e4c2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1a3f6c root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_5d9b8c root.Std_k98ojb.List.Min {}\n        list_6a1f8e -> max_1a3f6c.items\n        list_6a1f8e -> min_5d9b8c.items\n        max_1a3f6c.max -> sub_7e4c2e.first\n        min_5d9b8c.min -> sub_7e4c2e.second\n        sub_7e4c2e.result -> output_5c9d0b\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_1a3f6c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -35, y: 20, name: \"list\") property(List) list_6e8a2f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.min -> sub_852f2e.second\n        list_6e8a2f -> max_f3b46d.items\n        max_f3b46d.max -> firstitem_870503.list\n        list_6e8a2f -> min_4d4556.items\n        min_4d4556.min -> firstitem_3078c6.list\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1a0b8f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_f3b46d.items -> list_1a0b8f\n        max_f3b46d.max -> sub_852f2e.first\n        min_4d4556.items -> list_1a0b8f\n        min_4d4556.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 0, name: \"input\") property(Number) input_5f3a9e\n\n        out(x: 1268, y: 2, name: \"output\") property(Bool) output_1b4c6d\n\n        instance(x: 1057, y: -12) modulo_0f6c5f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1059, y: 44) equal_3a2e8f root.Std_k98ojb.Logic.Equal {}\n        input_5f3a9e -> modulo_0f6c5f.value\n        2 -> modulo_0f6c5f.divisor\n        modulo_0f6c5f.result -> equal_3a2e8f.left\n        0 -> equal_3a2e8f.right\n        equal_3a2e8f.result -> output_1b4c6d\n    }\n\n    \n\n    instance(x: -7, y: -11) is_even_5f9b4c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -34, y: 2, name: \"input\") property(Number) input_0a3f8e\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_5b7c1d\n\n        instance(x: 1058, y: -203) modulo_6b4f2c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1058, y: -103) equal_0a3e9c root.Std_k98ojb.Logic.Equal {}\n        input_0a3f8e -> modulo_6b4f2c.value\n        2 -> modulo_6b4f2c.divisor\n        modulo_6b4f2c.result -> equal_0a3e9c.left\n        0 -> equal_0a3e9c.right\n        equal_0a3e9c.result -> output_5b7c1d\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_8f2f6f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -32, y: 2, name: \"input\") property(Number) input_9e8f1d\n\n        out(x: 1260, y: 77, name: \"output\") property(Bool) output_7c4a3b\n\n        instance(x: 1086, y: 76) modulo_2b5b6c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1498, y: 75) equal_1e9f0d root.Std_k98ojb.Logic.Equal {}\n        input_9e8f1d -> modulo_2b5b6c.value\n        2 -> modulo_2b5b6c.divisor\n        modulo_2b5b6c.result -> equal_1e9f0d.left\n        0 -> equal_1e9f0d.right\n        equal_1e9f0d.result -> output_7c4a3b\n    }\n\n    \n\n    instance(x: -13, y: -11) is_even_8c2d5c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -32, y: 1, name: \"input\") property(Number) input_2a3f6e\n\n        out(x: 1280, y: 13, name: \"output\") property(Bool) output_9c7b8d\n\n        instance(x: 1065, y: -4) modulo_1e8f6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1263, y: 11) equal_0a2c8c root.Std_k98ojb.Logic.Equal {}\n        input_2a3f6e -> modulo_1e8f6.value\n        2 -> modulo_1e8f6.divisor\n        modulo_1e8f6.result -> equal_0a2c8c.left\n        0 -> equal_0a2c8c.right\n        equal_0a2c8c.result -> output_9c7b8d\n    }\n\n    \n\n    instance(x: -12, y: -10) is_even_5f1e4 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -527, y: 438, name: \"input\") property(Number) input_5e9a6f\n\n        out(x: 443, y: 427, name: \"output\") property(Bool) output_1b7c2d\n\n        instance(x: -319, y: 358, name: \"modulo\") modulo_4b8c0d root.Std_k98ojb.Math.Modulo {}\n        instance(x: -49, y: 372, name: \"equal to zero\") equal_5f9e1a root.Std_k98ojb.Logic.Equal {}\n        input_5e9a6f -> modulo_4b8c0d.value\n        2 -> modulo_4b8c0d.divisor\n        modulo_4b8c0d.result -> equal_5f9e1a.left\n        0 -> equal_5f9e1a.right\n        equal_5f9e1a.result -> output_1b7c2d\n    }\n\n    \n\n    instance(x: -67, y: -37) is_even_3a6b8c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_0a9f1e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_0a9f1e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_0a9f1e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_0a9f1e -> expression_9fba8c.gen_0\n        input_0a9f1e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_4d1e5c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 11, name: \"input\") property(Number) input_1a9d8e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 201, y: 62) modulo_cb50ae root.Std_k98ojb.Math.Modulo {}\n        instance(x: 432, y: 56) equal_5c9a4e root.Std_k98ojb.Logic.Equal {}\n        input_1a9d8e -> modulo_cb50ae.value\n        2 -> modulo_cb50ae.divisor\n        modulo_cb50ae.result -> equal_5c9a4e.left\n        0 -> equal_5c9a4e.right\n        equal_5c9a4e.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 2, name: \"input\") property(Number) input_9a3f1e\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_9a3f1e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_9a3f1e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_9a3f1e -> expression_9fba8c.gen_0\n        input_9a3f1e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e0d2c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -30, y: 1, name: \"input\") property(Number) input_5e8f6d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) equal_1a8c6f root.Std_k98ojb.Logic.Equal {}\n            2 -> modulo_c76d2b.divisor\n            0 -> equal_1a8c6f.right\n            equal_1a8c6f.result -> output_efbc78\n            modulo_c76d2b.result -> equal_1a8c6f.left\n            _index_170471 -> modulo_c76d2b.value\n        } -> map_c73e3b.index_handler\n        list_07cae4: List = [0]\n        list_07cae4 -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -34, y: 127, name: \"input\") property(Number) input_f5c03d\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> out_f3db9f\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_4b6e1f root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"characters\") characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"first repeated character\") find_2d44da root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 1) tolower_634b7e root.Std_k98ojb.Strings.ToLower {}\n        characters_3c713b.characters -> find_2d44da.items\n        input_0 -> characters_3c713b.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            tolower_634b7e.output -> contains_45e806.input\n            current_afd5b1 -> contains_45e806.contains\n            input_0 -> tolower_634b7e.input\n            contains_45e806.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_2d44da.predicate\n        find_2d44da.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_3e9b7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -55, y: 529) ``Finds the first repeated character in a given string_2c856f`` root.main.first_repeated_char {}\n        characters_3e9b7c.input -> ``Finds the first repeated charac..._2c856f``.list_abed4a\n        input_0 -> characters_3e9b7c.input\n        find_6d05b0.items -> ``Finds the first repeated charac..._2c856f``.list_abed4a\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            characters_3e9b7c.characters -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        ``Finds the first repeated charac..._2c856f``.number_3bc2ae -> result_0\n    }\n\n    \n\n    instance(x: 777, y: 760) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: -39, y: 26, name: \"characters\") characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        input_0 -> characters_3c713b.input\n        characters_3c713b.characters -> find_6d05b0.items\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -2, name: \"output\") property(Any) output_3\n\n        instance(x: 0, y: 0) characters_4a5d9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 1) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"first\") ``first repeated character_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        characters_4a5d9f.input -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            ``first repeated character_0b1361``.item -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        characters_4a5d9f.characters -> ``first repeated character_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_1 -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``first repeated character_0b1361``.predicate\n        find_6d05b0.item -> output_3\n    }\n\n    \n\n    instance(x: -81, y: 159) first_repeated_char_f15bad root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -288, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5a7b4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3e6d9f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257) filter_2f1f8f root.Std_k98ojb.Iteration.Filter {}\n        characters_5a7b4c.characters -> find_3e6d9f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0a2ba\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_5f7c8d root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_a0a2ba -> contains_5f7c8d.input\n            characters_5a7b4c.characters -> contains_5f7c8d.contains\n            contains_5f7c8d.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_3e6d9f.predicate\n        instance(x: -39, y: 26, name: \"First even number\") ``First repeated character_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0a2ba\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_5f7c8d root.Std_k98ojb.Strings.Contains {}\n            current_a0a2ba -> contains_5f7c8d.input\n            characters_5a7b4c.characters -> contains_5f7c8d.contains\n            contains_5f7c8d.result -> bool_1eb6e9\n        } -> ``First repeated character_0b1361``.predicate\n        find_3e6d9f.item -> filter_2f1f8f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0a2ba\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_5f7c8d root.Std_k98ojb.Strings.Contains {}\n            current_a0a2ba -> contains_5f7c8d.input\n            ``First repeated character_0b1361``.item -> contains_5f7c8d.contains\n            contains_5f7c8d.result -> bool_1eb6e9\n        } -> filter_2f1f8f.handler\n        filter_2f1f8f.output_list -> ``First repeated character_0b1361``.items\n        ``First repeated character_0b1361``.item -> result_0\n        input_0 -> characters_5a7b4c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"characters\") characters_1a9f3c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"first repeated character\") find_2d8e5a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ``characters_1a9f3c``_6c7b4e root.Std_k98ojb.List.Flatten {}\n        characters_1a9f3c.characters -> ``characters_1a9f3c``_6c7b4e.list\n        instance(x: -39, y: 26, name: \"seen\") list_0d2e5a root.Std_k98ojb.List.Empty {}\n        instance(x: -39, y: 257, name: \"contains\") contains_9f8d3c root.Std_k98ojb.List.Contains {}\n        ``characters_1a9f3c``_6c7b4e.output -> find_2d8e5a.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2f8c7a root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> contains_2f8c7a.item\n            list_0d2e5a -> contains_2f8c7a.list\n            contains_2f8c7a.result -> bool_1eb6e9\n        } -> find_2d8e5a.predicate\n        instance(x: 532, y: 147) ``contains_9f8d3c``_0b1361 root.Std_k98ojb.List.Add {}\n        contains_9f8d3c.result -> ``contains_9f8d3c``_0b1361.item\n        find_2d8e5a.item -> ``contains_9f8d3c``_0b1361.list\n        ``contains_9f8d3c``_0b1361.listWithItem -> list_0d2e5a\n        find_2d8e5a.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"characters\") characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 62, y: -226, name: \"first repeated character\") find_2d44da root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 1) tolower_634b7e root.Std_k98ojb.Strings.ToLower {}\n        characters_3c713b.characters -> find_2d44da.items\n        input_0 -> characters_3c713b.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            tolower_634b7e.output -> contains_45e806.input\n            current_afd5b1 -> contains_45e806.contains\n            input_0 -> tolower_634b7e.input\n            contains_45e806.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_2d44da.predicate\n        find_2d44da.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_3c713b.characters -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) substring_45e806 root.Std_k98ojb.Strings.Substring {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> substring_45e806.input\n            substring_45e806.start -> substring_45e806.end\n            find_de624f.index -> substring_45e806.start\n            substring_45e806.substring -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -276, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0, name: \"characters\") characters_5e7c8a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 1, name: \"first repeated character\") find_3d4f6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26) ``first repeated character_0`` root.Std_k98ojb.Iteration.Filter {}\n        characters_5e7c8a.characters -> find_3d4f6f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 112, y: 80) ``first repeated character_1`` root.Std_k98ojb.Iteration.Find {}\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_2\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_3\n\n                instance(x: 112, y: 80) contains_7e1b9c root.Std_k98ojb.Strings.Contains {}\n                ``first repeated character_1``.items -> contains_7e1b9c.input\n                current_2 -> contains_7e1b9c.contains\n                func() {\n                    in(x: -192, y: 84, name: \"current\") property(String) current_4\n\n                    out(x: 698, y: 85, name: \"bool\") property(Bool) bool_5\n\n                    instance(x: 112, y: 80) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n                    current_2 -> equal_a54bdc.left\n                    current_4 -> equal_a54bdc.right\n                    equal_a54bdc.result -> bool_5\n                } -> contains_7e1b9c.predicate\n                contains_7e1b9c.result -> bool_3\n            } -> ``first repeated character_1``.predicate\n            current_1 -> ``first repeated character_1``.items\n            ``first repeated character_1``.item -> bool_0\n        } -> find_3d4f6f.predicate\n        input_1 -> characters_5e7c8a.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_6\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_7\n\n            instance(x: 112, y: 80) contains_7e1b9c root.Std_k98ojb.Strings.Contains {}\n            ``first repeated character_0``.items -> contains_7e1b9c.input\n            current_6 -> contains_7e1b9c.contains\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_8\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_9\n\n                instance(x: 112, y: 80) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n                current_6 -> equal_a54bdc.left\n                current_8 -> equal_a54bdc.right\n                equal_a54bdc.result -> bool_9\n            } -> contains_7e1b9c.predicate\n            contains_7e1b9c.result -> bool_7\n        } -> ``first repeated character_0``.predicate\n        characters_5e7c8a.characters -> ``first repeated character_0``.items\n        find_3d4f6f.item -> output_0\n    }\n\n    \n\n    instance(x: -81, y: 52) first_repeated_char_f15bad root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 0, y: 1) characters_5a7f6c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4d9e8c root.Std_k98ojb.Iteration.Find {}\n        instance(x: -11, y: 60) filter_2e1c3f root.Std_k98ojb.Iteration.Filter {}\n        characters_5a7f6c.characters -> find_4d9e8c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0a2ba\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_4f8c5d root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_a0a2ba -> contains_4f8c5d.input\n            characters_5a7f6c.characters -> contains_4f8c5d.contains\n            contains_4f8c5d.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_4d9e8c.predicate\n        instance(x: -11, y: 60) filter_2e1c3f root.Std_k98ojb.Iteration.Filter {}\n        characters_5a7f6c.characters -> filter_2e1c3f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a0a2ba\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_4f8c5d root.Std_k98ojb.Strings.Contains {}\n            current_a0a2ba -> contains_4f8c5d.input\n            input_0 -> contains_4f8c5d.contains\n            contains_4f8c5d.result -> bool_1eb6e9\n        } -> filter_2e1c3f.predicate\n        find_4d9e8c.item -> result_0\n        filter_2e1c3f.output_list -> characters_5a7f6c.characters\n        input_0 -> characters_5a7f6c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3b2d8c root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -1) list_remove_7e6f9a root.Std_k98ojb.List.Remove {}\n            min_3b2d8c.items -> list_remove_7e6f9a.list\n            min_3b2d8c.min -> list_remove_7e6f9a.index\n            list_remove_7e6f9a.resultWithoutItem -> find_6d05b0.items\n            elem_9f6850 -> notequal_807ffd.right\n            list_remove_7e6f9a.resultWithoutItem -> min_3b2d8c.items\n            0 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3e8c1d root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -114) list_remove_7f2a5f root.Std_k98ojb.List.Remove {}\n            min_3e8c1d.items -> list_remove_7f2a5f.list\n            elem_9f6850 -> list_remove_7f2a5f.index\n            list_remove_7f2a5f.listWithoutItem -> min_3e8c1d.items\n            min_3e8c1d.min -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: -193, name: \"items\") property(List) items_ai\n        out(x: 46, y: 158, name: \"second_min\") property(Number) second_min_9f7759\n\n        instance(x: -105, y: -110) min1_e38995 root.Std_k98ojb.List.Min {}\n        instance(x: -105, y: 112) min2_e38995 root.Std_k98ojb.List.Min {}\n        items_ai -> min1_e38995.items\n        min1_e38995.min -> min2_e38995.items\n        instance(x: -144, y: -268) remove_9cceb3 root.Std_k98ojb.List.Remove {}\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = second_min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_min\n        min1_e38995.min -> remove_9cceb3.index\n        items_ai -> remove_9cceb3.list\n        getter_9cceb3.value -> second_min_9f7759\n        remove_9cceb3.listWithoutItem -> setter_1cedb2.items\n        setter_1cedb2.new_value -> min2_e38995.items\n        min2_e38995.min -> setter_1cedb2.new_value\n    }\n    \n\n    instance(x: -174, y: -63) second_smallest_d6e930 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: -193, name: \"items\") property(List) items_ai\n        out(x: 46, y: 158, name: \"second_min\") property(Number) second_min_1f8c9a\n\n        instance(x: -105, y: -110) find_smallest_ae5b2d root.main.smallest {}\n        instance(x: -105, y: -110) filter_b3c4f6 root.Std_k98ojb.Query.Filter {\n            where: \"it > smallest\"\n        }\n        instance(x: 426, y: -303) min_9a7e5f root.Std_k98ojb.List.Min {}\n        items_ai -> find_smallest_ae5b2d.items\n        find_smallest_ae5b2d.min -> filter_b3c4f6.where.gen_0\n        items_ai -> filter_b3c4f6.list\n        filter_b3c4f6.result -> min_9a7e5f.items\n        min_9a7e5f.min -> second_min_1f8c9a\n\n        \n    }\n    \n\n    \n    instance(x: 322, y: 568) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 46, y: 158, name: \"second smallest\") property(Number) min_f9110a\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"len(list) < 2\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> min_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n\n        instance(x: -105, y: 0) min_node root.Std_k98ojb.List.Min {}\n        list_9f7759 -> min_node.items\n        min_node.min -> smallest_a89f71\n\n        instance(x: -105, y: 110) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it != smallest\"\n        }\n        list_9f7759 -> filter_7b3b7b.list\n        smallest_a89f71 -> filter_7b3b7b.where.it\n        filter_7b3b7b.result -> filtered_list_f9110a\n\n        instance(x: -105, y: 220) min_node2 root.Std_k98ojb.List.Min {}\n        filtered_list_f9110a -> min_node2.items\n        min_node2.min -> second_smallest_f9110a\n    }\n\n    \n\n    instance(x: -174, y: -63) second_smallest_d6e930 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_2c8d4e root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -60) list_remove_1a3f7c root.Std_k98ojb.List.Remove {}\n            min_2c8d4e.items -> list_remove_1a3f7c.list\n            elem_9f6850 -> list_remove_1a3f7c.index\n            list_remove_1a3f7c.listWithoutItem -> min_2c8d4e.items\n            min_2c8d4e.min -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_3e6c5d root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -113) list_remove_9f8a7f root.Std_k98ojb.List.Remove {}\n            min_3e6c5d.items -> list_remove_9f8a7f.list\n            elem_9f6850 -> list_remove_9f8a6f.index\n            list_remove_9f8a7f.listWithoutItem -> min_3e6c5d.items\n            min_3e6c5d.min -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1e8c5b root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -90) list_remove_7a9f4d root.Std_k98ojb.List.Remove {}\n            min_1e8c5b.items -> list_remove_7a9f4d.list\n            find_6d05b0.index -> list_remove_7a9f4d.index\n            list_remove_7a9f4d.listWithoutItem -> min_1e8c5b.items\n            elem_9f6850 -> notequal_807ffd.right\n            min_1e8c5b.min -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: -194, name: \"items\") property(List) items_8f1a3e\n\n        out(x: 46, y: 158, name: \"second_min\") property(Number) second_min_9c5d6b\n\n        instance(x: -105, y: -110) find_smallest_2d7c0e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_2b1d5c root.Std_k98ojb.List.Min {}\n            items_8f1a3e -> min_2b1d5c.items\n            min_2b1d5c.min -> elem_9f6850\n\n            instance(x: 310, y: 35) greaterthan_6f7d4c root.Std_k98ojb.Math.GreaterThan {}\n            elem_9f6850 -> greaterthan_6f7d4c.left\n            min_2b1d5c.min -> greaterthan_6f7d4c.right\n\n            greaterthan_6f7d4c.result -> bool_af09a7\n        } -> find_smallest_2d7c0e.predicate\n        items_8f1a3e -> find_smallest_2d7c0e.items\n        instance(x: -105, y: 109) filter_5b6f9c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            find_smallest_2d7c0e.item -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n\n            notequal_807ffd.result -> bool_af09a7\n        } -> filter_5b6f9c.handler\n        items_8f1a3e -> filter_5b6f9c.items\n        instance(x: -105, y: -110) find_smallest_2d7c0e_2 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_2b1d5c_2 root.Std_k98ojb.List.Min {}\n            filter_5b6f9c.output_list -> min_2b1d5c_2.items\n            min_2b1d5c_2.min -> elem_9f6850\n\n            instance(x: 310, y: 35) greaterthan_6f7d4c_2 root.Std_k98ojb.Math.GreaterThan {}\n            elem_9f6850 -> greaterthan_6f7d4c_2.left\n            min_2b1d5c.min -> greaterthan_6f7d4c_2.right\n\n            greaterthan_6f7d4c_2.result -> bool_af09a7\n        } -> find_smallest_2d7c0e_2.predicate\n        filter_5b6f9c.output_list -> find_smallest_2d7c0e_2.items\n        find_smallest_2d7c0e_2.item -> second_min_9c5d6b\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_3a8f1e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_abed4a\n\n        out(x: 593, y: -1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_1c3d5e root.Std_k98ojb.List.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 0, y: -113) list_remove_2f8a9f root.Std_k98ojb.List.Remove {}\n            min_1c3d5e.items -> list_remove_2f8a9f.list\n            find_6d05b0.index -> list_remove_2f8a9f.index\n            list_remove_2f8a9f.resultWithoutItem -> min_1c3d5e.items\n            elem_9f6850 -> notequal_807ffd.right\n            min_1c3d5e.min -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}"
            ]
        }
    }
]