[
    {
        "experiment_name": "regular_full-context_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 49751,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -484, y: 18, name: \"list1\") property(List) list_0d8b5f\n        in(x: -489, y: 21, name: \"list2\") property(List) list_0e6c43\n\n        out(x: 1243, y: -19, name: \"output\") property(Bool) output_b4a9f7\n\n        instance(x: 93, y: -22) zip_7d1e5b root.Std_k98ojb.Iteration.Zip {}\n        list_0d8b5f -> zip_7d1e5b.left\n        list_0e6c43 -> zip_7d1e5b.right\n        instance(x: 94, y: -20) contains_f4a9bb root.Std_k98ojb.List.Contains {}\n        output_b4a9f7 -> contains_f4a9bb.item\n        list_0d8b5f -> contains_f4a9bb.list\n        list_0e6c43 -> contains_f4a9bb.list\n        zip_7d1e5b.zipped -> has_common.output_list\n    }\n\n    \n\n    instance(x: -48, y: 53) has_common_b2c8f0 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -493, y: 2, name: \"list1\") property(List) list_0a6d5f\n        in(x: -495, y: 8, name: \"list2\") property(List) list_b5c4e9\n\n        out(x: 123, y: -51, name: \"output\") property(Bool) output_4f7b3a\n\n        instance(x: 78, y: -49) zip_6d1e8a root.Std_k98ojb.Iteration.Zip {}\n        list_0a6d5f -> zip_6d1e8a.left\n        list_b5c4e9 -> zip_6d1e8a.right\n        func() {\n            in(x: -488, y: 11, name: \"current\") property(Number) current_d2c3b0\n\n            out(x: 124, y: -48, name: \"output\") property(Bool) output_e9f5d6\n\n            instance(x: 76, y: -46) contains_1d4e33 root.Std_k98ojb.List.Contains {}\n            list_b5c4e9 -> contains_1d4e33.list\n            current_d2c3b0 -> contains_1d4e33.item\n            contains_1d4e33.is_contained -> output_e9f5d6\n        } -> zip_6d1e8a.handler\n        zip_6d1e8a.zipped -> output_4f7b3a\n    }\n\n    \n\n    instance(x: -45, y: 64) has_common_element_a9cdd4 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list of numbers contains at least one common element with the second list.\") has_common_element {\n        in(x: -471, y: 18, name: \"list1\") property(List) list_0a9d8e\n        in(x: -474, y: -124, name: \"list2\") property(List) list_d6f3c5\n\n        out(x: 1017, y: 23, name: \"output\") property(Bool) output_1bfcf4\n\n        instance(x: 95, y: -121) contains_0e9a8d root.Std_k98ojb.List.Contains {}\n        list_0a9d8e -> contains_0e9a8d.items\n        list_d6f3c5 -> contains_0e9a8d.item\n        contains_0e9a8d.is_contained -> output_1bfcf4\n    }\n\n    \n\n    instance(x: -294, y: 47) has_common_element_b2e2d7 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists contain at least one common element.\") has_common_element {\n        in(x: -493, y: 3, name: \"list1\") property(List) list_9e8d4f\n        in(x: -475, y: -128, name: \"list2\") property(List) list_b7b6a5\n\n        out(x: 1210, y: -120, name: \"output\") property(Bool) output_c0c1c3\n\n        instance(x: 93, y: -129) contains_34e9f4 root.Std_k98ojb.List.Contains {}\n        list_9e8d4f -> contains_34e9f4.list\n        list_b7b6a5 -> contains_34e9f4.list\n        contains_34e9f4.item -> output_c0c1c3\n    }\n\n    \n\n    instance(x: -292, y: 47) has_common_element_f0d2eb root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -471, y: 2, name: \"list1\") property(List) list_0f5e43\n        in(x: -484, y: -21, name: \"list2\") property(List) list_3a3c7b\n\n        out(x: 1059, y: 15, name: \"output\") property(Bool) output_6d4f47\n\n        instance(x: 94, y: 10) zip_8e1dd5 root.Std_k98ojb.Iteration.Zip {}\n        list_0f5e43 -> zip_8e1dd5.left\n        list_3a3c7b -> zip_8e1dd5.right\n        func() {\n            in(x: -121, y: 18, name: \"current\") property(Number) current_2d4e6f\n\n            out(x: 1029, y: 15, name: \"bool\") property(Bool) bool_f3a7c8\n\n            instance(x: 92, y: 20) contains_b0b1a5 root.Std_k98ojb.List.Contains {}\n            list_0f5e43 -> contains_b0b1a5.list\n            current_2d4e6f -> contains_b0b1a5.item\n            contains_b0b1a5.is_contained -> bool_f3a7c8\n        } -> zip_8e1dd5.handler\n        zip_8e1dd5.zipped -> output_6d4f47\n    }\n\n    \n\n    instance(x: -44, y: 63) has_common_9e2b45 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -469, y: 2, name: \"list1\") property(List) list_3c6e8f\n        in(x: -475, y: 13, name: \"list2\") property(List) list_9f7d0a\n\n        out(x: 1235, y: 10, name: \"output\") property(Bool) output_c8b3af\n\n        instance(x: 93, y: -48) map_6e5c4d root.Std_k98ojb.Iteration.Map {}\n        list_3c6e8f -> map_6e5c4d.items\n        func() {\n            in(x: -468, y: -23, name: \"x\") property(Number) x_d0a7e9\n\n            out(x: 1221, y: 11, name: \"\") property(Bool) _3b2f44\n\n            instance(x: -48, y: -26) contains_6f8c4d root.Std_k98ojb.List.Contains {}\n            list_9f7d0a -> contains_6f8c4d.list\n            x_d0a7e9 -> contains_6f8c4d.item\n            contains_6f8c4d.result -> _3b2f44\n        } -> map_6e5c4d.handler\n        map_6e5c4d.output_list -> output_c8b3af\n    }\n\n    \n\n    instance(x: -46, y: 53) has_common_element_5a1a7 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists have at least one common element.\") has_common {\n        in(x: -499, y: 3, name: \"list1\") property(List) list_2a5f6b\n        in(x: -504, y: 10, name: \"list2\") property(List) list_ba7c9e\n\n        out(x: 1214, y: 16, name: \"output\") property(Bool) output_a0d8b4\n\n        instance(x: 91, y: 14) contains_1f6f5b root.Std_k98ojb.List.Contains {}\n        list_2a5f6b -> contains_1f6f5b.list\n        list_ba7c9e -> contains_1f6f5b.item\n        contains_1f6f5b.result -> output_a0d8b4\n    }\n\n    \n\n    instance(x: -43, y: 63) has_common_5c2d14 root.main.has_common {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists have at least one common element.\") has_common {\n        in(x: -471, y: 23, name: \"list1\") property(List) list_9f5f2a\n        in(x: -479, y: 16, name: \"list2\") property(List) list_c6b8d4\n\n        out(x: 1210, y: 14, name: \"output\") property(Bool) output_7e1c43\n\n        instance(x: 95, y: 24) zip_f3a9f2 root.Std_k98ojb.Iteration.Zip {}\n        list_9f5f2a -> zip_f3a9f2.left\n        list_c6b8d4 -> zip_f3a9f2.right\n        func() {\n            in(x: -469, y: 18, name: \"current\") property(Number) current_e1e7c4\n\n            out(x: 1025, y: 14, name: \"\") property(Bool) bool_8a3d74\n\n            instance(x: 97, y: 24) contains_2f0b9d root.Std_k98ojb.List.Contains {}\n            list_9f5f2a -> contains_2f0b9d.list\n            list_c6b8d4 -> contains_2f0b9d.item\n            contains_2f0b9d.is_contained -> bool_8a3d74\n        } -> zip_f3a9f2.handler\n        zip_f3a9f2.zipped -> output_7e1c43\n    }\n\n    \n\n    instance(x: -44, y: 71) has_common_b4b0eb root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -528, y: 19, name: \"list1\") property(List) list_2d6a5f\n        in(x: -535, y: -114, name: \"list2\") property(List) list_b7d3b4\n\n        out(x: 1049, y: -101, name: \"output\") property(Bool) output_f4f8c1\n\n        instance(x: -292, y: -109) intersection_6a5e42 root.Std_k98ojb.Sets.Intersection {}\n        list_2d6a5f -> intersection_6a5e42.left\n        list_b7d3b4 -> intersection_6a5e42.right\n        intersection_6a5e42.intersect -> output_f4f8c1\n    }\n\n    \n\n    instance(x: -28, y: 55) has_common_8c0c43 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common {\n        in(x: -493, y: 18, name: \"list1\") property(List) list_9d6f8a\n        in(x: -494, y: 30, name: \"list2\") property(List) list_0c5e77\n\n        out(x: 1213, y: 7, name: \"output\") property(Bool) output_1c2bfc\n\n        instance(x: 93, y: -20) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        list_9d6f8a -> map_f2330d.items\n        list_0c5e77 -> map_f2330d.items\n        func() {\n            in(x: -121, y: 16, name: \"current\") property(Number) current_a3cd4b\n\n            out(x: 245, y: -11, name: \"\") property(Boolean) bool_5f9a1e\n\n            instance(x: 92, y: -15) contains_f8c2d6 root.Std_k98ojb.List.Contains {}\n            map_f2330d.output_list -> contains_f8c2d6.list\n            current_a3cd4b -> contains_f8c2d6.item\n            contains_f8c2d6.is_contained -> bool_5f9a1e\n        } -> map_f2330d.handler\n        bool_5f9a1e.value -> output_1c2bfc\n    }\n\n    \n\n    instance(x: -67, y: 45) has_common_8b7df4 root.main.has_common {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") conseq_nums {\n        in(x: -294, y: 155, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        list_0b075e -> length_6e87f2.list\n        length_6e87f2.length -> conseq_nums.output_b1d7f8\n        instance(x: -121, y: 74) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 201, y: 62) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 201, y: 63) less-thanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        func() {\n            in(x: -121, y: -17, name: \"current\") property(Number) current_0e3d6d\n\n            out(x: 698, y: -30, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: 35) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            current_0e3d6d -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> less-thanorequal_f11fda.left\n            1 -> less-thanorequal_f11fda.right\n            less-thanorequal_f11fda.result -> _7dd980\n        } -> for_d26972.handler\n        for_d26972.iteration -> greaterthan_cb50ae.first\n        list_0b075e -> for_d26972.items\n        func() {\n            in(x: -121, y: -17, name: \"current\") property(Number) current_0e3d6d\n\n            out(x: 698, y: -30, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: 35) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            current_0e3d6d -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> less-thanorequal_f11fda.left\n            1 -> less-thanorequal_f11fda.right\n            less-thanorequal_f11fda.result -> _7dd980\n        } -> for_d26972.handler\n        conseq_nums.output_b1d7f8 -> greaterthan_cb50ae.result\n    }\n\n    \n\n    instance(x: -67, y: 529) conseq_nums_0b3c9a root.main.conseq_nums {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -292, y: 0, name: \"list\") property(List) list_5d3f6e\n\n        out(x: 105, y: 2, name: \"output\") property(Bool) output_b9c8a7\n\n        instance(x: 74, y: 1) filter_6b4eef root.Std_k98ojb.Query.Filter {}\n        list_5d3f6e -> filter_6b4eef.list\n        func() {\n            in(x: -112, y: 34, name: \"i\") property(Number) i_d8a7c0\n\n            out(x: 509, y: 42, name: \"bool\") property(Bool) bool_e2f3d9\n\n            instance(x: 92, y: 27) sub_5b6e1d root.Std_k98ojb.Math.Sub {}\n            instance(x: -19, y: 29) lessThanOrEqual_a4a8c7 root.Std_k98ojb.Math.LessThanOrEqual {}\n            i_d8a7c0 -> sub_5b6e1d.first\n            list_5d3f6e[0] -> sub_5b6e1d.second\n            sub_5b6e1d.result -> lessThanOrEqual_a4a8c7.left\n            2 -> lessThanOrEqual_a4a8c7.right\n            lessThanOrEqual_a4a8c7.result -> bool_e2f3d9\n        } -> filter_6b4eef.handler\n        func() {\n            in(x: -112, y: 34, name: \"i\") property(Number) i_d8a7c0\n\n            out(x: 509, y: 42, name: \"bool\") property(Bool) bool_e2f3d9\n\n            instance(x: 92, y: 27) lessThanOrEqual_a4a8c7 root.Std_k98ojb.Math.LessThanOrEqual {}\n            i_d8a7c0 -> lessThanOrEqual_a4a8c7.first\n            sub_5b6e1d.result -> lessThanOrEqual_a4a8c7.second\n            lessThanOrEqual_a4a8c7.result -> bool_e2f3d9\n        } -> filter_6b4eef.handler\n        list_5d3f6e -> filter_6b4eef.items\n        func() {\n            in(x: -112, y: 34, name: \"i\") property(Number) i_d8a7c0\n\n            out(x: 509, y: 42, name: \"\") property(Bool) bool_e2f3d9\n\n            instance(x: 92, y: 27) lessThanOrEqual_a4a8c7 root.Std_k98ojb.Math.LessThanOrEqual {}\n            i_d8a7c0 -> lessThanOrEqual_a4a8c7.first\n            list_5d3f6e[i_d8a7c0] -> lessThanOrEqual_a4a8c7.second\n            lessThanOrEqual_a4a8c7.result -> bool_e2f3d9\n        } -> filter_6b4eef.handler\n        filter_6b4eef.output_list -> is_consecutive.items\n        1 -> is_consecutive.index\n        list_5d3f6e[0] -> is_consecutive.gen_2\n        lessThanOrEqual_a4a8c7.result -> bool_e2f3d9\n        if_e19a62.then -> output_b1d7f8\n        is_consecutive.done -> continue_8ba06b\n        execute_27b8c3 -> filter_6b4eef.reset\n        lessThanOrEqual_a4a8c7.else -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -89, y: 13) is_consecutive_0d5a2c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: 0, y: -21, name: \"list\") property(List) list_2e4f8a\n\n        out(x: 1033, y: 13, name: \"output\") property(Bool) output_f7d9c5\n\n        instance(x: 0, y: -23) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        list_2e4f8a -> for_8cb3f6.items\n        func() {\n            in(x: 1, y: -17, name: \"current\") property(Number) current_7d3c9e\n\n            out(x: 1032, y: 15, name: \"\") property(Bool) _5b0a8c\n\n            instance(x: 4, y: -13) sub_b9f1ec root.Std_k98ojb.Math.Sub {}\n            current_7d3c9e -> sub_b9f1ec.first\n            current_7d3c9e -> sub_b9f1ec.second\n            sub_b9f1ec.result -> _5b0a8c\n        } -> for_8cb3f6.handler\n        for_8cb3f6.item -> is_consecutive.gen_2\n        for_8cb3f6.index -> is_consecutive.gen_0\n        _5b0a8c.value -> is_consecutive.gen_1\n        for_8cb3f6.onItem -> is_consecutive.execute\n        for_8cb3f6.done -> is_consecutive.output_f7d9c5\n    }\n\n    \n\n    instance(x: -45, y: 24) is_consecutive_4e0b2a root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -275, y: 2, name: \"list\") property(List) list_0d8d1f\n\n        out(x: 1026, y: -15, name: \"output\") property(Bool) output_f9b4e7\n\n        instance(x: 93, y: -25) length_a5aeb3 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 59) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        function_1f2b9d root.Std_k98ojb.Std.If {}\n        instance(x: -82, y: 73) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 91, y: 69) lessThanOrEqual_7c0a4c root.Std_k98ojb.Math.LessThanOrEqual {}\n        function_1f2b9d.result -> output_f9b4e7\n        length_a5aeb3.length -> greaterthan_cb50ae.right\n        list_0d8d1f -> length_a5aeb3.list\n        1 -> sub_852f2e.first\n        -1 -> sub_852f2e.second\n        greaterthan_cb50ae.result -> lessThanOrEqual_7c0a4c.left\n        sub_852f2e.result -> lessThanOrEqual_7c0a4c.right\n        list_0d8d1f -> lessThanOrEqual_7c0a4c.items\n        function_1f2b9d.onItem -> if_e19a62.execute\n        instance(x: -48, y: 69) isEven_a6e2e5 root.Std_k98ojb.Logic.IsEven {}\n        instance(x: 201, y: 59) filter_b4c0df root.Std_k98ojb.Query.Filter {}\n        instance(x: 93, y: -25) ifexpression_3c8f44 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it == n + 1\"\n        }\n        function_1f2b9d.result -> isEven_a6e2e5.input\n        filter_b4c0df.list -> isEven_a6e2e5.items\n        ifexpression_3c8f44.value -> lessThanOrEqual_7c0a4c.predicate\n        for_e0d1c1 root.Std_k98ojb.Std.For {}\n        lessThanOrEqual_7c0a4c.result -> output_f9b4e7\n    }\n\n    \n\n    instance(x: -67, y: 21) is_consecutive_2e6f5 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -292, y: 2, name: \"list\") property(List) list_1c5e4d\n\n        out(x: 1243, y: 13, name: \"output\") property(Bool) output_e8b9a7\n\n        instance(x: 94, y: 10) filter_c6f1d2 root.Std_k98ojb.Query.Filter {}\n        list_1c5e4d -> filter_c6f1d2.list\n        func() {\n            in(x: -112, y: 44, name: \"current\") property(Number) current_b0a5e9\n\n            out(x: 1037, y: 51, name: \"bool\") property(Bool) bool_4b8f3d\n\n            instance(x: 87, y: 36) sub_1c2d6f root.Std_k98ojb.Math.Sub {}\n            current_b0a5e9 -> sub_1c2d6f.first\n            1 -> sub_1c2d6f.second\n            sub_1c2d6f.result -> bool_4b8f3d\n        } -> filter_c6f1d2.handler\n        func() {\n            in(x: -112, y: 44, name: \"current\") property(Number) current_b0a5e9\n\n            out(x: 1037, y: 51, name: \"bool\") property(Bool) bool_4b8f3d\n\n            instance(x: 87, y: 36) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n            current_b0a5e9 -> greaterthan_cb50ae.left\n            1 -> greaterthan_cb50ae.right\n            greaterthan_cb50ae.result -> bool_4b8f3d\n        } -> filter_c6f1d2.handler\n        list_1c5e4d -> filter_c6f1d2.items\n        func() {\n            in(x: -112, y: 44, name: \"current\") property(Number) current_b0a5e9\n\n            out(x: 1037, y: 51, name: \"bool\") property(Bool) bool_4b8f3d\n\n            instance(x: 87, y: 36) lessThanOrEqual_f1c2b root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_b0a5e9 -> lessThanOrEqual_f1c2b.left\n            1 -> lessThanOrEqual_f1c2b.right\n            lessThanOrEqual_f1c2b.result -> bool_4b8f3d\n        } -> filter_c6f1d2.handler\n    }\n\n    \n\n    instance(x: -69, y: 21) is_consecutive_9f0e5b root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") conseq_numbers {\n        in(x: -275, y: 2, name: \"list\") property(List) list_3fdd5e\n\n        out(x: 1214, y: -1, name: \"output\") property(Bool) output_a7d5c9\n\n        instance(x: 0, y: 0) for_d8f2a6 root.Std_k98ojb.Std.For {}\n        list_3fdd5e -> for_d8f2a6.items\n        func() {\n            in(x: -115, y: 38, name: \"prev\") property(Number) prev_7c9d4f\n\n            out(x: 1030, y: 43, name: \"\") property(Number) next_ae5bdf\n\n            instance(x: 96, y: 32) sub_6a8f3e root.Std_k98ojb.Math.Sub {}\n            prev_7c9d4f -> sub_6a8f3e.first\n            prev_7c9d4f -> sub_6a8f3e.second\n            sub_6a8f3e.result -> next_ae5bdf\n        } -> for_d8f2a6.handler\n        for_d8f2a6.item -> conseq_numbers.next_ae5bdf\n        for_d8f2a6.index -> conseq_numbers.prev_7c9d4f\n    }\n\n    \n\n    instance(x: -83, y: 13) conseq_numbers_b0eb3a root.main.conseq_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") has_consecutive_nums {\n        in(x: -269, y: 34, name: \"input\") property(List) input_3d0f5b\n\n        out(x: 1239, y: 4, name: \"output\") property(Bool) output_d2e3c1\n\n        instance(x: 109, y: 38) filter_e5a6ec root.Std_k98ojb.Query.Filter {}\n        instance(x: -22, y: 55) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 191, y: 45) lessthandisorequal_0c1d9e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -21, y: 49) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 193, y: 52) expression_a0a2f5 root.Std_k98ojb.Math.Expression {\n            expression: \"n + 1 == i\"\n        }\n        instance(x: -20, y: 51) if_07b8c7.execute\n        for_8cb3f6.trigger -> lessthandisorequal_0c1d9e.execute\n        input_3d0f5b -> filter_e5a6ec.items\n        expression_a0a2f5.result -> if_07b8c7.predicate\n        lessthandisorequal_0c1d9e.result -> output_d2e3c1\n    }\n\n    \n\n    instance(x: 44, y: -16) has_consecutive_nums_f9a4af root.main.has_consecutive_nums {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") contains_consecutive {\n        in(x: -275, y: 1, name: \"list\") property(List) list_5a4d66\n\n        out(x: 1033, y: -2, name: \"output\") property(Bool) output_e6b5f8\n\n        instance(x: 0, y: 0) for_7e9c43 root.Std_k98ojb.Std.For {}\n        instance(x: -294, y: -15) islower_8a4f1d root.Std_k98ojb.Strings.IsLower {}\n        list_5a4d66 -> for_7e9c43.items\n        func() {\n            in(x: 0, y: 0, name: \"current\") property(Number) current_9b2c6e\n\n            out(x: -11, y: 3, name: \"bool\") property(Bool) bool_b4f5d1\n\n            instance(x: -10, y: 1) sub_8a7a0e root.Std_k98ojb.Math.Sub {}\n            current_9b2c6e -> sub_8a7a0e.first\n            current_9b2c6e -> sub_8a7a0e.second\n            sub_8a7a0e.result -> bool_b4f5d1\n        } -> for_7e9c43.handler\n        func() {\n            in(x: 0, y: 0, name: \"current\") property(Number) current_9b2c6e\n\n            out(x: -11, y: 3, name: \"\") property(Bool) bool_b4f5d1\n\n            instance(x: -10, y: 1) sub_8a7a0e root.Std_k98ojb.Math.Sub {}\n            current_9b2c6e -> sub_8a7a0e.first\n            current_9b2c6e -> sub_8a7a0e.second\n            sub_8a7a0e.result -> bool_b4f5d1\n        } -> for_7e9c43.onItem\n        for_7e9c43.done -> output_e6b5f8\n        for_7e9c43.item -> islower_8a4f1d.input\n        0 -> islower_8a4f1d.fieldNames\n        current_9b2c6e -> islower_8a4f1d.value\n    }\n\n    \n\n    instance(x: -67, y: -11) contains_consecutive_7f5b21 root.main.contains_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") consecutivenumbers {\n        in(x: -245, y: 2, name: \"list\") property(List) list_1a8d0b\n\n        out(x: 1049, y: -5, name: \"output\") property(Bool) output_b7e2cd\n\n        instance(x: -83, y: 10) ifexpression_4f6c21 root.Std_k98ojb.Std.IfExpression {}\n        list_1a8d0b -> ifexpression_4f6c21.items\n        func() {\n            in(x: -120, y: 35, name: \"prev\") property(Number) prev_7d5e45\n\n            out(x: 1049, y: -6, name: \"\") property(Number) next_1a8b3b\n\n            instance(x: 93, y: 28) less_thanorequal_c4c0f2 root.Std_k98ojb.Math.LessThanOrEqual {}\n            prev_7d5e45 -> less_thanorequal_c4c0f2.left\n            next_1a8b3b -> less_thanorequal_c4c0f2.right\n            1 -> less_thanorequal_c4c0f2.value\n        } -> ifexpression_4f6c21.handler\n        ifexpression_4f6c21.then -> output_b7e2cd\n        ifexpression_4f6c21.else -> continue_9d5e42\n    }\n\n    \n\n    instance(x: -92, y: 44) consecutivenumbers_a3a0b1 root.main.consecutivenumbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -275, y: 23, name: \"list\") property(List) list_4a8f5d\n\n        out(x: 1030, y: -12, name: \"output\") property(Bool) output_9b6c63\n\n        instance(x: 95, y: 25) filter_d7a3e1 root.Std_k98ojb.Query.Filter {}\n        list_4a8f5d -> filter_d7a3e1.list\n        func() {\n            in(x: -111, y: 34, name: \"i\") property(Number) i_b2c9c0\n\n            out(x: 1066, y: 35, name: \"output\") property(Bool) output_4f7b3d\n\n            instance(x: -91, y: 39) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n            i_b2c9c0 -> greaterthan_cb50ae.left\n            i_b2c9c0 + 1 -> greaterthan_cb50ae.right\n            greaterthan_cb50ae.result -> output_4f7b3d\n        } -> filter_d7a3e1.handler\n        list_4a8f5d -> for_c2d6eb root.Std_k98ojb.Std.For {}\n        for_c2d6eb.item -> filter_d7a3e1.item\n        for_c2d6eb.onItem -> output_4f7b3d.execute\n        for_c2d6eb.done -> output_4f7b3d.continue\n    }\n\n    \n\n    instance(x: -67, y: 53) is_consecutive_5a9c8e root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -155, y: 34, name: \"main_list\") property(List) main_list_5e3f1\n        in(x: -191, y: -215, name: \"sublist\") property(List) sublist_a0c4d8\n\n        out(x: 444, y: -206, name: \"output\") property(Bool) output_9b1a6a\n\n        instance(x: 133, y: -220) zip_d3f5e6 root.Std_k98ojb.Iteration.Zip {}\n        main_list_5e3f1 -> zip_d3f5e6.left\n        sublist_a0c4d8 -> zip_d3f5e6.right\n        func() {\n            in(x: -220, y: 15, name: \"i\") property(Number) i_9b2d35\n\n            out(x: 442, y: -215, name: \"equal\") property(Bool) equal_c7c4a1\n\n            instance(x: -193, y: -213) length_d3f5e6 root.Std_k98ojb.List.Length {}\n            sublist_a0c4d8 -> length_d3f5e6.list\n            0 -> length_d3f5e6.start\n            length_d3f5e6.length -> equal_c7c4a1\n            main_list_5e3f1 -> zip_d3f5e6.items\n            i_9b2d35 -> zip_d3f5e6.index\n            sublist_a0c4d8 -> zip_d3f5e6.right\n        } -> zip_d3f5e6.handler\n        equal_c7c4a1 -> output_9b1a6a\n    }\n\n    \n\n    instance(x: 102, y: -67) is_sublist_b2e0d2 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -245, y: 155, name: \"main_list\") property(List) main_list_0f1e9a\n        in(x: -269, y: 123, name: \"sublist\") property(List) sublist_b8d6b3\n\n        out(x: 546, y: -110, name: \"output\") property(Bool) output_e4c7d2\n\n        instance(x: -193, y: 162) length_1f5a9d root.Std_k98ojb.List.Length {}\n        instance(x: 202, y: 142) equal_0e3b6b root.Std_k98ojb.Logic.Equal {}\n        sublist_b8d6b3 -> length_1f5a9d.list\n        main_list_0f1e9a -> length_1f5a9d.list\n        length_1f5a9d.length -> equal_0e3b6b.left\n        0 -> equal_0e3b6b.right\n        equal_0e3b6b.result -> output_e4c7d2\n    }\n\n    \n\n    instance(x: -193, y: 162) is_sublist_node root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -294, y: 157, name: \"main_list\") property(List) main_list_1f0b8a\n        in(x: -145, y: -23, name: \"sublist_list\") property(List) sublist_list_e7d5c3\n\n        out(x: 446, y: 67, name: \"output\") property(Bool) output_f6f2eb\n\n        instance(x: 133, y: -35) for_d26972 root.Std_k98ojb.Std.For {}\n        sublist_list_e7d5c3 -> for_d26972.items\n        func() {\n            in(x: -121, y: -25, name: \"index\") property(Number) index_0f6a4e\n\n            out(x: 445, y: 68, name: \"output\") property(Bool) output_c8c5d1\n\n            instance(x: 92, y: -23) contains_d7d3b9 root.Std_k98ojb.List.Contains {}\n            sublist_list_e7d5c3 -> contains_d7d3b9.item\n            for_d26972.index -> contains_d7d3b9.input\n            contains_d7d3b9.is_contained -> output_c8c5d1\n        } -> for_d26972.gen_0\n        func() {\n            in(x: -121, y: -25, name: \"index\") property(Number) index_0f6a4e\n\n            out(x: 445, y: 68, name: \"output\") property(Bool) output_c8c5d1\n\n            instance(x: 92, y: -23) not_equal_3c9b95 root.Std_k98ojb.Logic.NotEqual {}\n            sublist_list_e7d5c3 -> not_equal_3c9b95.item\n            for_d26972.index -> not_equal_3c9b95.input\n            not_equal_3c9b95.result -> output_c8c5d1\n        } -> for_d26972.gen_0\n    }\n\n    \n\n    instance(x: 92, y: -23) is_sublist_node root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -193, y: 155, name: \"main_list\") property(List) main_list_3e2d4\n        in(x: -204, y: -21, name: \"sublist_list\") property(List) sublist_list_b9b5f1\n\n        out(x: 444, y: 65, name: \"output\") property(Bool) output_a6c8a7\n\n        instance(x: 94, y: -35) is_empty_4d6e3 root.Std_k98ojb.List.IsEmpty {}\n        sublist_list_b9b5f1 -> is_empty_4d6e3.list\n        main_list_3e2d4 -> is_empty_4d6e3.items\n        is_empty_4d6e3.is_empty -> output_a6c8a7\n        sublist_list_b9b5f1 -> is_empty_4d6e3.context\n        main_list_3e2d4 -> is_empty_4d6e3.context\n        is_empty_4d6e3.context -> output_a6c8a7\n    }\n\n    \n\n    instance(x: 93, y: -23) is_sublist_node root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -173, y: 156, name: \"main_list\") property(List) main_list_b4e2d9\n        in(x: -294, y: -20, name: \"sublist_list\") property(List) sublist_list_7c6a3f\n\n        out(x: 509, y: -69, name: \"result\") property(Bool) result_5b8cd1\n\n        instance(x: -82, y: 157) contains_9e4d45 root.Std_k98ojb.List.Contains {}\n        sublist_list_7c6a3f -> contains_9e4d45.item\n        main_list_b4e2d9 -> contains_9e4d45.list\n        contains_9e4d45.is_contained -> result_5b8cd1\n    }\n\n    \n\n    instance(x: 48, y: -67) is_sublist_3f7a6c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -145, y: 34, name: \"main_list\") property(List) main_list_1c0e9a\n        in(x: -155, y: 19, name: \"sublist_list\") property(List) sublist_list_6f2d5b\n\n        out(x: 1054, y: 49, name: \"output\") property(Bool) output_b7df1c\n\n        instance(x: -1049, y: -13) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        sublist_list_6f2d5b -> zip_201051.left\n        main_list_1c0e9a -> zip_201051.right\n        func() {\n            in(x: -143, y: 15, name: \"current\") property(Number) current_8a4eb3\n\n            out(x: 1027, y: 46, name: \"bool\") property(Bool) bool_9e3a5c\n\n            instance(x: -23, y: 19) equals_6f0d1b root.Std_k98ojb.Logic.Equal {}\n            current_8a4eb3 -> equals_6f0d1b.left\n            sublist_list_6f2d5b -> equals_6f0d1b.right\n            equals_6f0d1b.result -> bool_9e3a5c\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_b7df1c\n    }\n\n    \n\n    instance(x: -92, y: 53) is_sublist_5c2c8f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -142, y: 165, name: \"main_list\") property(List) list_4a3f5d\n        in(x: -141, y: 174, name: \"sublist_list\") property(List) sublist_1f8e9b\n\n        out(x: 1032, y: -97, name: \"output\") property(Bool) output_eb0c23\n\n        instance(x: 114, y: 162) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list_4a3f5d -> zip_201051.left\n        sublist_1f8e9b -> zip_201051.right\n        func() {\n            in(x: -141, y: 174, name: \"current\") property(Number) current_2c6a0d\n\n            out(x: 1033, y: -99, name: \"bool\") property(Bool) bool_eb8f1e\n\n            instance(x: 114, y: 162) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_2c6a0d -> equal_a54bdc.left\n            sublist_1f8e9b[0] -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_eb8f1e\n        } -> zip_201051.handler\n        output_eb0c23 -> bool_eb8f1e\n    }\n\n    \n\n    instance(x: 93, y: -107) is_sublist_4f2d6a root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -155, y: 145, name: \"main_list\") property(List) main_list_3f5f6b\n        in(x: -173, y: 156, name: \"sub_list\") property(List) sub_list_f7d2c8\n\n        out(x: 445, y: 59, name: \"output\") property(Bool) output_e0e1cd\n\n        instance(x: 114, y: 142) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        main_list_3f5f6b -> zip_201051.left\n        sub_list_f7d2c8 -> zip_201051.right\n        func() {\n            in(x: -172, y: 155, name: \"i\") property(Number) i_9a4e0d\n\n            out(x: 442, y: 60, name: \"continue\") trigger() continue_6f2c8\n            out(x: -173, y: 156, name: \"output\") property(Bool) output_e0e1cd\n\n            instance(x: 114, y: 142) equal_c4a7b9 root.Std_k98ojb.Logic.Equal {}\n            main_list_3f5f6b -> zip_201051.zipped\n            sub_list_f7d2c8 -> zip_201051.zipped\n            zip_201051.zipped -> equal_c4a7b9.left\n            0 -> equal_c4a7b9.right\n            equal_c4a7b9.result -> output_e0e1cd\n        } -> zip_201051.handler\n        sub_list_f7d2c8 -> zip_201051.items\n        func() {\n            in(x: -172, y: 155, name: \"i\") property(Number) i_9a4e0d\n\n            out(x: 442, y: 60, name: \"continue\") trigger() continue_6f2c8\n            out(x: -173, y: 156, name: \"output\") property(Bool) output_e0e1cd\n\n            instance(x: 114, y: 142) less_than_c3a9b5 root.Std_k98ojb.Math.LessThan {}\n            sub_list_f7d2c8 -> less_than_c3a9b5.left\n            main_list_3f5f6b -> less_than_c3a9b5.right\n            less_than_c3a9b5.result -> output_e0e1cd\n        } -> zip_201051.handler\n    }\n\n    \n\n    instance(x: 104, y: -64) is_sublist_8d0c45 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") sublist_check {\n        in(x: -141, y: 143, name: \"main_list\") property(List) main_list_3a4f2e\n        in(x: -151, y: -19, name: \"sublist_list\") property(List) sublist_list_1b0f5d\n\n        out(x: 109, y: -13, name: \"output\") property(Bool) output_9c6d8a\n\n        instance(x: -43, y: -15) filter_e2e8d3 root.Std_k98ojb.Query.Filter {}\n        sublist_list_1b0f5d -> filter_e2e8d3.items\n        func() {\n            in(x: -151, y: 10, name: \"current\") property(Number) current_6a7c4c\n\n            out(x: 104, y: 11, name: \"\") property(Bool) bool_5d8f1e\n\n            instance(x: -38, y: -13) equal_eb3a2 root.Std_k98ojb.Logic.Equal {}\n            current_6a7c4c -> equal_eb3a2.left\n            main_list_3a4f2e -> equal_eb3a2.right\n            equal_eb3a2.result -> bool_5d8f1e\n        } -> filter_e2e8d3.handler\n        func() {\n            in(x: -151, y: 10, name: \"current\") property(Number) current_6a7c4c\n\n            out(x: 104, y: 11, name: \"\") property(Bool) bool_5d8f1e\n\n            instance(x: -38, y: -13) less_than_e0b9eb root.Std_k98ojb.Math.LessThan {}\n            current_6a7c4c -> less_than_e0b9eb.left\n            main_list_3a4f2e -> less_than_e0b9eb.right\n            less_than_e0b9eb.result -> bool_5d8f1e\n        } -> filter_e2e8d3.handler\n    }\n\n    \n\n    instance(x: -47, y: 43) sublist_check_f7a8db root.main.sublist_check {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -129, y: -43, name: \"main_list\") property(List) main_list_0d1f9b\n        in(x: -142, y: -13, name: \"sublist_list\") property(List) sublist_list_3e4c6a\n\n        out(x: 445, y: -98, name: \"output\") property(Bool) output_7d7e8b\n\n        instance(x: -64, y: -43) filter_e5f7d1 root.Std_k98ojb.Query.Filter {}\n        sublist_list_3e4c6a -> filter_e5f7d1.list\n        main_list_0d1f9b -> filter_e5f7d1.items\n        func() {\n            in(x: -142, y: 18, name: \"it\") property(Any) it_b8f2e3\n\n            out(x: 439, y: -109, name: \"result\") property(Bool) result_6c5a7d\n\n            instance(x: -43, y: -13) contains_d0fdd4 root.Std_k98ojb.List.Contains {}\n            sublist_list_3e4c6a -> contains_d0fdd4.item\n            main_list_0d1f9b -> contains_d0fdd4.list\n            contains_d0fdd4.is_contained -> result_6c5a7d\n        } -> filter_e5f7d1.handler\n        func() {\n            in(x: -142, y: 18, name: \"it\") property(Any) it_b8f2e3\n\n            out(x: 439, y: -109, name: \"result\") property(Bool) result_6c5a7d\n\n            instance(x: -43, y: -13) not_equal_d0b9ec root.Std_k98ojb.Logic.NotEqual {}\n            sublist_list_3e4c6a -> not_equal_d0b9ec.item\n            main_list_0d1f9b -> not_equal_d0b9ec.list\n            not_equal_d0b9ec.result -> result_6c5a7d\n        } -> contains_d0fdd4.handler\n        filter_e5f7d1.output_list -> result_6c5a7d\n    }\n\n    \n\n    instance(x: 101, y: -27) is_sublist_3b3e9b root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -446, y: 0, name: \"list\") property(List) list_5e3f9d\n        out(x: -1, y: -235, name: \"missing_number\") property(Number) missing_number_e2a6c8\n\n        instance(x: -109, y: -240) for_d3b0ec root.Std_k98ojb.Std.For {}\n        instance(x: 394, y: 5) ifexpression_7f4c43 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index > 0 && previous == index + 1\"\n        }\n        getter(x: -142, y: 160, name: \"getter_d9c3e6\") getter_d9c3e6 = previous\n        setter(x: 679, y: 5) setter_d9c3e6 = previous\n        instance(x: 321, y: 0) find_8bfcf root.Std_k98ojb.Iteration.Map {}\n        getter_d9c3e6.value -> find_8bfcf.handler\n        list_5e3f9d -> for_d3b0ec.items\n        for_d3b0ec.item -> ifexpression_7f4c43.execute\n        ifexpression_7f4c43.then -> setter_d9c3e6.execute\n        for_d3b0ec.index -> setter_d9c3e6.new_value\n        for_d3b0ec.onItem -> ifexpression_7f4c43.execute\n        for_d3b0ec.done -> find_8bfcf.continue\n        ifexpression_7f4c43.value -> missing_number_e2a6c8\n        for_d3b0ec.index + 1 -> setter_d9c3e6.new_value\n    }\n\n    \n\n    instance(x: -81, y: 170) find_smallest_missing_5d5d45 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -442, y: 0, name: \"list\") property(List) list_9f2d8e\n\n        out(x: -15, y: 0, name: \"output\") property(Number) output_4b6c85\n\n        instance(x: 1, y: -121) for_7a3c42 root.Std_k98ojb.Std.For {}\n        getter(x: 5, y: -106, name: \"getter_9e8d21\") getter_9e8d21 = index\n        setter(x: -0, y: -128, name: \"setter_2f1c6a\") setter_2f1c6a = index\n        instance(x: 7, y: -104) ifexpression_4a5a3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"prev + 1 == current\"\n        }\n        getter(x: 0, y: -128, name: \"getter_8d7e2c\") getter_8d7e2c = prev\n        setter(x: -0, y: -106, name: \"setter_ba3df5\") setter_ba3df5 = prev\n        instance(x: 1, y: -121) getat_5f9b21 root.Std_k98ojb.List.GetAt {}\n        ifexpression_4a5a3.value -> output_4b6c85\n        for_7a3c42.item -> setter_ba3df5.new_value\n        list_9f2d8e -> for_7a3c42.items\n        0 -> for_7a3c42.index\n        getat_5f9b21.list -> for_7a3c42.item\n        for_7a3c42.onItem -> ifexpression_4a5a3.execute\n        for_7a3c42.done -> setter_2f1c6a.reset\n        for_7a3c42.index -> setter_2f1c6a.new_value\n    }\n\n    \n\n    instance(x: -23, y: 0) find_missing_9b5d8 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing_number {\n        in(x: -446, y: 2, name: \"execute\") trigger() execute_5f8a0b\n        in(x: -460, y: 33, name: \"list\") property(List) list_e9c4d3\n\n        out(x: 1216, y: 1, name: \"continue\") trigger() continue_ae4dd2\n        out(x: 1188, y: 141, name: \"output\") property(Number) output_8b5a7f\n\n        instance(x: -0, y: 0) for_d6c3d9 root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 2, name: \"getter_a4e1d1\") getter_a4e1d1 = previous\n        setter(x: -0, y: 0, name: \"setter_8a6f7c\") setter_8a6f7c = previous\n        instance(x: -275, y: -35) getat_3cd9df root.Std_k98ojb.List.GetAt {}\n        ifexpression_2d4e38 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == index + 1\"\n        }\n        setter_8a6f7c.continue -> for_d6c3d9.reset\n        list_e9c4d3 -> for_d6c3d9.items\n        for_d6c3d9.item -> ifexpression_2d4e38.execute\n        for_d6c3d9.index -> ifexpression_2d4e38.gen_0\n        getter_a4e1d1.value -> ifexpression_2d4e38.gen_1\n        for_d6c3d9.onItem -> ifexpression_2d4e38.execute\n        for_d6c3d9.done -> continue_ae4dd2\n        getter_a4e1d1.value -> output_8b5a7f\n        for_d6c3d9.index -> setter_8a6f7c.new_value\n        ifexpression_2d4e38.then -> setter_8a6f7c.execute\n        list_e9c4d3 -> getat_3cd9df.list\n        0 -> getat_3cd9df.index\n        getat_3cd9df.itemAtIndex -> setter_8a6f7c.new_value\n        execute_5f8a0b -> setter_8a6f7c.execute\n        for_d6c3d9.onItem -> ifexpression_2d4e38.execute\n    }\n\n    \n\n    instance(x: 12, y: -177) find_missing_number_bdfb1f root.main.find_missing_number {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -430, y: 0, name: \"list\") property(List) list_5d2d1a\n\n        out(x: -11, y: -219, name: \"continue\") trigger() continue_9f3e4b\n        out(x: 121, y: -231, name: \"output\") property(Number) output_f7c8f6\n\n        instance(x: 342, y: -235) for_d4d5a root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: -120) ifexpression_9e2f47 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == list[0]\"\n        }\n        getter(x: -251, y: -113, name: \"getter_5c8d4a\") getter_5c8d4a = list\n        setter(x: 1, y: -120) setter_1e2b3a = list\n        instance(x: 0, y: 0) isequal_7fdd45 root.Std_k98ojb.Logic.Equal {}\n        ifexpression_9e2f47.value -> output_f7c8f6\n        for_d4d5a.item -> ifexpression_9e2f47.execute\n        list_5d2d1a -> for_d4d5a.items\n        0 -> getter_5c8d4a[0]\n        setter_1e2b3a.continue -> for_d4d5a.reset\n        isequal_7fdd45.result -> ifexpression_9e2f47.predicate\n        for_d4d5a.onItem -> ifexpression_9e2f47.execute\n        for_d4d5a.done -> continue_9f3e4b\n        setter_1e2b3a.new_value -> list\n    }\n\n    \n\n    instance(x: -44, y: 0) find_missing_3c6f7 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -442, y: 0, name: \"list\") property(List) list_1b8e5d\n        in(x: 0, y: 0, name: \"n\") property(Number) n_2c7a3f\n\n        out(x: 1249, y: 34, name: \"output\") property(Number) output_ebfef6\n\n        data_instance(x: -246, y: 26) data_c5d4b0  = [sum, average]\n        instance(x: 13, y: 0) for_8a7c1 root.Std_k98ojb.Std.For {}\n        instance(x: 34, y: 10) ifexpression_a6f9ec root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -11, y: 24, name: \"getter_5c3d4a\") getter_5c3d4a = previous\n        setter(x: 43, y: -316, name: \"setter_d9f2b7\") setter_d9f2b7 = previous\n        instance(x: 29, y: -35) getat_8e6f0 root.Std_k98ojb.List.GetAt {}\n        ifexpression_a6f9ec.else -> continue_1a5d3c\n        ifexpression_a6f9ec.value -> output_ebfef6\n        ifexpression_a6f9ec.then -> setter_d9f2b7.execute\n        list_1b8e5d -> for_8a7c1.items\n        for_8a7c1.item -> ifexpression_a6f9ec.gen_0\n        for_8a7c1.index -> ifexpression_a6f9ec.gen_1\n        getter_5c3d4a.value -> ifexpression_a6f9ec.gen_2\n        for_8a7c1.onItem -> ifexpression_a6f9ec.execute\n        for_8a7c1.done -> continue_1a5d3c\n        for_8a7c1.item -> setter_d9f2b7.new_value\n        list_1b8e5d -> getat_8e6f0.list\n        n_2c7a3f -> getat_8e6f0.index\n        getat_8e6f0.itemAtIndex -> setter_d9f2b7.new_value\n        execute_90aaec -> setter_d9f2b7.execute\n        setter_d9f2b7.continue -> for_8a7c1.reset\n        for_8a7c1.next -> continue_1a5d3c\n    }\n\n    \n\n    instance(x: -64, y: 157) find_missing_a0e6e root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: 0, y: -245, name: \"list\") property(List) list_a2f6cd\n        in(x: 1, y: -243, name: \"execute\") trigger() execute_4b9d3c\n\n        out(x: 1218, y: -234, name: \"continue\") trigger() continue_b7e5db\n        out(x: 1232, y: 0, name: \"output\") property(Number) output_d4f6a1\n\n        instance(x: 342, y: -233, name: \"prev_num\") Std_k98ojb.Std.IfExpression {}\n        getter(x: 47, y: -236, name: \"getter_9c2a66\") getter_9c2a66 = prev_num.gen_0\n        setter(x: 0, y: -248, name: \"setter_5f1d3e\") setter_5f1d3e = prev_num.gen_0\n        instance(x: 48, y: -231) ifexpression_6c15d4 root.Std_k98ojb.Std.If {}\n        getter_9c2a66.value -> output_d4f6a1\n        ifexpression_6c15d4.then -> setter_5f1d3e.execute\n        list_a2f6cd -> ifexpression_6c15d4.list\n        prev_num.gen_0 -> ifexpression_6c15d4.gen_0\n        ifexpression_6c15d4.value -> output_d4f6a1\n        ifexpression_6c15d4.then -> setter_5f1d3e.execute\n        list_a2f6cd -> prev_num.items\n        prev_num.item -> ifexpression_6c15d4.gen_0\n        -1 -> setter_5f1d3e.new_value\n        execute_4b9d3c -> setter_5f1d3e.execute\n        getter_9c2a66.continue -> continue_b7e5db\n        prev_num.onItem -> ifexpression_6c15d4.execute\n        ifexpression_6c15d4.then -> setter_5f1d3e.execute\n        -1 -> setter_5f1d3e.new_value\n        prev_num.index -> setter_5f1d3e.new_value\n        list_a2f6cd -> getat_8b8a7c.items\n        0 -> getat_8b8a7c.index\n        prev_num.itemAtIndex -> setter_5f1d3e.new_value\n        execute_4b9d3c -> prev_num.execute\n        continue_b7e5db -> prev_num.reset\n        setter_5f1d3e.continue -> ifexpression_6c15d4.next\n    }\n\n    \n\n    instance(x: 44, y: -234) find_smallest_missing_8b9a2 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -442, y: 2, name: \"execute\") trigger() execute_4e3f1d\n        in(x: -464, y: 34, name: \"list\") property(List) list_a6b5c4\n\n        out(x: 1218, y: 10, name: \"continue\") trigger() continue_f9a0ec\n        out(x: 1192, y: 144, name: \"output\") property(Number) output_9d1f7e\n\n        instance(x: 751, y: -110) for_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: 335, y: 161, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || index + 1 in list\"\n        }\n        setter_9d4f1c.continue -> for_d26972.reset\n        list_a6b5c4 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.execute\n        for_d26972.index -> ifexpression_875761.gen_2\n        getter_b280eb.value -> ifexpression_875761.gen_0\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_a6b5c4 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        execute_4e3f1d -> setter_9d4f1c.execute\n        ifexpression_875761.value -> output_9d1f7e\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_f9a0ec\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_a6b5c4 -> getat_ce2a48.list\n        1 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_4e3f1d -> setter_38e107.execute\n        for_d26972.index -> setter_9d4f1c.new_value\n        ifexpression_875761.else -> for_d26972.next\n    }\n\n    \n\n    instance(x: -34, y: 127) find_missing_7a6d5 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -456, y: 0, name: \"execute\") trigger() execute_1f4e9a\n        in(x: -472, y: 5, name: \"list\") property(List) list_f8f7d3\n\n        out(x: 1246, y: 2, name: \"continue\") trigger() continue_bf8c85\n        out(x: 1204, y: -233, name: \"output\") property(Number) output_5bdf1a\n\n        instance(x: 74, y: 3) for_d9d7e root.Std_k98ojb.Std.For {}\n        instance(x: -0, y: 0) ifexpression_6e2f47 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 341, y: 123, name: \"getter_4d3a7c\") getter_4d3a7c = previous\n        setter(x: -234, y: -246, name: \"setter_5f9e42\") setter_5f9e42 = previous\n        instance(x: 342, y: 1) find_smallest_missing_node root.Std_k98ojb.Std.Count {}\n        getter_4d3a7c.value -> find_smallest_missing_node.count\n        list_f8f7d3 -> for_d9d7e.items\n        for_d9d7e.item -> ifexpression_6e2f47.gen_1\n        -1 -> setter_5f9e42.new_value\n        execute_1f4e9a -> setter_5f9e42.execute\n        getter_4d3a7c.value -> find_smallest_missing_node.iteration\n        for_d9d7e.done -> continue_bf8c85\n        setter_5f9e42.continue -> for_d9d7e.reset\n        for_d9d7e.onItem -> ifexpression_6e2f47.execute\n        ifexpression_6e2f47.then -> find_smallest_missing_node.on_count\n        list_f8f7d3 -> find_smallest_missing_node.items\n        0 -> find_smallest_missing_node.count\n        for_d9d7e.index -> find_smallest_missing_node.interation\n        getter_4d3a7c.value -> ifexpression_6e2f47.gen_0\n        for_d9d7e.item -> ifexpression_6e2f47.gen_1\n    }\n\n    \n\n    instance(x: 123, y: -245) find_smallest_missing_f8f5b4 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing_number {\n        in(x: -475, y: 2, name: \"list\") property(List) list_9e3b6d\n\n        out(x: 1191, y: 0, name: \"output\") property(Number) output_5aeb41\n        instance(x: 342, y: 74) for_d7f8c4 root.Std_k98ojb.Std.For {}\n        getter(x: -44, y: 140, name: \"getter_b6d9c1\") getter_b6d9c1 = previous\n        setter(x: -0, y: -123, name: \"setter_2e3f5a\") setter_2e3f5a = previous\n        instance(x: 313, y: -26) ifexpression_eb7dd root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        getter_b6d9c1.value -> output_5aeb41\n        for_d7f8c4.done -> find_missing_number.continue_0eef3f\n        setter_2e3f5a.continue -> for_d7f8c4.reset\n        list_9e3b6d -> for_d7f8c4.items\n        1 -> for_d7f8c4.index\n        for_d7f8c4.item -> ifexpression_eb7dd.execute\n        ifexpression_eb7dd.then -> setter_2e3f5a.execute\n        output_5aeb41.value -> find_missing_number.output\n        list_9e3b6d -> getter_b6d9c1.list\n        0 -> getter_b6d9c1.index\n        for_d7f8c4.onItem -> ifexpression_eb7dd.execute\n    }\n\n    \n\n    instance(x: -21, y: 165) find_missing_number_3c9a66 root.main.find_missing_number {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -430, y: 2, name: \"list\") property(List) list_5e4f8d\n        in(x: -443, y: 0, name: \"execute\") trigger() execute_9c4a6b\n\n        out(x: 1211, y: -233, name: \"continue\") trigger() continue_e2fdd3\n        out(x: 1237, y: 147, name: \"output\") property(Number) output_5d0e45\n\n        instance(x: 63, y: 4) ifexpression_a1a5c9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"prev == n + 1\"\n        }\n        getter(x: 313, y: -234, name: \"getter_6d0d8e\") getter_6d0d8e = prev\n        setter(x: 0, y: 0, name: \"setter_9f4c63\") setter_9f4c63 = prev\n        instance(x: 315, y: -220) for_d3b7df root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9f4c63\") setter_8d1e5a = prev\n        instance(x: -275, y: 2) getat_e2e6a9 root.Std_k98ojb.List.GetAt {}\n        ifexpression_a1a5c9.value -> output_5d0e45\n        ifexpression_a1a5c9.then -> setter_8d1e5a.execute\n        list_5e4f8d -> for_d3b7df.items\n        1 -> for_d3b7df.index\n        getat_e2e6a9.itemAtIndex -> setter_8d1e5a.new_value\n        execute_9c4a6b -> setter_8d1e5a.execute\n        setter_8d1e5a.continue -> for_d3b7df.reset\n        setter_9f4c63.continue -> for_d3b7df.next\n    }\n\n    \n\n    instance(x: 0, y: -173) find_missing_2f6a42 root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -227, y: 18, name: \"input\") property(String) input_1a5f3d\n\n        out(x: 509, y: -64, name: \"output\") property(String) output_2e0c9b\n\n        instance(x: 74, y: -43) replace_8c4dd6 root.Std_k98ojb.Strings.Replace {}\n        input_1a5f3d -> replace_8c4dd6.input\n        \",\" -> replace_8c4dd6.search\n        \".\" -> replace_8c4dd6.replace\n        \" \" -> replace_8c4dd6.search\n        \":\" -> replace_8c4dd6.replace\n        replace_8c4dd6.output -> output_2e0c9b\n    }\n\n    \n\n    instance(x: -200, y: 30) replace_punctuation_7c1d45 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -230, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 76) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) replace_8f5d9c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> tolower_2e1444.input\n        \",.\" -> replace_8f5d9c.search\n        \":\" -> replace_8f5d9c.replace\n        tolower_2e1444.output -> replace_8f5d9c.input\n        replace_8f5d9c.result -> output_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_punctuation_3a1bdf root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuations {\n        in(x: -227, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 509, y: 34, name: \"output\") property(String) output_8f9d4b\n\n        instance(x: 52, y: 47, name: \"replace\") replace_punctuations_node root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_punctuations_node.input\n        \",.\" -> replace_punctuations_node.search\n        \":\" -> replace_punctuations_node.replace\n        replace_punctuations_node.output -> output_8f9d4b\n    }\n\n    \n\n    instance(x: -174, y: 30) replace_punctuations_a2e1c5 root.main.replace_punctuations {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -199, y: 0, name: \"input\") property(String) input_5e1a8d\n        out(x: 1007, y: -49, name: \"output\") property(String) output_6b3f2c\n\n        instance(x: 15, y: -19) replace_node root.Std_k98ojb.Strings.Replace {}\n        input_5e1a8d -> replace_node.input\n        \",.\" -> replace_node.search\n        \":\" -> replace_node.replace\n        replace_node.output -> output_6b3f2c\n    }\n\n    \n\n    instance(x: 264, y: -465) replace_with_colon_c4d7ec root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -194, y: 0, name: \"input\") property(String) input_e3e4d2\n\n        out(x: -195, y: 1, name: \"output\") property(String) output_c8a9f6\n\n        instance(x: 15, y: 13) replace_d7c5b4 root.Std_k98ojb.Strings.Replace {}\n        input_e3e4d2 -> replace_d7c5b4.input\n        \",,\" -> replace_d7c5b4.search\n        \":\" -> replace_d7c5b4.replace\n        replace_d7c5b4.output -> output_c8a9f6\n    }\n\n    \n\n    instance(x: -201, y: 0) replace_with_colon_5d2e1f root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: 0, y: 0, name: \"input\") property(String) input_8f1f2a\n\n        out(x: 0, y: 0, name: \"output\") property(String) output_4d7d3b\n\n        instance(x: -109, y: -46, name: \"replace_char\") replace_6e5d14 root.Std_k98ojb.Strings.Replace {}\n        input_8f1f2a -> replace_char.input\n        \",.\" -> replace_char.search\n        \":\" -> replace_char.replace\n        replace_char.output -> output_4d7d3b\n    }\n\n    \n\n    instance(x: -202, y: 0) replace_special_chars_6e8c9d root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -231, y: 4, name: \"string\") property(String) input_6f0d5a\n\n        out(x: 1018, y: -2, name: \"output\") property(String) output_7e7c1b\n\n        instance(x: 73, y: 20) replace_5cd4c3 root.Std_k98ojb.Strings.Replace {}\n        input_6f0d5a -> replace_5cd4c3.input\n        \",,\" -> replace_5cd4c3.search\n        \".\" -> replace_5cd4c3.replace\n        replace_5cd4c3.output -> output_7e7c1b\n    }\n\n    \n\n    instance(x: -202, y: 0) replace_with_colon_6f8d21 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_char {\n        in(x: -227, y: 0, name: \"input\") property(String) input_ai\n        out(x: 1046, y: -49, name: \"output\") property(String) output_ai\n\n        instance(x: 74, y: 44) replace_node root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_node.input\n        \",.\" -> replace_node.search\n        \":\" -> replace_node.replace\n        replace_node.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: -38) replace_char_4d3e8f root.main.replace_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -201, y: 0, name: \"input\") property(String) input_ai\n        out(x: 1092, y: 0, name: \"output\") property(String) output_ai\n\n        instance(x: 44, y: 0) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {}\n        setter(x: -215, y: -59, name: \"setter_41e4ad\") setter_41e4ad = replace\n        getter(x: 92, y: 0) getter_38583a -> output_ai\n        input_ai -> ifexpression_5c4634.execute\n        \", \".\" -> ifexpression_5c4634.expression\n    }\n\n    \n\n    instance(x: -179, y: 33) replace_punctuation_b9ff6b root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -198, y: 0, name: \"input\") property(String) input_8d4f9b\n        out(x: 1047, y: 0, name: \"output\") property(String) output_d1a5e3\n\n        instance(x: 93, y: -19) replace_6c2df9 root.Std_k98ojb.Strings.Replace {}\n        input_8d4f9b -> replace_6c2df9.input\n        \",,\" -> replace_6c2df9.search\n        \":\" -> replace_6c2df9.replace\n        replace_6c2df9.output -> output_d1a5e3\n    }\n\n    \n\n    instance(x: -215, y: 0) to_lower_7b4dca root.Std_k98ojb.Strings.ToLower {}\n    input_8d4f9b -> to_lower_7b4dca.input\n    to_lower_7b4dca.output -> replace_chars.input\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -294, y: 0, name: \"string\") property(String) input_2\n\n        out(x: 509, y: -1, name: \"result\") property(Bool) result_7c5f3e\n\n        instance(x: 0, y: 0) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: -26, y: 49, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 649, y: 2) setter_9d4f1c = previous\n        instance(x: 322, y: -25) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: 0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: 34) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> result_7c5f3e\n        ifexpression_875761.value -> result_7c5f3e\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_input_2 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> result_7c5f3e\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_2 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 23, y: -176) check_same_b0c5b7 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -0, y: 0, name: \"input\") property(String) input_5f1e2a\n\n        out(x: 1099, y: -3, name: \"output\") property(Bool) output_6b8c43\n\n        instance(x: 0, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        instance(x: 0, y: 0) strings_equal_node root.Std_k98ojb.Logic.Equal {}\n        input_5f1e2a -> strings_length_node.input\n        strings_length_node.length -> strings_equal_node.left\n        \"1\" -> strings_equal_node.right\n        strings_equal_node.result -> output_6b8c43\n        instance(x: 0, y: 0) strings_equal_node root.Std_k98ojb.Logic.Equal {}\n        input_5f1e2a -> strings_length_node.input\n        strings_length_node.length -> strings_equal_node.left\n        \"1\" -> strings_equal_node.right\n        strings_equal_node.result -> output_6b8c43\n    }\n\n    \n\n    instance(x: 0, y: -3) all_same_4f5d7e root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n     func(doc: \"checks whether all the characters are same or not.\") are_same{\n        in(x: -246, y: 2, name: \"input\") property(String) input_0\n        out(x: 541, y: -1, name: \"output\") property(Bool) output_3d7e4c\n\n        instance(x: 0, y: 0) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 109, y: 2) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        map_6030c9.output_list -> contains_d42dce.list\n        input_0 -> contains_d42dce.input\n        contains_d42dce.result -> output_3d7e4c\n    }\n\n    \n\n    instance(x: -55, y: 530) are_same_1f6b5a root.main.are_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: -0, y: 0, name: \"string\") property(String) input_4\n        out(x: 113, y: -2, name: \"output\") property(Bool) output_d5c8b9\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        input_4 -> tolower_2e1444.input\n        length_8166b0.length -> is_same_char.length\n        tolower_2e1444.output -> is_same_char.input\n        \"a\" -> is_same_char.input\n        is_same_char.result -> output_d5c8b9\n   }\n    \n\n    instance(x: 44, y: -11) is_same_char_0d3c7f root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") same_characters {\n        in(x: -292, y: 0, name: \"input\") property(String) input_9f3d4e\n\n        out(x: 538, y: 2, name: \"output\") property(Bool) output_e6c8a5\n\n        instance(x: 0, y: 1) tolower_c7b2d4 root.Std_k98ojb.Strings.ToLower {}\n        input_9f3d4e -> tolower_c7b2d4.input\n        tolower_c7b2d4.output -> same_characters.input\n        same_characters.input -> tolower_c7b2d4.input\n        input_9f3d4e -> tolower_c7b2d4.input\n        tolower_c7b2d4.output -> same_characters.output\n    }\n\n    \n\n    instance(x: 0, y: -1) same_characters_6d8a66 root.main.same_characters {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") same_char {\n        in(x: -245, y: 0, name: \"string\") property(String) input_3\n\n        out(x: 540, y: -2, name: \"output\") property(Bool) output_8b4d23\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        input_3 -> tolower_2e1444.input\n        tolower_2e1444.output -> output_8b4d23\n    }\n\n    \n\n    instance(x: -67, y: 53) same_char_e6c7f5 root.main.same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") char_is_same {\n        in(x: -475, y: 0, name: \"input\") property(List) list_6d8f2e\n\n        out(x: 1094, y: -3, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 0, y: 0) is_lower_c1b2a9 root.Std_k98ojb.Strings.IsLowerCase {}\n        instance(x: 105, y: -13) is_upper_c1b2a9 root.Std_k98ojb.Strings.IsUpperCase {}\n        instance(x: 202, y: -5) equal_6d8f2e root.Std_k98ojb.Logic.Equal {}\n        list_6d8f2e -> is_lower_c1b2a9.input\n        list_6d8f2e -> is_upper_c1b2a9.input\n        is_lower_c1b2a9.output -> equal_6d8f2e.left\n        is_upper_c1b2a9.output -> equal_6d8f2e.right\n        equal_6d8f2e.result -> output_5bbcd7\n    }\n\n    \n\n    instance(x: 44, y: -47) char_is_same_8c3dd0 root.main.char_is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") char_equal {\n        in(x: -292, y: 2, name: \"string\") property(String) input_1\n        out(x: 121, y: 4, name: \"output\") property(Bool) output_3f0b8d\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        input_1 -> tolower_2e1444.input\n        tolower_2e1444.output -> output_3f0b8d\n    }\n\n    \n\n    instance(x: -69, y: -27) char_equal_c5a6c4 root.main.char_equal {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") AllSame {\n        in(x: -245, y: 0, name: \"string\") property(String) input_2\n\n        out(x: 555, y: -1, name: \"output\") property(Bool) output_d7f4c9\n\n        instance(x: 104, y: -6) tolower_3b5e8 root.Std_k98ojb.Strings.ToLower {}\n        input_2 -> tolower_3b5e8.input\n        tolower_3b5e8.output -> output_d7f4c9\n        tolower_3b5e8.output -> all_same_e6d1c0\n        all_same_e6d1c0.result -> output_d7f4c9\n    }\n\n    \n\n    instance(x: -67, y: 34) AllSame_f7a2d5 root.main.AllSame {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") all_same_chars {\n        in(x: -246, y: 0, name: \"input\") property(String) input_a1\n        out(x: 509, y: -2, name: \"output\") property(Bool) output_3d7a6f\n\n        instance(x: -43, y: 4) tolower_9b5c8e root.Std_k98ojb.Strings.ToLower {}\n        input_a1 -> tolower_9b5c8e.input\n        tolower_9b5c8e.output -> output_3d7a6f\n    }\n\n    \n\n    instance(x: -63, y: 0) all_same_chars_f4d2c6 root.main.all_same_chars {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"count\") property(Number) count_3c6b9e\n\n        instance(x: 0, y: 1) length_6e87f root.Std_k98ojb.Strings.Length {}\n        instance(x: 265, y: 0) isnumeric_d42dce root.Std_k98ojb.Strings.IsNumeric {}\n        input_ai -> length_6e87f.input\n        length_6e87f.length -> isnumeric_d42dce.input\n        isnumeric_d42dce.result -> count_3c6b9e\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_2c856f root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"0-9\" -> contains_d42dce.contains\n        input_ai -> tolower_2e1444.input\n        contains_d42dce.result -> output_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_6a8f43 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -430, y: 2, name: \"string\") property(String) input_0\n        out(x: 1169, y: -1, name: \"length\") property(Number) length_a3c6f5\n\n        instance(x: 0, y: 0) length_7d8bfc root.Std_k98ojb.Length {}\n        length_7d8bfc.length -> length_a3c6f5\n        input_0 -> length_7d8bfc.input\n    }\n\n    \n\n    instance(x: -44, y: 11) count_digits_4e5a9f root.main.CountDigits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"count number of digits in a given string.\") Count {\n        in(x: -219, y: 2, name: \"input\") property(String) input_ai\n\n        out(x: 34, y: 0, name: \"length\") property(Number) length_ai\n\n        instance(x: 80, y: -417) length_6e87f2 root.Std_k98ojb.Length {}\n        input_ai -> length_6e87f2.input\n        length_6e87f2.length -> length_ai\n    }\n\n    \n\n    instance(x: 48, y: 11) Count_node root.main.Count {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n        out(x: 530, y: -2, name: \"number\") property(Number) number_0\n\n        instance(x: 0, y: 1) length_6e87f root.Std_k98ojb.Strings.Length {}\n        length_6e87f.input -> input_0\n        length_6e87f.length -> number_0\n    }\n\n    \n\n    instance(x: -55, y: 529) count_digits_2c856f root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") digit_count {\n        in(x: -229, y: 0, name: \"input\") property(String) input_ai\n\n        out(x: 113, y: -2, name: \"output\") property(Number) output_ai\n\n        instance(x: 23, y: 1) isdigit_6d05b0 root.Std_k98ojb.Strings.IsDigit {}\n        input_ai -> isdigit_6d05b0.input\n        count_9e8a5f root.Std_k98ojb.Count {}\n        isdigit_6d05b0.result -> count_9e8a5f.count\n        0 -> count_9e8a5f.reset\n        count_9e8a5f.iterations -> output_ai\n    }\n\n    \n\n    instance(x: -55, y: 529) digit_count_2c856f root.main.digit_count {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: 77, name: \"count\") property(Number) count_ai\n\n        instance(x: 201, y: 2) length_f7c5a3 root.Std_k98ojb.Strings.Length {}\n        input_0 -> length_f7c5a3.input\n        length_f7c5a3.length -> count_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) count_digits_15f9e9 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") digit_count {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"output\") property(Number) output_3d6a5f\n\n        instance(x: 0, y: 1) isnumeric_7e9c4b root.Std_k98ojb.Strings.IsNumeric {}\n        input_ai -> isnumeric_7e9c4b.input\n        isnumeric_7e9c4b.result -> output_3d6a5f\n    }\n\n    \n\n    instance(x: 81, y: 52) digit_count_2df1b root.main.digit_count {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Count number of digits in a given string.\") Count_digits {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 159, y: -219, name: \"count\") property(Number) count_7f2c6d\n\n        instance(x: 0, y: 1) length_4b3e8f root.Std_k98ojb.Strings.Length {}\n        instance(x: 265, y: 0) isnumeric_9a8d66 root.Std_k98ojb.Strings.IsNumeric {}\n        input_0 -> length_4b3e8f.input\n        length_4b3e8f.length -> isnumeric_9a8d66.input\n        isnumeric_9a8d66.is_number -> count_7f2c6d\n    }\n\n    \n\n    instance(x: -55, y: 529) Count_digits_5b0c21 root.main.Count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"count number of digits in a given string.\") digit_count {\n        in(x: -219, y: 2, name: \"string\") property(String) input_0\n\n        out(x: 1146, y: -647, name: \"length\") property(Number) length_a1b5d7\n\n        instance(x: 80, y: -417) split_8e3f9c root.Std_k98ojb.Strings.Split {}\n        split_8e3f9c.left -> input_0\n        \"0-9\" -> split_8e3f9c.splitOn\n        split_8e3f9c.right -> length_a1b5d7\n        instance(x: 201, y: 62) map_2a4cd6 root.Std_k98ojb.Iteration.Map {}\n        map_2a4cd6.handler = Std_k98ojb.Std.Count\n        input_0 -> map_2a4cd6.items\n        map_2a4cd6.context = Std_k98ojb.Std.CountContext{}\n        length_a1b5d7 -> map_2a4cd6.output_list\n    }\n\n    \n\n    instance(x: 48, y: 11) digit_count_node root.main.digit_count {}\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -509, y: 2, name: \"n\") property(Number) n_9f1b8a\n\n        out(x: 1135, y: -347, name: \"output\") property(Number) output_f6c0e3\n\n        instance(x: 82, y: -412) ifexpression_4d7dd2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        data_instance(x: 394, y: -380) data_b5f8a4  = [sum, sum]\n        instance(x: 46, y: -384) mul_9d2d6e root.Std_k98ojb.Math.Mul {}\n        instance(x: 97, y: -255, name: \"fourth power\") expression_3a7f0d root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4\"\n        }\n        instance(x: 99, y: -249) add_5e1c9e root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249, name: \"fourth power\") div_2a7d6f root.Std_k98ojb.Math.Div {}\n        instance(x: 99, y: -249, name: \"sum\") add_5e1c9e.first\n        instance(x: 99, y: -249, name: \"fourth power\") div_2a7d6f.second\n        data_b5f8a4 -> sum_3b0a95.sum\n        data_b5f8a4 -> add_5e1c9e.first\n        data_b5f8a4 -> div_2a7d6f.first\n        expression_3a7f0d.result -> mul_9d2d6e.first\n        n_9f1b8a -> mul_9d2d6e.second\n        expression_3a7f0d.result -> data_b5f8a4.sum\n        div_2a7d6f.result -> sum_3b0a95.average\n        add_5e1c9e.result -> output_f6c0e3\n    }\n\n    \n\n    instance(x: -55, y: 529) sum_fourth_power_4b9d35 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_4d6f1a\n\n        out(x: 1150, y: 7, name: \"sum\") property(Number) sum_5b9e3c\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 395, y: -378) sum_digits_96023e root.main.sum_digits {}\n        instance(x: 97, y: -127) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_4d6f1a -> mul_f892a4.first\n        n_4d6f1a -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_5b9e3c\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -555, y: 2, name: \"n\") property(Number) n_1e3d6b\n\n        out(x: 1239, y: 8, name: \"sum\") property(Number) output_7c5f0a\n\n        instance(x: 74, y: -415) sum_f9fdd4 root.Std_k98ojb.Math.Sum {}\n        data_instance(x: 344, y: -387) data_b1e3d6b = [n]\n        instance(x: 93, y: -392) mul_2e4a5c root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -396) pow_f8fdd4 root.Std_k98ojb.Math.Pow {}\n        instance(x: 97, y: -388) sum_c3d1ca root.Std_k98ojb.Math.Sum {}\n        data_b1e3d6b -> sum_f9fdd4.n\n        n_1e3d6b -> mul_2e4a5c.first\n        pow_f8fdd4.value -> mul_2e4a5c.second\n        mul_2e4a5c.result -> data_b1e3d6b[0]\n        sum_f9fdd4.sum -> sum_c3d1ca.sum\n    }\n\n    \n\n    instance(x: -293, y: 568) sum_fourth_power_6f8e7b root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_6b655b\n\n        out(x: 1149, y: 77, name: \"output\") property(Number) output_732a8a\n\n        data_instance(x: 394, y: -339) data_cde0dc  = [sum_fourth_power]\n        instance(x: 46, y: -383) expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (n + 1) * (2*n + 1) / 6\"\n        }\n        instance(x: 62, y: -226) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        data_cde0dc -> output_732a8a\n        n_6b655b -> expression_634b7e.gen_0\n        expression_634b7e.result -> div_547f34.first\n        div_547f34.result -> setter_41e4ad.new_value\n    }\n\n    \n\n    instance(x: -81, y: 159) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -509, y: 4, name: \"n\") property(Number) n_0b9a3d\n\n        out(x: 1291, y: 6, name: \"output\") property(Number) output_fdbf2c\n\n        instance(x: 0, y: 0) sum_fourth_power_c8e4eb root.Std_k98ojb.Math.Sum {}\n        instance(x: -342, y: -294) for_1d9a3f root.Std_k98ojb.Std.For {}\n        instance(x: 83, y: -289) power_2a6c0f root.Std_k98ojb.Math.Pow {}\n        instance(x: 104, y: -288) add_b4e2eb root.Std_k98ojb.Math.Add {}\n        instance(x: 96, y: -287) modulo_d3d5c9 root.Std_k98ojb.Math.Modulo {}\n        data_instance(x: 0, y: -290) data_6d4a8f  = [sum]\n        instance(x: -342, y: -294) firstodd_7e1ce2 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -341, y: -288) filter_e5c9c0 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        list_09fcba -> filter_e5c9c0.list\n        filter_e5c9c0.result -> firstodd_7e1ce2.list\n        firstodd_7e1ce2.item -> power_2a6c0f.first\n        data_6d4a8f -> sum_fourth_power.sum\n        power_2a6c0f.second -> modulo_d3d5c9.divisor\n        modulo_d3d5c9.result -> add_b4e2eb.first\n        firstodd_7e1ce2.item -> add_b4e2eb.second\n        sum_fourth_power.sum -> output_fdbf2c\n    }\n\n    \n\n    instance(x: -43, y: 73) sum_fourth_power_eb5d0a root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -569, y: 3, name: \"n\") property(Number) n_8d6a43\n\n        out(x: 1095, y: -4, name: \"output\") property(Number) output_0e2d7f\n\n        instance(x: 83, y: 1, name: \"even list\") filter_d4b3c5 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 93, y: 8) sum_fourth_power_9a2c23 root.main.sum_fourth_power {}\n        instance(x: -31, y: 6, name: \"odd list\") filter_1f0e3d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -47, y: -5, name: \"transform numbers to fourth power\") map_ba8c2f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 95, y: 7) pow_9e1d35 root.Std_k98ojb.Math.Pow {}\n        instance(x: 99, y: -3) add_a0f4e5 root.Std_k98ojb.Math.Add {}\n        instance(x: 101, y: 6) div_b8a2c7 root.Std_k98ojb.Math.Div {}\n        list_08d5ca -> filter_d4b3c5.list\n        filter_1f0e3d.result -> sum_fourth_power_9a2c23.items\n        map_ba8c2f.output_list -> pow_9e1d35.items\n        pow_9e1d35.first -> add_a0f4e5.first\n        div_b8a2c7.second -> add_a0f4e5.second\n        sum_fourth_power_9a2c23.n_8d6a43 -> div_b8a2c7.input\n    }\n\n    \n\n    instance(x: -28, y: 1) sum_fourth_power_7b4f55 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_fourth_power {\n        in(x: -567, y: 6, name: \"n\") property(Number) n_1a3e4d\n\n        out(x: 1059, y: 27, name: \"output\") property(Number) output_d0f8db\n\n        instance(x: 80, y: 7, name: \"odd list\") filter_b2bdf5 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 340, y: -23, name: \"fourth power\") expression_6e4a9c root.Std_k98ojb.Math.Expression {\n            expression: \"n * (n+1) * (3*n+1) / 8\"\n        }\n        instance(x: 97, y: -28, name: \"sum of fourth powers\") Std.CallFunction {}\n        instance(x: -219, y: 5, name: \"inputs\") property(List) inputs_2d7b4c\n        data_instance(x: 0, y: 8) data_a2a3e9 = 1\n        instance(x: 74, y: -24) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        setter(x: 0, y: 0, name: \"setter_6e7b4e\") setter_6e7b4e = sum_of_fourth_powers\n        instance(x: 340, y: -23, name: \"sum of fourth powers\") Std.CallFunction {}\n        data_a2a3e9 -> mul_f892a4.first\n        1 -> Std.CallFunction.inputs[0]\n        mul_f892a4.result -> Std.CallFunction.outputs[0]\n        expression_6e4a9c.result -> mul_f892a4.second\n        n_1a3e4d -> expression_6e4a9c.gen_0\n        Std.CallFunction.outputs[0] -> sum_of_fourth_powers.new_value\n    }\n\n    \n\n    instance(x: -34, y: 127) sum_odd_fourth_power_f2f7eb root.main.sum_odd_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_power {\n        in(x: -513, y: 1, name: \"n\") property(Number) n_4d0a2f\n\n        out(x: 1097, y: -3, name: \"output\") property(Number) output_f7d6c9\n\n        instance(x: 80, y: -417) ifexpression_e8b5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        data_instance(x: 394, y: -396) data_4a2c7d  = [sum_odd_power, sum_odd_power]\n        instance(x: 46, y: -383) mul_d9e3f6 root.Std_k98ojb.Math.Mul {}\n        instance(x: 657, y: -326) pow_b5a1eb root.Std_k98ojb.Math.Pow {}\n        instance(x: 99, y: -249) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum_odd_power\n        instance(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum_odd_power\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum_odd_power\n        data_4a2c7d -> output_f7d6c9\n        n_4d0a2f -> mul_d9e3f6.first\n        pow_b5a1eb.result -> mul_d9e3f6.second\n        add_88bb8a.result -> sum_odd_power\n        4 -> mul_d9e3f6.gen_0\n        n_4d0a2f -> pow_b5a1eb.gen_0\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_odd_power_7b6c63 root.main.sum_odd_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_of_fourth_power {\n        in(x: -555, y: 3, name: \"n\") property(Number) n_1e6a8b\n\n        out(x: 1232, y: -342, name: \"output\") property(Number) output_e4d3d9\n\n        data_instance(x: -439, y: -305) data_bf7c0f  = [sum_of_fourth_power]\n        instance(x: 96, y: -321) sum_7e2b42 root.Std_k98ojb.Math.Sum {}\n        instance(x: 346, y: -294) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 97, y: -127) exp_c0c6d1 root.Std_k98ojb.Math.Exp {}\n        instance(x: 91, y: 26) pow_3e5f7 root.Std_k98ojb.Math.Pow {}\n        setter(x: 0, y: 0, name: \"setter_5a9e4f\") setter_5a9e4f = sum_of_fourth_power\n        instance(x: -341, y: -301) for_065883 root.Std_k98ojb.Std.For {}\n        getter(x: 704, y: 170, name: \"getter_84fbbe\") getter_84fbbe = sum_of_fourth_power.index\n        setter(x: 955, y: -158, name: \"setter_7e2b42\") setter_7e2b42 = index\n        instance(x: 551, y: -105) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        setter_5a9e4f.continue -> for_065883.reset\n        list_d0d7d8 -> for_065883.items\n        execute_b3b6eb -> setter_5a9e4f.execute\n        -1 -> setter_5a9e4f.new_value\n        for_065883.done -> continue_e2cdd5\n        getter_84fbbe.value -> output_e4d3d9\n        n_1e6a8b -> sum_7e2b42.input\n        sum_7e2b42.result -> mul_f892a4.first\n        3 -> pow_3e5f7.exponent\n        exp_c0c6d1.value -> pow_3e5f7.second\n        n_1e6a8b -> mul_f892a4.second\n    }\n\n    \n\n    instance(x: -67, y: -37) sum_of_fourth_power_9c5a85 root.main.sum_of_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -513, y: 2, name: \"n\") property(Number) n_4f8d3b\n\n        out(x: 1147, y: -346, name: \"output\") property(Number) output_9e5dd1\n\n        instance(x: 0, y: 0) for_c6aeb root.Std_k98ojb.Std.For {}\n        instance(x: 342, y: 56) pow_d4f2c3 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -215, y: 58) data_5e9d66  = [sum_of_fourth_power]\n        setter(x: -214, y: 0, name: \"setter_8a1cd7\") setter_8a1cd7 = sum_of_fourth_power\n        instance(x: 83, y: 62) mul_f2f2d3 root.Std_k98ojb.Math.Mul {}\n        instance(x: -218, y: 67) modulo_d5c6f9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 346, y: 73) add_7e4a8b root.Std_k98ojb.Math.Add {}\n        instance(x: 94, y: 78) div_3e8d0e root.Std_k98ojb.Math.Div {}\n        setter(x: -209, y: 0, name: \"setter_6c5f1d\") setter_6c5f1d = sum_of_fourth_power\n        instance(x: 83, y: 62) result_d7a4d2 root.Std_k98ojb.Std.Result {}\n        data_5e9d66 -> result_d7a4d2.value\n        pow_d4f2c3.result -> mul_f2f2d3.first\n        pow_d4f2c3.result -> modulo_d5c6f9.second\n        3 -> div_3e8d0e.second\n        n_4f8d3b -> div_3e8d0e.first\n        mul_f2f2d3.result -> add_7e4a8b.first\n        add_7e4a8b.result -> setter_6c5f1d.value\n        4 -> div_3e8d0e.second\n    }\n\n    \n\n    instance(x: -287, y: 59) sum_fourth_power_d5e2d3 root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_ai\n        out(x: -1032, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -85, y: -46) math_modulo_node root.Std_k98ojb.Math.Modulo {}\n        side_ai -> math_modulo_node.value\n        6 -> math_modulo_node.divisor\n        math_modulo_node.result -> output_ai\n    }\n\n    \n    instance(x: -264, y: -19, name: \"cube_surface_area_0\") cube_surface_area_f4b9e2 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: -216, y: 0, name: \"side\") property(Number) side_ai\n        out(x: 288, y: 0, name: \"output\") property(Number) output_2f7c6d\n\n        instance(x: 21, y: -1) square_node root.Std_k98ojb.Math.Pow {}\n        side_ai -> square_node.first\n        2 -> square_node.y\n        square_node.result -> output_2f7c6d\n    }\n\n    \n\n    instance(x: 47, y: 0) cube_surface_area_f5a8e4 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -213, y: 0, name: \"side_length\") property(Number) side_length_5a1d6e\n        out(x: 1388, y: 7, name: \"surface_area\") property(Number) surface_area_2c4bdf\n\n        instance(x: 20, y: -21) pow_58f9a0 root.Std_k98ojb.Math.Pow {}\n        side_length_5a1d6e -> pow_58f9a0.x\n        2 -> pow_58f9a0.y\n        pow_58f9a0.result -> surface_area_2c4bdf\n    }\n\n    \n\n    instance(x: -215, y: 7) surface_area_node root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -219, y: -193, name: \"side\") property(Number) side_6f9f4d\n        out(x: 760, y: 11, name: \"result\") property(Number) result_1b0c8e\n\n        instance(x: 21, y: 23) math_mul_node root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -85, y: -46, name: \"side\") = 6\n        side_6f9f4d -> math_mul_node.first\n        math_mul_node.result -> result_1b0c8e\n   }\n   \n\n    instance(x: 264, y: -464, name: \"surface_area\") surface_area_node root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: -222, y: 0, name: \"side_length\") property(Number) side_length_2a1f8e\n        out(x: 1146, y: 63, name: \"area\") property(Number) area_5d4b9c\n\n        instance(x: -83, y: 13) math_pow_node root.Std_k98ojb.Math.Pow {}\n        side_length_2a1f8e -> math_pow_node.x\n        6 -> math_pow_node.y\n        math_pow_node.result -> area_5d4b9c\n    }\n\n    \n\n    instance(x: -146, y: 28) cube_surface_area_f0d5eb root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: 0, y: 0, name: \"size\") property(Number) size_9fdd4e\n        out(x: -1086, y: 0, name: \"surface\") property(Number) surface_3c7b8d\n\n        instance(x: -105, y: 0) math_pow_node root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 10, y: 0) data_f1f5e9  = 6\n        math_pow_node.result -> surface_3c7b8d\n        size_9fdd4e -> math_pow_node.base\n        math_pow_node.exponent -> data_f1f5e9\n    }\n\n    \n\n    instance(x: -83, y: -46, name: \"cube_surface_area\") cube_surface_area_6a0b19 root.main(cube_surface_area {})\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_a8f1e5\n        out(x: 0, y: 0, name: \"surface_area\") property(Number) surface_area_2b9c42\n\n        instance(x: -43, y: 155) math_pow_node root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -23, y: -21) data_e3a7e5  = side_a8f1e5\n        math_pow_node.result -> surface_area_2b9c42\n        data_e3a7e5 -> math_pow_node.gen_0\n        math_pow_node.result -> surface_area_2b9c42\n        6 -> math_pow_node.y\n    }\n\n    \n\n    instance(x: -83, y: 21) surface_area_4f8d74 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: 0, y: 0, name: \"size\") property(Number) size_ai\n        out(x: 1089, y: -59, name: \"surface\") property(Number) surface_ai\n\n        instance(x: 15, y: -22) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 0, y: -13) data_2c1d6f  = 6\n        instance(x: 24, y: -55) pow_e9e7f8 root.Std_k98ojb.Math.Pow {}\n        size_ai -> mul_f892a4.first\n        3 -> mul_f892a4.second\n        pow_e9e7f8.result -> mul_f892a4.second\n        data_2c1d6f -> pow_e9e7f8.gen_0\n        mul_f892a4.result -> surface_ai\n    }\n\n    \n\n    instance(x: 15, y: -22) cube_surface_area_node root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_ai\n        out(x: 162, y: -23, name: \"result\") property(Number) result_ai\n\n        instance(x: 12, y: 13) math_mul_node root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 16, y: -17) math_pow_node root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 6, y: 15) math_add_node root.Std_k98ojb.Math.Add {}\n        math_mul_node.result -> math_add_node.first\n        side_ai -> math_add_node.second\n        6 -> math_pow_node.y\n        math_pow_node.result -> math_add_node.third\n        3 -> math_pow_node.x\n        math_add_node.result -> result_ai\n    }\n\n    \n\n    instance(x: -43, y: -27) surface_area_9c4d5a root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: -222, y: 11, name: \"side\") property(Number) side_ai\n        out(x: 1326, y: 0, name: \"surface_area\") property(Number) surface_area_ai\n\n        instance(x: -83, y: 12) math_pow_node root.Std_k98ojb.Math.Pow {}\n        instance(x: 23, y: 15) mul_5e8c9a root.Std_k98ojb.Math.Mul {}\n        instance(x: 25, y: 0) two_3f7d1d root.Std_k98ojb.Math.NumberFromString {\n            string: \"2\"\n        }\n        instance(x: 22, y: -16) math_add_node root.Std_k98ojb.Math.Add {}\n        instance(x: 29, y: 5) three_4c6a0a root.Std_k98ojb.Math.NumberFromString {\n            string: \"3\"\n        }\n        instance(x: 26, y: 1) mul_5e8c9a.first\n        two_3f7d1d -> math_add_node.first\n        three_4c6a0a -> math_add_node.second\n        math_add_node.result -> math_pow_node.first\n        side_ai -> math_pow_node.second\n        math_pow_node.result -> mul_5e8c9a.first\n        mul_5e8c9a.result -> surface_area_ai\n    }\n\n    \n\n    instance(x: -83, y: 12) cube_surface_area_2d7f4b root.main.cube_surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -246, y: 23, name: \"list\") property(List) list_6b8d1a\n\n        out(x: 1040, y: 14, name: \"output\") property(Number) output_d3c4e9\n\n        instance(x: -105, y: 44, name: \"smallest\") find_smallest_7e2f71 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 95, y: 46, name: \"largest\") find_largest_d5d4a0 root.Std_k98ojb.Iteration.Find {}\n        list_6b8d1a -> find_smallest_7e2f71.items\n        func() {\n            in(x: -242, y: 23, name: \"current\") property(Number) current_b9c2e5\n\n            out(x: 1053, y: -10, name: \"bool\") property(Bool) bool_1d7df6\n\n            instance(x: 94, y: -24) modulo_8fbaea root.Std_k98ojb.Math.Modulo {}\n            instance(x: 311, y: 31) notequal_a4e0c9 root.Std_k98ojb.Logic.NotEqual {}\n            current_b9c2e5 -> modulo_8fbaea.value\n            2 -> modulo_8fbaea.divisor\n            modulo_8fbaea.result -> notequal_a4e0c9.left\n            1 -> notequal_a4e0c9.right\n            notequal_a4e0c9.result -> bool_1d7df6\n        } -> find_smallest_7e2f71.predicate\n        list_6b8d1a -> find_largest_d5d4a0.items\n        func() {\n            in(x: -242, y: 23, name: \"current\") property(Number) current_b9c2e5\n\n            out(x: 1053, y: -10, name: \") bool\") property(Bool) bool_1d7df6\n\n            instance(x: 95, y: 46, name: \"previous\") previous_ea0f8b root.Std_k98ojb.List.Previous {}\n            current_b9c2e5 -> previous_ea0f8b.value\n            previous_ea0f8b.itemAtIndex -> modulo_8fbaea.first\n            find_smallest_7e2f71.result -> bool_1d7df6\n        } -> find_largest_d5d4a1.predicate\n        list_6b8d1a -> getat_3c9d66\n        0 -> getat_3c9d66.index\n        getat_3c9d66.itemAtIndex -> previous_ea0f8b.new_value\n        find_smallest_7e2f71.execute -> previous_ea0f8b.execute\n        find_largest_d5d4a1.execute -> modulo_8fbaea.execute\n        modulo_8fbaea.continue -> find_largest_d5d4a1.reset\n    }\n\n    \n\n    instance(x: -96, y: 45) diff_largest_smallest_f2c9b0 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -246, y: 0, name: \"list\") property(List) list_9f5d3b\n\n        out(x: 101, y: -1, name: \"output\") property(Number) output_e4e6a8\n\n        instance(x: -108, y: 28, name: \"max\") root.Std_k98ojb.List.Max {}\n        instance(x: -109, y: 33, name: \"min\") root.Std_k98ojb.List.Min {}\n        list_9f5d3b -> max.items\n        list_9f5d3b -> min.items\n        max.result -> output_e4e6a8\n        min.result -> output_e4e6a8\n    }\n\n    \n\n    instance(x: 11, y: -117) diff_max_min_2c7bdf root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -292, y: 13, name: \"list\") property(List) list_8f5d2e\n\n        out(x: 1036, y: 23, name: \"output\") property(Number) output_b7a9c4\n\n        instance(x: 102, y: 29) max_d0df45 root.Std_k98ojb.List.Max {}\n        instance(x: -104, y: 44) min_2d6f3e root.Std_k98ojb.List.Min {}\n        list_8f5d2e -> max_d0df45.items\n        list_8f5d2e -> min_2d6f3e.items\n        max_d0df45.max -> output_b7a9c4\n        min_2d6f3e.min -> output_b7a9c4\n    }\n\n    \n\n    instance(x: 103, y: -63) diff_5bda1b root.main.diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -292, y: -193, name: \"list\") property(List) list_4f2e42\n\n        out(x: 1013, y: -191, name: \"output\") property(Number) output_c9c6a8\n\n        instance(x: -105, y: -110) max_6a0bdf root.Std_k98ojb.List.Max {}\n        instance(x: -119, y: -23) min_1e8d7f root.Std_k98ojb.List.Min {}\n        list_4f2e42 -> max_6a0bdf.items\n        list_4f2e42 -> min_1e8d7f.items\n        max_6a0bdf.result -> output_c9c6a8\n        min_1e8d7f.result -> output_c9c6a8\n    }\n\n    \n\n    instance(x: -47, y: 49) diff_max_min_4d5f2d root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -278, y: 23, name: \"list\") property(List) list_4e1d9a\n\n        out(x: 1116, y: -3, name: \"output\") property(Number) output_fdbf2b\n\n        instance(x: 104, y: 0) find_largest_smallest_f7c5eb root.Std_k98ojb.Iteration.Find {}\n        list_4e1d9a -> find_largest_smallest_f7c5eb.items\n        func() {\n            in(x: -193, y: -26, name: \"current\") property(Number) current_b6f5e8\n\n            out(x: 104, y: -27, name: \"bool\") property(Bool) bool_9a4d3b\n\n            instance(x: 90, y: 11) less_than_d7c0df root.Std_k98ojb.Math.LessThan {}\n            current_b6f5e8 -> less_than_d7c0df.left\n            1000000000 -> less_than_d7c0df.right\n            less_than_d7c0df.result -> bool_9a4d3b\n        } -> find_largest_smallest_f7c5eb.predicate\n        func() {\n            in(x: -193, y: -26, name: \"current\") property(Number) current_b6f5e8\n\n            out(x: 104, y: -27, name: \"bool\") property(Bool) bool_9a4d3b\n\n            instance(x: 90, y: 11) greater_than_d7c0df root.Std_k98ojb.Math.GreaterThan {}\n            current_b6f5e8 -> greater_than_d7c0df.left\n            1000000000 -> greater_than_d7c0df.right\n            greater_than_d7c0df.result -> bool_9a4d3b\n        } -> find_largest_smallest_f7c5eb.predicate\n        list_4e1d9a -> find_largest_smallest_f7c5eb.item\n        find_largest_smallest_f7c5eb.item -> diff_largest_smallest.output_fdbf2b\n    }\n\n    \n\n    instance(x: -47, y: 49) diff_largest_smallest_6df4d9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -295, y: 26, name: \"list\") property(List) list_3d0a95\n\n        out(x: 1215, y: -1, name: \"output\") property(Number) output_f2f5c9\n\n        instance(x: 109, y: -110) max_d8bdf7 root.Std_k98ojb.List.Max {}\n        instance(x: 106, y: 143) min_6a0d4e root.Std_k98ojb.List.Min {}\n        list_3d0a95 -> max_d8bdf7.items\n        list_3d0a95 -> min_6a0d4e.items\n        max_d8bdf7.result -> output_f2f5c9\n        min_6a0d4e.result -> output_f2f5c9\n    }\n\n    \n\n    instance(x: 10, y: -167) diff_largest_smallest_e1d4e4 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -294, y: 145, name: \"list\") property(List) list_2f6e4a\n\n        out(x: 1028, y: 11, name: \"result\") property(Number) result_b0c7d4\n\n        instance(x: 112, y: 84) max_1a5e42 root.Std_k98ojb.List.Max {}\n        instance(x: -105, y: -110) min_f9f2df root.Std_k98ojb.List.Min {}\n        list_2f6e4a -> max_1a5e42.items\n        list_2f6e4a -> min_f9f2df.items\n        max_1a5e42.result -> result_b0c7d4\n        min_f9f2df.result -> result_b0c7d4\n    }\n\n    \n\n    instance(x: -49, y: 45) diff_largest_smallest_e8b6eb root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -246, y: 21, name: \"list\") property(List) list_0f8a2d\n\n        out(x: -1023, y: 15, name: \"output\") property(Number) output_f5f6c9\n\n        instance(x: 0, y: 0) for_4b7f5 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -109, y: 46, name: \"index\") property(Number) index_2d3a1e\n            in(x: -114, y: 39, name: \"item\") property(Any) item_d9c5f6\n\n            out(x: -1057, y: -49, name: \"min\") property(Number) min_4b8b0f\n\n            instance(x: 96, y: 40) getat_4e3a1 root.Std_k98ojb.List.GetAt {}\n            list_0f8a2d -> getat_4e3a1.list\n            0 -> getat_4e3a1.index\n            item_d9c5f6 -> getat_4e3a1.itemAtIndex\n            getat_4e3a1.itemAtIndex -> min_4b8b0f\n        } -> for_4b7f5.onItem\n        func() {\n            in(x: -109, y: 46, name: \"index\") property(Number) index_2d3a1e\n\n            out(x: -1023, y: 15, name: \"max\") property(Number) max_f8c9b4\n\n            instance(x: 96, y: 40) getat_4e3a1 root.Std_k98ojb.List.GetAt {}\n            list_0f8a2d -> getat_4e3a1.list\n            0 -> getat_4e3a1.index\n            item_d9c5f6 -> getat_4e3a1.itemAtIndex\n            getat_4e3a1.itemAtIndex -> max_f8c9b4\n        } -> for_4b7f5.onIteration\n        min_4b8b0f -> diff_largest_smallest.output\n        max_f8c9b4 -> output_f5f6c9\n    }\n\n    \n\n    instance(x: -104, y: 53) diff_largest_smallest_2e4d1a root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -281, y: -194, name: \"list\") property(List) list_4d2a0b\n\n        out(x: 819, y: -109, name: \"result\") property(Number) result_b1c8f6\n\n        instance(x: -107, y: 23, name: \"smallest\") getmin_d7e5ec root.Std_k98ojb.List.Min {}\n        instance(x: -119, y: 144, name: \"largest\") getmax_9a0d4d root.Std_k98ojb.List.Max {}\n        list_4d2a0b -> getmin_d7e5ec.items\n        list_4d2a0b -> getmax_9a0d4d.items\n        getmin_d7e5ec.result -> smallest_a8f1c3\n        getmax_9a0d4d.result -> largest_b1c8ff\n        diff_largest_smallest_f7df6b {\n            in(x: 106, y: -109, name: \"execute\") trigger() execute_e1e4db\n\n            out(x: 913, y: -110, name: \"continue\") trigger() continue_d5d2f8\n\n            instance(x: -119, y: 144) sub_7c0a6f root.Std_k98ojb.Math.Sub {}\n            largest_b1c8ff -> sub_7c0a6f.first\n            smallest_a8f1c3 -> sub_7c0a6f.second\n            sub_7c0a6f.result -> result_b1c8f6\n        } -> diff_largest_smallest_f7df6b.execute\n    }\n\n    \n\n    instance(x: -47, y: 49) diff_largest_smallest_fdff4e root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: -0, name: \"list\") property(List) list_9d2f5a\n\n        out(x: 1234, y: 0, name: \"result\") property(Number) result_8e6c42\n\n        instance(x: 94, y: -109) max_f3cd7b root.Std_k98ojb.List.Max {}\n        instance(x: 133, y: -104) min_d2d9f1 root.Std_k98ojb.List.Min {}\n        list_9d2f5a -> max_f3cd7b.items\n        list_9d2f5a -> min_d2d9f1.items\n        max_f3cd7b.max -> result_8e6c42\n        min_d2d9f1.min -> result_8e6c42\n    }\n\n    \n\n    instance(x: 101, y: -67) diff_max_min_f5a0b4 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 155, name: \"n\") property(Number) n_4a2d1e\n\n        out(x: 538, y: 142, name: \"output\") property(Bool) output_3c6f0b\n\n        instance(x: 104, y: 144) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: -45, y: 151) equal_e7a1e8 root.Std_k98ojb.Logic.Equal {}\n        n_4a2d1e -> modulo_c76d2b.value\n        0 -> equal_e7a1e8.right\n        modulo_c76d2b.result -> equal_e7a1e8.left\n        equal_e7a1e8.result -> output_3c6f0b\n    }\n\n    \n\n    instance(x: -44, y: -13) is_even_fdb9df root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -283, y: 0, name: \"n\") property(Number) n_6f2d5a\n\n        out(x: 542, y: 19, name: \"output\") property(Bool) output_b9e3c8\n\n        instance(x: -109, y: -22) modulo_7b4e43 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 112, y: 18) equal_0a1d6f root.Std_k98ojb.Logic.Equal {}\n        n_6f2d5a -> modulo_7b4e43.value\n        2 -> modulo_7b4e43.divisor\n        modulo_7b4e43.result -> equal_0a1d6f.left\n        0 -> equal_0a1d6f.right\n        equal_0a1d6f.result -> output_b9e3c8\n    }\n\n    \n\n    instance(x: -53, y: 49) is_even_4bdf2a root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -283, y: -0, name: \"n\") property(Number) n_4a9d3f\n\n        out(x: 1236, y: -1, name: \"output\") property(Bool) output_e7c5b8\n\n        instance(x: 0, y: 0) modulo_4e2b35 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 115, y: -113) equal_c6a9f3 root.Std_k98ojb.Logic.Equal {}\n        n_4a9d3f -> modulo_4e2b35.value\n        0 -> modulo_4e2b35.divisor\n        modulo_4e2b35.result -> equal_c6a9f3.left\n        0 -> equal_c6a9f3.right\n        equal_c6a9f3.result -> output_e7c5b8\n    }\n\n    \n\n    instance(x: -45, y: 52) is_even_4e1d21 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -292, y: 0, name: \"n\") property(Number) n_4f2a95\n\n        out(x: 538, y: -1, name: \"output\") property(Bool) output_c5b6e9\n\n        instance(x: 0, y: 0) modulo_3d7a21 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 104, y: 2) equal_4f6df9 root.Std_k98ojb.Logic.Equal {}\n        n_4f2a95 -> modulo_3d7a21.value\n        0 -> modulo_3d7a21.divisor\n        modulo_3d7a21.result -> equal_4f6df9.left\n        2 -> equal_4f6df9.right\n        equal_4f6df9.result -> output_c5b6e9\n    }\n\n    \n\n    instance(x: -48, y: 53) is_even_0c7d3a root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -294, y: 155, name: \"n\") property(Number) n_8e1d9a\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_d3c0db\n\n        instance(x: 0, y: 0) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: -105, y: 112) notequal_cb50ae root.Std_k98ojb.Logic.NotEqual {}\n        n_8e1d9a -> modulo_c76d2b.value\n        0 -> notequal_cb50ae.right\n        notequal_cb50ae.result -> output_d3c0db\n        modulo_c76d2b.result -> output_d3c0db\n    }\n\n    \n\n    instance(x: -55, y: 529) is_even_2f1e4b root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -288, y: 0, name: \"number\") property(Number) number_6f1a42\n\n        out(x: 1233, y: 7, name: \"output\") property(Bool) output_e8d4d5\n\n        instance(x: -103, y: 11) modulo_c9bdf0 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 109, y: 15) equal_6c1a3f root.Std_k98ojb.Logic.Equal {}\n        number_6f1a42 -> modulo_c9bdf0.value\n        2 -> modulo_c9bdf0.divisor\n        modulo_c9bdf0.result -> equal_6c1a3f.left\n        0 -> equal_6c1a3f.right\n        equal_6c1a3f.result -> output_e8d4d5\n    }\n\n    \n\n    instance(x: -47, y: 59) is_even_d7c9e1 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -294, y: 34, name: \"input\") property(Number) input_2f6e4d\n\n        out(x: 1239, y: -35, name: \"output\") property(Bool) output_c1f0c5\n\n        instance(x: 0, y: 0) modulo_d8b3d0 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 104, y: -37) less_than_or_equal_7e4a9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        input_2f6e4d -> modulo_d8b3d0.value\n        0 -> modulo_d8b3d0.divisor\n        modulo_d8b3d0.result -> less_than_or_equal_7e4a9.left\n        even_number_1c5d66 -> less_than_or_equal_7e4a9.right\n        input_2f6e4d -> even_number_1c5d66\n        less_than_or_equal_7e4a9.result -> output_c1f0c5\n    }\n\n    \n\n    instance(x: -45, y: 11) is_even_f3d4b5 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 0, name: \"number\") property(Number) number_9d4e8f\n\n        out(x: 542, y: -1, name: \"output\") property(Bool) output_b7bfcf\n\n        instance(x: 0, y: 0) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 310, y: -1) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n        number_9d4e8f -> modulo_c76d2b.value\n        0 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> notequal_807ffd.left\n        2 -> modulo_c76d2b.result\n        notequal_807ffd.result -> output_b7bfcf\n    }\n\n    \n\n    instance(x: -54, y: 59) is_even_f0c8e1 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") IsEven {\n        in(x: -278, y: 145, name: \"n\") property(Number) n_5e3a1d\n\n        out(x: 509, y: 135, name: \"output\") property(Bool) output_e8c7f0\n\n        instance(x: 113, y: 140) modulo_1b6e9b root.Std_k98ojb.Math.Modulo {}\n        instance(x: -23, y: 136) equal_d5d2ac root.Std_k98ojb.Logic.Equal {}\n        n_5e3a1d -> modulo_1b6e9b.value\n        0 -> modulo_1b6e9b.divisor\n        modulo_1b6e9b.result -> equal_d5d2ac.left\n        even_number_7c4fdd -> equal_d5d2ac.right\n        equal_d5d2ac.result -> output_e8c7f0\n    }\n\n    \n\n    instance(x: -67, y: 59) IsEven_f3e9df root.main.IsEven {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -294, y: 142, name: \"input\") property(Number) input_4d9f6a\n\n        out(x: 546, y: 141, name: \"output\") property(Bool) output_0c7b1e\n\n        instance(x: 0, y: 0) modulo_3df7d2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -114, y: 139) equal_9a5f8f root.Std_k98ojb.Logic.Equal {}\n        input_4d9f6a -> modulo_3df7d2.value\n        0 -> modulo_3df7d2.divisor\n        modulo_3df7d2.result -> equal_9a5f8f.left\n        0 -> equal_9a5f8f.right\n        equal_9a5f8f.result -> output_0c7b1e\n    }\n\n    \n\n    instance(x: -69, y: 53) is_even_f6d3db root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") repeat_char {\n        in(x: -530, y: 2, name: \"string\") property(String) input_0\n        out(x: 344, y: 78, name: \"output\") property(String) output_3c4e7b\n\n        instance(x: 771, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -43, y: 30) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_7b3b7b.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_7b3b7b.input\n        contains_d42dce.result -> output_3c4e7b\n    }\n\n    \n\n    instance(x: -179, y: 30) repeat_char_f21f44 root.main.repeat_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"string\") property(String) input_0\n        out(x: 340, y: 77, name: \"output\") property(Any) output_a4b5f\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_0 -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_a4b5f\n        instance(x: -179, y: 30) map_b2c6a9 root.Std_k98ojb.Iteration.Map {\n            handler: function(a, b) {return a == b}\n        }\n        instance(x: -978, y: -566) filter_4d4556 root.Std_k98ojb.Query.Filter {}\n        tolower_7b3b7b.output -> map_b2c6a9.items\n        map_b2c6a9.output_list -> filter_4d4556.result\n        input_0 -> filter_4d4556.context\n        filter_4d4556.result -> output_a4b5f\n    }\n\n    \n\n    instance(x: -67, y: -37) first_repeated_char_f21f44 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") find_first_repeated {\n        in(x: -531, y: 2, name: \"string\") property(String) input_0\n        out(x: 340, y: 77, name: \"output\") property(String) output_195363\n\n        instance(x: -1049, y: -375) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: -1059, y: -696) map_f3b46d root.Std_k98ojb.Iteration.Map {\n            handler: (x) -> {\n                if (contains_d42dce.input == x) {\n                    return x\n                } else {\n                    return Null\n                }\n            }\n        }\n        instance(x: 188, y: 425) filter_4d4556 root.Std_k98ojb.Query.Filter {}\n        map_f3b46d.output_list -> filter_4d4556.list\n        input_0 -> filter_4d4556.context\n        contains_d42dce.input -> map_f3b46d.handler\n        filter_4d4556.result -> output_195363\n    }\n\n    \n\n    instance(x: -67, y: -37) find_first_repeated_f21f44 root.main.find_first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n        data_instance(x: -753, y: -588) data_cc1b1b  = [index, map]\n        instance(x: -432, y: -620) for_065883 root.Std_k98ojb.Iteration.For {}\n        instance(x: -978, y: -566) filter_4d4556 root.Std_k98ojb.Query.Filter {}\n        tolower_7b3b7b.output -> filter_4d4556.input\n        \"a\" -> filter_4d4556.contains\n        input_ai -> data_cc1b1b.map\n        for_065883.items -> data_cc1b1b.index\n        data_cc1b1b.result -> first_repeated.first\n        filter_4d4556.result -> first_repeated.second\n    }\n\n    \n\n    instance(x: -179, y: 30) first_repeated_f21f44 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"string\") property(String) input_ai\n        out(x: -189, y: -620, name: \"output\") property(Any) output_ebef81\n\n        instance(x: -1049, y: -375) map_8eae56 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 406, y: 546) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        data_instance(x: -753, y: -588) data_cc1b1b  = [count, char]\n        instance(x: -432, y: -620) set_at_84fbbe root.Std_k98ojb.List.SetAt {}\n        instance(x: 188, y: 425) get_7f13b7 root.Std_k98ojb.List.Get {}\n        list_instance(x: 340, y: 60) filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -978, y: -566) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        input_ai -> map_8eae56.items\n        0 -> sub_f133b2.second\n        filter_4d4556.result -> get_7f13b7.list\n        list_instance.get_7f13b7.itemAtIndex -> data_cc1b1b.char\n        data_cc1b1b.count -> set_at_84fbbe.index\n        map_8eae56.handler -> sub_f133b2.first\n        get_7f13b7.itemAtIndex -> data_cc1b1b.char\n        data_cc1b1b.count -> set_at_84fbbe.index\n    }\n\n    \n\n    instance(x: -97, y: -68) first_repeated_char_49c6ac root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") repeat_char {\n        in(x: -527, y: 3, name: \"input\") property(String) input_ai\n        out(x: 341, y: 80, name: \"output\") property(Any) output_ai\n\n        instance(x: -1049, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 772, y: 77) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        data_instance(x: -753, y: -588) data_cc1b1b = [input_ai]\n        instance(x: -432, y: -620) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 118, y: 540, name: \"map\") map_8a2d1b root.Std_k98ojb.Iteration.Map {}\n        instance(x: -1395, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 158, y: -105) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -39, y: 26, name: \"filter\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it != input\"\n        }\n        list_ai -> map_.items\n        map_.handler = function(it) { return sub_f133b2.first; }\n        map_.context = [input_ai]\n        map_.output_list -> filter_.output_list\n        filter_.result -> firstitem_870503.list\n        instance(x: -48, y: 517, name: \"count\") count_ba1c9f root.Std_k98ojb.Count {}\n        count_ba1c9f.count -> sub_f133b2.result\n        sub_f133b2.first -> map_.output_list\n        filter_.context -> count_ba1c9f.context\n        firstitem_870503.item -> map_.output_list[0]\n        filter_.result -> output_ai\n    }\n\n    \n\n    instance(x: -67, y: -37) repeat_char_f21f44 root.main.repeat_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"find the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"string\") property(String) input_str\n        out(x: 340, y: 77, name: \"output\") property(Any) output_str\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -179, y: 30) contains_59bc6e root.Std_k98ojb.Strings.Contains {}\n        instance(x: -130, y: 211) map_84fbbe root.Std_k98ojb.Iteration.Map {\n            handler: \"char => [count(char), char]\"\n        }\n        instance(x: 118, y: 540, name: \"map\") map_84fbbe.handler {}\n        instance(x: -432, y: 620) sort_7f13b7 root.Std_k98ojb.List.Sort {}\n        list_752c60 -> map_84fbbe.items\n        map_84fbbe.output_list -> sort_7f13b7.sorted_list\n        first_repeated_char.itemAtIndex -> output_str\n    }\n\n    \n\n    instance(x: -67, y: -37) first_repeated_char_f21f44 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"find the first repeated character in a given string.\") FirstRepeat {\n        in(x: -527, y: 2, name: \"string\") property(String) input_ai\n        out(x: 341, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -432, y: 620, name: \"map\") map_1f6c0e root.Std_k98ojb.Map.Empty {}\n        instance(x: -1049, y: 516) keys_5d4a2e root.Std_k98ojb.Map.Keys {}\n        instance(x: -978, y: 493) filter_7c284f root.Std_k98ojb.Query.Filter {\n            where: \"it in map.keys\"\n        }\n        characters_7b3b7b.characters -> map_1f6c0e.map\n        keys_5d4a2e.keys -> filter_7c284f.where\n        map_1f6c0e.entries -> filter_7c284f.output_list\n        instance(x: 196, y: 425) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -48, y: 517) lastitem_d831ca root.Std_k98ojb.List.LastItem {}\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        filter_7c284f.result -> firstitem_3078c6.list\n        firstitem_3078c6.item -> sub_f133b2.first\n        lastitem_d831ca.item -> sub_f133b2.second\n        length_4b8927.length -> sub_f133b2.result\n    }\n\n    \n\n    instance(x: -97, y: -68) FirstRepeat_c5fdd9 root.main.FirstRepeat {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"find the first repeated character in a given string.\") FirstRepeat {\n        in(x: -531, y: 2, name: \"string\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: -1049, y: -375) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -1059, y: -696) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_7b3b7b.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        input_ai -> tolower_7b3b7b.input\n        contains_d42dce.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) FirstRepeat_b4f2e5 root.main.FirstRepeat {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated {\n        in(x: -146, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -432, y: -620) filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it == 1\"\n        }\n        instance(x: 215, y: 256) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_7b3b7b.output -> contains_d42dce.input\n        input_ai -> tolower_7b3b7b.input\n        contains_d42dce.contains -> output_ai\n    }\n\n    \n\n    instance(x: -67, y: -37) first_repeated_f21f44 root.main.first_repeated {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -103, y: -76, name: \"list\") property(List) list_9f3d6a\n\n        out(x: -1091, y: -55, name: \"output\") property(Number) output_e7e8b4\n\n        instance(x: 0, y: 0, name: \"first_smallest\") property(Number) first_smallest\n        instance(x: 93, y: -103, name: \"second_smallest\") property(Number) second_smallest\n        data_instance(x: -1041, y: 69) data_c8d7c5 = [list_9f3d6a]\n        setter(x: 0, y: 0, name: \"setter_2cd6b4\") setter_2cd6b4 = first_smallest\n        instance(x: -1141, y: -75) for_f8e9c7 root.Std_k98ojb.Std.For {}\n        list_9f3d6a -> for_f8e9c7.items\n        func() {\n            in(x: -103, y: 69, name: \"current\") property(Number) current_a5f1eb\n\n            out(x: -1092, y: -54, name: \"\") property(Number) _e3b0d9\n\n            instance(x: 95, y: -101) equal_2a7c8 root.Std_k98ojb.Logic.Equal {}\n            instance(x: 92, y: -76) if_f5f6eb root.Std_k98ojb.Std.If {}\n            setter_2cd6b4.continue -> for_f8e9c7.reset\n            list_9f3d6a -> for_f8e9c7.items\n            execute_467172 -> setter_2cd6b4.execute\n            -1 -> setter_2cd6b4.new_value\n            first_smallest -> equal_2a7c8.left\n            current_a5f1eb -> equal_2a7c8.right\n            for_f8e9c7.done -> continue_075eef\n            _e3b0d9 -> second_smallest\n        } -> for_f8e9c7.handler\n        for_f8e9c7.output_list -> output_e7e8b4\n    }\n\n    \n\n    instance(x: -101, y: 45) second_smallest_5f7a6d root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -102, y: -83, name: \"list\") property(List) list_5d3f6e\n\n        out(x: 1001, y: -68, name: \"output\") property(Number) output_8b0c21\n\n        instance(x: 0, y: 0, name: \"second_smallest_node\") second_smallest_node root.Std_k98ojb.Std.IfExpression {}\n        list_5d3f6e -> second_smallest_node.items\n        func() {\n            in(x: -101, y: -36, name: \"a\") property(Number) a_e9c7c1\n\n            out(x: 1002, y: -68, name: \"\") property(Number) _8b0c21\n\n            instance(x: -96, y: -22) less_4f6e5d root.Std_k98ojb.Math.LessThan {}\n            second_smallest_node.then -> less_4f6e5d.execute\n            a_e9c7c1 -> less_4f6e5d.left\n            0 -> less_4f6e5d.right\n            less_4f6e5d.result -> _8b0c21\n        } -> second_smallest_node.expression\n        func() {\n            in(x: -101, y: -36, name: \"a\") property(Number) a_e9c7c1\n\n            out(x: 1002, y: -68, name: \"\") property(Number) _8b0c21\n\n            instance(x: -96, y: -22) less_4f6e5d root.Std_k98ojb.Math.LessThan {}\n            second_smallest_node.else -> less_4f6e5d.execute\n            a_e9c7c1 -> less_4f6e5d.left\n            0 -> less_4f6e5d.right\n            less_4f6e5d.result -> _8b0c21\n        } -> second_smallest_node.expression\n        list_5d3f6e -> less_4f6e5d.items\n        a_e9c7c1 -> less_4f6e5d.first\n        _8b0c21 -> output_8b0c21\n    }\n\n    \n\n    instance(x: -93, y: 44) second_smallest_5a7e2f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: 5, y: -246, name: \"list\") property(List) list_3e9d4f\n\n        out(x: -1041, y: 27, name: \"min\") property(Number) min_a7a6b0\n        out(x: -1078, y: 19, name: \"second_min\") property(Number) second_min_f1d5eb\n\n        instance(x: -1032, y: 28, name: \"first_min\") root.Std_k98ojb.List.Min {}\n        list_3e9d4f -> first_min.items\n        first_min.min -> min_a7a6b0\n        instance(x: -1078, y: 27, name: \"second_min_node\") root.Std_k98ojb.List.Select {}\n        instance(x: -1041, y: 19, name: \"select_node\") root.Std_k98ojb.Iteration.Map {}\n        list_3e9d4f -> select_node.items\n        select_node.handler -> second_min_node.handler\n        second_min_node.output_list -> second_min_f1d5eb\n    }\n\n    \n\n    instance(x: -67, y: 73) second_smallest_0b8a6c root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -106, y: -82, name: \"list\") property(List) list_6f9f0d\n\n        out(x: 436, y: -75, name: \"output\") property(Number) output_b7a5b3\n\n        instance(x: 91, y: -110) find_second_smallest_ae8c4d root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -105, y: -43, name: \"elem\") property(Number) elem_6f7df1\n\n            out(x: 0, y: -74, name: \"bool\") property(Bool) bool_5d4c3e\n\n            instance(x: 110, y: -98) modulo_45b9a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: -68) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            elem_6f7df1 -> modulo_45b9a.value\n            2 -> modulo_45b9a.divisor\n            modulo_45b9a.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_5d4c3e\n        } -> find_second_smallest_ae8c4d.predicate\n        func() {\n            in(x: -105, y: -43, name: \"elem\") property(Number) elem_6f7df1\n\n            out(x: 0, y: -74, name: \"bool\") property(Bool) bool_5d4c3e\n\n            instance(x: 110, y: -98) modulo_45b9a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: -68) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            elem_6f7df1 -> modulo_45b9a.value\n            2 -> modulo_45b9a.divisor\n            modulo_45b9a.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_5d4c3e\n        } -> find_second_smallest_ae8c4d.predicate\n        list_6f9f0d -> find_second_smallest_ae8c4d.items\n        find_second_smallest_ae8c4d.item -> output_b7a5b3\n    }\n\n    \n\n    instance(x: -92, y: 45) second_smallest_d2b1af root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -102, y: -73, name: \"list\") property(List) list_4c6a8d\n\n        out(x: -1082, y: -59, name: \"min1\") property(Number) min1_b5f9e3\n        out(x: 1057, y: -58, name: \"min2\") property(Number) min2_9b0fdd\n\n        instance(x: -1066, y: -44) firstitem_9c8d35 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1085, y: 19, name: \"seconditem\") root.Std_k98ojb.List.SecondItem {}\n        data_instance(x: -1002, y: -69) data_b0e3a7  = [first, second]\n        instance(x: -1019, y: -58) sort_5c7f8d root.Std_k98ojb.List.Sort {}\n        list_4c6a8d -> sort_5c7f8d.items\n        firstitem_9c8d35.item -> data_b0e3a7.first\n        seconditem.item -> data_b0e3a7.second\n        sort_5c7f8d.sorted_list -> min2_9b0fdd\n    }\n\n    \n\n    instance(x: -1041, y: 44) second_smallest_4b6d35 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: 5, y: 219, name: \"list\") property(List) list_09fcba\n\n        out(x: -1039, y: -306, name: \"output\") property(Number) output_c8f6c1\n\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517) seconditem_a5a9f1 root.Std_k98ojb.List.SecondItem {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_09fcba -> filter_f3b46d.list\n        filter_f3b46d.result -> firstitem_870503.list\n        filter_4d4556.result -> seconditem_a5a9f1.list\n        firstitem_870503.item -> sub_852f2e.first\n        seconditem_a5a9f1.item -> sub_852f2e.second\n        sub_852f2e.result -> output_c8f6c1\n    }\n\n    \n\n    instance(x: -67, y: -37) second_smallest_b4d7b3 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") sec_smallest {\n        in(x: -1141, y: -47, name: \"list\") property(List) list_8d6f2e\n\n        out(x: 1015, y: 35, name: \"min\") property(Number) min_9d4a7b\n        out(x: 1093, y: 19, name: \"output\") property(Number) output_b1d0df\n\n        instance(x: -1002, y: -69, name: \"first_smallest\") find_first_smallest_d5e6f8 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -1044, y: 13, name: \"second_smallest\") find_second_smallest_3d9a0f root.Std_k98ojb.Iteration.Find {}\n        list_8d6f2e -> first_smallest.items\n        func() {\n            in(x: -1152, y: 5, name: \"current\") property(Number) current_a7c6f1\n\n            out(x: 1093, y: 19, name: \"\") property(Number) _b9a2d5\n\n            instance(x: 1024, y: 17) equal_8e4d21 root.Std_k98ojb.Logic.Equal {}\n            current_a7c6f1 -> equal_8e4d21.left\n            find_first_smallest_d5e6f8.item -> equal_8e4d21.right\n            equal_8e4d21.result -> _b9a2d5\n        } -> first_smallest.predicate\n        func() {\n            in(x: -1152, y: 5, name: \"current\") property(Number) current_a7c6f1\n\n            out(x: 1093, y: 19, name: \"\") property(Number) _b9a2d5\n\n            instance(x: 1024, y: 17) equal_8e4d21 root.Std_k98ojb.Logic.Equal {}\n            current_a7c6f1 -> equal_8e4d21.left\n            find_second_smallest_3d9a0f.item -> equal_8e4d21.right\n            equal_8e4d21.result -> _b9a2d5\n        } -> second_smallest.predicate\n        list_8d6f2e -> second_smallest.items\n        first_smallest.item -> output_b1d0df\n        find_first_smallest_d5e6f8.item -> output_b1d0df\n        find_second_smallest_3d9a0f.item -> min_9d4a7b\n    }\n\n    \n\n    instance(x: -93, y: 63) sec_smallest_a2b4c6 root.main.sec_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") sec_smallest {\n        in(x: -1041, y: 3, name: \"list\") property(List) list_4f2f5a\n\n        out(x: 103, y: -109, name: \"smallest\") property(Number) smallest_8e7c9d\n        out(x: 1016, y: -111, name: \"output\") property(Number) output_d3bdf1\n\n        instance(x: -1022, y: -105) firstitem_f5f4a0 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1033, y: 11, name: \"seconditem_9e6d34\") seconditem_9e6d34 root.Std_k98ojb.List.SecondItem {}\n        data_instance(x: -1001, y: -108) data_e2a5c8  = [first, second]\n        instance(x: 1033, y: 10) sort_d0f5eb root.Std_k98ojb.List.Sort {}\n        list_4f2f5a -> sort_d0f5eb.items\n        sort_d0f5eb.sorted_list -> data_e2a5c8\n        firstitem_f5f4a0.item -> seconditem_9e6d34.first\n        seconditem_9e6d34.second -> data_e2a5c8.second\n        list_4f2f5a -> sort_d0f5eb.items\n        1 -> sort_d0f5eb.iterations\n        sort_d0f5eb.on_count -> sec_smallest.count\n        sec_smallest.iteration -> sec_smallest.interation\n    }\n\n    \n\n    instance(x: -1004, y: -113) sec_smallest_3a2e6b root.main.sec_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") sec_smallest_num {\n        in(x: -142, y: 2, name: \"list\") property(List) list_6a9f1d\n\n        out(x: -108, y: 83, name: \"output\") property(Number) output_0bdf4c\n\n        instance(x: 0, y: 0, name: \"first_smallest\") property(Number) first_smallest_e2e3b8\n        instance(x: 1, y: 0, name: \"second_smallest_num\") property(Number) second_smallest_num_7d5c6f\n\n        instance(x: -103, y: -106) find_first_occurrence_d7b4ec root.Std_k98ojb.Iteration.Find {}\n        list_6a9f1d -> find_first_occurrence_d7b4ec.items\n        func() {\n            in(x: -142, y: 2, name: \"x\") property(Number) x_8e5e42\n\n            out(x: -108, y: 83, name: \"\") property(Number) _1d3c9f\n\n            instance(x: -103, y: -106) modulo_4bf0a6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 94, y: -105) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            x_8e5e42 -> modulo_4bf0a6.value\n            2 -> modulo_4bf0a6.divisor\n            modulo_4bf0a6.result -> equal_a54bdc.left\n            -1 -> equal_a54bdc.right\n            equal_a54bdc.result -> _1d3c9f\n        } -> find_first_occurrence_d7b4ec.predicate\n        func() {\n            in(x: -142, y: 2, name: \"x\") property(Number) x_8e5e42\n\n            out(x: -108, y: 83, name: \"\") property(Number) _1d3c9f\n\n            instance(x: -103, y: -106) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            find_first_occurrence_d7b4ec.item -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> _1d3c9f\n        } -> find_first_occurrence_d7b4ec.predicate\n        list_6a9f1d -> second_smallest_num_7d5c6f.items\n        find_first_occurrence_d7b4ec.item -> second_smallest_num_7d5c6f.first\n        _1d3c9f -> second_smallest_num_7d5c6f.second\n    }\n\n    \n\n    instance(x: -69, y: 47) sec_smallest_num_8a2e43 root.main.sec_smallest_num {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -1064, y: -439, name: \"list\") property(List) list_6a3d0f\n\n        out(x: 1008, y: 23, name: \"output\") property(Number) output_b2c4e1\n\n        instance(x: 94, y: -107, name: \"first_smallest\") find_first {\n          in(x: -1145, y: -484, name: \"execute\") trigger() execute_8d7c0f\n          in(x: 1016, y: -109, name: \"item\") property(Number) item_a4a1b9\n\n          out(x: 1022, y: 19, name: \"continue\") trigger() continue_e3e5af\n          out(x: 1008, y: 23, name: \"output\") property(Number) output_b2c4e1\n        } -> find_first.predicate\n        list_6a3d0f -> find_first.items\n        find_first.item -> execute_8d7c0f.first\n        execute_8d7c0f.result -> second_smallest.output_b2c4e1\n      }\n\n    \n\n    instance(x: -63, y: 55) second_smallest_5bdf3a root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_full-context_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 49751,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -484, y: 18, name: \"list1\") property(List) list_0d8b5f\n        in(x: -489, y: 21, name: \"list2\") property(List) list_0e6c43\n\n        out(x: 1243, y: -19, name: \"output\") property(Bool) output_b4a9f7\n\n        instance(x: 93, y: -22) zip_7d1e5b root.Std_k98ojb.Iteration.Zip {}\n        list_0d8b5f -> zip_7d1e5b.left\n        list_0e6c43 -> zip_7d1e5b.right\n        instance(x: 94, y: -20) contains_f4a9bb root.Std_k98ojb.List.Contains {}\n        output_b4a9f7 -> contains_f4a9bb.item\n        list_0d8b5f -> contains_f4a9bb.list\n        list_0e6c43 -> contains_f4a9bb.list\n        zip_7d1e5b.zipped -> has_common.output_list\n    }\n\n    \n\n    instance(x: -48, y: 53) has_common_b2c8f0 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds out whether two lists share a common element.\") intersect_lists {\n        in(x: -484, y: 23, name: \"list1\") property(List) list_5d8a3b\n        in(x: -478, y: 33, name: \"list2\") property(List) list_9c5f43\n\n        out(x: 1030, y: -24, name: \"output\") property(Bool) output_f6e7c1\n\n        instance(x: 1014, y: 31) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list_5d8a3b -> intersection_c7c7e6.left\n        list_9c5f43 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> output_f6e7c1\n    }\n\n    \n\n    instance(x: -292, y: 64) intersect_lists_0b4d2a root.main.intersect_lists {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -527, y: 18, name: \"list1\") property(List) list_8b9d6e\n        in(x: -156, y: -121, name: \"list2\") property(List) list_c7c5f4\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_a3a1c0\n\n        instance(x: -303, y: -205) intersection_6e8df9 root.Std_k98ojb.Sets.Intersection {}\n        list_8b9d6e -> intersection_6e8df9.left\n        list_c7c5f4 -> intersection_6e8df9.right\n        intersection_6e8df9.intersection -> output_a3a1c0\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_eb2d21 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -469, y: 2, name: \"list1\") property(List) list_3a4d8e\n        in(x: -478, y: 18, name: \"list2\") property(List) list_d7b0c9\n\n        out(x: 1036, y: -50, name: \"output\") property(Bool) output_e1f5df\n\n        instance(x: 104, y: -49, name: \"intersection_9c8d35\") intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list_3a4d8e -> intersection_c7c7e6.left\n        list_d7b0c9 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> output_e1f5df\n    }\n\n    \n\n    instance(x: -34, y: 127) has_common_2d8d45 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists have any common elements.\") contains {\n        in(x: -471, y: 13, name: \"list1\") property(List) list_4f3a8d\n        in(x: -475, y: 28, name: \"list2\") property(List) list_a0e6c5\n\n        out(x: 1047, y: -29, name: \"output\") property(Bool) output_b1b9ec\n\n        instance(x: 93, y: -34) filter_3f8a42 root.Std_k98ojb.Query.Filter {}\n        list_a0e6c5 -> filter_3f8a42.items\n        func() {\n            in(x: -471, y: 13, name: \"current\") property(Number) current_e2d4eb\n\n            out(x: 1047, y: -29, name: \"\") property(Bool) bool_1c9e6b\n\n            instance(x: 93, y: -34) contains_8f0e5b root.Std_k98ojb.List.Contains {}\n            list_a0e6c5 -> contains_8f0e5b.list\n            current_e2d4eb -> contains_8f0e5b.item\n            contains_8f0e5b.result -> bool_1c9e6b\n        } -> filter_3f8a42.predicate\n    }\n\n    \n\n    instance(x: -292, y: 47) contains root.main.contains {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if two lists have at least one common element.\") has_common_element {\n        in(x: -499, y: 1, name: \"list1\") property(List) list_5f0e6b\n        in(x: -493, y: 19, name: \"list2\") property(List) list_3d8e7c\n\n        out(x: 1029, y: -47, name: \"output\") property(Bool) output_4a1cd5\n\n        instance(x: 92, y: -49) intersection_0bdf6f root.Std_k98ojb.Sets.Intersection {}\n        list_3d8e7c -> intersection_0bdf6f.left\n        list_5f0e6b -> intersection_0bdf6f.right\n        intersection_0bdf6f.intersect -> output_4a1cd5\n    }\n\n    \n\n    instance(x: -43, y: 73) has_common_element_b7c4d root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -509, y: 2, name: \"list1\") property(List) list_5b6d8f\n        in(x: -515, y: -23, name: \"list2\") property(List) list_c7e0a3\n\n        out(x: 1044, y: 21, name: \"output\") property(Bool) output_b1c7df\n\n        instance(x: 74, y: 19) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list_5b6d8f -> zip_201051.left\n        list_c7e0a3 -> zip_201051.right\n        func() {\n            in(x: -509, y: 2, name: \"current\") property(Number) current_f9c8e4\n\n            out(x: 1044, y: 21, name: \"bool\") property(Bool) bool_e7a0d6\n\n            instance(x: 74, y: 19) contains_32727d root.Std_k98ojb.List.Contains {}\n            list_c7e0a3 -> contains_32727d.list\n            current_f9c8e4 -> contains_32727d.item\n            contains_32727d.is_contained -> bool_e7a0d6\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_b1c7df\n    }\n\n    \n\n    instance(x: -34, y: 73) has_common_d4f8d5 root.main.has_common {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -471, y: 2, name: \"list1\") property(List) list_4f0d6b\n        in(x: -478, y: -22, name: \"list2\") property(List) list_c8a4c9\n\n        out(x: 1213, y: -29, name: \"output\") property(Bool) output_5df1eb\n\n        instance(x: -92, y: -25) filter_7b3b7b root.Std_k98ojb.Query.Filter {}\n        list_4f0d6b -> filter_7b3b7b.items\n        list_c8a4c9 -> filter_7b3b7b.items\n        func() {\n            in(x: -231, y: 16, name: \"current\") property(Number) current_a1e5a2\n\n            out(x: 1026, y: -30, name: \"\") property(Bool) bool_8d9c21\n\n            instance(x: 93, y: 19) contains_32727d root.Std_k98ojb.List.Contains {}\n            list_c8a4c9 -> contains_32727d.list\n            current_a1e5a2 -> contains_32727d.item\n            contains_32727d.result -> bool_8d9c21\n        } -> filter_7b3b7b.handler\n        func() {\n            in(x: -231, y: 16, name: \"current\") property(Number) current_a1e5a2\n\n            out(x: 1026, y: -30, name: \"\") property(Bool) bool_8d9c21\n\n            instance(x: 93, y: 19) contains_32727d root.Std_k98ojb.List.Contains {}\n            list_c8a4c9 -> contains_32727d.list\n            current_a1e5a2 -> contains_32727d.item\n            contains_32727d.result -> bool_8d9c21\n        } -> filter_7b3b7b.handler\n        filter_7b3b7b.output_list -> output_5df1eb\n    }\n\n    \n\n    instance(x: -68, y: 114) has_common_element_d6c4f1 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if two lists have at least one common element.\") has_common {\n        in(x: -527, y: 18, name: \"list1\") property(List) list_1f8d5a\n        in(x: -495, y: -121, name: \"list2\") property(List) list_0c7e3d\n\n        out(x: 1029, y: -54, name: \"output\") property(Bool) output_6b4d14\n\n        instance(x: 234, y: -49) find_e1f0a8 root.Std_k98ojb.Iteration.Find {}\n        list_1f8d5a -> find_e1f0a8.items\n        list_0c7e3d -> find_e1f0a8.items\n        find_e1f0a8.item -> output_6b4d14\n    }\n\n    \n\n    instance(x: -138, y: 43) has_common_b9df5e root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -527, y: 18, name: \"list1\") property(List) list_9d8e5f\n        in(x: -521, y: -121, name: \"list2\") property(List) list_d7a3b4\n\n        out(x: 1020, y: -48, name: \"output\") property(Bool) output_6c6a45\n\n        instance(x: 92, y: -54, name: \"intersection\") filter_f1f5d2 root.Std_k98ojb.Query.Filter {}\n        list_9d8e5f -> filter_f1f5d2.list\n        list_d7a3b4 -> filter_f1f5d2.list\n        filter_f1f5d2.result -> output_6c6a45\n    }\n\n    \n\n    instance(x: -69, y: 43) has_common_b0e8c9 root.main.has_common {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") conseq_nums {\n        in(x: -294, y: 155, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        list_0b075e -> length_6e87f2.list\n        length_6e87f2.length -> conseq_nums.output_b1d7f8\n        instance(x: -121, y: 74) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 201, y: 62) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 201, y: 63) less-thanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        func() {\n            in(x: -121, y: -17, name: \"current\") property(Number) current_0e3d6d\n\n            out(x: 698, y: -30, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: 35) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            current_0e3d6d -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> less-thanorequal_f11fda.left\n            1 -> less-thanorequal_f11fda.right\n            less-thanorequal_f11fda.result -> _7dd980\n        } -> for_d26972.handler\n        for_d26972.iteration -> greaterthan_cb50ae.first\n        list_0b075e -> for_d26972.items\n        func() {\n            in(x: -121, y: -17, name: \"current\") property(Number) current_0e3d6d\n\n            out(x: 698, y: -30, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: 35) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            current_0e3d6d -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> less-thanorequal_f11fda.left\n            1 -> less-thanorequal_f11fda.right\n            less-thanorequal_f11fda.result -> _7dd980\n        } -> for_d26972.handler\n        conseq_nums.output_b1d7f8 -> greaterthan_cb50ae.result\n    }\n\n    \n\n    instance(x: -67, y: 529) conseq_nums_0b3c9a root.main.conseq_nums {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -269, y: 2, name: \"list\") property(List) list_8d0a5f\n\n        out(x: 1043, y: -10, name: \"output\") property(Bool) output_b7c6e1\n\n        instance(x: 83, y: -16) for_d26b2 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -109, y: 38, name: \"i\") property(Number) i_9a5f4d\n\n            out(x: 1068, y: 45, name: \"\") property(Number) diff_c0e3c7\n\n            instance(x: -29, y: 44) sub_d2d6b1 root.Std_k98ojb.Math.Sub {}\n            list_8d0a5f -> for_d26b2.items\n            i_9a5f4d -> sub_d2d6b1.first\n            i_9a5f4d -> sub_d2d6b1.second\n            sub_d2d6b1.result -> diff_c0e3c7\n        } -> for_d26b2.handler\n        for_d26b2.item -> is_consecutive.gen_2\n        for_d26b2.index -> is_consecutive.gen_0\n        for_d26b2.onItem -> is_consecutive.execute\n        for_d26b2.done -> output_b7c6e1\n    }\n\n    \n\n    instance(x: -93, y: 59) is_consecutive_8f9d14 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -193, y: 23, name: \"list\") property(List) list_0f3c4a\n\n        out(x: 1045, y: -14, name: \"output\") property(Bool) output_f7d2b6\n\n        instance(x: 94, y: 25) for_c1e9d8 root.Std_k98ojb.Std.For {}\n        list_0f3c4a -> for_c1e9d8.items\n        func() {\n            in(x: -123, y: 47, name: \"i\") property(Number) i_e7dd34\n\n            out(x: 1033, y: 56, name: \"\") property(Number) diff_2f6b45\n\n            instance(x: 92, y: 50) sub_0d8e9c root.Std_k98ojb.Math.Sub {}\n            ifexpression_b4a1e5 root.Std_k98ojb.Std.IfExpression {\n                expression: \"i + 1 <= length - i\"\n            }\n            for_c1e9d8.index -> sub_0d8e9c.first\n            1 -> sub_0d8e9c.second\n            sub_0d8e9c.result -> diff_2f6b45\n        } -> for_c1e9d8.handler\n        is_consecutive.output_list -> output_f7d2b6\n    }\n\n    \n\n    instance(x: -69, y: 43) is_consecutive_b4f3eb root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -292, y: 4, name: \"list\") property(List) list_5f0a1d\n\n        out(x: 1248, y: 13, name: \"output\") property(Bool) output_eb6e7c\n\n        instance(x: 95, y: 10) length_3e9a21 root.Std_k98ojb.List.Length {}\n        instance(x: -43, y: -23) filter_d2d4f0 root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: -28, y: 38) if_e19a62 root.Std_k98ojb.Std.If {}\n        list_5f0a1d -> filter_d2d4f0.list\n        filter_d2d4f0.result -> if_e19a62.predicate\n        length_3e9a21.length -> if_e19a62.value\n        0 -> if_e19a62.then\n        1 -> if_e19a62.else\n        if_e19a62.result -> output_eb6e7c\n    }\n\n    \n\n    instance(x: -67, y: 53) is_consecutive_5fdd34 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -269, y: -16, name: \"list\") property(List) list_0e4d1f\n\n        out(x: 1215, y: -17, name: \"output\") property(Bool) output_b8a7b6\n\n        instance(x: 92, y: -26) length_9c7c2e root.Std_k98ojb.List.Length {}\n        instance(x: 202, y: 63) less_thanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 123, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 189, y: 47) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"i + 1 == next\"\n        }\n        instance(x: 104, y: -22) sub_d3e2d7 root.Std_k98ojb.Math.Sub {}\n        instance(x: 215, y: 55) greaterthan_9d8a6f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 105, y: 47) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: -29, y: -16) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 115, y: 63) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 142, y: -20) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"i % 2 == 0\"\n        }\n        instance(x: 144, y: -23) if_07b8c7.execute\n        for_d26972.item -> less_thanorequal_f11fda.left\n        sub_d3e2d7.first -> less_thanorequal_f11fda.right\n        less_thanorequal_f11fda.result -> greaterthan_9d8a6f\n        for_d26972.index -> ifexpression_875761.gen_0\n        greaterthan_9d8a6f.result -> is_consecutive.left\n        1 -> ifexpression_875761.right\n        ifexpression_875761.value -> and_80a119.left\n        for_d26972.onItem -> and_80a119.execute\n        is_consecutive.then -> if_07b8c7.execute\n        less_thanorequal_f11fda.else -> continue_b2d1e5\n    }\n\n    \n\n    instance(x: -91, y: 45) is_consecutive_d6e0d9 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -269, y: 0, name: \"list\") property(List) list_e9f5d4\n\n        out(x: 1092, y: 1, name: \"output\") property(Bool) output_8e3b7a\n\n        instance(x: -69, y: 10) for_f6c0d8 root.Std_k98ojb.Std.For {}\n        list_e9f5d4 -> for_f6c0d8.items\n        func() {\n            in(x: -109, y: 2, name: \"current\") property(Number) current_1e3a43\n\n            out(x: 1057, y: 12, name: \"\") property(Number) _b3f9db\n\n            instance(x: -69, y: 11) sub_8d0c4b root.Std_k98ojb.Math.Sub {}\n            current_1e3a43 -> sub_8d0c4b.first\n            2 -> sub_8d0c4b.second\n            sub_8d0c4b.result -> _b3f9db\n        } -> for_f6c0d8.handler\n        for_f6c0d8.onItem -> if_5e7a95 root.Std_k98ojb.Std.If {}\n        list_e9f5d4 -> if_5e7a95.items\n        func() {\n            in(x: -109, y: 2, name: \"current\") property(Number) current_1e3a43\n\n            out(x: 1057, y: 12, name: \"\") property(Number) _b3f9db\n\n            instance(x: 69, y: 11) equal_8c6d4b root.Std_k98ojb.Logic.Equal {}\n            if_5e7a95.item -> equal_8c6d4b.left\n            current_1e3a43 -> equal_8c6d4b.right\n            equal_8c6d4b.result -> _b3f9db\n        } -> if_5e7a95.execute\n        for_f6c0d8.done -> output_8e3b7a\n    }\n\n    \n\n    instance(x: -92, y: 16) is_consecutive_c1c0b2 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") conseq_nums {\n        in(x: -275, y: 1, name: \"list\") property(List) list_4e5a3f\n\n        out(x: 1022, y: 7, name: \"output\") property(Bool) output_f0bdf3\n\n        instance(x: 104, y: 10) for_c8d6c1 root.Std_k98ojb.Std.For {}\n        list_4e5a3f -> for_c8d6c1.items\n        func() {\n            in(x: -114, y: 44, name: \"prev_num\") property(Number) prev_num_9cd2db\n\n            out(x: 515, y: 49, name: \"\") property(Number) next_num_a4a7e8\n\n            instance(x: 92, y: 42) sub_5f6c0d root.Std_k98ojb.Math.Sub {}\n            prev_num_9cd2db -> sub_5f6c0d.first\n            list_4e5a3f[1] -> sub_5f6c0d.second\n            sub_5f6c0d.result -> next_num_a4a7e8\n        } -> for_c8d6c1.handler\n        func() {\n            in(x: 106, y: 44, name: \"is_consecutive\") property(Bool) is_consecutive_9b3f2b\n\n            instance(x: -92, y: 50) less_than_or_equal_1a4e8d root.Std_k98ojb.Math.LessThanOrEqual {}\n            prev_num_9cd2db -> less_than_or_equal_1a4e8d.left\n            next_num_a4a7e8 -> less_than_or_equal_1a4e8d.right\n            less_than_or_equal_1a4e8d.result -> is_consecutive_9b3f2b\n        } -> for_c8d6c1.onItem\n        if_07b8c7.value -> output_f0bdf3\n        for_c8d6c1.done -> output_f0bdf3\n    }\n\n    \n\n    instance(x: -92, y: 10) conseq_nums_d4f2e5 root.main.conseq_nums {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -246, y: 0, name: \"list\") property(List) list_4d5a6e\n\n        out(x: 1021, y: -13, name: \"output\") property(Bool) output_a7c8b5\n\n        instance(x: 91, y: -18) filter_9f6c43 root.Std_k98ojb.Query.Filter {}\n        list_4d5a6e -> filter_9f6c43.list\n        func() {\n            in(x: -121, y: 34, name: \"current\") property(Number) current_7f2f8f\n\n            out(x: 516, y: 45, name: \"\") property(Number) next_number_3d7e4b\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_7f2f8f -> modulo_1088d5.value\n            1 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> lessthanorequal_f11fda.left\n            0 -> lessthanorequal_f11fda.right\n            lessthanorequal_f11fda.result -> next_number_3d7e4b\n        } -> filter_9f6c43.handler\n        func() {\n            in(x: -76, y: 46, name: \"current\") property(Number) current_7f2f8f\n\n            out(x: 382, y: 19, name: \"\") property(Number) next_number_3d7e4b\n\n            instance(x: 106, y: 17) add_b4554f root.Std_k98ojb.Math.Add {}\n            current_7f2f8f -> add_b4554f.first\n            current_7f2f8f -> add_b4554f.second\n            add_b4554f.result -> next_number_3d7e4b\n        } -> filter_9f6c43.handler\n        list_4d5a6e -> filter_9f6c43.output_list\n        if(output_a7c8b5.value == true) {\n            output_a7c8b5.continue -> continue_a7e0c2\n        } else {\n            output_a7c8b5.else -> done_c3a1d4\n        }\n        filter_9f6c43.output_list -> is_consecutive.items\n        for(is_consecutive.item) -> next_number_3d7e4b\n        if(next_number_3d7e4b == current_7f2f8f + 1 && next_number_3d7e4b > current_7f2f8f - 1) {\n            current_7f2f8f -> current_7f2f8f\n        } else {\n            output_a7c8b5.continue -> done_c3a1d4\n        }\n    }\n\n    \n\n    instance(x: -67, y: 45) is_consecutive_9f0e42 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") conseq_nums {\n        in(x: -278, y: 23, name: \"list\") property(List) list_3a9f8d\n\n        out(x: 1035, y: -13, name: \"output\") property(Bool) output_4b1c6d\n\n        instance(x: 93, y: -16) map_f2330c root.Std_k98ojb.Iteration.Map {}\n        list_3a9f8d -> map_f2330c.items\n        func() {\n            in(x: -114, y: 34, name: \"x\") property(Number) x_5eb1e4\n\n            out(x: 517, y: 42, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) sub_852f2 root.Std_k98ojb.Math.Sub {}\n            x_5eb1e4 -> sub_852f2.first\n            x_5eb1e4 -> sub_852f2.second\n            sub_852f2.result -> _7dd980\n        } -> map_f2330c.handler\n        map_f2330c.output_list -> output_4b1c6d\n    }\n\n    \n\n    instance(x: -83, y: 46) conseq_nums_5e3df3 root.main.conseq_nums {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -294, y: 145, name: \"list\") property(List) list_3f9a8d\n\n        out(x: 1024, y: 55, name: \"output\") property(Bool) output_eb2e7c\n\n        instance(x: 0, y: 54) for_f6e5e3 root.Std_k98ojb.Std.For {}\n        list_3f9a8d -> for_f6e5e3.items\n        func() {\n            in(x: -115, y: 24, name: \"current\") property(Number) current_7d4c1b\n\n            out(x: 105, y: 25, name: \"\") property(Number) _9f0a2b\n\n            instance(x: 95, y: 19) sub_8e3f6d root.Std_k98ojb.Math.Sub {}\n            current_7d4c1b -> sub_8e3f6d.first\n            current_7d4c1b -> sub_8e3f6d.second\n            sub_8e3f6d.result -> _9f0a2b\n        } -> for_f6e5e3.handler\n        func() {\n            in(x: -115, y: 24, name: \"current\") property(Number) current_7d4c1b\n\n            out(x: 105, y: 25, name: \"\") property(Number) _9f0a2b\n\n            instance(x: 95, y: 19) greaterthan_e6e8eb root.Std_k98ojb.Math.GreaterThan {}\n            current_7d4c1b -> greaterthan_e6e8eb.left\n            list_3f9a8d[for_f6e5e3.index] -> greaterthan_e6e8eb.right\n            greaterthan_e6e8eb.result -> _9f0a2b\n        } -> for_f6e5e3.predicate\n        for_f6e5e3.onItem -> _9f0a2b.new_value\n        for_f6e5e3.done -> output_eb2e7c\n        for_f6e5e3.index -> sub_8e3f6d.first\n        1 -> sub_8e3f6d.second\n        sub_8e3f6d.result -> _9f0a2b\n    }\n\n    \n\n    instance(x: -93, y: 43) is_consecutive_fdb5c4 root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -155, y: 34, name: \"main_list\") property(List) main_list_5e3f1\n        in(x: -191, y: -215, name: \"sublist\") property(List) sublist_a0c4d8\n\n        out(x: 444, y: -206, name: \"output\") property(Bool) output_9b1a6a\n\n        instance(x: 133, y: -220) zip_d3f5e6 root.Std_k98ojb.Iteration.Zip {}\n        main_list_5e3f1 -> zip_d3f5e6.left\n        sublist_a0c4d8 -> zip_d3f5e6.right\n        func() {\n            in(x: -220, y: 15, name: \"i\") property(Number) i_9b2d35\n\n            out(x: 442, y: -215, name: \"equal\") property(Bool) equal_c7c4a1\n\n            instance(x: -193, y: -213) length_d3f5e6 root.Std_k98ojb.List.Length {}\n            sublist_a0c4d8 -> length_d3f5e6.list\n            0 -> length_d3f5e6.start\n            length_d3f5e6.length -> equal_c7c4a1\n            main_list_5e3f1 -> zip_d3f5e6.items\n            i_9b2d35 -> zip_d3f5e6.index\n            sublist_a0c4d8 -> zip_d3f5e6.right\n        } -> zip_d3f5e6.handler\n        equal_c7c4a1 -> output_9b1a6a\n    }\n\n    \n\n    instance(x: 102, y: -67) is_sublist_b2e0d2 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -194, y: 164, name: \"main_list\") property(List) main_list_9a8d3f\n        in(x: -219, y: -23, name: \"sublist\") property(List) sublist_a2e0f4\n\n        out(x: 442, y: -110, name: \"output\") property(Bool) output_dff1b6\n\n        instance(x: -82, y: 165) filter_3d8c43 root.Std_k98ojb.Query.Filter {}\n        sublist_a2e0f4 -> filter_3d8c43.list\n        main_list_9a8d3f -> filter_3d8c43.items\n        func() {\n            in(x: -219, y: 163, name: \"index\") property(Number) index_6b1e23\n\n            out(x: 442, y: -110, name: \"result\") property(Bool) result_dff1b6\n\n            instance(x: -82, y: 165) contains_2d7f8a root.Std_k98ojb.List.Contains {}\n            sublist_a2e0f4 -> contains_2d7f8a.item\n            main_list_9a8d3f -> contains_2d7f8a.list\n            contains_2d7f8a.is_contained -> result_dff1b6\n        } -> filter_3d8c43.handler\n        output_dff1b6 -> is_sublist.output\n    }\n\n    \n\n    instance(x: 92, y: -110) is_sublist_b9e5f4 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -194, y: 145, name: \"main_list\") property(List) main_list_6e2f1b\n        in(x: -215, y: 162, name: \"sublist\") property(List) sublist_8a4c0d\n\n        out(x: 1035, y: 63, name: \"output\") property(Bool) output_b9f3d9\n\n        instance(x: -74, y: 161) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        greaterthan_cb50ae.result -> output_b9f3d9\n        length_4b8927.length -> greaterthan_cb50ae.right\n        sublist_8a4c0d -> greaterthan_cb50ae.left\n        main_list_6e2f1b -> greaterthan_cb50ae.items\n    }\n\n    \n\n    instance(x: -67, y: 11) is_sublist_5eb7b9 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -176, y: 123, name: \"main_list\") property(List) main_list_3f9d1b\n        in(x: -196, y: -23, name: \"sub_list\") property(List) sub_list_b8c5a6\n\n        out(x: 546, y: 55, name: \"output\") property(Bool) output_a0eb7e\n\n        instance(x: -129, y: 123) for_1b3f9d root.Std_k98ojb.Std.For {}\n        main_list_3f9d1b -> for_1b3f9d.items\n        sub_list_b8c5a6 -> for_1b3f9d.items\n        func() {\n            in(x: -176, y: 123, name: \"index\") property(Number) index_d2a7e4\n\n            out(x: 546, y: 55, name: \"is_sub\") property(Bool) is_sub_8f0c1b\n\n            instance(x: 94, y: -22) equal_3d9a6f root.Std_k98ojb.Logic.Equal {}\n            sub_list_b8c5a6 -> equal_3d9a6f.left\n            for_1b3f9d.index -> equal_3d9a6f.right\n            equal_3d9a6f.result -> is_sub_8f0c1b\n        } -> for_1b3f9d.handler\n        for_1b3f9d.on_item -> output_a0eb7e\n    }\n\n    \n\n    instance(x: -83, y: 55) is_sublist_5a2dd6 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -155, y: 13, name: \"main_list\") property(List) main_list_5f0e9d\n        in(x: -145, y: -19, name: \"sublist_list\") property(List) sublist_list_e8a4c7\n\n        out(x: -142, y: 21, name: \"output\") property(Bool) output_2b3c5f\n\n        instance(x: -92, y: -24) zip_f9e1d0 root.Std_k98ojb.Iteration.Zip {}\n        sublist_list_e8a4c7 -> zip_f9e1d0.left\n        main_list_5f0e9d -> zip_f9e1d0.right\n        func() {\n            in(x: -121, y: 2, name: \"i\") property(Number) i_a3b6eb\n\n            out(x: -143, y: 24, name: \"output\") property(Bool) output_2b3c5f\n\n            instance(x: -92, y: -26) equal_b9a4d7 root.Std_k98ojb.Logic.Equal {}\n            sublist_list_e8a4c7[i_a3b6eb] -> equal_b9a4d7.left\n            main_list_5f0e9d[i_a3b6eb] -> equal_b9a4d7.right\n            equal_b9a4d7.result -> output_2b3c5f\n        } -> zip_f9e1d0.handler\n        zip_f9e1d0.zipped -> output_2b3c5f\n    }\n\n    \n\n    instance(x: 98, y: -31) is_sublist_d1a4d8 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -173, y: 156, name: \"main_list\") property(List) list_1f2d0e\n        in(x: -195, y: -26, name: \"sublist\") property(List) sublist_f3a6b5\n\n        out(x: 439, y: 69, name: \"output\") property(Bool) output_4c9d8a\n\n        instance(x: 94, y: -105) zip_d1f0db root.Std_k98ojb.Iteration.Zip {}\n        list_1f2d0e -> zip_d1f0db.left\n        sublist_f3a6b5 -> zip_d1f0db.right\n        func() {\n            in(x: -193, y: 69, name: \"i\") property(Number) i_a2c9b3\n\n            out(x: 439, y: 70, name: \"output\") property(Bool) output_4c9d8a\n\n            instance(x: 92, y: -23) equal_c6df7e root.Std_k98ojb.Logic.Equal {}\n            sublist_f3a6b5 -> equal_c6df7e.left\n            list_1f2d0e -> equal_c6df7e.right\n            equal_c6df7e.result -> output_4c9d8a\n        } -> zip_d1f0db.handler\n        func() {\n            in(x: -193, y: 69, name: \"i\") property(Number) i_a2c9b3\n\n            out(x: 439, y: 70, name: \"output\") property(Bool) output_4c9d8a\n\n            instance(x: 92, y: -23) not_equal_f7e5f6 root.Std_k98ojb.Logic.NotEqual {}\n            sublist_f3a6b5 -> not_equal_f7e5f6.left\n            list_1f2d0e -> not_equal_f7e5f6.right\n            not_equal_f7e5f6.result -> output_4c9d8a\n        } -> zip_d1f0db.handler\n    }\n\n    \n\n    instance(x: 94, y: -105) is_sublist_e2b3e3 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -142, y: 15, name: \"main_list\") property(List) main_list_4d2a9b\n        in(x: -151, y: 26, name: \"sublist_list\") property(List) sublist_list_c2f0c6\n\n        out(x: 444, y: 23, name: \"output\") property(Bool) output_b8c7e4\n\n        instance(x: 102, y: -19) length_9a5d3b root.Std_k98ojb.List.Length {}\n        instance(x: -43, y: 25) contains_d2f1eb root.Std_k98ojb.List.Contains {}\n        sublist_list_c2f0c6 -> contains_d2f1eb.list\n        main_list_4d2a9b -> contains_d2f1eb.item\n        length_9a5d3b.length -> contains_d2f1eb.index\n    }\n\n    \n\n    instance(x: 96, y: -14) is_sublist_8e3c5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -194, y: 155, name: \"main_list\") property(List) main_list_0f6b3a\n        in(x: -208, y: -19, name: \"sub_list\") property(List) sub_list_1a8d4e\n\n        out(x: 1039, y: -102, name: \"output\") property(Bool) output_a8c2db\n\n        instance(x: -69, y: 156) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 246, y: -110) equal_c9c3d5 root.Std_k98ojb.Logic.Equal {}\n        sub_list_1a8d4e -> length_6e87f2.list\n        main_list_0f6b3a -> length_6e87f2.list\n        length_6e87f2.length -> equal_c9c3d5.left\n        0 -> equal_c9c3d5.right\n        equal_c9c3d5.result -> output_a8c2db\n    }\n\n    \n\n    instance(x: -63, y: -27) is_sublist_6b3a1e root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether a list is a sublist of another list.\") is_sublist {\n        in(x: -155, y: 21, name: \"main_list\") property(List) main_list_2a4d5b\n        in(x: -145, y: 63, name: \"sublist_list\") property(List) sublist_list_1f3e0c\n\n        out(x: 123, y: -69, name: \"output\") property(Bool) output_e7e8db\n\n        instance(x: -74, y: 55) is_sub_6a2d21 root.Std_k98ojb.Logic.Equal {}\n        sublist_list_1f3e0c -> is_sub_6a2d21.list\n        main_list_2a4d5b -> is_sub_6a2d21.items\n        is_sub_6a2d21.result -> output_e7e8db\n    }\n\n    \n\n    instance(x: 92, y: -47) is_sublist_f7f1c9 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether a list is a sublist of another list.\") is_sublist {\n        in(x: -155, y: 123, name: \"main_list\") property(List) main_list_9e4f3b\n        in(x: -193, y: 55, name: \"sub_list\") property(List) sub_list_e7c6d5\n\n        out(x: 446, y: -108, name: \"output\") property(Bool) output_b8b0a2\n\n        instance(x: -104, y: 120) for_loop_1e8f4 root.Std_k98ojb.Std.For {}\n        main_list_9e4f3b -> for_loop_1e8f4.items\n        sub_list_e7c6d5 -> for_loop_1e8f4.next\n        func() {\n            in(x: -121, y: 56, name: \"i\") property(Number) i_a2a9eb\n\n            out(x: 555, y: -101, name: \"output\") property(Bool) output_8d7c6e\n\n            instance(x: -95, y: 114) contains_c5b3f1 root.Std_k98ojb.List.Contains {}\n            main_list_9e4f3b -> contains_c5b3f1.list\n            sub_list_e7c6d5 -> contains_c5b3f1.item\n            contains_c5b3f1.result -> output_8d7c6e\n        } -> for_loop_1e8f4.handler\n        for_loop_1e8f4.done -> output_b8b0a2\n    }\n\n    \n\n    instance(x: 104, y: -108) is_sublist_eb9c3f root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -446, y: 0, name: \"list\") property(List) list_5e3f9d\n        out(x: -1, y: -235, name: \"missing_number\") property(Number) missing_number_e2a6c8\n\n        instance(x: -109, y: -240) for_d3b0ec root.Std_k98ojb.Std.For {}\n        instance(x: 394, y: 5) ifexpression_7f4c43 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index > 0 && previous == index + 1\"\n        }\n        getter(x: -142, y: 160, name: \"getter_d9c3e6\") getter_d9c3e6 = previous\n        setter(x: 679, y: 5) setter_d9c3e6 = previous\n        instance(x: 321, y: 0) find_8bfcf root.Std_k98ojb.Iteration.Map {}\n        getter_d9c3e6.value -> find_8bfcf.handler\n        list_5e3f9d -> for_d3b0ec.items\n        for_d3b0ec.item -> ifexpression_7f4c43.execute\n        ifexpression_7f4c43.then -> setter_d9c3e6.execute\n        for_d3b0ec.index -> setter_d9c3e6.new_value\n        for_d3b0ec.onItem -> ifexpression_7f4c43.execute\n        for_d3b0ec.done -> find_8bfcf.continue\n        ifexpression_7f4c43.value -> missing_number_e2a6c8\n        for_d3b0ec.index + 1 -> setter_d9c3e6.new_value\n    }\n\n    \n\n    instance(x: -81, y: 170) find_smallest_missing_5d5d45 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -432, y: -235, name: \"list\") property(List) list_4f9a2d\n\n        out(x: 1227, y: 5, name: \"output\") property(Number) output_8c0b35\n\n        instance(x: 753, y: -123) ifexpression_b6e1b root.Std_k98ojb.Std.IfExpression {\n            expression: \"previous == current + 1\"\n        }\n        getter(x: 326, y: 163, name: \"getter_5f7c9a\") getter_5f7c9a = previous\n        setter(x: 678, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: 704, y: 170, name: \"getter_cc0721\") getter_cc0721 = index\n        setter(x: 955, y: -158, name: \"setter_7e2b42\") setter_7e2b42 = index\n        instance(x: 551, y: -105) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        setter_9d4f1c.continue -> for_d26972.reset\n        list_4f9a2d -> for_d26972.items\n        execute_b6e1b -> setter_9d4f1c.execute\n        -1 -> setter_9d4f1c.new_value\n        for_d26972.item -> equal_aabb6e.left\n        for_d26972.index -> equal_aabb6e.right\n        for_d26972.onItem -> if_7c284f.execute\n        if_7c284f.predicate -> output_8c0b35\n        if_7c284f.else -> for_d26972.next\n        if_7c284f.then -> setter_7e2b42.execute\n        for_d26972.index -> setter_7e2b42.new_value\n        for_d26972.onItem -> if_7c284f.execute\n        if_7c284f.predicate -> output_8c0b35\n        for_d26972.index -> setter_9d4f1c.new_value\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 777, y: 760) find_missing_e2e5e6 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -444, y: 4, name: \"execute\") trigger() execute_0e1d2\n        in(x: -459, y: 105, name: \"list\") property(List) list_3a6f7b\n\n        out(x: 1228, y: -227, name: \"continue\") trigger() continue_5c4d66\n        out(x: 1218, y: 141, name: \"output\") property(Number) output_f1e8eb\n\n        instance(x: 0, y: 0) for_d2a6b root.Std_k98ojb.Std.For {}\n        getter(x: -0, y: 0) previous_3c7f5d root.Std_k98ojb.List.GetAt {}\n        setter(x: -0, y: 0, name: \"setter_4e1f45\") setter_4e1f45 = previous\n        instance(x: 46, y: 5) ifexpression_6c15d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y+1\"\n        }\n        getter(x: -0, y: 0, name: \"getter_7a3f8b\") getter_7a3f8b = previous\n        setter(x: 46, y: 5) setter_4e1f45 = previous\n        instance(x: 34, y: 5) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        list_3a6f7b -> for_d2a6b.items\n        0 -> for_d2a6b.index\n        for_d2a6b.item -> equal_aabb6e.left\n        for_d2a6b.onItem -> ifexpression_6c15d4.execute\n        equal_aabb6e.result -> ifexpression_6c15d4.predicate\n        ifexpression_6c15d4.then -> setter_4e1f45.execute\n        0 -> setter_4e1f45.new_value\n        for_d2a6b.done -> continue_5c4d66\n        setter_4e1f45.continue -> for_d2a6b.reset\n        for_d2a6b.index -> setter_4e1f45.new_value\n        ifexpression_6c15d4.else -> for_d2a6b.next\n    }\n\n    \n\n    instance(x: 0, y: -179) find_missing_f9e8f3 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: 0, y: 0, name: \"list\") property(List) list_9d4b5f\n        in(x: -246, y: 10, name: \"execute\") trigger() execute_2a6c8e\n\n        out(x: 1237, y: -1, name: \"continue\") trigger() continue_3bda35\n        out(x: 1218, y: 148, name: \"output\") property(Number) output_9d4f5f\n\n        instance(x: 0, y: 0) ifexpression_b6c8f7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index > 0 && previous == index - 1\"\n        }\n        getter(x: -123, y: -19, name: \"getter_5d2a66\") getter_5d2a66 = previous\n        setter(x: 123, y: -289, name: \"setter_4e8b0c\") setter_4e8b0c = previous\n        instance(x: -115, y: -34) for_1f6f9d root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: 10, name: \"setter_4e8b0c\") setter_b5cd45 = previous\n        instance(x: -275, y: -43) getat_c2a4e3 root.Std_k98ojb.List.GetAt {}\n        ifexpression_b6c8f7.value -> output_9d4f5f\n        ifexpression_b6c8f7.then -> setter_4e8b0c.execute\n        list_9d4b5f -> for_1f6f9d.items\n        for_1f6f9d.item -> ifexpression_b6c8f7.gen_2\n        for_1f6f9d.index -> ifexpression_b6c8f7.gen_0\n        getter_5d2a66.value -> ifexpression_b6c8f7.gen_1\n        for_1f6f9d.onItem -> ifexpression_b6c8f7.execute\n        for_1f6f9d.done -> continue_3bda35\n        for_1f6f9d.item -> setter_4e8b0c.new_value\n        list_9d4b5f -> getat_c2a4e3.list\n        0 -> getat_c2a4e3.index\n        getat_c2a4e3.itemAtIndex -> setter_b5cd45.new_value\n        execute_2a6c8e -> setter_b5cd45.execute\n        setter_b5cd45.continue -> for_1f6f9d.reset\n        setter_4e8b0c.continue -> for_1f6f9d.next\n    }\n\n    \n\n    instance(x: -123, y: 149) find_missing_f3a7d2 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -394, y: -243, name: \"execute\") trigger() execute_4e8d1a\n        in(x: 0, y: 0, name: \"list\") property(List) list_b5c6b2\n\n        out(x: 1237, y: -231, name: \"continue\") trigger() continue_eb9f77\n        out(x: 1218, y: 145, name: \"output\") property(Number) output_0a3d35\n\n        instance(x: 74, y: -114) for_d2c4e1 root.Std_k98ojb.Std.For {}\n        getter(x: 334, y: 160, name: \"getter_7f6d5f\") getter_7f6d5f = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) getat_d2b8a9 root.Std_k98ojb.List.GetAt {}\n        ifexpression_c5e7c0 root.Std_k98ojb.Std.IfExpression {\n            expression: \"previous + 1 == current\"\n        }\n        getter_7f6d5f.value -> ifexpression_c5e7c0.gen_0\n        getat_d2b8a9.itemAtIndex -> setter_9d4f1c.new_value\n        for_d2c4e1.done -> continue_eb9f77\n        for_d2c4e1.item -> setter_9d4f1c.execute\n        list_b5c6b2 -> for_d2c4e1.items\n        ifexpression_c5e7c0.predicate -> output_0a3d35\n        getat_d2b8a9.index -> setter_9d4f1c.new_value\n        execute_4e8d1a -> setter_9d4f1c.execute\n        getter_7f6d5f.value -> output_0a3d35\n    }\n\n    \n\n    instance(x: 777, y: 760) find_missing_3bdf45 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -456, y: 0, name: \"execute\") trigger() execute_1f5d9a\n        in(x: 0, y: 0, name: \"list\") property(List) list_7c4dfb\n\n        out(x: 1203, y: 10, name: \"continue\") trigger() continue_8e8d21\n        out(x: -1, y: 0, name: \"output\") property(Number) output_b5f2a8\n\n        instance(x: 46, y: 20) ifexpression_e6c7b3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"previous == current + 1\"\n        }\n        getter(x: -0, y: 0, name: \"getter_9f4f8e\") getter_9f4f8e = previous\n        setter(x: 34, y: -255, name: \"setter_c7d2b6\") setter_c7d2b6 = previous\n        instance(x: 321, y: 5) for_d1a0d3 root.Std_k98ojb.Std.For {}\n        getter_9f4f8e.value -> output_b5f2a8\n        ifexpression_e6c7b3.value -> continue_8e8d21\n        ifexpression_e6c7b3.then -> setter_c7d2b6.execute\n        list_7c4dfb -> for_d1a0d3.items\n        0 -> for_d1a0d3.index\n        getat_ce2a48 -> for_d1a0d3.item\n        for_d1a0d3.onItem -> ifexpression_e6c7b3.execute\n        for_d1a0d3.done -> continue_8e8d21\n        setter_c7d2b6.continue -> for_d1a0d3.reset\n        for_d1a0d3.next -> for_d1a0d3.index\n        getat_ce2a48.itemAtIndex -> setter_c7d2b6.new_value\n        execute_1f5d9a -> getat_ce2a48.execute\n        getter_9f4f8e.value -> output_b5f2a8\n        for_d1a0d3.index -> setter_c7d2b6.new_value\n    }\n\n    \n\n    instance(x: 777, y: -246) find_missing_5c6e65 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -456, y: -227, name: \"execute\") trigger() execute_0f1d2b\n        in(x: 0, y: -242, name: \"list\") property(List) list_a4e6ec\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_8c9f77\n        out(x: 1218, y: 147, name: \"output\") property(Number) output_c7d3a2\n\n        instance(x: 753, y: -114) for_d0b6df root.Std_k98ojb.Std.For {}\n        instance(x: 342, y: 60) ifexpression_9c8e5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 325, y: 170, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 678, y: -312, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_9c8e5f.else -> continue_8c9f77\n        ifexpression_9c8e5f.value -> output_c7d3a2\n        ifexpression_9c8e5f.then -> setter_9d4f1c.execute\n        list_a4e6ec -> for_d0b6df.items\n        for_d0b6df.item -> ifexpression_9c8e5f.gen_2\n        for_d0b6df.index -> ifexpression_9c8e5f.gen_0\n        getter_b280eb.value -> ifexpression_9c8e5f.gen_1\n        for_d0b6df.onItem -> ifexpression_9c8e5f.execute\n        for_d0b6df.done -> continue_8c9f77\n        for_d0b6df.item -> setter_9d4f1c.new_value\n        list_a4e6ec -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_0f1d2b -> setter_38e107.execute\n        setter_38e107.continue -> for_d0b6df.reset\n        setter_9d4f1c.continue -> for_d0b6df.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_2a7f44 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -442, y: 0, name: \"list\") property(List) list_9d5a1f\n\n        out(x: 1246, y: -246, name: \"continue\") trigger() continue_1c7e8b\n        out(x: 1224, y: 142, name: \"output\") property(Number) output_a8df21\n\n        instance(x: 69, y: -247, name: \"previous\") expression_6d4d2f root.Std_k98ojb.Math.Expression {\n            expression: \"(x+1)\"\n        }\n        getter(x: 334, y: 161, name: \"getter_7a8c9e\") getter_7a8c9e = x\n        setter(x: 0, y: -305, name: \"setter_3f2b6d\") setter_3f2b6d = x\n        instance(x: 342, y: 5) ifexpression_6d4d2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        list_9d5a1f -> ifexpression_6d4d2f.list\n        getter_7a8c9e.value -> previous\n        for_65d4f3 root.Std_k98ojb.Std.For {}\n        instance(x: 69, y: -247) getat_d0b6a1 root.Std_k98ojb.List.GetAt {}\n        ifexpression_6d4d2f.then -> setter_3f2b6d.execute\n        list_9d5a1f -> for_65d4f3.items\n        previous -> for_65d4f3.gen_0\n        for_65d4f3.item -> ifexpression_6d4d2f.gen_1\n        -1 -> setter_3f2b6d.new_value\n        getat_d0b6a1.itemAtIndex -> setter_3f2b6d.new_value\n        execute_1c7e8b -> setter_3f2b6d.execute\n        for_65d4f3.done -> continue_1c7e8b\n        previous.value -> output_a8df21\n        ifexpression_6d4d2f.else -> continue_1c7e8b\n        for_65d4f3.index -> setter_3f2b6d.new_value\n    }\n\n    \n\n    instance(x: 0, y: -246) find_missing_f5a9f2 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -432, y: 2, name: \"list\") property(List) list_5a1f8d\n\n        out(x: 1237, y: 0, name: \"output\") property(Number) output_d4c6f3\n\n        instance(x: 0, y: 0) for_9e5d2 root.Std_k98ojb.Std.For {}\n        data_instance(x: -342, y: -242, name: \"data\") data_8fdd45  = [sum, average]\n        instance(x: 49, y: -343, name: \"sum\") expression_6c4b21 root.Std_k98ojb.Math.Expression {\n            expression: \"n * (n+1)/2\"\n        }\n        instance(x: 64, y: -225, name: \"average\") div_3e8f7a root.Std_k98ojb.Math.Div {}\n        data_8fdd45 -> output_d4c6f3\n        list_5a1f8d -> for_9e5d2.items\n        n_c88d35 -> expression_6c4b21.gen_0\n        expression_6c4b21.result -> div_3e8f7a.first\n        div_3e8f7a.result -> data_8fdd45.average\n        n_c88d35 -> div_3e8f7a.second\n        for_9e5d2.item -> ifexpression_6c4b21.execute\n        ifexpression_6c4b21.value -> output_d4c6f3\n        ifexpression_6c4b21.then -> data_8fdd45.sum\n        list_5a1f8d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> data_8fdd45.sum\n        for_9e5d2.onItem -> ifexpression_6c4b21.execute\n        for_9e5d2.done -> continue_a96db6\n        for_9e5d2.item -> ifexpression_6c4b21.gen_0\n        getat_ce2a48.itemAtIndex -> ifexpression_6c4b21.gen_1\n        sum -> data_8fdd45.sum\n        average -> data_8fdd45.average\n        for_9e5d2.index -> ifexpression_6c4b21.gen_0\n        getat_ce2a48.itemAtIndex -> ifexpression_6c4b21.gen_1\n        getat_ce2a48.itemAtIndex -> ifexpression_6c4b21.gen_1\n    }\n\n    \n\n    instance(x: 777, y: -109) find_missing_3d9e5f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -444, y: 2, name: \"list\") property(List) list_8f4e5d\n        out(x: 1219, y: 7, name: \"output\") property(Number) output_a1c6a0\n\n        instance(x: 342, y: 70) ifexpression_c4b9df root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: -27, y: 143, name: \"getter_6d8c5f\") getter_6d8c5f = previous\n        setter(x: 675, y: -305, name: \"setter_9e2a4b\") setter_9e2a4b = previous\n        instance(x: 321, y: -20) for_b1c7f0 root.Std_k98ojb.Std.For {}\n        setter(x: 0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: -275, y: -35) getat_8a6e7e root.Std_k98ojb.List.GetAt {}\n        ifexpression_c4b9df.else -> continue_a96db6\n        ifexpression_c4b9df.value -> output_a1c6a0\n        ifexpression_c4b9df.then -> setter_9d4f1c.execute\n        list_8f4e5d -> for_b1c7f0.items\n        for_b1c7f0.item -> ifexpression_c4b9df.gen_2\n        for_b1c7f0.index -> ifexpression_c4b9df.gen_0\n        getter_6d8c5f.value -> ifexpression_c4b9df.gen_1\n        for_b1c7f0.onItem -> ifexpression_c4b9df.execute\n        for_b1c7f0.done -> continue_a96db6\n        for_b1c7f0.item -> setter_9d4f1c.new_value\n        list_8f4e5d -> getat_8a6e7e.list\n        0 -> getat_8a6e7e.index\n        getat_8a6e7e.itemAtIndex -> setter_9d4f1c.new_value\n        execute -> setter_9d4f1c.execute\n        for_b1c7f0.reset -> continue_a96db6\n        setter_9d4f1c.continue -> for_b1c7f0.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_3a9e5 root.main.find_missing {}\n\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -227, y: 18, name: \"input\") property(String) input_1a5f3d\n\n        out(x: 509, y: -64, name: \"output\") property(String) output_2e0c9b\n\n        instance(x: 74, y: -43) replace_8c4dd6 root.Std_k98ojb.Strings.Replace {}\n        input_1a5f3d -> replace_8c4dd6.input\n        \",\" -> replace_8c4dd6.search\n        \".\" -> replace_8c4dd6.replace\n        \" \" -> replace_8c4dd6.search\n        \":\" -> replace_8c4dd6.replace\n        replace_8c4dd6.output -> output_2e0c9b\n    }\n\n    \n\n    instance(x: -200, y: 30) replace_punctuation_7c1d45 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 341, y: -2, name: \"output\") property(String) output_ai\n\n        instance(x: 73, y: 0) replace_3d5f6a root.Std_k98ojb.Strings.Replace {}\n        replace_3d5f6a.input -> input_ai\n        \",\" -> replace_3d5f6a.search\n        \".\" -> replace_3d5f6a.search\n        \" \" -> replace_3d5f6a.search\n        \":\") -> replace_3d5f6a.replace\n        input_ai -> replace_3d5f6a.input\n        replace_3d5f6a.output -> output_ai\n    }\n\n    \n\n    instance(x: -201, y: 30) replace_punctuation_b4e9b2 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon{\n        in(x: -201, y: 0, name: \"input\") property(String) input_6d9d8f\n\n        out(x: 1025, y: 0, name: \"output\") property(String) output_1a7c2b\n\n        instance(x: 15, y: 0) replace_node root.Std_k98ojb.Strings.Replace {}\n        input_6d9d8f -> replace_node.input\n        \",.\" -> replace_node.search\n        \":\" -> replace_node.replace\n        replace_node.output -> output_1a7c2b\n    }\n\n    \n\n    instance(x: -243, y: 0) replace_with_colon_e3c4d root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -198, y: 0, name: \"input\") property(String) input_6a8e5f\n\n        out(x: 1054, y: -63, name: \"output\") property(String) output_3d2b1c\n\n        instance(x: 74, y: -46) replace_chars_node root.Std_k98ojb.Strings.Replace {}\n        input_6a8e5f -> replace_chars_node.input\n        \", \".tostring() -> replace_chars_node.search\n        \":\" -> replace_chars_node.replace\n        replace_chars_node.output -> output_3d2b1c\n    }\n\n    \n\n    instance(x: -202, y: 23) replace_chars_9fdd4e root.main.replace_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n\n        out(x: -141, y: -44, name: \"output\") property(String) output_ai\n\n        instance(x: 14, y: 3) ifexpression_9e8d5c root.Std_k98ojb.Std.IfExpression {\n            expression: \"it == ' ' or it == ',' or it == '.'\"\n        }\n        input_ai -> ifexpression_9e8d5c.input\n        ifexpression_9e8d5c.then -> output_ai\n        replace_special_chars_1f7f0a root.main.replace_special_chars {}\n    }\n\n    \n\n    instance(x: -201, y: 44) replace_special_chars_1f7f0a root.main.replace_special_chars {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -201, y: 0, name: \"input\") property(String) input_a2a4f1\n        out(x: 1009, y: 0, name: \"output\") property(String) output_8b3c45\n\n        instance(x: 15, y: 0) replace_node root.Std_k98ojb.Strings.Replace {}\n        input_a2a4f1 -> replace_node.input\n        \",.\" -> replace_node.search\n        \":\" -> replace_node.replace\n        replace_node.output -> output_8b3c45\n    }\n\n    \n\n    instance(x: -240, y: 0) replace_with_colon_f5d7e9 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -193, y: 1, name: \"input\") property(String) input_4d2f9b\n\n        out(x: 1018, y: 3, name: \"output\") property(String) output_a8e7a6\n\n        instance(x: 94, y: 0) replace_5d7c1 root.Std_k98ojb.Strings.Replace {}\n        input_4d2f9b -> replace_5d7c1.input\n        \",\" -> replace_5d7c1.search\n        \".\" -> replace_5d7c1.replace\n        \":\" -> replace_5d7c1.replace\n        replace_5d7c1.result -> output_a8e7a6\n    }\n\n    \n\n    instance(x: -198, y: 55) replace_with_colon_4b0f9a root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) ifexpression_3d7de root.Std_k98ojb.Std.IfExpression {\n            expression: \"contains_d42dce(input, ' ', true)\"\n        }\n        contains_d42dce -> replace_with_colon.contains\n        input_ai -> contains_d42dce.input\n        ' ' -> contains_d42dce.search\n        ':'\n        contains_d42dce.replace -> output_ai\n        instance(x: 265, y: 0) ifexpression_3d7de root.Std_k98ojb.Std.IfExpression {\n            expression: \"contains_d42dce(input, ',', true)\"\n        }\n        contains_d42dce -> replace_with_colon.contains\n        input_ai -> contains_d42dce.input\n        ','\n        ':'\n        contains_d42dce.replace -> output_ai\n        instance(x: 81, y: 52) ifexpression_3d7de root.Std_k98ojb.Std.IfExpression {\n            expression: \"contains_d42dce(input, '.', true)\"\n        }\n        contains_d42dce -> replace_with_colon.contains\n        input_ai -> contains_d42dce.input\n        '.'\n        ':'\n        contains_d42dce.replace -> output_ai\n    }\n\n    \n\n    instance(x: -242, y: 30) replace_with_colon_3e25a9 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: 0, y: 0, name: \"input\") property(String) input_3e4d2b\n\n        out(x: -104, y: 13, name: \"output\") property(String) output_5f9a7c\n\n        instance(x: 15, y: 0) replace_node root.Std_k98ojb.Strings.Replace {}\n        input_3e4d2b -> replace_node.input\n        \",,\" -> replace_node.search\n        \".\" -> replace_node.replace\n        \" \" -> replace_node.replace\n        \":\" -> replace_node.replace\n        replace_node.output -> output_5f9a7c\n    }\n\n    \n\n    instance(x: -91, y: 44) replace_punctuation_b6b1e8 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -201, y: 1, name: \"input\") property(String) input_4f8e0a\n\n        out(x: 1035, y: 3, name: \"output\") property(String) output_7c9d23\n\n        instance(x: 52, y: 2) replace_8b6df1 root.Std_k98ojb.Strings.Replace {}\n        input_4f8e0a -> replace_8b6df1.input\n        \",.\" -> replace_8b6df1.search\n        \":\" -> replace_8b6df1.replace\n        replace_8b6df1.output -> output_7c9d23\n    }\n\n    \n\n    instance(x: -233, y: 44) replace_special_chars_b0f2d4 root.main.replace_special_chars {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -294, y: 0, name: \"string\") property(String) input_2\n\n        out(x: 509, y: -1, name: \"result\") property(Bool) result_7c5f3e\n\n        instance(x: 0, y: 0) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: -26, y: 49, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 649, y: 2) setter_9d4f1c = previous\n        instance(x: 322, y: -25) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: 0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: 34) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> result_7c5f3e\n        ifexpression_875761.value -> result_7c5f3e\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_input_2 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> result_7c5f3e\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_2 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 23, y: -176) check_same_b0c5b7 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same_char{\n        in(x: -0, y: 0, name: \"input\") property(String) input_3a5d2e\n\n        out(x: 1041, y: -4, name: \"output\") property(Bool) output_9b6c43\n\n        instance(x: 14, y: 1) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        input_3a5d2e -> contains_d42dce.input\n        'z' -> contains_d42dce.contains\n        contains_d42dce.result -> output_9b6c43\n    }\n\n    \n\n    instance(x: 0, y: -11) all_same_char_1f8a7f root.main.all_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same_char {\n        in(x: -305, y: 3, name: \"string\") property(String) input_ai\n        out(x: 1219, y: 5, name: \"output\") property(Bool) output_0\n\n        instance(x: 0, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        instance(x: 1, y: 4) ifexpression_8d7f2a root.Std_k98ojb.Std.IfExpression {}\n        instance(x: -31, y: 6) tolower_c9c5e3 root.Std_k98ojb.Strings.ToLower {}\n        strings_length_node.length -> ifexpression_8d7f2a.expression\n        input_ai -> tolower_c9c5e3.input\n        tolower_c9c5e3.output -> ifexpression_8d7f2a.value\n    }\n\n    \n\n    instance(x: 0, y: -1) all_same_char_8b6f43 root.main.all_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: -475, y: 0, name: \"string\") property(String) input_0\n        out(x: 1214, y: -2, name: \"output\") property(Bool) output_b7c8a5\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        input_0 -> tolower_2e1444.input\n        tolower_2e1444.output -> all_characters_same.input\n        all_characters_same.input -> output_b7c8a5\n    }\n\n    \n\n    instance(x: 73, y: 52) all_characters_same_f6d1f9 root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: 0, y: 0, name: \"string\") property(String) string_3f4e5d\n\n        out(x: 1028, y: -2, name: \"output\") property(Bool) output_ea1c6f\n\n        instance(x: 0, y: 0) ifexpression_d7b9ec root.Std_k98ojb.Std.IfExpression {\n            expression: \"i == j\"\n        }\n        getter(x: 0, y: 0, name: \"getter_8d5e3c\") getter_8d5e3c = previous\n        setter(x: 0, y: 0, name: \"setter_4b6f2a\") setter_4b6f2a = previous\n        instance(x: 0, y: 0) for_d26972 root.Std_k98ojb.Std.For {}\n        getter_8d5e3c.value -> ifexpression_d7b9ec.then\n        string_3f4e5d -> for_d26972.items\n        for_d26972.item -> ifexpression_d7b9ec.gen_1\n        ifexpression_d7b9ec.left -> setter_4b6f2a.execute\n        0 -> setter_4b6f2a.index\n        setter_4b6f2a.continue -> for_d26972.reset\n        setter_4b6f2a.next -> for_d26972.next\n        ifexpression_d7b9ec.else -> output_ea1c6f\n        for_d26972.item -> getter_8d5e3c.new_value\n    }\n\n    \n\n    instance(x: 0, y: -38) is_all_same_fdb4d2 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") all_same_chars {\n        in(x: -269, y: 2, name: \"string\") property(String) input_0\n\n        out(x: 541, y: 1, name: \"output\") property(Bool) output_8d9f7a\n\n        instance(x: 0, y: 3) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        input_0 -> tolower_2e1444.input\n        tolower_2e1444.output -> all_same_chars.output\n        instance(x: 0, y: 5) is_alphabetic_7a9f1d root.Std_k98ojb.Strings.IsAlphabetic {}\n        tolower_2e1444.output -> is_alphabetic_7a9f1d.input\n        true -> all_same_chars.output\n        false -> all_same_chars.output\n    }\n\n    \n\n    instance(x: 55, y: -37) all_same_chars_0c5b6f root.main.all_same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") same_characters {\n        in(x: -245, y: 0, name: \"input\") property(String) input_2f8e4a\n\n        out(x: 509, y: 6, name: \"output\") property(Bool) output_e7b1db\n\n        instance(x: 74, y: 3) tolower_d9d5c root.Std_k98ojb.Strings.ToLower {}\n        input_2f8e4a -> tolower_d9d5c.input\n        tolower_d9d5c.output -> same_characters.input\n        same_characters.output -> output_e7b1db\n    }\n\n    \n\n    instance(x: -179, y: 0) same_characters_3dfc6 root.main.same_characters {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same_char {\n        in(x: -0, y: 0, name: \"string\") property(String) input_3f9d6a\n\n        out(x: 546, y: -1, name: \"output\") property(Bool) output_c9c5e2\n\n        instance(x: 0, y: 0) tolower_a7b9a8 root.Std_k98ojb.Strings.ToLower {}\n        input_3f9d6a -> tolower_a7b9a8.input\n        tolower_a7b9a8.output -> output_c9c5e2\n    }\n\n    \n\n    instance(x: 0, y: -1) all_same_char_4d8eb4 root.main.all_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") same_characters {\n        in(x: -394, y: 0, name: \"input\") property(String) input_8\n        out(x: 1011, y: -2, name: \"output\") property(Bool) output_7\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        input_8 -> tolower_2e1444.input\n        tolower_2e1444.output -> same_characters.output\n        instance(x: 0, y: 0) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        same_characters.input -> equal_f89569.left\n        same_characters.output -> equal_f89569.right\n        input_8 -> equal_f89569.value\n    }\n\n    \n\n    instance(x: -43, y: 44) same_characters_b7f9e3 root.main.same_characters {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") same_chars {\n        in(x: -475, y: 0, name: \"string\") property(String) input_2a9d3e\n\n        out(x: 1095, y: -1, name: \"output\") property(Bool) output_a4c8f6\n\n        instance(x: 13, y: 23) tolower_7df0b8 root.Std_k98ojb.Strings.ToLower {}\n        input_2a9d3e -> tolower_7df0b8.input\n        tolower_7df0b8.output -> output_a4c8f6\n    }\n\n    \n\n    instance(x: 43, y: -1) same_chars_1db5d2 root.main.same_chars {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"count\") property(Number) count_3c6b9e\n\n        instance(x: 0, y: 1) length_6e87f root.Std_k98ojb.Strings.Length {}\n        instance(x: 265, y: 0) isnumeric_d42dce root.Std_k98ojb.Strings.IsNumeric {}\n        input_ai -> length_6e87f.input\n        length_6e87f.length -> isnumeric_d42dce.input\n        isnumeric_d42dce.result -> count_3c6b9e\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_2c856f root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"length\") property(Number) length_1d7a8e\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.Length {}\n        instance(x: 265, y: 0) isnumeric_a4c0ca root.Std_k98ojb.Strings.IsNumeric {}\n        input_ai -> length_6e87f2.input\n        length_6e87f2.length -> isnumeric_a4c0ca.input\n        isnumeric_a4c0ca.is_number -> length_1d7a8e\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_9ecc3b root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") digit_count {\n        in(x: -426, y: 0, name: \"input\") property(String) input_ai\n\n        out(x: 113, y: -2, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 1) length_6e87f root.Std_k98ojb.Strings.Length {}\n        input_ai -> length_6e87f.input\n        length_6e87f.length -> count_ai\n    }\n\n    \n    instance(x: -55, y: 529) digit_count_node root.main.digit_count {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"number\") property(Number) number_0\n\n        instance(x: 0, y: 1) length_6e87f root.Std_k98ojb.Length {}\n        length_6e87f.length -> number_0\n        input_0 -> length_6e87f.input\n        length_6e87f.length -> count_digits.output\n    }\n\n    \n\n    instance(x: -55, y: 529) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"string\") property(String) input_8\n\n        out(x: 1, y: 2, name: \"length\") property(Number) length_3a9f5b\n\n        instance(x: 15, y: -1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        instance(x: 0, y: 2) isnumeric_4d8f45 root.Std_k98ojb.Strings.IsNumeric {}\n        input_8 -> length_6e87f2.input\n        isnumeric_4d8f45.input -> length_6e87f2.input\n        length_6e87f2.length -> length_3a9f5b\n    }\n\n    \n\n    instance(x: 48, y: -26) count_digits_15f9e9 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Count number of digits in a given string.\") count_digits {\n        in(x: -430, y: 0, name: \"string\") property(String) input_ai\n        out(x: 159, y: -219, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        instance(x: 265, y: 0) count_8f9c4d root.Std_k98ojb.Math.Count {}\n        length_6e87f2.length -> count_8f9c4d.count\n        input_ai -> length_6e87f2.input\n        count_8f9c4d.reset -> count_8f9c4d.reset\n        count_8f9c4d.count -> output_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_96023e root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"count\") property(Number) count_4d1b8f\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        tolower_2e1444.output -> Std_k98ojb.Strings.Characters {}\n        input_0 -> tolower_2e1444.input\n        Std_k98ojb.Strings.Characters.characters -> count_4d1b8f\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) isnumeric_5f9d6b root.Std_k98ojb.Strings.IsNumeric {}\n        tolower_2e1444.output -> isnumeric_5f9d6b.input\n        input_ai -> tolower_2e1444.input\n        isnumeric_5f9d6b.result -> output_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"counts the number of digits in a given string.\") digit_count {\n        in(x: -219, y: 0, name: \"input\") property(String) input_ai\n\n        out(x: 113, y: 2, name: \"count\") property(Number) count_3b9d7f\n\n        instance(x: 23, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        input_ai -> tolower_2e1444.input\n        length_6e87f2.length -> count_3b9d7f\n        tolower_2e1444.output -> length_6e87f2.input\n    }\n\n    \n\n    instance(x: 48, y: -1) digit_count_node root.main.digit_count {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -234, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 118, y: 44, name: \"digits\") property(Number) digits_3f7a2d\n\n        instance(x: 0, y: 1) length_6e87f root.Std_k98ojb.List.Length {}\n        instance(x: 303, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        input_0 -> contains_d42dce.input\n        \"0-9\" -> contains_d42dce.contains\n        length_6e87f.length -> digits_3f7a2d\n        contains_d42dce.result -> digits_3f7a2d\n    }\n\n    \n\n    instance(x: -55, y: 529) count_digits_node root.main.count_digits {}\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -509, y: 2, name: \"n\") property(Number) n_9f1b8a\n\n        out(x: 1135, y: -347, name: \"output\") property(Number) output_f6c0e3\n\n        instance(x: 82, y: -412) ifexpression_4d7dd2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        data_instance(x: 394, y: -380) data_b5f8a4  = [sum, sum]\n        instance(x: 46, y: -384) mul_9d2d6e root.Std_k98ojb.Math.Mul {}\n        instance(x: 97, y: -255, name: \"fourth power\") expression_3a7f0d root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4\"\n        }\n        instance(x: 99, y: -249) add_5e1c9e root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249, name: \"fourth power\") div_2a7d6f root.Std_k98ojb.Math.Div {}\n        instance(x: 99, y: -249, name: \"sum\") add_5e1c9e.first\n        instance(x: 99, y: -249, name: \"fourth power\") div_2a7d6f.second\n        data_b5f8a4 -> sum_3b0a95.sum\n        data_b5f8a4 -> add_5e1c9e.first\n        data_b5f8a4 -> div_2a7d6f.first\n        expression_3a7f0d.result -> mul_9d2d6e.first\n        n_9f1b8a -> mul_9d2d6e.second\n        expression_3a7f0d.result -> data_b5f8a4.sum\n        div_2a7d6f.result -> sum_3b0a95.average\n        add_5e1c9e.result -> output_f6c0e3\n    }\n\n    \n\n    instance(x: -55, y: 529) sum_fourth_power_4b9d35 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -569, y: 2, name: \"n\") property(Number) n_0e8a1b\n\n        out(x: 1134, y: -347, name: \"output\") property(Number) output_6f9d5c\n\n        data_instance(x: 396, y: -342) data_f7cd95  = [sum, fourth_power]\n        instance(x: 44, y: -384) sum_f3a2b1 root.Std_k98ojb.Math.Sum {}\n        instance(x: 96, y: -394) mul_9d4e0f root.Std_k98ojb.Math.Mul {}\n        instance(x: -39, y: -388) pow_a8c7f5 root.Std_k98ojb.Math.Pow {}\n        instance(x: 85, y: -385) div_6a3df1 root.Std_k98ojb.Math.Div {}\n        setter(x: 0, y: 0, name: \"setter_e9d2e4\") setter_e9d2e4 = sum\n        setter(x: 0, y: 0, name: \"setter_5ebc43\") setter_5ebc43 = fourth_power\n        instance(x: -303, y: -384) ifexpression_c8f7a1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 346, y: -394) firstodd_f3d9c5 root.Std_k98ojb.List.FirstItem {}\n        list_07cae4 -> firstodd_f3d9c5.items\n        data_f7cd95 -> sum_f3a2b1.items\n        n_0e8a1b -> sum_f3a2b1.n\n        sum_f3a2b1.result -> data_f7cd95.sum\n        2 -> div_6a3df1.second\n        fourth_power -> mul_9d4e0f.first\n        pow_a8c7f5.result -> mul_9d4e0f.second\n        firstodd_f3d9c5.item -> sum_f3a2b1.input\n        data_f7cd95.sum -> div_6a3df1.first\n        2 -> div_6a3df1.divisor\n        mul_9d4e0f.result -> fourth_power\n        n_0e8a1b -> div_6a3df1.second\n        ifexpression_c8f7a1.then -> setter_e9d2e4.execute\n        sum_f3a2b1.input -> setter_5ebc43.input\n        4 -> pow_a8c7f5.exponent\n        firstodd_f3d9c5.item -> fourth_power\n        data_f7cd95.fourth_power.result -> output_6f9d5c\n    }\n\n    \n\n    instance(x: -63, y: 528) sum_fourth_power_2e8a1b root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -509, y: 0, name: \"n\") property(Number) n_4d1d5f\n\n        out(x: 1097, y: -342, name: \"output\") property(Number) output_6c2b3a\n\n        instance(x: 74, y: 56) ifexpression_8e9c0e root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: -315, y: -23, name: \"sum\") expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"sum * (4*n^3 + 3*n^2 + n)\"\n        }\n        instance(x: 86, y: -29) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: 56) pow_9d6e38 root.Std_k98ojb.Math.Pow {}\n        instance(x: 97, y: -33) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -25) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: 0, y: 0, name: \"setter_6e7b4e\") setter_6e7b4e = index\n        instance(x: 340, y: 60) for_065883 root.Std_k98ojb.Std.For {}\n        getter(x: 704, y: 170, name: \"getter_84fbbe\") getter_84fbbe = index\n        setter(x: 955, y: -158, name: \"setter_7e2b42\") setter_7e2b42 = index\n        instance(x: 551, y: -105) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        setter_6e7b4e.continue -> for_065883.reset\n        list_07cae4 -> for_065883.items\n        execute_467172 -> setter_6e7b4e.execute\n        -1 -> setter_6e7b4e.new_value\n        for_065883.done -> continue_075eef\n        getter_84fbbe.value -> output_6c2b3a\n        n_4d1d5f -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> setter_6e7b4e.sum\n        setter_6e7b4e.result -> mul_f892a4.first\n        expression_2d6da6.result -> pow_9d6e38.first\n        div_547f34.result -> add_88bb8a.second\n        n_4d1d5f -> div_547f34.second\n        n_4d1d5f -> mul_f892a4.second\n    }\n\n    \n\n    instance(x: 777, y: 760) sum_fourth_power_b9c7b6 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -527, y: 2, name: \"n\") property(Number) n_6b655b\n\n        out(x: 1147, y: -649, name: \"output\") property(Number) output_ebef81\n\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517, name: \"fourth_power\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(4*it)\"\n        }\n        data_instance(x: -609, y: -363) data_9a9c70 = [filter_f3b46d.result, filter_4d4556.result]\n        instance(x: 340, y: 60) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 95, y: 34) add_a8f0f1 root.Std_k98ojb.Math.Add {}\n        instance(x: -43, y: 23) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: 0, y: 0, name: \"setter_6e7b4\") setter_6e7b4 = sum\n        instance(x: 340, y: 60) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        3 -> mul_f892a4.divisor\n        data_9a9c70[0] -> add_a8f0f1.first\n        2 -> div_547f34.second\n        div_547f34.result -> sum_6b655b.n_6b655b\n        data_9a9c70[1] -> mul_f892a4.second\n        mul_f892a4.result -> add_a8f0f1.first\n        3 -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        2 -> floor_61b38d.input\n        floor_61b38d.output -> mul_f892a4.second\n        add_a8f0f1.result -> sum_6b655b.sum\n        sum_6b655b.iteration -> setter_6e7b4.new_value\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_fourth_power_86117a root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -513, y: 0, name: \"n\") property(Number) n_3b9f2e\n\n        out(x: 1246, y: -1, name: \"output\") property(Number) output_f4c8a7\n\n        instance(x: 74, y: -416) sum_5d2f0a root.Std_k98ojb.Math.Sum {}\n        instance(x: 349, y: -388, name: \"fourth power\") expression_9e3f6f root.Std_k98ojb.Math.Expression {\n            expression: \"(n * (n+1)) % 2 + 1)^4\"\n        }\n        instance(x: 88, y: -387) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 340, y: -385) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 99, y: -386) add_e6c3d1 root.Std_k98ojb.Math.Add {}\n        instance(x: 94, y: -384) pow_a8a7e0 root.Std_k98ojb.Math.Pow {}\n        instance(x: 95, y: -383) mul_5f2a9c root.Std_k98ojb.Math.Mul {}\n        instance(x: 349, y: -385) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 99, y: -386) add_e6c3d1 root.Std_k98ojb.Math.Add {}\n        instance(x: 94, y: -384) pow_a8a7e0 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -609, y: -363) data_9a9c70  = [sum, fourth_power]\n        instance(x: 340, y: 60) sum_c1d4c6 root.Std_k98ojb.List.Sum {}\n        instance(x: 87, y: 55) fourth_power_f7e0f8 root.main.sum_fourth_power {}\n        data_9a9c70 -> sum_c1d4c6.items\n        n_3b9f2e -> sum_c1d4c6.n\n        expression_9e3f6f.result -> fourth_power_f7e0f8.n\n        sum_c1d4c6.sum -> data_9a9c70.sum\n        sum_c1d4c6.sum -> data_9a9c70.fourth_power\n    }\n\n    \n\n    instance(x: 777, y: 760) sum_fourth_power_2f0e43 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -530, y: 2, name: \"n\") property(Number) n_8f6d4e\n\n        out(x: 1155, y: 7, name: \"sum\") property(Number) sum_4a1a95\n\n        instance(x: 0, y: 0, name: \"mul_f892a4\") root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -222, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*(n-1)*(n-2)*(n-3)\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_8f6d4e -> mul_f892a4.first\n        n_8f6d4e -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_4a1a95\n    }\n\n    \n\n    instance(x: -293, y: 177) sum_fourth_power_5dd7db root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -513, y: 1, name: \"n\") property(Number) n_5f9d6a\n\n        out(x: 1212, y: 11, name: \"output\") property(Number) output_ae8f66\n\n        instance(x: 0, y: 0) for_0b4c45 root.Std_k98ojb.Std.For {}\n        data_instance(x: -341, y: -317) data_f9d6a1 = [sum, fourth_power]\n        instance(x: 43, y: -314) mul_d3f8e5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -316) pow_7c4d34 root.Std_k98ojb.Math.Pow {}\n        instance(x: -326, y: -317) div_ea8d9b root.Std_k98ojb.Math.Div {}\n        setter(x: 0, y: 0, name: \"setter_2e5f6d\") setter_2e5f6d = sum\n        setter(x: 0, y: 1, name: \"setter_4a7c9d\") setter_4a7c9d = fourth_power\n        getter(x: 0, y: -316) getter_2e5f6d = sum\n        getter(x: 0, y: -317) getter_4a7c9d = fourth_power\n        instance(x: -326, y: -315) floor_d0b8c3 root.Std_k98ojb.Math.Floor {}\n        1 -> div_ea8d9b.second\n        div_ea8d9b.result -> pow_7c4d34.first\n        4 -> pow_7c4d34.second\n        pow_7c4d34.result -> mul_d3f8e5.first\n        data_f9d6a1[0] -> sum\n        n_5f9d6a -> div_ea8d9b.input\n        2 -> div_ea8d9b.second\n        mul_d3f8e5.result -> fourth_power\n    }\n\n    \n\n    instance(x: -326, y: -316) sum_fourth_power_4c7d0 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_6b655b\n\n        out(x: 1146, y: -647, name: \"sum\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 394, y: -378) sum_digits_96023e root.main.sum_digits {}\n        instance(x: 97, y: -127) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        getter(x: 875, y: -518, name: \"getter_375321\") getter_375321 = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        3 -> mul_f892a4.second\n        4 -> add_88bb8a.first\n        5 -> div_547f34.second\n        n_6b655b -> div_547f34.first\n        floor_61b38d.result -> sum_digits_96023e.n_6b655b\n        mul_f892a4.result -> sum_digits_96023e.sum\n        add_88bb8a.result -> sum_digits_96023e.sum\n        4 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        sum_digits_96023e.continue_d9efd7 -> getter_375321.execute_cdac2a\n        sum_digits_96023e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> getter_375321.new_value\n        getter_375321.continue_d9efd7 -> setter_41e4ad.execute_cdac2a\n        sum_digits_96023e.output_732a8a -> div_547f34.first\n        3 -> div_547f34.second\n        div_547f34.result -> sum_digits_96023e.sum\n        5 -> mul_f892a4.first\n        n_6b655b -> mul_f892a4.second\n        mul_f892a4.result -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_fourth_power_86117a root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -555, y: 4, name: \"n\") property(Number) n_3fdd1d\n\n        out(x: 1146, y: -647, name: \"output\") property(Number) output_8d07dc\n\n        instance(x: 46, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 395, y: -378) sum_digits_96023e root.main.sum_digits {}\n        instance(x: 97, y: -127) power_a4fdd2 root.Std_k98ojb.Math.Pow {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        3 -> power_a4fdd2.exponent\n        10 -> div_547f34.second\n        div_547f34.result -> sum_digits_96023e.n_6b655b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> sum_digits_96023e.execute_cdac2a\n        sum_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        sum_digits_96023e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_8d07dc\n        n_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        floor_61b38d.output -> power_a4fdd2.first\n        power_a4fdd2.result -> sum_digits_96023e.n\n        sum_digits_96023e.min -> add_88bb8a.second\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_fourth_power_f21f44 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -527, y: 3, name: \"n\") property(Number) n_8e5a9b\n\n        out(x: 1090, y: -342, name: \"output\") property(Number) output_e4f7c6\n\n        instance(x: 0, y: 0) ifexpression_1d2dd root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 394, y: -338) sum_fourth_power_5e3d7 root.main.sum_fourth_power {}\n        data_instance(x: 395, y: -340) data_c8f1c6  = [sum]\n        instance(x: 46, y: -369) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 655, y: -332) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 97, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: 0, y: 0, name: \"setter_6e7b4\") setter_6e7b4 = sum\n        instance(x: 303, y: 2) power_9d8f3a root.Std_k98ojb.Math.Pow {}\n        4 -> power_9d8f3a.exponent\n        data_c8f1c6 -> power_9d8f3a.base\n        mul_f892a4.result -> add_88bb8a.first\n        data_c8f1c6 -> div_547f34.second\n        div_547f34.result -> sum_fourth_power_5e3d7.n_8e5a9b\n        0 -> setter_6e7b4.new_value\n        ifexpression_1d2dd.then -> sum_fourth_power_5e3d7.execute\n        sum_fourth_power_5e3d7.continue_d9efd7 -> data_c8f1c6.sum\n    }\n\n    \n\n    instance(x: -67, y: 38) sum_fourth_power_0a4b34 root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_ai\n        out(x: -1032, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -85, y: -46) math_modulo_node root.Std_k98ojb.Math.Modulo {}\n        side_ai -> math_modulo_node.value\n        6 -> math_modulo_node.divisor\n        math_modulo_node.result -> output_ai\n    }\n\n    \n    instance(x: -264, y: -19, name: \"cube_surface_area_0\") cube_surface_area_f4b9e2 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: -213, y: 11, name: \"side\") property(Number) side_4e0d6f\n        out(x: 1088, y: 23, name: \"surface_area\") property(Number) surface_area_9b7e3a\n\n        instance(x: 216, y: -15) formula_1c9e5a root.Std_k98ojb.Math.Formula {\n            formula: \"(6 * side^2)\"\n        }\n        side_4e0d6f -> formula_1c9e5a.side\n        formula_1c9e5a.result -> surface_area_9b7e3a\n    }\n\n    \n\n    instance(x: 215, y: -21) cube_surface_area_node root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -222, y: 11, name: \"size\") property(Number) size_5e1d6f\n        out(x: 1080, y: -19, name: \"output\") property(Number) output_a9b3a2\n\n        instance(x: 24, y: -14) math_pow_node root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 12, y: 13) math_mul_node = 6\n        data_instance(x: 20, y: 11) math_add_node = size_5e1d6f\n        math_mul_node.result -> math_pow_node.first\n        math_mul_node.result -> math_add_node.second\n        math_pow_node.y -> math_add_node.first\n        math_pow_node.y -> math_mul_node.second\n        math_add_node.result -> output_a9b3a2\n    }\n\n    \n\n    instance(x: 12, y: -13) surface_area_5c0f4d root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -123, y: 0, name: \"side\") property(Number) side_9d2a6f\n        out(x: 216, y: 7, name: \"output\") property(Number) output_f5b3c1\n\n        instance(x: 54, y: 14) math_pow_node root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 0, y: -16) math_mul_node = 6\n        side_9d2a6f -> math_pow_node.x\n        math_mul_node -> math_pow_node.y\n        math_pow_node.result -> output_f5b3c1\n    }\n\n    \n\n    instance(x: 0, y: -11) surface_area_b1a8a4 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -234, y: 14, name: \"side_length\") property(Number) side_length_1d0e6b\n        out(x: 216, y: 23, name: \"output\") property(Number) output_a9a8f5\n\n        instance(x: -109, y: 16) pow_4f2c3 root.Std_k98ojb.Math.Pow {}\n        side_length_1d0e6b -> pow_4f2c3.x\n        2 -> pow_4f2c3.y\n        pow_4f2c3.result -> output_a9a8f5\n        instance(x: -215, y: 22) mul_7d0d1 root.Std_k98ojb.Math.Mul {}\n        side_length_1d0e6b -> mul_7d0d1.first\n        6 -> mul_7d0d1.second\n        mul_7d0d1.result -> output_a9a8f5\n    }\n\n    \n\n    instance(x: -215, y: 23) surface_area_3c4e2b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -215, y: 0, name: \"size\") property(Number) size_a2d5f3\n        out(x: 1626, y: 0, name: \"output\") property(Number) output_1c9c4e\n\n        instance(x: 21, y: 0) math_pow_node root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -216, y: 10) data_5f6a8d  = 6\n        size_a2d5f3 -> math_pow_node.x\n        data_5f6a8d -> math_pow_node.y\n        math_pow_node.result -> output_1c9c4e\n    }\n\n    \n\n    instance(x: -189, y: 0) surface_area_d7a8b9 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: 0, y: 0, name: \"size\") property(Number) size_ai\n        out(x: -1098, y: 7, name: \"result\") property(Number) result_ai\n\n        instance(x: 13, y: 1) pow_3e6c8 root.Std_k98ojb.Math.Pow {}\n        pow_3e6c8.result -> size_ai\n        2 -> pow_3e6c8.y\n        6 -> pow_3e6c8.x\n        3 * 6 -> result_ai\n        pow_3e6c8.result -> cube_surface_area.size_ai\n    }\n\n    \n\n    instance(x: -109, y: -21) cube_surface_area_node root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -219, y: 55, name: \"side\") property(Number) side_6f1e5b\n\n        out(x: 760, y: 8, name: \"output\") property(Number) output_a8d7c2\n\n        instance(x: 0, y: -13) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"(6 * (side ^ 2))\"\n        }\n        side_6f1e5b -> math_expr_node.gen_0\n        math_expr_node.result -> output_a8d7c2\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_9a3d23 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_6d2d5a\n        out(x: -1098, y: -63, name: \"surface area\") property(Number) surface_area_b1f4eb\n\n        instance(x: 24, y: -46) pow_58c0e7 root.Std_k98ojb.Math.Pow {}\n        side_6d2d5a -> pow_58c0e7.x\n        3 -> pow_58c0e7.y\n        pow_58c0e7.result -> surface_area_b1f4eb\n        instance(x: -108, y: -59) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        side_6d2d5a -> mul_f892a4.first\n        6 -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_b1f4eb\n    }\n\n    \n\n    instance(x: -69, y: -26) cube_surface_area_0b7d3c root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -234, y: 0, name: \"side\") property(Number) side_a4f1a3\n        out(x: 1522, y: 0, name: \"result\") property(Number) result_6e9c8d\n\n        instance(x: -109, y: -21) math_pow_node root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -83, y: 4) data_5f1c7a  = 6\n        side_a4f1a3 -> math_pow_node.x\n        math_pow_node.y -> data_5f1c7a\n        math_pow_node.result -> result_6e9c8d\n    }\n\n    \n\n    instance(x: -234, y: 0) surface_area_node root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -246, y: 23, name: \"list\") property(List) list_6b8d1a\n\n        out(x: 1040, y: 14, name: \"output\") property(Number) output_d3c4e9\n\n        instance(x: -105, y: 44, name: \"smallest\") find_smallest_7e2f71 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 95, y: 46, name: \"largest\") find_largest_d5d4a0 root.Std_k98ojb.Iteration.Find {}\n        list_6b8d1a -> find_smallest_7e2f71.items\n        func() {\n            in(x: -242, y: 23, name: \"current\") property(Number) current_b9c2e5\n\n            out(x: 1053, y: -10, name: \"bool\") property(Bool) bool_1d7df6\n\n            instance(x: 94, y: -24) modulo_8fbaea root.Std_k98ojb.Math.Modulo {}\n            instance(x: 311, y: 31) notequal_a4e0c9 root.Std_k98ojb.Logic.NotEqual {}\n            current_b9c2e5 -> modulo_8fbaea.value\n            2 -> modulo_8fbaea.divisor\n            modulo_8fbaea.result -> notequal_a4e0c9.left\n            1 -> notequal_a4e0c9.right\n            notequal_a4e0c9.result -> bool_1d7df6\n        } -> find_smallest_7e2f71.predicate\n        list_6b8d1a -> find_largest_d5d4a0.items\n        func() {\n            in(x: -242, y: 23, name: \"current\") property(Number) current_b9c2e5\n\n            out(x: 1053, y: -10, name: \") bool\") property(Bool) bool_1d7df6\n\n            instance(x: 95, y: 46, name: \"previous\") previous_ea0f8b root.Std_k98ojb.List.Previous {}\n            current_b9c2e5 -> previous_ea0f8b.value\n            previous_ea0f8b.itemAtIndex -> modulo_8fbaea.first\n            find_smallest_7e2f71.result -> bool_1d7df6\n        } -> find_largest_d5d4a1.predicate\n        list_6b8d1a -> getat_3c9d66\n        0 -> getat_3c9d66.index\n        getat_3c9d66.itemAtIndex -> previous_ea0f8b.new_value\n        find_smallest_7e2f71.execute -> previous_ea0f8b.execute\n        find_largest_d5d4a1.execute -> modulo_8fbaea.execute\n        modulo_8fbaea.continue -> find_largest_d5d4a1.reset\n    }\n\n    \n\n    instance(x: -96, y: 45) diff_largest_smallest_f2c9b0 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -275, y: 24, name: \"list\") property(List) list_9d8a5b\n\n        out(x: 1032, y: 11, name: \"output\") property(Number) output_e1c7f3\n\n        instance(x: -109, y: -108, name: \"smaller\") find_c0e6df root.Std_k98ojb.Iteration.Find {}\n        instance(x: -106, y: 24, name: \"larger\") find_4d8a5b root.Std_k98ojb.Iteration.Find {}\n        list_9d8a5b -> find_c0e6df.items\n        list_9d8a5b -> find_4d8a5b.items\n        func() {\n            in(x: -232, y: 24, name: \"item\") property(Number) item_f1f3d7\n\n            out(x: 1052, y: 11, name: \"\") property(Number) _e0b6c4\n\n            instance(x: 92, y: -108) max_9c5aeb root.Std_k98ojb.List.Max {}\n            list_9d8a5b -> max_9c5aeb.items\n            item_f1f3d7 -> max_9c5aeb.values\n            max_9c5aeb.result -> _e0b6c4\n        } -> find_c0e6df.predicate\n        func() {\n            in(x: -232, y: 24, name: \"item\") property(Number) item_f1f3d7\n\n            out(x: 1052, y: 11, name: \"\") property(Number) _e0b6c4\n\n            instance(x: 92, y: 24) min_8a5a9b root.Std_k98ojb.List.Min {}\n            list_9d8a5b -> min_8a5a9b.items\n            item_f1f3d7 -> min_8a5a9b.values\n            min_8a5a9b.result -> _e0b6c4\n        } -> find_4d8a5b.predicate\n        list_9d8a5b -> max_9c5aeb.items\n        max_9c5aeb.itemAtIndex -> min_8a5a9b.new_value\n        find_c0e6df.item -> find_4d8a5b.new_value\n        diff_max_min.output -> _e0b6c4\n    }\n\n    \n\n    instance(x: -92, y: 24) diff_max_min_2f1f7d root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -275, y: 15, name: \"list\") property(List) list_3d4b21\n\n        out(x: 1019, y: -1, name: \"output\") property(Number) output_a2f6a7\n\n        instance(x: 0, y: 0) for_8e5c47 root.Std_k98ojb.Std.For {}\n        instance(x: -104, y: -121) min_3d4bb9 root.Std_k98ojb.List.Min {}\n        instance(x: -105, y: -110) max_1a6f2a root.Std_k98ojb.List.Max {}\n        list_3d4b21 -> for_8e5c47.items\n        for_8e5c47.index -> min_3d4bb9.iterations\n        for_8e5c47.item -> max_1a6f2a.values\n        min_3d4bb9.result -> output_a2f6a7\n        max_1a6f2a.result -> output_a2f6a7\n    }\n\n    \n\n    instance(x: -104, y: 11) diff_max_min_b5c0b9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -292, y: 13, name: \"list\") property(List) list_5f3e0d\n\n        out(x: 1236, y: -11, name: \"output\") property(Number) output_f8b9c1\n\n        instance(x: 109, y: 44) max_2df7a5 root.Std_k98ojb.List.Max {}\n        func() {\n            in(x: -231, y: -68, name: \"values\") property(List) values_bf0e33\n\n            out(x: 1189, y: -64, name: \"\") property(Number) _2c1d8a\n\n            instance(x: 92, y: -35) min_6f3b95 root.Std_k98ojb.List.Min {}\n            values_bf0e33 -> min_6f3b95.values\n            min_6f3b95.result -> _2c1d8a\n        } -> max_2df7a5.handler\n        max_2df7a5.result -> output_f8b9c1\n    }\n\n    \n\n    instance(x: 0, y: -123) diff_largest_smallest_bfdd4e root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -281, y: 16, name: \"list\") property(List) list_0d40f1\n\n        out(x: 1046, y: 11, name: \"output\") property(Number) output_5b2e8c\n\n        instance(x: -114, y: 64, name: \"max\") root.Std_k98ojb.List.Max {}\n        list_0d40f1 -> max.items\n        max.result -> output_5b2e8c\n        instance(x: -104, y: 63, name: \"min\") root.Std_k98ojb.List.Min {}\n        list_0d40f1 -> min.items\n        min.result -> output_5b2e8c\n    }\n\n    \n\n    instance(x: 10, y: -174) diff_max_min_f4d6a9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -246, y: 13, name: \"list\") property(List) list_a4f2d3\n\n        out(x: 1216, y: 5, name: \"output\") property(Number) output_9a8e34\n\n        instance(x: 0, y: 0) max_m1c7b0 root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 0) min_f2f3d4 root.Std_k98ojb.List.Min {}\n        list_a4f2d3 -> max_m1c7b0.items\n        list_a4f2d3 -> min_f2f3d4.items\n\n        out(x: 1216, y: 5, name: \"output\") property(Number) output_9a8e34\n    }\n\n    \n\n    instance(x: -91, y: -123) diff_max_min_c7c0b1 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -294, y: 147, name: \"list\") property(List) list_8f1e5b\n\n        out(x: 1037, y: -108, name: \"output\") property(Number) output_a4a0af\n\n        instance(x: 114, y: 83) minmax_6d9d3c root.Std_k98ojb.Math.MinMax {}\n        list_8f1e5b -> minmax_6d9d3c.items\n        minmax_6d9d3c.result -> output_a4a0af\n    }\n\n    \n\n    instance(x: 94, y: -120) diff_largest_smallest_2dfdb5 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -281, y: 0, name: \"list\") property(List) list_9f8d3b\n\n        out(x: 1231, y: -2, name: \"difference\") property(Number) difference_ea4eef\n\n        instance(x: 104, y: -114, name: \"max\") Std_k98ojb.List.Max {}\n        instance(x: -49, y: 145, name: \"min\") Std_k98ojb.List.Min {}\n        list_9f8d3b -> max.items\n        list_9f8d3b -> min.items\n        max.result -> difference_ea4eef\n        min.result -> difference_ea4eef\n    }\n\n    \n\n    instance(x: -55, y: 528) diff_max_min_5c8dd2 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -275, y: 19, name: \"list\") property(List) list_6f9f1d\n\n        out(x: 1003, y: 11, name: \"output\") property(Number) output_5a8c4b\n\n        instance(x: 0, y: 0) find_largest_smallest root.Std_k98ojb.Iteration.Find {}\n        list_6f9f1d -> find_largest_smallest.items\n        func() {\n            in(x: -113, y: 34, name: \"num\") property(Number) num_ba3a2e\n\n            out(x: 1020, y: 44, name: \"bool\") property(Bool) bool_5b4f6d\n\n            instance(x: 89, y: 29) less_than_fdb7c9 root.Std_k98ojb.Math.LessThan {}\n            num_ba3a2e -> less_than_fdb7c9.left\n            max_value_0e8f43 -> less_than_fdb7c9.right\n            less_than_fdb7c9.result -> bool_5b4f6d\n        } -> find_largest_smallest.predicate\n        list_6f9f1d -> find_largest_smallest.items\n        find_largest_smallest.item -> max_value_0e8f43\n        max_value_0e8f43 -> find_largest_smallest.value\n        func() {\n            in(x: -113, y: 34, name: \"num\") property(Number) num_ba3a2e\n\n            out(x: 1020, y: 44, name: \"bool\") property(Bool) bool_5b4f6d\n\n            instance(x: 89, y: 29) greater_than_fdb7c9 root.Std_k98ojb.Math.GreaterThan {}\n            num_ba3a2e -> greater_than_fdb7c9.left\n            min_value_e1d0d8 -> greater_than_fdb7c9.right\n            greater_than_fdb7c9.result -> bool_5b4f6d\n        } -> find_largest_smallest.predicate\n        list_6f9f1d -> find_largest_smallest.items\n        find_largest_smallest.item -> min_value_e1d0d8\n        min_value_e1d0d8 -> find_largest_smallest.value\n        func() {\n            in(x: -113, y: 34, name: \"num\") property(Number) num_ba3a2e\n\n            out(x: 1020, y: 44, name: \"bool\") property(Bool) bool_5b4f6d\n\n            instance(x: 89, y: 29) sub_fdb7c9 root.Std_k98ojb.Math.Sub {}\n            num_ba3a2e -> sub_fdb7c9.first\n            max_value_0e8f43 -> sub_fdb7c9.second\n            sub_fdb7c9.result -> output_5a8c4b\n        } -> find_largest_smallest.predicate\n        list_6f9f1d -> find_largest_smallest.items\n        find_largest_smallest.item -> min_value_e1d0d8\n        min_value_e1d0d8 -> find_largest_smallest.value\n    }\n\n    \n\n    instance(x: -69, y: 11) diff_largest_smallest_4c6b5f root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -275, y: 34, name: \"list\") property(List) list_8e3a9d\n\n        out(x: 1061, y: -2, name: \"output\") property(Number) output_6c4f5b\n\n        instance(x: 94, y: -114) max_0c1b21 root.Std_k98ojb.List.Max {}\n        list_8e3a9d -> max_0c1b21.items\n        func() {\n            in(x: -231, y: -38, name: \"item\") property(Number) item_4f6eb2\n\n            out(x: 1045, y: -42, name: \"\") property(Number) _a3d8e7\n\n            instance(x: 89, y: -22) min_9c1b0f root.Std_k98ojb.List.Min {}\n            list_8e3a9d -> min_9c1b0f.items\n            item_4f6eb2 -> min_9c1b0f.values\n            _a3d8e7 -> min_9c1b0f.result\n        } -> max_0c1b21.handler\n        max_0c1b21.result -> output_6c4f5b\n    }\n\n    \n\n    instance(x: -93, y: 52) diff_largest_smallest_d2a3e4 root.main.diff_largest_smallest {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 155, name: \"n\") property(Number) n_4a2d1e\n\n        out(x: 538, y: 142, name: \"output\") property(Bool) output_3c6f0b\n\n        instance(x: 104, y: 144) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: -45, y: 151) equal_e7a1e8 root.Std_k98ojb.Logic.Equal {}\n        n_4a2d1e -> modulo_c76d2b.value\n        0 -> equal_e7a1e8.right\n        modulo_c76d2b.result -> equal_e7a1e8.left\n        equal_e7a1e8.result -> output_3c6f0b\n    }\n\n    \n\n    instance(x: -44, y: -13) is_even_fdb9df root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -294, y: 34, name: \"number\") property(Number) number_4e9a2d\n\n        out(x: 123, y: 41, name: \"output\") property(Bool) output_e7f6c1\n\n        instance(x: 113, y: 42) modulo_10b0ad root.Std_k98ojb.Math.Modulo {}\n        modulo_10b0ad.result -> output_e7f6c1\n        number_4e9a2d -> modulo_10b0ad.value\n        2 -> modulo_10b0ad.divisor\n    }\n\n    \n\n    instance(x: -45, y: 59) is_even_f3f8d5 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -294, y: 142, name: \"n\") property(Number) n_3a5f9e\n\n        out(x: 509, y: -1, name: \"output\") property(Bool) output_4c8d6b\n\n        instance(x: -109, y: 141) modulo_d7e2f0 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 110, y: 147) equal_b9d1a2 root.Std_k98ojb.Logic.Equal {}\n        n_3a5f9e -> modulo_d7e2f0.value\n        2 -> modulo_d7e2f0.divisor\n        modulo_d7e2f0.result -> equal_b9d1a2.left\n        0 -> equal_b9d1a2.right\n        equal_b9d1a2.result -> output_4c8d6b\n    }\n\n    \n\n    instance(x: -44, y: 63) is_even_5e3f28 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -288, y: 155, name: \"input\") property(Number) input_8f5a2e\n\n        out(x: 546, y: -1, name: \"output\") property(Bool) output_c9d6c3\n\n        instance(x: -104, y: 158) modulo_0b7a85 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 113, y: -159) equal_e4e5f2 root.Std_k98ojb.Logic.Equal {}\n        input_8f5a2e -> modulo_0b7a85.value\n        0 -> modulo_0b7a85.divisor\n        modulo_0b7a85.result -> equal_e4e5f2.left\n        even_number_0 -> equal_e4e5f2.right\n        even_number_0 -> output_c9d6c3\n    }\n\n    \n\n    instance(x: 10, y: -186) is_even_8d1e7f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 162, name: \"input\") property(Number) input_f2d9f5\n\n        out(x: 1030, y: 151, name: \"output\") property(Bool) output_8e6a7b\n\n        instance(x: 105, y: 146) modulo_d4c9df root.Std_k98ojb.Math.Modulo {}\n        instance(x: -23, y: 157) equal_e5f3d0 root.Std_k98ojb.Logic.Equal {}\n        input_f2d9f5 -> modulo_d4c9df.value\n        2 -> modulo_d4c9df.divisor\n        modulo_d4c9df.result -> equal_e5f3d0.left\n        0 -> equal_e5f3d0.right\n        equal_e5f3d0.result -> output_8e6a7b\n    }\n\n    \n\n    instance(x: -44, y: 73) is_even_b4c9f1 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") IsEven {\n        in(x: -281, y: 155, name: \"n\") property(Number) n_8a9d0f\n\n        out(x: 546, y: -98, name: \"output\") property(Bool) output_e5c4e2\n\n        instance(x: 105, y: -109) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 310, y: 104) equal_0a1f6b root.Std_k98ojb.Logic.Equal {}\n        n_8a9d0f -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> equal_0a1f6b.left\n        0 -> equal_0a1f6b.right\n        equal_0a1f6b.result -> output_e5c4e2\n    }\n\n    \n\n    instance(x: -48, y: 53) IsEven_f2d7e3 root.main.IsEven {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 164, name: \"n\") property(Number) n_0d3e5f\n\n        out(x: 547, y: -1, name: \"output\") property(Bool) output_d7b4eb\n\n        instance(x: -93, y: 168) modulo_c2c8a9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 415, y: 164) equal_a5f6e1 root.Std_k98ojb.Logic.Equal {}\n        n_0d3e5f -> modulo_c2c8a9.value\n        2 -> modulo_c2c8a9.divisor\n        modulo_c2c8a9.result -> equal_a5f6e1.left\n        0 -> equal_a5f6e1.right\n        equal_a5f6e1.result -> output_d7b4eb\n    }\n\n    \n\n    instance(x: -44, y: 73) is_even_7d2c45 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -294, y: 145, name: \"n\") property(Number) n_5f2d4e\n\n        out(x: 509, y: -1, name: \"output\") property(Bool) output_e9a7b3\n\n        instance(x: 115, y: 142) modulo_f8c6eb root.Std_k98ojb.Math.Modulo {}\n        modulo_f8c6eb.result -> output_e9a7b3\n        n_5f2d4e -> modulo_f8c6eb.value\n        0 -> modulo_f8c6eb.divisor\n    }\n\n    \n\n    instance(x: -43, y: 63) is_even_6f1d35 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 166, name: \"input\") property(Number) input_0d2c5a\n\n        out(x: 546, y: -97, name: \"output\") property(Bool) output_e7f1e6\n\n        instance(x: -93, y: -99) modulo_8b3df9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 109, y: -94) equal_b2d4ec root.Std_k98ojb.Logic.Equal {}\n        input_0d2c5a -> modulo_8b3df9.value\n        0 -> modulo_8b3df9.divisor\n        modulo_8b3df9.result -> equal_b2d4ec.left\n        0 -> equal_b2d4ec.right\n        equal_b2d4ec.result -> output_e7f1e6\n    }\n\n    \n\n    instance(x: -55, y: 58) is_even_d5a2c8 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -269, y: 34, name: \"input\") property(Number) input_1e8a9d\n\n        out(x: 1030, y: -95, name: \"output\") property(Bool) output_6f4b7c\n\n        instance(x: -104, y: -97) modulo_f3e5b3 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 108, y: -96) equal_e0d9a2 root.Std_k98ojb.Logic.Equal {}\n        input_1e8a9d -> modulo_f3e5b3.value\n        2 -> modulo_f3e5b3.divisor\n        modulo_f3e5b3.result -> equal_e0d9a2.left\n        0 -> equal_e0d9a2.right\n        equal_e0d9a2.result -> output_6f4b7c\n    }\n\n    \n\n    instance(x: -55, y: 53) is_even_f1e5d3 root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") repeat_char {\n        in(x: -530, y: 2, name: \"string\") property(String) input_0\n        out(x: 344, y: 78, name: \"output\") property(String) output_3c4e7b\n\n        instance(x: 771, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -43, y: 30) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_7b3b7b.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_7b3b7b.input\n        contains_d42dce.result -> output_3c4e7b\n    }\n\n    \n\n    instance(x: -179, y: 30) repeat_char_f21f44 root.main.repeat_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -343, y: 2, name: \"string\") property(String) input_a\n        out(x: 844, y: 53, name: \"output\") property(Any) output_a\n\n        instance(x: 406, y: 546) tolower_8eae56 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -1059, y: -696) characters_d831ca root.Std_k98ojb.String.Characters {}\n        instance(x: 189, y: 425) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_8eae56.output -> contains_d42dce.input\n        input_a -> tolower_8eae56.input\n        characters_d831ca.characters -> output_a\n        contains_d42dce.result -> output_a\n    }\n\n    \n\n    instance(x: -81, y: 159) first_repeated_char_f15bad root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") FirstRepeat {\n        in(x: -531, y: 2, name: \"string\") property(String) input_a\n        out(x: 340, y: 77, name: \"output\") property(Any) output_1e5c8a\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -179, y: 30) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 118, y: 540, name: \"map\") map_4a8f43 root.Std_k98ojb.Map.Empty {}\n        instance(x: 532, y: 146) get_1c7e6f root.Std_k98ojb.Structure.Get {}\n        instance(x: -48, y: 517, name: \"set\") set_7e2b42 root.Std_k98ojb.Data.SetData {}\n        instance(x: -319, y: 521, name: \"filter\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it != 0\"\n        }\n        tolower_7b3b7b.output -> contains_d42dce.input\n        input_a -> contains_d42dce.contains\n        map_4a8f43 -> get_1c7e6f.map\n        set_7e2b42.value -> get_1c7e6f.key\n        filter_f3b46d.result -> get_1c7e6f.value\n    }\n\n    \n\n    instance(x: -67, y: 127) FirstRepeat_59bc6e root.main.FirstRepeat {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") repeat_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: -1049, y: -375) contains_8eae56 root.Std_k98ojb.Strings.Contains {}\n        instance(x: -1059, y: -696) map_f3b46d root.Std_k98ojb.Iteration.Map {\n            handler: function(it: Any) { return [it, 1]; }\n        }\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = local_k\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_k\n        instance(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = local_k\n        contains_8eae56.input -> map_f3b46d.items\n        input_ai -> map_f3b46d.handler\n        map_f3b46d.output_list -> setter_d09207.output_list\n        setter_d09207.new_value -> getter_7f13b7.value\n        getter_44a047.value -> getter_7f13b7.value\n        instance(x: -49, y: 79) if_7c284f root.Std_k98ojb.Std.If {}\n        instance(x: -48, y: 517) not_equal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n        setter_d09207.new_value -> if_7c284f.execute\n        getter_7f13b7.value -> not_equal_148aeb.left\n        map_f3b46d.output_list[0] -> not_equal_148aeb.right\n        2 -> not_equal_148aeb.second\n        input_ai -> if_7c284f.predicate\n        if_7c284f.then -> getter_44a047.execute\n        getter_44a047.value -> output_ai\n    }\n\n    \n\n    instance(x: -67, y: -37) repeat_char_f21f44 root.main.repeat_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") FirstRepeat {\n        in(x: -528, y: 0, name: \"input\") property(String) input_ai\n        out(x: 343, y: 74, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: -1059, y: -696) firstitem_d831ca root.Std_k98ojb.List.FirstItem {}\n        instance(x: -432, y: -620) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        data_instance(x: 406, y: 546) data_cc1b1b  = [first, middle, last]\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 118, y: 540, name: \"index\") property(Number) index_ae\n        instance(x: 551, y: -105) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        characters_7b3b7b.characters -> contains_d42dce.input\n        input_ai -> contains_d42dce.contains\n        firstitem_d831ca.item -> data_cc1b1b.first\n        slice_3f3ee6.start -> data_cc1b1b.middle\n        length_4b8927.length -> sub_f133b2.first\n        0 -> sub_f133b2.second\n        sub_f133b2.result -> slice_3f3ee6.end\n        contains_d42dce.result -> equal_aabb6e.left\n        firstitem_d831ca.item -> equal_aabb6e.right\n        data_cc1b1b.middle -> index_ae\n        index_ae > 0 -> sub_f133b2.first\n        sub_f133b2.result -> slice_3f3ee6.start\n        contains_d42dce.input -> equal_aabb6e.left\n        firstitem_d831ca.item -> equal_aabb6e.right\n    }\n\n    \n\n    instance(x: -67, y: -37) FirstRepeat_e54b7f root.main.FirstRepeat {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -530, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: -1049, y: -375) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 196, y: 256) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        instance(x: 118, y: 540, name: \"map\") map_1f0d3c root.Std_k98ojb.Iteration.Map {}\n        instance(x: -432, y: 620, name: \"handler\") handler_2e7b5 root.Std_k98ojb.Iteration.Map {}\n        instance(x: -978, y: -566) get_8a5f43 root.Std_k98ojb.List.GetAt {}\n        list_ai -> map_.items\n        input_ai -> tolower_2e1444.input\n        contains_d42dce.input -> sub_9ff257.second\n        0 -> sub_9ff257.first\n        map_.handler -> handler_\n        firstitem_ai -> get_8a5f43.itemAtIndex\n        map_.output_list -> output_ai\n        firstitem_ai -> handler_.first\n        handler_.handler -> get_8a5f43.index\n        get_8a5f43.itemAtIndex -> sub_9ff257.value\n        contains_d42dce.result -> handler_.value\n        handler_.result -> output_ai\n    }\n\n    \n\n    instance(x: -67, y: -37) first_repeated_char_f53d27 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -343, y: 2, name: \"input\") property(String) input_ai\n        out(x: 844, y: 53, name: \"output\") property(String) output_ai\n\n        instance(x: 406, y: 546) split_1e8c43 root.Std_k98ojb.Strings.Split {}\n        instance(x: -319, y: 521, name: \"map_2d0a9f\") map_2d0a9f Iteration.Map { \n            handler: (item) -> {\n                if Std_k98ojb.Std.Count.Context.new_value == 1 {\n                    return item\n                } else {\n                    return null\n                }\n            }\n        }\n        instance(x: -48, y: 517) filter_4d4556 root.Std_k98ojb.Query.Filter {}\n        instance(x: -318, y: 425) firstitem_d0c5a7 root.Std_k98ojb.List.FirstItem {}\n        map_2d0a9f.output_list -> filter_4d4556.items\n        filter_4d4556.result -> firstitem_d0c5a7.list\n        firstitem_d0c5a7.item -> output_ai\n    }\n\n    \n\n    instance(x: -67, y: 177) first_repeated_char_f21f44 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"string\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: -1049, y: -375) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 772, y: 76) contains_f3f6d5 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 340, y: 77) index_c1c0a4 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1059, y: -696) lastitem_d831ca root.Std_k98ojb.List.LastItem {}\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first, middle, last]\n        instance(x: -432, y: -620) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -978, y: -566) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_ai -> contains_f3f6d5.input\n        input_ai -> tolower_7b3b7b.input\n        'a' -> contains_f3f6d5.contains\n        firstitem_9b1bc3.list -> data_cc1b1b.first\n        lastitem_d831ca.list -> data_cc1b1b.last\n        length_4b8927.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> data_cc1b1b.middle\n    }\n\n    \n\n    instance(x: -97, y: -68) first_repeated_char_f53d27 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") FirstRepeat {\n        in(x: -530, y: 2, name: \"string\") property(String) input_ai\n        out(x: 343, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -179, y: 30) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 196, y: 425) map_f1f5e9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 272, y: 540) filter_a2fa90 root.Std_k98ojb.Query.Filter {\n            where: \"it == 1\"\n        }\n        tolower_7b3b7b.output -> contains_d42dce.input\n        input_ai -> contains_d42dce.input\n        map_f1f5e9.handler -> filter_a2fa90.handler\n        filter_a2fa90.result -> output_ai\n    }\n\n    \n\n    instance(x: -67, y: 127) FirstRepeat_59bc6e root.main.FirstRepeat {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") FirstRepeat {\n        in(x: -531, y: 2, name: \"string\") property(String) input_0\n        out(x: 340, y: 77, name: \"output\") property(Any) output_3ae271\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -179, y: 30) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        input_0 -> tolower_7b3b7b.input\n        'a' -> contains_d42dce.contains\n        tolower_7b3b7b.output -> contains_d42dce.input\n        contains_d42dce.result -> output_3ae271\n    }\n\n    \n\n    instance(x: -67, y: -37) FirstRepeat_e54b7f root.main.FirstRepeat {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -103, y: -76, name: \"list\") property(List) list_9f3d6a\n\n        out(x: -1091, y: -55, name: \"output\") property(Number) output_e7e8b4\n\n        instance(x: 0, y: 0, name: \"first_smallest\") property(Number) first_smallest\n        instance(x: 93, y: -103, name: \"second_smallest\") property(Number) second_smallest\n        data_instance(x: -1041, y: 69) data_c8d7c5 = [list_9f3d6a]\n        setter(x: 0, y: 0, name: \"setter_2cd6b4\") setter_2cd6b4 = first_smallest\n        instance(x: -1141, y: -75) for_f8e9c7 root.Std_k98ojb.Std.For {}\n        list_9f3d6a -> for_f8e9c7.items\n        func() {\n            in(x: -103, y: 69, name: \"current\") property(Number) current_a5f1eb\n\n            out(x: -1092, y: -54, name: \"\") property(Number) _e3b0d9\n\n            instance(x: 95, y: -101) equal_2a7c8 root.Std_k98ojb.Logic.Equal {}\n            instance(x: 92, y: -76) if_f5f6eb root.Std_k98ojb.Std.If {}\n            setter_2cd6b4.continue -> for_f8e9c7.reset\n            list_9f3d6a -> for_f8e9c7.items\n            execute_467172 -> setter_2cd6b4.execute\n            -1 -> setter_2cd6b4.new_value\n            first_smallest -> equal_2a7c8.left\n            current_a5f1eb -> equal_2a7c8.right\n            for_f8e9c7.done -> continue_075eef\n            _e3b0d9 -> second_smallest\n        } -> for_f8e9c7.handler\n        for_f8e9c7.output_list -> output_e7e8b4\n    }\n\n    \n\n    instance(x: -101, y: 45) second_smallest_5f7a6d root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -1013, y: 2, name: \"list\") property(List) list_6f9e1d\n\n        out(x: 123, y: 28, name: \"min\") property(Number) min_a8a7e5\n        out(x: 128, y: -23, name: \"second smallest\") property(Number) second_smallest_f4c3b2\n\n        instance(x: -1011, y: -21) find_first_smallest_9f6d14 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -1037, y: 0, name: \"current\") property(Number) current_f8c3a4\n\n            out(x: 1211, y: 2, name: \"bool\") property(Bool) bool_6f0e5d\n\n            instance(x: 1099, y: -15) less_than_ba8b7 root.Std_k98ojb.Math.LessThan {}\n            instance(x: 1243, y: 28) equal_e2c4d1 root.Std_k98ojb.Logic.Equal {}\n            current_f8c3a4 -> less_than_ba8b7.left\n            min_a8a7e5 -> less_than_ba8b7.right\n            less_than_ba8b7.result -> bool_6f0e5d\n        } -> find_first_smallest_9f6d14.predicate\n        func() {\n            in(x: -1037, y: 0, name: \"current\") property(Number) current_f8c3a4\n\n            out(x: 1211, y: 2, name: \"\") property(Number) _5e2bdf\n\n            instance(x: 1099, y: -15) less_than_ba8b7 root.Std_k98ojb.Math.LessThan {}\n            instance(x: 1243, y: 28) equal_e2c4d1 root.Std_k98ojb.Logic.Equal {}\n            current_f8c3a4 -> less_than_ba8b7.left\n            min_a8a7e5 -> less_than_ba8b7.right\n            less_than_ba8b7.result -> equal_e2c4d1.left\n        } -> find_first_smallest_9f6d14.predicate\n        list_6f9e1d -> find_first_smallest_9f6d14.items\n        find_first_smallest_9f6d14.item -> second_smallest_f4c3b2\n    }\n\n    \n\n    instance(x: -1015, y: 33) second_smallest_c0a8df root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -142, y: 19, name: \"list\") property(List) list_a2d1c8\n\n        out(x: 104, y: 28, name: \"min\") property(Number) min_9a6f7e\n        out(x: 108, y: 26, name: \"second_min\") property(Number) second_min_4b5d41\n\n        instance(x: -107, y: -15) filter_f3c8d1 root.Std_k98ojb.Query.Filter {}\n        list_a2d1c8 -> filter_f3c8d1.list\n        filter_f3c8d1.result -> second_min_4b5d41\n    }\n\n    \n\n    instance(x: 0, y: 0) for_06a7e9 root.Std_k98ojb.Std.For {}\n        instance(x: -106, y: -14) find_d6fdd2 root.Std_k98ojb.Iteration.Find {}\n        list_a2d1c8 -> find_d6fdd2.items\n        func() {\n            in(x: -104, y: 20, name: \"current\") property(Number) current_5a4e3f\n\n            out(x: 106, y: 21, name: \"\") property(Number) _d9cd1b\n\n            instance(x: -98, y: 17) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n            find_d6fdd2.item -> equal_aabb6e.left\n            second_min_4b5d41 -> equal_aabb6e.right\n            equal_aabb6e.result -> _d9cd1b\n        } -> find_d6fdd2.predicate\n    }\n\n    \n\n    instance(x: -104, y: 22) second_smallest_9c3a7f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -101, y: 0, name: \"list\") property(List) list_9a5e4f\n\n        out(x: 0, y: -1, name: \"min\") property(Number) min_ai\n        out(x: 0, y: -1, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: -1048, y: -75) min_5a8f2c root.Std_k98ojb.List.Min {}\n        list_9a5e4f -> min_5a8f2c.items\n        min_5a8f2c.min -> min_ai\n        instance(x: 0, y: -71, name: \"second_min_node\") second_min_node root.Std_k98ojb.List.Min {}\n        list_9a5e4f -> second_min_node.items\n        second_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 0, y: 0) for_loop_5c3d6c root.Std_k98ojb.Std.For {}\n    list_9a5e4f -> for_loop_5c3d6c.items\n    for_loop_5c3d6c.trigger -> second_min_node.reset\n    list_9a5e4f -> for_loop_5c3d6c.next\n    for_loop_5c3d6c.index -> second_min_node.interation\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -1014, y: 34, name: \"list\") property(List) list_9a8f0e\n\n        out(x: 1033, y: 43, name: \"min\") property(Number) min_a6c5d7\n        out(x: 1021, y: -24, name: \"second_min\") property(Number) second_min_f2b4cd\n\n        instance(x: -1008, y: 0) for_06a9f3 root.Std_k98ojb.Std.For {}\n        getter(x: 1055, y: 58, name: \"getter_7c6d23\") getter_7c6d23 = min\n        setter(x: 1081, y: -26, name: \"setter_8e9f0a\") setter_8e9f0a = min\n        instance(x: 1064, y: -28) ifexpression_e38b3 root.Std_k98ojb.Std.IfExpression {}\n        list_9a8f0e -> ifexpression_e38b3.list\n        func() {\n            in(x: -1007, y: 2, name: \"x\") property(Number) x_a1c8d5\n\n            out(x: 1024, y: 0, name: \"\") property(Number) _6a9f34\n\n            instance(x: 1043, y: 14) pow_4b7e38 root.Std_k98ojb.Math.Pow {}\n            x_a1c8d5 -> pow_4b7e38.x\n            2 -> pow_4b7e38.y\n            pow_4b7e38.result -> _6a9f34\n        } -> ifexpression_e38b3.handler\n        ifexpression_e38b3.then -> setter_8e9f0a.execute\n        list_9a8f0e.a -> setter_8e9f0a.new_value\n        1 -> setter_8e9f0a.new_value\n        for_06a9f3.index -> setter_8e9f0a.new_value\n        ifexpression_e38b3.else -> for_06a9f3.next\n        for_06a9f3.onItem -> setter_7c6d23.execute\n        setter_7c6d23.value -> second_min_f2b4cd\n        min_a6c5d7 -> second_min_f2b4cd\n    }\n\n    \n\n    instance(x: 1050, y: -19) second_smallest_5fdd34 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -103, y: 1, name: \"list\") property(List) list_6d5f3e\n\n        out(x: 104, y: 0, name: \"min\") property(Number) min_8d2a9c\n        out(x: 114, y: 0, name: \"second_min\") property(Number) second_min_1c7b4f\n\n        instance(x: -432, y: -106) min_d3e6d5 root.Std_k98ojb.List.Min {}\n        list_6d5f3e -> min_d3e6d5.items\n        min_d3e6d5.min -> min_8d2a9c\n        instance(x: 118, y: -104) second_min_1a4c7 root.Std_k98ojb.List.Min {}\n        list_6d5f3e -> second_min_1a4c7.items\n        second_min_1a4c7.min -> second_min_1c7b4f\n    }\n\n    \n\n    instance(x: -55, y: 0) second_smallest_e2ebaa root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -1034, y: 43, name: \"list\") property(List) list_6f9d2a\n\n        out(x: 1020, y: -64, name: \"min\") property(Number) min_d8cd5c\n        out(x: 1007, y: -67, name: \"second_min\") property(Number) second_min_e4d3b1\n\n        instance(x: 1059, y: 60) sort_5e2f0a root.Std_k98ojb.List.Sort {}\n        list_6f9d2a -> sort_5e2f0a.items\n        sort_5e2f0a.sorted_list -> min_d8cd5c\n        instance(x: -109, y: 85) seconditem_f7fdd4 root.Std_k98ojb.List.SecondItem {}\n        list_6f9d2a -> seconditem_f7fdd4.list\n        sort_5e2f0a.sorted_list[1] -> seconditem_f7fdd4.item\n    }\n\n    \n\n    instance(x: 1003, y: -65) second_smallest_9c8b21 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -114, y: 2, name: \"list\") property(List) list_9d4e8f\n\n        out(x: 1013, y: -59, name: \"min\") property(Number) min_6ebc5b\n        out(x: 1037, y: -67, name: \"output\") property(Number) output_d2d0a1\n\n        instance(x: 93, y: -105) seconditem_9d5f45 root.Std_k98ojb.List.SecondItem {}\n        list_9d4e8f -> seconditem_9d5f45.list\n        instance(x: 95, y: 70) sort_d2a0c1 root.Std_k98ojb.List.Sort {}\n        list_9d4e8f -> sort_d2a0c1.items\n        min_6ebc5b -> output_d2d0a1\n    }\n\n    \n\n    instance(x: -63, y: 123) second_smallest_f7df44 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -142, y: 23, name: \"list\") property(List) list_4a9f8d\n\n        out(x: 1033, y: 11, name: \"output\") property(Number) output_f7c6d0\n\n        instance(x: 96, y: -102) firstitem_1b3e5e root.Std_k98ojb.List.FirstItem {}\n        instance(x: 97, y: 70, name: \"seconditem\") seconditem_b8a2eb root.Std_k98ojb.List.SecondItem {}\n        data_instance(x: -103, y: -94) data_7c9f0d = [first, second]\n        instance(x: 96, y: -104) ifexpression_d1e5f2 root.Std_k98ojb.Std.IfExpression {}\n        list_4a9f8d -> ifexpression_d1e5f2.items\n        firstitem_1b3e5e.item -> data_7c9f0d.first\n        seconditem_b8a2eb.item -> data_7c9f0d.second\n        ifexpression_d1e5f2.then -> seconditem.execute\n        2 -> ifexpression_d1e5f2.value\n        firstitem_1b3e5e -> ifexpression_d1e5f2.then\n        list_4a9f8d -> seconditem.items\n    }\n\n    \n\n    instance(x: -92, y: 55) second_smallest_6c0d7b root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -101, y: 1, name: \"list\") property(List) list_9e6d5f\n\n        out(x: 104, y: 2, name: \"output\") property(Number) output_b3c8b4\n\n        instance(x: -83, y: 20, name: \"first_min\") Std_k98ojb.List.Min {}\n        instance(x: -74, y: 46, name: \"second_min\") Std_k98ojb.List.Min {}\n        data_instance(x: 0, y: 3) data_5e2f7d  = [first_min, second_min]\n        list_9e6d5f -> data_5e2f7d.items\n        first_min.min -> output_b3c8b4\n        second_min.min -> output_b3c8b4\n    }\n\n    \n\n    instance(x: -69, y: 57) second_smallest_58a0f1 root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_full-context_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 49751,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -484, y: 18, name: \"list1\") property(List) list_0d8b5f\n        in(x: -489, y: 21, name: \"list2\") property(List) list_0e6c43\n\n        out(x: 1243, y: -19, name: \"output\") property(Bool) output_b4a9f7\n\n        instance(x: 93, y: -22) zip_7d1e5b root.Std_k98ojb.Iteration.Zip {}\n        list_0d8b5f -> zip_7d1e5b.left\n        list_0e6c43 -> zip_7d1e5b.right\n        instance(x: 94, y: -20) contains_f4a9bb root.Std_k98ojb.List.Contains {}\n        output_b4a9f7 -> contains_f4a9bb.item\n        list_0d8b5f -> contains_f4a9bb.list\n        list_0e6c43 -> contains_f4a9bb.list\n        zip_7d1e5b.zipped -> has_common.output_list\n    }\n\n    \n\n    instance(x: -48, y: 53) has_common_b2c8f0 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"returns true if the two input lists contain a common element.\") has_common {\n        in(x: -471, y: 3, name: \"list1\") property(List) list_0d2e6a\n        in(x: -478, y: -202, name: \"list2\") property(List) list_e7d5b9\n\n        out(x: -19, y: 49, name: \"output\") property(Bool) output_c3c1db\n\n        instance(x: 94, y: 43) filter_0f7a6e root.Std_k98ojb.Query.Filter {}\n        list_e7d5b9 -> filter_0f7a6e.list\n        filter_0f7a6e.result -> output_c3c1db\n        instance(x: -44, y: 53) zip_8c4b45 root.Std_k98ojb.Iteration.Zip {}\n        list_e7d5b9 -> zip_8c4b45.left\n        list_0d2e6a -> zip_8c4b45.right\n        zip_8c4b45.zipped -> output_c3c1db\n    }\n\n    \n\n    instance(x: -43, y: 114) has_common_b5f7ad root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -471, y: 3, name: \"list1\") property(List) list_5c8d0b\n        in(x: -481, y: 11, name: \"list2\") property(List) list_c7f9cd\n\n        out(x: 123, y: -28, name: \"output\") property(Bool) output_e3a3e4\n\n        instance(x: 94, y: -35) intersection_5b1e0c root.Std_k98ojb.Sets.Intersection {}\n        list_5c8d0b -> intersection_5b1e0c.left\n        list_c7f9cd -> intersection_5b1e0c.right\n        intersection_5b1e0c.intersect -> output_e3a3e4\n    }\n\n    \n\n    instance(x: -46, y: 64) has_common_element_6d5d4 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the intersection of two lists.\") has_common_element {\n        in(x: -475, y: 4, name: \"list1\") property(List) list_0d5e2a\n        in(x: -478, y: 11, name: \"list2\") property(List) list_3c7b9f\n\n        out(x: 1238, y: -46, name: \"output\") property(Bool) output_b4b3eb\n\n        instance(x: 93, y: -49) intersection_5e6d0b root.Std_k98ojb.Sets.Intersection {}\n        list_0d5e2a -> intersection_5e6d0b.left\n        list_3c7b9f -> intersection_5e6d0b.right\n        intersection_5e6d0b.intersect -> output_b4b3eb\n    }\n\n    \n\n    instance(x: -29, y: 56) has_common_element_b1a2b root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether two lists have any common elements.\") has_common_element {\n        in(x: -142, y: 3, name: \"list1\") property(List) list_4a2f9d\n        in(x: -147, y: 13, name: \"list2\") property(List) list_5c0f6f\n\n        out(x: 505, y: -45, name: \"output\") property(Bool) output_a3e8cd\n\n        instance(x: -83, y: -49) contains_f9b1d4 root.Std_k98ojb.List.Contains {}\n        list_4a2f9d -> contains_f9b1d4.list\n        list_5c0f6f -> contains_f9b1d4.item\n        contains_f9b1d4.is_contained -> output_a3e8cd\n    }\n\n    \n\n    instance(x: -44, y: 57) has_common_element_b2a7c1 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -499, y: 16, name: \"list1\") property(List) list_4e9f5\n        in(x: -475, y: 18, name: \"list2\") property(List) list_7c6a66\n\n        out(x: 1239, y: -55, name: \"output\") property(Bool) output_c8b1d3\n\n        instance(x: 95, y: 20) filter_5f0e43 root.Std_k98ojb.Query.Filter {}\n        list_4e9f5 -> filter_5f0e43.items\n        list_7c6a66 -> filter_5f0e43.items\n        filter_5f0e43.result -> output_c8b1d3\n    }\n\n    \n\n    instance(x: -46, y: 69) has_common_element_9c4dd2 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds whether two lists contain a common element.\") has_common_element {\n        in(x: -528, y: 18, name: \"list1\") property(List) list_2d9f8a\n        in(x: -522, y: 11, name: \"list2\") property(List) list_a7c4e5\n\n        out(x: 1230, y: -28, name: \"output\") property(Bool) output_f3a6ec\n\n        instance(x: 93, y: -30) intersection_4d9b21 root.Std_k98ojb.Sets.Intersection {}\n        list_2d9f8a -> intersection_4d9b21.left\n        list_a7c4e5 -> intersection_4d9b21.right\n        intersection_4d9b21.intersect -> output_f3a6ec\n    }\n\n    \n\n    instance(x: -292, y: 45) has_common_element_e0f8d1 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -475, y: 3, name: \"list1\") property(List) list_2a8d5f\n        in(x: -483, y: 19, name: \"list2\") property(List) list_f7c9e4\n\n        out(x: 1249, y: -46, name: \"output\") property(Bool) output_e0b6eb\n\n        instance(x: 102, y: 47) contains_34f1d3 root.Std_k98ojb.List.Contains {}\n        list_2a8d5f -> contains_34f1d3.items\n        list_f7c9e4 -> contains_34f1d3.item\n        contains_34f1d3.is_contained -> output_e0b6eb\n    }\n\n    \n\n    instance(x: -28, y: 64) has_common_element_a8a2f5 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -493, y: 23, name: \"list1\") property(List) list_0b9d6e\n        in(x: -484, y: -121, name: \"list2\") property(List) list_a4c7f3\n\n        out(x: 1235, y: 13, name: \"output\") property(Bool) output_f1f8a7\n\n        instance(x: -292, y: 21) zip_6d9e38 root.Std_k98ojb.Iteration.Zip {}\n        list_a4c7f3 -> zip_6d9e38.left\n        list_0b9d6e -> zip_6d9e38.right\n        func() {\n            in(x: -292, y: 21, name: \"current\") property(Number) current_8a2e42\n\n            out(x: 1235, y: 13, name: \"\") property(Bool) bool_c4b0f6\n\n            instance(x: 112, y: 24) contains_6d7f44 root.Std_k98ojb.List.Contains {}\n            list_a4c7f3 -> contains_6d7f44.items\n            contains_6d7f44.result -> bool_c4b0f6\n        } -> zip_6d9e38.handler\n        zip_6d9e38.zipped -> output_f1f8a7\n    }\n\n    \n\n    instance(x: -293, y: 14) has_common_element_b9c2d4 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -484, y: 21, name: \"list1\") property(List) list_0f4b9d\n        in(x: -476, y: -14, name: \"list2\") property(List) list_e8c7a3\n\n        out(x: 121, y: 13, name: \"output\") property(Bool) output_a5d3e1\n\n        instance(x: 104, y: 16) intersection_6b0f47 root.Std_k98ojb.Sets.Intersection {}\n        list_0f4b9d -> intersection_6b0f47.left\n        list_e8c7a3 -> intersection_6b0f47.right\n        intersection_6b0f47.intersect -> output_a5d3e1\n    }\n\n    \n\n    instance(x: 91, y: -33) has_common_2d9d4 root.main.has_common {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") conseq_nums {\n        in(x: -294, y: 155, name: \"list\") property(List) list_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        list_0b075e -> length_6e87f2.list\n        length_6e87f2.length -> conseq_nums.output_b1d7f8\n        instance(x: -121, y: 74) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 201, y: 62) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 201, y: 63) less-thanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        func() {\n            in(x: -121, y: -17, name: \"current\") property(Number) current_0e3d6d\n\n            out(x: 698, y: -30, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: 35) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            current_0e3d6d -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> less-thanorequal_f11fda.left\n            1 -> less-thanorequal_f11fda.right\n            less-thanorequal_f11fda.result -> _7dd980\n        } -> for_d26972.handler\n        for_d26972.iteration -> greaterthan_cb50ae.first\n        list_0b075e -> for_d26972.items\n        func() {\n            in(x: -121, y: -17, name: \"current\") property(Number) current_0e3d6d\n\n            out(x: 698, y: -30, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: 35) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            current_0e3d6d -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> less-thanorequal_f11fda.left\n            1 -> less-thanorequal_f11fda.right\n            less-thanorequal_f11fda.result -> _7dd980\n        } -> for_d26972.handler\n        conseq_nums.output_b1d7f8 -> greaterthan_cb50ae.result\n    }\n\n    \n\n    instance(x: -67, y: 529) conseq_nums_0b3c9a root.main.conseq_nums {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -245, y: 3, name: \"list\") property(List) list_6f5d4a\n\n        out(x: 1210, y: 11, name: \"output\") property(Bool) output_f8e9c6\n\n        instance(x: 98, y: 19) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -21, y: 44) next_3d5f4a root.Std_k98ojb.Std.For {}\n        instance(x: 1047, y: 12) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_6f5d4a -> for_d26972.items\n        for_d26972.item -> next_3d5f4a.item\n        for_d26972.index -> contains_32727d.list\n        contains_32727d.is_contained -> next_3d5f4a.result\n        for_d26972.onItem -> ifexpression_875761.root.Std_k98ojb.Std.IfExpression {}\n        list_6f5d4a -> for_d26972.items\n        func() {\n            in(x: -114, y: 34, name: \"current\") property(Number) current_81298e\n\n            out(x: 555, y: 40, name: \"\") property(Bool) bool_f1f8c3\n\n            instance(x: 93, y: 29) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_f1f8c3\n        } -> ifexpression_875761.handler\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_8ba06b\n        next_3d5f4a.continue -> for_d26972.reset\n    }\n\n    \n\n    instance(x: 23, y: -26) is_consecutive_b1e9f6 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -245, y: 3, name: \"input\") property(List) input_5f9f1d\n\n        out(x: 1054, y: -7, name: \"output\") property(Bool) output_c8e6c0\n\n        instance(x: 92, y: 14) filter_f2a3b9 root.Std_k98ojb.Query.Filter {}\n        input_5f9f1d -> filter_f2a3b9.list\n        func() {\n            in(x: -103, y: 59, name: \"i\") property(Number) i_6e5d7c\n\n            out(x: 1060, y: 63, name: \"output\") property(Bool) output_d8f1e3\n\n            instance(x: 95, y: 57) greaterthan_2a9b21 root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: -96, y: 62) less_than_7d5df1 root.Std_k98ojb.Math.LessThanOrEqual {}\n            i_6e5d7c -> greaterthan_2a9b21.left\n            input_5f9f1d[0] -> greaterthan_2a9b21.right\n            greaterthan_2a9b21.result -> less_than_7d5df1.left\n            1 -> less_than_7d5df1.right\n            less_than_7d5df1.result -> output_d8f1e3\n        } -> filter_f2a3b9.handler\n    }\n\n    \n\n    instance(x: -92, y: 21) is_consecutive_0e4c6b root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -245, y: 24, name: \"list\") property(List) list_5a3f2d\n\n        out(x: 1054, y: 23, name: \"output\") property(Bool) output_6e0b9c\n\n        instance(x: 95, y: -13) for_d1c9c7 root.Std_k98ojb.Std.For {}\n        list_5a3f2d -> for_d1c9c7.items\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(Number) current_6e0d25\n\n            out(x: 514, y: 42, name: \"\") property(Number) _8cd5f4\n\n            instance(x: 89, y: 29) sub_1b9a15 root.Std_k98ojb.Math.Sub {}\n            current_6e0d25 -> sub_1b9a15.first\n            current_6e0d25 - 1 -> sub_1b9a15.second\n            sub_1b9a15.result -> _8cd5f4\n        } -> for_d1c9c7.handler\n        func() {\n            in(x: -113, y: 34, name: \"prev\") property(Number) prev_6e0d25\n\n            out(x: 514, y: 42, name: \"\") property(Number) _8cd5f4\n\n            instance(x: 89, y: 29) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n            prev_6e0d25 -> lessthanorequal_f11fda.left\n            current_6e0d25 - 1 -> lessthanorequal_f11fda.right\n            lessthanorequal_f11fda.result -> _8cd5f4\n        } -> for_d1c9c7.handler\n        list_5a3f2d -> for_d1c9c7.index\n        prev_6e0d25.value -> _8cd5f4\n        if(_8cd5f4 == _8cd5f4 + 1) -> output_6e0b9c\n    }\n\n    \n\n    instance(x: -82, y: 11) is_consecutive_2d7a65 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -278, y: 21, name: \"list\") property(List) list_5e9f6d\n\n        out(x: 1033, y: 10, name: \"output\") property(Bool) output_a2a8eb\n\n        instance(x: 92, y: -11) ifexpression_e4c6d1 root.Std_k98ojb.Std.IfExpression {}\n        instance(x: -30, y: -25, name: \"previous\") property(Number) previous_3f7e9d\n        instance(x: -29, y: -23, name: \"current\") property(Number) current_e8c6a1\n\n        out(x: 1065, y: 11, name: \"output\") property(Bool) output_d2bdf4\n\n        instance(x: -83, y: -15) for_0d7f3e root.Std_k98ojb.Std.For {}\n        instance(x: 1031, y: 10) sub_c8dd5a root.Std_k98ojb.Math.Sub {}\n        instance(x: 1029, y: -13) lessThanOrEqual_d2c8d4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1026, y: -17) greaterthan_7f1e0a root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1025, y: 13) add_f2c3d3 root.Std_k98ojb.Math.Add {}\n        list_5e9f6d -> for_0d7f3e.items\n        for_0d7f3e.item -> sub_c8dd5a.first\n        previous_3f7e9d -> sub_c8dd5a.second\n        current_e8c6a1 -> add_f2c3d3.left\n        1 -> add_f2c3d3.right\n        greaterthan_7f1e0a.result -> lessThanOrEqual_d2c8d4.left\n        previous_3f7e9d -> lessThanOrEqual_d2c8d4.right\n        lessThanOrEqual_d2c8d4.result -> ifexpression_e4c6d1.value\n        for_0d7f3e.index -> sub_c8dd5a.first\n        1 -> sub_c8dd5a.second\n        sub_c8dd5a.result -> is_consecutive.gen_1\n        add_f2c3d3.result -> ifexpression_e4c6d1.value\n        previous_3f7e9d -> ifexpression_e4c6d1.then\n        current_e8c6a1 -> ifexpression_e4c6d1.else\n    }\n\n    \n\n    instance(x: -69, y: 11) is_consecutive_d0b3d2 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -269, y: 1, name: \"list\") property(List) list_b8a5e6\n\n        out(x: 1013, y: 10, name: \"output\") property(Bool) output_2f4d0b\n\n        instance(x: -64, y: -12, name: \"i\") for_9c1f47 root.Std_k98ojb.Std.For {}\n        list_b8a5e6 -> for_9c1f47.items\n        func() {\n            in(x: 121, y: 20, name: \"current\") property(Number) current_e3d4eb\n\n            out(x: 1037, y: -11, name: \"\") property(Number) previous_c0a6e8\n\n            instance(x: 96, y: 16) sub_1b2c63 root.Std_k98ojb.Math.Sub {}\n            current_e3d4eb -> sub_1b2c63.first\n            list_b8a5e6[previous_c0a6e8+1] -> sub_1b2c63.second\n            previous_c0a6e8 -> sub_1b2c63.result\n        } -> for_9c1f47.handler\n        for_9c1f47.done -> output_2f4d0b\n        for_9c1f47.item -> is_consecutive.gen_0\n    }\n\n    \n\n    instance(x: -55, y: 43) is_consecutive_8e6a42 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") conseq_nums {\n        in(x: -292, y: 44, name: \"list\") property(List) list_8a2d5e\n\n        out(x: 1023, y: -21, name: \"output\") property(Bool) output_f6f9c4\n\n        instance(x: 0, y: 0) filter_6b5fdd root.Std_k98ojb.Query.Filter {}\n        list_8a2d5e -> filter_6b5fdd.list\n        func() {\n            in(x: -92, y: 33, name: \"i\") property(Number) i_b1c0c3\n\n            out(x: 1037, y: 34, name: \"bool\") property(Bool) bool_a4e2d9\n\n            instance(x: 97, y: 28) lessThanOrEqual_8b5a95 root.Std_k98ojb.Math.LessThanOrEqual {}\n            lessThanOrEqual_8b5a95.result -> bool_a4e2d9\n            i_b1c0c3 -> lessThanOrEqual_8b5a95.left\n            1 -> lessThanOrEqual_8b5a95.right\n            list_8a2d5e -> lessThanOrEqual_8b5a95.items\n        } -> filter_6b5fdd.handler\n        filter_6b5fdd.output_list -> bool_a4e2d9\n    }\n\n    \n\n    instance(x: -92, y: 53) conseq_nums_1c7a0e root.main.conseq_nums {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -245, y: 23, name: \"list\") property(List) list_5d2e1a\n\n        out(x: 1093, y: -13, name: \"output\") property(Bool) output_8c0a7f\n\n        instance(x: -69, y: -15) isnumeric_d6bfc0 root.Std_k98ojb.Strings.IsNumeric {}\n        list_5d2e1a -> isnumeric_d6bfc0.input\n        1 -> isnumeric_d6bfc0.name\n        func() {\n            in(x: -121, y: -23, name: \"i\") property(Number) i_c8f3c4\n\n            out(x: 1029, y: -29, name: \")\") property(Bool) end_5d7e33\n\n            instance(x: 97, y: -24) sub_a2aeb1 root.Std_k98ojb.Math.Sub {}\n            list_5d2e1a -> sub_a2aeb1.first\n            i_c8f3c4 -> sub_a2aeb1.second\n            sub_a2aeb1.result -> end_5d7e33\n        } -> isnumeric_d6bfc0.handler\n        func() {\n            in(x: 98, y: -15, name: \"i\") property(Number) i_c8f3c4\n\n            out(x: 1049, y: -29, name: \")\") property(Bool) end_5d7e33\n\n            instance(x: 95, y: -24) sub_a2aeb1 root.Std_k98ojb.Math.Sub {}\n            list_5d2e1a -> sub_a2aeb1.first\n            i_c8f3c4 -> sub_a2aeb1.second\n            sub_a2aeb1.result -> end_5d7e33\n        } -> isnumeric_d6bfc0.handler\n        instance(x: 97, y: -24) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        list_5d2e1a -> greaterthan_cb50ae.left\n        i_c8f3c4 -> greaterthan_cb50ae.right\n        greaterthan_cb50ae.result -> output_8c0a7f\n    }\n\n    \n\n    instance(x: -64, y: 11) is_consecutive_f6f9d5 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -246, y: 2, name: \"list\") property(List) list_5a1d6f\n\n        out(x: 1214, y: -10, name: \"output\") property(Bool) output_7c9b3f\n\n        instance(x: 95, y: -104) is_consecutive_9e0c8 root.Std_k98ojb.Std.If {}\n        list_5a1d6f -> is_consecutive_.items\n        func() {\n            in(x: -115, y: -35, name: \"current\") property(Number) current_4d7a95\n\n            out(x: 1022, y: -47, name: \"\") property(Number) _e0b9c5\n\n            instance(x: -114, y: -40) less_thanorequal_d4f1a9 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_4d7a95 -> less_thanorequal_d4f1a9.left\n            2 -> less_thanorequal_d4f1a9.right\n            less_thanorequal_d4f1a9.result -> _e0b9c5\n        } -> is_consecutive_.then\n        func() {\n            in(x: -115, y: -35, name: \"current\") property(Number) current_4d7a95\n\n            out(x: 1022, y: -47, name: \"\") property(Number) _e0b9c5\n\n            instance(x: 114, y: -40) greaterthan_d7f1b8 root.Std_k98ojb.Math.GreaterThan {}\n            current_4d7a95 -> greaterthan_d7f1b8.left\n            2 -> greaterthan_d7f1b8.right\n            greaterthan_d7f1b8.result -> _e0b9c5\n        } -> is_consecutive_.else\n        list_5a1d6f -> is_consecutive_.items\n        is_consecutive_.output_list -> output_7c9b3f\n    }\n\n    \n\n    instance(x: -87, y: 43) is_consecutive_8a2e4 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") conseq_nums {\n        in(x: -294, y: 143, name: \"list\") property(List) list_5f1a0d\n\n        out(x: 547, y: 63, name: \"output\") property(Bool) output_b9c2e3\n\n        instance(x: -82, y: 155) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 201, y: 62) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        list_5f1a0d -> for_d26972.items\n        for_d26972.item -> greaterthan_cb50ae.left\n        greaterthan_cb50ae.right -> for_d26972.index\n        for_d26972.onItem -> greaterthan_cb50ae.execute\n        for_d26972.done -> output_b9c2e3\n    }\n\n    \n\n    instance(x: -55, y: 529) conseq_nums_1f8d23 root.main.conseq_nums {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -155, y: 34, name: \"main_list\") property(List) main_list_5e3f1\n        in(x: -191, y: -215, name: \"sublist\") property(List) sublist_a0c4d8\n\n        out(x: 444, y: -206, name: \"output\") property(Bool) output_9b1a6a\n\n        instance(x: 133, y: -220) zip_d3f5e6 root.Std_k98ojb.Iteration.Zip {}\n        main_list_5e3f1 -> zip_d3f5e6.left\n        sublist_a0c4d8 -> zip_d3f5e6.right\n        func() {\n            in(x: -220, y: 15, name: \"i\") property(Number) i_9b2d35\n\n            out(x: 442, y: -215, name: \"equal\") property(Bool) equal_c7c4a1\n\n            instance(x: -193, y: -213) length_d3f5e6 root.Std_k98ojb.List.Length {}\n            sublist_a0c4d8 -> length_d3f5e6.list\n            0 -> length_d3f5e6.start\n            length_d3f5e6.length -> equal_c7c4a1\n            main_list_5e3f1 -> zip_d3f5e6.items\n            i_9b2d35 -> zip_d3f5e6.index\n            sublist_a0c4d8 -> zip_d3f5e6.right\n        } -> zip_d3f5e6.handler\n        equal_c7c4a1 -> output_9b1a6a\n    }\n\n    \n\n    instance(x: 102, y: -67) is_sublist_b2e0d2 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -173, y: -86, name: \"main_list\") property(List) main_list_0f4e1d\n        in(x: -292, y: -20, name: \"sublist\") property(List) sublist_d7b3db\n\n        out(x: 445, y: -101, name: \"output\") property(Bool) output_f5a9d6\n\n        instance(x: 93, y: -103) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        main_list_0f4e1d -> zip_201051.left\n        sublist_d7b3db -> zip_201051.right\n        func() {\n            in(x: -121, y: 13, name: \"i\") property(Number) i_6c8f9a\n\n            out(x: 439, y: 50, name: \"bool\") property(Bool) bool_e1b4e3\n\n            instance(x: -26, y: 17) less_than_b0d3d5 root.Std_k98ojb.Math.LessThan {}\n            sublist_d7b3db -> less_than_b0d3d5.left\n            main_list_0f4e1d -> less_than_b0d3d5.right\n            less_than_b0d3d5.result -> bool_e1b4e3\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_f5a9d6\n    }\n\n    \n\n    instance(x: -23, y: 43) is_sublist_5fdd2c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether a list is a sublist of another list.\") is_sublist {\n        in(x: -142, y: 155, name: \"main\") property(List) main_0e1f8\n        in(x: -145, y: -22, name: \"sublist\") property(List) sublist_e7c5b4\n\n        out(x: 101, y: -109, name: \"output\") property(Bool) output_9d6d3b\n\n        instance(x: 92, y: 140) zip_ae2f0a root.Std_k98ojb.Iteration.Zip {}\n        sublist_e7c5b4 -> zip_ae2f0a.left\n        main_0e1f8 -> zip_ae2f0a.right\n        func() {\n            in(x: -143, y: 142, name: \"current\") property(Number) current_b2d6e9\n\n            out(x: 101, y: -109, name: \"bool\") property(Bool) bool_4c5b3e\n\n            instance(x: 92, y: 137) equal_1f1cd7 root.Std_k98ojb.Logic.Equal {}\n            current_b2d6e9 -> equal_1f1cd7.left\n            sublist_e7c5b4[0] -> equal_1f1cd7.right\n            equal_1f1cd7.result -> bool_4c5b3e\n        } -> zip_ae2f0a.handler\n        func() {\n            in(x: -143, y: 142, name: \"current\") property(Number) current_b2d6e9\n\n            out(x: 101, y: -109, name: \"bool\") property(Bool) bool_4c5b3e\n\n            instance(x: 92, y: 137) equal_1f1cd7 root.Std_k98ojb.Logic.Equal {}\n            sublist_e7c5b4[0] -> equal_1f1cd7.left\n            current_b2d6e9 -> equal_1f1cd7.right\n            equal_1f1cd7.result -> bool_4c5b3e\n        } -> zip_ae2f0a.handler\n        sublist_e7c5b4 -> zip_ae2f0a.zipped\n    }\n\n    \n\n    instance(x: 101, y: -109) is_sublist_f9d1d3 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Check whether a list is a sublist of another list.\") is_sublist {\n        in(x: -176, y: -141, name: \"main_list\") property(List) main_list_5d2f8e\n        in(x: -174, y: 21, name: \"sub_list\") property(List) sub_list_0a9c7b\n\n        out(x: 446, y: -108, name: \"output\") property(Bool) output_f1d4eb\n\n        instance(x: 94, y: -141) filter_d3f5b6 root.Std_k98ojb.Query.Filter {}\n        main_list_5d2f8e -> filter_d3f5b6.list\n        sub_list_0a9c7b -> filter_d3f5b6.items\n        is_sublist.result -> output_f1d4eb\n        filter_d3f5b6.where -> \"it == sub_list_0a9c7b\"\n    }\n\n    \n\n    instance(x: -67, y: 23) is_sublist_node root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -176, y: 123, name: \"sublist\") property(List) sublist_0e2f6d\n        in(x: -192, y: 156, name: \"main_list\") property(List) main_list_eb4c3d\n\n        out(x: 442, y: -108, name: \"output\") property(Bool) output_c9a8eb\n\n        instance(x: -141, y: 162) contains_6e87f root.Std_k98ojb.List.Contains {}\n        sublist_0e2f6d -> contains_6e87f.list\n        main_list_eb4c3d -> contains_6e87f.item\n        contains_6e87f.is_contained -> output_c9a8eb\n    }\n\n    \n\n    instance(x: 94, y: -122) is_sublist_f0d5e1 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -194, y: 145, name: \"main_list\") property(List) list_9f3e8d\n        in(x: -195, y: 156, name: \"sub_list\") property(List) sub_list_4a1c21\n\n        out(x: 102, y: 64, name: \"output\") property(Bool) output_6b0dd7\n\n        instance(x: 94, y: 143) length_3d7e9f root.Std_k98ojb.List.Length {}\n        instance(x: -193, y: 157) contains_2d8a5c root.Std_k98ojb.List.Contains {}\n        list_9f3e8d -> contains_2d8a5c.items\n        sub_list_4a1c21 -> contains_2d8a5c.list\n        length_3d7e9f.length -> contains_2d8a5c.count\n    }\n\n    \n\n    instance(x: -93, y: 70) is_sublist_f0df31 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -173, y: 155, name: \"main_list\") property(List) main_list_4d3a9b\n        in(x: -193, y: 134, name: \"sub_list\") property(List) sub_list_e5c7f1\n\n        out(x: 546, y: -97, name: \"output\") property(Bool) output_c0c8ec\n\n        instance(x: 133, y: 141) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        main_list_4d3a9b -> zip_201051.left\n        sub_list_e5c7f1 -> zip_201051.right\n        func() {\n            in(x: -193, y: 134, name: \"current\") property(Number) current_f0fdd2\n\n            out(x: 698, y: 85, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -54) equal_1d7b9e root.Std_k98ojb.Logic.Equal {}\n            zip_201051.zipped -> equal_1d7b9e.left\n            sub_list_e5c7f1 -> equal_1d7b9e.right\n            equal_1d7b9e.result -> result_e245cb\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_c0c8ec\n    }\n\n    \n\n    instance(x: 101, y: -67) is_sublist_4a3f6e root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether a list is a sublist of another list.\") is_sublist {\n        in(x: -193, y: 156, name: \"main_list\") property(List) main_list_9a5d1b\n        in(x: -215, y: -104, name: \"sub_list\") property(List) sub_list_c3c6e4\n\n        out(x: 444, y: -101, name: \"output\") property(Bool) output_a8fdd9\n\n        instance(x: 143, y: -115) zip_f0d2a1 root.Std_k98ojb.Iteration.Zip {}\n        main_list_9a5d1b -> zip_f0d2a1.left\n        sub_list_c3c6e4 -> zip_f0d2a1.right\n        func() {\n            in(x: -193, y: 156, name: \"main\") property(Number) _index_8e7f66\n\n            out(x: 444, y: -101, name: \"result\") property(Bool) result_e6c0d5\n\n            instance(x: 215, y: -104) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            sub_list_c3c6e4 -> equal_f89569.left\n            main_list_9a5d1b -> equal_f89569.right\n            equal_f89569.result -> result_e6c0d5\n        } -> zip_f0d2a1.handler\n        zip_f0d2a1.zipped -> output_a8fdd9\n    }\n\n    \n\n    instance(x: -92, y: 59) is_sublist_4e2b3c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -245, y: 164, name: \"main_list\") property(List) main_list_6f4d3a\n        in(x: -292, y: -21, name: \"sublist\") property(List) sublist_a1b2e9\n\n        out(x: 104, y: 55, name: \"output\") property(Bool) output_b0c7eb\n\n        instance(x: 121, y: 54) length_6f3a8d root.Std_k98ojb.List.Length {}\n        sublist_a1b2e9 -> length_6f3a8d.list\n        main_list_6f4d3a -> length_6f3a8d.list\n        instance(x: -292, y: 55) equal_0a5b45 root.Std_k98ojb.Logic.Equal {}\n        sublist_a1b2e9 -> equal_0a5b45.left\n        main_list_6f4d3a -> equal_0a5b45.right\n        equal_0a5b45.result -> output_b0c7eb\n    }\n\n    \n\n    instance(x: -104, y: 69) is_sublist_4e8b95 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -141, y: 156, name: \"main_list\") property(List) main_list_0f5e2b\n        in(x: -142, y: 161, name: \"sublist_list\") property(List) sublist_list_9c8a1d\n\n        out(x: 546, y: -109, name: \"output\") property(Bool) output_ba4cd7\n\n        instance(x: -23, y: 163) filter_eb0e2f root.Std_k98ojb.Query.Filter {}\n        sublist_list_9c8a1d -> filter_eb0e2f.list\n        func() {\n            in(x: -141, y: 156, name: \"current\") property(Number) current_4c0d5d\n\n            out(x: 546, y: -109, name: \"bool\") property(Bool) bool_8a1b6e\n\n            instance(x: -23, y: 163) contains_f3fdd9 root.Std_k98ojb.List.Contains {}\n            sublist_list_9c8a1d -> contains_f3fdd9.item\n            main_list_0f5e2b -> contains_f3fdd9.list\n            contains_f3fdd9.is_contained -> bool_8a1b6e\n        } -> filter_eb0e2f.handler\n        ifexpression_875761 else -> output_ba4cd7\n        ifexpression_875761.value -> bool_8a1b6e\n    }\n\n    \n\n    instance(x: 48, y: -67) is_sublist_9b5e42 root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -446, y: 0, name: \"list\") property(List) list_5e3f9d\n        out(x: -1, y: -235, name: \"missing_number\") property(Number) missing_number_e2a6c8\n\n        instance(x: -109, y: -240) for_d3b0ec root.Std_k98ojb.Std.For {}\n        instance(x: 394, y: 5) ifexpression_7f4c43 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index > 0 && previous == index + 1\"\n        }\n        getter(x: -142, y: 160, name: \"getter_d9c3e6\") getter_d9c3e6 = previous\n        setter(x: 679, y: 5) setter_d9c3e6 = previous\n        instance(x: 321, y: 0) find_8bfcf root.Std_k98ojb.Iteration.Map {}\n        getter_d9c3e6.value -> find_8bfcf.handler\n        list_5e3f9d -> for_d3b0ec.items\n        for_d3b0ec.item -> ifexpression_7f4c43.execute\n        ifexpression_7f4c43.then -> setter_d9c3e6.execute\n        for_d3b0ec.index -> setter_d9c3e6.new_value\n        for_d3b0ec.onItem -> ifexpression_7f4c43.execute\n        for_d3b0ec.done -> find_8bfcf.continue\n        ifexpression_7f4c43.value -> missing_number_e2a6c8\n        for_d3b0ec.index + 1 -> setter_d9c3e6.new_value\n    }\n\n    \n\n    instance(x: -81, y: 170) find_smallest_missing_5d5d45 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -456, y: 0, name: \"list\") property(List) list_4f5d8a\n        in(x: -471, y: -215, name: \"execute\") trigger() execute_2c5e1b\n        out(x: 1239, y: -230, name: \"continue\") trigger() continue_e6cd7c\n        out(x: 1220, y: 144, name: \"min\") property(Number) min_f3d0a8\n\n        instance(x: 69, y: 5) for_d4e5f1 root.Std_k98ojb.Std.For {}\n        getter(x: -336, y: 161, name: \"getter_6e2c21\") getter_6e2c21 = previous\n        setter(x: -215, y: -246, name: \"setter_3d4a5f\") setter_3d4a5f = previous\n        instance(x: -342, y: 0) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 55, y: -215) ifexpression_6c15d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y + 1\"\n        }\n        setter_3d4a5f.continue -> for_d4e5f1.reset\n        list_4f5d8a -> for_d4e5f1.items\n        execute_2c5e1b -> setter_3d4a5f.execute\n        -1 -> setter_3d4a5f.new_value\n        for_d4e5f1.done -> continue_e6cd7c\n        getter_6e2c21.value -> min_f3d0a8\n        ifexpression_6c15d4.then -> setter_3d4a5f.execute\n        list_4f5d8a -> getat_ce2a48.list\n        -1 -> getat_ce2a48.index\n        for_d4e5f1.item -> equal_aabb6e.left\n        getat_ce2a48.itemAtIndex -> setter_3d4a5f.new_value\n        execute_2c5e1b -> setter_3d4a5f.execute\n        setter_3d4a5f.continue -> for_d4e5f1.next\n    }\n\n    \n\n    instance(x: -246, y: 144) find_missing_0a8d7 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -456, y: 20, name: \"list\") property(List) list_5a1e4b\n        out(x: 1119, y: -233, name: \"output\") property(Number) output_8f0c7d\n\n        instance(x: 0, y: 0) for_d2bf6 root.Std_k98ojb.Std.For {}\n        instance(x: 341, y: 34) ifexpression_4a5e42 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: -104, y: 109, name: \"getter_f8f9c2\") getter_f8f9c2 = previous\n        setter(x: 69, y: -292, name: \"setter_5a4e6d\") setter_5a4e6d = previous\n        instance(x: 320, y: 3) getat_e1c7b0 root.Std_k98ojb.List.GetAt {}\n        ifexpression_4a5e42.else -> continue_b2cd8f\n        ifexpression_4a5e42.value -> output_8f0c7d\n        ifexpression_4a5e42.then -> setter_5a4e6d.execute\n        list_5a1e4b -> for_d2bf6.items\n        for_d2bf6.item -> ifexpression_4a5e42.gen_2\n        for_d2bf6.index -> ifexpression_4a5e42.gen_0\n        getter_f8f9c2.value -> ifexpression_4a5e42.gen_1\n        for_d2bf6.onItem -> ifexpression_4a5e42.execute\n        for_d2bf6.done -> continue_b2cd8f\n        for_d2bf6.item -> setter_5a4e6d.new_value\n        list_5a1e4b -> getat_e1c7b0.list\n        0 -> getat_e1c7b0.index\n        getat_e1c7b0.itemAtIndex -> setter_5a4e6d.new_value\n        for_d2bf6.next -> continue_b2cd8f\n    }\n\n    \n\n    instance(x: -83, y: 173) find_missing_df3e9a root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -442, y: 3, name: \"execute\") trigger() execute_8f9d4b\n        in(x: -462, y: 0, name: \"list\") property(List) list_1a6e5c\n\n        out(x: 1247, y: 11, name: \"continue\") trigger() continue_3c6df2\n        out(x: 1238, y: 142, name: \"output\") property(Number) output_4f0d35\n\n        instance(x: 342, y: -105) for_d1c7a9 root.Std_k98ojb.Std.For {}\n        instance(x: 509, y: 5) ifexpression_e3e3d8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"previous + 1 == current\"\n        }\n        getter(x: 0, y: 160, name: \"getter_9f2a15\") getter_9f2a15 = previous\n        setter(x: -0, y: -121, name: \"setter_c8c4e6\") setter_c8c4e6 = previous\n        instance(x: 0, y: -35) count_node root.Std_k98ojb.Count {}\n        getter_9f2a15.value -> ifexpression_e3e3d8.gen_1\n        for_d1c7a9.item -> ifexpression_e3e3d8.execute\n        list_1a6e5c -> for_d1c7a9.items\n        for_d1c7a9.index -> count_node.count\n        setter_c8c4e6.continue -> for_d1c7a9.reset\n        for_d1c7a9.onItem -> ifexpression_e3e3d8.execute\n        ifexpression_e3e3d8.then -> setter_c8c4e6.execute\n        list_1a6e5c -> getat_0b2f4d.getAt\n        0 -> getat_0b2f4d.index\n        getat_0b2f4d.itemAtIndex -> setter_c8c4e6.new_value\n        execute_8f9d4b -> count_node.execute\n        count_node.onCount -> continue_3c6df2\n        for_d1c7a9.done -> continue_3c6df2\n    }\n\n    \n\n    instance(x: 0, y: -177) smallest_missing_0e5f44 root.main.smallest_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -432, y: -235, name: \"list\") property(List) list_0f5a4d\n\n        out(x: 1189, y: -1, name: \"continue\") trigger() continue_7c2f6d\n        out(x: 1190, y: -233, name: \"output\") property(Number) output_8f1c85\n\n        instance(x: 751, y: 96) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 321, y: -21) ifexpression_9a4e3d root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == count\"\n        }\n        getter(x: 0, y: 164, name: \"getter_a2f6c7\") getter_a2f6c7 = previous\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 340, y: 5) count_node root.Std_k98ojb.Count {}\n        list_0f5a4d -> for_d26972.items\n        for_d26972.item -> ifexpression_9a4e3d.gen_2\n        -1 -> setter_9d4f1c.new_value\n        execute_90aaec -> setter_9d4f1c.execute\n        getter_a2f6c7.value -> output_8f1c85\n        for_d26972.done -> continue_7c2f6d\n        setter_9d4f1c.continue -> for_d26972.reset\n        for_d26972.onItem -> ifexpression_9a4e3d.execute\n        for_d26972.index -> ifexpression_9a4e3d.gen_0\n        ifexpression_9a4e3d.then -> setter_9d4f1c.execute\n        list_0f5a4d -> count_node.items\n        0 -> count_node.count\n        count_node.onCount -> continue_7c2f6d\n    }\n\n    \n\n    instance(x: -174, y: -63) find_missing_8dfb3 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -432, y: 2, name: \"list\") property(List) list_b3a8b5\n        out(x: 1237, y: -1, name: \"output\") property(Number) output_4eef9c\n\n        instance(x: 55, y: 0) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 315, y: 5) ifexpression_8d7a3f root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y + 1\"\n        }\n        getter(x: -19, y: 0) getter_0e6c43 = previous\n        setter(x: -16, y: -247, name: \"setter_8d5a9f\") setter_8d5a9f = previous\n        instance(x: 313, y: -34) sum_2bdf23 root.Std_k98ojb.Math.Sum {}\n        list_b3a8b5 -> for_d26972.items\n        for_d26972.item -> ifexpression_8d7a3f.execute\n        for_d26972.index -> ifexpression_8d7a3f.gen_0\n        getter_0e6c43.value -> ifexpression_8d7a3f.gen_1\n        sum_2bdf23.result -> output_4eef9c.sum\n        list_b3a8b5 -> for_d26972.list\n        -1 -> setter_8d5a9f.new_value\n        find_missing.continue -> for_d26972.reset\n        ifexpression_8d7a3f.then -> setter_8d5a9f.execute\n        sum_2bdf23.result -> output_4eef9c.average\n        list_b3a8b5 -> getter_0e6c43.list\n        1 -> getter_0e6c43.index\n        for_d26972.item -> setter_8d5a9f.new_value\n    }\n\n    \n\n    instance(x: -19, y: -54) find_missing_7c2e3b root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -475, y: 0, name: \"n\") property(Number) n_3e8f5b\n        in(x: -490, y: -233, name: \"execute\") trigger() execute_1c9d4a\n\n        out(x: 1247, y: -231, name: \"continue\") trigger() continue_9d6d23\n        out(x: 1238, y: 143, name: \"output\") property(Number) output_a0e8f3\n\n        instance(x: 69, y: -245) ifexpression_7b2df4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous < current\"\n        }\n        getter(x: 335, y: 165, name: \"getter_c5a8c3\") getter_c5a8c3 = previous\n        setter(x: 700, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_7b2df4.else -> continue_a96db6\n        ifexpression_7b2df4.value -> output_a0e8f3\n        ifexpression_7b2df4.then -> setter_9d4f1c.execute\n        list_n_3e8f5b -> for_d26972.items\n        for_d26972.item -> ifexpression_7b2df4.gen_2\n        for_d26972.index -> ifexpression_7b2df4.gen_0\n        getter_c5a8c3.value -> ifexpression_7b2df4.gen_1\n        for_d26972.onItem -> ifexpression_7b2df4.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_n_3e8f5b -> getat_ce2a48.list\n        n_3e8f5b -> getat_ce2a48.index\n        0 -> getat_ce2a48.indexAtIndex\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_1c9d4a -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_b7a5b0 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -442, y: 0, name: \"list\") property(List) list_2b8a9f\n        in(x: -459, y: 3, name: \"execute\") trigger() execute_1e9d5c\n\n        out(x: 1247, y: 5, name: \"continue\") trigger() continue_a6dfef\n        out(x: 1188, y: 144, name: \"output\") property(Number) output_e2d0a3\n\n        instance(x: 71, y: -114) ifexpression_9f1c7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"index > 0 && previous == index\"\n        }\n        getter(x: 343, y: 160, name: \"getter_ba2d6e\") getter_ba2d6e = previous\n        setter(x: -13, y: -287, name: \"setter_1e9d5c\") setter_1e9d5c = previous\n        instance(x: 327, y: -34) for_0e3f8b root.Std_k98ojb.Std.For {}\n        setter(x: 4, y: -121, name: \"setter_1e9d5c\") setter_1e9d5c = previous\n        instance(x: 278, y: -35) getat_d7df0a root.Std_k98ojb.List.GetAt {}\n        ifexpression_9f1c7b.else -> continue_a6dfef\n        ifexpression_9f1c7b.value -> output_e2d0a3\n        ifexpression_9f1c7b.then -> setter_1e9d5c.execute\n        list_2b8a9f -> for_0e3f8b.items\n        for_0e3f8b.item -> ifexpression_9f1c7b.gen_2\n        for_0e3f8b.index -> ifexpression_9f1c7b.gen_0\n        getter_ba2d6e.value -> ifexpression_9f1c7b.gen_1\n        for_0e3f8b.onItem -> ifexpression_9f1c7b.execute\n        for_0e3f8b.done -> continue_a6dfef\n        for_0e3f8b.item -> setter_1e9d5c.new_value\n        list_2b8a9f -> getat_d7df0a.list\n        0 -> getat_d7df0a.index\n        getat_d7df0a.itemAtIndex -> setter_1e9d5c.new_value\n        execute_1e9d5c -> setter_1e9d5c.execute\n        setter_1e9d5c.continue -> for_0e3f8b.reset\n        setter_1e9d5c.continue -> for_0e3f8b.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_smallest_missing_f1f2a4 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -475, y: 2, name: \"list\") property(List) list_8e9a3d\n        out(x: 1215, y: 29, name: \"output\") property(Number) output_0c1f6f\n\n        instance(x: 340, y: -114, name: \"for_loop\") Std_k98ojb.Std.For {}\n        getter(x: 742, y: -20, name: \"getter_a7d5e4\") getter_a7d5e4 = index\n        setter(x: 0, y: 0, name: \"setter_9c6f3a\") setter_9c6f3a = previous\n        instance(x: 0, y: -120) ifexpression_eb8dd1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == index\"\n        }\n        getter(x: 742, y: -20, name: \"getter_a7d5e4\") getter_a7d5e4 = previous\n        setter(x: 0, y: 0, name: \"setter_9c6f3a\") setter_38e107 = previous\n        instance(x: 321, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_eb8dd1.value -> output_0c1f6f\n        ifexpression_eb8dd1.then -> setter_9c6f3a.execute\n        list_8e9a3d -> for_loop.items\n        for_loop.item -> ifexpression_eb8dd1.gen_2\n        for_loop.index -> ifexpression_eb8dd1.gen_0\n        getter_a7d5e4.value -> ifexpression_eb8dd1.gen_1\n        for_loop.onItem -> ifexpression_eb8dd1.execute\n        for_loop.done -> output_0c1f6f\n        setter_9c6f3a.continue -> for_loop.reset\n        for_loop.item -> setter_38e107.new_value\n        list_8e9a3d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        for_loop.next -> ifexpression_eb8dd1.execute\n    }\n\n    \n\n    instance(x: -74, y: 151) find_missing_6c4f3 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -475, y: 0, name: \"execute\") trigger() execute_6d4e8a\n        in(x: -493, y: 2, name: \"list\") property(List) list_e5b3f9\n\n        out(x: 1241, y: 7, name: \"continue\") trigger() continue_b0c8ec\n        out(x: 1234, y: 144, name: \"output\") property(Number) output_8a5d66\n\n        instance(x: -104, y: -128) for_d2f6a9 root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 169, name: \"getter_7c7e3b\") getter_7c7e3b = previous\n        setter(x: 0, y: -123, name: \"setter_8f4a9d\") setter_8f4a9d = previous\n        instance(x: -275, y: -34) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        ifexpression_5c7d3e root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == prev + 1\"\n        }\n        setter_8f4a9d.continue -> for_d2f6a9.reset\n        list_e5b3f9 -> for_d2f6a9.items\n        execute_6d4e8a -> setter_8f4a9d.execute\n        -1 -> setter_8f4a9d.new_value\n        for_d2f6a9.done -> continue_b0c8ec\n        getter_7c7e3b.value -> output_8a5d66\n        for_d2f6a9.item -> equal_aabb6e.execute\n        ifexpression_5c7d3e.then -> setter_8f4a9d.execute\n        list_e5b3f9 -> equal_aabb6e.list\n        -1 -> equal_aabb6e.prev\n        for_d2f6a9.index -> setter_8f4a9d.new_value\n        equal_aabb6e.result -> output_8a5d66\n        ifexpression_5c7d3e.else -> for_d2f6a9.next\n    }\n\n    \n\n    instance(x: 1, y: -178) find_missing_0b6c4 root.main.find_missing {}\n\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -227, y: 18, name: \"input\") property(String) input_1a5f3d\n\n        out(x: 509, y: -64, name: \"output\") property(String) output_2e0c9b\n\n        instance(x: 74, y: -43) replace_8c4dd6 root.Std_k98ojb.Strings.Replace {}\n        input_1a5f3d -> replace_8c4dd6.input\n        \",\" -> replace_8c4dd6.search\n        \".\" -> replace_8c4dd6.replace\n        \" \" -> replace_8c4dd6.search\n        \":\" -> replace_8c4dd6.replace\n        replace_8c4dd6.output -> output_2e0c9b\n    }\n\n    \n\n    instance(x: -200, y: 30) replace_punctuation_7c1d45 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -230, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) strings_replace_node root.Std_k98ojb.Strings.Replace {}\n        input_ai -> strings_replace_node.input\n        \",.\" -> strings_replace_node.search\n        \":\" -> strings_replace_node.replace\n        strings_replace_node.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_with_colon_6f3c2e root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -228, y: 0, name: \"input\") property(String) input_2f4d1b\n\n        out(x: 1058, y: -59, name: \"output\") property(String) output_7c5a66\n\n        instance(x: 74, y: 47) replace_6e4f8 root.Std_k98ojb.Strings.Replace {}\n        input_2f4d1b -> replace_6e4f8.input\n        \",,\" -> replace_6e4f8.search\n        \":\" -> replace_6e4f8.replace\n        replace_6e4f8.result -> output_7c5a66\n    }\n\n    \n\n    instance(x: -193, y: 29) replace_with_colon_f2b0d9 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: -142, y: 19, name: \"output\") property(String) output_ai\n\n        instance(x: 93, y: 44, name: \"replace_with_colon_node\") replace_5b1f9d root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_with_colon_node.input\n        \",.\" -> replace_with_colon_node.search\n        \":\" -> replace_with_colon_node.replace\n        replace_with_colon_node.output -> output_ai\n    }\n\n    \n\n    instance(x: -201, y: 0) replace_with_colon_4f8a2b root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: -1085, y: 1, name: \"output\") property(String) output_ai\n\n        instance(x: 20, y: 0) strings_replace_node root.Std_k98ojb.Strings.Replace {}\n        input_ai -> strings_replace_node.input\n        \",.\" -> strings_replace_node.search\n        \":\" -> strings_replace_node.replace\n        strings_replace_node.output -> output_ai\n    }\n\n    \n\n    instance(x: -193, y: -47, name: \"replace_with_colon\") replace_with_colon_3a4d7e root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -201, y: 24, name: \"input\") property(String) input_ai\n        out(x: 1008, y: 0, name: \"output\") property(String) output_ai\n\n        instance(x: 73, y: 18) ifexpression_5d9e38 root.Std_k98ojb.Std.IfExpression {\n            expression: \"contains(' ', input)\"\n        }\n        instance(x: 342, y: -14) replace_1c7f4a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_1c7f4a.input\n        ' ' -> replace_1c7f4a.search\n        ':' -> replace_1c7f4a.replace\n        replace_1c7f4a.output -> output_ai\n        instance(x: 73, y: -14) ifexpression_5d9e38 {\n            expression: \"contains(',', input)\"\n        }\n        instance(x: 342, y: -34) replace_1c7f4a.replace\n        ',' -> replace_1c7f4a.search\n        ':' -> replace_1c7f4a.replace\n        replace_1c7f4a.output -> output_ai\n        instance(x: 73, y: -54) ifexpression_5d9e38 {\n            expression: \"contains('.', input)\"\n        }\n        instance(x: 342, y: -64) replace_1c7f4a.replace\n        '.' -> replace_1c7f4a.search\n        ':' -> replace_1c7f4a.replace\n        replace_1c7f4a.output -> output_ai\n    }\n\n    \n\n    instance(x: -176, y: 10) replace_punctuation_a9d6d0 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -199, y: 19, name: \"input\") property(String) input_4f2a5e\n\n        out(x: 0, y: 0, name: \"output\") property(String) output_7d8c9b\n\n        instance(x: 15, y: 0) replace_node root.Std_k98ojb.Strings.Replace {}\n        input_4f2a5e -> replace_node.input\n        \",,\" -> replace_node.search\n        \".\" -> replace_node.replace\n        \",\" -> replace_node.search\n        \" \" -> replace_node.replace\n        replace_node.output -> output_7d8c9b\n    }\n\n    \n\n    instance(x: -234, y: 64) replace_with_colon_f3a4e6 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 1038, y: -55, name: \"output\") property(String) output_ai\n\n        instance(x: 94, y: -105) ifexpression_5d4e2b root.Std_k98ojb.Std.IfExpression {\n            expression: \"input == ' '\"\n        }\n        instance(x: 392, y: 167) replace_9c7c3a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9c7c3a.input\n        ' ' -> replace_9c7c3a.search\n        ':' -> replace_9c7c3a.replace\n        replace_9c7c3a.output -> output_ai\n        instance(x: 97, y: -37) ifexpression_5d4e2b.execute\n    }\n\n    \n\n    instance(x: -201, y: -31) replace_with_colon_d0f8a1 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -231, y: 0, name: \"input\") property(String) input_5a1d2b\n\n        out(x: 1057, y: -64, name: \"output\") property(String) output_6c9f45\n\n        instance(x: 55, y: -24) replace_d4e7ec root.Std_k98ojb.Strings.Replace {}\n        input_5a1d2b -> replace_d4e7ec.input\n        \",\" -> replace_d4e7ec.search\n        \".\" -> replace_d4e7ec.replace\n        \" \" -> replace_d4e7ec.search\n        \":\" -> replace_d4e7ec.replace\n        replace_d4e7ec.output -> output_6c9f45\n    }\n\n    \n\n    instance(x: -220, y: 30) replace_with_colon_2b3d8a root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -199, y: 1, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) strings_replace_node root.Std_k98ojb.Strings.Replace {}\n        input_ai -> strings_replace_node.input\n        \",.\" -> strings_replace_node.search\n        \":\" -> strings_replace_node.replace\n        strings_replace_node.output -> output_ai\n    }\n\n    \n\n    instance(x: -180, y: -47) replace_chars_7d4a6f root.main.replace_chars {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -294, y: 0, name: \"string\") property(String) input_2\n\n        out(x: 509, y: -1, name: \"result\") property(Bool) result_7c5f3e\n\n        instance(x: 0, y: 0) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: -26, y: 49, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 649, y: 2) setter_9d4f1c = previous\n        instance(x: 322, y: -25) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: 0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: 34) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> result_7c5f3e\n        ifexpression_875761.value -> result_7c5f3e\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_input_2 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> result_7c5f3e\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_2 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 23, y: -176) check_same_b0c5b7 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -294, y: 0, name: \"input\") property(String) input_4d3a1f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1c8b9\n\n        instance(x: -92, y: 63) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        input_4d3a1f -> length_6e87f2.list\n        length_6e87f2.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_b1c8b9\n    }\n\n    \n\n    instance(x: 48, y: 11) all_same_f0d4a7 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n     func(doc: \"checks whether all the characters are same or not.\") all_same_chars {\n        in(x: 0, y: -2, name: \"string\") property(String) string_a\n        out(x: 123, y: -5, name: \"output\") property(Bool) output_6a4c7e\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        string_a -> tolower_2e1444.input\n        tolower_2e1444.output -> output_6a4c7e\n        instance(x: -23, y: -10) is_same_f5f1d8 root.Std_k98ojb.Strings.IsSame {}\n        0 -> is_same_f5f1d8.value\n        string_a -> is_same_f5f1d8.input\n        is_same_f5f1d8.result -> output_6a4c7e\n    }\n\n    \n\n    instance(x: -67, y: -35) all_same_chars_eb0a9f root.main.all_same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") all_same_characters{\n        in(x: -305, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"output\") property(Bool) output_5c9e7d\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_2e1444.input\n        tolower_2e1444.output -> output_5c9e7d\n    }\n\n    \n\n    instance(x: 82, y: -37) all_same_characters_0f8a3d root.main.all_same_characters {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: -269, y: 0, name: \"string\") property(String) input_ab\n        out(x: 530, y: -2, name: \"output\") property(Bool) output_a8\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"z\" -> contains_d42dce.contains\n        input_ab -> tolower_2e1444.input\n        contains_d42dce.result -> output_a8\n    }\n\n    \n\n    instance(x: 81, y: 52) all_characters_same_0b6a7f root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") same_characters {\n        in(x: -292, y: 0, name: \"string\") property(String) string_a6e2f8\n\n        out(x: 541, y: -1, name: \"output\") property(Bool) output_4c9a43\n\n        instance(x: 11, y: 44) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        string_a6e2f8 -> tolower_2e1444.input\n        tolower_2e1444.output -> same_characters.output_5c7d9a\n        instance(x: -24, y: 45) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        string_a6e2f8 -> contains_d42dce.input\n        \"x\" -> contains_d42dce.contains\n        same_characters.output_5c7d9a -> contains_d42dce.result\n    }\n\n    \n\n    instance(x: 55, y: -34) same_characters_4b1b45 root.main.same_characters {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") check_same_chars {\n        in(x: -292, y: 5, name: \"string\") property(String) input_2\n        out(x: 1218, y: -1, name: \"output\") property(Bool) output_9c4f7d\n\n        instance(x: 0, y: 0) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_2 -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_9c4f7d\n        instance(x: -47, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_7b3b7b.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_2 -> contains_d42dce.input\n        contains_d42dce.result -> output_9c4f7d\n    }\n\n    \n\n    instance(x: -44, y: 23) check_same_chars_c1b0e3 root.main.check_same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -394, y: 0, name: \"string\") property(String) input_4f1d9a\n\n        out(x: 1053, y: -2, name: \"output\") property(Bool) output_c4c6b5\n\n        instance(x: 0, y: 0) islower_d7e2ac root.Std_k98ojb.Strings.IsLowerCase {}\n        input_4f1d9a -> islower_d7e2ac.input\n        islower_d7e2ac.output -> output_c4c6b5\n        instance(x: 0, y: 0) istoupper_7d8b3b root.Std_k98ojb.Strings.IsUpperCase {}\n        input_4f1d9a -> istoupper_7d8b3b.input\n        istoupper_7d8b3b.output -> output_c4c6b5\n    }\n\n    \n\n    instance(x: 0, y: -39) all_same_2df5e root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same_char {\n        in(x: -475, y: 0, name: \"string\") property(String) input_ai\n        out(x: 1054, y: -1, name: \"output\") property(Bool) output_5b7d8e\n\n        instance(x: 1032, y: 76) tolower_c2c6e3 root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_c2c6e3.input\n        tolower_c2c6e3.output -> output_5b7d8e\n    }\n\n    \n\n    instance(x: -179, y: 30) all_same_char_f2a9f0 root.main.all_same_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") same_chars {\n        in(x: -292, y: 0, name: \"input\") property(String) input_ab\n        out(x: 546, y: -1, name: \"output\") property(Bool) output_a3c7d5\n\n        instance(x: 0, y: 0) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        input_ab -> tolower_2e1444.input\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        contains_d42dce.result -> output_a3c7d5\n    }\n\n    \n\n    instance(x: 48, y: -1) same_chars_f8f8f9 root.main.same_chars {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"count\") property(Number) count_3c6b9e\n\n        instance(x: 0, y: 1) length_6e87f root.Std_k98ojb.Strings.Length {}\n        instance(x: 265, y: 0) isnumeric_d42dce root.Std_k98ojb.Strings.IsNumeric {}\n        input_ai -> length_6e87f.input\n        length_6e87f.length -> isnumeric_d42dce.input\n        isnumeric_d42dce.result -> count_3c6b9e\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_2c856f root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 1) length_6e87f root.Std_k98ojb.Strings.Length {}\n        length_6e87f.input -> input_ai\n        length_6e87f.length -> output_ai\n    }\n\n    \n\n    instance(x: -55, y: 529) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"s\") property(String) s_1f3a4e\n\n        out(x: 1146, y: -247, name: \"output\") property(Number) output_a5c9d7\n\n        instance(x: 23, y: 0) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        instance(x: 201, y: 3) isnumber_4d1a95 root.Std_k98ojb.Strings.IsNumber {}\n        isnumber_4d1a95.result -> length_6e87f2.length\n        s_1f3a4e -> length_6e87f2.input\n        length_6e87f2.length -> output_a5c9d7\n    }\n\n    \n\n    instance(x: 48, y: 11) count_digits_15f9e9 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n     func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"length\") property(Number) length_ai\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) isnumeric_d42dce root.Std_k98ojb.Strings.IsNumeric {}\n        tolower_2e1444.output -> isnumeric_d42dce.input\n        input_ai -> tolower_2e1444.input\n        isnumeric_d42dce.result -> length_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) CountDigits_96023e root.main.CountDigits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") digit_count {\n        in(x: -294, y: 155, name: \"string\") property(String) input_a2d3e4\n\n        out(x: 0, y: 0, name: \"count\") property(Number) count_7f1c5b\n\n        instance(x: 46, y: 0) length_f9a6f0 root.Std_k98ojb.Strings.Length {}\n        input_a2d3e4 -> length_f9a6f0.input\n        length_f9a6f0.length -> count_7f1c5b\n    }\n\n    \n\n    instance(x: -44, y: 123) digit_count_node root.main.digit_count {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -234, y: 0, name: \"s\") property(String) s_ai\n        out(x: 123, y: 1, name: \"result\") property(Number) result_3a8f6d\n\n        instance(x: 23, y: -1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        tolower_2e1444.output -> s_ai\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.Length {}\n        instance(x: 15, y: -1) isnumeric_d9d8c4 root.Std_k98ojb.Strings.IsNumeric {}\n        tolower_2e1444.output -> isnumeric_d9d8c4.input\n        length_6e87f2.length -> isnumeric_d9d8c4.result\n        s_ai -> length_6e87f2.input\n        result_3a8f6d -> length_6e87f2.length\n    }\n\n    \n\n    instance(x: 46, y: -23) count_digits_1c9b0d root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"counts the number of digits in a given string.\") CountDigits {\n        in(x: -294, y: 155, name: \"input\") property(String) input_ai\n        out(x: 530, y: 63, name: \"count\") property(Number) count_3b4e9a\n\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.Length {}\n        instance(x: 201, y: 62) isDigit_6d05b0 root.Std_k98ojb.Strings.IsNumeric {}\n        count_3b4e9a -> length_6e87f2.length\n        input_ai -> isDigit_6d05b0.input\n        isDigit_6d05b0.result -> length_6e87f2.length\n        length_6e87f2.count -> count_3b4e9a\n    }\n\n    \n\n    instance(x: 48, y: 11) CountDigits_15f9e9 root.main.CountDigits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -234, y: 0, name: \"input\") property(String) input_ai\n        out(x: 115, y: 2, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 23, y: -1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        data_instance(x: 330, y: 133) data_cde0dc = 0\n        input_ai -> length_6e87f2.input\n        length_6e87f2.length -> data_cde0dc\n        number_3bc2ae = data_cde0dc\n    }\n\n    \n\n    instance(x: 48, y: 11) count_digits_15f9e9 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 1146, y: -647, name: \"count\") property(Number) count_3d4f2b\n\n        instance(x: 0, y: 1) length_6e87f root.Std_k98ojb.Strings.Length {}\n        length_6e87f.length -> count_digits.count\n        input_0 -> length_6e87f.input\n        length_6e87f.output -> count_digits.count\n    }\n\n    \n\n    instance(x: -88, y: 529) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"counts the number of digits in a given string.\") digit_count {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"count\") property(Number) count_5b1f8d\n\n        instance(x: 0, y: 1) length_6e87f root.Std_k98ojb.Strings.Length {}\n        input_0 -> length_6e87f.input\n        length_6e87f.length -> count_5b1f8d\n    }\n\n    \n\n    instance(x: -55, y: 529) digit_count_2c856f root.main.digit_count {}\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -509, y: 2, name: \"n\") property(Number) n_9f1b8a\n\n        out(x: 1135, y: -347, name: \"output\") property(Number) output_f6c0e3\n\n        instance(x: 82, y: -412) ifexpression_4d7dd2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        data_instance(x: 394, y: -380) data_b5f8a4  = [sum, sum]\n        instance(x: 46, y: -384) mul_9d2d6e root.Std_k98ojb.Math.Mul {}\n        instance(x: 97, y: -255, name: \"fourth power\") expression_3a7f0d root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4\"\n        }\n        instance(x: 99, y: -249) add_5e1c9e root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249, name: \"fourth power\") div_2a7d6f root.Std_k98ojb.Math.Div {}\n        instance(x: 99, y: -249, name: \"sum\") add_5e1c9e.first\n        instance(x: 99, y: -249, name: \"fourth power\") div_2a7d6f.second\n        data_b5f8a4 -> sum_3b0a95.sum\n        data_b5f8a4 -> add_5e1c9e.first\n        data_b5f8a4 -> div_2a7d6f.first\n        expression_3a7f0d.result -> mul_9d2d6e.first\n        n_9f1b8a -> mul_9d2d6e.second\n        expression_3a7f0d.result -> data_b5f8a4.sum\n        div_2a7d6f.result -> sum_3b0a95.average\n        add_5e1c9e.result -> output_f6c0e3\n    }\n\n    \n\n    instance(x: -55, y: 529) sum_fourth_power_4b9d35 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -509, y: 2, name: \"n\") property(Number) n_8f1d4a\n\n        out(x: 1245, y: 7, name: \"sum\") property(Number) sum_6c4e38\n\n        instance(x: -294, y: 36, name: \"i\") Std_k98ojb.Count {}\n        instance(x: -292, y: 51, name: \"fourth_power\") expression_0a7f5e root.Std_k98ojb.Math.Expression {\n            expression: \"4 * (2*i + 1)^4\"\n        }\n        data_instance(x: 395, y: 38) data_3d9c6b  = [sum]\n        instance(x: -240, y: 49) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: -238, y: 57) div_c4e2f0 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: 45, name: \"setter_3d9c6b\") setter_3d9c6b = sum\n        instance(x: -234, y: 52) add_f8a1a7 root.Std_k98ojb.Math.Add {}\n        instance(x: -237, y: 55) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: -233, y: 57) div_c4e2f0 root.Std_k98ojb.Math.Div {}\n        data_3d9c6b -> sum\n        n_8f1d4a -> mul_f892a4.first\n        n_8f1d4a -> expression_0a7f5e.gen_0\n        expression_0a7f5e.result -> div_c4e2f0.first\n        div_c4e2f0.result -> sum_6c4e38\n    }\n\n    \n\n    instance(x: -63, y: 124) sum_fourth_power_f1b8e root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_ae5d6f\n\n        out(x: 1169, y: 7, name: \"sum\") property(Number) sum_4b8a1c\n\n        instance(x: 0, y: 0, name: \"mul_f892a4\") mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -216, y: 137) data_6e2f3f = [sum, sum]\n        instance(x: 96, y: -124) expression_d1c0eb root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*(n-1)*(n-2)*(n-3)\"\n        }\n        instance(x: 340, y: 2) div_547f34 root.Std_k98ojb.Math.Div {}\n        mul_f892a4.result -> div_547f34.first\n        div_547f34.second -> data_6e2f3f.sum\n        expression_d1c0eb.result -> div_547f34.first\n        n_ae5d6f -> div_547f34.second\n        expression_d1c0eb.gen_0 -> div_547f34.gen_0\n        div_547f34.result -> data_6e2f3f.sum\n    }\n\n    \n\n    instance(x: -292, y: 170) sum_fourth_power_e8d6b7 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -509, y: 5, name: \"n\") property(Number) n_2d0f8a\n\n        out(x: 1139, y: 7, name: \"output\") property(Number) output_6e1b3c\n\n        instance(x: 83, y: -409, name: \"odd numbers list\") for_4d5f45 root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 0, name: \"sum_of_fourth_power\") expression_8e8a3c root.Std_k98ojb.Math.Expression {\n            expression: \"(2*i+1)^4\"\n        }\n        instance(x: -43, y: 37) modulo_bf6a7d root.Std_k98ojb.Math.Modulo {}\n        data_instance(x: 0, y: 0) data_3e5c8b = [sum_of_fourth_power]\n        instance(x: 1, y: 40) sum_f4d4a2 root.Std_k98ojb.List.Sum {}\n        for_4d5f45.items -> sum_f4d4a2.items\n        sum_f4d4a2.result -> output_6e1b3c\n        n_2d0f8a -> for_4d5f45.iterations\n        for_4d5f45.onCount -> expression_8e8a3c.execute\n        data_3e5c8b.sum_of_fourth_power -> sum_f4d4a2.result\n    }\n\n    \n\n    instance(x: -47, y: 6) fourth_power_sum_d0e1ec root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -555, y: 2, name: \"n\") property(Number) n_6a5f4d\n\n        out(x: 1146, y: -647, name: \"sum\") property(Number) output_ebef81\n\n        data_instance(x: 394, y: -339) data_c3a1c9  = [sum, average]\n        instance(x: 46, y: -383) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 97, y: -127) sum_digits_96023e root.main.sum_digits {}\n        instance(x: 62, y: -226) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> add_88bb8a.first\n        4 -> div_547f34.second\n        div_547f34.result -> sum_digits_96023e.n_6b655b\n        4 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> sum_digits_96023e.execute_cdac2a\n        sum_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        sum_digits_96023e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_ebef81\n        n_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        floor_61b38d.output -> modulo_adfa16.value\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -37) sum_fourth_power_86117a root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -509, y: 2, name: \"n\") property(Number) n_f0e3a8\n\n        out(x: 1234, y: 6, name: \"output\") property(Number) output_5d7f45\n\n        data_instance(x: 346, y: 19) data_c9bdf1  = [sum_fourth]\n        instance(x: -234, y: 11) for_2c7a8 root.Std_k98ojb.Std.For {}\n        instance(x: 83, y: -13) mul_f3f0e6 root.Std_k98ojb.Math.Mul {}\n        instance(x: 341, y: -23) power_4d1dfb root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 342, y: -22) sum_fourth_8f6a5c = [0]\n        instance(x: 86, y: -15) add_e2d7ec root.Std_k98ojb.Math.Add {}\n        instance(x: 340, y: -27) div_c9e4c3 root.Std_k98ojb.Math.Div {}\n        data_instance(x: 83, y: 18) data_0f6a8f  = [i]\n        instance(x: 86, y: 21) power_f7d1d5 root.Std_k98ojb.Math.Pow {}\n        instance(x: 340, y: -27) mul_c9e4c3 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 83, y: 18) data_0f6a8f -> power_f7d1d5.first\n        power_f7d1d5.result -> add_e2d7ec.first\n        add_e2d7ec.second -> div_c9e4c3.first\n        sum_fourth_8f6a5c -> div_c9e4c3.second\n        i -> data_0f6a8f.value\n        power_f7d1d5.result -> mul_c9e4c3.first\n        4 -> mul_c9e4c3.exponent\n        sum_fourth_8f6a5c -> add_e2d7ec.second\n        n_f0e3a8 -> div_c9e4c3.first\n        for_2c7a8.index -> data_0f6a8f.value\n        sum_fourth_8f6a5c.new_value -> sum_fourth\n        sum_fourth_8f6a5c.continue -> continue_1d5f45\n    }\n\n    \n\n    instance(x: -294, y: 4) sum_fourth_d3b3e root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_d4f9b1\n\n        out(x: 1138, y: 7, name: \"output\") property(Number) output_6e3d5a\n\n        instance(x: 80, y: -417) ifexpression_0c4f8d root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 394, y: -378) sum_fourth_power_d9e6db root.main.sum_fourth_power {}\n        instance(x: 97, y: -127) mul_8d4c1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) pow_c5dd7a root.Std_k98ojb.Math.Pow {}\n        setter(x: -215, y: -463, name: \"setter_6e7b4e\") setter_6e7b4e = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        3 -> pow_c5dd7a.exponent\n        mul_8d4c1f.result -> pow_c5dd7a.first\n        3 -> div_547f34.second\n        div_547f34.result -> sum_fourth_power_d9e6db.n_6b655b\n        0 -> setter_41e4ad.new_value\n        setter_6e7b4e.continue -> ifexpression_0c4f8d.execute\n        ifexpression_0c4f8d.then -> continue_d9efd7\n        execute_cdac2a -> setter_6e7b4e.execute\n        ifexpression_0c4f8d.else -> sum_fourth_power_d9e6db.execute_cdac2a\n        sum_fourth_power_d9e6db.continue_d9efd7 -> setter_375321.execute\n        sum_fourth_power_d9e6db.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_6e3d5a\n        n_d4f9b1 -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        floor_61b38d.output -> ifexpression_0c4f8d.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_fourth_power_5a1dd2 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -530, y: 2, name: \"n\") property(Number) n_3d0e8\n\n        out(x: 1116, y: 7, name: \"sum\") property(Number) sum_1a4c43\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 396, y: -378) sum_digits_96023e root.main.sum_digits {}\n        data_instance(x: 394, y: -339) data_3c713b  = [sum, average]\n        instance(x: 97, y: -127) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = index\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"n * (n+1)^4 / 24\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3d0e8 -> mul_f892a4.first\n        n_3d0e8 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_1a4c43\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -542, y: 3, name: \"n\") property(Number) n_6f0e9b\n\n        out(x: 1237, y: 19, name: \"output\") property(Number) output_ba8c4d\n\n        instance(x: 74, y: 57) sum_8e1c5 root.Std_k98ojb.Math.Sum {}\n        instance(x: -292, y: 38, name: \"i\") expression_9f2f7d root.Std_k98ojb.Math.Expression {\n            expression: \"4 * ((3*i+1)^4)\"\n        }\n        data_instance(x: -219, y: 45) data_f5c6df = [sum_8e1c5]\n        instance(x: 95, y: -13) for_0a4f2 root.Std_k98ojb.Std.For {}\n        getter(x: 105, y: 54) index_7d0a3a root.Std_k98ojb.List.FirstItem {}\n        instance(x: -292, y: 38, name: \"odd\") expression_9f2f7d root.Std_k98ojb.Math.Expression {\n            expression: \"(4*i+1)\"\n        }\n        data_instance(x: -219, y: 45) data_f5c6df = [sum_8e1c5]\n        instance(x: 95, y: -13) mul_0d7a83 root.Std_k98ojb.Math.Mul {}\n        data_f5c6df -> sum_8e1c5\n        odd -> mul_0d7a83.first\n        expression_9f2f7d.result -> mul_0d7a83.second\n        n_6f0e9b -> for_0a4f2.index\n        for_0a4f2.iteration -> sum_8e1c5.initial_value\n        sum_8e1c5.result -> output_ba8c4d\n    }\n\n    \n\n    instance(x: -67, y: 121) sum_fourth_power_f9b7d6 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -509, y: 4, name: \"n\") property(Number) n_2e5f0b\n\n        out(x: 1056, y: 7, name: \"output\") property(Number) output_8c3d21\n\n        instance(x: 85, y: 1) ifexpression_9a6f45 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 349, y: -23, name: \"odd_numbers\") For {}\n        instance(x: 86, y: -25) mul_f2d8c5 root.Std_k98ojb.Math.Mul {}\n        instance(x: -39, y: 26, name: \"fourth_power\") expression_1f6f4e root.Std_k98ojb.Math.Expression {\n            expression: \"n * n * n * n\"\n        }\n        data_instance(x: 349, y: -24) data_3d2a43  = [1]\n        instance(x: 46, y: -33) add_f9c5f0 root.Std_k98ojb.Math.Add {}\n        instance(x: -38, y: -28) div_56f6e4 root.Std_k98ojb.Math.Div {}\n        setter(x: 0, y: 0, name: \"setter_3d2a43\") setter_3d2a43 = data_3d2a43\n        instance(x: 87, y: -33) add_f9c5f0.result -> div_56f6e4.first\n        1 -> div_56f6e4.second\n        div_56f6e4.result -> add_f9c5f0.first\n        data_3d2a43 -> add_f9c5f0.second\n        expression_1f6f4e.result -> mul_f2d8c5.first\n        1 -> mul_f2d8c5.second\n        mul_f2d8c5.result -> fourth_power.first\n        data_3d2a43 -> fourth_power.second\n        div_56f6e4.result -> sum_fourth_power.n_2e5f0b\n        add_f9c5f0.result -> sum_fourth_power.sum\n    }\n\n    \n\n    instance(x: -44, y: 69) sum_fourth_power_d8d7a3 root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_ai\n        out(x: -1032, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -85, y: -46) math_modulo_node root.Std_k98ojb.Math.Modulo {}\n        side_ai -> math_modulo_node.value\n        6 -> math_modulo_node.divisor\n        math_modulo_node.result -> output_ai\n    }\n\n    \n    instance(x: -264, y: -19, name: \"cube_surface_area_0\") cube_surface_area_f4b9e2 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: -215, y: 0, name: \"side\") property(Number) side_ai\n        out(x: 216, y: 0, name: \"surface area\") property(Number) surface_area_ai\n\n        instance(x: 12, y: 0) math_pow_node root.Std_k98ojb.Math.Pow {}\n        instance(x: -109, y: 4) four_2d1e8 root.Std_k98ojb.Math.Four {}\n        four_2d1e8.four -> math_pow_node.y\n        side_ai -> math_pow_node.x\n        math_pow_node.result -> surface_area_ai\n    }\n\n    \n    instance(x: -109, y: 4) cube_surface_area_a7a3f6 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -215, y: 0, name: \"side_length\") property(Number) side_length_9e1a3f\n        out(x: 216, y: -47, name: \"result\") property(Number) result_a4d8c2\n\n        instance(x: 0, y: 0) math_pow_node root.Std_k98ojb.Math.Pow {}\n        side_length_9e1a3f -> math_pow_node.first\n        6 -> math_pow_node.y\n        math_pow_node.result -> result_a4d8c2\n    }\n\n    \n\n    instance(x: -82, y: 11) surface_area_8b5d0f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -219, y: 54, name: \"size\") property(Number) size_3d6f8b\n        out(x: 1290, y: 9, name: \"surface area\") property(Number) surface_area_7e5a4c\n\n        instance(x: 21, y: -18) math_pow_node root.Std_k98ojb.Math.Pow {}\n        size_3d6f8b -> math_pow_node.x\n        2 -> math_pow_node.y\n        math_pow_node.result -> surface_area_7e5a4c\n    }\n\n    \n\n    instance(x: 21, y: -18) cube_surface_area_9c1d0 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -213, y: -194, name: \"side\") property(Number) side_f5f6d4\n        out(x: 588, y: -215, name: \"output\") property(Number) output_8b9a0c\n\n        data_instance(x: 0, y: 1) math_pow_node root.Std_k98ojb.Math.Pow {}\n        math_pow_node.result -> surface_area.result\n        side_f5f6d4 -> math_pow_node.first\n        2 -> math_pow_node.y\n        surface_area.output_8b9a0c = (side_f5f6d4 * 6) + (surface_area.output_8b9a0c)\n    }\n\n    \n\n    instance(x: -193, y: -26, name: \"surface_area\") surface_area_1e8b3 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -213, y: 0, name: \"side\") property(Number) side_f6e3a5\n        out(x: 216, y: 0, name: \"area\") property(Number) area_8d7c45\n\n        instance(x: -44, y: -24) math_mul_node root.Std_k98ojb.Math.Mul {}\n        side_f6e3a5 -> math_mul_node.first\n        side_f6e3a5 -> math_mul_node.second\n        6 -> math_mul_node.result\n        math_mul_node.result -> area_8d7c45\n    }\n\n    \n\n    instance(x: -215, y: -23) cube_surface_area_2b1f4 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: 0, y: 0, name: \"side\") property(Number) side_a1e8f5\n        out(x: 594, y: -247, name: \"surface_area\") property(Number) surface_area_9c7d4b\n\n        instance(x: 13, y: -313) math_modulo_node root.Std_k98ojb.Math.Modulo {}\n        side_a1e8f5 -> math_modulo_node.divisor\n        6 -> math_modulo_node.value\n        math_modulo_node.result -> surface_area_9c7d4b\n    }\n\n    \n\n    instance(x: 14, y: -44) cube_surface_area_b3df2 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -219, y: 55, name: \"side\") property(Number) side_6f9a2d\n        out(x: 1386, y: 7, name: \"output\") property(Number) output_a0d5c1\n\n        instance(x: 23, y: -417) math_mul_node root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 22, y: -412) data_8d9f3e  = side\n        math_mul_node.result -> output_a0d5c1\n        data_8d9f3e -> math_mul_node.first\n        side_6f9a2d -> math_mul_node.second\n        math_mul_node.result -> surface_area.output_a0d5c1\n    }\n\n    \n\n    instance(x: 48, y: 11) surface_area_4c7f8 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -209, y: 23, name: \"side\") property(Number) side_0e2f5b\n\n        out(x: 216, y: 7, name: \"result\") property(Number) result_4a6c9d\n\n        instance(x: 20, y: -21) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 12, y: 23) data_a5f8f0  = side\n        instance(x: 13, y: -16) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        data_a5f8f0 -> mul_f892a4.first\n        6 -> pow_584bfd.y\n        mul_f892a4.result -> pow_584bfd.first\n        6 -> pow_584bfd.second\n        pow_584bfd.result -> result_4a6c9d\n    }\n\n    \n\n    instance(x: 24, y: -11) surface_area_d2f0eb root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_8a3f1b\n\n        out(x: 216, y: -19, name: \"output\") property(Number) output_7c6e5d\n\n        instance(x: 23, y: -21) math_pow_node root.Std_k98ojb.Math.Pow {}\n        math_pow_node.result -> output_7c6e5d\n        side_8a3f1b -> math_pow_node.first\n        2 -> math_pow_node.second\n        math_pow_node.value -> output_7c6e5d\n    }\n\n    \n\n    instance(x: -44, y: 13) surface_area_f0f4af root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -246, y: 23, name: \"list\") property(List) list_6b8d1a\n\n        out(x: 1040, y: 14, name: \"output\") property(Number) output_d3c4e9\n\n        instance(x: -105, y: 44, name: \"smallest\") find_smallest_7e2f71 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 95, y: 46, name: \"largest\") find_largest_d5d4a0 root.Std_k98ojb.Iteration.Find {}\n        list_6b8d1a -> find_smallest_7e2f71.items\n        func() {\n            in(x: -242, y: 23, name: \"current\") property(Number) current_b9c2e5\n\n            out(x: 1053, y: -10, name: \"bool\") property(Bool) bool_1d7df6\n\n            instance(x: 94, y: -24) modulo_8fbaea root.Std_k98ojb.Math.Modulo {}\n            instance(x: 311, y: 31) notequal_a4e0c9 root.Std_k98ojb.Logic.NotEqual {}\n            current_b9c2e5 -> modulo_8fbaea.value\n            2 -> modulo_8fbaea.divisor\n            modulo_8fbaea.result -> notequal_a4e0c9.left\n            1 -> notequal_a4e0c9.right\n            notequal_a4e0c9.result -> bool_1d7df6\n        } -> find_smallest_7e2f71.predicate\n        list_6b8d1a -> find_largest_d5d4a0.items\n        func() {\n            in(x: -242, y: 23, name: \"current\") property(Number) current_b9c2e5\n\n            out(x: 1053, y: -10, name: \") bool\") property(Bool) bool_1d7df6\n\n            instance(x: 95, y: 46, name: \"previous\") previous_ea0f8b root.Std_k98ojb.List.Previous {}\n            current_b9c2e5 -> previous_ea0f8b.value\n            previous_ea0f8b.itemAtIndex -> modulo_8fbaea.first\n            find_smallest_7e2f71.result -> bool_1d7df6\n        } -> find_largest_d5d4a1.predicate\n        list_6b8d1a -> getat_3c9d66\n        0 -> getat_3c9d66.index\n        getat_3c9d66.itemAtIndex -> previous_ea0f8b.new_value\n        find_smallest_7e2f71.execute -> previous_ea0f8b.execute\n        find_largest_d5d4a1.execute -> modulo_8fbaea.execute\n        modulo_8fbaea.continue -> find_largest_d5d4a1.reset\n    }\n\n    \n\n    instance(x: -96, y: 45) diff_largest_smallest_f2c9b0 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -294, y: 145, name: \"list\") property(List) list_1e4d0a\n\n        out(x: 1018, y: -110, name: \"difference\") property(Number) difference_d7c9db\n\n        instance(x: 121, y: -108) max_3bdf6f root.Std_k98ojb.List.Max {}\n        list_1e4d0a -> max_3bdf6f.items\n        func() {\n            in(x: -235, y: 43, name: \"min\") property(Number) min_4d2c9e\n\n            out(x: 1138, y: -108, name: \"\") property(Number) _1e3aeb\n\n            instance(x: 92, y: 35) min_6b7d23 root.Std_k98ojb.List.Min {}\n            list_1e4d0a -> min_6b7d23.items\n            min_6b7d23.result -> min_4d2c9e\n        } -> max_3bdf6f.handler\n        max_3bdf6f.max -> difference_d7c9db\n        min_4d2c9e -> _1e3aeb\n    }\n\n    \n\n    instance(x: -47, y: 53) diff_max_min_a7cd5f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -294, y: 145, name: \"items\") property(List) items_0d6b8f\n\n        out(x: 1217, y: 23, name: \"output\") property(Number) output_ea4c2e\n\n        instance(x: -106, y: 134) max_5c8f47 root.Std_k98ojb.List.Max {}\n        instance(x: 114, y: 20) min_f1d0ec root.Std_k98ojb.List.Min {}\n        items_0d6b8f -> max_5c8f47.items\n        items_0d6b8f -> min_f1d0ec.items\n        max_5c8f47.max -> output_ea4c2e\n        min_f1d0ec.min -> output_ea4c2e\n    }\n\n    \n\n    instance(x: 105, y: -124) diff_max_min_c3b7f6 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -292, y: 24, name: \"list\") property(List) list_3d0f8a\n\n        out(x: 1012, y: -14, name: \"output\") property(Number) output_e5b4c1\n\n        instance(x: 121, y: 34) max_9e4b6 root.Std_k98ojb.List.Max {}\n        instance(x: 123, y: 44) min_8d3f2b root.Std_k98ojb.List.Min {}\n        list_3d0f8a -> max_9e4b6.items\n        list_3d0f8a -> min_8d3f2b.items\n        max_9e4b6.max -> output_e5b4c1\n        min_8d3f2b.min -> output_e5b4c1\n    }\n\n    \n\n    instance(x: 109, y: -67) diff_max_min_0a7c34 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -269, y: 19, name: \"list\") property(List) list_0d9a4e\n\n        out(x: 1238, y: -1, name: \"difference\") property(Number) difference_a7f3c5\n\n        instance(x: -106, y: -121) max_m6b2eb root.Std_k98ojb.List.Max {}\n        instance(x: 103, y: -124) min_4a4e9d root.Std_k98ojb.List.Min {}\n        list_0d9a4e -> max_m6b2eb.items\n        list_0d9a4e -> min_4a4e9d.items\n        max_m6b2eb.result -> difference_a7f3c5\n        min_4a4e9d.result -> difference_a7f3c5\n    }\n\n    \n\n    instance(x: -93, y: 45) diff_max_min_ba0a8d root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -281, y: 155, name: \"list\") property(List) list_2b6d1e\n\n        out(x: 1009, y: -4, name: \"output\") property(Number) output_d3c7f5\n\n        instance(x: -109, y: -20) sort_on_f8a0eb root.Std_k98ojb.List.SortOn {}\n        list_2b6d1e -> sort_on_f8a0eb.list\n        0 -> sort_on_f8a0eb.key\n        sort_on_f8a0eb.fields -> [min, max]\n        sort_on_f8a0eb.values -> [list_2b6d1e]\n        list_2b6d1e -> sort_on_f8a0eb.items\n        instance(x: 109, y: -20) min_a5c9f4 root.Std_k98ojb.List.Min {}\n        instance(x: 110, y: -22) max_7c6b66 root.Std_k98ojb.List.Max {}\n        list_2b6d1e -> min_a5c9f4.items\n        list_2b6d1e -> max_7c6b66.items\n        min_a5c9f4.min -> output_d3c7f5\n        max_7c6b66.max -> output_d3c7f5\n    }\n\n    \n\n    instance(x: 104, y: -121) diff_largest_smallest_e5e2d1 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -278, y: 0, name: \"list\") property(List) list_f1e8b9\n\n        out(x: 1042, y: 5, name: \"output\") property(Number) output_3c6d4f\n\n        instance(x: 0, y: 0) for_7e5eb root.Std_k98ojb.Std.For {}\n        list_f1e8b9 -> for_7e5eb.items\n        func() {\n            in(x: -232, y: -26, name: \"current\") property(Number) current_c6d2a3\n\n            out(x: 1064, y: -22, name: \"bool\") property(Bool) bool_e8b0c1\n\n            instance(x: 90, y: -33) max_9f5e45 root.Std_k98ojb.List.Max {}\n            list_f1e8b9 -> max_9f5e45.values\n            max_9f5e45.result -> current_c6d2a3\n            current_c6d2a3 -> max_9f5e45.left\n            0 -> max_9f5e45.right\n            max_9f5e45.result -> bool_e8b0c1\n        } -> for_7e5eb.handler\n        func() {\n            in(x: -232, y: -26, name: \"current\") property(Number) current_c6d2a3\n\n            out(x: 1064, y: -22, name: \"bool\") property(Bool) bool_e8b0c1\n\n            instance(x: 90, y: -33) min_9f5e45 root.Std_k98ojb.List.Min {}\n            list_f1e8b9 -> min_9f5e45.values\n            min_9f5e45.result -> current_c6d2a3\n            current_c6d2a3 -> min_9f5e45.left\n            0 -> min_9f5e45.right\n            min_9f5e45.result -> bool_e8b0c1\n        } -> for_7e5eb.handler\n        list_f1e8b9 -> max_9f5e45.items\n        max_9f5e45.item -> min_9f5e45.item\n        max_9f5e45.result -> bool_e8b0c1\n        list_f1e8b9 -> for_7e5eb.items\n        for_7e5eb.index -> bool_e8b0c1\n        if(bool_e8b0c1) {\n            out(x: 1042, y: -22, name: \"output\") property(Number) output_3c6d4f = max_9f5e45.result - min_9f5e45.result\n        } else {\n            output_3c6d4f = 0\n        }\n    }\n\n    \n\n    instance(x: -92, y: 43) diff_largest_smallest_c1a7b8 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -292, y: 23, name: \"list\") property(List) list_5f6a1e\n\n        out(x: 1093, y: 11, name: \"output\") property(Number) output_7bfc9d\n\n        instance(x: 0, y: 0) max_2c4df3 root.Std_k98ojb.List.Max {}\n        instance(x: -292, y: 24) min_f8e6f5 root.Std_k98ojb.List.Min {}\n        list_5f6a1e -> max_2c4df3.items\n        list_5f6a1e -> min_f8e6f5.items\n        max_2c4df3.result -> output_7bfc9d\n        min_f8e6f5.result -> output_7bfc9d\n    }\n\n    \n\n    instance(x: -45, y: 43) diff_max_min_3a0eb1 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -281, y: 142, name: \"list\") property(List) list_5f9b6e\n\n        out(x: 1002, y: -1, name: \"output\") property(Number) output_a8c0d7\n\n        instance(x: 105, y: 84) max_d4dd34 root.Std_k98ojb.List.Max {}\n        instance(x: 104, y: 91) min_5cd7f9 root.Std_k98ojb.List.Min {}\n        list_5f9b6e -> max_d4dd34.items\n        list_5f9b6e -> min_5cd7f9.items\n        max_d4dd34.result -> output_a8c0d7\n        min_5cd7f9.result -> output_a8c0d7\n    }\n\n    \n\n    instance(x: -92, y: 528) diff_max_min_6e3b2 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -275, y: 0, name: \"list\") property(List) list_3f8e2b\n\n        out(x: 1237, y: -1, name: \"output\") property(Number) output_6c5a4d\n\n        instance(x: -105, y: 0) min_9dfc23 root.Std_k98ojb.List.Min {}\n        instance(x: -106, y: -38) max_d2e7f3 root.Std_k98ojb.List.Max {}\n        list_3f8e2b -> max_d2e7f3.items\n        list_3f8e2b -> min_9dfc23.items\n        max_d2e7f3.result -> output_6c5a4d\n        min_9dfc23.result -> output_6c5a4d\n    }\n\n    \n\n    instance(x: -45, y: 43) diff_largest_smallest_eb8cdd root.main.diff_largest_smallest {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 155, name: \"n\") property(Number) n_4a2d1e\n\n        out(x: 538, y: 142, name: \"output\") property(Bool) output_3c6f0b\n\n        instance(x: 104, y: 144) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: -45, y: 151) equal_e7a1e8 root.Std_k98ojb.Logic.Equal {}\n        n_4a2d1e -> modulo_c76d2b.value\n        0 -> equal_e7a1e8.right\n        modulo_c76d2b.result -> equal_e7a1e8.left\n        equal_e7a1e8.result -> output_3c6f0b\n    }\n\n    \n\n    instance(x: -44, y: -13) is_even_fdb9df root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 166, name: \"n\") property(Number) n_1e3d4\n\n        out(x: 555, y: -197, name: \"output\") property(Bool) output_7b5c8a\n\n        instance(x: -0, y: 169) modulo_e6c5f2 root.Std_k98ojb.Math.Modulo {}\n        is_even.result -> output_7b5c8a\n        n_1e3d4 -> modulo_e6c5f2.value\n        2 -> modulo_e6c5f2.divisor\n        modulo_e6c5f2.result -> output_7b5c8a\n    }\n\n    \n\n    instance(x: -46, y: 55) is_even_2c1d3a root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") IsEven {\n        in(x: -283, y: 0, name: \"n\") property(Number) n_2d4e1d\n\n        out(x: 123, y: -1, name: \"output\") property(Bool) output_a6c5a8\n\n        instance(x: -108, y: -12, name: \"modulo_0b3f7f\") modulo_0b3f7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 112, y: 10) equal_d1d0ec root.Std_k98ojb.Logic.Equal {}\n        n_2d4e1d -> modulo_0b3f7f.value\n        2 -> modulo_0b3f7f.divisor\n        modulo_0b3f7f.result -> equal_d1d0ec.left\n        0 -> equal_d1d0ec.right\n        equal_d1d0ec.result -> output_a6c5a8\n    }\n\n    \n\n    instance(x: -47, y: 52) IsEven_9d4e42 root.main.IsEven {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") IsEven {\n        in(x: -285, y: 0, name: \"n\") property(Number) n_a6cea7\n\n        out(x: 546, y: 1, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: 105, y: 1) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n        notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n        n_a6cea7 -> modulo_1088d5.value\n        2 -> modulo_1088d5.divisor\n        modulo_1088d5.result -> notequal_148aeb.left\n        0 -> notequal_148aeb.right\n        notequal_148aeb.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: -55, y: 529) IsEven_f53d27 root.main.IsEven {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -292, y: 19, name: \"input\") property(Number) input_a3f5db\n\n        out(x: 555, y: -10, name: \"output\") property(Bool) output_9e8b0c\n\n        instance(x: -108, y: -16, name: \"modulo_d6d7b2\") modulo_d6d7b root.Std_k98ojb.Math.Modulo {}\n        input_a3f5db -> modulo_d6d7b.left\n        2 -> modulo_d6d7b.divisor\n        modulo_d6d7b.result -> output_9e8b0c\n        input_a3f5db % 2 -> output_9e8b0c\n    }\n\n    \n\n    instance(x: -43, y: 54) is_even_b1a4ec root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -285, y: 166, name: \"input\") property(Number) input_2a6d1e\n\n        out(x: 555, y: -197, name: \"output\") property(Bool) output_e8b3f5\n\n        instance(x: -39, y: -21) modulo_f9c0ec root.Std_k98ojb.Math.Modulo {}\n        instance(x: 112, y: 85) equal_6d2a4f root.Std_k98ojb.Logic.Equal {}\n        input_2a6d1e -> modulo_f9c0ec.value\n        0 -> modulo_f9c0ec.divisor\n        modulo_f9c0ec.result -> equal_6d2a4f.left\n        2 -> equal_6d2a4f.right\n        equal_6d2a4f.result -> output_e8b3f5\n    }\n\n    \n\n    instance(x: -67, y: -37) is_even_7c9a66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -294, y: 0, name: \"n\") property(Number) n_bf6e9d\n\n        out(x: 1212, y: -1, name: \"output\") property(Bool) output_4a3c8b\n\n        instance(x: -105, y: 13) modulo_d5cd7c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 112, y: -10) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        n_bf6e9d -> modulo_d5cd7c.value\n        0 -> equal_f89569.right\n        modulo_d5cd7c.result -> output_4a3c8b\n        equal_f89569.result -> is_even\n    }\n\n    \n\n    instance(x: -46, y: 58) is_even_2e6df1 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -292, y: 155, name: \"input\") property(Number) input_5f6a1d\n\n        out(x: 546, y: -96, name: \"output\") property(Bool) output_e7c9b2\n\n        instance(x: 0, y: 0) modulo_4f8e3 root.Std_k98ojb.Math.Modulo {}\n        modulo_4f8e3.divisor = 2\n        input_5f6a1d -> modulo_4f8e3.value\n        modulo_4f8e3.result -> output_e7c9b2\n    }\n\n    \n\n    instance(x: -47, y: 69) is_even_c8c7e0 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") IsEven {\n        in(x: -292, y: 145, name: \"input\") property(Number) input_0d4a9f\n\n        out(x: 538, y: -97, name: \"output\") property(Bool) output_b1c6e8\n\n        instance(x: 0, y: 0) modulo_11c2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 0, y: 0) equal_6a5f43 root.Std_k98ojb.Logic.Equal {}\n        input_0d4a9f -> modulo_11c2b.value\n        2 -> modulo_11c2b.divisor\n        modulo_11c2b.result -> equal_6a5f43.left\n        0 -> equal_6a5f43.right\n        equal_6a5f43.result -> output_b1c6e8\n    }\n\n    \n\n    instance(x: -45, y: 19) IsEven_9d4c7b root.main.IsEven {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 165, name: \"n\") property(Number) n_6a8f0d\n\n        out(x: 540, y: 157, name: \"output\") property(Bool) output_5c7b9e\n\n        instance(x: 109, y: 155) modulo_1b4f2a root.Std_k98ojb.Math.Modulo {}\n        modulo_1b4f2a.result -> output_5c7b9e\n        n_6a8f0d -> modulo_1b4f2a.value\n        0 -> modulo_1b4f2a.divisor\n        modulo_1b4f2a.result -> output_5c7b9e\n    }\n\n    \n\n    instance(x: -44, y: 63) is_even_b8c3d6 root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") repeat_char {\n        in(x: -530, y: 2, name: \"string\") property(String) input_0\n        out(x: 344, y: 78, name: \"output\") property(String) output_3c4e7b\n\n        instance(x: 771, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -43, y: 30) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_7b3b7b.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_7b3b7b.input\n        contains_d42dce.result -> output_3c4e7b\n    }\n\n    \n\n    instance(x: -179, y: 30) repeat_char_f21f44 root.main.repeat_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"string\") property(String) input_0\n        out(x: 340, y: 77, name: \"output\") property(Any) output_195363\n\n        instance(x: -1049, y: -375) for_065883 root.Std_k98ojb.Iteration.For {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = local_index\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = local_index\n        instance(x: -432, y: 620, name: \"map_2d3b1e\") map_2d3b7 root.Std_k98ojb.Iteration.Map {}\n        setter_d09207.continue -> for_065883.reset\n        input_0 -> for_065883.items\n        execute_1e159f -> setter_d09207.execute\n        -1 -> setter_d09207.new_value\n        for_065883.done -> continue_c95bcb\n        map_2d3b7.output_list -> output_195363\n        input_0 -> map_2d3b7.handler\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_f21f44 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_0\n        out(x: 340, y: 77, name: \"output\") property(Any) output_0\n\n        instance(x: -1049, y: -375) map_bf4a7b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 196, y: 256) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 118, y: 540, name: \"map\") property(List) map_c2e1f3\n        input_0 -> map_bf4a7b.items\n        0 -> contains_d42dce.input\n        input_0 -> contains_d42dce.contains\n        map_bf4a7b.handler -> contains_d42dce.handler\n        contains_d42dce.result -> output_0\n    }\n\n    \n\n    instance(x: -67, y: -37) first_repeated_char_f21f44 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -179, y: 30) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_7b3b7b.output -> contains_d42dce.input\n        input_ai -> contains_d42dce.contains\n        contains_d42dce.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) first_repeated_char_59bc6e root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") FirstRepeat {\n        in(x: -288, y: 4, name: \"string\") property(String) input_8d3a6f\n\n        out(x: 102, y: 55, name: \"output\") property(String) output_7b9cd2\n\n        instance(x: -114, y: 49) contains_4c0e38 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 215, y: 63) firstitem_a3f6d1 root.Std_k98ojb.List.FirstItem {}\n        data_instance(x: 346, y: 59) data_e7a8ca = [contains, first]\n        instance(x: -142, y: 71) ifexpression_0c2e9b root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        instance(x: 261, y: 85) sub_6f1d7b root.Std_k98ojb.Math.Sub {}\n        list_instance(x: -114, y: 49) map_4e9c5e root.Std_k98ojb.Iteration.Map {}\n        instance(x: -142, y: 71) ifexpression_0c2e9b.then -> sub_6f1d7b.execute\n        input_8d3a6f -> map_4e9c5e.items\n        contains_4c0e38.input -> data_e7a8ca.first\n        firstitem_a3f6d1.item -> data_e7a8ca.second\n        map_4e9c5e.output_list -> output_7b9cd2\n        ifexpression_0c2e9b.then -> sub_6f1d7b.first\n        sub_6f1d7b.result -> contains_4c0e38.value\n    }\n\n    \n\n    instance(x: -63, y: 34) FirstRepeat_8a9df3 root.main.FirstRepeat {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") FirstRepeat {\n        in(x: -531, y: 2, name: \"string\") property(String) input_ae\n        out(x: 340, y: 77, name: \"output\") property(String) output_ae\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ae -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ae\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first, middle, last]\n        instance(x: -432, y: -620) split_f3f6c2 root.Std_k98ojb.Strings.Split {}\n        instance(x: -978, y: -566) filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it != first\"\n        }\n        instance(x: 188, y: 425) map_1f0a2e root.Std_k98ojb.Iteration.Map {}\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_ae -> split_f3f6c2.string\n        0 -> sub_f133b2.second\n        split_f3f6c2.strings[0] -> data_cc1b1b.first\n        map_1f0a2e.handler -> data_cc1b1b.middle\n        list_ae -> filter_4d4556.list\n        firstitem_ae -> map_1f0a2e.output_list[0]\n        instance(x: -39, y: 26) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n        data_cc1b1b.middle -> equal_a54bdc.left\n        filter_4d4556.result -> equal_a54bdc.right\n        equal_a54bdc.result -> output_ae\n    }\n\n    \n\n    instance(x: -97, y: -68) FirstRepeat_49c6ac root.main.FirstRepeat {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"string\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first, middle, last]\n        instance(x: -432, y: -620) split_d42dce root.Std_k98ojb.Strings.Split {}\n        instance(x: -978, y: -566) map_1088d5 root.Std_k98ojb.Iteration.Map {\n            handler: root.Std_k98ojb.Std.IfExpression {\n                expression: \"it == first\"\n            }\n        }\n        instance(x: 118, y: 540, name: \"counter\") count_aabb6e root.Std_k98ojb.Count {}\n        instance(x: -1191, y: -492) filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it == last\"\n        }\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 551, y: -105) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        data_cc1b1b -> map_1088d5.output_list\n        first -> split_d42dce.left\n        split_d42dce.right -> middle\n        length_4b8927.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> map_1088d5.index\n        map_1088d5.itemAtIndex -> equal_aabb6e.left\n        equal_aabb6e.result -> filter_4d4556.result\n        first -> split_d42dce.right\n        middle -> sub_f133b2.first\n        length_4b8927.length -> sub_f133b2.second\n        1 -> sub_f133b2.third\n        sub_f133b2.result -> count_aabb6e.iteration\n        filter_4d4556.itemAtIndex -> equal_aabb6e.right\n        equal_aabb6e.result -> data_cc1b1b.first\n        map_1088d5.output_list[map_1088d5.index] -> data_cc1b1b.last\n    }\n\n    \n\n    instance(x: -97, y: -68) first_repeated_char_e54b7f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"string\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -179, y: 30) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 188, y: 425) set_2c4a5f root.Std_k98ojb.Data.SetData {}\n        instance(x: -432, y: 540, name: \"character\") get_6e9b8 root.Std_k98ojb.Data.GetData {}\n        tolower_7b3b7b.output -> contains_d42dce.input\n        input_ai -> tolower_7b3b7b.input\n        set_2c4a5f.key -> contains_d42dce.input\n        1 -> set_2c4a5f.value\n        get_6e9b8.keyNotFound -> contains_d42dce.keyNotFound\n        contains_d42dce.result -> output_ai\n    }\n\n    \n\n    instance(x: -67, y: -37) first_repeated_char_f21f44 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -288, y: 3, name: \"string\") property(String) input_0\n\n        out(x: -191, y: -1, name: \"output\") property(String) output_0\n\n        instance(x: -109, y: 23) map_f4d9a8 root.Std_k98ojb.Iteration.Map {}\n        setter(x: -34, y: 18, name: \"setter_7e6c5f\") setter_7e6c5f = char\n        getter(x: 0, y: 45, name: \"getter_4a9d1f\") getter_4a9d1f = char\n        instance(x: -191, y: -2, name: \"handler\") expression_7f8e43 root.Std_k98ojb.Iteration.Map {}\n        input_0 -> map_f4d9a8.items\n        map_f4d9a8.handler -> expression_7f8e43\n        1 -> expression_7f8e43.index\n        char -> getter_4a9d1f.value\n        expression_7f8e43.result -> setter_7e6c5f.value\n    }\n\n    \n\n    instance(x: -67, y: -28) first_repeated_char_0a3b95 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") repeat_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n        instance(x: -179, y: 30) map_59bc6e root.Std_k98ojb.Iteration.Map {\n            handler: function(item) {\n                var count = {};\n                if (count[item]) {\n                    count[item]++;\n                } else {\n                    count[item] = 1;\n                }\n                return count[item];\n            }\n        }\n        instance(x: -34, y: 127) filter_7b3b7b root.Std_k98ojb.Query.Filter {}\n        list_752c60 -> map_59bc6e.items\n        map_59bc6e.output_list -> filter_7b3b7b.list\n        filter_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -97, y: 30) repeat_char_496e5e root.main.repeat_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -103, y: -76, name: \"list\") property(List) list_9f3d6a\n\n        out(x: -1091, y: -55, name: \"output\") property(Number) output_e7e8b4\n\n        instance(x: 0, y: 0, name: \"first_smallest\") property(Number) first_smallest\n        instance(x: 93, y: -103, name: \"second_smallest\") property(Number) second_smallest\n        data_instance(x: -1041, y: 69) data_c8d7c5 = [list_9f3d6a]\n        setter(x: 0, y: 0, name: \"setter_2cd6b4\") setter_2cd6b4 = first_smallest\n        instance(x: -1141, y: -75) for_f8e9c7 root.Std_k98ojb.Std.For {}\n        list_9f3d6a -> for_f8e9c7.items\n        func() {\n            in(x: -103, y: 69, name: \"current\") property(Number) current_a5f1eb\n\n            out(x: -1092, y: -54, name: \"\") property(Number) _e3b0d9\n\n            instance(x: 95, y: -101) equal_2a7c8 root.Std_k98ojb.Logic.Equal {}\n            instance(x: 92, y: -76) if_f5f6eb root.Std_k98ojb.Std.If {}\n            setter_2cd6b4.continue -> for_f8e9c7.reset\n            list_9f3d6a -> for_f8e9c7.items\n            execute_467172 -> setter_2cd6b4.execute\n            -1 -> setter_2cd6b4.new_value\n            first_smallest -> equal_2a7c8.left\n            current_a5f1eb -> equal_2a7c8.right\n            for_f8e9c7.done -> continue_075eef\n            _e3b0d9 -> second_smallest\n        } -> for_f8e9c7.handler\n        for_f8e9c7.output_list -> output_e7e8b4\n    }\n\n    \n\n    instance(x: -101, y: 45) second_smallest_5f7a6d root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -104, y: -43, name: \"list\") property(List) list_4f2d0a\n\n        out(x: 444, y: 23, name: \"min1\") property(Number) min1_a3d6c9\n        out(x: -19, y: 33, name: \"min2\") property(Number) min2_c5bfc9\n\n        instance(x: -106, y: -44, name: \"firstitem_0f7d8e\") firstitem_0f7d8e root.Std_k98ojb.List.FirstItem {}\n        instance(x: 1, y: 32, name: \"sorton_4c3a6d\") sorton_4c3a6d root.Std_k98ojb.List.SortOn {}\n        list_4f2d0a -> firstitem_0f7d8e.list\n        sorton_4c3a6d.key -> min1_a3d6c9\n        instance(x: 109, y: -46, name: \"sorton_5b1f15\") sorton_5b1f15 root.Std_k98ojb.List.Sort {}\n        list_4f2d0a -> sorton_5b1f15.items\n        min1_a3d6c9 -> sorton_5b1f15.result\n        instance(x: 114, y: -43, name: \"seconditem_0e7f8f\") seconditem_0e7f8f root.Std_k98ojb.List.SecondItem {}\n        list_4f2d0a -> seconditem_0e7f8f.list\n        instance(x: 116, y: -38, name: \"min2\") min2_c5bfc9 = sorton_5b1f15.result\n        min1_a3d6c9 -> firstitem_0f7d8e.item\n        seconditem_0e7f8f.item -> min2_c5bfc9\n    }\n\n    \n\n    instance(x: -95, y: 49) second_smallest_4a6f5a root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -104, y: 215, name: \"list\") property(List) list_5f4a6d\n\n        out(x: 1023, y: 25, name: \"output\") property(Number) output_e9e0b1\n\n        instance(x: 94, y: -105) firstitem_8c7df2 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -46, y: 258, name: \"second_item\") filter_5d6f66 root.Std_k98ojb.Query.Filter {}\n        list_5f4a6d -> filter_5d6f66.items\n        func() {\n            in(x: -105, y: -37, name: \"current\") property(Number) current_d1c2eb\n\n            out(x: 1023, y: 26, name: \"\") property(Number) _8e7b9c\n\n            instance(x: 92, y: -22) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_d1c2eb -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> _8e7b9c\n        } -> filter_5d6f66.handler\n        filter_5d6f66.result -> second_item.item\n        firstitem_8c7df2.item -> modulo_45e806.first\n        firstitem_8c7df2.list -> modulo_45e806.second\n        notequal_a54bdc.result -> _8e7b9c\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_6f1a5d root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -1098, y: 34, name: \"list\") property(List) list_0d4f5b\n\n        out(x: 1026, y: 43, name: \"output\") property(Number) output_e7c1e3\n\n        instance(x: 509, y: 46) seconditem_d2a8d9 root.Std_k98ojb.List.SecondItem {}\n        instance(x: -1045, y: -114, name: \"first_smallest\") find_first_smallest_f0df4f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -1053, y: 23, name: \"sort_on\") sort_on_4d6a2c root.Std_k98ojb.List.SortOn {}\n        instance(x: -1039, y: 44) min_a1f5e7 root.Std_k98ojb.Math.Min {}\n        list_0d4f5b -> find_first_smallest_f0df4f.items\n        sort_on_4d6a2c.key -> find_first_smallest_f0df4f.predicate\n        firstitem_d2a8d9.item -> min_a1f5e7.values\n        sort_on_4d6a2c.result -> seconditem_d2a8d9.list\n        find_first_smallest_f0df4f.item -> output_e7c1e3\n    }\n\n    \n\n    instance(x: -69, y: 63) second_smallest_b5b6eb root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -109, y: 2, name: \"list\") property(List) list_5e9f6d\n\n        out(x: 1014, y: 24, name: \"output\") property(Number) output_ba0c3d\n\n        instance(x: -442, y: -104) min_1b9cd9 root.Std_k98ojb.List.Min {}\n        instance(x: -439, y: 27) seconditem_4f8f5e root.Std_k98ojb.List.SecondItem {}\n        data_instance(x: -317, y: -114) data_e0b6a3  = [first, middle, last]\n        instance(x: -294, y: 24) sort_1c2d21 root.Std_k98ojb.List.Sort {}\n        list_5e9f6d -> sort_1c2d21.items\n        sort_1c2d21.sorted_list -> data_e0b6a3\n        firstitem_4f8f5e.item -> seconditem_4f8f5e.first\n        middle -> seconditem_4f8f5e.second\n        last -> seconditem_4f8f5e.third\n        sort_1c2d21.sorted_list[0] -> min_1b9cd9.initial_value\n        data_e0b6a3[1] -> min_1b9cd9.reducer\n        data_e0b6a3[1].value -> seconditem_4f8f5e.handler\n        data_e0b6a3[2] -> min_1b9cd9.context\n        sort_1c2d21.sorted_list[1] -> seconditem_4f8f5e.item\n    }\n\n    \n\n    instance(x: -63, y: 53) second_smallest_b7e0f0 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -114, y: 0, name: \"list\") property(List) list_ea5f9e\n\n        out(x: 1018, y: 23, name: \"min\") property(Number) min_3d2e1d\n        out(x: 1084, y: 24, name: \"second_min\") property(Number) second_min_7c8a6b\n\n        instance(x: -1049, y: -105) firstitem_e0f5f1 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1093, y: -69, name: \"min_list\") root.Std_k98ojb.List.Min {}\n        instance(x: 94, y: -103) seconditem_8a6e9d root.Std_k98ojb.List.SecondItem {}\n        list_ea5f9e -> min_list.items\n        minitem_e0f5f1.item -> min_list.min\n        list_ea5f9e -> firstitem_e0f5f1.list\n        seconditem_8a6e9d.item -> min_list.second_min\n        minitem_e0f5f1.onItem -> seconditem_8a6e9d.execute\n        firstitem_e0f5f1.item -> minitem_e0f5f1.first\n        minitem_e0f5f1.onItem -> minitem_e0f5f1.second\n        minitem_e0f5f1.index -> seconditem_8a6e9d.index\n    }\n\n    \n\n    instance(x: -68, y: 55) second_smallest_f7f4b3 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -109, y: -79, name: \"list\") property(List) list_8a9f0d\n\n        out(x: -108, y: -71, name: \"min\") property(Number) min_a3c5e4\n        out(x: 1002, y: -75, name: \"second_min\") property(Number) second_min_3b1d42\n\n        instance(x: -1047, y: -69) for_6f9e0a root.Std_k98ojb.Std.For {}\n        instance(x: 93, y: -105) equal_8df5c2 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 96, y: -73) choose_3d4f45 root.Std_k98ojb.Std.Choose {}\n        list_8a9f0d -> for_6f9e0a.items\n        min_a3c5e4 -> choose_3d4f45.value\n        second_min_3b1d42 -> choose_3d4f45.then\n    }\n\n    \n\n    instance(x: -67, y: 44) second_smallest_7df2d8 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -142, y: 2, name: \"list\") property(List) list_0e3d9a\n\n        out(x: 1024, y: 27, name: \"second\") property(Number) second_8f1c6b\n\n        instance(x: 95, y: 25, name: \"first_smallest\") find_first_smallest {}\n        instance(x: -142, y: -10, name: \"execute\") trigger() execute_f2d4e5\n        in(x: 0, y: 0, name: \"target\") property(Number) target_8f1c6b\n\n        out(x: 1033, y: 28, name: \"continue\") trigger() continue_c7a4d4\n        out(x: 1025, y: -2, name: \"output\") property(Number) output_0e3d9a\n\n        setter(x: 0, y: 0, name: \"setter_8f1c6b\") setter_8f1c6b = second\n        instance(x: 95, y: -15) equal_d7f2eb root.Std_k98ojb.Logic.Equal {}\n        instance(x: -142, y: 3) if_9d5e4a root.Std_k98ojb.Std.If {}\n        setter_8f1c6b.continue -> find_first_smallest.reset\n        list_0e3d9a -> find_first_smallest.items\n        execute_f2d4e5 -> setter_8f1c6b.execute\n        -1 -> setter_8f1c6b.new_value\n        find_first_smallest.done -> continue_c7a4d4\n        equal_d7f2eb.result -> if_9d5e4a.predicate\n        if_9d5e4a.else -> find_first_smallest.next\n        find_first_smallest.onItem -> setter_8f1c6b.execute\n        equal_d7f2eb.left -> setter_8f1c6b.value\n        target_8f1c6b -> equal_d7f2eb.right\n        if_9d5e4a.then -> find_first_smallest.item\n    }\n\n    \n\n    instance(x: 1023, y: -67) second_smallest_b0e5d2 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -109, y: 2, name: \"list\") property(List) list_0e3a8d\n\n        out(x: 123, y: 27, name: \"min\") property(Number) min_bf9c1b\n        out(x: 129, y: 23, name: \"output\") property(Number) output_c4d5d6\n\n        instance(x: 96, y: -105) firstitem_3e7a8 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 92, y: 25) seconditem_1c9aeb root.Std_k98ojb.List.SecondItem {}\n        data_instance(x: -55, y: 59) data_e1f2f6  = [first, middle, last]\n        instance(x: 439, y: 64) sort_d5d3e7 root.Std_k98ojb.List.Sort {}\n        list_0e3a8d -> sort_d5d3e7.items\n        sort_d5d3e7.sorted_list -> data_e1f2f6\n        firstitem_3e7a8.item -> seconditem_1c9aeb.first\n        seconditem_1c9aeb.item -> seconditem_1c9aeb.second\n        data_e1f2f6.first -> min_bf9c1b\n        sort_d5d3e7.sorted_list[0] -> output_c4d5d6\n    }\n\n    \n\n    instance(x: 101, y: -37) second_smallest_6f8a15 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -103, y: 201, name: \"list\") property(List) list_6d8e9a\n\n        out(x: 0, y: 0, name: \"output\") property(Number) output_1c5f7b\n\n        instance(x: 0, y: 0, name: \"first_smallest\") property(Number) first_smallest_2e3ebd\n        instance(x: -108, y: 25, name: \"second_smallest_node\") property(Number) second_smallest_4c7f9b\n\n        instance(x: -1048, y: -69, name: \"first_smallest_node\") property(Number) first_smallest_2e3ebd\n        instance(x: -1031, y: 17, name: \"second_smallest_node\") property(Number) second_smallest_4c7f9b\n\n        instance(x: -1086, y: 0, name: \"first_smallest_node\") property Number first_smallest_2e3ebd\n        instance(x: -1031, y: 25, name: \"second_smallest_node\") property Number second_smallest_4c7f9b\n\n        setter(x: 0, y: 0, name: \"setter_e6a8f5\") setter_e6a8f5 = index\n        instance(x: -1048, y: -69, name: \"first_smallest_node\") property Number first_smallest_2e3ebd\n        instance(x: -1031, y: 17, name: \"second_smallest_node\") property Number second_smallest_4c7f9b\n\n        instance(x: 0, y: 0, name: \"first_smallest_node\") property Number first_smallest_2e3ebd\n        instance(x: -1086, y: 0, name: \"second_smallest_node\") property Number second_smallest_4c7f9b\n\n        instance(x: 0, y: 0, name: \"setter_e6a8f5\") setter_e6a8f5 = index\n        list_6d8e9a -> first_smallest_node.items\n        execute_467172 -> setter_e6a8f5.execute\n        -1 -> setter_e6a8f5.new_value\n        first_smallest_node.continue -> second_smallest_node.execute\n        2 -> setter_e6a8f5.new_value\n        second_smallest_node.continue -> output_1c5f7b.execute\n        first_smallest_node.index -> second_smallest_node.new_value\n    }\n\n    \n\n    instance(x: -104, y: -67) second_smallest_4c7f9b root.main.second_smallest {}\n}"
            ]
        }
    }
]