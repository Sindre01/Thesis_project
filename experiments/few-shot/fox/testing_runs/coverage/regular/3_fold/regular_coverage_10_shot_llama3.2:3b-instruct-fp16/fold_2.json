[
    {
        "experiment_name": "regular_coverage_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12395,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -222, y: 34, name: \"list1\") property(List) list_2f4e84\n        in(x: -233, y: -6, name: \"list2\") property(List) list_a7a9c3\n\n        out(x: 1038, y: -25, name: \"output\") property(Bool) output_5d0b8c\n\n        instance(x: 118, y: 69) filter_4e7f6a root.Std_k98ojb.Query.Filter {}\n        list_2f4e84 -> filter_4e7f6a.list\n        list_a7a9c3 -> filter_4e7f6a.where\n        func() {\n            in(x: -191, y: 36, name: \"item\") property(Number) item_c0d1e9\n\n            out(x: 1278, y: 26, name: \"\") property(Bool) output_b2b21f\n\n            instance(x: 104, y: 56) contains_23c5a7 root.Std_k98ojb.List.Contains {}\n            list_a7a9c3 -> contains_23c5a7.item\n            item_c0d1e9 -> contains_23c5a7.value\n            contains_23c5a7.is_contained -> output_b2b21f\n        } -> filter_4e7f6a.handler\n        list_a7a9c3 -> filter_4e7f6a.output_list\n        filter_4e7f6a.result -> output_b2b21f\n    }\n\n    \n\n    instance(x: -56, y: 567) has_common_element_d5bc8d root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -202, y: 34, name: \"list1\") property(List) list_4fda23\n        in(x: 19, y: 43, name: \"list2\") property(List) list_eb3a94\n\n        out(x: 1050, y: -28, name: \"output\") property(Bool) output_7c5d96\n\n        instance(x: 0, y: 0) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        list_4fda23 -> map_f2330d.items\n        func() {\n            in(x: -142, y: 24, name: \"element\") property(Number) element_1a7c3e\n\n            out(x: 305, y: 12, name: \"\") property(Bool) bool_eb5a2f\n\n            instance(x: 0, y: 28) contains_c4d42e root.Std_k98ojb.List.Contains {}\n            element_1a7c3e -> contains_c4d42e.item\n            list_eb3a94 -> contains_c4d42e.list\n            contains_c4d42e.is_contained -> bool_eb5a2f\n        } -> map_f2330d.handler\n        map_f2330d.output_list -> output_7c5d96\n    }\n\n    \n\n    instance(x: 95, y: -24) has_common_element_d6af36 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: 5, y: -14, name: \"list1\") property(List) list_1a3f2b\n        in(x: -242, y: -86, name: \"list2\") property(List) list_b6d7e9\n\n        out(x: 1134, y: -88, name: \"result\") property(Bool) result_e0e23c\n\n        instance(x: 73, y: 21) intersection_8b1cd3 root.Std_k98ojb.Setts.Intersection {}\n        list_b6d7e9 -> intersection_8b1cd3.left\n        list_1a3f2b -> intersection_8b1cd3.right\n        func() {\n            in(x: -123, y: 30, name: \"item\") property(Number) item_4c9dd5\n\n            out(x: 1156, y: 28, name: \"\") property(Bool) output_f0d2e8\n\n            instance(x: 98, y: 16) contains_32727 root.Std_k98ojb.List.Contains {}\n            list_b6d7e9 -> contains_32727.item\n            item_4c9dd5 -> contains_32727.value\n            contains_32727.is_contained -> output_f0d2e8\n        } -> intersection_8b1cd3.handler\n        intersection_8b1cd3.intersect -> result_e0e23c\n    }\n\n    \n\n    instance(x: 9, y: 73) has_common_element_c4fdd5 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -275, y: 2, name: \"list1\") property(List) list_9f6a56\n        in(x: -281, y: -22, name: \"list2\") property(List) list_eba4e8\n\n        out(x: 1247, y: 23, name: \"output\") property(Bool) output_3d41fa\n\n        instance(x: 0, y: 0) contains_1c5f50 root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -295, y: 39, name: \"item\") property(Number) item_ab2e8a\n\n            out(x: 1013, y: 49, name: \"\") property(Bool) bool_1c5dca\n\n            instance(x: 0, y: 41) contains_2b7a4f root.Std_k98ojb.List.Contains {}\n            list_eba4e8 -> contains_2b7a4f.items\n            item_ab2e8a -> contains_2b7a4f.item\n            contains_2b7a4f.is_contained -> bool_1c5dca\n        } -> contains_1c5f50.handler\n        list_9f6a56 -> contains_1c5f50.items\n        has_common_element.output_list -> output_3d41fa\n    }\n\n    \n\n    instance(x: 91, y: -4) has_common_element_b0e23f root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -231, y: 32, name: \"list1\") property(List) list_58d5df\n        in(x: -226, y: 28, name: \"list2\") property(List) list_c41f43\n\n        out(x: 0, y: 35, name: \"output\") property(Bool) output_d4c59e\n\n        instance(x: 95, y: 38) map_8d1dbb root.Std_k98ojb.Iteration.Map {}\n        instance(x: 109, y: 21) contains_9fdd5a root.Std_k98ojb.List.Contains {}\n        instance(x: 244, y: 46) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -222, y: 23, name: \"elem\") property(Number) elem_b6e2c0\n\n            out(x: 0, y: 35, name: \"\") property(Bool) bool_5d3fdd\n\n            instance(x: 91, y: 33) modulo_d4aeb8 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 270, y: 38) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_7836b4.right\n            modulo_d4aeb8.result -> notequal_7836b4.left\n            elem_b6e2c0 -> modulo_d4aeb8.value\n            notequal_7836b4.result -> bool_5d3fdd\n        } -> map_8d1dbb.handler\n        list_c41f43 -> map_8d1dbb.items\n        func() {\n            in(x: -225, y: 20, name: \"current\") property(Number) current_2a6c4e\n\n            out(x: 0, y: 35, name: \"\") property(Bool) bool_5d3fdd\n\n            instance(x: 91, y: 32) modulo_d4aeb8 root.Std_k98ojb.Math.Modulo {}\n            current_2a6c4e -> modulo_d4aeb8.value\n            0 -> modulo_d4aeb8.divisor\n            modulo_d4aeb8.result -> bool_5d3fdd\n        } -> map_8d1dbb.handler\n        list_c41f43 -> map_8d1dbb.items\n        map_8d1dbb.output_list -> contains_9fdd5a.list\n        false -> contains_9fdd5a.item\n        not_75283f.result -> output_d4c59e\n        contains_9fdd5a.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: 91, y: 19) has_common_element_b2e7b root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -193, y: 11, name: \"list1\") property(List) list_1d6eef\n        in(x: -189, y: -34, name: \"list2\") property(List) list_7b9f31\n\n        out(x: 1053, y: -26, name: \"output\") property(Bool) output_a5a1bb\n\n        instance(x: 133, y: 24) contains_e2e6d0 root.Std_k98ojb.List.Contains {}\n        list_7b9f31 -> contains_e2e6d0.list\n        func() {\n            in(x: -121, y: 47, name: \"element\") property(Number) element_93c8dd\n\n            out(x: 305, y: 23, name: \"\") property(Bool) bool_7f3b1a\n\n            instance(x: 0, y: 0) find_d4e6d9 root.Std_k98ojb.List.Contains {}\n            list_1d6eef -> find_d4e6d9.list\n            element_93c8dd -> find_d4e6d9.item\n            find_d4e6d9.is_contained -> bool_7f3b1a\n        } -> contains_e2e6d0.handler\n        list_7b9f31 -> contains_e2e6d0.items\n        contains_e2e6d0.is_contained -> output_a5a1bb\n    }\n\n    \n\n    instance(x: -56, y: 512) has_common_bdf4c8 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -193, y: 18, name: \"list1\") property(List) list_54a5b3\n        in(x: -198, y: -22, name: \"list2\") property(List) list_e0e7aa\n\n        out(x: 1189, y: 49, name: \"output\") property(Bool) output_b4c0ca\n\n        instance(x: 93, y: -39) filter_1f0a24 root.Std_k98ojb.Iteration.Filter {}\n        list_e0e7aa -> filter_1f0a24.items\n        func() {\n            in(x: -111, y: 26, name: \"elem\") property(Number) elem_8c6e9d\n\n            out(x: 1105, y: 35, name: \"\") property(Bool) bool_b2b4a3\n\n            instance(x: 76, y: 27) contains_79f8ee root.Std_k98ojb.List.Contains {}\n            elem_8c6e9d -> contains_79f8ee.item\n            list_e0e7aa -> contains_79f8ee.list\n            contains_79f8ee.is_contained -> bool_b2b4a3\n        } -> filter_1f0a24.handler\n        output_b4c0ca -> bool_b2b4a3\n    }\n\n    \n\n    instance(x: -45, y: 520) has_common_9d2e15 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -245, y: 1, name: \"list1\") property(List) list_9d0a4e\n        in(x: -243, y: -15, name: \"list2\") property(List) list_e87a60\n\n        out(x: 1235, y: -14, name: \"result\") property(Bool) result_b3f6e1\n\n        instance(x: 0, y: 0) filter_c91965 root.Std_k98ojb.Query.Filter {}\n        list_9d0a4e -> filter_c91965.items\n        instance(x: -2, y: 24) contains_f8c43f root.Std_k98ojb.List.Contains {}\n        list_e87a60 -> contains_f8c43f.list\n        false -> contains_f8c43f.item\n        result_b3f6e1.result -> filter_c91965.is_contained\n    }\n\n    \n\n    instance(x: 0, y: -15) has_common_4d42b2 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -273, y: 18, name: \"list1\") property(List) list_3d9e65\n        in(x: -279, y: -17, name: \"list2\") property(List) list_f6c4a8\n\n        out(x: 1009, y: -109, name: \"continue\") trigger() continue_0f55b1\n        out(x: 1045, y: 221, name: \"output\") property(Bool) output_a2e7eb\n\n        instance(x: 0, y: 0, name: \"intersection\") Query_filter root.Std_k98ojb.Query.Filter {}\n        list_3d9e65 -> intersection.where\n        list_f6c4a8 -> intersection.where\n        func() {\n            in(x: -129, y: 34, name: \"element\") property(Number) element_0f1c2a\n\n            out(x: 1215, y: -33, name: \")\") property(Bool) bool_cdd3d4\n\n            instance(x: 10, y: 30) contains_f7e6b9 root.Std_k98ojb.List.Contains {}\n            list_3d9e65 -> contains_f7e6b9.item\n            element_0f1c2a -> contains_f7e6b9.contains\n            bool_cdd3d4.result = contains_f7e6b9.is_contained\n        } -> intersection.handler\n        list_3d9e65 -> intersection.items\n        func() {\n            in(x: -134, y: 43, name: \"element\") property(Number) element_a9c1a2\n\n            out(x: 1034, y: 36, name: \"\") property(Bool) bool_baa5b3\n\n            instance(x: 12, y: 41) contains_f7e6b9 root.Std_k98ojb.List.Contains {}\n            list_f6c4a8 -> contains_f7e6b9.item\n            element_a9c1a2 -> contains_f7e6b9.contains\n            bool_baa5b3.result = contains_f7e6b9.is_contained\n        } -> intersection.handler\n        list_f6c4a8 -> intersection.items\n        func() {\n            in(x: -129, y: 34, name: \"element\") property(Number) element_0f1c2a\n\n            out(x: 1215, y: -33, name: \")\") property(Bool) bool_cdd3d4\n\n            instance(x: 10, y: 30) contains_f7e6b9 root.Std_k98ojb.List.Contains {}\n            list_3d9e65 -> contains_f7e6b9.item\n            element_0f1c2a -> contains_f7e6b9.contains\n            bool_cdd3d4.result = contains_f7e6b9.is_contained\n        } -> intersection.handler\n        func() {\n            in(x: -134, y: 43, name: \"element\") property(Number) element_a9c1a2\n\n            out(x: 1034, y: 36, name: \"\") property(Bool) bool_baa5b3\n\n            instance(x: 12, y: 41) contains_f7e6b9 root.Std_k98ojb.List.Contains {}\n            list_f6c4a8 -> contains_f7e6b9.item\n            element_a9c1a2 -> contains_f7e6b9.contains\n            bool_baa5b3.result = contains_f7e6b9.is_contained\n        } -> intersection.handler\n        func() {\n            in(x: -129, y: 34, name: \"element\") property(Number) element_0f1c2a\n\n            out(x: 1215, y: -33, name: \")\") property(Bool) bool_cdd3d4\n\n            instance(x: 10, y: 30) contains_f7e6b9 root.Std_k98ojb.List.Contains {}\n            list_3d9e65 -> contains_f7e6b9.item\n            element_0f1c2a -> contains_f7e6b9.contains\n            bool_cdd3d4.result = contains_f7e6b9.is_contained\n        } -> intersection.handler\n        bool_baa5b3.result && bool_cdd3d4.result -> output_a2e7eb\n    }\n\n    \n\n    instance(x: 0, y: -8) has_common_66f67a root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -229, y: 55, name: \"list1\") property(List) list_4d5f35\n        in(x: -217, y: -11, name: \"list2\") property(List) list_b3c67e\n\n        out(x: 1128, y: 23, name: \"output\") property(Bool) output_fcd7f1\n\n        instance(x: 13, y: 40) contains_33a4d5 root.Std_k98ojb.List.Contains {}\n        list_b3c67e -> contains_33a4d5.item\n        list_4d5f35 -> contains_33a4d5.list\n        if_7c284f root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -114, y: 66, name: \"elem\") property(Number) elem_f6dd62\n\n            out(x: 1111, y: 15, name: \"bool\") property(Bool) bool_b4a7f5\n\n            instance(x: 92, y: 50) equal_8edc34 root.Std_k98ojb.Logic.Equal {}\n            elem_f6dd62 -> equal_8edc34.left\n            list_4d5f35 -> equal_8edc34.right\n            if_7c284f.predicate -> bool_b4a7f5\n        } -> contains_33a4d5.handler\n        list_4d5f35 -> contains_33a4d5.list\n        list_b3c67e -> contains_33a4d5.item\n        has_common_element.output -> output_fcd7f1\n    }\n\n    \n\n    instance(x: 105, y: -29) has_common_element_9b0c74 root.main.has_common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given list contains consecutive numbers or not.\") contain_consecutive {\n        in(x: -305, y: 0, name: \"list\") property(List) list_8a5d84\n\n        out(x: 1111, y: 25, name: \"continue\") trigger() continue_07e7b9\n        out(x: 1234, y: 24, name: \"output\") property(Number) output_d2f0c6\n\n        instance(x: 101, y: -10, name: \"contains_consecutive\") filter_b3d5b4 root.Std_k98ojb.Iteration.Filter {}\n        list_8a5d84 -> contains_consecutive.items\n        func() {\n            in(x: -108, y: 38, name: \"i\") property(Number) i_2ddc7f\n\n            out(x: 1159, y: -27, name: \"\") property(Bool) bool_e89a6e\n\n            instance(x: 106, y: 39) equal_d85bf0 root.Std_k98ojb.Logic.Equal {}\n            instance(x: 113, y: 33) less_7d4f8c root.Std_k98ojb.Math.LessThanOrEqual {}\n            i_2ddc7f -> less_7d4f8c.left\n            list_8a5d84 -> less_7d4f8c.right\n            less_7d4f8c.result -> bool_e89a6e\n        } -> filter_b3d5b4.handler\n        contains_consecutive.output_list -> output_d2f0c6\n    }\n\n    \n\n    instance(x: -56, y: 521) contain_consecutive_9bdff1 root.main.contain_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -233, y: 2, name: \"list\") property(List) list_6d8f0e\n\n        out(x: 1274, y: -13, name: \"output\") property(Bool) output_eb1a94\n\n        instance(x: 15, y: 11) isconsecutive_9a2c7b root.Std_k98ojb.Iteration.Filter {}\n        list_6d8f0e -> isconsecutive_9a2c7b.items\n        func() {\n            in(x: -228, y: 19, name: \"x\") property(Number) x_5ca3ae\n\n            out(x: 1001, y: 43, name: \"\") property(Number) _diff_3f8d85\n\n            instance(x: 14, y: 29) sub_65e42b root.Std_k98ojb.Math.Sub {}\n            instance(x: -17, y: 35) notequal_e5c4a0 root.Std_k98ojb.Logic.NotEqual {}\n            x_5ca3ae -> notequal_e5c4a0.left\n            1 -> notequal_e5c4a0.right\n            sub_65e42b.result -> _diff_3f8d85\n            notequal_e5c4a0.result -> isconsecutive_9a2c7b.input\n        } -> isconsecutive_9a2c7b.handler\n        isconsecutive_9a2c7b.output_list -> output_eb1a94\n    }\n\n    \n\n    instance(x: -26, y: 73) is_consecutive_dfed5f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -102, y: 13, name: \"list\") property(List) list_3a4f2b\n\n        out(x: 1085, y: 34, name: \"output\") property(Bool) output_9c6e8d\n\n        instance(x: 94, y: -109, name: \"difference\") filter_bcd1be root.Std_k98ojb.Iteration.Filter {}\n        list_3a4f2b -> filter_bcd1be.items\n        func() {\n            in(x: -134, y: 28, name: \"current\") property(Number) current_5d2e6c\n\n            out(x: 1127, y: 59, name: \"\") property(Number) _difference_54af23\n\n            instance(x: 98, y: 47) sub_9a4b3f root.Std_k98ojb.Math.Sub {}\n            current_5d2e6c -> sub_9a4b3f.first\n            list_3a4f2b[1] -> sub_9a4b3f.second\n            sub_9a4b3f.result -> _difference_54af23\n        } -> filter_bcd1be.handler\n        filter_bcd1be.output_list -> output_9c6e8d\n    }\n\n    \n\n    instance(x: 123, y: -39) is_consecutive_ca5ed0 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -219, y: 2, name: \"list\") property(List) list_1d3a11\n\n        out(x: 1024, y: 10, name: \"result\") property(Bool) result_a0e6b7\n\n        instance(x: 0, y: 0) next_item_f35f43 root.Std_k98ojb.Std.For {}\n        instance(x: -193, y: 31, name: \"counter\") property(Number) counter_60d3c9\n        instance(x: 103, y: 40) diff_1a8ec6 root.Std_k98ojb.Math.Sub {}\n        instance(x: 109, y: 53) if_e2f4e5 root.Std_k98ojb.Std.If {}\n        instance(x: -27, y: 69) diff_7c9b3d root.Std_k98ojb.Math.Div {}\n        instance(x: -30, y: 96) not_equal_9cd66a root.Std_k98ojb.Logic.NotEqual {}\n\n        list_1d3a11 -> next_item_f35f43.items\n        counter_60d3c9.reset -> next_item_f35f43.reset\n        for_65c2c7.index -> diff_1a8ec6.first\n        1 -> diff_1a8ec6.second\n        list_1d3a11 -> diff_1a8ec6.items\n        counter_60d3c9.value -> diff_7c9b3d.value\n        if_7c284f.item -> not_equal_9cd66a.left\n        next_item_f35f43.item -> not_equal_9cd66a.right\n        for_65c2c7.onItem -> if_e2f4e5.execute\n        list_1d3a11 -> diff_7c9b3d.items\n        diff_7c9b3d.result -> not_equal_9cd66a.left\n        1 -> not_equal_9cd66a.right\n        not_equal_9cd66a.result -> result_a0e6b7\n    }\n\n    \n\n    instance(x: -197, y: 22) is_consecutive_8fdd94 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -253, y: 0, name: \"list\") property(List) list_9e74f3\n\n        out(x: 1026, y: 40, name: \"output\") property(Bool) output_ea55d1\n\n        instance(x: 93, y: 34) for_0c87b5 root.Std_k98ojb.Std.For {}\n        list_9e74f3 -> for_0c87b5.items\n        func() {\n            in(x: -119, y: 71, name: \"current\") property(Number) current_1dbd26\n\n            out(x: 342, y: 39, name: \"\") property(Number) _7e4a9f\n\n            instance(x: 92, y: 27) less_than_b2b0c5 root.Std_k98ojb.Math.LessThanOrEqual {}\n            instance(x: -29, y: 71) if_3d4d1f root.Std_k98ojb.Std.If {}\n            instance(x: 103, y: 26) increment_6a4e7e root.Std_k98ojb.Std.For {}\n            instance(x: 89, y: 37) not_equal_d0c9bf root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -20, y: 65) count_1f8d3f root.Std_k98ojb.Std.Count {}\n            list_9e74f3 -> increment_6a4e7e.items\n            less_than_b2b0c5.left -> current_1dbd26\n            less_than_b2b0c5.right -> _7e4a9f\n            if_3d4d1f.value -> not_equal_d0c9bf.predicate\n            increment_6a4e7e.index -> count_1f8d3f.new_value\n        } -> for_0c87b5.handler\n        is_consecutive.output_list -> output_ea55d1\n    }\n\n    \n\n    instance(x: 90, y: -104) is_consecutive_b9f44f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -228, y: 46, name: \"list\") property(List) list_2d6e84\n\n        out(x: 1068, y: 44, name: \"output\") property(Bool) output_b3f5dc\n\n        instance(x: 104, y: 30) for_1b0f71 root.Std_k98ojb.Std.For {}\n        instance(x: -32, y: 74) contains_6c2d4a root.Std_k98ojb.List.Contains {}\n        instance(x: 272, y: 24) equal_4b3e43 root.Std_k98ojb.Logic.Equal {}\n        func() {\n            in(x: 0, y: -15, name: \"i\") property(Number) i_9d7c89\n            out(x: 107, y: 29, name: \"\") property(Bool) bool_a1e4a3\n\n            instance(x: 109, y: -10, name: \"diff\") modulo_f6b0f2 root.Std_k98ojb.Math.Modulo {}\n            i_9d7c89 -> diff.value\n            1 -> diff.divisor\n            contains_6c2d4a.item -> equal_4b3e43.left\n            for_1b0f71.index -> equal_4b3e43.right\n            modulo_f6b0f2.result -> bool_a1e4a3\n        } -> for_1b0f71.handler\n        list_2d6e84 -> for_1b0f71.items\n        contains_6c2d4a.is_contained -> bool_a1e4a3\n    }\n\n    \n\n    instance(x: -27, y: 45) is_consecutive_d34de9 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: 5, y: -15, name: \"list\") property(List) list_b56d1e\n\n        out(x: 1249, y: -18, name: \"output\") property(Bool) output_9c94a3\n\n        instance(x: -341, y: -201) count_f6f4fa root.Std_k98ojb.Std.Count {}\n        list_b56d1e -> count_f6f4fa.items\n        0 -> count_f6f4fa.reset\n        count_f6f4fa.value -> is_consecutive_9c94a3\n\n        instance(x: -19, y: -11) equal_d7c5b2 root.Std_k98ojb.Logic.Equal {}\n        list_b56d1e[0] -> equal_d7c5b2.left\n        list_b56d1e[1] -> equal_d7c5b2.right\n        1 -> equal_d7c5b2.new_value\n        is_consecutive_9c94a3 -> equal_d7c5b2.result\n        output_9c94a3 -> true if equal_d7c5b2.result; else false\n    }\n\n    \n\n    instance(x: -193, y: 539) is_consecutive_6e2f45 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: 2, y: -8, name: \"list\") property(List) list_4f5a1b\n\n        out(x: 1020, y: -10, name: \"output\") property(Bool) output_f56dd9\n\n        instance(x: 11, y: 76) is_consecutive_2d9f6 root.Std_k98ojb.List.IsConsecutive {}\n        list_4f5a1b -> is_consecutive_2d9f6.items\n        is_consecutive_2d9f6.result -> output_f56dd9\n    }\n\n    \n\n    instance(x: 103, y: -31) is_consecutive_d7e0c3 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: 4, y: -25, name: \"list\") property(List) list_6d1a47\n\n        out(x: 1019, y: -8, name: \"output\") property(Bool) output_b2c5f4\n\n        instance(x: -246, y: -13, name: \"is consecutive\") filter_f3b46d root.Std_k98ojb.Query.Filter {}\n        list_6d1a47 -> filter_f3b46d.items\n        func() {\n            in(x: 2, y: 33, name: \"i\") property(Number) i_a9c43e\n\n            out(x: 201, y: -17, name: \"\") property(Number) diff_4f0a1d\n\n            instance(x: 15, y: 26) sub_e6bb54 root.Std_k98ojb.Math.Sub {}\n            list_6d1a47 -> sub_e6bb54.items\n            i_a9c43e -> sub_e6bb54.first\n            i_a9c43e -> sub_e6bb54.second\n            diff_4f0a1d.result -> output_b2c5f4\n        } -> filter_f3b46d.handler\n        is_consecutive.output_list -> output_b2c5f4\n    }\n\n    \n\n    instance(x: -213, y: 44) is_consecutive_9e7ae6 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given list contains consecutive numbers or not.\") contains_consecutive {\n        in(x: -208, y: 46, name: \"list\") property(List) list_6f0d8e\n\n        out(x: 1054, y: -42, name: \"output\") property(Bool) output_7b5ce3\n\n        instance(x: 11, y: 2) map_b9a1c7 root.Std_k98ojb.Iteration.Map {}\n        list_6f0d8e -> map_b9a1c7.items\n        func() {\n            in(x: -123, y: -14, name: \"current\") property(Number) current_e0df2e\n\n            out(x: 341, y: -15, name: \"\") property(Number) _temp_4fbb3b\n\n            instance(x: 10, y: -41) sub_a9a0c1 root.Std_k98ojb.Math.Sub {}\n            instance(x: 335, y: 16, name: \"previous\") property(Number) previous_d2d5e8\n            current_e0df2e -> sub_a9a0c1.first\n            -1 -> sub_a9a0c1.second\n            sub_a9a0c1.result -> _temp_4fbb3b\n        } -> map_b9a1c7.handler\n        map_b9a1c7.output_list -> contains_consecutive.list\n        for_065883.index -> previous_d2d5e8\n        func() {\n            in(x: -113, y: 43, name: \"current\") property(Number) current_2f4bdf\n\n            out(x: 105, y: -22, name: \"\") property(Bool) bool_1cd7fa\n\n            instance(x: 0, y: -33) not_e3e24d root.Std_k98ojb.Logic.Not {}\n            previous_d2d5e8 -> not_e3e24d.left\n            current_2f4bdf -> not_e3e24d.right\n            not_e3e24d.result -> bool_1cd7fa\n        } -> contains_consecutive.handler\n        contains_consecutive.output_list -> output_7b5ce3\n    }\n\n    \n\n    instance(x: 104, y: 57) contains_consecutive_d8a4f5 root.main.contains_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: 3, y: -14, name: \"main_list\") property(List) main_list_4a5e6f\n        in(x: 4, y: -44, name: \"sublist\") property(List) sublist_d9c9d2\n\n        out(x: 1071, y: -29, name: \"continue\") trigger() continue_0ad3db\n        out(x: 964, y: 26, name: \"output\") property(Bool) output_4a6f5e\n\n        setter(x: 0, y: 0, name: \"setter_a1d8c9\") setter_a1d8c9 = index\n        instance(x: -42, y: 20) for_34cafe root.Std_k98ojb.Std.For {}\n        getter(x: 1085, y: 28, name: \"getter_b3a1bb\") getter_b3a1bb = index\n        setter_a1d8c9.continue -> for_34cafe.reset\n        main_list_4a5e6f -> for_34cafe.items\n        sublist_d9c9d2 -> for_34cafe.items\n        -1 -> setter_a1d8c9.new_value\n        for_34cafe.done -> continue_0ad3db\n        getter_b3a1bb.value -> output_4a6f5e\n    }\n\n    \n\n    instance(x: 22, y: 105) is_sublist_98d15b root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -233, y: 2, name: \"main_list\") property(List) main_list_5d8d28\n        in(x: 4, y: 1, name: \"sublist\") property(List) sublist_a6b9ad\n\n        out(x: 0, y: 0, name: \"output\") property(Bool) output_d66f3e\n\n        instance(x: -7, y: -20, name: \"lengths_equal\") equal_length_5d2c62 root.Std_k98ojb.Logic.Equal {}\n        main_list_5d8d28 -> equal_length_5d2c62.left\n        sublist_a6b9ad -> equal_length_5d2c62.right\n        instance(x: 0, y: -13) length_4e7f26 root.Std_k98ojb.List.Length {}\n        main_list_5d8d28 -> length_4e7f26.list\n        sublist_a6b9ad -> length_4e7f26.list\n        length_4e7f26.length -> equal_length_5d2c62.input\n        length_4e7f26.length -> is_sublist.predicate\n        instance(x: 0, y: -18) count_64cd33 root.Std_k98ojb.Std.Count {}\n        main_list_5d8d28 -> count_64cd33.reset\n        sublist_a6b9ad -> count_64cd33.list\n        length_4e7f26.length -> count_64cd33.count\n        is_sublist.continue -> count_64cd33.next\n        instance(x: 0, y: -15) if_54a5d3 root.Std_k98ojb.Std.If {}\n        main_list_5d8d28.items -> if_54a5d3.execute\n        sublist_a6b9ad -> if_54a5d3.list\n        0 -> if_54a5d3.index\n        is_sublist.else -> count_64cd33.reset\n        instance(x: 0, y: -10) for_4e9c8 root.Std_k98ojb.Std.For {}\n        main_list_5d8d28 -> for_4e9c8.items\n        sublist_a6b9ad -> for_4e9c8.list\n        length_4e7f26.length -> for_4e9c8.index\n    }\n\n    \n\n    instance(x: 2, y: -34) is_sublist_ea86d0 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -221, y: 25, name: \"main_list\") property(List) list_4d8a24\n        in(x: -193, y: -12, name: \"sublist\") property(List) list_d6e5f1\n\n        out(x: 1293, y: 39, name: \"continue\") trigger() continue_075eef\n        out(x: 1248, y: 23, name: \"output\") property(Bool) output_e2dd24\n\n        instance(x: -11, y: -14) contains_d5f6a9 root.Std_k98ojb.List.Contains {}\n        list_d6e5f1 -> contains_d5f6a9.item\n        contains_d5f6a9.result -> output_e2dd24\n    }\n\n    \n\n    instance(x: 0, y: -40) is_sublist_4d8c43 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -193, y: 2, name: \"main_list\") property(List) main_list_9ed6d4\n        in(x: 11, y: -25, name: \"sublist\") property(List) sublist_f3b8f1\n\n        out(x: 101, y: -31, name: \"continue\") trigger() continue_0e5c45\n        out(x: 100, y: -2, name: \"output\") property(Bool) output_b9dc7d\n\n        instance(x: 17, y: -24) for_05b1f3 root.Std_k98ojb.Std.For {}\n        getter(x: 69, y: -21, name: \"getter_e5a8b6\") getter_e5a8b6 = index\n        setter(x: 121, y: -20, name: \"setter_9c0ba2\") setter_9c0ba2 = index\n        instance(x: 94, y: -30) equal_1f0d00 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 78, y: -10) if_06dd7e root.Std_k98ojb.Std.If {}\n        setter_9c0ba2.continue -> for_05b1f3.reset\n        main_list_9ed6d4 -> for_05b1f3.items\n        sublist_f3b8f1 -> for_05b1f3.items\n        execute_0e5c45 -> setter_9c0ba2.execute\n        0 -> setter_9c0ba2.new_value\n        for_05b1f3.done -> continue_0e5c45\n        getter_e5a8b6.value -> output_b9dc7d\n        sublist_f3b8f1 -> equal_1f0d00.left\n        main_list_9ed6d4 -> equal_1f0d00.right\n        for_05b1f3.item -> equal_1f0d00.current\n        for_05b1f3.index -> setter_9c0ba2.value\n        if_06dd7e.predicate -> output_b9dc7d\n        if_06dd7e.else -> for_05b1f3.next\n        if_06dd7e.then -> setter_9c0ba2.execute\n        continue_0e5c45 -> for_05b1f3.reset\n    }\n\n    \n\n    instance(x: 101, y: -38) is_sublist_acd4cf root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -231, y: 1, name: \"main_list\") property(List) main_list_f5a2d9\n        in(x: -202, y: 22, name: \"sub_list\") property(List) sub_list_d3e0f6\n\n        out(x: 1017, y: -10, name: \"output\") property(Bool) output_c8c8b1\n\n        instance(x: 108, y: 27) zip_3a4d84 root.Std_k98ojb.Iteration.Zip {}\n        main_list_f5a2d9 -> zip_3a4d84.left\n        sub_list_d3e0f6 -> zip_3a4d84.right\n        func() {\n            in(x: -114, y: 47, name: \"item\") property(Number) item_8b7f22\n\n            out(x: 1215, y: -15, name: \"\") property(Bool) bool_2e23cd\n\n            instance(x: 93, y: 54) equal_3d9c1a root.Std_k98ojb.Logic.Equal {}\n            item_8b7f22 -> equal_3d9c1a.left\n            sub_list_d3e0f6 -> equal_3d9c1a.right\n            equal_3d9c1a.result -> bool_2e23cd\n        } -> zip_3a4d84.handler\n        main_list_f5a2d9 -> zip_3a4d84.items\n        sub_list_d3e0f6 -> zip_3a4d84.items\n        zip_3a4d84.zipped -> output_c8c8b1\n    }\n\n    \n\n    instance(x: -179, y: 43) is_sublist_85ad94 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -247, y: 6, name: \"main_list\") property(List) list_4e65d9\n        in(x: -235, y: -23, name: \"sub_list\") property(List) sub_list_f2c0f8\n\n        out(x: 1153, y: 32, name: \"result\") property(Bool) result_e0b1a7\n\n        instance(x: 121, y: 30) filter_5d4e6d root.Std_k98ojb.Iteration.Filter {}\n        sub_list_f2c0f8 -> filter_5d4e6d.items\n        func() {\n            in(x: -231, y: -26, name: \"item\") property(Number) item_66a1d7\n\n            out(x: 1149, y: 33, name: \"\") property(Bool) bool_df3c25\n\n            instance(x: 105, y: 29) count_4f6e0b root.Std_k98ojb.Std.Count {}\n            list_4e65d9 -> count_4f6f7b.items\n            sub_list_f2c0f8 -> count_4f6f7b.list\n            count_4f6f7b.count -> bool_df3c25\n        } -> filter_5d4e6d.handler\n        is_sublist.result -> result_e0b1a7\n    }\n\n    \n\n    instance(x: -234, y: 45) is_sublist_d9d8f2 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: 5, y: -4, name: \"main_list\") property(List) list_6e3d8a\n        in(x: -247, y: -121, name: \"sublist_list\") property(List) list_a2ad0c\n\n        out(x: 1007, y: 39, name: \"continue\") trigger() continue_04ea95\n        out(x: 960, y: -21, name: \"output\") property(Bool) output_e9d4f5\n\n        instance(x: 0, y: 0) for_2b7e8a root.Std_k98ojb.Std.For {}\n        list_a2ad0c -> for_2b7e8a.items\n        instance(x: -239, y: -105) contains_f9d6f4 root.Std_k98ojb.List.Contains {}\n        list_a2ad0c -> contains_f9d6f4.item\n        instance(x: 313, y: 11) if_7c284f root.Std_k98ojb.Std.If {}\n        output_e9d4f5 -> if_7c284f.predicate\n        for_2b7e8a.index -> contains_f9d6f4.index\n        list_a2ad0c -> contains_f9d6f4.list\n        for_2b7e8a.done -> continue_04ea95\n        contains_f9d6f4.is_contained -> if_7c284f.input\n    }\n\n    \n\n    instance(x: -245, y: 550) is_sublist_b0df66 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: 2, y: -34, name: \"main_list\") property(List) main_list_0f6bf3\n        in(x: 5, y: 10, name: \"sub_list\") property(List) sub_list_f36c7d\n\n        out(x: 1911, y: 24, name: \"output\") property(Bool) output_d9a4ec\n\n        instance(x: 0, y: 0) is_sublist_2e38f root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -101, y: 17, name: \"item\") property(Number) item_e8d95c\n\n            out(x: 1091, y: 28, name: \"output\") property(Bool) bool_7e9f0b\n\n            instance(x: 94, y: 11) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n            item_e8d95c -> equal_aabb6e.left\n            sub_list_f36c7d -> equal_aabb6e.right\n            equal_aabb6e.result -> bool_7e9f0b\n        } -> is_sublist_2e38f.predicate\n        main_list_0f6bf3 -> is_sublist_2e38f.items\n        is_sublist_2e38f.output_list -> output_d9a4ec\n    }\n\n    \n\n    instance(x: 7, y: -20) is_sublist_bcd5b1 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: 4, y: -26, name: \"main_list\") property(List) main_list_1a6f9b\n        in(x: -231, y: -23, name: \"sublist\") property(List) sublist_97bfe0\n\n        out(x: 1035, y: 19, name: \"output\") property(Bool) output_b3d8c7\n\n        instance(x: 105, y: 36) contains_f85f6d root.Std_k98ojb.List.Contains {}\n        sublist_97bfe0 -> contains_f85f6d.item\n        main_list_1a6f9b -> contains_f85f6d.list\n        func() {\n            in(x: -215, y: 21, name: \"i\") property(Number) i_3c5e15\n\n            out(x: 1007, y: 58, name: \"\") property(Number) result_a95a2b\n\n            instance(x: 121, y: 55) less_than_fcd0f8 root.Std_k98ojb.Math.LessThanOrEqual {}\n            main_list_1a6f9b -> less_than_fcd0f8.left\n            sublist_97bfe0 -> less_than_fcd0f8.right\n            less_than_fcd0f8.result -> result_a95a2b\n        } -> contains_f85f6d.handler\n        contains_f85f6d.is_contained -> output_b3d8c7\n    }\n\n    \n\n    instance(x: 109, y: 63) is_sublist_9e5e33 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -208, y: 35, name: \"main_list\") property(List) main_list_5d4f2e\n        in(x: -235, y: -11, name: \"sublist\") property(List) sublist_60c0b3\n\n        out(x: 1056, y: -44, name: \"output\") property(Bool) output_a8aeb1\n\n        instance(x: 10, y: 22) contains_7d9e77 root.Std_k98ojb.List.Contains {}\n        instance(x: 199, y: 35) if_4c94f2 root.Std_k98ojb.Std.If {}\n        function_instance(x: 340, y: -6, name: \"function_instance_3e60f7\") function_instance_3e60f7 = is_sublist_helper\n        instance(x: 0, y: 0, name: \"instance_5d1a5c\") instance_5d1a5c = contains_7d9e77\n        instance(x: -193, y: 35) instance_5d1a5c -> function_instance_3e60f7.items\n        sublist_60c0b3 -> function_instance_3e60f7.list\n        if_4c94f2.execute -> is_sublist_helper.predicate\n    }\n\n    \n\n    instance(x: -173, y: 43) is_sublist_f65d9a root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: 3, y: -16, name: \"list\") property(List) list_4a9d65\n\n        out(x: 2, y: -44, name: \"missing\") property(Number) missing_f6e1c8\n\n        instance(x: 0, y: 0) find_missing_a3fbd root.Std_k98ojb.Iteration.Find {}\n        list_4a9d65 -> find_missing_a3fbd.items\n        func() {\n            in(x: -32, y: 21, name: \"num\") property(Number) num_f2c7f0\n\n            out(x: 2, y: 28, name: \"\") property(Bool) bool_5a4b38\n\n            instance(x: 1, y: 25) sub_e6d9e3 root.Std_k98ojb.Math.Sub {}\n            1 -> sub_e6d9e3.first\n            list_4a9d65[0] -> sub_e6d9e3.second\n            sub_e6d9e3.result -> num_f2c7f0\n        } -> find_missing_a3fbd.predicate\n        find_missing_a3fbd.item -> missing_f6e1c8\n    }\n\n    \n\n    instance(x: 17, y: -36) find_smallest_missing_5a4d44 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -247, y: 2, name: \"list\") property(List) list_6d8f9b\n        out(x: 1557, y: 21, name: \"missing\") property(Number) missing_1e4ddc\n\n        instance(x: 0, y: 0) find_smallest_missing_7a5b15 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -29, y: 43) filter_a7d8f9 root.Std_k98ojb.Query.Filter {}\n        instance(x: 234, y: 24) greaterthan_e2f6e4 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 156, y: 20) if_b0a3c5 root.Std_k98ojb.Std.If {}\n        instance(x: -15, y: 26) sub_4d6ac7 root.Std_k98ojb.Math.Sub {}\n        instance(x: 234, y: 28) add_95e2f9 root.Std_k98ojb.Math.Add {}\n        instance(x: 155, y: 21) div_1c8fb0 root.Std_k98ojb.Math.Div {}\n        list_6d8f9b -> filter_a7d8f9.list\n        filter_a7d8f9.result -> find_smallest_missing_.listWithItem\n        greaterthan_e2f6e4.left -> sub_4d6ac7.first\n        greaterthan_e2f6e4.right -> add_95e2f9.second\n        sub_4d6ac7.value -> div_1c8fb0.x\n        1 -> div_1c8fb0.y\n        add_95e2f9.result -> find_smallest_missing_.listWithItem\n        filter_a7d8f9.items -> greaterthan_e2f6e4.left\n        sub_4d6ac7.result -> greaterthan_e2f6e4.right\n        div_1c8fb0.result -> if_b0a3c5.predicate\n        find_smallest_missing_.item -> add_95e2f9.result\n        sub_4d6ac7.value -> add_95e2f9.first\n        greaterthan_e2f6e4.right -> if_b0a3c5.right\n        div_1c8fb0.x -> if_b0a3c5.left\n        add_95e2f9.result -> if_b0a3c5.right\n        filter_a7d8f9.is_contained -> if_b0a3c5.input\n    }\n\n    \n\n    instance(x: -31, y: 64) find_smallest_missing_1b4ec6 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -224, y: 34, name: \"list\") property(List) list_3a4f5b\n\n        out(x: 1002, y: 20, name: \"smallest_missing\") property(Number) smallest_missing_6e0c9d\n\n        instance(x: 106, y: -44, name: \"start_index\") property(Number) start_index_e8dd63\n        instance(x: 184, y: -11, name: \"end_index\") property(Number) end_index_8a2f2b\n        instance(x: 261, y: 56) count_d7c6bb root.Std_k98ojb.Count {}\n        instance(x: 394, y: 71) for_0d1e77 root.Std_k98ojb.Std.For {}\n        instance(x: 523, y: -27) if_2f8bf2 root.Std_k98ojb.Std.If {}\n        instance(x: 649, y: 85) add_7a3ebc root.Std_k98ojb.Math.Add {}\n        instance(x: 769, y: -21) modulo_e9e42d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 886, y: 29) not_equal_d4f5fa root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 911, y: 61) expression_3f2a7c root.Std_k98ojb.Math.Expression {\n            expression: \"(i == n)\"\n        }\n        instance(x: 916, y: -17) if_e8d9ea root.Std_k98ojb.Std.If {}\n        instance(x: 928, y: 37) continue_5e3a24 root.Std_k98ojb.Std.For {}\n        list_3a4f5b -> for_0d1e77.items\n        count_d7c6bb.reset -> start_index_e8dd63.new_value\n        end_index_8a2f2b -> start_index_e8dd63.value\n        for_0d1e77.onItem -> if_2f8bf2.execute\n        list_3a4f5b[0] -> if_2f8bf2.left\n        list_3a4f5b[1] -> if_2f8bf2.right\n        if_2f8bf2.predicate -> not_equal_d4f5fa.input\n        for_0d1e77.index -> add_7a3ebc.first\n        1 -> add_7a3ebc.second\n        add_7a3ebc.result -> expression_3f2a7c.gen_0\n        if_expression_3f2a7c.result -> modulo_e9e42d.left\n        list_3a4f5b[1] -> modulo_e9e42d.right\n        not_equal_d4f5fa.result -> smallest_missing_6e0c9d\n        for_0d1e77.index -> add_7a3ebc.first\n        2 -> add_7a3ebc.second\n        add_7a3ebc.result -> expression_3f2a7c.gen_1\n        if_expression_3f2a7c.result -> modulo_e9e42d.left\n        list_3a4f5b[0] -> modulo_e9e42d.right\n        not_equal_d4f5fa.input -> smallest_missing_6e0c9d\n        for_0d1e77.index -> add_7a3ebc.first\n        3 -> add_7a3ebc.second\n        add_7a3ebc.result -> expression_3f2a7c.gen_2\n        if_expression_3f2a7c.result -> modulo_e9e42d.left\n        list_3a4f5b[1] -> modulo_e9e42d.right\n        not_equal_d4f5fa.input -> smallest_missing_6e0c9d\n    }\n\n    \n\n    instance(x: 1008, y: 790) find_smallest_missing_f9fb7 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -255, y: -0, name: \"list\") property(List) list_8f6e77\n        out(x: 1039, y: 20, name: \"smallestMissing\") property(Number) smallest_missing_b1b3d4\n\n        instance(x: 0, y: 0) count_a6c2a5 root.Std_k98ojb.Std.Count {}\n        instance(x: -142, y: -31, name: \"continue_7cf9f8\") trigger() continue_7cf9f8\n        instance(x: 1024, y: 17, name: \"findMissing_4c6c66\") trigger() findMissing_4c6c66\n\n        list_8f6e77 -> count_a6c2a5.items\n        count_a6c2a5.reset -> continue_7cf9f8.execute\n        -1 -> continue_7cf9f8.new_value\n        continue_7cf9f8.continue -> findMissing_4c6c66.execute\n        list_8f6e77 -> findMissing_4c6c66.items\n        0 -> findMissing_4c6c66.value\n\n        instance(x: -159, y: -40, name: \"expr_2d8bf1\") function()\n        in(x: -114, y: -18, name: \"n\") property(Number) n_74a3e7\n        out(x: 0, y: -9, name: \"\") property(Number) result_a6c85f\n\n        instance(x: 103, y: -35, name: \"add_bc1b5d\") root.Std_k98ojb.Math.Add {}\n        n_74a3e7 -> add_bc1b5d.first\n        1 -> add_bc1b5d.second\n        add_bc1b5d.result -> result_a6c85f\n\n        instance(x: -160, y: -11, name: \"pow_2ba4a4\") root.Std_k98ojb.Math.Pow {}\n        n_74a3e7 -> pow_2ba4a4.x\n        2 -> pow_2ba4a4.y\n        pow_2ba4a4.result -> result_a6c85f\n\n        instance(x: -141, y: -14, name: \"sub_33d3b5\") root.Std_k98ojb.Math.Sub {}\n        pow_2ba4a4.result -> sub_33d3b5.first\n        n_74a3e7 -> sub_33d3b5.second\n        sub_33d3b5.result -> result_a6c85f\n\n        instance(x: -159, y: 32, name: \"min_b9e2aa\") root.Std_k98ojb.Math.Min {}\n        list_8f6e77 -> min_b9e2aa.items\n        result_a6c85f -> min_b9e2aa.min\n\n        if(min_b9e2aa.result > 0) {\n            smallest_missing_b1b3d4 = min_b9e2aa.result + 1;\n        }\n    }\n\n    \n\n    instance(x: -142, y: 18) find_smallest_missing_5f5c8f root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -233, y: 0, name: \"list\") property(List) list_4a55d2\n\n        out(x: 1018, y: 45, name: \"output\") property(Number) output_a6cd5e\n\n        instance(x: 74, y: 0) find_missing_60f1b root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -143, y: 26, name: \"num\") property(Number) num_f56d67\n\n            out(x: 1023, y: 16, name: \"\") property(Bool) bool_4a7f0c\n\n            instance(x: 64, y: 12) less_than_e9b8e5 root.Std_k98ojb.Math.LessThanOrEqual {}\n            instance(x: -48, y: 27) notequal_6d2db1 root.Std_k98ojb.Logic.NotEqual {}\n            num_f56d67 -> less_than_e9b8e5.left\n            list_4a55d2[0] -> less_than_e9b8e5.right\n            less_than_e9b8e5.result -> bool_4a7f0c\n        } -> find_missing_60f1b.predicate\n        list_4a55d2 -> find_missing_60f1b.items\n        find_missing_60f1b.item -> output_a6cd5e\n    }\n\n    \n\n    instance(x: 59, y: -11) find_smallest_missing_85bfef root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -244, y: 27, name: \"list\") property(List) list_2d8a80\n\n        out(x: 1176, y: -10, name: \"missing\") property(Number) missing_96c7b3\n\n        instance(x: 0, y: 0) for_09e4f5 root.Std_k98ojb.Std.For {}\n        instance(x: 108, y: 56) if_1d6a77 root.Std_k98ojb.Std.If {}\n        instance(x: -10, y: 35) list_slice_3c74c2 root.Std_k98ojb.List.Slice {}\n        instance(x: 111, y: 24) find_45bcf4 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -1) count_6e5a65 root.Std_k98ojb.Count {}\n        list_2d8a80 -> for_09e4f5.items\n        find_smallest_missing_7c7583.execute -> for_09e4f5.reset\n        1 -> for_09e4f5.new_value\n        count_6e5a65.value -> find_smallest_missing_7c7583.count\n        list_slice_3c74c2.start -> for_09e4f5.index\n        list_slice_3c74c2.end -> for_09e4f5.index\n        for_09e4f5.done -> count_6e5a65.reset\n    }\n\n    \n\n    instance(x: 0, y: -1) find_smallest_missing_7c7583 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: 0, y: -3, name: \"list\") property(List) list_67f9e5\n\n        out(x: 1051, y: -8, name: \"smallestMissingNumber\") property(Number) smallest_missing_number_65d6b2\n\n        instance(x: 102, y: 10, name: \"set\") setter_72a2c4 root.Std_k98ojb.List.Set {}\n        instance(x: 108, y: -14, name: \"get\") getter_e0e9f5 root.Std_k98ojb.List.Get {}\n        instance(x: 112, y: 31, name: \"for\") for_1a2d21 root.Std_k98ojb.Std.For {}\n        instance(x: 116, y: -22, name: \"if\") if_d8e65c root.Std_k98ojb.Std.If {}\n        instance(x: 121, y: 34, name: \"smallestMissingNumber\") property(Number) smallest_missing_number_9d0f4a\n        list_67f9e5 -> for_1a2d21.items\n\n        setter_72a2c4.add -> for_1a2d21.execute\n        getter_e0e9f5.value -> if_d8e65c.predicate\n        1 -> if_d8e65c.new_value\n        for_1a2d21.done -> if_d8e65c.else\n        smallest_missing_number_65d6b2 -> smallest_missing_number_9d0f4a\n        for_1a2d21.index -> getter_e0e9f5.value\n    }\n\n    \n\n    instance(x: 123, y: -31) find_smallest_missing_8c7ca3 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: 2, y: -29, name: \"list\") property(List) list_9f8a6d\n        out(x: 1243, y: -13, name: \"smallest\") property(Number) smallest_d4c5e7\n\n        instance(x: 104, y: -47) find_missing_f35b14 root.Std_k98ojb.Iteration.Find {}\n        list_9f8a6d -> find_missing_f35b14.items\n        func() {\n            in(x: 2, y: 31, name: \"i\") property(Number) i_1c0a4e\n\n            out(x: 1135, y: -19, name: \"\") property(Number) smallest_8f6dc3\n\n            instance(x: 109, y: -35) less_than_eb7d36 root.Std_k98ojb.Math.LessThanOrEqual {}\n            list_9f8a6d -> less_than_eb7d36.left\n            i_1c0a4e -> less_than_eb7d36.right\n            less_than_eb7d36.result -> smallest_8f6dc3\n        } -> find_missing_f35b14.predicate\n        list_9f8a6d -> find_missing_f35b14.item\n    }\n\n    \n\n    instance(x: 97, y: -29) find_smallest_missing_d1d5c4 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: 4, y: -10, name: \"list\") property(List) list_1f3e41\n\n        out(x: 1017, y: -43, name: \"missing_number\") property(Number) missing_num_8c45cd\n        instance(x: 0, y: 5, name: \"indexer\") setter_6e7b4e = index\n        instance(x: 114, y: 13, name: \"find_first_missing\") find_first_missing_f77d35\n\n        for_065883.reset -> find_first_missing.execute\n        list_1f3e41 -> for_065883.items\n        -1 -> setter_6e7b4e.new_value\n        find_first_missing.continue -> continue_075eef\n        0 -> find_first_missing.index\n    }\n\n    \n\n    instance(x: 13, y: -14) find_smallest_missing_8c2b1f root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -231, y: 33, name: \"list\") property(List) list_6f0d8a\n\n        out(x: 1027, y: -40, name: \"missing_number\") property(Number) missing_number_a9aa2b\n\n        instance(x: 1, y: 36) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 101, y: -22, name: \"i\") property(Number) i_d5f7e8\n        instance(x: 202, y: 41) count_6a9c77 root.Std_k98ojb.Std.Count {}\n        instance(x: 303, y: -19, name: \"missing_number_generator\") property(Number) missing_number_generator_0f44d2\n\n        list_6f0d8a -> firstitem_870503.list\n        i_d5f7e8 -> count_6a9c77.reset\n        for_870503.onItem -> count_6a9c77.count\n        firstitem_870503.item -> missing_number_generator_0f44d2.new_value\n        count_6a9c77.value -> i_d5f7e8\n        i_d5f7e8 -> missing_number_generator_0f44d2\n        for_870503.done -> missing_number_generator_0f44d2.continue\n    }\n\n    \n\n    instance(x: 313, y: -11) find_smallest_missing_1c6a9b root.main.find_smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -261, y: 3, name: \"input\") property(String) input_9b4d36\n\n        out(x: 1107, y: -1, name: \"output\") property(String) output_f6a2e8\n\n        instance(x: 101, y: 0) replace_c5f2c3 root.Std_k98ojb.Strings.Replace {}\n        input_9b4d36 -> replace_c5f2c3.input\n        \", \".tostring() -> replace_c5f2c3.search\n        \":\" -> replace_c5f2c3.replace\n        replace_c5f2c3.output -> output_f6a2e8\n    }\n\n    \n\n    instance(x: -53, y: 44) replace_with_colon_63b0ba root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -219, y: 3, name: \"input\") property(String) input_5d6e0a\n\n        out(x: 1457, y: 10, name: \"output\") property(String) output_e1c5ec\n\n        instance(x: 15, y: 2) replace_a8f9af root.Std_k98ojb.Strings.Replace {}\n        input_5d6e0a -> replace_a8f9af.input\n        \",.\" -> replace_a8f9af.search\n        \":\" -> replace_a8f9af.replace\n        replace_a8f9af.output -> output_e1c5ec\n    }\n\n    \n\n    instance(x: -62, y: 73) replace_special_chars_2d2b4a root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: 0, y: -21, name: \"input\") property(String) input_1d3f66\n\n        out(x: 341, y: 26, name: \"output\") property(String) output_5a7e4c\n\n        instance(x: 106, y: -6, name: \"replace_all\") replace_all_f0f8be root.Std_k98ojb.Strings.Replace {}\n        input_1d3f66 -> replace_all.input\n        \",.\" -> replace_all.search\n        \":\" -> replace_all.replace\n        replace_all.output -> output_5a7e4c\n    }\n\n    \n\n    instance(x: 93, y: -20) replace_special_chars_d9b0a6 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -173, y: 2, name: \"input\") property(String) input_4d1ca6\n\n        out(x: 1060, y: 5, name: \"output\") property(String) output_e3e38c\n\n        instance(x: 0, y: 0) replace_a65b95 root.Std_k98ojb.Strings.Replace {}\n        replace_a65b95.search -> \" \"\n        replace_a65b95.replace -> \":\"\n        input_4d1ca6 -> replace_a65b95.input\n        replace_a65b95.output -> output_e3e38c\n\n        instance(x: 0, y: 5) replace_8f7fb9 root.Std_k98ojb.Strings.Replace {}\n        replace_8f7fb9.search -> \",\"\n        replace_8f7fb9.replace -> \":\"\n        input_4d1ca6 -> replace_8f7fb9.input\n        replace_8f7fb9.output -> output_e3e38c\n\n        instance(x: 0, y: 10) replace_c2a5b3 root.Std_k98ojb.Strings.Replace {}\n        replace_c2a5b3.search -> \".\"\n        replace_c2a5b3.replace -> \":\"\n        input_4d1ca6 -> replace_c2a5b3.input\n        replace_c2a5b3.output -> output_e3e38c\n\n    }\n\n    \n\n    instance(x: 100, y: -39) replace_special_chars_f7f7c8 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -193, y: 2, name: \"input\") property(String) input_8ad3ec\n\n        out(x: 1040, y: -44, name: \"output\") property(String) output_b1b45e\n\n        instance(x: 13, y: 10) replace_fef7d1 root.Std_k98ojb.Strings.Replace {}\n        input_8ad3ec -> replace_fef7d1.input\n        \",.\" -> replace_fef7d1.search\n        \":\" -> replace_fef7d1.replace\n        replace_fef7d1.result -> output_b1b45e\n    }\n\n    \n\n    instance(x: 104, y: -42) replace_special_chars_1a4f65 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -219, y: 14, name: \"input\") property(String) input_f5f1bd\n\n        out(x: 343, y: 76, name: \"output\") property(String) output_0e4da3\n\n        instance(x: 105, y: 71) replace_a4a5c9 root.Std_k98ojb.Strings.Replace {}\n        input_f5f1bd -> replace_a4a5c9.input\n        \",.\" -> replace_a4a5c9.search\n        \":\" -> replace_a4a5c9.replace\n        replace_a4a5c9.output -> output_0e4da3\n    }\n\n    \n\n    instance(x: -193, y: 45) replace_special_chars_7fdd55 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -219, y: 13, name: \"input\") property(String) input_d1a4f2\n\n        out(x: 1019, y: 69, name: \"output\") property(String) output_e7a0c5\n        instance(x: 19, y: 21) replace_8b35e6 root.Std_k98ojb.Strings.Replace {}\n        input_d1a4f2 -> replace_8b35e6.input\n        \", \".tostring() -> replace_8b35e6.search\n        \":\" -> replace_8b35e6.replace\n        replace_8b35e6.output -> output_e7a0c5\n    }\n\n    \n\n    instance(x: 91, y: -1) replace_special_chars_9f4f66 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -243, y: 23, name: \"input\") property(String) input_9f3e1a\n\n        out(x: 1144, y: 16, name: \"output\") property(String) output_dfc87c\n\n        instance(x: 0, y: 0) replace_c6f5b8 root.Std_k98ojb.Strings.Replace {}\n        input_9f3e1a -> replace_c6f5b8.input\n        \",. \" -> replace_c6f5b8.search\n        \":\" -> replace_c6f5b8.replace\n        replace_c6f5b8.output -> output_dfc87c\n    }\n\n    \n\n    instance(x: 91, y: -30) replace_special_chars_7e9a65 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -103, y: 3, name: \"input\") property(String) input_6d65a9\n\n        out(x: 111, y: 23, name: \"output\") property(String) output_e1c5ea\n\n        instance(x: 14, y: 0) replace_b4e8f2 root.Std_k98ojb.Strings.Replace {}\n        input_6d65a9 -> replace_b4e8f2.input\n        \",.\" -> replace_b4e8f2.search\n        \":\" -> replace_b4e8f2.replace\n        replace_b4e8f2.output -> output_e1c5ea\n    }\n\n    \n\n    instance(x: -76, y: 28) replace_special_chars_5d7bd6 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -242, y: 14, name: \"input\") property(String) input_4a8d5f\n\n        out(x: 1036, y: 31, name: \"output\") property(String) output_3e0c29\n\n        instance(x: 23, y: 19) replace_a66b45 root.Std_k98ojb.Strings.Replace {}\n        input_4a8d5f -> replace_a66b45.input\n        \",.\" -> replace_a66b45.search\n        \":\" -> replace_a66b45.replace\n        replace_a66b45.output -> output_3e0c29\n    }\n\n    \n\n    instance(x: -69, y: 47) replace_special_chars_e7d4f2 root.main.replace_special_chars {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") same_chars {\n        in(x: -201, y: 3, name: \"string\") property(String) string_4a5d2f\n\n        out(x: 1028, y: -23, name: \"output\") property(Bool) output_ae9b25\n\n        instance(x: 0, y: 0) map_6c1ef3 root.Std_k98ojb.Iteration.Map {}\n        string_4a5d2f -> map_6c1ef3.items\n        func() {\n            in(x: -112, y: 12, name: \"char\") property(String) char_5f7e28\n\n            out(x: 439, y: -10, name: \"count\") property(Number) count_8a2b6c\n\n            instance(x: 97, y: 1) equal_e48d4a root.Std_k98ojb.Logic.Equal {}\n            char_5f7e28 -> equal_e48d4a.left\n            string_4a5d2f[0] -> equal_e48d4a.right\n            count_8a2b6c -> 1\n            equal_e48d4a.result -> count_8a2b6c\n        } -> map_6c1ef3.handler\n        if_7c284f.value -> output_ae9b25\n    }\n\n    \n\n    instance(x: -43, y: 530) same_chars_5dfdb5 root.main.same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -255, y: 25, name: \"string\") property(String) string_4d56eb\n\n        out(x: 145, y: 23, name: \"result\") property(Bool) result_ba6b8e\n\n        instance(x: 0, y: 1) map_6c7f43 root.Std_k98ojb.Iteration.Map {}\n        string_4d56eb -> map_6c7f43.items\n        func() {\n            in(x: -235, y: 38, name: \"char\") property(Number) char_d5e0a8\n\n            out(x: 124, y: 23, name: \"\") property(String) same_chars_a4c3d1\n\n            instance(x: 9, y: 34) tolower_2bf7bb root.Std_k98ojb.Strings.ToLower {}\n            char_d5e0a8 -> tolower_2bf7bb.input\n            same_chars_a4c3d1 = string_4d56eb\n            for (i in string_4d56eb) {\n                char_d5e0a8 = i\n                tolower_2bf7bb.input = char_d5e0a8\n                if (!same_chars_a4c3d1.contains(lowercase_2bf7bb(input))) {\n                    same_chars_a4c3d1 = \"\"\n                    break;\n                }\n            }\n        } -> map_6c7f43.handler\n        map_6c7f43.output_list -> result_ba6b8e\n    }\n\n    \n\n    instance(x: -194, y: 56) all_same_5bcdf2 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_chars_same {\n        in(x: -192, y: 18, name: \"str\") property(String) str_5f3b1e\n\n        out(x: 1002, y: -12, name: \"result\") property(Bool) result_b8d7c6\n\n        instance(x: 102, y: -105) compare_a0b4a9 root.Std_k98ojb.Logic.Equal {}\n        func() {\n            in(x: -121, y: 34, name: \"char\") property(String) char_1f2e45\n\n            out(x: 1087, y: -49, name: \"\") property(Number) count_e0c6d3\n\n            instance(x: 91, y: -42) length_f9a6b4 root.Std_k98ojb.List.Length {}\n            str_5f3b1e -> length_f9a6b4.list\n            length_f9a6b4.length -> count_e0c6d3\n        } -> compare_a0b4a9.handler\n        list_5f3b1e -> compare_a0b4a9.items\n        compare_a0b4a9.result -> result_b8d7c6\n    }\n\n    \n\n    instance(x: 103, y: -63) all_chars_same_34ba95 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether all the characters are same or not.\") all_same {\n        in(x: -191, y: 34, name: \"string\") property(String) string_66a2d9\n\n        out(x: 1060, y: 14, name: \"result\") property(Bool) result_f3b8f1\n\n        instance(x: 17, y: 26) compare_c6c7e4 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -159, y: 45) if_e2d0a5 root.Std_k98ojb.Std.If {}\n        instance(x: 101, y: 37) strings_lower_b8fcd3 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 93, y: 52) strings_equal_7f6c23 root.Std_k98ojb.Strings.Equal {}\n        string_66a2d9 -> strings_lower_b8fcd3.input\n        strings_lower_b8fcd3.output -> compare_c6c7e4.left\n        if_e2d0a5.else -> strings_equal_7f6c23.execute\n        all_same_0d1ebc -> compare_c6c7e4.result\n        strings_lower_b8fcd3.output -> strings_equal_7f6c23.input\n        result_f3b8f1 -> strings_equal_7f6c23.result\n    }\n\n    \n\n    instance(x: -191, y: 35) all_same_d63a5d root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -243, y: 4, name: \"string\") property(String) input_7f5c21\n        out(x: 1092, y: 70, name: \"output\") property(Bool) output_a1d6e9\n\n        instance(x: 98, y: 73) iter_8b0a94 root.Std_k98ojb.Iteration.Iterator {}\n        input_7f5c21 -> iter_8b0a94.items\n        func() {\n            in(x: -247, y: 41, name: \"char\") property(String) char_b6d2f4\n\n            out(x: 1213, y: 23, name: \"\") property(Bool) bool_d5e7eb\n\n            instance(x: 0, y: 35) equal_6a1ba9 root.Std_k98ojb.Logic.Equal {}\n            char_b6d2f4 -> equal_6a1ba9.left\n            input_7f5c21 -> equal_6a1ba9.right\n            equal_6a1ba9.result -> bool_d5e7eb\n        } -> iter_8b0a94.handler\n        output_a1d6e9 -> bool_d5e7eb\n    }\n\n    \n\n    instance(x: 123, y: -41) is_all_same_4c869f root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") same_characters {\n        in(x: -527, y: 2, name: \"str\") property(String) str_6ef3a5\n\n        out(x: 191, y: 24, name: \"output\") property(Bool) output_54c8d4\n\n        instance(x: 0, y: 0, name: \"first_char\") getter_84fbbe root.Std_k98ojb.List.FirstItem {}\n        instance(x: 34, y: -11, name: \"second_char\") getter_84fbbe root.Std_k98ojb.List.FirstItem {}\n        instance(x: 74, y: 24) equal_e5f3a9 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 191, y: 33) if_7c284f root.Std_k98ojb.Std.If {}\n\n        str_6ef3a5 -> first_char.list\n        first_char.item -> second_char.list\n        equal_e5f3a9.left -> str_6ef3a5[0]\n        str_6ef3a5 -> if_7c284f.items\n        if_7c284f.execute -> if_7c284f.execute\n        1 -> if_7c284f.index\n        first_char.item -> if_7c284f.right\n        equal_e5f3a9.result -> output_54c8d4\n        str_6ef3a5[0] == str_6ef3a5[1] -> if_7c284f.predicate\n    }\n\n    \n\n    instance(x: 113, y: 528) same_characters_d9e2b root.main.same_characters {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether all the characters are same or not.\") are_same {\n        in(x: -142, y: 35, name: \"s\") property(String) s_6e8f2d\n\n        out(x: 1011, y: 44, name: \"continue\") trigger() continue_0bdc7c\n        out(x: 1043, y: 75, name: \"output\") property(Bool) output_d93f38\n\n        instance(x: -5, y: 54) are_same_f9d2e4 root.Std_k98ojb.Iteration.Map {}\n        s_6e8f2d -> are_same_f9d2e4.items\n        func() {\n            in(x: -151, y: 38, name: \"c\") property(String) c_0da5e3\n\n            out(x: 1011, y: 44, name: \"\") property(Bool) bool_e9f7ef\n\n            instance(x: 13, y: 62) equal_b2d8a9 root.Std_k98ojb.Logic.Equal {}\n            c_0da5e3 -> equal_b2d8a9.left\n            s_6e8f2d -> equal_b2d8a9.right\n            equal_b2d8a9.result -> bool_e9f7ef\n        } -> are_same_f9d2e4.handler\n        are_same_f9d2e4.output_list -> output_d93f38\n    }\n\n    \n\n    instance(x: -142, y: 73) are_same_94b74c root.main.are_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") check_same {\n        in(x: -235, y: 2, name: \"string\") property(String) string_4d95f8\n\n        out(x: 1011, y: 70, name: \"continue\") trigger() continue_0c7b5a\n        out(x: 1009, y: 221, name: \"output\") property(Bool) output_d8e66c\n\n        instance(x: 0, y: 0) equal_c4d2f6 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 108, y: -26) string_3a7a5e root.Std_k98ojb.Strings.ToLower {}\n        func() {\n            in(x: -103, y: 20, name: \"char\") property(String) char_0f8c2d\n\n            out(x: 1004, y: 71, name: \"\") property(String) _7d6a1e\n\n            instance(x: 108, y: 19) replace_d9bca3 root.Std_k98ojb.Strings.Replace {}\n            char_0f8c2d -> replace_d9bca3.search\n            string_4d95f8 -> replace_d9bca3.replace\n            replace_d9bca3.result -> _7d6a1e\n        } -> equal_c4d2f6.handler\n        string_4d95f8 -> equal_c4d2f6.left\n        string_4d95f8 -> equal_c4d2f6.right\n        string_3a7a5e.input -> _7d6a1e\n        equal_c4d2f6.result -> output_d8e66c\n    }\n\n    \n\n    instance(x: 101, y: -30) check_same_68b85b root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether all the characters are same or not.\") check_same_chars {\n        in(x: -253, y: 5, name: \"input\") property(List) list_b8f9e0\n\n        out(x: 1004, y: -2, name: \"output\") property(Bool) output_d85ddc\n\n        instance(x: 1021, y: 13) map_6a7b5 root.Std_k98ojb.Iteration.Map {}\n        list_b8f9e0 -> map_6a7b5.items\n        func() {\n            in(x: -106, y: 16, name: \"char\") property(Number) char_f2d14c\n\n            out(x: 1054, y: 29, name: \"\") property(Bool) bool_e85f3e\n\n            instance(x: 89, y: 26) equal_5dc1ca root.Std_k98ojb.Logic.Equal {}\n            list_b8f9e0 -> equal_5dc1ca.left\n            char_f2d14c -> equal_5dc1ca.right\n            equal_5dc1ca.result -> bool_e85f3e\n        } -> map_6a7b5.handler\n        output_d85ddc -> bool_e85f3e\n    }\n\n    \n\n    instance(x: 102, y: 46) check_same_chars_5d4d45 root.main.check_same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -202, y: 20, name: \"string\") property(String) string_4f8d7e\n\n        out(x: 134, y: 47, name: \"result\") property(Bool) result_63c2a1\n\n        instance(x: 18, y: 17) map_0bba21 root.Std_k98ojb.Iteration.Map {}\n        string_4f8d7e -> map_0bba21.items\n        func() {\n            in(x: -234, y: 45, name: \"char\") property(String) char_a5f9c9\n\n            out(x: 109, y: 40, name: \"\") property(Number) count_8dc2c6\n\n            instance(x: 104, y: 32) count_4a5a66 root.Std_k98ojb.List.Count {}\n            map_0bba21.output_list -> count_4a5a66.items\n            char_a5f9c9 -> count_4a5a66.item\n            count_4a5a66.result -> count_8dc2c6\n        } -> map_0bba21.handler\n        map_0bba21.output_list -> result_63c2a1\n    }\n\n    \n\n    instance(x: 13, y: -11) all_same_d41e51 root.main.all_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -229, y: 1, name: \"input\") property(String) input_9a5d64\n\n        out(x: 1068, y: -69, name: \"count\") property(Number) count_2e0b95\n\n        instance(x: 104, y: 27) map_3f6c38 root.Std_k98ojb.Iteration.Map {}\n        input_9a5d64 -> map_3f6c38.items\n        func() {\n            in(x: -233, y: -15, name: \"element\") property(String) element_0e8f47\n\n            out(x: 1284, y: 56, name: \"\") property(Number) _count_9a7b42\n\n            instance(x: 0, y: 16) is_numeric_c1d6c3 root.Std_k98ojb.Strings.IsNumeric {}\n            element_0e8f47 -> is_numeric_c1d6c3.input\n            is_numeric_c1d6c3.result -> _count_9a7b42\n        } -> map_3f6c38.handler\n        map_3f6c38.output_list -> count_digits.count\n    }\n\n    \n\n    instance(x: -46, y: 542) count_digits_b6e21a root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -222, y: 2, name: \"input\") property(String) input_6d8f9e\n\n        out(x: 1105, y: 15, name: \"count\") property(Number) count_4a5f1c\n\n        instance(x: 0, y: 0) length_2e3b19 root.Std_k98ojb.List.Length {}\n        instance(x: -16, y: 30) not_75283f root.Std_k98ojb.Logic.Not {}\n        function_5f6d9a root.Std_k98ojb.Function {\n            func() {\n                in(x: -26, y: 20, name: \"c\") property(Number) c_a8e56f\n                out(x: 0, y: -21, name: \"\") property(Number) _count_3a7b6d\n\n                instance(x: 34, y: -4) isdigit_f85c5e root.Std_k98ojb.Strings.IsNumeric {}\n                c_a8e56f -> isdigit_f85c5e.input\n                isdigit_f85c5e.result -> _count_3a7b6d\n            } -> function_\n        }\n        input_6d8f9e -> length_2e3b19.items\n        not_75283f.input -> function_.output_list\n        function_.output_list -> count_4a5f1c\n    }\n\n    \n\n    instance(x: -43, y: 569) count_digits_b7ef34 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -528, y: 25, name: \"input\") property(String) input_0a5f2e\n\n        out(x: 439, y: 54, name: \"count\") property(Number) count_3c9b8d\n\n        instance(x: 110, y: 35) tolower_a9aa94 root.Std_k98ojb.Strings.ToLower {}\n        input_0a5f2e -> tolower_a9aa94.input\n        tolower_a9aa94.output -> input_0a5f2e\n        instance(x: -47, y: 74) count_chars_b8d0d4 root.Std_k98ojb.List.Count {}\n        input_0a5f2e -> count_chars_b8d0d4.input\n        tolower_a9aa94.output -> count_chars_b8d0d4.input\n        count_chars_b8d0d4.count -> count_3c9b8d\n    }\n\n    \n\n    instance(x: 234, y: 563) count_digits_d5a7f1 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Counts the number of digits in a given string.\") count_digits {\n        in(x: -219, y: 2, name: \"input\") property(String) input_3f1e36\n\n        out(x: 246, y: 26, name: \"count\") property(Number) count_8a0d37\n\n        instance(x: 23, y: 33) split_6f5b9c root.Std_k98ojb.Strings.Split {}\n        input_3f1e36 -> split_6f5b9c.input\n        '0-9' -> split_6f5b9c.regex\n        list_8d42a4 -> split_6f5b9c.list\n        instance(x: 105, y: -33) map_3ed1e4 root.Std_k98ojb.Iteration.Map {}\n        list_8d42a4 -> map_3ed1e4.items\n        func() {\n            in(x: -112, y: 0, name: \"x\") property(Number) x_c2f9c6\n\n            out(x: 0, y: 39, name: \"length\") property(Number) length_abd5f8\n\n            instance(x: 96, y: 20) length_4b51e2 root.Std_k98ojb.List.Length {}\n            x_c2f9c6 -> length_4b51e2.value\n            length_4b51e2.result -> length_abd5f8\n        } -> map_3ed1e4.handler\n        map_3ed1e4.output_list -> count_8a0d37\n    }\n\n    \n\n    instance(x: 110, y: -23) count_digits_a6c8ca root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -233, y: 1, name: \"input\") property(String) input_4e35d2\n\n        out(x: 1013, y: 30, name: \"output\") property(Number) output_b7b45f\n\n        instance(x: 103, y: 29) filter_8ec0c5 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -233, y: 34, name: \"contains_digit\") property(Number) contains_digit_6a1d9e\n        instance(x: 108, y: 26) map_dcd2f3 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 95, y: 31) isnumeric_e87c43 root.Std_k98ojb.Strings.IsNumeric {}\n        func() {\n            in(x: -233, y: 28, name: \"char\") property(String) char_6f4d8e\n\n            out(x: 21, y: 23, name: \"\") property(Number) _7c5db2\n\n            instance(x: 104, y: 25) length_b0b9ec root.Std_k98ojb.List.Length {}\n            char_6f4d8e -> length_b0b9ec.value\n            length_b0b9ec.result -> _7c5db2\n        } -> filter_8ec0c5.handler\n        input_4e35d2 -> filter_8ec0c5.items\n        func() {\n            in(x: -233, y: 33, name: \"char\") property(String) char_6f4d8e\n\n            out(x: 21, y: 26, name: \"\") property(Number) _7c5db2\n\n            instance(x: 104, y: 27) isnumeric_e87c43 {}\n            char_6f4d8e -> isnumeric_e87c43.input\n            isnumeric_e87c43.result -> _7c5db2\n        } -> map_dcd2f3.handler\n        filter_8ec0c5.output_list -> map_dcd2f3.items\n        map_dcd2f3.output_list -> contains_digit_6a1d9e.list\n        isnumeric_e87c43.input -> contains_digit_6a1d9e.item\n        false -> contains_digit_6a1d9e.is_contained\n    }\n\n    \n\n    instance(x: 99, y: -31) count_digits_b7f71b root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts the number of digits in a given string.\") count_digits {\n        in(x: -241, y: 29, name: \"input\") property(String) input_2d6da7\n\n        out(x: 1135, y: 46, name: \"count\") property(Number) count_c8f55b\n\n        instance(x: 0, y: 0) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        instance(x: -59, y: 47) tolower_3c9a43 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 0, y: 51) isnumeric_aedf2d root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 111, y: 54) count_7e8b5a root.Std_k98ojb.List.Count {}\n        instance(x: -24, y: 60) sum_0bb9eb root.Std_k98ojb.Math.Sum {}\n        input_2d6da7 -> map_f2330d.items\n        tolower_3c9a43.input -> map_f2330d.item\n        isnumeric_aedf2d.result -> count_7e8b5a.value\n        sum_0bb9eb.input1 -> count_7e8b5a.input\n        1 -> sum_0bb9eb.factor\n    }\n\n    \n\n    instance(x: -67, y: 63) count_digits_6c4d16 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Counts the number of digits in a given string.\") count_digits {\n        in(x: 0, y: -15, name: \"input\") property(String) input_51d6a3\n\n        out(x: 102, y: 14, name: \"count\") property(Number) count_94e4c2\n\n        instance(x: 34, y: -33, name: \"transform numbers to digits\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        input_51d6a3 -> map_c73e3b.items\n        func() {\n            in(x: 0, y: -20, name: \"x\") property(Number) x_5f2c8d\n\n            out(x: 1, y: -21, name: \"\") property(Number) _7dd980\n\n            instance(x: 3, y: -22) Characters_8a4e15 root.Std_k98ojb.Strings.Characters {}\n            x_5f2c8d -> Characters_8a4e15.input\n            Characters_8a4e15.characters -> _7dd980\n        } -> map_c73e3b.handler\n        map_c73e3b.output_list -> count_94e4c2\n    }\n\n    \n\n    instance(x: 21, y: -18) count_digits_dfec66 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts the number of digits in a given string.\") count_digits {\n        in(x: 6, y: -8, name: \"input\") property(String) input_5d4a9f\n\n        out(x: 233, y: 16, name: \"count\") property(Number) count_f34bf3\n\n        instance(x: 0, y: 0) map_03e3b7 root.Std_k98ojb.Iteration.Map {}\n        list_instance(x: 106, y: -87, name: \"numbers\") numbers = \"\"\n        input_5d4a9f -> map_03e3b7.items\n        func() {\n            in(x: -105, y: -28, name: \"char\") property(String) char_2c6ac1\n\n            out(x: 16, y: -24, name: \"\") property(Number) _digit_4df5a8\n\n            instance(x: 0, y: -33) isnumeric_bf0d45 root.Std_k98ojb.Strings.IsNumeric {}\n            char_2c6ac1 -> isnumeric_bf0d45.input\n            if(isnumeric_bf0d45.value == true) {\n                _digit_4df5a8 = 1\n            }\n        } -> map_03e3b7.handler\n        numbers -> map_03e3b7.output_list\n        count_f34bf3 = list_instance.length(numbers)\n    }\n\n    \n\n    instance(x: -89, y: 63) count_digits_2fdd55 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Counts the number of digits in a given string.\") count_digits {\n        in(x: 4, y: -17, name: \"input\") property(String) input_8d9e30\n\n        out(x: 135, y: -24, name: \"output\") property(Number) output_b5c2b1\n        instance(x: 0, y: 0) count_4f6a7d root.Std_k98ojb.List.Count {}\n        input_8d9e30 -> count_4f6a7d.items\n        count_4f6a7d.count -> output_b5c2b1\n    }\n\n    \n\n    instance(x: 101, y: -16) count_digits_87a0b9 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -231, y: 12, name: \"input\") property(String) input_8f0d2e\n\n        out(x: 123, y: -11, name: \"output\") property(Number) output_4a6c68\n\n        instance(x: 19, y: 3) string_length_f5b9ea root.Std_k98ojb.Strings.StringLength {}\n        input_8f0d2e -> string_length_f5b9ea.input\n        string_length_f5b9ea.result -> output_4a6c68\n    }\n\n    \n\n    instance(x: -47, y: 38) count_digits_e2c64b root.main.count_digits {}\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_of_fourth_power {\n        in(x: -215, y: 22, name: \"n\") property(Number) n_8f0a9d\n\n        out(x: 1391, y: -24, name: \"sum\") property(Number) sum_f5e3d4\n\n        instance(x: 112, y: -11, name: \"i\") property(Number) i_7ebc66\n        data_instance(x: 312, y: 137) data_cde0dc  = 1\n        instance(x: 20, y: 141) sum_9d8f77 root.Std_k98ojb.Math.Sum {}\n        instance(x: -31, y: 138) add_e74c4a root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> add_e74c4a.first\n        i_7ebc66 -> add_e74c4a.second\n        n_8f0a9d -> sum_9d8f77.n\n        add_e74c4a.result -> sum_9d8f77.result\n        func() {\n            in(x: -106, y: 67, name: \"current\") property(Number) current_9b8e1f\n\n            out(x: 0, y: 55, name: \"\") property(Number) _4c5c3b\n\n            instance(x: 118, y: 51) power_1d4a6e root.Std_k98ojb.Math.Pow {}\n            current_9b8e1f -> power_1d4a6e.x\n            4 -> power_1d4a6e.y\n            power_1d4a6e.result -> _4c5c3b\n        } -> sum_9d8f77.handler\n        sum_9d8f77.output_list -> list_cde0dc.items\n    }\n\n    \n\n    instance(x: -19, y: 59) sum_of_fourth_power_2a71e1 root.main.sum_of_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_of_fourth_power {\n        in(x: -213, y: 27, name: \"n\") property(Number) n_1d5e35\n\n        out(x: 1370, y: 16, name: \"sum\") property(Number) sum_8a6fbd\n\n        instance(x: 95, y: -56, name: \"i\") counter\n        instance(x: 104, y: 67) expression_a4b8c9 root.Std_k98ojb.Math.Expression {\n            expression: \"(i * i * i * i)\"\n        }\n        instance(x: 255, y: 31) add_4d0a6f root.Std_k98ojb.Math.Add {}\n        n_1d5e35 -> add_4d0a6f.first\n        1 -> add_4d0a6f.second\n        add_4d0a6f.result -> sum_8a6fbd\n        counter.index -> expression_a4b8c9.gen_0\n        n_1d5e35 -> counter.new_value\n    }\n\n    \n\n    instance(x: -44, y: 59) sum_of_fourth_power_e7a2e9 root.main.sum_of_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_powers {\n        in(x: -221, y: 21, name: \"n\") property(Number) n_9f2d74\n\n        out(x: 1001, y: -24, name: \"sum\") property(Number) sum_f4a3c6\n\n        instance(x: 102, y: 27, name: \"generate_numbers\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 209, y: -16, name: \"calculate_fourth_powers\") map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 326, y: 10) add_f3e0d4 root.Std_k98ojb.Math.Add {}\n        instance(x: 463, y: 21) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        instance(x: 596, y: -12) div_64046c root.Std_k98ojb.Math.Div {}\n        instance(x: 727, y: 25) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 858, y: -34) add_b4554f root.Std_k98ojb.Math.Add {}\n        data_instance(x: 0, y: -31, name: \"data_9c1e8d\") = 3\n\n        list_d128d8 -> filter_c91965.items\n        func() {\n            in(x: -129, y: 44, name: \"i\") property(Number) i_5f1bb4\n            out(x: 0, y: -18, name: \"\") property(Number) _7dd980\n\n            instance(x: 13, y: 35) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            data_9c1e8d -> modulo_c76d2b.divisor\n            i_5f1bb4 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> _7dd980\n        } -> filter_c91965.handler\n        map_6030c9.output_list -> sum_f4a3c6\n    }\n\n    \n\n    instance(x: -67, y: 39) sum_fourth_powers_6f2d28 root.main.sum_fourth_powers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -191, y: 21, name: \"n\") property(Number) n_3d0bf5\n\n        out(x: 1024, y: -20, name: \"result\") property(Number) result_ea9e7b\n\n        instance(x: 0, y: 0, name: \"data_instance\") data_instance_8f2c34 = []\n        function_3d1de5 root.Std_k98ojb.List.GenerateRange {}\n        list_8f2c34 -> function_3d1de5.list\n        n_3d0bf5 -> function_3d1de5.from\n        function_3d1de5.to -> n_3d0bf5\n        func() {\n            in(x: -216, y: 64, name: \"i\") property(Number) i_7c4f67\n\n            out(x: 128, y: -28, name: \"\") property(Number) _result_8a35eb\n\n            instance(x: 243, y: 54) pow_f2b5e1 root.Std_k98ojb.Math.Pow {}\n            i_7c4f67 -> pow_f2b5e1.x\n            1 -> pow_f2b5e1.y\n            pow_f2b5e1.result -> _result_8a35eb\n        } -> function_3d1de5.handler\n        pow_f2b5e1.second -> result_ea9e7b\n    }\n\n    \n\n    instance(x: 108, y: -103) sum_fourth_power_65c6ac root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_of_fourth_power {\n        in(x: -193, y: 43, name: \"n\") property(Number) n_49fdd4\n\n        out(x: 104, y: 85, name: \"sum\") property(Number) sum_d45c63\n\n        instance(x: 1, y: 0) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        list_instance(x: -219, y: 71, name: \"numbers\") numbers = list_instance_2d4e15\n        instance(x: 95, y: -11, name: \"power\") Math.Pow {}\n        instance(x: 102, y: 69) sum_f4a5b0 root.Std_k98ojb.Math.Sum {}\n        instance(x: 110, y: 76) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: -16, y: 79) if_e19a62 root.Std_k98ojb.Std.If {}\n        list_instance(x: 0, y: 83, name: \"odd_numbers\") odd_numbers = []\n        numbers -> generaterange_038fce.from\n        n_49fdd4 -> generaterange_038fce.to\n        for_8cb3f6.index -> power.first\n        for_8cb3f6.item -> power.second\n        power.result -> sum_f4a5b0.value\n        odd_numbers -> for_8cb3f6.items\n        1 -> sum_f4a5b0.gen_1\n        2 -> sum_f4a5b0.gen_0\n        sum_f4a5b0.result -> sum_d45c63\n    }\n\n    \n\n    instance(x: -20, y: 89) sum_of_fourth_power_b8d6c9 root.main.sum_of_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_of_fourth_power {\n        in(x: -242, y: 59, name: \"n\") property(Number) n_8a88f3\n\n        out(x: 1556, y: -26, name: \"sum\") property(Number) sum_65c7b9\n\n        instance(x: 0, y: 34, name: \"i\") property(Number) i_a2d98e\n        instance(x: 0, y: 30, name: \"result\") property(Number) result_e1f5ac\n        data_instance(x: -233, y: -33, name: \"odd_number\") odd_number = 3\n\n        out_65c7b9 -> sum_65c7b9\n\n        for_065883.reset -> i_a2d98e.new_value\n        i_a2d98e.continue -> result_e1f5ac.result\n        list_0d40f1 -> odd_number\n        i_a2d98e.index -> odd_number\n        i_a2d98e.item -> sum_65c7b9\n        for_065883.done -> out_65c7b9\n    }\n\n    \n\n    instance(x: 313, y: -24) sum_of_fourth_power_6f5d8b root.main.sum_of_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_fourth_power {\n        in(x: -251, y: 36, name: \"n\") property(Number) n_8a4e3d\n\n        out(x: 1277, y: -40, name: \"sum\") property(Number) sum_c1c62f\n\n        instance(x: 19, y: 56) list_8de0ca root.Std_k98ojb.List.GenerateRange {}\n        list_8de0ca.list -> map_66e6a9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: -13, y: 63, name: \"odd_numbers\") filter_c91965 root.Std_k98ojb.Query.Filter {}\n        instance(x: 110, y: 53) sum_f4d7c2 root.Std_k98ojb.Math.Sum {}\n        instance(x: 184, y: 69) fourth_power_8e9f3a root.Std_k98ojb.Math.Pow {}\n        instance(x: 292, y: -17) add_1ca76a root.Std_k98ojb.Math.Add {}\n\n        list_8de0ca.from -> odd_numbers.filter\n        odd_numbers.filter -> sum_f4d7c2.items\n        n_8a4e3d -> fourth_power_8e9f3a.exponent\n        1 -> add_1ca76a.first\n        map_66e6a9.items -> sum_f4d7c2.input_list\n        odd_numbers.list -> filter_c91965.items\n        fourth_power_8e9f3a.result -> add_1ca76a.result\n    }\n\n    \n\n    instance(x: 83, y: -109) sum_odd_fourth_power_ab1fa6 root.main.sum_odd_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_power {\n        in(x: -225, y: 38, name: \"n\") property(Number) n_1d9e8a\n\n        out(x: 1065, y: 21, name: \"sum\") property(Number) sum_e68f6c\n\n        instance(x: 95, y: -105, name: \"odd_list\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 111, y: -47, name: \"fourth_power\") map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 194, y: -27, name: \"sum_list\") list_sum_4a7dd2 root.Std_k98ojb.List.Sum {}\n        instance(x: 275, y: 24, name: \"add_power\") add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 344, y: -33, name: \"modulo_divisor\") modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n        data_instance(x: 123, y: 91) data_d1e9a4  = 3\n        instance(x: 0, y: 107) pow_584bfd root.Std_k98ojb.Math.Pow {}\n\n        list_d1e9a4 -> filter_c91965.items\n        n_1d9e8a -> fourth_power.gen_0\n        modulo_1088d5.divisor -> add_power.second\n        pow_584bfd.x -> add_power.first\n        3 -> pow_584bfd.y\n        pow_584bfd.result -> add_power.second\n        filter_c91965.output_list -> map_6030c9.items\n        map_6030c9.output_list -> list_sum_4a7dd2.list\n        sum_4a7dd2.value -> sum_e68f6c\n    }\n\n    \n\n    instance(x: 92, y: -13) sum_odd_power_b1e5d8 root.main.sum_odd_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_fourth_power {\n        in(x: -192, y: 25, name: \"n\") property(Number) n_6f6a8e\n\n        out(x: 1210, y: -23, name: \"sum\") property(Number) sum_5dd43b\n\n        instance(x: 123, y: 19) list_c2d3c9 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 74, y: 30) mul_f0a4f2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 191, y: -27) pow_8f5e1a root.Std_k98ojb.Math.Pow {}\n        instance(x: 255, y: 17) sub_c87da3 root.Std_k98ojb.Math.Sub {}\n        list_c2d3c9 -> mul_f0a4f2.items\n        n_6f6a8e -> pow_8f5e1a.x\n        pow_8f5e1a.y -> 4\n        sum_odd_fourth_power -> sub_c87da3.result\n    }\n\n    \n\n    instance(x: -19, y: 69) sum_odd_fourth_power_9db6c2 root.main.sum_odd_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -224, y: 21, name: \"n\") property(Number) n_3e8d4b\n\n        out(x: 113, y: 49, name: \"sum\") property(Number) sum_f9f63c\n\n        instance(x: 0, y: 1, name: \"count\") Count {}\n        instance(x: -234, y: -7, name: \"i\") property(Number) i_4d8a85\n        instance(x: 1036, y: 23, name: \"num\") property(Number) num_fdd5f5\n        instance(x: 1352, y: 19, name: \"sum_of_powers\") property(Number) sum_e0b7c9\n\n        count.reset -> i_4d8a85.reset\n        i_4d8a85.next -> num_fdd5f5.reset\n        num_fdd5f5.value -> sum_of_powers\n        sum_of_powers += 1 -> count.count\n        num_fdd5f5.value = num_fdd5f5.value + 2 -> i_4d8a85.next\n        i_4d8a85.value % 2 == 0 -> if_7c284f.execute\n        if_7c284f.else -> count.reset\n        sum_of_powers += (num_fdd5f5.value ^ 3) * (num_fdd5f5.value ^ 3) -> sum_e0b7c9\n    }\n\n    \n\n    instance(x: -208, y: 58) sum_fourth_power_b6e7af root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the surface area of a cube of a given size.\") find_surface_area {\n        in(x: 3, y: -15, name: \"side\") property(Number) side_0e8b2f\n\n        out(x: 594, y: 19, name: \"surface_area\") property(Number) surface_area_a6c5df\n\n        instance(x: 9, y: 7) for_0e3a11 root.Std_k98ojb.Std.For {}\n        instance(x: 20, y: -1, name: \"area\") property(Number) area_2ea1f3\n        instance(x: 12, y: 15) mul_9c22eb root.Std_k98ojb.Math.Mul {}\n        side_0e8b2f -> mul_9c22eb.first\n        6 -> mul_9c22eb.second\n        mul_9c22eb.result -> area_2ea1f3\n        function() {\n            in(x: -11, y: 4, name: \"i\") property(Number) i_f0e4ec\n\n            out(x: 0, y: 28, name: \"\") property(Number) output_9d34a7\n\n            instance(x: 5, y: 24) add_2b1f33 root.Std_k98ojb.Math.Add {}\n            area_2ea1f3 -> add_2b1f33.first\n            i_f0e4ec -> add_2b1f33.second\n            add_2b1f33.result -> output_9d34a7\n        } -> for_0e3a11.handler\n        for_0e3a11.items -> area_2ea1f3\n        function() {\n            in(x: 8, y: -4, name: \"output\") property(Number) output_f1c6df\n\n            instance(x: 12, y: 22) sum_c87d7b root.Std_k98ojb.Math.Sum {}\n            area_2ea1f3 -> sum_c87d7b.items\n            output_f1c6df -> sum_c87d7b.result\n        } -> for_0e3a11.handler\n        sum_c87d7b.output_list -> surface_area_a6c5df\n    }\n\n    \n\n    instance(x: 12, y: -31) find_surface_area_e4f8bb root.main.find_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -193, y: 3, name: \"side\") property(Number) side_4f5e30\n\n        out(x: 121, y: 27, name: \"surfaceArea\") property(Number) surfacearea_f6d23b\n\n        instance(x: 18, y: 16) pow_c1c7f8 root.Std_k98ojb.Math.Pow {}\n        side_4f5e30 -> pow_c1c7f8.x\n        2 -> pow_c1c7f8.y\n        pow_c1c7f8.result -> surfacearea_f6d23b\n        pow_c1c7f8.result -> surfacearea_f6d23b\n        side_4f5e30 -> surfacearea_f6d23b\n    }\n\n    \n\n    instance(x: 124, y: -64) surface_area_ba85ec root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the surface area of a cube of a given size.\") surface_area {\n        in(x: 5, y: -14, name: \"side\") property(Number) side_4f8a29\n\n        out(x: 215, y: 16, name: \"area\") property(Number) area_7c2d6b\n\n        instance(x: 103, y: -43) multiply_0e3db9 root.Std_k98ojb.Math.Mul {}\n        instance(x: 253, y: -36) add_c1f5ad root.Std_k98ojb.Math.Add {}\n        instance(x: 105, y: 12) three_4a7d8a root.Std_k98ojb.Number.Three {}\n        instance(x: 234, y: 14) pow_f6e0db root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -193, y: -27) data_5c2f1c = side\n        three_4a7d8a.result -> pow_f6e0db.gen_0\n        multiply_0e3db9.first -> add_c1f5ad.first\n        three_4a7d8a -> add_c1f5ad.second\n        data_5c2f1c -> add_c1f5ad.first\n        pow_f6e0db.result -> area_7c2d6b\n    }\n\n    \n\n    instance(x: 95, y: -44) surface_area_4de8ed root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -199, y: 2, name: \"side\") property(Number) side_4a88e5\n\n        out(x: 2160, y: -209, name: \"area\") property(Number) area_f6f4d3\n\n        instance(x: 21, y: -208) sum_7c8baf root.Std_k98ojb.Math.Sum {}\n        function(x: 1051, y: -215) cube_root_9e5f4a root.Std_k98ojb.Math.Pow {}\n        side_4a88e5 -> cube_root_9e5f4a.x\n        3 -> cube_root_9e5f4a.y\n        cube_root_9e5f4a.result -> sum_7c8baf.first\n        function(x: 1052, y: -214) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        side_4a88e5 -> mul_f2330d.first\n        6 -> mul_f2330d.second\n        sum_7c8baf.result -> mul_f2330d.first\n        function(x: 1053, y: -213) sub_e1f7f9 root.Std_k98ojb.Math.Sub {}\n        side_4a88e5 -> sub_e1f7f9.first\n        2 -> sub_e1f7f9.second\n        sum_7c8baf.result -> sub_e1f7f9.first\n        area_f6f4d3 -> sum_7c8baf.value\n    }\n\n    \n\n    instance(x: 0, y: -215) surface_area_dff65a root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -219, y: 2, name: \"side\") property(Number) side_35fbae\n\n        out(x: 1389, y: 31, name: \"surfaceArea\") property(Number) surfaceArea_6c8a3d\n\n        instance(x: 0, y: 28) pow_4b7ad9 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -179, y: -11, name: \"data_5eef2f\") data_5eef2f = side\n        pow_4b7ad9.result -> surfaceArea_6c8a3d\n        2 -> pow_4b7ad9.y\n        side_35fbae -> pow_4b7ad9.x\n        data_5eef2f -> surfaceArea_6c8a3d\n    }\n\n    \n\n    instance(x: -74, y: 53) surface_area_d66cf0 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the surface area of a cube of a given size.\") surface_area {\n        in(x: 5, y: -18, name: \"side\") property(Number) side_6e83f3\n\n        out(x: 105, y: -20, name: \"area\") property(Number) area_94c8b4\n\n        instance(x: 0, y: 0) count_a9d34a root.Std_k98ojb.Std.Count {}\n        instance(x: 1, y: 16, name: \"cube_area\") property(Number) cube_area_d7bf3f\n        function_2e6da5 root.Std_k98ojb.Math.Add {}\n        function_2e6da5.result -> cube_area_d7bf3f\n\n        set_instance(x: -31, y: 16, name: \"set_instance_e1d0a4\") set_instance_e1d0a4 = count\n        instance(x: -30, y: 15) mul_4e8c56 root.Std_k98ojb.Math.Mul {}\n        side_6e83f3 -> mul_4e8c56.first\n        6 -> mul_4e8c56.second\n        mul_4e8c56.result -> set_instance_e1d0a4.value\n        count_a9d34a.reset -> function_2e6da5.execute\n        side_6e83f3 -> count_a9d34a.new_value\n        cube_area_d7bf3f -> area_94c8b4\n    }\n\n    \n\n    instance(x: 101, y: -12) surface_area_bdd56f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -193, y: 20, name: \"size\") property(Number) size_b9d6f8\n\n        out(x: 1200, y: -21, name: \"surface\") property(Number) surface_a4c2bc\n\n        instance(x: 108, y: -105, name: \"sides\") count_6e33b7 root.Std_k98ojb.List.Count {}\n        getter(x: 275, y: 74) get_9fdd5d root.Std_k98ojb.List.GetAt {}\n        instance(x: 454, y: 63) mul_f23c21 root.Std_k98ojb.Math.Mul {}\n        instance(x: 742, y: -26) add_b2c4e7 root.Std_k98ojb.Math.Add {}\n        instance(x: 935, y: -44) expression_5d14f9 root.Std_k98ojb.Math.Expression {\n            expression: \"(6 * s^2)\"\n        }\n        instance(x: 1008, y: 35) sub_4a3f85 root.Std_k98ojb.Math.Sub {}\n        instance(x: 1080, y: -15) pow_f66d34 root.Std_k98ojb.Math.Pow {}\n\n        list_06c1e7 = [size_b9d6f8]\n        sides.result -> get_9fdd5d.new_value\n        size_b9d6f8 -> mul_f23c21.first\n        2 -> mul_f23c21.second\n        mul_f23c21.result -> add_b2c4e7.first\n        add_b2c4e7.result -> sub_4a3f85.first\n        expression_5d14f9.gen_0 -> pow_f66d34.y\n        pow_f66d34.result -> expression_5d14f9.gen_1\n        sub_4a3f85.result -> surface_a4c2bc\n    }\n\n    \n\n    instance(x: -98, y: 539) surface_area_b2b6f8 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -245, y: 23, name: \"size\") property(Number) size_4f0a5e\n\n        out(x: 1056, y: -24, name: \"surface\") property(Number) surface_d1d3c7\n\n        instance(x: 18, y: -31) pow_3b74af root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -233, y: 4) data_e7f8f9  = size\n        instance(x: 22, y: 20) mul_29e1c5 root.Std_k98ojb.Math.Mul {}\n        pow_3b74af.result -> mul_29e1c5.first\n        2 -> mul_29e1c5.second\n        data_e7f8f9 -> mul_29e1c5.first\n        mul_29e1c5.result -> surface_d1d3c7\n    }\n\n    \n\n    instance(x: -227, y: 54) surface_area_0a4cd6 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -247, y: 16, name: \"side\") property(Number) side_6d34b1\n\n        out(x: 1200, y: 25, name: \"surfaceArea\") property(Number) surfacearea_59a65c\n\n        instance(x: 96, y: 30) for_2e8d7 root.Std_k98ojb.Std.For {}\n        instance(x: -33, y: 58) count_5af3f9 root.Std_k98ojb.Std.Count {}\n        instance(x: 123, y: 50) mul_6a1c0a root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -228, y: -18, name: \"data_8d21dd\") data_8d21dd = [side]\n        side -> for_2e8d7.items\n        6 -> mul_6a1c0a.second\n        surfacearea_59a65c -> for_2e8d7.count\n    }\n\n    \n\n    instance(x: -23, y: 81) surface_area_of_cube_9f5bdf root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -203, y: 18, name: \"side\") property(Number) side_1f5d4b\n\n        out(x: 725, y: -43, name: \"surface_area\") property(Number) surface_area_42c0a6\n\n        instance(x: 21, y: 0) mul_f2330b root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 336, y: 77) data_8f4e1d = 6\n        instance(x: -28, y: 20) pow_7c4a94 root.Std_k98ojb.Math.Pow {}\n        side_1f5d4b -> mul_f2330b.first\n        pow_7c4a94.result -> mul_f2330b.second\n        data_8f4e1d -> pow_7c4a94.y\n        mul_f2330b.result -> surface_area_42c0a6\n    }\n\n    \n\n    instance(x: -35, y: 44) surface_area_9bfc5b root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -235, y: 2, name: \"list\") property(List) list_0b5d25\n\n        out(x: 1071, y: 29, name: \"diff\") property(Number) diff_b7e6c9\n\n        instance(x: 105, y: -101, name: \"max\") filter_c91965 root.Std_k98ojb.List.Max {}\n        instance(x: 288, y: 74) min_8f3a5d root.Std_k98ojb.List.Min {}\n        list_0b5d25 -> max.items\n        list_0b5d25 -> min_items\n        max.result -> diff_b7e6c9\n        min_8f3a5d.result -> diff_b7e6c9\n    }\n\n    \n\n    instance(x: -91, y: 45) diff_largest_smallest_c7ea29 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -219, y: 2, name: \"list\") property(List) list_9d6f1b\n\n        out(x: 1328, y: 20, name: \"difference\") property(Number) difference_b3c4df\n\n        instance(x: 0, y: 0, name: \"max_min\") find_max_min root.Std_k98ojb.List.Max {}\n        instance(x: -59, y: 35, name: \"min_max\") find_min_max root.Std_k98ojb.List.Min {}\n        instance(x: 305, y: -97, name: \"subtractor\") subtractor_4e7a1 root.Std_k98ojb.Math.Sub {}\n        list_9d6f1b -> find_max_min.items\n        list_9d6f1b -> find_min_max.items\n        find_max_min.result -> subtractor_4e7a1.first\n        find_min_max.result -> subtractor_4e7a1.second\n        subtractor_4e7a1.result -> difference_b3c4df\n    }\n\n    \n\n    instance(x: -74, y: 43) diff_max_min_e8d41f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: 5, y: -2, name: \"list\") property(List) list_3a9f6b\n\n        out(x: 1128, y: 27, name: \"difference\") property(Number) difference_7c1e4d\n\n        instance(x: 0, y: 0, name: \"max_min\") filter_7e2e43 root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 0, name: \"min_max\") filter_e8a6f9 root.Std_k98ojb.List.Min {}\n        instance(x: -28, y: 54, name: \"transform_numbers_to_diff\") map_d55c43 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 108, y: 35) sub_5e1d8f root.Std_k98ojb.Math.Sub {}\n        list_3a9f6b -> filter_e8a6f9.list\n        filter_max_min.list -> filter_max_min.items\n        filter_min_max.list -> map_d55c43.items\n        filter_max_min.result -> sub_5e1d8f.first\n        filter_min_max.result -> sub_5e1d8f.second\n        map_d55c43.output_list -> diff_max_min.difference\n    }\n\n    \n\n    instance(x: 0, y: 46) diff_max_min_3b2aa6 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -224, y: 2, name: \"list\") property(List) list_8f1e57\n\n        out(x: 1103, y: -211, name: \"difference\") property(Number) diff_e0a6c7\n\n        instance(x: 0, y: 0) find_min_fdb1d root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) find_max_4e5cd1 root.Std_k98ojb.List.Max {}\n        list_8f1e57 -> find_min_fdb1d.items\n        list_8f1e57 -> find_max_4e5cd1.items\n        diff_max_min -> find_max_4e5cd1.result\n    }\n\n    \n\n    instance(x: 0, y: -3) diff_max_min_e2c43b root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -243, y: 2, name: \"list\") property(List) list_9a91d0\n\n        out(x: 1013, y: 35, name: \"result\") property(Number) result_e4baf5\n\n        instance(x: 1, y: 0) min_cde7f0 root.Std_k98ojb.List.Min {}\n        instance(x: 2, y: -21, name: \"max_f6d2aa\") root.Std_k98ojb.List.Max {}\n        instance(x: 3, y: 54, name: \"diff_9e38c4\") root.Std_k98ojb.Math.Sub {}\n        list_9a91d0 -> min_cde7f0.items\n        max_f6d2aa.items -> diff_largest_smallest.list\n        min_cde7f0.min -> result_e4baf5\n        max_f6d2aa.max -> diff_largest_smallest.result\n        diff_9e38c4.result -> result_e4baf5\n    }\n\n    \n\n    instance(x: 341, y: -26) diff_largest_smallest_ba1f0f root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -219, y: 6, name: \"list\") property(List) list_2d8a92\n\n        out(x: 1124, y: 5, name: \"difference\") property(Number) difference_b5f7bc\n\n        instance(x: 0, y: 0) min_c3e343 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 33) max_8a1d66 root.Std_k98ojb.List.Max {}\n        instance(x: 97, y: 26) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_2d8a92 -> min_c3e343.items\n        list_2d8a92 -> max_8a1d66.items\n        max_8a1d66.result -> sub_852f2e.first\n        min_c3e343.result -> sub_852f2e.second\n        sub_852f2e.result -> difference_b5f7bc\n    }\n\n    \n\n    instance(x: -59, y: 56) diff_largest_smallest_d6b8c9 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -219, y: 44, name: \"list\") property(List) list_b56d8e\n\n        out(x: 1056, y: -1, name: \"difference\") property(Number) difference_4b7cd2\n\n        instance(x: 0, y: 5) min_fdd6e3 root.Std_k98ojb.List.Min {}\n        instance(x: 1189, y: 85) max_c8aee7 root.Std_k98ojb.List.Max {}\n        instance(x: -1, y: 97) sub_4f0d56 root.Std_k98ojb.Math.Sub {}\n        list_b56d8e -> min_fdd6e3.items\n        list_b56d8e -> max_c8aee7.items\n        min_fdd6e3.min -> difference_4b7cd2\n    }\n\n    \n\n    instance(x: 0, y: 44) diff_largest_smallest_1f5c71 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -234, y: 1, name: \"list\") property(List) list_0e5a2f\n\n        out(x: 1223, y: -8, name: \"difference\") property(Number) difference_c56dbb\n\n        instance(x: 0, y: 0) min_f5d3c7 root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 1) max_4a2bcb root.Std_k98ojb.List.Max {}\n        list_0e5a2f -> min_f5d3c7.items\n        list_0e5a2f -> max_4a2bcb.items\n        min_f5d3c7.min -> difference_c56dbb\n        max_4a2bcb.max -> difference_c56dbb\n    }\n\n    \n\n    instance(x: 100, y: -24) diff_b1e76a root.main.diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -217, y: 6, name: \"list\") property(List) list_8d0a57\n\n        out(x: 1209, y: -209, name: \"result\") property(Number) result_e5c3e4\n\n        instance(x: 112, y: 17) min_max_2f1b41 root.Std_k98ojb.List.Min {}\n        instance(x: 261, y: 74) max_6f8a57 root.Std_k98ojb.List.Max {}\n        instance(x: 133, y: -13, name: \"diff\") trigger() diff_3e5d4c\n        list_8d0a57 -> min_max_2f1b41.items\n        list_8d0a57 -> max_6f8a57.items\n        list_8d0a57 -> diff_3e5d4c.items\n\n        instance(x: 0, y: 0, name: \"diff_setter\") setter_7e2b42 = result_e5c3e4\n        instance(x: 0, y: 0, name: \"diff_getter\") getter_f3a6f1 = result_e5c3e4\n        instance(x: 0, y: 0, name: \"diff_setter_2\") setter_8b8c85 = min_max_2f1b41.min\n        instance(x: 0, y: 0, name: \"diff_getter_2\") getter_e24e28 = min_max_2f1b41.min\n        instance(x: 0, y: 0, name: \"diff_setter_3\") setter_7e2b42 = max_6f8a57.max\n        instance(x: 0, y: 0, name: \"diff_getter_3\") getter_e24e28 = max_6f8a57.max\n        instance(x: 0, y: 0, name: \"diff_setter_4\") setter_7e2b42 = diff_3e5d4c.result\n        instance(x: 0, y: 0, name: \"diff_getter_4\") getter_f3a6f1 = diff_3e5d4c.result\n\n        instance(x: 130, y: -108) add_f77cf7 root.Std_k98ojb.Math.Add {}\n        min_max_2f1b41.min -> add_f77cf7.first\n        max_6f8a57.max -> add_f77cf7.second\n        add_f77cf7.result -> diff_3e5d4c.result\n    }\n\n    \n\n    instance(x: -91, y: 531) diff_2dc9b1 root.main.diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -509, y: 15, name: \"list\") property(List) list_6f0d8a\n\n        out(x: 1024, y: 21, name: \"output\") property(Number) output_3e2c33\n\n        instance(x: 123, y: 18) min_96b7f1 root.Std_k98ojb.List.Min {}\n        instance(x: 1098, y: -46, name: \"max\") property(Number) max_6aef71\n        instance(x: 233, y: 22) sub_c0d85e root.Std_k98ojb.Math.Sub {}\n        list_6f0d8a -> min_96b7f1.items\n        list_6f0d8a -> max.max\n        min_96b7f1.result -> sub_c0d85e.first\n        max_6aef71 -> sub_c0d85e.second\n        sub_c0d85e.result -> output_3e2c33\n    }\n\n    \n\n    instance(x: -83, y: 56) diff_max_min_d8f7b5 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -222, y: 0, name: \"number\") property(Number) number_1d3a2e\n\n        out(x: 1066, y: -26, name: \"output\") property(Bool) output_f8c4b5\n\n        instance(x: 98, y: -18) modulo_9f7a4b root.Std_k98ojb.Math.Modulo {}\n        number_1d3a2e -> modulo_9f7a4b.value\n        2 -> modulo_9f7a4b.divisor\n        modulo_9f7a4b.result -> output_f8c4b5\n    }\n\n    \n\n    instance(x: -59, y: 26) is_even_e1d9d3 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -123, y: 2, name: \"number\") property(Number) number_5d3f0a\n\n        out(x: 1206, y: -11, name: \"output\") property(Bool) output_e4e0da\n\n        instance(x: 73, y: 34) modulo_d9c8af root.Std_k98ojb.Math.Modulo {}\n        number_5d3f0a -> modulo_d9c8af.value\n        2 -> modulo_d9c8af.divisor\n        modulo_d9c8af.result -> output_e4e0da\n    }\n\n    \n\n    instance(x: -54, y: 569) is_even_f6bfb1 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -261, y: 6, name: \"n\") property(Number) n_2e3f5a\n\n        out(x: 1304, y: 44, name: \"output\") property(Bool) output_a8d1b0\n\n        instance(x: 95, y: -10, name: \"modulo_5c5af7\") modulo_5c5af7 root.Std_k98ojb.Math.Modulo {}\n        n_2e3f5a -> modulo_5c5af7.value\n        2 -> modulo_5c5af7.divisor\n        modulo_5c5af7.result -> output_a8d1b0\n    }\n\n    \n\n    instance(x: -41, y: 51) is_even_e9aa98 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -531, y: 1, name: \"number\") property(Number) number_3d8a92\n\n        out(x: 1109, y: -69, name: \"output\") property(Bool) output_c6c0b5\n\n        instance(x: 0, y: 0) modulo_a15e33 root.Std_k98ojb.Math.Modulo {}\n        number_3d8a92 -> modulo_a15e33.value\n        2 -> modulo_a15e33.divisor\n        modulo_a15e33.result -> output_c6c0b5\n    }\n\n    \n\n    instance(x: -215, y: 46) is_even_b7fde5 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -231, y: 3, name: \"number\") property(Number) num_1ca4df\n\n        out(x: 1059, y: 27, name: \"result\") property(Bool) result_ba3b5e\n\n        instance(x: 0, y: 0) modulo_10f8fa root.Std_k98ojb.Math.Modulo {}\n        num_num_1ca4df -> modulo_10f8fa.value\n        2 -> modulo_10f8fa.divisor\n        modulo_10f8fa.result -> result_ba3b5e\n    }\n\n    \n\n    instance(x: -26, y: 61) is_even_acd6ec root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -121, y: 43, name: \"n\") property(Number) n_2d8e11\n\n        out(x: 1016, y: 38, name: \"output\") property(Bool) output_b3f5dc\n\n        instance(x: 0, y: 0) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        n_2d8e11 -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> output_b3f5dc\n    }\n\n    \n\n    instance(x: -69, y: 55) is_even_f4a0c6 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -219, y: 1, name: \"n\") property(Number) n_49f9a3\n\n        out(x: 1072, y: -20, name: \"output\") property(Bool) output_e58c62\n\n        instance(x: 0, y: -23) modulo_d2b4d7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 11, y: 24) notequal_63e1a9 root.Std_k98ojb.Logic.NotEqual {}\n        n_49f9a3 -> modulo_d2b4d7.value\n        0 -> notequal_63e1a9.right\n        modulo_d2b4d7.divisor -> notequal_63e1a9.left\n        notequal_63e1a9.result -> output_e58c62\n    }\n\n    \n\n    instance(x: -45, y: 70) is_even_b5f0df root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: 3, y: -1, name: \"num\") property(Number) num_2d6a25\n\n        out(x: 0, y: 75, name: \"result\") property(Bool) result_b7f9af\n        instance(x: 103, y: 77) modulo_5b4c43 root.Std_k98ojb.Math.Modulo {}\n        num_num_2d6a25 -> modulo_5b4c43.value\n        0 -> modulo_5b4c43.divisor\n        modulo_5b4c43.result -> result_b7f9af\n    }\n\n    \n\n    instance(x: -31, y: 56) is_even_f3cd2d root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 4, y: -22, name: \"number\") property(Number) number_5a2a35\n\n        out(x: 0, y: 44, name: \"is_even\") property(Bool) is_even_9d41af\n\n        instance(x: 0, y: 42) modulo_6e7f4 root.Std_k98ojb.Math.Modulo {}\n        number_5a2a35 -> modulo_6e7f4.value\n        2 -> modulo_6e7f4.divisor\n        modulo_6e7f4.result -> is_even_9d41af\n    }\n\n    \n\n    instance(x: -29, y: 64) is_even_d8e5a0 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -215, y: 33, name: \"n\") property(Number) n_1d0f2e\n\n        out(x: 1039, y: 76, name: \"result\") property(Bool) result_e4a7c1\n\n        instance(x: 97, y: 71) modulo_d77b35 root.Std_k98ojb.Math.Modulo {}\n        n_1d0f2e -> modulo_d77b35.value\n        2 -> modulo_d77b35.divisor\n        modulo_d77b35.result -> result_e4a7c1\n    }\n\n    \n\n    instance(x: -25, y: 46) is_even_a5a5bb root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: 3, y: -15, name: \"input\") property(String) input_9a2f67\n\n        out(x: 1090, y: -5, name: \"continue\") trigger() continue_6c1e38\n        out(x: 1154, y: 22, name: \"output\") property(Number) output_3d7b5c\n\n        instance(x: -13, y: -28, name: \"map_2f8a90\") map_2f8a90 = Iteration.Map {}\n        input_9a2f67 -> map_2f8a90.items\n        func() {\n            in(x: 0, y: -30, name: \"char\") property(Number) char_a71b6d\n\n            out(x: 1093, y: 20, name: \"\") property(Bool) bool_c7e77c\n\n            instance(x: -31, y: -24) islower_5f9a4f root.Std_k98ojb.Strings.IsLower {}\n            char_a71b6d -> islower_5f9a4f.char\n            0 -> islower_5f9a4f.value\n            true -> islower_5f9a4f.result -> bool_c7e77c\n        } -> map_2f8a90.handler\n        instance(x: 1, y: -10) count_6d43d root.Std_k98ojb.List.Count {}\n        input_9a2f67 -> count_6d43d.items\n        count_6d43d.value -> output_3d7b5c\n        map_2f8a90.output_list -> count_6d43d.list\n        islower_5f9a4f.result -> bool_c7e77c\n        continue_6c1e38 -> for_0ac2cd\n        input_9a2f67 -> for_0ac2cd.items\n        1 -> for_0ac2cd.new_value\n        map_2f8a90.output_list -> for_0ac2cd.list\n        output_3d7b5c -> for_0ac2cd.value\n    }\n\n    \n\n    instance(x: -63, y: 54) first_repeated_char_b1e4ea root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -213, y: 2, name: \"input\") property(String) input_8d6f9b\n\n        out(x: 1164, y: 35, name: \"output\") property(Number) output_a5a4bb\n\n        instance(x: 0, y: 0) map_d3c1ad root.Std_k98ojb.Iteration.Map {}\n        instance(x: -14, y: 42) filter_6eaa45 root.Std_k98ojb.Query.Filter {}\n        instance(x: 1035, y: 67) count_4a2d23 root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 59) if_8f3ff1 root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -19, y: 64, name: \"char\") property(Number) char_5e9c43\n\n            out(x: 1207, y: -39, name: \"\") property(Bool) bool_dff2b4\n            out(x: 1266, y: 29, name: \"index\") property(Number) index_8a1d21\n\n            instance(x: 0, y: -3) modulo_5e85f6 root.Std_k98ojb.Math.Modulo {}\n            char_5e9c43 -> modulo_5e85f6.value\n            input_8d6f9b.length -> modulo_5e85f6.divisor\n            modulo_5e85f6.result -> bool_dff2b4\n        } -> map_d3c1ad.handler\n        filter_6eaa45.filter -> map_d3c1ad.items\n        count_4a2d23.list -> filter_6eaa45.list\n        0 -> count_4a2d23.reset\n        for(i, char) in input_8d6f9b {\n            if (map_d3c1ad.length == 1 && map_d3c1ad.items[i] == char) {\n                bool_dff2b4 = true\n                index_8a1d21 = i\n                break\n            }\n        }\n        filter_6eaa45.result -> output_a5a4bb\n        if (bool_dff2b4) {\n            count_4a2d23.count -> if_8f3ff1.predicate\n            for_065883.reset -> continue_075eef\n            input_8d6f9b.length - 1 -> if_8f3ff1.index\n        } else {\n            continue_075eef -> filter_6eaa45.next\n        }\n    }\n\n    \n\n    instance(x: 0, y: 0) first_repeated_65c5a8 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -114, y: 15, name: \"input\") property(String) input_0a5f2e\n\n        out(x: 1108, y: 11, name: \"output\") property(Number) output_a7c9d4\n        out(x: 1216, y: 36, name: \"char\") property(Char) char_ac1b15\n\n        instance(x: 10, y: -34) map_2f6a8e root.Std_k98ojb.Iteration.Map {}\n        input_0a5f2e -> map_2f6a8e.items\n        func() {\n            in(x: -112, y: -36, name: \"char\") property(Char) char_97ab11\n\n            out(x: 1047, y: 17, name: \"\") property(Number) _index_4d1b3c\n\n            instance(x: 9, y: 20) contains_32af0e root.Std_k98ojb.List.Contains {}\n            char_97ab11 -> contains_32af0e.item\n            map_2f6a8e.output_list -> contains_32af0e.list\n            1 -> contains_32af0e.index\n        } -> map_2f6a8e.handler\n        map_2f6a8e.output_list -> output_a7c9d4\n    }\n\n    \n\n    instance(x: -95, y: 83) first_repeated_e3bba5 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -219, y: 2, name: \"input\") property(String) input_3f1e13\n\n        out(x: 1015, y: 17, name: \"repeat\") property(Number) repeat_b6c1d4\n\n        instance(x: 0, y: 0, name: \"set\") Std_k98ojb.Std.Set {}\n        instance(x: -15, y: 32, name: \"list\") list_60f8a9 root.Std_k98ojb.List {}\n        instance(x: 112, y: 40) map_54e5d2 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: 55) has_4c7d3a root.Std_k98ojb.Logic.Has {}\n        instance(x: -34, y: 24) if_0f7f5 root.Std_k98ojb.Std.If {}\n        instance(x: -6, y: 28) firstitem_a8a9ab root.Std_k98ojb.List.FirstItem {}\n\n        list_60f8a9 -> map_54e5d2.items\n        input_3f1e13 -> map_54e5d2.input\n        map_54e5d2.output_list -> set\n        set.contains -> has_4c7d3a\n        repeat_b6c1d4 -> firstitem_a8a9ab.item\n        if_0f7f5.value -> input_3f1e13\n        list_60f8a9 -> input_3f1e13\n    }\n\n    \n\n    instance(x: -16, y: 69) first_repeated_db4c6b root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -235, y: 3, name: \"input\") property(String) input_4e83f0\n\n        out(x: 1038, y: 67, name: \"continue\") trigger() continue_15dd2c\n        out(x: 1089, y: 191, name: \"output\") property(Number) output_f7d64b\n\n        instance(x: -112, y: 71, name: \"counters\") list_c8df21 root.Std_k98ojb.List {}\n        instance(x: 251, y: 179, name: \"string_indexer\") string_indexer_5a9c0f root.Std_k98ojb.Iteration.Map {}\n        instance(x: -10, y: 216, name: \"repeat_check\") repeat_check_8e3d6f root.Std_k98ojb.Logic.Equal {}\n        instance(x: -113, y: 224) if_85bb34 root.Std_k98ojb.Std.If {}\n        instance(x: 261, y: 232) set_c4c7c1 root.Std_k98ojb.List.Set {}\n        input_4e83f0 -> string_indexer_5a9c0f.items\n        repeat_check.result -> if_85bb34.predicate\n        string_indexer_5a9c0f.output_list -> count_cdbd23\n        set_c4c7c1.continue -> continue_15dd2c\n        input_4e83f0 -> repeat_check.left\n        for_8cb3f6.index -> set_c4c7c1.new_value\n    }\n\n    \n\n    instance(x: -110, y: 268) first_repeated_b3a5d6 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -241, y: 27, name: \"string\") property(String) str_5d0dc6\n\n        out(x: 1078, y: -13, name: \"continue\") trigger() continue_1ebc9b\n        out(x: 1043, y: 220, name: \"output\") property(Number) output_f4a0f2\n\n        instance(x: 74, y: 19) map_c6d5e8 root.Std_k98ojb.Iteration.Map {}\n        str_5d0dc6 -> map_c6d5e8.items\n        func() {\n            in(x: -191, y: 36, name: \"char\") property(String) char_b9f4a7\n\n            out(x: 1051, y: 22, name: \"\") property(Number) _count_2b34de\n\n            instance(x: 93, y: 17) count_8dfc42 root.Std_k98ojb.Std.Count {}\n            char_b9f4a7 -> count_8dfc42.input\n            1 -> count_8dfc42.reset\n            count_8dfc42.result -> _count_2b34de\n        } -> map_c6d5e8.handler\n        map_c6d5e8.output_list -> for_06fcd root.Std_k98ojb.List.For {}\n        str_5d0dc6 -> for_06fcd.items\n        char_b9f4a7 -> for_06fcd.item\n        _count_2b34de.value -> output_f4a0f2\n        count_8dfc42.count -> for_06fcd.index\n        1 -> count_8dfc42.new_value\n        for_06fcd.done -> continue_1ebc9b\n        map_c6d5e8.handler() {\n            in(x: -202, y: 27, name: \"value\") property(String) value_e0a3d7\n\n            out(x: 1134, y: -11, name: \"\") property(Number) _count_f2c35f\n\n            instance(x: 98, y: 9) count_9b6e8 root.Std_k98ojb.Std.Count {}\n            value_e0a3d7 -> count_9b6e8.input\n            1 -> count_9b6e8.reset\n            count_9b6e8.result -> _count_f2c35f\n        } -> for_06fcd.handler\n        for_06fcd.onItem -> if_7d98bf root.Std_k98ojb.Std.If {}\n        output_f4a0f2.value -> if_7d98bf.predicate\n        str_5d0dc6 -> if_7d98bf.left\n        char_b9f4a7 -> if_7d98bf.right\n        for_06fcd.index -> count_8dfc42.count\n        1 -> count_8dfc42.new_value\n        if_7d98bf.else -> for_06fcd.next\n    }\n\n    \n\n    instance(x: -67, y: 526) first_repeated_f4de6b root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: 4, y: -22, name: \"string\") property(String) str_b1d2f9\n\n        out(x: 1113, y: -5, name: \"char\") property(String) char_6eac7c\n\n        instance(x: 101, y: 13) for_0b0a71 root.Std_k98ojb.Std.For {}\n        instance(x: 213, y: 38) set_9f1d4f root.Std_k98ojb.List.Set {}\n        instance(x: 292, y: -22) map_6c3ea5 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 442, y: 64) if_2a0b7e root.Std_k98ojb.Std.If {}\n        data_instance(x: 19, y: -29) data_d9d1f2  = str_b1d2f9\n        for_0b0a71.index -> set_9f1d4f.new_value\n        map_6c3ea5.items -> if_2a0b7e.predicate\n        set_9f1d4f.set -> if_2a0b7e.execute\n        data_d9d1f2 -> map_6c3ea5.handler\n        str_b1d2f9 -> for_0b0a71.items\n        char_6eac7c -> set_9f1d4f.item\n    }\n\n    \n\n    instance(x: 73, y: -42) first_repeated_f8ff38 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: 2, y: -34, name: \"input\") property(String) input_5d4a9b\n\n        out(x: 1007, y: -38, name: \"index\") property(Number) index_fed0f1\n        out(x: 1093, y: -28, name: \"char\") property(Character) char_e87c67\n\n        instance(x: 0, y: -17) map_34b2c9 root.Std_k98ojb.Iteration.Map {}\n        input_5d4a9b -> map_34b2c9.items\n        func() {\n            in(x: -26, y: -16, name: \"char\") property(Character) char_a3f45e\n\n            out(x: 1077, y: -27, name: \"\") property(Boolean) bool_66d6ec\n\n            instance(x: 0, y: -13) count_9b8a5c root.Std_k98ojb.List.Count {}\n            input_5d4a9b -> count_9b8a5c.items\n            char_a3f45e -> count_9b8a5c.value\n            count_9b8a5c.result -> bool_66d6ec\n        } -> map_34b2c9.handler\n        instance(x: 0, y: -7) if_1cf59 root.Std_k98ojb.Std.If {}\n        char_a3f45e -> if_1cf59.predicate\n        input_5d4a9b -> if_1cf59.left\n        map_34b2c9.output_list -> if_1cf59.right\n        if_1cf59.else -> count_9b8a5c.reset\n        char_a3f45e -> count_9b8a5c.value\n        0 -> count_9b8a5c.new_value\n        bool_66d6ec.result -> index_fed0f1\n        if_1cf59.then -> map_34b2c9.items\n    }\n\n    \n\n    instance(x: 105, y: -28) first_repeated_5f0e71 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: 0, y: -23, name: \"string\") property(String) str_5a4a83\n\n        out(x: 1006, y: -19, name: \"index\") property(Number) index_b2d21b\n\n        instance(x: -193, y: -24, name: \"map_0e3c9f\") map_0e3c9f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1107, y: -29, name: \"set_5ec2a1\") set_5ec2a1 = new Set\n        instance(x: 1208, y: -34, name: \"counter_9f0fb6\") counter_9f0fb1 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1330, y: 20, name: \"map_9e5a7d\") map_9e5a7d = new Map\n        str_5a4a83 -> map_0e3c9f.items\n        str_5a4a83 -> set_5ec2a1.items\n        map_0e3c9f.output_list -> counter_9f0fb1\n        counter_9f0fb1.output_list -> map_9e5a7d\n        0 -> map_0e3c9f.index\n        str_5a4a83 -> map_9e5a7d.keys\n        map_9e5a7d.values -> set_5ec2a1.values\n\n        if (str_5a4a83.length == 0) {\n            return -1;\n        }\n\n        for (var i = 0; i < str_5a4a83.length; i++) {\n            var char = str_5a4a83.charAt(i);\n            map_9e5a7d.get(char);\n            counter_9f0fb1.handler(new Number(i));\n            if (set_5ec2a1.contains(i)) {\n                return i;\n            }\n        }\n\n    }\n\n    \n\n    instance(x: 105, y: -14) first_repeated_e8c74e root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -231, y: 12, name: \"input\") property(String) input_8f0d6e\n\n        out(x: 1034, y: -35, name: \"output\") property(Number) output_a1c77b\n\n        instance(x: 123, y: 31) strings_contains_f7a9e3 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 246, y: 27) if_2f4b95 root.Std_k98ojb.Std.If {}\n        instance(x: -16, y: 56) characters_1dfc8c root.Std_k98ojb.Strings.Characters {}\n        strings_contains_f7a9e3.result -> if_2f4b95.predicate\n        input_8f0d6e -> if_2f4b95.input\n        characters_1dfc8c.list -> if_2f4b95.output_list\n        if_2f4b95.then -> output_a1c77b.execute\n    }\n\n    \n\n    instance(x: 98, y: -15) first_repeated_9d42e6 root.main.first_repeated {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -217, y: 4, name: \"list\") property(List) list_5f6a1d\n\n        out(x: 1203, y: -7, name: \"number\") property(Number) number_c9b0c2\n\n        instance(x: 88, y: 34) map_8e8c47 root.Std_k98ojb.Iteration.Map {}\n        list_5f6a1d -> map_8e8c47.items\n        func() {\n            in(x: -128, y: 43, name: \"current\") property(Number) current_33db9f\n\n            out(x: 245, y: 39, name: \"\") property(Number) _5dd6dc\n\n            instance(x: 85, y: 37) min_c3e343 root.Std_k98ojb.List.Min {}\n            current_33db9f -> min_c3e343.items\n            min_c3e343.min -> number_c9b0c2\n        } -> map_8e8c47.handler\n        instance(x: -20, y: 36) second_min_f1d17a root.Std_k98ojb.List.SecondMin {}\n        list_5f6a1d -> second_min_f1d17a.items\n        second_min_f1d17a.second -> number_c9b0c2\n    }\n\n    \n\n    instance(x: -63, y: 523) second_smallest_5fda4e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -247, y: 2, name: \"list\") property(List) list_9d1f0a\n\n        out(x: 1094, y: 3, name: \"number\") property(Number) number_b8e5b7\n        out(x: 1234, y: 23, name: \"continue\") trigger() continue_6c6ff2\n        out(x: 1119, y: -20, name: \"output\") property(Number) output_c93f1a\n\n        instance(x: 0, y: 0, name: \"first_smallest\") count = 0\n        instance(x: 134, y: 13, name: \"second_smallest\") count = 1\n        instance(x: -6, y: -24, name: \"third_smallest\") count = 2\n\n        instance(x: 108, y: 20) if_e8b7f4 root.Std_k98ojb.Std.If {}\n        list_9d1f0a -> if_e8b7f4.list\n        first_smallest.count -> if_e8b7f4.first_smallest\n        second_smallest.count -> second_smallest.second_smallest\n        third_smallest.count -> third_smallest.third_smallest\n        if_e8b7f4.execute -> continue_6c6ff2\n        1 -> if_e8b7f4.then\n        list_9d1f0a[if_e8b7f4.item] -> first_smallest.value\n        first_smallest.value -> count\n        if_e8b7f4.else -> continue_6c6ff2\n        0 -> second_smallest.value\n        list_9d1f0a[if_e8b7f4.item] -> third_smallest.value\n        third_smallest.value -> output_c93f1a\n        if_e8b7f4.then -> continue_6c6ff2\n    }\n\n    \n\n    instance(x: 234, y: -33) second_smallest_f5bc9e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -215, y: 54, name: \"list\") property(List) list_1d6a23\n\n        out(x: 1049, y: 2, name: \"output\") property(Number) output_ebf4e5\n\n        instance(x: 0, y: 0) count_57c3d8 root.Std_k98ojb.Std.Count {}\n        list_1d6a23 -> count_57c3d8.items\n        func() {\n            in(x: -102, y: 40, name: \"current\") property(Number) current_4f85db\n\n            out(x: 1047, y: 47, name: \"\") property(Number) _e0a2eb\n\n            instance(x: 96, y: 46) modulo_f8d56a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 314, y: 50) notequal_4c5f6a root.Std_k98ojb.Logic.NotEqual {}\n            current_4f85db -> notequal_4c5f6a.left\n            2 -> notequal_4c5f6a.right\n            modulo_f8d56a.result -> notequal_4c5f6a.left\n            list_1d6a23[0] -> modulo_f8d56a.value\n            list_1d6a23[1] -> notequal_4c5f6a.right\n            notequal_4c5f6a.result -> _e0a2eb\n        } -> count_57c3d8.handler\n        count_57c3d8.count -> second_smallest\n    }\n\n    \n\n    instance(x: -193, y: 64) second_smallest_85cd35 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -231, y: 45, name: \"list\") property(List) list_9f1d8e\n\n        out(x: 1465, y: -13, name: \"number\") property(Number) number_f6b0ec\n\n        instance(x: 0, y: 0) find_smallest_c71a95 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 1, y: 20) second_2bf53f root.Std_k98ojb.List.Second {}\n        instance(x: 4, y: -44) if_e8d6ca root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: -46) min_d6c7a3 root.Std_k98ojb.List.Min {}\n        list_9f1d8e -> find_smallest_c71a95.items\n        find_smallest_c71a95.item -> second_2bf53f.input\n        if_e8d6ca.then -> min_d6c7a3.execute\n        list_9f1d8e -> second_2bf53f.list\n        find_smallest_c71a95.continue -> min_d6c7a3.reset\n    }\n\n    \n\n    instance(x: 0, y: 0) find_smallest_c71a95_f23af5 root.main.find_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -248, y: 2, name: \"list\") property(List) list_5a4e30\n\n        out(x: 1319, y: -27, name: \"smallest_two\") property(Number) smallest_two_d3d0f8\n        out(x: 1357, y: -21, name: \"smallest\") property(Number) smallest_2c4dd6\n\n        instance(x: 24, y: -1, name: \"first_smallest\") filter_5e7b48 root.Std_k98ojb.Query.Filter {}\n        instance(x: 1013, y: 33, name: \"second_smallest\") filter_b8f2c4 root.Std_k98ojb.Query.Filter {}\n        instance(x: 1099, y: -24, name: \"sorter\") sort_6d1a0e root.Std_k98ojb.List.Sort {}\n        list_5a4e30 -> filter_5e7b48.list\n        list_5a4e30 -> filter_b8f2c4.list\n        instance(x: 107, y: -31) firstitem_2d6da root.Std_k98ojb.List.FirstItem {}\n        smallest_two_d3d0f8 -> firstitem_2d6da.item\n        list_5a4e30 -> filter_b8f2c4.items\n        filter_b8f2c4.result -> second_smallest\n    }\n\n    \n\n    instance(x: 90, y: -24) second_smallest_3a9b7d root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -245, y: 12, name: \"list\") property(List) list_3e5a8d\n\n        out(x: 1140, y: -6, name: \"output\") property(Number) output_f7f0c4\n        out(x: 1019, y: -19, name: \"continue\") trigger() continue_ebd9da\n        out(x: 1233, y: 76, name: \"min\") property(Number) min_2d5e38\n\n        instance(x: 91, y: -23, name: \"min_value\") property(Number) min_value_f1c8a6\n        list_3e5a8d -> min_value_f1c8a6.items\n        func() {\n            in(x: 29, y: 38, name: \"current\") property(Number) current_86f0b2\n\n            out(x: 1069, y: -12, name: \"\") property(Number) _7dd980\n\n            instance(x: 85, y: -19, name: \"greater\") root.Std_k98ojb.Math.Greater {}\n            current_86f0b2 -> greater.left\n            min_value_f1c8a6 -> greater.right\n            greater.result -> _7dd980\n        } -> min_value_f1c8a6.handler\n        instance(x: 105, y: -23, name: \"min_greater\") root.Std_k98ojb.Math.Greater {}\n        list_3e5a8d -> min_greater.items\n        func() {\n            in(x: 37, y: 13, name: \"current\") property(Number) current_e54f4c\n\n            out(x: 1039, y: -11, name: \"\") property(Number) _7dd980\n\n            instance(x: 77, y: -10, name: \"greater\") root.Std_k98ojb.Math.Greater {}\n            min_value_f1c8a6 -> greater.left\n            current_e54f4c -> greater.right\n            greater.result -> _7dd980\n        } -> min_greater.handler\n        min_greater.output_list -> output_f7f0c4\n    }\n\n    \n\n    instance(x: 84, y: -5) second_smallest_8d1a7b root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -194, y: 2, name: \"list\") property(List) list_8a77f6\n\n        out(x: 1095, y: -10, name: \"smallest\") property(Number) smallest_e7dfdb\n        out(x: 1143, y: -14, name: \"second_smallest\") property(Number) second_smallest_f9e5af\n\n        instance(x: 12, y: -11, name: \"min\") root.Std_k98ojb.List.Min {}\n        list_8a77f6 -> min.input\n        min.result -> smallest_e7dfdb\n        instance(x: 0, y: 2, name: \"second_min\") root.Std_k98ojb.List.Min {}\n        second_smallest_f9e5af -> second_min.item\n        list_8a77f6 -> second_min.items\n        second_min.result -> second_smallest_f9e5af\n    }\n\n    \n\n    instance(x: -69, y: 59) second_smallest_b1c2d7 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -215, y: -63, name: \"list\") property(List) list_2f0d6e\n\n        out(x: 1421, y: -34, name: \"second_min\") property(Number) second_min_7df93b\n\n        instance(x: 104, y: -123) sort_f2a9c3 root.Std_k98ojb.List.Sort {}\n        list_2f0d6e -> sort_f2a9c3.items\n        func() {\n            in(x: 103, y: -59, name: \"min\") property(Number) min_b4ae5d\n\n            out(x: 1241, y: -13, name: \"continue\") trigger() continue_0b6fcd\n            out(x: 1298, y: 15, name: \"output\") property(Number) output_c3c55e\n\n            instance(x: 86, y: -39) if_e2a9d5 root.Std_k98ojb.Std.If {}\n            list_2f0d6e -> if_e2a9d5.items\n            min_b4ae5d -> sort_f2a9c3.min\n            sort_f2a9c3.result -> if_e2a9d5.predicate\n            1 -> if_e2a9d5.value\n            list_2f0d6e[sort_f2a9c3.index] -> if_e2a9d5.right\n            min_b4ae5d -> output_c3c55e\n        } -> sort_f2a9c3.handler\n        second_min_7df93b -> output_c3c55e\n    }\n\n    \n\n    instance(x: 89, y: -118) second_smallest_0f7bb6 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -288, y: 10, name: \"list\") property(List) list_6d8f43\n\n        out(x: 1283, y: -15, name: \"output\") property(Number) output_c1e0a9\n\n        instance(x: -299, y: 7, name: \"first_smallest\") Std.IfExpression {}\n        instance(x: 1075, y: -24, name: \"second_smallest\") Std.IfExpression {}\n        list_6d8f43 -> first_smallest.input\n        list_6d8f43 -> second_smallest.input\n\n        instance(x: 95, y: -20) if_expression_7c0b9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b ? a : b\"\n        }\n        instance(x: -275, y: -104) if_expression_a8f2d root.Std_k98ojb.Std.IfExpression {\n            expression: \"(if_expression_7c0b9.a == first_smallest.then) ? first_smallest.else : second_smallest\"\n        }\n        list_6d8f43 -> if_expression_7c0b9.input\n        list_6d8f43 -> if_expression_a8f2d.input\n\n        instance(x: -296, y: 15, name: \"first_smallest_output\") Std.IfExpression {}\n        first_smallest_output -> second_smallest.then\n        output_c1e0a9 -> first_smallest_output.else\n\n    }\n\n    \n\n    instance(x: -44, y: 528) second_smallest_6f4c7b root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -222, y: 29, name: \"list\") property(List) list_b4d0a5\n\n        out(x: 1093, y: -24, name: \"min1\") property(Number) min_9f6c7a\n        out(x: 1102, y: 27, name: \"min2\") property(Number) min_56e77b\n\n        instance(x: 0, y: 0) first_3d4e34 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 102, y: 23) second_1f6ca9 root.Std_k98ojb.List.SecondItem {}\n        function_0c3dd7 root.Std_k98ojb.Std.IfExpression {}\n        data_instance(x: -229, y: -15, name: \"data\") property(List) list_b4d0a5\n        instance(x: 87, y: 23) min_6e5a8f root.Std_k98ojb.List.Min {}\n        function_0c3dd7.input -> min_6e5a8f.items\n        data_list_b4d0a5 -> list_b4d0a5\n        first_3d4e34.item -> second_1f6ca9.item\n        list_b4d0a5 -> function_0c3dd7.input\n    }\n\n    \n\n    instance(x: 89, y: 55) second_smallest_51b2bb root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12395,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -222, y: 34, name: \"list1\") property(List) list_2f4e84\n        in(x: -233, y: -6, name: \"list2\") property(List) list_a7a9c3\n\n        out(x: 1038, y: -25, name: \"output\") property(Bool) output_5d0b8c\n\n        instance(x: 118, y: 69) filter_4e7f6a root.Std_k98ojb.Query.Filter {}\n        list_2f4e84 -> filter_4e7f6a.list\n        list_a7a9c3 -> filter_4e7f6a.where\n        func() {\n            in(x: -191, y: 36, name: \"item\") property(Number) item_c0d1e9\n\n            out(x: 1278, y: 26, name: \"\") property(Bool) output_b2b21f\n\n            instance(x: 104, y: 56) contains_23c5a7 root.Std_k98ojb.List.Contains {}\n            list_a7a9c3 -> contains_23c5a7.item\n            item_c0d1e9 -> contains_23c5a7.value\n            contains_23c5a7.is_contained -> output_b2b21f\n        } -> filter_4e7f6a.handler\n        list_a7a9c3 -> filter_4e7f6a.output_list\n        filter_4e7f6a.result -> output_b2b21f\n    }\n\n    \n\n    instance(x: -56, y: 567) has_common_element_d5bc8d root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common {\n        in(x: -219, y: 21, name: \"list1\") property(List) list_6e4d2b\n        in(x: -227, y: -3, name: \"list2\") property(List) list_9f7a71\n\n        out(x: 1080, y: -22, name: \"has_common\") property(Bool) has_e45c21\n\n        instance(x: 133, y: -103) intersection_4d5e66 root.Std_k98ojb.Sets.Intersection {}\n        list_6e4d2b -> intersection_4d5e66.left\n        list_9f7a71 -> intersection_4d5e66.right\n        has_common -> intersection_4d5e66.result\n    }\n\n    \n\n    instance(x: 97, y: -23) has_common_f33c8a root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -192, y: 25, name: \"list1\") property(List) list_15f2ad\n        in(x: 8, y: -33, name: \"list2\") property(List) list_a9c0d4\n\n        out(x: 1137, y: -23, name: \"output\") property(Bool) output_ea6c85\n\n        instance(x: 103, y: 20) filter_5bc3df root.Std_k98ojb.Query.Filter {}\n        list_15f2ad -> filter_5bc3df.items\n        instance(x: -47, y: 24) contains_0d8d84 root.Std_k98ojb.List.Contains {}\n        list_a9c0d4 -> contains_0d8d84.list\n        false -> contains_0d8d84.item\n        not_7f1a42 root.Std_k98ojb.Logic.Not {}\n        filter_5bc3df.result -> not_7f1a42.input\n        not_7f1a42.result -> output_ea6c85\n    }\n\n    \n\n    instance(x: 123, y: -4) has_common_element_d0e2d root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -243, y: 34, name: \"list1\") property(List) list_4f2b5d\n        in(x: -230, y: -46, name: \"list2\") property(List) list_d9c74a\n\n        out(x: 1153, y: -13, name: \"output\") property(Bool) output_66e6ea\n\n        instance(x: 106, y: 0) find_a7f2b root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -234, y: 15, name: \"elem1\") property(Number) elem1_58a5e3\n            in(x: -228, y: 20, name: \"elem2\") property(Number) elem2_1d63b6\n\n            out(x: 1184, y: -31, name: \"bool\") property(Bool) bool_aefc7d\n\n            instance(x: 103, y: 8) contains_e9f4eb root.Std_k98ojb.List.Contains {}\n            elem1_58a5e3 -> contains_e9f4eb.item\n            elem2_1d63b6 -> contains_e9f4eb.search\n            contains_e9f4eb.is_contained -> bool_aefc7d\n        } -> find_a7f2b.predicate\n        list_4f2b5d -> find_a7f2b.items\n        list_d9c74a -> find_a7f2b.items\n        find_a7f2b.item -> output_66e6ea\n    }\n\n    \n\n    instance(x: 92, y: 548) has_common_element_8df9e3 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -305, y: -20, name: \"list1\") property(List) list_0e0f4a\n        in(x: 100, y: -10, name: \"list2\") property(List) list_bf9c43\n\n        out(x: 194, y: -24, name: \"continue\") trigger() continue_3b6d5e\n        out(x: 1234, y: 12, name: \"output\") property(Bool) output_e3d2a7\n\n        instance(x: 0, y: 0) filter_9c8f48 root.Std_k98ojb.Query.Filter {}\n        list_0e0f4a -> filter_9c8f48.items\n        list_bf9c43 -> filter_9c8f48.list\n        func() {\n            in(x: -10, y: 35, name: \"elem\") property(Number) elem_5d2b6d\n\n            out(x: 103, y: -34, name: \"\") property(Bool) bool_d4ca3e\n\n            instance(x: 70, y: 47) inlist_e0f7a root.Std_k98ojb.List.InList {}\n            elem_5d2b6d -> inlist_e0f7a.element\n            list_0e0f4a -> inlist_e0f7a.list\n            list_bf9c43 -> inlist_e0f7a.list\n        } -> filter_9c8f48.handler\n        filter_9c8f48.output_list -> output_e3d2a7\n    }\n\n    \n\n    instance(x: 85, y: -21) has_common_element_4baf34 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -235, y: 19, name: \"list1\") property(List) list_94e3f5\n        in(x: -230, y: 30, name: \"list2\") property(List) list_b9d8c0\n\n        out(x: 1057, y: -18, name: \"output\") property(Bool) output_a1bde4\n\n        instance(x: 104, y: -16) filter_5f6e66 root.Std_k98ojb.Iteration.Filter {}\n        list_94e3f5 -> filter_5f6e66.items\n        list_b9d8c0 -> filter_5f6e66.where\n        func() {\n            in(x: 109, y: -19, name: \"elem\") property(Number) elem_c4a1be\n\n            out(x: 102, y: -22, name: \"\") property(Bool) bool_b9d3b0\n\n            instance(x: 77, y: -17) contains_2ea1f5 root.Std_k98ojb.List.Contains {}\n            elem_c4a1be -> contains_2ea1f5.item\n            list_94e3f5 -> contains_2ea1f5.list\n            bool_b9d3b0 -> contains_2ea1f5.is_contained\n        } -> filter_5f6e66.handler\n        output_a1bde4 -> bool_b9d3b0\n    }\n\n    \n\n    instance(x: 81, y: 62) has_common_element_e8c0b7 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -123, y: 23, name: \"list1\") property(List) list_0a8e5b\n        in(x: -130, y: 7, name: \"list2\") property(List) list_c35dc6\n\n        out(x: 194, y: -21, name: \"result\") property(Bool) result_4f9c62\n\n        instance(x: 0, y: 0) filter_b98e3a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 106, y: 74) contains_d8d3eb root.Std_k98ojb.List.Contains {}\n        instance(x: 245, y: -104) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -121, y: -24, name: \"elem\") property(Number) elem_5a8ed7\n\n            out(x: 191, y: -10, name: \")\") property(Boolean) bool_e0d4f1\n\n            instance(x: 95, y: -15) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 296, y: -87) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_7836b4.right\n            modulo_1088d5.result -> notequal_7836b4.left\n            elem_5a8ed7 -> modulo_1088d5.value\n            notequal_7836b4.result -> bool_e0d4f1\n        } -> filter_b98e3a.handler\n        list_c35dc6 -> filter_b98e3a.items\n        func() {\n            in(x: -129, y: 34, name: \"current\") property(Number) current_8bce23\n\n            out(x: 198, y: -28, name: \")\") property(Boolean) bool_2cf9d5\n\n            instance(x: 86, y: -43) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 297, y: -45) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_8bce23 -> modulo_ad7b2a.value\n            0 -> notequal_cb8a55.right\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.result -> bool_2cf9d5\n        } -> contains_d8d3eb.handler\n        list_c35dc6 -> contains_d8d3eb.items\n        true -> contains_d8d3eb.item\n        not_75283f.result -> result_4f9c62\n        contains_d8d3eb.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -52, y: 513) has_common_element_5e1b74 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -509, y: 2, name: \"list1\") property(List) list_0e3dfb\n        in(x: -516, y: 70, name: \"list2\") property(List) list_a4d6cf\n\n        out(x: 1015, y: -31, name: \"output\") property(Bool) output_e1c62f\n\n        instance(x: 105, y: -35) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_0e3dfb -> contains_32727d.list\n        list_a4d6cf -> contains_32727d.item\n        false -> contains_32727d.is_contained\n        contains_32727d.result -> output_e1c62f\n    }\n\n    \n\n    instance(x: 86, y: -64) has_common_element_f7a3ab root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -305, y: 4, name: \"list1\") property(List) list_3f9bbd\n        in(x: -313, y: 19, name: \"list2\") property(List) list_e8c7e0\n\n        out(x: 1015, y: 59, name: \"output\") property(Bool) output_b6b1ad\n\n        instance(x: 0, y: 0) contains_8f4aa3 root.Std_k98ojb.List.Contains {}\n        list_e8c7e0 -> contains_8f4aa3.items\n        func() {\n            in(x: -31, y: 32, name: \"element\") property(Number) element_2aef1d\n\n            out(x: 123, y: 47, name: \"\") property(Bool) bool_d0ebc5\n\n            instance(x: 11, y: 48) has_8cd4f3 root.Std_k98ojb.Logic.Has {}\n            element_2aef1d -> has_8cd4f3.element\n            list_e8c7e0 -> has_8cd4f3.list\n            has_8cd4f3.result -> bool_d0ebc5\n        } -> contains_8f4aa3.handler\n        list_3f9bbd -> contains_8f4aa3.list\n        contains_8f4aa3.is_contained -> bool_d0ebc5\n    }\n\n    \n\n    instance(x: -27, y: 64) has_common_f7b95e root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -253, y: 34, name: \"list1\") property(List) list_2a9e77\n        in(x: -245, y: 43, name: \"list2\") property(List) list_d4d7b8\n\n        out(x: 1143, y: 19, name: \"output\") property(Bool) output_f2d0c1\n\n        instance(x: 16, y: 22) intersection_5f6e48 root.Std_k98ojb.Sets.Intersection {}\n        list_2a9e77 -> intersection_5f6e48.left\n        list_d4d7b8 -> intersection_5f6e48.right\n        intersection_5f6e48.intersect -> output_f2d0c1\n    }\n\n    \n\n    instance(x: -55, y: 549) has_common_element_b3a9df root.main.has_common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given list contains consecutive numbers or not.\") contain_consecutive {\n        in(x: -305, y: 0, name: \"list\") property(List) list_8a5d84\n\n        out(x: 1111, y: 25, name: \"continue\") trigger() continue_07e7b9\n        out(x: 1234, y: 24, name: \"output\") property(Number) output_d2f0c6\n\n        instance(x: 101, y: -10, name: \"contains_consecutive\") filter_b3d5b4 root.Std_k98ojb.Iteration.Filter {}\n        list_8a5d84 -> contains_consecutive.items\n        func() {\n            in(x: -108, y: 38, name: \"i\") property(Number) i_2ddc7f\n\n            out(x: 1159, y: -27, name: \"\") property(Bool) bool_e89a6e\n\n            instance(x: 106, y: 39) equal_d85bf0 root.Std_k98ojb.Logic.Equal {}\n            instance(x: 113, y: 33) less_7d4f8c root.Std_k98ojb.Math.LessThanOrEqual {}\n            i_2ddc7f -> less_7d4f8c.left\n            list_8a5d84 -> less_7d4f8c.right\n            less_7d4f8c.result -> bool_e89a6e\n        } -> filter_b3d5b4.handler\n        contains_consecutive.output_list -> output_d2f0c6\n    }\n\n    \n\n    instance(x: -56, y: 521) contain_consecutive_9bdff1 root.main.contain_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -229, y: 31, name: \"list\") property(List) list_0f6a9b\n\n        out(x: 1093, y: -10, name: \"output\") property(Bool) output_b8d2c1\n\n        instance(x: -141, y: -104, name: \"contains_consecutive_numbers_6e5dd7\") filter_c91965 root.Std_k98ojb.Query.Filter {}\n        instance(x: 113, y: 55) for_065883 root.Std_k98ojb.Std.For {}\n        instance(x: 268, y: 64) less_than_f4bbd9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1038, y: -13, if_7c284f) root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 34) set_87aeb2 root.Std_k98ojb.List.Set {}\n        list_0f6a9b -> filter_c91965.items\n        for_065883.index -> less_than_f4bbd9.left\n        less_than_f4bbd9.right = [list_0f6a9b[for_065883.index + 1]]\n        if_7c284f.execute -> set_87aeb2.execute\n        list_0f6a9b -> set_87aeb2.list\n        for_065883.onItem -> less_than_f4bbd9.execute\n    }\n\n    \n\n    instance(x: -95, y: 531) is_consecutive_b9e7cd root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") contains_consecutive {\n        in(x: -201, y: 1, name: \"list\") property(List) list_bdf6d0\n        out(x: 1248, y: 23, name: \"output\") property(Bool) output_4f7a57\n\n        instance(x: 19, y: 16) filter_d5e3c9 root.Std_k98ojb.Iteration.Filter {}\n        list_bdf6d0 -> filter_d5e3c9.items\n        func() {\n            in(x: -234, y: -33, name: \"x\") property(Number) x_2a8ce4\n\n            out(x: 1021, y: -31, name: \"\") property(Number) _diff_e7fdd0\n\n            instance(x: 43, y: -38) sub_66d6e9 root.Std_k98ojb.Math.Sub {}\n            x_2a8ce4 -> sub_66d6e9.first\n            1 -> sub_66d6e9.second\n            sub_66d6e9.result -> _diff_e7fdd0\n        } -> filter_d5e3c9.handler\n        filter_d5e3c9.output_list -> output_4f7a57\n    }\n\n    \n\n    instance(x: 191, y: -43) contains_consecutive_bf45d8 root.main.contains_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") contains_consecutive {\n        in(x: -142, y: 21, name: \"list\") property(List) list_9d5d0e\n\n        out(x: 1173, y: 43, name: \"output\") property(Bool) output_34b7f1\n\n        instance(x: 23, y: -15, name: \"is_consecutive\") filter_e2c31c root.Std_k98ojb.Iteration.Filter {}\n        list_9d5d0e -> is_consecutive.items\n        func() {\n            in(x: -191, y: 24, name: \"i\") property(Number) i_f7c8f3\n\n            out(x: 1331, y: -41, name: \"\") property(Bool) bool_4a5cd9\n\n            instance(x: -31, y: -45, name: \"greater_than\") greaterthan_ae2ba root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: 155, y: -53) if_e42d0c root.Std_k98ojb.Std.If {}\n            greaterthan_ae2ba.result -> bool_4a5cd9\n            list_9d5d0e[i_f7c8f3] -> greaterthan_ae2ba.left\n            i_f7c8f3 + 1 -> greaterthan_ae2ba.right\n            if_e42d0c.then -> greater_than.execute\n        } -> is_consecutive.handler\n        list_9d5d0e -> is_consecutive.list\n    }\n\n    \n\n    instance(x: -95, y: 569) contains_consecutive_d6f7b1 root.main.contains_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -217, y: 59, name: \"list\") property(List) list_e8d1f6\n\n        out(x: 1174, y: -13, name: \"output\") property(Bool) output_0a2e98\n\n        instance(x: 96, y: 34) contains_a3b8c9 root.Std_k98ojb.List.Contains {}\n        list_e8d1f6 -> contains_a3b8c9.list\n        func() {\n            in(x: -104, y: 0, name: \"current\") property(Number) current_2a4e30\n\n            out(x: 137, y: -10, name: \"\") property(Number) _7dd980\n\n            instance(x: 99, y: -3) sub_8c869f root.Std_k98ojb.Math.Sub {}\n            instance(x: 313, y: 2) notequal_c4a9e1 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_c4a9e1.right\n            current_2a4e30 -> sub_8c869f.value\n            sub_8c869f.result -> _7dd980\n        } -> contains_a3b8c9.handler\n        list_e8d1f6 -> contains_a3b8c9.items\n        contains_a3b8c9.is_contained -> output_0a2e98\n    }\n\n    \n\n    instance(x: -86, y: 499) is_consecutive_acfe47 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") contain_consecutive {\n        in(x: -246, y: 0, name: \"list\") property(List) list_66e3d5\n\n        out(x: 1312, y: 22, name: \"output\") property(Bool) output_9fbd4b\n        instance(x: 104, y: -15, name: \"previous_number\") property(Number) previous_number_e71c6a\n        instance(x: 109, y: -5, name: \"next_number\") property(Number) next_number_2e7d41\n\n        instance(x: 123, y: -23) for_0b1f8d root.Std_k98ojb.Std.For {}\n        instance(x: 140, y: 59) if_e3f5bc root.Std_k98ojb.Std.If {}\n        instance(x: 153, y: 13) next_4a2c35 root.Std_k98ojb.Math.Next {}\n        list_66e3d5 -> for_0b1f8d.items\n        previous_number_e71c6a -> for_0b1f8d.index\n        next_number_2e7d41 -> for_0b1f8d.next\n        for_0b1f8d.done -> output_9fbd4b\n        -1 -> next_4a2c35.value\n        1 -> next_4a2c35.value\n        next_number_2e7d41 -> next_4a2c35.next\n        previous_number_e71c6a -> next_4a2c35.previous\n        for_0b1f8d.index + 1 -> next_4a2c35.value\n        list_66e3d5[for_0b1f8d.index] -> next_4a2c35.next\n        if_e3f5bc.predicate -> output_9fbd4b\n        for_0b1f8d.onItem -> if_e3f5bc.execute\n    }\n\n    \n\n    instance(x: 140, y: -63) contain_consecutive_7e5eb3 root.main.contain_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -191, y: 38, name: \"list\") property(List) list_1d8a3e\n\n        out(x: 1429, y: 47, name: \"output\") property(Bool) output_a7bde0\n\n        instance(x: 95, y: -25, name: \"numbers\") filter_f6c758 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 234, y: 15) contains_9d5e1f root.Std_k98ojb.List.Contains {}\n        instance(x: 444, y: 47) diff_eb8a0f root.Std_k98ojb.Math.Diff {}\n        list_1d8a3e -> filter_f6c758.items\n        numbers -> contains_9d5e1f.list\n        diff_eb8a0f.value -> output_a7bde0\n    }\n\n    \n\n    instance(x: -142, y: 35) is_consecutive_a4bfdb root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -261, y: 2, name: \"list\") property(List) list_9d4f0e\n\n        out(x: 1037, y: -18, name: \"continue\") trigger() continue_05c3ce\n        out(x: 1021, y: 233, name: \"output\") property(Bool) output_a8bcb2\n\n        instance(x: 94, y: 20) for_0d5f6a root.Std_k98ojb.Std.For {}\n        instance(x: -29, y: -104) contains_d91f1e root.Std_k98ojb.List.Contains {}\n        instance(x: -44, y: -108) sub_3c9d2b root.Std_k98ojb.Math.Sub {}\n        list_9d4f0e -> for_0d5f6a.items\n        0 -> contains_d91f1e.item\n        for_0d5f6a.index -> sub_3c9d2b.first\n        -1 -> sub_3c9d2b.second\n        contains_d91f1e.result -> output_a8bcb2\n        sub_3c9d2b.result -> for_0d5f6a.item\n    }\n\n    \n\n    instance(x: 105, y: 219) is_consecutive_b7aeb0 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -209, y: 5, name: \"list\") property(List) list_0e95a4\n\n        out(x: 1073, y: -1, name: \"output\") property(Bool) output_8b9f7c\n\n        instance(x: 121, y: 76) count_6d0c9 root.Std_k98ojb.Std.Count {}\n        getter(x: 0, y: 59, name: \"getter_f4a1e2\") getter_f4a1e2 = length\n        instance(x: 142, y: -58) if_e0eb77 root.Std_k98ojb.Std.If {}\n        list_0e95a4 -> count_6d0c9.items\n        count_6d0c9.value -> getter_f4a1e2.value\n        -1 -> getter_f4a1e2.reset\n        if_e0eb77.execute -> getter_f4a1e2.continue\n        1 -> getter_f4a1e2.new_value\n        2 -> getter_f4a1e2.new_value\n        output_8b9f7c.result -> if_e0eb77.predicate\n        if_e0eb77.else -> count_6d0c9.reset\n    }\n\n    \n\n    instance(x: -58, y: 47) has_consecutive_numbers_4cf2db root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive {\n        in(x: -231, y: 25, name: \"list\") property(List) list_1d0e5b\n\n        out(x: 1214, y: -28, name: \"output\") property(Bool) output_a7c6f8\n\n        instance(x: 108, y: 30) has_consecutives_ba3f9f root.Std_k98ojb.List.HasConsecutive {}\n        list_1d0e5b -> has_consecutives_ba3f9f.list\n        func() {\n            in(x: -234, y: 15, name: \"i\") property(Number) i_7f6c2d\n\n            out(x: 1204, y: -28, name: \"\") property(Bool) bool_5e8b3c\n\n            instance(x: 0, y: 0) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            list_1d0e5b -> modulo_c76d2b.list\n            i_7f6c2d -> modulo_c76d2b.value\n            1 -> modulo_c76d2b.divisor\n            has_consecutives_ba3f9f.result -> bool_5e8b3c\n        } -> has_consecutives_ba3f9f.handler\n    }\n\n    \n\n    instance(x: -88, y: -33) has_consecutive_1d4a2a root.main.has_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: 3, y: -14, name: \"main_list\") property(List) main_list_4a5e6f\n        in(x: 4, y: -44, name: \"sublist\") property(List) sublist_d9c9d2\n\n        out(x: 1071, y: -29, name: \"continue\") trigger() continue_0ad3db\n        out(x: 964, y: 26, name: \"output\") property(Bool) output_4a6f5e\n\n        setter(x: 0, y: 0, name: \"setter_a1d8c9\") setter_a1d8c9 = index\n        instance(x: -42, y: 20) for_34cafe root.Std_k98ojb.Std.For {}\n        getter(x: 1085, y: 28, name: \"getter_b3a1bb\") getter_b3a1bb = index\n        setter_a1d8c9.continue -> for_34cafe.reset\n        main_list_4a5e6f -> for_34cafe.items\n        sublist_d9c9d2 -> for_34cafe.items\n        -1 -> setter_a1d8c9.new_value\n        for_34cafe.done -> continue_0ad3db\n        getter_b3a1bb.value -> output_4a6f5e\n    }\n\n    \n\n    instance(x: 22, y: 105) is_sublist_98d15b root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -222, y: 56, name: \"main_list\") property(List) main_list_0e2d8a\n        in(x: -229, y: -22, name: \"sublist\") property(List) sublist_6c59f9\n\n        out(x: 1183, y: 26, name: \"continue\") trigger() continue_d9d5ec\n        out(x: 1071, y: 109, name: \"output\") property(Bool) output_eb4aeb\n\n        instance(x: -104, y: 34) is_equal_3c8e3f root.Std_k98ojb.Logic.Equal {}\n        instance(x: -63, y: 70) if_7c284f root.Std_k98ojb.Std.If {}\n        instance(x: 1036, y: 0) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1429, y: -64) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1982, y: 44) filter_4d4556 root.Std_k98ojb.Query.Filter {}\n        instance(x: -8, y: -17) not_equal_75283f root.Std_k98ojb.Logic.NotEqual {}\n\n        main_list_0e2d8a -> is_equal_3c8e3f.left\n        sublist_6c59f9 -> is_equal_3c8e3f.right\n        sublist_6c59f9 -> contains_32727d.item\n        map_6030c9.items -> filter_4d4556.list\n        filter_4d4556.where -> not_equal_75283f.predicate\n        is_equal_3c8e3f.result -> if_7c284f.predicate\n        for_065883.index -> contains_32727d.value\n        if_7c284f.else -> continue_d9d5ec\n        contains_32727d.is_contained -> not_equal_75283f.input\n    }\n\n    \n\n    instance(x: 1126, y: -63) is_sublist_0b8b23 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -142, y: 4, name: \"main\") property(List) list_5eb56d\n        in(x: -147, y: -16, name: \"sublist\") property(List) sublist_6a1f3c\n\n        out(x: 1132, y: 11, name: \"continue\") trigger() continue_0e4bdf\n        out(x: 1011, y: 17, name: \"output\") property(Bool) output_d5af7d\n\n        instance(x: -23, y: 29) contains_f5a9f6 root.Std_k98ojb.List.Contains {}\n        sublist_6a1f3c -> contains_f5a9f6.item\n        list_5eb56d -> contains_f5a9f6.list\n        contains_f5a9f6.is_contained -> output_d5af7d\n    }\n\n    \n\n    instance(x: -18, y: 61) is_sublist_3c2b15 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -123, y: 23, name: \"main_list\") property(List) main_list_8f3d64\n        in(x: -112, y: 55, name: \"sublist_list\") property(List) sublist_list_d9c5b4\n\n        out(x: 1010, y: -18, name: \"output\") property(Bool) output_e6ec59\n\n        instance(x: 114, y: 47) is_sub_2d8a61 root.Std_k98ojb.List.IsSublist {}\n        main_list_8f3d64 -> is_sub_2d8a61.main\n        sublist_list_d9c5b4 -> is_sub_2d8a61.sublist\n        is_sub_2d8a61.result -> output_e6ec59\n    }\n\n    \n\n    instance(x: -19, y: 63) is_sublist_c7f0e3 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -102, y: 54, name: \"mainList\") property(List) mainList_1d0b21\n        in(x: -113, y: -25, name: \"sublist\") property(List) sublist_b2a6c9\n\n        out(x: 1373, y: -33, name: \"output\") property(Bool) output_e5e8f4\n\n        instance(x: 0, y: 0) filter_8f6d47 root.Std_k98ojb.Iteration.Filter {}\n        sublist_b2a6c9 -> filter_8f6d47.items\n        func() {\n            in(x: -102, y: 21, name: \"sublist\") property(List) subList_5bda45\n\n            out(x: 0, y: 0, name: \"\") property(Number) index_3c2a33\n\n            instance(x: 106, y: 47) contains_b1f4db root.Std_k98ojb.List.Contains {}\n            subList_5bda45 -> contains_b1f4db.item\n        } -> filter_8f6d47.handler\n        filter_8f6d47.output_list -> mainList_1d0b21\n    }\n\n    \n\n    instance(x: 91, y: -32) is_sublist_3cd7a5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -234, y: 3, name: \"main_list\") property(List) list_4f5d56\n        in(x: -253, y: -1, name: \"sublist\") property(List) sublist_c0a23b\n\n        out(x: 1132, y: 15, name: \"result\") property(Bool) result_8c7bf3\n\n        instance(x: 133, y: 20) for_6e9f44 root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: -16, name: \"getter_2dd4d1\") getter_2dd4d1 = i\n        setter(x: 95, y: -15, name: \"setter_8c8695\") setter_8c8695 = i\n        instance(x: 105, y: -33) equal_d3b9ed root.Std_k98ojb.Logic.Equal {}\n        instance(x: 204, y: -24) if_e1e4f6 root.Std_k98ojb.Std.If {}\n        setter_8c8695.continue -> for_6e9f44.reset\n        list_4f5d56 -> for_6e9f44.items\n        sublist_c0a23b -> for_6e9f44.items\n        getter_2dd4d1.value -> result_8c7bf3\n        equal_d3b9ed.result -> if_e1e4f6.predicate\n        for_6e9f44.item -> equal_d3b9ed.left\n        for_6e9f44.index -> equal_d3b9ed.right\n        for_6e9f44.onItem -> if_e1e4f6.execute\n    }\n\n    \n\n    instance(x: -16, y: 104) is_sublist_5a0d8c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -509, y: 31, name: \"main_list\") property(List) main_list_6d9f34\n        in(x: -503, y: 12, name: \"sublist\") property(List) sublist_d35af1\n\n        out(x: 1113, y: 33, name: \"continue\") trigger() continue_0c4b36\n        out(x: 1039, y: 217, name: \"output\") property(Number) output_aa6f28\n\n        instance(x: -338, y: 15) contains_d3a1e8 root.Std_k98ojb.List.Contains {}\n        sublist_d35af1 -> contains_d3a1e8.item\n        main_list_6d9f34 -> contains_d3a1e8.list\n        contains_d3a1e8.is_contained -> output_aa6f28\n    }\n\n    \n\n    instance(x: 104, y: 73) is_sublist_b4b7c5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -102, y: 2, name: \"main_list\") property(List) main_list_5d6d4a\n        in(x: -120, y: 34, name: \"sublist\") property(List) sublist_bca3f1\n\n        out(x: 1278, y: 29, name: \"output\") property(Bool) output_b2b95e\n\n        instance(x: 0, y: 0) for_05d7c9 root.Std_k98ojb.Std.For {}\n        instance(x: -47, y: -43, name: \"i\") property(Number) i_e97c8a\n        instance(x: -24, y: -38, name: \"j\") property(Number) j_d6f5d3\n\n        instance(x: 121, y: 21) equal_0b4e1 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 123, y: 19) if_7c284f root.Std_k98ojb.Std.If {}\n        instance(x: 120, y: -12) list_at_5c8f6d root.Std_k98ojb.List.GetAt {}\n        instance(x: 127, y: 24) count_1fb4d9 root.Std_k98ojb.Std.Count {}\n        instance(x: 128, y: 10) not_equal_2aebf4 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: -23, y: -38, name: \"continue\") trigger() continue_e65c45\n\n        for_05d7c9.index -> i_e97c8a\n        sublist_bca3f1 -> for_05d7c9.items\n        main_list_5d6d4a -> list_at_5c8f6d.value\n        count_1fb4d9.count -> not_equal_2aebf4.left\n        i_e97c8a -> not_equal_2aebf4.right\n        if_7c284f.execute -> continue_e65c45\n        list_at_5c8f6d.value -> equal_0b4e1.predicate\n        for_05d7c9.index -> count_1fb4d9.count\n        not_equal_2aebf4.result -> output_b2b95e\n        if_7c284f.then -> continue_e65c45\n        equal_0b4e1.result -> output_b2b95e\n        for_05d7c9.index -> i_e97c8a\n    }\n\n    \n\n    instance(x: 122, y: -44) is_sublist_5ce34f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: 3, y: -27, name: \"main_list\") property(List) main_list_62a2d8\n        in(x: 0, y: -23, name: \"sublist\") property(List) sublist_e1c5cd\n\n        out(x: 1064, y: -22, name: \"output\") property(Bool) output_3f9e98\n\n        instance(x: 11, y: 56) for_04d66b root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 35, name: \"getter_1a8c2e\") getter_1a8c2e = index\n        setter(x: -43, y: -24, name: \"setter_7dab94\") setter_7dab94 = index\n        instance(x: 114, y: -14) contains_3f5b36 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 59) is_equal_2c34e1 root.Std_k98ojb.Logic.Equal {}\n        setter_7dab94.continue -> for_04d66b.reset\n        main_list_62a2d8 -> for_04d66b.items\n        sublist_e1c5cd -> contains_3f5b36.list\n        for_04d66b.item -> is_equal_2c34e1.left\n        getter_1a8c2e.value -> is_equal_2c34e1.right\n        if_7c284f.execute -> contains_3f5b36.predicate\n        is_equal_2c34e1.result -> for_04d66b.predicate\n        contains_3f5b36.is_contained -> output_3f9e98\n    }\n\n    \n\n    instance(x: 0, y: -44) is_sublist_a6a8cf root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -102, y: 24, name: \"main_list\") property(List) list_1a0f6e\n        in(x: -105, y: -26, name: \"sublist_list\") property(List) list_d4d7c2\n\n        out(x: 1345, y: 10, name: \"continue\") trigger() continue_f4b6ea\n        out(x: 1049, y: 210, name: \"output\") property(Bool) output_0c3f15\n\n        instance(x: -43, y: -26, name: \"indexer_1a7d8e\") indexer_1a7d8e = index\n        instance(x: 0, y: -24, name: \"length_checker_5bfefb\") length_checker_5bfefb = len\n        instance(x: 115, y: 16, name: \"sublist_iterator_6cfdb4\") sublist_iterator_6cfdb4 = iter\n        instance(x: 0, y: -10, name: \"is_equal_3f1a24\") is_equal_3f1a24 = equal\n        instance(x: 123, y: -29, name: \"if_7c2845\") if_7c2845 = if\n        instance(x: 234, y: -13, name: \"continue_2b0d6e\") continue_2b0d6e = continue\n        list_d4d7c2 -> sublist_iterator_6cfdb4.items\n        length_checker_5bfefb.length -> indexer_1a7d8e.new_value\n        if_7c2845.value -> is_equal_3f1a24.left\n        list_1a0f6e -> is_equal_3f1a24.right\n        sublist_iterator_6cfdb4.iterate -> is_equal_3f1a24.execute\n        length_checker_5bfefb.current_index -> indexer_1a7d8e.index\n        continue_2b0d6e.continue -> if_7c2845.reset\n        list_d4d7c2 -> sublist_iterator_6cfdb4.items\n        is_equal_3f1a24.result -> output_0c3f15\n    }\n\n    \n\n    instance(x: 110, y: -19) is_sublist_a8e42b root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: 3, y: -16, name: \"list\") property(List) list_4a9d65\n\n        out(x: 2, y: -44, name: \"missing\") property(Number) missing_f6e1c8\n\n        instance(x: 0, y: 0) find_missing_a3fbd root.Std_k98ojb.Iteration.Find {}\n        list_4a9d65 -> find_missing_a3fbd.items\n        func() {\n            in(x: -32, y: 21, name: \"num\") property(Number) num_f2c7f0\n\n            out(x: 2, y: 28, name: \"\") property(Bool) bool_5a4b38\n\n            instance(x: 1, y: 25) sub_e6d9e3 root.Std_k98ojb.Math.Sub {}\n            1 -> sub_e6d9e3.first\n            list_4a9d65[0] -> sub_e6d9e3.second\n            sub_e6d9e3.result -> num_f2c7f0\n        } -> find_missing_a3fbd.predicate\n        find_missing_a3fbd.item -> missing_f6e1c8\n    }\n\n    \n\n    instance(x: 17, y: -36) find_smallest_missing_5a4d44 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -201, y: 12, name: \"list\") property(List) list_0e2a9f\n\n        out(x: 1007, y: -10, name: \"missing_number\") property(Number) missing_number_a8c3aa\n\n        instance(x: 133, y: -120) count_a7b4e1 root.Std_k98ojb.Std.Count {}\n        instance(x: 253, y: 13) for_0f9a6d root.Std_k98ojb.Std.For {}\n        instance(x: 1033, y: -96) if_0c2be5 root.Std_k98ojb.Std.If {}\n        instance(x: 261, y: 11) subtract_f8e4ac root.Std_k98ojb.Math.Sub {}\n        list_0e2a9f -> for_0f9a6d.items\n        -1 -> count_a7b4e1.reset\n        count_a7b4e1.count -> missing_number_a8c3aa\n    }\n\n    \n\n    instance(x: 0, y: 0) find_smallest_missing_f4ef21 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -209, y: 3, name: \"list\") property(List) list_b7d4df\n        out(x: 142, y: -10, name: \"missing_number\") property(Number) missing_8a4f0c\n\n        instance(x: 34, y: -17, name: \"first_index\") filter_f3b46d root.Std_k98ojb.Query.Filter {}\n        first_index_2b6e63 -> list_b7d4df\n        func() {\n            in(x: -192, y: -5, name: \"current_index\") property(Number) current_index_a1f9c8\n            in(x: 0, y: 36, name: \"first_value\") property(Number) first_value_2aebd4\n\n            out(x: 135, y: -18, name: \"\") property(Bool) bool_8e3ea6\n\n            instance(x: 22, y: -11) greaterthan_1c31b0 root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: 108, y: -5) if_7c284f root.Std_k98ojb.Std.If {}\n            first_value_2aebd4 -> greaterthan_1c31b0.left\n            current_index_a1f9c8 + 1 -> greaterthan_1c31b0.right\n            greaterthan_1c31b0.result -> if_7c284f.predicate\n            list_b7d4df -> if_7c284f.items\n            bool_8e3ea6 -> if_7c284f.value\n        } -> filter_f3b46d.handler\n        list_b7d4df -> filter_f3b46d.output_list\n        filter_f3b46d.result -> first_index_2b6e63.list\n        first_value_2aebd4 + 1 -> missing_8a4f0c\n        if_7c284f.then -> continue_075eef\n        for_065883.index -> greaterthan_1c31b0.new_value\n    }\n\n    \n\n    instance(x: -59, y: 64) find_smallest_missing_9d5af2 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -194, y: 23, name: \"list\") property(List) list_4f2b1a\n\n        out(x: 1229, y: 12, name: \"output\") property(Number) output_98e6d5\n\n        instance(x: 0, y: 0, name: \"count\") property(Number) count_a88c8c\n        list_4f2b1a -> count_a88c8c.items\n        func() {\n            in(x: -103, y: 42, name: \"i\") property(Number) i_3dbd16\n\n            out(x: 1239, y: -38, name: \"\") property(Number) _findSmallestMissing\n            instance(x: 0, y: 55, name: \"temp\") property(Number) temp_e5b7f6\n\n            temp_e5b7f6 -> list_4f2b1a.list\n        } -> count_a88c8c.handler\n        count_a88c8c.value -> _findSmallestMissing\n    }\n\n    \n\n    instance(x: 191, y: 71) find_smallest_missing_5d7e3f root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -275, y: 47, name: \"list\") property(List) list_d1d0f6\n\n        out(x: 1333, y: -23, name: \"missing\") property(Number) smallest_9b3a7c\n\n        instance(x: -309, y: -193, name: \"find_missing\") find_missing_f8e5a2 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 1114, y: -197, name: \"check_number\") check_number_5f9d6c root.Std_k98ojb.List.Contains {}\n        instance(x: 261, y: -194) if_7c284f root.Std_k98ojb.Std.If {}\n        instance(x: 1021, y: -186) count_6a4bf0 root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) for_065883 root.Std_k98ojb.Std.For {}\n        instance(x: 1127, y: -189) minus_9c3c6f root.Std_k98ojb.Math.Minus {}\n        instance(x: 1271, y: -181) equal_bbae4a root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1030, y: -176) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        list_d1d0f6 -> find_missing.items\n        find_missing.predicate -> check_number\n        for_065883.items -> count_6a4bf0.list\n        check_number.item -> minus_9c3c6f.first\n        minus_9c3c6f.second -> minus_9c3c6f.second\n        if_e19a62.then -> find_missing.execute\n    }\n\n    \n\n    instance(x: 1225, y: -20) find_smallest_missing_a1e4b0 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -208, y: 13, name: \"list\") property(List) list_e6f5a4\n\n        out(x: 1558, y: -14, name: \"missing\") property(Number) missing_3c62b9\n\n        instance(x: 0, y: 0) count_1c7e48 root.Std_k98ojb.Std.Count {}\n        instance(x: 105, y: -22, name: \"set_4f6a2d\") set_4f6a2d = list_e6f5a4\n        instance(x: 219, y: -16) for_0c7a3e root.Std_k98ojb.Std.For {}\n        instance(x: 338, y: 72) if_1ab9ba root.Std_k98ojb.Std.If {}\n        instance(x: 442, y: 51) subtract_d2c8f4 root.Std_k98ojb.Math.Sub {}\n        instance(x: 592, y: -24) not_equal_e0d3da root.Std_k98ojb.Logic.NotEqual {}\n        data_instance(x: 124, y: 65) data_5a6e63 = [1, 2, 3, 4, 5]\n        instance(x: 305, y: -27) list_slice_7f9d36 root.Std_k98ojb.List.Slice {}\n        list_e6f5a4 -> for_0c7a3e.items\n        set_4f6a2d.list -> list_slice_7f9d36.slice\n        for_0c7a3e.index -> subtract_d2c8f4.first\n        1 -> subtract_d2c8f4.second\n        not_equal_e0d3da.result -> if_1ab9ba.predicate\n        for_0c7a3e.item -> if_1ab9ba.right\n        list_slice_7f9d36.list -> find_missing.output_list\n        missing_3c62b9 -> subtract_d2c8f4.result\n    }\n\n    \n\n    instance(x: 305, y: 91) find_missing_5a6e63 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -193, y: 12, name: \"list\") property(List) list_3f6a4e\n\n        out(x: 1191, y: 44, name: \"smallestMissing\") property(Number) smallest_missing_e59c34\n\n        instance(x: 0, y: 0) count_8bfb5 root.Std_k98ojb.Std.Count {}\n        instance(x: 137, y: -67, name: \"index\") property(Number) index_d1d6a2\n        instance(x: 253, y: -24, name: \"set\") property(List) set_4c9f1e\n\n        list_3f6a4e -> count_8bfb5.items\n        count_8bfb5.reset -> index.set\n        for loopcount in 0..(list_3f6a4e.Length - 1) {\n            instance(x: 0, y: 43, name: \"loop\") property(Number) loop_a9c7dd\n\n            out(x: 1112, y: 19, name: \"\") property(Number)\n\n            instance(x: 0, y: 0) modulo_1a6d8b root.Std_k98ojb.Math.Modulo {}\n            list_3f6a4e[loopcount] -> modulo_1a6d8b.value\n            index.new_value -> modulo_1a6d8b.divisor\n            if (modulo_1a6d8b.result == 0) then {\n                set.Add(index.new_value)\n            } endif\n        }\n    }\n\n    \n\n    instance(x: -193, y: 59) find_smallest_missing_d5d3f root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -208, y: 2, name: \"list\") property(List) list_9d4f0e\n        out(x: 1183, y: 32, name: \"missing_number\") property(Number) missing_number_a71c7b\n\n        instance(x: 11, y: 1) count_ea3af5 root.Std_k98ojb.Std.Count {}\n        instance(x: -41, y: 33) for_0d4e30 root.Std_k98ojb.Std.For {}\n        instance(x: 234, y: 12) equal_b8fbd9 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 114, y: 36) if_2aebf6 root.Std_k98ojb.Std.If {}\n        instance(x: -35, y: 26) find_4c5e41 root.Std_k98ojb.Iteration.Find {}\n        count_ea3af5.reset -> for_0d4e30.reset\n        list_9d4f0e -> for_0d4e30.items\n        if_2aebf6.execute -> find_4c5e41.predicate\n        -1 -> find_4c5e41.new_value\n        count_ea3af5.value -> equal_b8fbd9.left\n        list_9d4f0e[1] -> equal_b8fbd9.right\n        for_0d4e30.index -> find_4c5e41.new_value\n    }\n\n    \n\n    instance(x: 234, y: -18) find_smallest_missing_2a8de7 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -201, y: 11, name: \"list\") property(List) list_0f4bf2\n\n        out(x: 1035, y: -14, name: \"missing\") property(Number) missing_85c8e7\n\n        instance(x: 19, y: 13) for_1a3b9 root.Std_k98ojb.Std.For {}\n        list_0f4bf2 -> for_1a3b9.items\n        func() {\n            in(x: -121, y: 64, name: \"i\") property(Number) i_e6e3d7\n\n            out(x: 1358, y: 17, name: \"\") property(Number) result_aeb5df\n\n            instance(x: 22, y: 59) modulo_2aa83f root.Std_k98ojb.Math.Modulo {}\n            list_0f4bf2[i_e6e3d7] -> modulo_2aa83f.value\n            i_e6e3d7 -> modulo_2aa83f.divisor\n            if (modulo_2aa83f.result == 1) {\n                result_aeb5df = i_e6e3d7 + 1\n            } else {\n                result_aeb5df = list_0f4bf2[i_e6e3d7]\n            }\n        } -> for_1a3b9.handler\n        for_1a3b9.output_list -> missing\n    }\n\n    \n\n    instance(x: -24, y: 64) find_smallest_missing_d63c21 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -275, y: 1, name: \"list\") property(List) list_3a2e85\n\n        out(x: 1040, y: -23, name: \"missing_number\") property(Number) missing_number_a7c6d4\n\n        instance(x: 94, y: 26) for_08cf93 root.Std_k98ojb.Std.For {}\n        instance(x: 334, y: 59) count_2f9a43 root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 0) if_e4c7d1 root.Std_k98ojb.Std.If {}\n        instance(x: -31, y: 69) not_equal_6e5bf3 root.Std_k98ojb.Logic.NotEqual {}\n        list_3a2e85 -> for_08cf93.items\n        count_2f9a43.reset -> for_08cf93.reset\n        missing_number_a7c6d4 -> if_e4c7d1.then\n        0 -> not_equal_6e5bf3.left\n        list_3a2e85[0] -> not_equal_6e5bf3.right\n        for_08cf93.index -> count_2f9a43.count\n        for_08cf93.done -> if_e4c7d1.else\n    }\n\n    \n\n    instance(x: 95, y: -26) find_smallest_missing_8da65b root.main.find_smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -261, y: 3, name: \"input\") property(String) input_9b4d36\n\n        out(x: 1107, y: -1, name: \"output\") property(String) output_f6a2e8\n\n        instance(x: 101, y: 0) replace_c5f2c3 root.Std_k98ojb.Strings.Replace {}\n        input_9b4d36 -> replace_c5f2c3.input\n        \", \".tostring() -> replace_c5f2c3.search\n        \":\" -> replace_c5f2c3.replace\n        replace_c5f2c3.output -> output_f6a2e8\n    }\n\n    \n\n    instance(x: -53, y: 44) replace_with_colon_63b0ba root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -229, y: 3, name: \"input\") property(String) input_1e0a6d\n\n        out(x: 1075, y: 69, name: \"output\") property(String) output_b9c7b8\n        instance(x: 1088, y: 63) Strings_replace root.Std_k98ojb.Strings.Replace {}\n        input_1e0a6d -> Strings_replace.input\n        \",.\" -> Strings_replace.search\n        \":\" -> Strings_replace.replace\n        Strings_replace.output -> output_b9c7b8\n    }\n\n    \n\n    instance(x: -45, y: 73) replace_special_chars_c3f2df root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -204, y: 10, name: \"input\") property(String) input_f1d15a\n\n        out(x: 1427, y: -4, name: \"output\") property(String) output_6f2e23\n\n        instance(x: 0, y: 0) replace_a5b9c8 root.Std_k98ojb.Strings.Replace {}\n        input_f1d15a -> replace_a5b9c8.input\n        \",.\" -> replace_a5b9c8.search\n        \":\" -> replace_a5b9c8.replace\n\n        output_6f2e23 -> replace_a5b9c8.output\n    }\n\n    \n\n    instance(x: -197, y: 63) replace_special_chars_d4ad3d root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -234, y: 22, name: \"input\") property(String) input_5f7e23\n\n        out(x: 1451, y: -3, name: \"output\") property(String) output_a8fdd2\n\n        instance(x: 102, y: 45) replace_c6a5ab root.Std_k98ojb.Strings.Replace {}\n        input_5f7e23 -> replace_c6a5ab.input\n        \" ,.\" -> replace_c6a5ab.search\n        \":\" -> replace_c6a5ab.replace\n        replace_c6a5ab.output -> output_a8fdd2\n    }\n\n    \n\n    instance(x: -109, y: 69) replace_special_chars_3dfc94 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -209, y: -33, name: \"input\") property(String) input_4b9d28\n\n        out(x: 1101, y: -26, name: \"output\") property(String) output_b0e8c3\n\n        instance(x: 105, y: -43) replace_c6f4a5 root.Std_k98ojb.Strings.Replace {}\n        input_4b9d28 -> replace_c6f4a5.input\n        \",.\" -> replace_c6f4a5.search\n        \":\" -> replace_c6f4a5.replace\n        replace_c6f4a5.output -> output_b0e8c3\n    }\n\n    \n\n    instance(x: -198, y: 13) replace_special_chars_7bdf2d root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -245, y: 0, name: \"input\") property(String) input_85e3d6\n\n        out(x: 1192, y: -1, name: \"output\") property(String) output_5c8cd4\n\n        instance(x: -69, y: 28) replace_c67f9b root.Std_k98ojb.Strings.Replace {}\n        input_85e3d6 -> replace_c67f9b.input\n        \", \".replace() -> replace_c67f9b.search\n        \":\".replace() -> replace_c67f9b.replace\n        replace_c67f9b.output -> output_5c8cd4\n    }\n\n    \n\n    instance(x: 113, y: -36) replace_with_colon_d2e6d3 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -243, y: 4, name: \"input\") property(String) input_9d0f25\n\n        out(x: 1191, y: -55, name: \"output\") property(String) output_ea6b36\n        instance(x: 112, y: -28) replace_c8df7c root.Std_k98ojb.Strings.Replace {}\n        input_9d0f25 -> replace_c8df7c.input\n        \":\",\",\"-> replace_c8df7c.search\n        \":\"-> replace_c8df7c.replace\n        replace_c8df7c.output -> output_ea6b36\n    }\n\n    \n\n    instance(x: 85, y: -39) replace_special_chars_5e3f9d root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -251, y: 3, name: \"input\") property(String) input_5f8e0a\n\n        out(x: 340, y: 63, name: \"output\") property(String) output_f6c9b5\n\n        instance(x: 103, y: 61) replace_c4ea42 root.Std_k98ojb.Strings.Replace {}\n        input_5f8e0a -> replace_c4ea42.input\n        \",.\" -> replace_c4ea42.search\n        \":\" -> replace_c4ea42.replace\n        replace_c4ea42.output -> output_f6c9b5\n    }\n\n    \n\n    instance(x: 93, y: -13) replace_special_chars_7f2d21 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -204, y: 10, name: \"input\") property(String) input_3d9ec1\n\n        out(x: 1044, y: 21, name: \"output\") property(String) output_5f8d7c\n\n        instance(x: 0, y: 0) replace_f35e2b root.Std_k98ojb.Strings.Replace {}\n        input_3d9ec1 -> replace_f35e2b.input\n        ' ' -> replace_f35e2b.search\n        ':' -> replace_f35e2b.replace\n        replace_f35e2b.output -> output_5f8d7c\n    }\n\n    \n\n    instance(x: 0, y: -40) replace_chars_c1d9a6 root.main.replace_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -222, y: 18, name: \"input\") property(String) input_8f3b9d\n\n        out(x: 1417, y: 23, name: \"output\") property(String) output_e5e1eb\n\n        instance(x: 0, y: 0) replace_a4a6df root.Std_k98ojb.Strings.Replace {}\n        instance(x: 142, y: -14, name: \"target\") property(List) target_8d9c9f\n        instance(x: 123, y: 5) tolower_5e1c0b root.Std_k98ojb.Strings.ToLower {}\n        input_8f3b9d -> replace_a4a6df.input\n        target_8d9c9f -> replace_a4a6df.search\n        target_8d9c9f -> replace_a4a6df.replace\n        tolower_5e1c0b.result -> output_e5e1eb\n    }\n\n    \n\n    instance(x: 123, y: -27) replace_special_chars_c45ef2 root.main.replace_special_chars {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") same_chars {\n        in(x: -201, y: 3, name: \"string\") property(String) string_4a5d2f\n\n        out(x: 1028, y: -23, name: \"output\") property(Bool) output_ae9b25\n\n        instance(x: 0, y: 0) map_6c1ef3 root.Std_k98ojb.Iteration.Map {}\n        string_4a5d2f -> map_6c1ef3.items\n        func() {\n            in(x: -112, y: 12, name: \"char\") property(String) char_5f7e28\n\n            out(x: 439, y: -10, name: \"count\") property(Number) count_8a2b6c\n\n            instance(x: 97, y: 1) equal_e48d4a root.Std_k98ojb.Logic.Equal {}\n            char_5f7e28 -> equal_e48d4a.left\n            string_4a5d2f[0] -> equal_e48d4a.right\n            count_8a2b6c -> 1\n            equal_e48d4a.result -> count_8a2b6c\n        } -> map_6c1ef3.handler\n        if_7c284f.value -> output_ae9b25\n    }\n\n    \n\n    instance(x: -43, y: 530) same_chars_5dfdb5 root.main.same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -245, y: 5, name: \"input\") property(String) input_8f1a95\n\n        out(x: 1033, y: 23, name: \"output\") property(Bool) output_7e71d2\n\n        instance(x: 110, y: 47) is_same_c0b5c6 root.Std_k98ojb.Logic.Equal {}\n        input_8f1a95 -> is_same_c0b5c6.left\n        input_8f1a95 -> is_same_c0b5c6.right\n        instance(x: 208, y: -19) length_3e7d43 root.Std_k98ojb.List.Length {}\n        input_8f1a95 -> length_3e7d43.list\n        length_3e7d43.count -> is_same_c0b5c6.value\n        is_same_c0b5c6.result -> output_7e71d2\n    }\n\n    \n\n    instance(x: 0, y: -25) all_same_8a9f9a root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -227, y: 38, name: \"string\") property(String) string_ebb5a8\n\n        out(x: 1033, y: 19, name: \"output\") property(Bool) output_1e7c34\n\n        instance(x: 83, y: 28) map_2d4f0e root.Std_k98ojb.Iteration.Map {}\n        string_ebb5a8 -> map_2d4f0e.items\n        func() {\n            in(x: -103, y: 17, name: \"char\") property(String) char_db9c7e\n\n            out(x: 1013, y: 11, name: \"\") property(Bool) bool_d1b5a4\n\n            instance(x: 0, y: 10) equal_8d6f5a root.Std_k98ojb.Logic.Equal {}\n            char_db9c7e -> equal_8d6f5a.left\n            string_ebb5a8 -> equal_8d6f5a.right\n            equal_8d6f5a.result -> bool_d1b5a4\n        } -> map_2d4f0e.handler\n        map_2d4f0e.output_list -> output_1e7c34\n    }\n\n    \n\n    instance(x: 105, y: -12) all_same_a8ed41 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -222, y: 1, name: \"input\") property(String) input_a9e4aa\n\n        out(x: 0, y: -16, name: \"output\") property(Bool) output_74a6f8\n\n        instance(x: 102, y: 21) map_f2ad45 root.Std_k98ojb.Iteration.Map {}\n        list_71c9c7 -> map_f2ad45.items\n        func() {\n            in(x: -217, y: 29, name: \"char\") property(Char) char_1f6c48\n\n            out(x: 1094, y: -13, name: \"\") property(Number) _index_16d14a\n\n            instance(x: 106, y: -17) not_equal_9b1e3e root.Std_k98ojb.Logic.NotEqual {}\n            char_1f6c48 -> not_equal_9b1e3e.left\n            input_a9e4aa -> not_equal_9b1e3e.right\n            not_equal_9b1e3e.result -> _index_16d14a\n        } -> map_f2ad45.handler\n        map_f2ad45.output_list -> is_same.output\n    }\n\n    \n\n    instance(x: -95, y: 33) is_same_ed7f0c root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether all the characters are same or not.\") all_characters_same {\n        in(x: -101, y: 46, name: \"input\") property(String) input_4d1d21\n\n        out(x: 1035, y: -40, name: \"output\") property(Bool) output_e9b2e3\n\n        instance(x: -11, y: 36) for_0f6c7 root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 51) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 761, y: 25) if_e19a62 root.Std_k98ojb.Std.If {}\n        getter(x: -23, y: 58, name: \"getter_4d0f5c\") getter_4d0f5c = input_4d1d21\n        setter(x: 101, y: 29, name: \"setter_c7d2e3\") setter_c7d2e3 = index\n\n        for_0f6c7.index -> setter_c7d2e3.execute\n        getter_4d0f5c -> for_0f6c7.items\n        input_4d1d21 -> equal_aabb6e.left\n        equal_aabb6e.result -> if_e19a62.predicate\n        if_e19a62.else -> for_0f6c7.next\n        equal_aabb6e.then -> setter_c7d2e3.execute\n        setter_c7d2e3.continue -> output_e9b2e3\n    }\n\n    \n\n    instance(x: -73, y: 530) all_characters_same_d4a35a root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters in a given string are same or not.\") check_same {\n        in(x: 6, y: -21, name: \"input\") property(String) input_2a7d5b\n\n        out(x: 1234, y: 10, name: \"output\") property(Bool) output_a1c9e0\n\n        instance(x: 0, y: 0) same_a8f6f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1347, y: -33, name: \"transform to lower case\") transform_92d5c5 root.Std_k98ojb.Strings.ToLower {}\n        input_2a7d5b -> transform_92d5c5.input\n        same_a8f6f.result -> output_a1c9e0\n        transform_92d5c5.output -> same_a8f6f.left\n    }\n\n    \n\n    instance(x: 123, y: -16) check_same_e78a15 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") same_chars {\n        in(x: -103, y: 6, name: \"str\") property(String) str_3f0d37\n\n        out(x: 1292, y: 12, name: \"result\") property(Bool) result_d97ba9\n\n        instance(x: 101, y: 14) map_4b8c7a root.Std_k98ojb.Iteration.Map {}\n        str_3f0d37 -> map_4b8c7a.items\n        func() {\n            in(x: -92, y: 24, name: \"char\") property(String) char_2e9e6e\n\n            out(x: 1241, y: 17, name: \"\") property(Number) _count_5f3d4b\n\n            instance(x: 98, y: 23) count_a7c0da root.Std_k98ojb.Std.Count {}\n            char_2e9e6e -> count_a7c0da.item\n            char_2e9e6e -> count_a7c0da.index\n            count_a7c0da.result -> _count_5f3d4b\n        } -> map_4b8c7a.handler\n        map_4b8c7a.output_list -> result_d97ba9\n    }\n\n    \n\n    instance(x: 124, y: -25) same_chars_6e2fbd root.main.same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -246, y: 1, name: \"input\") property(String) input_9f85d3\n\n        out(x: 194, y: 34, name: \"output\") property(Bool) output_e55c4e\n\n        instance(x: 0, y: 0, name: \"isSame\") equal_f2a1b5 root.Std_k98ojb.Logic.Equal {}\n        input_9f85d3 -> isSame.left\n        input_9f85d3 -> isSame.right\n        isSame.result -> output_e55c4e\n    }\n\n    \n\n    instance(x: 193, y: 70) all_same_b0ddfc root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") same_chars {\n        in(x: -192, y: 11, name: \"string\") property(String) string_34f2d8\n\n        out(x: 1033, y: 21, name: \"output\") property(Bool) output_d1e0ca\n\n        instance(x: 14, y: 10) length_f7c4a6 root.Std_k98ojb.List.Length {}\n        string_34f2d8 -> length_f7c4a6.list\n        if_7c284f -> length_f7c4a6.count\n        list_d1e0ca -> same_chars_output\n        func() {\n            in(x: -233, y: 18, name: \"char\") property(String) char_e58b28\n\n            out(x: 1033, y: 21, name: \"\") property(Number) output_8a7f45\n\n            instance(x: 16, y: 20) islower_5db6e9 root.Std_k98ojb.Strings.IsLower {}\n            instance(x: -2, y: 34) if_e1c43d root.Std_k98ojb.Std.If {}\n            char_e58b28 -> islower_5db6e9.input\n            string_34f2d8 -> islower_5db6e9.output\n            islower_5db6e9.result -> output_8a7f45\n            if_e1c43d.execute -> same_chars_output.reset\n            char_e58b28 -> if_e1c43d.predicate\n            string_34f2d8 -> if_e1c43d.value\n        } -> same_chars_output.handler\n        same_chars_output.output_list -> list_d1e0ca.items\n    }\n\n    \n\n    instance(x: 113, y: 63) same_chars_b6bf6b root.main.same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether all the characters are same or not.\") is_all_same {\n        in(x: -253, y: 44, name: \"str\") property(String) str_0d6cd5\n\n        out(x: 1, y: 19, name: \"result\") property(Bool) result_a9f8db\n\n        instance(x: 91, y: 55) set_equal_5a4e2b root.Std_k98ojb.Logic.Equal {}\n        instance(x: 118, y: 40) if_e1d7ec root.Std_k98ojb.Std.If {}\n        instance(x: 199, y: -34) tolower_b3f6d9 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 304, y: 28) count_d2c5e8 root.Std_k98ojb.List.Count {}\n\n        str_0d6cd5 -> set_equal_5a4e2b.input\n        set_equal_5a4e2b.result -> result_a9f8db\n        tolower_b3f6d9.result -> if_e1d7ec.predicate\n        count_d2c5e8.reset -> if_e1d7ec.execute\n    }\n\n    \n\n    instance(x: 92, y: 46) is_all_same_6a4bdf root.main.is_all_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -229, y: 1, name: \"input\") property(String) input_9a5d64\n\n        out(x: 1068, y: -69, name: \"count\") property(Number) count_2e0b95\n\n        instance(x: 104, y: 27) map_3f6c38 root.Std_k98ojb.Iteration.Map {}\n        input_9a5d64 -> map_3f6c38.items\n        func() {\n            in(x: -233, y: -15, name: \"element\") property(String) element_0e8f47\n\n            out(x: 1284, y: 56, name: \"\") property(Number) _count_9a7b42\n\n            instance(x: 0, y: 16) is_numeric_c1d6c3 root.Std_k98ojb.Strings.IsNumeric {}\n            element_0e8f47 -> is_numeric_c1d6c3.input\n            is_numeric_c1d6c3.result -> _count_9a7b42\n        } -> map_3f6c38.handler\n        map_3f6c38.output_list -> count_digits.count\n    }\n\n    \n\n    instance(x: -46, y: 542) count_digits_b6e21a root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts the number of digits in a given string.\") count_digits {\n        in(x: -229, y: 31, name: \"input\") property(String) input_3e9a1d\n\n        out(x: 342, y: 56, name: \"count\") property(Number) count_6f7c2b\n\n        instance(x: 97, y: 40) function_0ce0ab root.Std_k98ojb.Function {}\n        input_3e9a1d -> function_0ce0ab.input\n        function_0ce0ab.result -> count_6f7c2b\n    }\n\n    \n\n    instance(x: -142, y: 78) function_0ce0ab_f5e8bb root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts the number of digits in a given string.\") count_digits {\n        in(x: -251, y: 1, name: \"input\") property(String) input_bdf6d2\n\n        out(x: 1209, y: 20, name: \"count\") property(Number) count_8f7e25\n\n        instance(x: 102, y: 5) length_f3c0a4 root.Std_k98ojb.List.Length {}\n        input_bdf6d2 -> length_f3c0a4.list\n        len -> length_f3c0a4.count\n        count_8f7e25 -> len\n\n        instance(x: -15, y: 24) isdigit_7a9ed1 root.Std_k98ojb.Strings.IsNumeric {}\n        input_bdf6d2 -> isdigit_7a9ed1.input\n        isdigit_7a9ed1.result -> count_8f7e25\n    }\n\n    \n\n    instance(x: -69, y: 52) count_digits_3ea5f4 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -102, y: 22, name: \"input\") property(String) input_4f2f0e\n\n        out(x: 305, y: 55, name: \"output\") property(Number) output_ebdf31\n\n        instance(x: 23, y: 43) list_5d1a29 root.Std_k98ojb.List.Slice {}\n        input_4f2f0e -> list_5d1a29.list\n        list_5d1a29.start -> 0\n        list_5d1a29.end -> -1\n\n        instance(x: 83, y: -23) characters_8bb1c3 root.Std_k98ojb.Strings.Characters {}\n        input_4f2f0e -> characters_8bb1c3.input\n        characters_8bb1c3.output -> list_5d1a29\n\n        instance(x: 142, y: -44) filter_a89ec9 root.Std_k98ojb.List.Filter {}\n        characters_8bb1c3 -> filter_a89ec9.items\n        function_0e2c43 -> filter_a89ec9.where\n        function_0e2c43.predicate -> \"isdigit\"\n        list_5d1a29 -> filter_a89ec9.output_list\n\n        instance(x: 203, y: -26) count_3fca19 root.Std_k98ojb.List.Count {}\n        filter_a89ec9.output_list -> count_3fca19.items\n        output_ebdf31 -> count_3fca19.count\n    }\n\n    \n\n    instance(x: 12, y: 76) count_digits_1e0d5a root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -247, y: 8, name: \"string\") property(String) input_4a2f33\n\n        out(x: 1151, y: -3, name: \"count\") property(Number) output_a0c2b5\n\n        instance(x: 10, y: 21) map_6e7d14 root.Std_k98ojb.Iteration.Map {}\n        input_4a2f33 -> map_6e7d14.items\n        func() {\n            in(x: -11, y: 56, name: \"char\") property(String) char_b8c8ec\n\n            out(x: 1, y: 49, name: \"\") property(Number) _count_9b5f4a\n\n            instance(x: 0, y: 22) isdigit_6d7e3f root.Std_k98ojb.Strings.IsNumeric {}\n            char_b8c8ec -> isdigit_6d7e3f.input\n            isdigit_6d7e3f.result -> _count_9b5f4a\n        } -> map_6e7d14.handler\n        map_6e7d14.output_list -> output_a0c2b5\n    }\n\n    \n\n    instance(x: 113, y: -29) count_digits_c8ce34 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts the number of digits in a given string.\") digit_count {\n        in(x: -231, y: 1, name: \"input\") property(String) input_19a8d6\n\n        out(x: 313, y: -17, name: \"count\") property(Number) count_4c7dfb\n\n        instance(x: -194, y: 28) map_f9f2e5 root.Std_k98ojb.Iteration.Map {}\n        input_19a8d6 -> map_f9f2e5.items\n        func() {\n            in(x: -221, y: -14, name: \"char\") property(String) char_a4c7ab\n\n            out(x: 143, y: 20, name: \"\") property(Number) _count_0a0163\n\n            instance(x: 208, y: -5) isdigit_6f2b9e root.Std_k98ojb.Strings.IsNumeric {}\n            char_a4c7ab -> isdigit_6f2b9e.input\n            isdigit_6f2b9e.result -> _count_0a0163\n        } -> map_f9f2e5.handler\n        map_f9f2e5.output_list -> count_4c7dfb\n    }\n\n    \n\n    instance(x: 193, y: -11) digit_count_d1ba67 root.main.digit_count {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts the number of digits in a given string.\") count_digits {\n        in(x: -231, y: 35, name: \"input\") property(String) input_6d8a3e\n\n        out(x: 1094, y: -41, name: \"output\") property(Number) output_eb7c32\n        instance(x: 13, y: 11) map_5f0ea1 root.Std_k98ojb.Iteration.Map {}\n        input_6d8a3e -> map_5f0ea1.items\n        func() {\n            in(x: -236, y: -44, name: \"char\") property(String) char_58c7b4\n\n            out(x: 14, y: 30, name: \"\") property(Number) _count_6d2a8e\n\n            instance(x: 21, y: 34) isnumeric_a1fbd9 root.Std_k98ojb.Strings.IsNumeric {}\n            char_58c7b4 -> isnumeric_a1fbd9.char\n            true -> isnumeric_a1fbd9.input\n            _count_6d2a8e.result -> isnumeric_a1fbd9.value\n        } -> map_5f0ea1.handler\n        map_5f0ea1.output_list -> output_eb7c32\n    }\n\n    \n\n    instance(x: 19, y: -23) count_digits_4cd6a8 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts the number of digits in a given string.\") count_digits {\n        in(x: -209, y: 2, name: \"input\") property(String) input_4f8d1a\n\n        out(x: 100, y: 47, name: \"output\") property(Number) output_d0b3e4\n\n        instance(x: 73, y: 50) map_11c5bc root.Std_k98ojb.Iteration.Map {}\n        input_4f8d1a -> map_11c5bc.items\n        func() {\n            in(x: -104, y: 19, name: \"char\") property(String) char_6e3c9b\n\n            out(x: 51, y: -17, name: \"\") property(Number) _digit_4d7cd8\n\n            instance(x: 90, y: 18) isnumeric_d1f5e0 root.Std_k98ojb.Strings.IsNumeric {}\n            char_6e3c9b -> isnumeric_d1f5e0.input\n            if(isnumeric_d1f5e0.is_contained) {\n                _digit_4d7cd8 = 1\n            } else {\n                _digit_4d7cd8 = 0\n            }\n        } -> map_11c5bc.handler\n        map_11c5bc.output_list -> output_d0b3e4\n    }\n\n    \n\n    instance(x: -62, y: 66) count_digits_f1f9eb root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -229, y: 25, name: \"input\") property(String) input_3f4bf0\n\n        out(x: 1045, y: -11, name: \"count\") property(Number) count_6b8c1a\n\n        instance(x: 18, y: 23) isdigit_f9e2b7 root.Std_k98ojb.Strings.IsNumeric {}\n        input_3f4bf0 -> isdigit_f9e2b7.input\n        count_6b8c1a -> isdigit_f9e2b7.count\n    }\n\n    \n\n    instance(x: 110, y: -19) count_digits_d25d57 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Counts the number of digits in a given string.\") count_digits {\n        in(x: -217, y: 21, name: \"input\") property(String) input_0e3a65\n\n        out(x: 1086, y: -25, name: \"count\") property(Number) count_7c2d5f\n\n        instance(x: 110, y: -29) for_02a4ea root.Std_k98ojb.Std.For {}\n        instance(x: 342, y: 26) length_0e33ec root.Std_k98ojb.List.Length {}\n        instance(x: 111, y: 28) if_1f5c6d root.Std_k98ojb.Std.If {}\n        instance(x: 345, y: -15) isnumeric_3a35e4 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 114, y: -31) Strings.Characters_4c8698 root.Std_k98ojb.Strings.Characters {}\n\n        list_d128d8 -> for_02a4ea.items\n        input_0e3a65 -> for_02a4ea.execute\n        0 -> for_02a4ea.new_value\n        length_0e33ec.result -> count_7c2d5f\n        for_02a4ea.done -> if_1f5c6d.next\n        isnumeric_3a35e4.input -> if_1f5c6d.predicate\n        input_0e3a65 -> for_02a4ea.item\n        Strings.Characters(input_0e3a65) -> if_1f5c6d.execute\n    }\n\n    \n\n    instance(x: 777, y: -19) count_digits_55ac8b root.main.count_digits {}\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_of_fourth_power {\n        in(x: -215, y: 22, name: \"n\") property(Number) n_8f0a9d\n\n        out(x: 1391, y: -24, name: \"sum\") property(Number) sum_f5e3d4\n\n        instance(x: 112, y: -11, name: \"i\") property(Number) i_7ebc66\n        data_instance(x: 312, y: 137) data_cde0dc  = 1\n        instance(x: 20, y: 141) sum_9d8f77 root.Std_k98ojb.Math.Sum {}\n        instance(x: -31, y: 138) add_e74c4a root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> add_e74c4a.first\n        i_7ebc66 -> add_e74c4a.second\n        n_8f0a9d -> sum_9d8f77.n\n        add_e74c4a.result -> sum_9d8f77.result\n        func() {\n            in(x: -106, y: 67, name: \"current\") property(Number) current_9b8e1f\n\n            out(x: 0, y: 55, name: \"\") property(Number) _4c5c3b\n\n            instance(x: 118, y: 51) power_1d4a6e root.Std_k98ojb.Math.Pow {}\n            current_9b8e1f -> power_1d4a6e.x\n            4 -> power_1d4a6e.y\n            power_1d4a6e.result -> _4c5c3b\n        } -> sum_9d8f77.handler\n        sum_9d8f77.output_list -> list_cde0dc.items\n    }\n\n    \n\n    instance(x: -19, y: 59) sum_of_fourth_power_2a71e1 root.main.sum_of_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -198, y: 2, name: \"n\") property(Number) n_1a6e9b\n\n        out(x: 1085, y: 7, name: \"sum\") property(Number) sum_8f0c95\n\n        instance(x: 114, y: -55, name: \"odd_list\") list_f4d1af root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 235, y: -63, name: \"fourth_power\") map_e6a5e3 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 311, y: 17) add_2f4ff9 root.Std_k98ojb.Math.Add {}\n        instance(x: 440, y: -55, name: \"sum_of_fourth_powers\") list_f4d1af.Root {}\n\n        odd_list.from -> n_1a6e9b\n        fourth_power.expression = \"(x ** 4)\"\n        map_e6a5e3.items -> sum_of_fourth_powers.list\n        add_first -> sum_of_fourth_powers.index\n        map_e6a5e3.handler(x) {\n            in(x: -193, y: -56, name: \"odd\") property(Number) odd_2d9c1f\n            odd_2d9c1f -> add_2f4ff9.first\n            0 -> add_2f4ff9.second\n            add_2f4ff9.result -> sum_of_fourth_powers.item\n        }\n    }\n\n    \n\n    instance(x: -45, y: 549) sum_fourth_power_8c7a1d root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -229, y: 17, name: \"n\") property(Number) n_3a5cd4\n\n        out(x: 1187, y: 24, name: \"sum\") property(Number) sum_9c1b2f\n\n        instance(x: 109, y: -12, name: \"i\") property(Number) i_8d4e84\n        data_instance(x: -227, y: -97, name: \"sum\") sum_3a5cd4 = 0\n        instance(x: 93, y: -101, name: \"expr\") expression_2c6b9f root.Std_k98ojb.Math.Expression {\n            expression: \"(i * i * i * i)\"\n        }\n        instance(x: 293, y: -100, name: \"add\") add_f2d1a4 root.Std_k98ojb.Math.Add {}\n        instance(x: -3, y: -103, name: \"mul\") mul_6e0f68 root.Std_k98ojb.Math.Mul {}\n        n_3a5cd4 -> i_8d4e84\n        sum_3a5cd4 -> add.first\n        i_8d4e84 -> expr.gen_1\n        1 -> add.second\n        expr.result -> mul.first\n        i_8d4e84 -> mul.second\n        mul.result -> add.first\n        i_8d4e84 -> add.second\n    }\n\n    \n\n    instance(x: -63, y: 49) sum_fourth_power_ba6f55 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_of_fourth_power {\n        in(x: -235, y: 43, name: \"n\") property(Number) n_4b8e5f\n\n        out(x: 1052, y: -18, name: \"sum\") property(Number) sum_d2d6a9\n\n        instance(x: 0, y: 0) for_c3c98c root.Std_k98ojb.Std.For {}\n        instance(x: 112, y: 38) expression_4ea5a1 root.Std_k98ojb.Math.Expression {\n            expression: \"x**4\"\n        }\n        instance(x: -59, y: 51) add_b2f77d root.Std_k98ojb.Math.Add {}\n        0 -> add_b2f77d.first\n        n_4b8e5f -> add_b2f77d.second\n        add_b2f77d.result -> sum_d2d6a9\n        instance(x: -59, y: 27) set_7aaac1 root.Std_k98ojb.Std.Set {}\n        for_c3c98c.index -> set_7aaac1.value\n        2 -> set_7aaac1.new_value\n        n_4b8e5f -> set_7aaac1.execute\n        set_7aaac1.continue -> for_c3c98c.reset\n        list_0 -> for_c3c98c.items\n        n_4b8e5f -> for_c3c98c.new_value\n    }\n\n    \n\n    instance(x: -35, y: 49) sum_of_fourth_power_b2df43 root.main.sum_of_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -101, y: 17, name: \"n\") property(Number) n_3b9d45\n\n        out(x: 2701, y: 19, name: \"sum\") property(Number) sum_f6c9a5\n\n        instance(x: 18, y: 13) generate_range_0f2e8 root.Std_k98ojb.List.GenerateRange {}\n        list_instance(x: -29, y: 31) list_2d3db4 = []\n        instance(x: 108, y: 27) map_6c7a59 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 243, y: 22) pow_5f8e1a root.Std_k98ojb.Math.Pow {}\n        instance(x: -16, y: 23) add_a2ed4d root.Std_k98ojb.Math.Add {}\n        instance(x: 29, y: -12) if_0c9ef3 root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -44, y: 10, name: \"i\") property(Number) i_f7e5f2\n\n            out(x: 1, y: 6, name: \"\") property(Number) _sum_9d8c38\n\n            instance(x: 22, y: 15) modulo_a24a26 root.Std_k98ojb.Math.Modulo {}\n            pow_5f8e1a.result -> add_a2ed4d.first\n            i_f7e5f2 -> modulo_a24a26.value\n            1 -> modulo_a24a26.divisor\n            _sum_9d8c38 -> add_a2ed4d.second\n        } -> map_6c7a59.handler\n        generate_range_0f2e8.from -> map_6c7a59.items\n        n_3b9d45 -> generate_range_0f2e8.to\n        pow_5f8e1a.gen_0 -> map_6c7a59.expression\n        i_f7e5f2 -> map_6c7a59.index\n        add_a2ed4d.result -> sum_f6c9a5\n        map_6c7a59.output_list -> list_2d3db4\n        pow_5f8e1a.gen_1 -> if_0c9ef3.predicate\n    }\n\n    \n\n    instance(x: -28, y: 24) sum_fourth_power_8d33ab root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -208, y: 55, name: \"n\") property(Number) n_b8d5e4\n\n        out(x: 1912, y: -27, name: \"sum\") property(Number) sum_3e7c39\n\n        instance(x: 101, y: -85, name: \"odd_numbers\") filter_d9a65b root.Std_k98ojb.Query.Filter {}\n        instance(x: 278, y: 70) firstitem_4db6f5 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 106, y: 56) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 193, y: -28) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"(x^4)\"\n        }\n        instance(x: 191, y: 25) div_64046c root.Std_k98ojb.Math.Div {}\n        instance(x: 302, y: 59) add_b4554f root.Std_k98ojb.Math.Add {}\n        list_0d40f1 -> for_8cb3f6.items\n        firstitem_4db6f5.item -> div_64046c.first\n        div_64046c.second -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> add_b4554f.first\n        n_b8d5e4 -> for_8cb3f6.index\n        add_b4554f.result -> sum_3e7c39\n    }\n\n    \n\n    instance(x: 97, y: -108) sum_fourth_power_95ec2a root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_of_fourth_power {\n        in(x: -201, y: 15, name: \"n\") property(Number) n_8e5b1a\n\n        out(x: 1020, y: -24, name: \"sum\") property(Number) sum_e74dc6\n\n        instance(x: 114, y: 18) for_06cbb9 root.Std_k98ojb.Std.For {}\n        instance(x: 342, y: -110, name: \"i\") property(Number) i_b4d1a5\n        instance(x: 213, y: -22, name: \"odd_num\") property(Number) odd_num_6e7f3c\n        instance(x: 1008, y: 25) pow_56b2ac root.Std_k98ojb.Math.Pow {}\n        instance(x: 104, y: -97, name: \"sum\") property(Number) sum_b9ec0d\n\n        list_instance(x: 0, y: 4, name: \"list\") = [1, 3, 5, ...]\n        i_b4d1a5 -> pow_56b2ac.y\n        odd_num_6e7f3c -> pow_56b2ac.x\n        list_instance.list -> for_06cbb9.items\n        n_8e5b1a -> for_06cbb9.n\n        i_b4d1a5 -> pow_56b2ac.gen_0\n        odd_num_6e7f3c -> pow_56b2ac.gen_1\n        sum_b9ec0d.result -> sum_e74dc6\n    }\n\n    \n\n    instance(x: 105, y: -27) sum_of_fourth_power_c54a95 root.main.sum_of_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -215, y: 2, name: \"n\") property(Number) n_3a3116\n\n        out(x: 1015, y: -10, name: \"sum\") property(Number) sum_c0c1f9\n        instance(x: 234, y: -113, name: \"i\") property(Number) i_ab4e44\n        data_instance(x: 330, y: 133) data_8d3a5b  = 2\n        instance(x: 12, y: 136) expression_e38f9c root.Std_k98ojb.Math.Expression {\n            expression: \"(i**4)\"\n        }\n        instance(x: 303, y: 2) add_5d0e1a root.Std_k98ojb.Math.Add {}\n        data_8d3a5b -> add_5d0e1a.first\n        i_ab4e44 -> add_5d0e1a.second\n        expression_e38f9c.result -> add_5d0e1a.third\n        n_3a3116 -> add_5d0e1a.n\n        2 -> add_5d0e1a.gen_0\n        i_ab4e44 -> add_5d0e1a.gen_1\n        sum_c0c1f9 -> add_5d0e1a.result\n    }\n\n    \n\n    instance(x: -67, y: 45) sum_fourth_power_b2ef25 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_of_fourth_powers {\n        in(x: -194, y: 28, name: \"n\") property(Number) n_9bb3d4\n\n        out(x: 1551, y: 15, name: \"sum\") property(Number) sum_98f5b0\n\n        instance(x: 92, y: 18) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 103, y: -11) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(i * i * i * i)\"\n        }\n        instance(x: 208, y: 19) add_3a5c43 root.Std_k98ojb.Math.Add {}\n        data_instance(x: 340, y: 44) data_ba7b9f  = 1\n        list_d128d8 -> generaterange_038fce.list\n        n_9bb3d4 -> generaterange_038fce.from\n        generaterange_038fce.to -> expression_b720d7.gen_0\n        generaterange_038fce.list -> add_3a5c43.items\n        data_ba7b9f -> add_3a5c43.first\n        n_9bb3d4 -> add_3a5c43.second\n        expression_b720d7.result -> sum_98f5b0\n    }\n\n    \n\n    instance(x: 95, y: -23) sum_of_fourth_powers_59ed62 root.main.sum_of_fourth_powers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_of_fourth_power {\n        in(x: -228, y: 33, name: \"n\") property(Number) n_3e0f2a\n\n        out(x: 1215, y: -11, name: \"sum\") property(Number) sum_f6c8d4\n\n        instance(x: 24, y: -31) generateRange_b7ca33 root.Std_k98ojb.List.GenerateRange {}\n        list_0eaa3a -> generateRange_b7ca33.items\n        func() {\n            in(x: -213, y: 20, name: \"i\") property(Number) i_d1f8d5\n\n            out(x: 1134, y: -23, name: \"\") property(Number) result_6c0b9d\n\n            instance(x: 0, y: 18) pow_e0e56a root.Std_k98ojb.Math.Pow {}\n            instance(x: 21, y: 25) mul_f2330b root.Std_k98ojb.Math.Mul {}\n            pow_e0e56a.result -> mul_f2330b.first\n            -1 -> mul_f2330b.second\n            i_d1f8d5 -> pow_e0e56a.x\n            4 -> pow_e0e56a.y\n            result_6c0b9d -> mul_f2330b.result\n        } -> generateRange_b7ca33.handler\n        sum_f6c8d4 -> result_6c0b9d\n    }\n\n    \n\n    instance(x: -19, y: 51) sum_of_fourth_power_e83f1a root.main.sum_of_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the surface area of a cube of a given size.\") find_surface_area {\n        in(x: 3, y: -15, name: \"side\") property(Number) side_0e8b2f\n\n        out(x: 594, y: 19, name: \"surface_area\") property(Number) surface_area_a6c5df\n\n        instance(x: 9, y: 7) for_0e3a11 root.Std_k98ojb.Std.For {}\n        instance(x: 20, y: -1, name: \"area\") property(Number) area_2ea1f3\n        instance(x: 12, y: 15) mul_9c22eb root.Std_k98ojb.Math.Mul {}\n        side_0e8b2f -> mul_9c22eb.first\n        6 -> mul_9c22eb.second\n        mul_9c22eb.result -> area_2ea1f3\n        function() {\n            in(x: -11, y: 4, name: \"i\") property(Number) i_f0e4ec\n\n            out(x: 0, y: 28, name: \"\") property(Number) output_9d34a7\n\n            instance(x: 5, y: 24) add_2b1f33 root.Std_k98ojb.Math.Add {}\n            area_2ea1f3 -> add_2b1f33.first\n            i_f0e4ec -> add_2b1f33.second\n            add_2b1f33.result -> output_9d34a7\n        } -> for_0e3a11.handler\n        for_0e3a11.items -> area_2ea1f3\n        function() {\n            in(x: 8, y: -4, name: \"output\") property(Number) output_f1c6df\n\n            instance(x: 12, y: 22) sum_c87d7b root.Std_k98ojb.Math.Sum {}\n            area_2ea1f3 -> sum_c87d7b.items\n            output_f1c6df -> sum_c87d7b.result\n        } -> for_0e3a11.handler\n        sum_c87d7b.output_list -> surface_area_a6c5df\n    }\n\n    \n\n    instance(x: 12, y: -31) find_surface_area_e4f8bb root.main.find_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -233, y: 3, name: \"side\") property(Number) side_4a6d2b\n\n        out(x: 576, y: 7, name: \"surfaceArea\") property(Number) surfacearea_8c45e0\n\n        instance(x: -12, y: -37, name: \"result\") assign_5f4dd1 root.Std_k98ojb.Math.Add {}\n        instance(x: 191, y: 22, name: \"temp\") assign_5f4dd1 = temp\n        instance(x: 1092, y: 3) multiply_0e6d8c root.Std_k98ojb.Math.Mul {}\n        side_4a6d2b -> multiply_0e6d8c.first\n        6 -> multiply_0e6d8c.second\n        result_5f4dd1.result -> surfacearea_8c45e0\n    }\n\n    \n\n    instance(x: -191, y: 71) surface_area_f0eb21 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -229, y: 14, name: \"size\") property(Number) size_4fbd36\n\n        out(x: 288, y: 28, name: \"surface_area\") property(Number) surface_area_3a1c0b\n\n        instance(x: 108, y: 18) pow_f6d38 root.Std_k98ojb.Math.Pow {}\n        size_4fbd36 -> pow_f6d38.x\n        2 -> pow_f6d38.y\n        pow_f6d38.result -> surface_area_3a1c0b\n        instance(x: -19, y: 25) mul_7d8e48 root.Std_k98ojb.Math.Mul {}\n        surface_area_3a1c0b -> mul_7d8e48.first\n        6 -> mul_7d8e48.second\n        mul_7d8e48.result -> surface_area_3a1c0b\n    }\n\n    \n\n    instance(x: -191, y: 58) surface_area_95f9f2 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -243, y: 34, name: \"side\") property(Number) side_5e9a3f\n\n        out(x: 2160, y: 64, name: \"surface\") property(Number) surface_a8c2d4\n        instance(x: 93, y: -76, name: \"cube\") calculate_surface_area root.Std_k98ojb.Math.SurfaceArea {}\n        side_5e9a3f -> cube.side\n        cube.surface_area -> surface_a8c2d4\n    }\n\n    \n\n    instance(x: -55, y: 519) surface_area_6cf77b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -222, y: -85, name: \"size\") property(Number) size_4e8f77\n\n        out(x: 1589, y: -73, name: \"surface_area\") property(Number) surface_area_6a0d2c\n        instance(x: 92, y: -103) math_pow_f1b3df root.Std_k98ojb.Math.Pow {}\n        size_4e8f77 -> math_pow_f1b3df.x\n        3 -> math_pow_f1b3df.y\n        math_pow_f1b3df.result -> surface_area_6a0d2c\n        instance(x: 199, y: -101) sub_5a7e24 root.Std_k98ojb.Math.Sub {}\n        size_4e8f77 -> sub_5a7e24.first\n        6 -> sub_5a7e24.second\n        sub_5a7e24.result -> surface_area_6a0d2c\n    }\n\n    \n\n    instance(x: -202, y: 23) surface_area_a6e3f1 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the surface area of a cube of a given size.\") find_surface_area {\n        in(x: -208, y: 1, name: \"side\") property(Number) side_d8d5e4\n\n        out(x: 1246, y: 21, name: \"surface_area\") property(Number) surface_area_3a51b2\n\n        instance(x: 109, y: 19) mul_c7c74f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -202, y: -23, name: \"data_d8d5e4\") data_d8d5e4 = side\n        instance(x: 92, y: 43) pow_9ff3cf root.Std_k98ojb.Math.Pow {}\n        data_d8d5e4 -> mul_c7c74f.first\n        2 -> pow_9ff3cf.y\n        mul_c7c74f.result -> pow_9ff3cf.first\n        pow_9ff3cf.result -> surface_area_3a51b2\n    }\n\n    \n\n    instance(x: -67, y: -13) find_surface_area_b5f8da root.main.find_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -245, y: 4, name: \"size\") property(Number) size_5d1f15\n\n        out(x: 1920, y: -31, name: \"area\") property(Number) area_ea0dce\n\n        instance(x: 91, y: -104) pow_f9b0c6 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 1052, y: 24) data_1f2e3a  = size\n        pow_f9b0c6.result -> area_ea0dce\n        pow_f9b0c6.x -> data_1f2e3a\n        3 -> pow_f9b0c6.y\n        6 -> pow_f9b0c6.y\n        size_5d1f15 -> pow_f9b0c6.first\n    }\n\n    \n\n    instance(x: -14, y: -22) surface_area_bdf23a root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -235, y: 0, name: \"side\") property(Number) side_5f6e85\n\n        out(x: 216, y: 69, name: \"area\") property(Number) area_e4a35c\n\n        instance(x: 105, y: 72) cube_root_f5bdf9 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: -239, y: -13, name: \"data_7a66f2\") data_7a66f2  = side\n        instance(x: 240, y: 73) mul_8e1d0c root.Std_k98ojb.Math.Mul {}\n        instance(x: 107, y: 80) add_b5c3da root.Std_k98ojb.Math.Add {}\n        data_instance(x: -238, y: 11, name: \"data_7a66f2\") data_7a66f2.a = side\n        mul_8e1d0c.first -> cube_root_f5bdf9.x\n        mul_8e1d0c.second -> cube_root_f5bdf9.y\n        3 -> cube_root_f5bdf9.y\n        add_b5c3da.result -> area_e4a35c\n    }\n\n    \n\n    instance(x: -94, y: 91) surface_area_d6fdd1 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the surface area of a cube of a given size.\") find_surface_area {\n        in(x: 3, y: -20, name: \"side\") property(Number) side_5a83e4\n\n        out(x: 216, y: -11, name: \"surface_area\") property(Number) surface_area_98d6b7\n\n        instance(x: 0, y: 0) pow_f8f5c9 root.Std_k98ojb.Math.Pow {}\n        list_instance(x: 1, y: 50) list_c3a7e2 = []\n        instance(x: -25, y: 41) mul_6cdaea root.Std_k98ojb.Math.Mul {}\n        list_instance(x: 0, y: 64) area_4b8f23 = []\n        instance(x: 1, y: 17) add_5d74ca root.Std_k98ojb.Math.Add {}\n        list_instance(x: -3, y: 55) sum_8a7e15 = []\n\n        pow_f8f5c9.x -> mul_6cdaea.first\n        side_5a83e4 -> mul_6cdaea.second\n        mul_6cdaea.result -> add_5d74ca.first\n        3 -> add_5d74ca.second\n        add_5d74ca.result -> sum_8a7e15\n        for_065883.index -> list_c3a7e2\n        list_c3a7e2 -> area_4b8f23\n        pow_f8f5c9.y -> surface_area_98d6b7\n        6 -> pow_f8f5c9.y\n        add_5d74ca.result -> surface_area_98d6b7\n        for_065883.index -> sum_8a7e15\n    }\n\n    \n\n    instance(x: -34, y: 53) find_surface_area_c1ba31 root.main.find_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -201, y: 26, name: \"side\") property(Number) side_4a0f6e\n\n        out(x: 1201, y: -18, name: \"surfaceArea\") property(Number) surfacearea_3d5d95\n\n        instance(x: 123, y: -58, name: \"sides\") count_8c74b9 root.Std_k98ojb.List.Count {}\n        instance(x: 194, y: -23, name: \"result\") sum_1e7f2a root.Std_k98ojb.Math.Sum {}\n        instance(x: 266, y: 13) mul_6d0c35 root.Std_k98ojb.Math.Mul {}\n        instance(x: 434, y: 18) div_64046c root.Std_k98ojb.Math.Div {}\n\n        sides.reset -> sum_1e7f2a.execute\n        side_4a0f6e -> count_8c74b9.input\n        mul_6d0c35.result -> div_64046c.first\n        6 -> div_64046c.second\n        div_64046c.result -> result_surfacearea_3d5d95\n        sum_1e7f2a.result -> surfacearea_3d5d95\n    }\n\n    \n\n    instance(x: -208, y: 65) surface_area_9d84b4 root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -235, y: 2, name: \"list\") property(List) list_0b5d25\n\n        out(x: 1071, y: 29, name: \"diff\") property(Number) diff_b7e6c9\n\n        instance(x: 105, y: -101, name: \"max\") filter_c91965 root.Std_k98ojb.List.Max {}\n        instance(x: 288, y: 74) min_8f3a5d root.Std_k98ojb.List.Min {}\n        list_0b5d25 -> max.items\n        list_0b5d25 -> min_items\n        max.result -> diff_b7e6c9\n        min_8f3a5d.result -> diff_b7e6c9\n    }\n\n    \n\n    instance(x: -91, y: 45) diff_largest_smallest_c7ea29 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -201, y: -76, name: \"list\") property(List) list_8e2a0f\n\n        out(x: 1097, y: -65, name: \"difference\") property(Number) difference_b4d9c5\n\n        instance(x: -315, y: 46, name: \"smallest\") filter_ea1b23 root.Std_k98ojb.Query.Filter {}\n        instance(x: 845, y: -68, name: \"largest\") filter_8e0f7f root.Std_k98ojb.Query.Filter {}\n        instance(x: 1152, y: 21) sub_5d25c9 root.Std_k98ojb.Math.Sub {}\n        func() {\n            in(x: -23, y: -19, name: \"current\") property(Number) current_3f7ef6\n\n            out(x: 1048, y: -27, name: \"\") property(Number) _result_a5a1e9\n\n            instance(x: 98, y: -21) modulo_2d4c40 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 296, y: -25) notequal_8cd3f6 root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_8cd3f6.right\n            modulo_2d4c40.result -> notequal_8cd3f6.left\n            current_3f7ef6 -> modulo_2d4c40.value\n            notequal_8cd3f6.result -> _result_a5a1e9\n            modulo_2d4c40.result -> _result_a5a1e9\n            current_3f7ef6 -> modulo_2d4c40.value\n            notequal_8cd3f6.right -> _result_a5a1e9\n        } -> filter_ea1b23.handler\n        list_8e2a0f -> filter_ea1b23.items\n        filter_ea1b23.result -> smallest.list\n        filter_8e0f7f.result -> largest.list\n        sub_5d25c9.first -> _result_a5a1e9\n        sub_5d25c9.second -> difference_b4d9c5\n    }\n\n    \n\n    instance(x: -202, y: 58) diff_max_min_6b2f55 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -261, y: 18, name: \"list\") property(List) list_e45f8e\n\n        out(x: 1457, y: 34, name: \"difference\") property(Number) difference_6d3a42\n\n        instance(x: 0, y: 0) min_f37c19 root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) max_b5fb23 root.Std_k98ojb.List.Max {}\n        instance(x: -47, y: 44) if_7c284f root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 45) sub_852f2e root.Std_k98ojb.Math.Sub {}\n\n        list_e45f8e -> min_f37c19.items\n        list_e45f8e -> max_b5fb23.items\n        if_7c284f.list -> diff_max_min.items\n        if_7c284f.value -> sub_852f2e.first\n        0 -> sub_852f2e.second\n        min_f37c19.min -> sub_852f2e.result\n        max_b5fb23.max -> difference_6d3a42\n    }\n\n    \n\n    instance(x: -35, y: 69) diff_max_min_9e1b21 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -245, y: 22, name: \"list\") property(List) list_9d5b2e\n\n        out(x: 1036, y: -209, name: \"difference\") property(Number) difference_e1bdf7\n\n        instance(x: 104, y: 27) max_3c35f4 root.Std_k98ojb.List.Max {}\n        list_9d5b2e -> max_3c35f4.items\n        function_instance(x: -69, y: 45) min_f2ba8a root.Std_k98ojb.List.Min {}\n        list_9d5b2e -> min_f2ba8a.items\n        instance(x: 186, y: 47) sub_a3b1f4 root.Std_k98ojb.Math.Sub {}\n        max_3c35f4.min -> sub_a3b1f4.first\n        min_f2ba8a.max -> sub_a3b1f4.second\n        sub_a3b1f4.result -> difference_e1bdf7\n    }\n\n    \n\n    instance(x: -46, y: 523) diff_max_min_9cdff5 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -233, y: -25, name: \"list\") property(List) list_d1d0f6\n\n        out(x: 1318, y: -24, name: \"difference\") property(Number) difference_2a9e66\n\n        instance(x: 23, y: -30) max_3b7b4c root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: -19) min_c6f1af root.Std_k98ojb.List.Min {}\n        instance(x: 1089, y: -11) sub_8a2d4e root.Std_k98ojb.Math.Sub {}\n        list_d1d0f6 -> max_3b7b4c.items\n        list_d1d0f6 -> min_c6f1af.items\n        max_3b7b4c.result -> min_c6f1af.result\n        sub_8a2d4e.first -> difference_2a9e66\n        sub_8a2d4e.second -> min_c6f1af.result\n        min_c6f1af.result -> difference_2a9e66\n    }\n\n    \n\n    instance(x: 103, y: -45) diff_max_min_6b7cd3 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -201, y: 43, name: \"list\") property(List) list_94e3f4\n\n        out(x: 1236, y: 55, name: \"difference\") property(Number) difference_7d95c5\n    }\n\n    \n\n    instance(x: 0, y: 0) max_9e8b57 root.Std_k98ojb.List.Max {}\n    list_94e3f4 -> max_9e8b57.items\n    max_9e8b57.result -> difference_7d95c5\n    instance(x: -204, y: 67, name: \"min\") min_2a1e31 root.Std_k98ojb.List.Min {}\n    list_94e3f4 -> min_2a1e31.items\n    min_2a1e31.result -> difference_7d95c5\n\n    \n\n    instance(x: 101, y: 69) diff_max_min_8d0c32 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -234, y: -14, name: \"list\") property(List) list_1d8a3e\n\n        out(x: 1042, y: -33, name: \"diff\") property(Number) diff_f4bfb7\n\n        instance(x: 0, y: 0) min_c5f9eb root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) max_6a45e1 root.Std_k98ojb.List.Max {}\n        instance(x: -15, y: 16) sub_f1c3d7 root.Std_k98ojb.Math.Sub {}\n        list_1d8a3e -> min_c5f9eb.items\n        list_1d8a3e -> max_6a45e1.items\n        min_c5f9eb.min -> diff_f4bfb7\n        sub_f1c3d7.result -> diff_f4bfb7\n    }\n\n    \n\n    instance(x: -16, y: 54) diff_largest_smallest_e5a2df root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -223, y: 3, name: \"list\") property(List) list_4d5f0b\n\n        out(x: 1379, y: -12, name: \"diff\") property(Number) difference_b6c1dc\n\n        instance(x: 91, y: 57) max_7e30eb root.Std_k98ojb.List.Max {}\n        instance(x: 273, y: -108) min_2f9d09 root.Std_k98ojb.List.Min {}\n        instance(x: 1058, y: 15) sub_a4a1ed root.Std_k98ojb.Math.Sub {}\n        list_4d5f0b -> max_7e30eb.items\n        list_4d5f0b -> min_2f9d09.items\n        max_7e30eb.result -> sub_a4a1ed.first\n        min_2f9d09.result -> sub_a4a1ed.second\n        sub_a4a1ed.result -> difference_b6c1dc\n    }\n\n    \n\n    instance(x: 105, y: -18) diff_max_min_5e0bb1 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -229, y: 23, name: \"list\") property(List) list_8f3da9\n\n        out(x: 1024, y: -19, name: \"difference\") property(Number) difference_6d7f2c\n\n        instance(x: 0, y: 0) min_c8e5b1 root.Std_k98ojb.List.Min {}\n        instance(x: 305, y: 56) max_c5a3ce root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 79) sub_2c9d41 root.Std_k98ojb.Math.Sub {}\n        list_8f3da9 -> min_c8e5b1.items\n        list_8f3da9 -> max_c5a3ce.items\n        max_c5a3ce.result -> sub_2c9d41.first\n        min_c8e5b1.result -> sub_2c9d41.second\n        sub_2c9d41.result -> difference_6d7f2c\n    }\n\n    \n\n    instance(x: -94, y: 530) diff_largest_smallest_4a90ce root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -253, y: 18, name: \"list\") property(List) list_3a2e28\n\n        out(x: 1037, y: 35, name: \"difference\") property(Number) difference_9f4c71\n\n        instance(x: 0, y: 0) min_5b6d47 root.Std_k98ojb.List.Min {}\n        instance(x: 1073, y: -15, name: \"max\") property(Number) max_c2e5c7\n        instance(x: 0, y: -1, name: \"continue\") trigger() continue_0f4a29\n        instance(x: 1059, y: 19, name: \"output\") property(Number) output_b8d1b5\n\n        setter(x: 0, y: 0, name: \"setter_2e66ab\") setter_2e66ab = min_value\n        getter(x: -1027, y: 15, name: \"getter_3d9c59\") getter_3d9c59 = min_value\n        setter(x: 1058, y: -24, name: \"setter_b0a6ac\") setter_b0a6ac = max_value\n        instance(x: 1032, y: 18) less_than_e0f4b1 root.Std_k98ojb.Math.LessThan {}\n        min_5b6d47.result -> output_b8d1b5\n        list_3a2e28 -> less_than_e0f4b1.items\n        max_c2e5c7 -> less_than_e0f4b1.right\n        less_than_e0f4b1.left -> setter_b0a6ac.new_value\n        min_5b6d47.value -> getter_3d9c59.new_value\n        max_c2e5c7 -> setter_b0a6ac.execute\n        list_3a2e28 -> less_than_e0f4b1.right\n        less_than_e0f4b1.result -> output_b8d1b5\n        continue_0f4a29 -> for_065883.reset\n    }\n\n    \n\n    instance(x: 1057, y: -10) diff_largest_smallest_63c22f root.main.diff_largest_smallest {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -222, y: 0, name: \"number\") property(Number) number_1d3a2e\n\n        out(x: 1066, y: -26, name: \"output\") property(Bool) output_f8c4b5\n\n        instance(x: 98, y: -18) modulo_9f7a4b root.Std_k98ojb.Math.Modulo {}\n        number_1d3a2e -> modulo_9f7a4b.value\n        2 -> modulo_9f7a4b.divisor\n        modulo_9f7a4b.result -> output_f8c4b5\n    }\n\n    \n\n    instance(x: -59, y: 26) is_even_e1d9d3 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -209, y: 12, name: \"number\") property(Number) number_3d0a1e\n\n        out(x: 1096, y: -11, name: \"output\") property(Bool) output_e4c9b2\n    }\n\n    \n\n    instance(x: 97, y: 45) is_even_7bc3f5 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -209, y: 0, name: \"n\") property(Number) n_57f2bb\n\n        out(x: 1315, y: 11, name: \"result\") property(Bool) result_4a8d1c\n\n        instance(x: 123, y: 22) modulo_eb6e0b root.Std_k98ojb.Math.Modulo {}\n        n_57f2bb -> modulo_eb6e0b.value\n        2 -> modulo_eb6e0b.divisor\n        modulo_eb6e0b.result -> result_4a8d1c\n    }\n\n    \n\n    instance(x: -27, y: 29) is_even_c3d6f2 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -202, y: 3, name: \"n\") property(Number) n_8d5a9e\n\n        out(x: 0, y: -1, name: \"output\") property(Bool) output_e4a1b6\n\n        instance(x: 93, y: 2) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        n_8d5a9e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> output_e4a1b6\n    }\n\n    \n\n    instance(x: -33, y: 29) is_even_7c3f65 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -208, y: 30, name: \"num\") property(Number) num_5fdd4d\n\n        out(x: 1, y: -25, name: \"result\") property(Bool) result_9a2e42\n\n        instance(x: 0, y: 10) modulo_6b9c7f root.Std_k98ojb.Math.Modulo {}\n        num_num -> modulo_6b9c7f.value\n        2 -> modulo_6b9c7f.divisor\n        modulo_6b9c7f.result -> result_9a2e42\n    }\n\n    \n\n    instance(x: -26, y: 63) is_even_f8d1bf root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -530, y: 0, name: \"number\") property(Number) number_93e3f1\n\n        out(x: 1054, y: 47, name: \"output\") property(Bool) output_ba9c64\n\n        instance(x: 34, y: 17) modulo_7b8d5 root.Std_k98ojb.Math.Modulo {}\n        number_93e3f1 -> modulo_7b8d5.value\n        2 -> modulo_7b8d5.divisor\n        modulo_7b8d5.result -> output_ba9c64\n    }\n\n    \n\n    instance(x: -69, y: 68) is_even_6d4e31 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -530, y: 2, name: \"input\") property(Number) input_0a8d34\n\n        out(x: 1055, y: -16, name: \"output\") property(Bool) output_d41c42\n\n        instance(x: 1141, y: 23) modulo_c4b3f9 root.Std_k98ojb.Math.Modulo {}\n        input_0a8d34 -> modulo_c4b3f9.value\n        2 -> modulo_c4b3f9.divisor\n        modulo_c4b3f9.result -> output_d41c42\n    }\n\n    \n\n    instance(x: -198, y: 47) is_even_7aa11a root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -229, y: 2, name: \"number\") property(Number) number_9f8e0a\n\n        out(x: 1023, y: -19, name: \"result\") property(Bool) result_a6d1bd\n\n        instance(x: 0, y: 0) modulo_7bbf55 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 308, y: -105) not_75283f root.Std_k98ojb.Logic.Not {}\n        number_9f8e0a -> modulo_7bbf55.value\n        2 -> modulo_7bbf55.divisor\n        modulo_7bbf55.result -> not_75283f.left\n        0 -> not_75283f.right\n        not_75283f.result -> result_a6d1bd\n    }\n\n    \n\n    instance(x: -23, y: 538) is_even_c4b2aa root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -194, y: 34, name: \"n\") property(Number) n_9f3ca5\n\n        out(x: 0, y: 85, name: \"result\") property(Bool) result_e8d4cd\n\n        instance(x: 74, y: -28) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        n_9f3ca5 -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> result_e8d4cd\n    }\n\n    \n\n    instance(x: -56, y: 53) is_even_d1c77e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -208, y: 1, name: \"n\") property(Number) n_0f8a55\n\n        out(x: 1053, y: 22, name: \"output\") property(Bool) output_7d9b49\n\n        instance(x: 0, y: 12) modulo_e2e4e6 root.Std_k98ojb.Math.Modulo {}\n        n_0f8a55 -> modulo_e2e4e6.value\n        2 -> modulo_e2e4e6.divisor\n        modulo_e2e4e6.result -> output_7d9b49\n    }\n\n    \n\n    instance(x: -73, y: 47) is_even_5fba8a root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: 3, y: -15, name: \"input\") property(String) input_9a2f67\n\n        out(x: 1090, y: -5, name: \"continue\") trigger() continue_6c1e38\n        out(x: 1154, y: 22, name: \"output\") property(Number) output_3d7b5c\n\n        instance(x: -13, y: -28, name: \"map_2f8a90\") map_2f8a90 = Iteration.Map {}\n        input_9a2f67 -> map_2f8a90.items\n        func() {\n            in(x: 0, y: -30, name: \"char\") property(Number) char_a71b6d\n\n            out(x: 1093, y: 20, name: \"\") property(Bool) bool_c7e77c\n\n            instance(x: -31, y: -24) islower_5f9a4f root.Std_k98ojb.Strings.IsLower {}\n            char_a71b6d -> islower_5f9a4f.char\n            0 -> islower_5f9a4f.value\n            true -> islower_5f9a4f.result -> bool_c7e77c\n        } -> map_2f8a90.handler\n        instance(x: 1, y: -10) count_6d43d root.Std_k98ojb.List.Count {}\n        input_9a2f67 -> count_6d43d.items\n        count_6d43d.value -> output_3d7b5c\n        map_2f8a90.output_list -> count_6d43d.list\n        islower_5f9a4f.result -> bool_c7e77c\n        continue_6c1e38 -> for_0ac2cd\n        input_9a2f67 -> for_0ac2cd.items\n        1 -> for_0ac2cd.new_value\n        map_2f8a90.output_list -> for_0ac2cd.list\n        output_3d7b5c -> for_0ac2cd.value\n    }\n\n    \n\n    instance(x: -63, y: 54) first_repeated_char_b1e4ea root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -202, y: 47, name: \"input\") property(String) input_3e9a1f\n\n        out(x: 1064, y: 35, name: \"output\") property(Number) output_a8c7b6\n        instance(x: 0, y: 30) map_ebf77d root.Std_k98ojb.Iteration.Map {}\n        input_3e9a1f -> map_ebf77d.items\n        func() {\n            in(x: -191, y: 15, name: \"char\") property(String) char_a8d0eb\n\n            out(x: 1056, y: 21, name: \"\") property(Number) _count_9c3da1\n\n            instance(x: 123, y: 28) count_c2fdd4 root.Std_k98ojb.List.Count {}\n            instance(x: 191, y: 34) if_7a5df8 root.Std_k98ojb.Std.If {}\n            map_ebf77d.output_list -> for_3cda0f\n            char_a8d0eb -> for_3cda0f.item\n            count_c2fdd4.count -> _count_9c3da1\n            if_7a5df8.value -> _count_9c3da1\n        } -> map_ebf77d.handler\n        map_ebf77d.output_list -> for_3cda0f.items\n        for_3cda0f.item -> if_7a5df8.execute\n        if_7a5df8.then -> count_c2fdd4.reset\n    }\n\n    \n\n    instance(x: 108, y: -47) first_repeated_bf77b9 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -261, y: 3, name: \"string\") property(String) input_f1d15a\n\n        out(x: 1184, y: 21, name: \"continue\") trigger() continue_0f6bda\n        out(x: 1025, y: 179, name: \"output\") property(Number) output_e3c8e9\n\n        instance(x: -109, y: -29, name: \"string_map\") map_c4d86a root.Std_k98ojb.Iteration.Map {}\n        input_f1d15a -> map_c4d86a.items\n        func() {\n            in(x: 0, y: 0, name: \"char\") property(Number) char_5c8f42\n\n            out(x: 109, y: -18, name: \"\") property(Number) _count_3e7baf\n\n            instance(x: 101, y: -16, name: \"count_map\") map_c4d86a.List.Map {}\n            instance(x: 118, y: -11, name: \"set_map\") set_1c21d8 root.Std_k98ojb.List.Set {}\n            char_5c8f42 -> count_map.char\n            _count_3e7baf -> set_map.value\n            count_map.list -> set_map.items\n        } -> string_map.handler\n        map_c4d86a.output_list -> first_repeated.list\n    }\n\n    \n\n    instance(x: -109, y: 56) first_repeated_9c5c8f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -269, y: 4, name: \"string\") property(String) str_5f4e28\n\n        out(x: 1339, y: 31, name: \"continue\") trigger() continue_35b7c1\n        out(x: 1123, y: 141, name: \"output\") property(Number) output_e6a23d\n\n        instance(x: 93, y: -13, name: \"hash_map\") filter_f4eef9 root.Std_k98ojb.List.Filter {}\n        instance(x: 208, y: 43) keys_58f1c5 root.Std_k98ojb.List.Keys {}\n        instance(x: 388, y: 134) values_96a3d8 root.Std_k98ojb.List.Values {}\n        instance(x: 499, y: 123) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 734, y: -97) not_e7f4e9 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1006, y: 21) if_7c284f root.Std_k98ojb.Std.If {}\n        instance(x: 1440, y: 139) repeat_5aaf71 root.Std_k98ojb.List.Repeat {}\n        list_05d3e9 -> keys_58f1c5.list\n        filter_f4eef9.output_list -> map_f2330d.items\n        str_5f4e28 -> map_f2330d.input\n        values_96a3d8 -> repeat_5aaf71.values\n        repeat_5aaf71.count -> not_e7f4e9.input\n        not_e7f4e9.result -> if_7c284f.predicate\n        keys_58f1c5.item -> map_f2330d.handler\n        str_5f4e28 -> repeat_5aaf71.input\n        values_96a3d8 -> repeat_5aaf71.values\n        map_f2330d.output_list -> if_7c284f.output_list\n    }\n\n    \n\n    instance(x: 114, y: -34) first_repeated_d9df59 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -204, y: 59, name: \"str\") property(String) str_a3d7f8\n\n        out(x: 1246, y: 24, name: \"index\") property(Number) index_4b0e34\n        out(x: 1185, y: 22, name: \"char\") property(Char) char_e4a9ea\n\n        instance(x: -11, y: 14) map_7c3f43 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 123, y: 34) count_6e8d28 root.Std_k98ojb.List.Count {}\n        instance(x: 192, y: 20) if_e4a9e root.Std_k98ojb.Std.If {}\n        instance(x: -11, y: 16) equal_57fdd3 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 123, y: 17) not_equal_58cfe7 root.Std_k98ojb.Logic.NotEqual {}\n        func() {\n            in(x: -12, y: 25, name: \"ch\") property(Char) ch_9c8d23\n\n            out(x: 1330, y: 31, name: \"\") property(Number) _result_4f1e58\n\n            instance(x: 10, y: 26) count_0b2a66 root.Std_k98ojb.List.Count {}\n            str_a3d7f8 -> count_0b2a66.input\n            ch_9c8d23 -> count_0b2a66.value\n            count_0b2a66.count -> _result_4f1e58\n        } -> map_7c3f43.handler\n        str_a3d7f8 -> map_7c3f43.items\n        map_7c3f43.output_list -> count_6e8d28.list\n        if_e4a9e.value -> not_equal_58cfe7.left\n        ch_9c8d23 -> not_equal_58cfe7.right\n        not_equal_58cfe7.result -> equal_57fdd3.predicate\n        for_065883.index -> count_6e8d28.count\n        0 -> count_6e8d28.value\n        if_e4a9e.then -> map_7c3f43.handler\n        not_equal_58cfe7.else -> continue_075eef\n        equal_57fdd3.result -> index_4b0e34\n        for_065883.done -> continue_075eef\n    }\n\n    \n\n    instance(x: 11, y: -36) first_repeated_ba23d2 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -246, y: 3, name: \"string\") property(String) str_f8f5d4\n\n        out(x: 1292, y: -10, name: \"char\") property(Number) char_6a35b1\n        out(x: 1137, y: 20, name: \"index\") property(Number) index_96e5ad\n\n        instance(x: 0, y: 0) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: -63, y: 23) set_9d2dfc root.Std_k98ojb.List.Set {}\n        instance(x: -69, y: -21) filter_a7a5f1 root.Std_k98ojb.Query.Filter {}\n        instance(x: 92, y: 30) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 102, y: 47) equal_b9d6e4 root.Std_k98ojb.Logic.Equal {}\n        func() {\n            in(x: -21, y: -10, name: \"char\") property(Number) char_5f91ac\n\n            out(x: 116, y: -30, name: \"\") property(Bool) bool_7c1cd6\n\n            instance(x: -55, y: 14) count_4a2df9 root.Std_k98ojb.List.Count {}\n            instance(x: 118, y: 3) contains_a5e5f8 root.Std_k98ojb.List.Contains {}\n            char_5f91ac -> contains_a5e5f8.item\n            str_f8f5d4 -> contains_a5e5f8.list\n            count_4a2df9.result -> bool_7c1cd6\n            1 -> count_4a2df9.reset\n        } -> filter_a7a5f1.handler\n        map_c73e3b.output_list -> str_f8f5d4\n        set_9d2dfc.items -> map_c73e3b.items\n        if_e19a62.then -> filter_a7a5f1.execute\n        for(x, y) in map_c73e3b.items {\n            instance(x: -64, y: 10) equal_b9d6e4 {\n                left: char_5f91ac\n                right: str_f8f5d4[x]\n            }\n            if (equal_b9d6e4.result) -> {\n                set_9d2dfc.add(char_5f91ac)\n                return true\n            }\n        }\n    }\n\n    \n\n    instance(x: 0, y: -1) first_repeated_char_7a56b9 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: 4, y: -47, name: \"input\") property(String) input_1f6e5a\n\n        out(x: 1279, y: 32, name: \"continue\") trigger() continue_2baf48\n        out(x: 1147, y: 21, name: \"output\") property(Number) output_3d8c76\n\n        instance(x: -193, y: 40) map_0e9a66 root.Std_k98ojb.Iteration.Map {}\n        input_1f6e5a -> map_0e9a66.items\n        func() {\n            in(x: -106, y: 57, name: \"char\") property(Number) char_7d4c2e\n\n            out(x: 1143, y: 63, name: \"\") property(Bool) bool_a1f5ed\n\n            instance(x: 111, y: 53) isnumeric_54a6b9 root.Std_k98ojb.Strings.IsNumeric {}\n            char_7d4c2e -> isnumeric_54a6b9.input\n            isnumeric_54a6b9.result -> bool_a1f5ed\n        } -> map_0e9a66.handler\n        map_0e9a66.output_list -> first_repeated.output\n    }\n\n    \n\n    instance(x: 121, y: 73) first_repeated_f3d2f4 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -209, y: 2, name: \"input\") property(String) input_4d8f9e\n\n        out(x: 1281, y: 35, name: \"index\") property(Number) index_a7b5a8\n        out(x: 1213, y: 46, name: \"char\") property(Char) char_42c7fa\n\n        instance(x: -293, y: 44) map_2d4f1e root.Std_k98ojb.Iteration.Map {}\n        input_4d8f9e -> map_2d4f1e.items\n        func() {\n            in(x: -193, y: 30, name: \"x\") property(Char) x_5dd7c6\n\n            out(x: 1003, y: 35, name: \"\") property(Number) _count_16b2eb\n\n            instance(x: 0, y: 0) count_9d8e66 root.Std_k98ojb.List.Count {}\n            x_5dd7c6 -> count_9d8e66.item\n            count_9d8e66.value -> _count_16b2eb\n        } -> map_2d4f1e.handler\n        map_2d4f1e.output_list -> index_a7b5a8\n    }\n\n    \n\n    instance(x: -278, y: 78) first_repeated_f8c62f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: 3, y: -20, name: \"string\") property(String) str_4e51a9\n\n        out(x: 1111, y: -10, name: \"index\") property(Number) index_5b7f6c\n        out(x: 1022, y: -15, name: \"char\") property(Char) char_8c0d57\n\n        instance(x: 0, y: 34) for_05a9cd root.Std_k98ojb.Std.For {}\n        instance(x: 1053, y: 20) map_f7e77f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1021, y: -12) map_e0d85c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 135, y: 35) count_54a8d4 root.Std_k98ojb.Count {}\n        instance(x: 145, y: -22) set_5e9f5a root.Std_k98ojb.Set {}\n        instance(x: 104, y: 31) equal_7a0c2b root.Std_k98ojb.Logic.Equal {}\n        instance(x: 142, y: 11) if_04d8ab root.Std_k98ojb.Std.If {}\n        instance(x: 145, y: -22) set_add_fdb6e root.Std_k98ojb.Set.Add {}\n        instance(x: 122, y: -18) get_e0f3c1 root.Std_k98ojb.Set.Get {}\n        instance(x: 114, y: 38) eq_7d8a83 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 132, y: -10) if_e4e6fa root.Std_k98ojb.Std.If {}\n        instance(x: 146, y: -24) set_remove_fcd3ba root.Std_k98ojb.Set.Remove {}\n        instance(x: 121, y: -18) eq_7d8a83.root -> eq_7d8a83\n        str_4e51a9 -> for_05a9cd.items\n        map_e0d85c.list -> set_5e9f5a\n        map_f7e77f.list -> count_54a8d4\n        1 -> map_f7e77f.gen_0\n        str_4e51a9[map_f7e77f.gen_0] -> map_e0d85c.value\n        set_add_fdb6e.value -> for_05a9cd.value\n        eq_7d8a83.result -> if_04d8ab.predicate\n        count_54a8d4.result -> for_05a9cd.index\n        eq_7d8a83.left -> char_8c0d57\n        get_e0f3c1.value -> set_remove_fcd3ba.input\n        str_4e51a9[get_e0f3c1.value] -> map_e0d85c.value\n        if_e4e6fa.predicate -> eq_7d8a83\n        for_05a9cd.index -> eq_7d8a83.left\n        set_remove_fcd3ba.input -> get_e0f3c1.value\n        if_04d8ab.execute -> continue_075eef\n        char_8c0d57.value -> index_5b7f6c\n    }\n\n    \n\n    instance(x: 105, y: -31) first_repeated_9a95d4 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -204, y: 21, name: \"input\") property(String) input_1e8a23\n\n        out(x: 1090, y: 47, name: \"output\") property(Number) output_7d2c6f\n\n        instance(x: 14, y: 10) map_9bc2b3 root.Std_k98ojb.Iteration.Map {}\n        input_1e8a23 -> map_9bc2b3.items\n        func() {\n            in(x: -121, y: 28, name: \"char\") property(String) char_a6d15f\n\n            out(x: 103, y: 31, name: \"\") property(Number) _count_0e1c35\n\n            instance(x: 10, y: 24) count_5a8a3a root.Std_k98ojb.Std.Count {}\n            char_a6d15f -> count_5a8a3a.input\n            count_5a8a3a.count -> _count_0e1c35\n        } -> map_9bc2b3.handler\n        map_9bc2b3.output_list -> output_7d2c6f\n    }\n\n    \n\n    instance(x: -59, y: 550) first_repeated_9ac89a root.main.first_repeated {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -217, y: 4, name: \"list\") property(List) list_5f6a1d\n\n        out(x: 1203, y: -7, name: \"number\") property(Number) number_c9b0c2\n\n        instance(x: 88, y: 34) map_8e8c47 root.Std_k98ojb.Iteration.Map {}\n        list_5f6a1d -> map_8e8c47.items\n        func() {\n            in(x: -128, y: 43, name: \"current\") property(Number) current_33db9f\n\n            out(x: 245, y: 39, name: \"\") property(Number) _5dd6dc\n\n            instance(x: 85, y: 37) min_c3e343 root.Std_k98ojb.List.Min {}\n            current_33db9f -> min_c3e343.items\n            min_c3e343.min -> number_c9b0c2\n        } -> map_8e8c47.handler\n        instance(x: -20, y: 36) second_min_f1d17a root.Std_k98ojb.List.SecondMin {}\n        list_5f6a1d -> second_min_f1d17a.items\n        second_min_f1d17a.second -> number_c9b0c2\n    }\n\n    \n\n    instance(x: -63, y: 523) second_smallest_5fda4e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -222, y: 19, name: \"list\") property(List) list_77d4a5\n\n        out(x: 0, y: 25, name: \"output\") property(Number) output_b3c7f6\n\n        instance(x: 1, y: 21) find_smallest_a2e84b root.Std_k98ojb.Iteration.Find {}\n        data_instance(x: -192, y: 40) data_8a9d5f  = [list_77d4a5]\n        instance(x: 0, y: 44) second_f3c1aa root.Std_k98ojb.List.SecondItem {}\n        func() {\n            in(x: -191, y: 32, name: \"elem\") property(Number) elem_d2e8f9\n\n            out(x: 0, y: -20, name: \"\") property(Bool) bool_4d1c4a\n\n            instance(x: 0, y: 41) modulo_a7d5b3 root.Std_k98ojb.Math.Modulo {}\n            elem_d2e8f9 -> modulo_a7d5b3.value\n            2 -> modulo_a7d5b3.divisor\n            find_smallest_a2e84b.result -> bool_4d1c4a\n        } -> find_smallest_a2e84b.predicate\n        list_77d4a5 -> find_smallest_a2e84b.items\n        find_smallest_a2e84b.item -> second_f3c1aa.list\n        list_77d4a5 -> find_smallest_a2e84b.index\n        find_smallest_a2e84b.result -> output_b3c7f6\n    }\n\n    \n\n    instance(x: -56, y: 73) second_smallest_c9df45 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -201, y: 13, name: \"list\") property(List) list_9e38af\n\n        out(x: 1053, y: 40, name: \"output\") property(Number) output_e7d5c1\n\n        instance(x: 94, y: -20, name: \"first_smallest\") filter_c91965 root.Std_k98ojb.Query.Filter {}\n        instance(x: 0, y: 17, name: \"second_smallest\") filter_59e7a8 root.Std_k98ojb.Query.Filter {}\n        instance(x: 133, y: 25) less_than_f9c4d2 root.Std_k98ojb.Logic.LessThan {}\n        instance(x: 0, y: -33, name: \"execute\") trigger() execute_6df5e3\n        instance(x: 255, y: 29) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 107, y: -10) is_smallest_d4f2eb root.Std_k98ojb.Logic.Equal {}\n        instance(x: 0, y: -41, name: \"handler\") handler_3c8e9c root.Std_k98ojb.Iteration.Handler {}\n        list_9e38af -> filter_c91965.items\n        first_smallest_f5df7a.list -> filter_59e7a8.items\n        second_smallest_2d4f6f.list -> if_e19a62.items\n        less_than_f9c4d2.left -> is_smallest_d4f2eb.left\n        less_than_f9c4d2.right -> is_smallest_d4f2eb.right\n        filter_c91965.result -> first_smallest_f5df7a.list\n        second_smallest_2d4f6f.item -> if_e19a62.item\n        if_e19a62.then -> execute_6df5e3.execute\n        less_than_f9c4d2.result -> is_smallest_d4f2eb.input\n    }\n\n    \n\n    instance(x: 123, y: -29) second_smallest_2d4f6b root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -305, y: 2, name: \"list\") property(List) list_8f1d5e\n\n        out(x: 1214, y: -204, name: \"output\") property(Number) output_f6b9da\n\n        instance(x: 0, y: 0) filter_a96c23 root.Std_k98ojb.Query.Filter {}\n        instance(x: 155, y: -210) sort_d2fdd3 root.Std_k98ojb.List.Sort {}\n        instance(x: 106, y: -207) not_equal_8e85c9 root.Std_k98ojb.Logic.NotEqual {}\n        func() {\n            in(x: -191, y: 13, name: \"current\") property(Number) current_5a4be7\n\n            out(x: 341, y: -40, name: \"\") property(Number) _3e38d1\n\n            instance(x: 155, y: 0) count_b4c9e8 root.Std_k98ojb.Std.Count {}\n            list_8f1d5e -> filter_a96c23.list\n            filter_a96c23.result -> sort_d2fdd3.items\n            sort_d2fdd3.result -> not_equal_8e85c9.items\n            current_5a4be7 -> not_equal_8e85c9.left\n            1 -> count_b4c9e8.reset\n            count_b4c9e8.count -> _3e38d1\n        } -> filter_a96c23.handler\n        list_8f1d5e -> sort_d2fdd3.list\n        filter_a96c23.output_list -> not_equal_8e85c9.list\n        func() {\n            in(x: 104, y: -19, name: \"current\") property(Number) second_smallest_6a4f51\n\n            out(x: 344, y: 46, name: \"\") property(Number) _2bdf59\n\n            instance(x: 155, y: 0) index_e8e5c9 root.Std_k98ojb.List.GetAt {}\n            list_8f1d5e -> index_e8e5c9.list\n            current_5a4be7 -> index_e8e5c9.index\n            _2bdf59 -> second_smallest_6a4f51\n        } -> not_equal_8e85c9.handler\n        sort_d2fdd3.result -> _2bdf59\n    }\n\n    \n\n    instance(x: 0, y: -28) second_smallest_c56d23 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -231, y: 23, name: \"list\") property(List) list_c3e4f9\n\n        out(x: 1056, y: 59, name: \"output\") property(Number) output_8d0b19\n\n        instance(x: 34, y: 30) filter_83c5b2 root.Std_k98ojb.Query.Filter {}\n        instance(x: -14, y: 45) firstitem_1e7f21 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -20, y: 25) seconditem_9d3b6a root.Std_k98ojb.List.SecondItem {}\n        instance(x: 103, y: 58) lessThanOrEqual_5c8f44 root.Std_k98ojb.Math.LessThanOrEqual {}\n        func() {\n            in(x: -28, y: 26, name: \"current\") property(Number) current_0e7df9\n\n            out(x: 1043, y: 22, name: \"\") property(Bool) bool_c5a4f6\n\n            instance(x: 39, y: 19) modulo_b8cdd2 root.Std_k98ojb.Math.Modulo {}\n            current_0e7df9 -> modulo_b8cdd2.value\n            list_c3e4f9[1] -> modulo_b8cdd2.divisor\n            modulo_b8cdd2.result -> bool_c5a4f6\n        } -> filter_83c5b2.handler\n        list_c3e4f9 -> filter_83c5b2.items\n        lessThanOrEqual_5c8f44.left -> seconditem_9d3b6a.item\n        firstitem_1e7f21.item -> modulo_b8cdd2.first\n        list_c3e4f9[0] -> modulo_b8cdd2.second\n        filter_83c5b2.is_contained -> lessThanOrEqual_5c8f44.input\n        seconditem_9d3b6a.value -> bool_c5a4f6\n    }\n\n    \n\n    instance(x: -28, y: 23) second_smallest_ae1d7a root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -275, y: 3, name: \"list\") property(List) list_4f2da8\n\n        out(x: 1239, y: -1, name: \"min1\") property(Number) min1_ba5d7b\n        out(x: 1270, y: -24, name: \"min2\") property(Number) min2_a3e35c\n\n        instance(x: 0, y: 0, name: \"first_min\") Std_k98ojb.Std.If {}\n        instance(x: 123, y: -43, name: \"second_min\") Std_k98ojb.Std.If {}\n        instance(x: 198, y: -16, name: \"ifmin\") Std_k98ojb.Std.If {}\n        getter(x: 102, y: 74, name: \"getter_4f2da8\") getter_4f2da8 = min\n        setter(x: 0, y: 0, name: \"setter_1e3d9c\") setter_1e3d9c = index\n        instance(x: 191, y: -43, name: \"ifmin_index\") Std_k98ojb.Std.For {}\n        getter(x: 108, y: 170, name: \"getter_ea35f5\") getter_ea35f5 = min2\n        setter(x: 0, y: 0, name: \"setter_4e1c7f\") setter_4e1c7f = index\n        instance(x: 195, y: -16, name: \"ifmin_index_2\") Std_k98ojb.Std.For {}\n        list_4f2da8 -> ifmin.items\n        getter_4f2da8.value -> first_min.predicate\n        min1_ba5d7b -> second_min.predicate\n        getter_ea35f5.value -> second_min.predicate\n        setter_1e3d9c.continue -> ifmin.reset\n        list_4f2da8 -> ifmin_index.items\n        setter_4e1c7f.new_value -> ifmin_index.execute\n        0 -> setter_4e1c7f.index\n        getter_ea35f5.value -> ifmin_index.item\n        ifmin_index.done -> second_min.next\n        ifmin_index.onItem -> first_min.execute\n        first_min.else -> ifmin_index.next\n        ifmin_index.then -> second_min.execute\n    }\n\n    \n\n    instance(x: 199, y: -25) second_smallest_1b6d7f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -243, y: 3, name: \"list\") property(List) list_3f0e2d\n\n        out(x: 1079, y: 28, name: \"min1\") property(Number) min1_c5b7db\n        out(x: 1011, y: -27, name: \"min2\") property(Number) min2_e6a8c4\n\n        instance(x: 12, y: -16, name: \"first_min\") filter_a9f6d3 root.Std_k98ojb.Query.Filter {}\n        instance(x: 73, y: -5, name: \"second_min\") filter_7e5f0b root.Std_k98ojb.Query.Filter {}\n        instance(x: 109, y: 45, name: \"transform numbers to true/false\") map_d4d23a root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -59, y: -10, name: \"current\") property(Number) current_5c7f2e\n\n            out(x: 1233, y: -20, name: \"\") property(Bool) bool_b1f8dc\n\n            instance(x: 91, y: 22) modulo_15a9fa root.Std_k98ojb.Math.Modulo {}\n            instance(x: 292, y: 28) notequal_5e6c21 root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_5e6c21.right\n            modulo_15a9fa.result -> notequal_5e6c21.left\n            current_5c7f2e -> modulo_15a9fa.value\n            notequal_5e6c21.result -> bool_b1f8dc\n        } -> filter_a9f6d3.handler\n        list_3f0e2d -> filter_a9f6d3.list\n        func() {\n            in(x: -28, y: 27, name: \"current\") property(Number) current_d94c66\n\n            out(x: 1394, y: -26, name: \"\") property(Bool) bool_1b5b31\n\n            instance(x: 72, y: 17) modulo_f59e3f root.Std_k98ojb.Math.Modulo {}\n            instance(x: 289, y: 24) notequal_b4d95a root.Std_k98ojb.Logic.NotEqual {}\n            current_d94c66 -> notequal_b4d95a.right\n            0 -> notequal_b4d95a.left\n            modulo_f59e3f.result -> notequal_b4d95a.left\n            current_d94c66 -> modulo_f59e3f.value\n            notequal_b4d95a.result -> bool_1b5b31\n        } -> map_d4d23a.handler\n        map_d4d23a.output_list -> filter_a9f6d3.items\n        filter_a9f6d3.output_list -> second_min.list\n        false -> second_min.item\n        notequal_b4d95a.result -> min2_e6a8c4\n        filter_a9f6d3.is_contained -> notequal_b4d95a.input\n    }\n\n    \n\n    instance(x: 69, y: -26) second_smallest_6f3b7 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -251, y: 24, name: \"list\") property(List) list_5f8d3e\n\n        out(x: 1084, y: 7, name: \"smallest\") property(Number) smallest_f0a9b8\n        out(x: 1091, y: -31, name: \"second_smallest\") property(Number) second_smallest_8c5dc2\n\n        instance(x: 33, y: -21, name: \"first_min\") Std_k98ojb.Std.Count {}\n        instance(x: 1013, y: -57, name: \"second_min\") Std_k98ojb.Std.Count {}\n        list_5f8d3e -> second_min.items\n        first_min.reset -> second_min.reset\n\n        instance(x: 0, y: 0) if_e1c4ac root.Std_k98ojb.Std.If {}\n        instance(x: 114, y: -54, name: \"min\") property(Number) min_7d2a77\n        list_5f8d3e -> min.item\n        first_min.count -> second_min.count\n\n        instance(x: 110, y: 19) sub_5c1d21 root.Std_k98ojb.Math.Sub {}\n        smallest_f0a9b8 -> sub_5c1d21.first\n        list_5f8d3e -> sub_5c1d21.second\n        sub_5c1d21.result -> min_7d2a77\n\n        instance(x: 95, y: -41) if_e1c4ac.execute {\n            second_min.count = first_min.count + 1\n            smallest_f0a9b8 = min_7d2a77\n            second_smallest_8c5dc2 = sub_5c1d21.first\n        }\n        second_min.reset -> first_min.reset\n\n        instance(x: 104, y: -58) if_e1c4ac.then {\n            smallest_f0a9b8 = min_7d2a77\n            second_smallest_8c5dc2 = sub_5c1d21.second\n        }\n    }\n\n    \n\n    instance(x: 111, y: 771) second_smallest_0e23f4 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -204, y: 25, name: \"list\") property(List) list_8e9fdd\n\n        out(x: 1913, y: -11, name: \"output\") property(Number) output_b5c6d4\n\n        instance(x: 0, y: 0, name: \"first_smallest\") setter_6e7b4e = first_smallest\n        instance(x: 0, y: 0, name: \"second_smallest\") setter_6e7b4e = second_smallest\n        instance(x: 1, y: -3) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 2, y: -35) second_smallest_b0f6a9 root.Std_k98ojb.List.Sort {}\n        list_8e9fdd -> first_smallest.items\n        list_8e9fdd -> second_smallest.items\n\n        data_instance(x: -209, y: 29) data_3c5d7f  = [list_8e9fdd]\n        instance(x: 23, y: -28) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_8e9fdd -> min_c3e343.items\n        min_c3e343.min -> first_smallest\n        second_smallest_b0f6a9.result -> output_b5c6d4\n    }\n\n    \n\n    instance(x: 105, y: -36) second_smallest_7e2b42 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -223, y: 1, name: \"list\") property(List) list_6d9a4e\n\n        out(x: 1035, y: 10, name: \"output\") property(Number) output_7f0b15\n\n        instance(x: 0, y: 0) second_98c3eb root.Std_k98ojb.List.Sort {}\n        list_6d9a4e -> second_98c3eb.items\n        func() {\n            in(x: -228, y: 33, name: \"current\") property(Number) current_5df7f2\n\n            out(x: 1060, y: 43, name: \"output\") property(Number) _result_1d8b6e\n\n            instance(x: 91, y: 37) less_than_f4a3ef root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_5df7f2 -> less_than_f4a3ef.left\n            list_6d9a4e[1] -> less_than_f4a3ef.right\n            less_than_f4a3ef.result -> _result_1d8b6e\n        } -> second_98c3eb.handler\n        instance(x: 105, y: 10) if_0a34f5 root.Std_k98ojb.Std.If {}\n        output_7f0b15 -> if_0a34f5.then\n        list_6d9a4e[1] -> if_0a34f5.predicate\n        second_98c3eb.min -> _result_1d8b6e\n        if_0a34f5.else -> output_7f0b15\n    }\n\n    \n\n    instance(x: 761, y: -22) second_smallest_b7fdd2 root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12395,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -222, y: 34, name: \"list1\") property(List) list_2f4e84\n        in(x: -233, y: -6, name: \"list2\") property(List) list_a7a9c3\n\n        out(x: 1038, y: -25, name: \"output\") property(Bool) output_5d0b8c\n\n        instance(x: 118, y: 69) filter_4e7f6a root.Std_k98ojb.Query.Filter {}\n        list_2f4e84 -> filter_4e7f6a.list\n        list_a7a9c3 -> filter_4e7f6a.where\n        func() {\n            in(x: -191, y: 36, name: \"item\") property(Number) item_c0d1e9\n\n            out(x: 1278, y: 26, name: \"\") property(Bool) output_b2b21f\n\n            instance(x: 104, y: 56) contains_23c5a7 root.Std_k98ojb.List.Contains {}\n            list_a7a9c3 -> contains_23c5a7.item\n            item_c0d1e9 -> contains_23c5a7.value\n            contains_23c5a7.is_contained -> output_b2b21f\n        } -> filter_4e7f6a.handler\n        list_a7a9c3 -> filter_4e7f6a.output_list\n        filter_4e7f6a.result -> output_b2b21f\n    }\n\n    \n\n    instance(x: -56, y: 567) has_common_element_d5bc8d root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -191, y: 4, name: \"list1\") property(List) list_8e9d3b\n        in(x: -202, y: 34, name: \"list2\") property(List) list_1a6c7a\n\n        out(x: 1080, y: 40, name: \"output\") property(Bool) output_4f55ef\n\n        instance(x: 105, y: 22) map_5d74b4 root.Std_k98ojb.Iteration.Map {}\n        list_8e9d3b -> map_5d74b4.items\n        list_1a6c7a -> map_5d74b4.items\n        func() {\n            in(x: -243, y: 54, name: \"elem\") property(Number) elem_2dfce0\n\n            out(x: 1428, y: -21, name: \")\") property(Bool) output_a1c3a5\n\n            instance(x: 106, y: 43) contains_d7b6f9 root.Std_k98ojb.List.Contains {}\n            elem_2dfce0 -> contains_d7b6f9.item\n            contains_d7b6f9.is_contained -> output_a1c3a5\n        } -> map_5d74b4.handler\n        map_5d74b4.output_list -> list_8e9d3b.list\n        map_5d74b4.output_list -> list_1a6c7a.list\n        contains_d7b6f9.result -> output_a1c3a5\n    }\n\n    \n\n    instance(x: 87, y: -22) has_common_element_e2f8e root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -231, y: 1, name: \"listA\") property(List) list_a_5b95a4\n        in(x: -233, y: 22, name: \"listB\") property(List) list_b_c7c3f2\n\n        out(x: 1219, y: -19, name: \"output\") property(Bool) output_6d8e0f\n\n        instance(x: 0, y: 10) filter_d7b4f2 root.Std_k98ojb.Iteration.Filter {}\n        list_a_5b95a4 -> filter_d7b4f2.items\n        func() {\n            in(x: -112, y: 39, name: \"item\") property(Number) item_6c9e85\n\n            out(x: 509, y: 59, name: \"\") property(Bool) bool_a8a1f5\n\n            instance(x: 95, y: 54) list_contains_7df2d root.Std_k98ojb.List.Contains {}\n            item_6c9e85 -> list_contains_7df2d.item\n            list_a_5b95a4 -> list_contains_7df2d.list\n            list_b_c7c3f2 -> list_contains_7df2d.list\n            list_contains_7df2d.is_contained -> bool_a8a1f5\n        } -> filter_d7b4f2.handler\n        output_6d8e0f -> filter_d7b4f2.output_list\n    }\n\n    \n\n    instance(x: 76, y: -104) has_common_element_3a94c9 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks if two lists have at least one common element.\") has_common {\n        in(x: -245, y: 2, name: \"list1\") property(List) list_0d3f55\n        in(x: -253, y: 4, name: \"list2\") property(List) list_ea7e8b\n\n        out(x: 1056, y: 19, name: \"result\") property(Bool) result_b5c1da\n\n        instance(x: 0, y: 0) filter_9f3d35 root.Std_k98ojb.Query.Filter {}\n        list_ea7e8b -> filter_9f3d35.items\n        func() {\n            in(x: -234, y: -10, name: \"elem\") property(Number) elem_f2bc95\n\n            out(x: 0, y: 4, name: \"\") property(Bool) bool_a7e8b9\n\n            instance(x: 90, y: -3) contains_6f25d5 root.Std_k98ojb.List.Contains {}\n            list_ea7e8b -> contains_6f25d5.item\n            elem_f2bc95 -> contains_6f25d5.value\n            bool_a7e8b9.result -> result_b5c1da\n        } -> filter_9f3d35.handler\n        list_0d3f55 -> filter_9f3d35.list\n        filter_9f3d35.is_contained -> bool_a7e8b9.input\n    }\n\n    \n\n    instance(x: 88, y: 74) has_common_2f6c4a root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two given lists have at least one common element.\") common_element {\n        in(x: -509, y: -23, name: \"list1\") property(List) list_3f2a94\n        in(x: -510, y: 5, name: \"list2\") property(List) list_3e6b0f\n\n        out(x: 1429, y: -36, name: \"result\") property(Bool) result_b4d87c\n\n        instance(x: 88, y: -39) filter_c6ec7a root.Std_k98ojb.Iteration.Filter {}\n        list_3e6b0f -> filter_c6ec7a.items\n        func() {\n            in(x: -119, y: 25, name: \"element\") property(Number) element_d9c5d1\n\n            out(x: 1239, y: -49, name: \"bool\") property(Bool) bool_11b3f2\n\n            instance(x: 105, y: -35) contains_f1a6e4 root.Std_k98ojb.List.Contains {}\n            element_d9c5d1 -> contains_f1a6e4.item\n            list_3f2a94 -> contains_f1a6e4.list\n            contains_f1a6e4.is_contained -> bool_11b3f2\n        } -> filter_c6ec7a.handler\n        result_b4d87c -> filter_c6ec7a.output_list\n    }\n\n    \n\n    instance(x: 0, y: -47) common_element_64d9ed root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the index of the first occurrence of a given number in a sorted array.\") has_common_element {\n        in(x: -244, y: 30, name: \"list1\") property(List) list_8fdd21\n        in(x: -245, y: 24, name: \"list2\") property(List) list_b0c4e9\n\n        out(x: 1146, y: 64, name: \"output\") property(Bool) output_1b3d7a\n\n        instance(x: 12, y: -17) find_first_occurrence_8df77 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -109, y: 29, name: \"elem\") property(Number) elem_6f66eb\n\n            out(x: 1067, y: 48, name: \"bool\") property(Bool) bool_d2e4c5\n\n            instance(x: 78, y: 19) equal_b1d15f root.Std_k98ojb.Logic.Equal {}\n            list_8fdd21 -> find_first_occurrence_8df77.items\n            list_b0c4e9 -> find_first_occurrence_8df77.items\n            -1 -> find_first_occurrence_8df77.new_value\n            elem_6f66eb -> equal_b1d15f.left\n            find_first_occurrence_8df77.item -> equal_b1d15f.right\n            find_first_occurrence_8df77.predicate -> bool_d2e4c5\n        } -> list_8fdd21.find_first_occurrence_\n        list_8fdd21 -> list_b0c4e9.find_first_occurrence_\n        output_1b3d7a.result -> find_first_occurrence_8df77.is_contained\n    }\n\n    \n\n    instance(x: 6, y: 52) has_common_element_e6abce root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: 5, y: -26, name: \"list1\") property(List) list_4f6a3d\n        in(x: 4, y: -14, name: \"list2\") property(List) list_e7c8e9\n\n        out(x: 1020, y: 24, name: \"result\") property(Bool) result_bdb5cb\n\n        instance(x: 0, y: 0) contains_6f5b55 root.Std_k98ojb.List.Contains {}\n        instance(x: -20, y: -23) not_equal_e3d8f2 root.Std_k98ojb.Logic.NotEqual {}\n        1 -> not_equal_e3d8f2.right\n        contains_6f5b55.result -> not_equal_e3d8f2.left\n        list_e7c8e9 -> contains_6f5b55.list\n        result_bdb5cb -> contains_6f5b55.is_contained\n    }\n\n    \n\n    instance(x: 19, y: -35) has_common_element_8df1a4 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -191, y: 13, name: \"list1\") property(List) list_0d8a45\n        in(x: -198, y: 4, name: \"list2\") property(List) list_b9f5b7\n\n        out(x: 137, y: 69, name: \"output\") property(Bool) output_d1c89e\n\n        instance(x: 0, y: 0) intersection_a8a3c4 root.Std_k98ojb Sets.Intersection {}\n        instance(x: -192, y: -2) filter_7f5d23 root.Std_k98ojb.Query.Filter {}\n        func() {\n            in(x: -194, y: -6, name: \"elem\") property(Number) elem_9e31c3\n\n            out(x: 0, y: 24, name: \")\") property(Boolean) bool_b7f8db\n\n            instance(x: -2, y: 15) contains_a47a4b root.Std_k98ojb.List.Contains {}\n            list_0d8a45 -> contains_a47a4b.list\n            elem_9e31c3 -> contains_a47a4b.item\n            contains_a47a4b.result -> bool_b7f8db\n        } -> filter_7f5d23.handler\n        list_b9f5b7 -> intersection_a8a3c4.left\n        intersection_a8a3c4.intersect -> output_d1c89e\n        has_common_element.output_d1c89e -> bool_b7f8db\n    }\n\n    \n\n    instance(x: -195, y: 62) has_common_element_5b6d98 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -245, y: 10, name: \"list1\") property(List) list_9a3f66\n        in(x: -251, y: -7, name: \"list2\") property(List) list_4e5aeb\n\n        out(x: 1296, y: -38, name: \"result\") property(Bool) result_a0ec56\n\n        instance(x: 95, y: -45) contains_3ba98f root.Std_k98ojb.List.Contains {}\n        list_9a3f66 -> contains_3ba98f.list\n        list_4e5aeb -> contains_3ba98f.item\n        func() {\n            in(x: 0, y: -16, name: \"element\") property(Number) element_a6d6c7\n\n            out(x: 1059, y: 25, name: \")\") property(Bool) bool_acd5b2\n\n            instance(x: 91, y: -38) not_52ed45 root.Std_k98ojb.Logic.Not {}\n            contains_3ba98f.is_contained -> not_52ed45.input\n            list_9a3f66 -> not_52ed45.left\n            list_4e5aeb -> not_52ed45.right\n            not_52ed45.result -> bool_acd5b2\n        } -> contains_3ba98f.handler\n        not_52ed45.input -> result_a0ec56\n    }\n\n    \n\n    instance(x: 112, y: -13) has_common_element_dbd4c6 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -195, y: 2, name: \"list1\") property(List) list_6b5f9a\n        in(x: -198, y: -13, name: \"list2\") property(List) list_8c7e0d\n\n        out(x: 1243, y: 39, name: \"output\") property(Bool) output_5dd4cd\n\n        instance(x: 113, y: 33) contains_f6a51f root.Std_k98ojb.List.Contains {}\n        list_8c7e0d -> contains_f6a51f.item\n        func() {\n            in(x: -213, y: 45, name: \"elem\") property(Number) elem_1df9eb\n\n            out(x: 193, y: 47, name: \"\") property(Bool) bool_df2e5b\n\n            instance(x: 98, y: 40) contains_f6a51f2 root.Std_k98ojb.List.Contains {}\n            list_8c7e0d -> contains_f6a51f2.item\n            elem_1df9eb -> contains_f6a51f2.value\n            contains_f6a51f2.result -> bool_df2e5b\n        } -> contains_f6a51f.handler\n        contains_f6a51f.is_contained -> bool_df2e5b\n    }\n\n    \n\n    instance(x: 101, y: -32) has_common_93c9d1 root.main.has_common {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given list contains consecutive numbers or not.\") contain_consecutive {\n        in(x: -305, y: 0, name: \"list\") property(List) list_8a5d84\n\n        out(x: 1111, y: 25, name: \"continue\") trigger() continue_07e7b9\n        out(x: 1234, y: 24, name: \"output\") property(Number) output_d2f0c6\n\n        instance(x: 101, y: -10, name: \"contains_consecutive\") filter_b3d5b4 root.Std_k98ojb.Iteration.Filter {}\n        list_8a5d84 -> contains_consecutive.items\n        func() {\n            in(x: -108, y: 38, name: \"i\") property(Number) i_2ddc7f\n\n            out(x: 1159, y: -27, name: \"\") property(Bool) bool_e89a6e\n\n            instance(x: 106, y: 39) equal_d85bf0 root.Std_k98ojb.Logic.Equal {}\n            instance(x: 113, y: 33) less_7d4f8c root.Std_k98ojb.Math.LessThanOrEqual {}\n            i_2ddc7f -> less_7d4f8c.left\n            list_8a5d84 -> less_7d4f8c.right\n            less_7d4f8c.result -> bool_e89a6e\n        } -> filter_b3d5b4.handler\n        contains_consecutive.output_list -> output_d2f0c6\n    }\n\n    \n\n    instance(x: -56, y: 521) contain_consecutive_9bdff1 root.main.contain_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") contains_consecutive {\n        in(x: -215, y: 1, name: \"list\") property(List) list_6e4d5b\n\n        out(x: 1008, y: 16, name: \"output\") property(Bool) output_d5c0f1\n\n        instance(x: 0, y: -9, name: \"previous\") property(Number) previous_f56cd7\n        instance(x: 95, y: 27, name: \"current\") property(Number) current_7e58e8\n        instance(x: 1005, y: 16, name: \"next\") property(Number) next_e0f4af\n\n        func() {\n            in(x: -19, y: -24, name: \"item\") property(Number) item_d6a2b1\n\n            out(x: 234, y: 10, name: \"\") property(Bool) bool_85d7e8\n\n            instance(x: 34, y: -32) subtract_b9f1c0 root.Std_k98ojb.Math.Sub {}\n            current_7e58e8 -> subtract_b9f1c0.first\n            next_e0f4af -> subtract_b9f1c0.second\n            subtract_b9f1c0.result -> bool_85d7e8\n            1 -> subtract_b9f1c0.value\n        } -> contains_consecutive.handler\n        list_6e4d5b -> contains_consecutive.items\n        func() {\n            in(x: -19, y: -24, name: \"item\") property(Number) item_d6a2b1\n\n            out(x: 234, y: 10, name: \"\") property(Bool) bool_85d7e8\n\n            instance(x: 34, y: -32) subtract_b9f1c0 root.Std_k98ojb.Math.Sub {}\n            current_7e58e8 -> subtract_b9f1c0.first\n            next_e0f4af -> subtract_b9f1c0.second\n            subtract_b9f1c0.result -> bool_85d7e8\n            1 -> subtract_b9f1c0.value\n        } -> contains_consecutive.handler\n    }\n\n    \n\n    instance(x: 94, y: -120) contains_consecutive_9d5a6b root.main.contains_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive {\n        in(x: -255, y: 1, name: \"lst\") property(List) lst_5d9bbf\n\n        out(x: 194, y: 44, name: \"continue\") trigger() continue_6a7e0b\n        out(x: 195, y: 55, name: \"output\") property(Bool) output_4c8e98\n\n        instance(x: 1, y: -105) count_aedebd root.Std_k98ojb.Std.Count {}\n        instance(x: 103, y: 23) if_0fbd5 root.Std_k98ojb.Std.If {}\n        instance(x: 123, y: 33) less_than_b3e7c4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        setter(x: -19, y: -100, name: \"setter_8d9ab5\") setter_8d9ab5 = index\n        getter(x: 105, y: -85, name: \"getter_7a6f74\") getter_7a6f74 = index\n        instance(x: 141, y: -62) not_equal_2e3b1 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 155, y: 17) if_e8c5d0 root.Std_k98ojb.Std.If {}\n        setter_8d9ab5.continue -> count_aedebd.reset\n        lst_5d9bbf -> count_aedebd.items\n        continue_6a7e0b -> setter_8d9ab5.execute\n        1 -> setter_8d9ab5.new_value\n        count_aedebd.result -> output_4c8e98\n        less_than_b3e7c4.result -> if_0fbd5.predicate\n        lst_5d9bbf -> if_e8c5d0.items\n        if_0fbd5.value -> not_equal_2e3b1.left\n        getter_7a6f74 -> not_equal_2e3b1.right\n        not_equal_2e3b1.result -> output_4c8e98\n        if_e8c5d0.then -> setter_8d9ab5.execute\n        count_aedebd.count == 1 -> continue_6a7e0b\n    }\n\n    \n\n    instance(x: -43, y: 73) has_consecutive_f79f3b root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") contain_consecutive {\n        in(x: -245, y: 6, name: \"list\") property(List) list_2d9f8a\n\n        out(x: 1274, y: -209, name: \"output\") property(Bool) output_e7b0c3\n\n        instance(x: 93, y: -26, name: \"consecutive\") filter_d0e5d1 root.Std_k98ojb.Iteration.Filter {}\n        list_2d9f8a -> filter_d0e5d1.items\n        func() {\n            in(x: -108, y: 46, name: \"current\") property(Number) current_a4bb6c\n\n            out(x: 142, y: -47, name: \"\") property(Number) _7dd980\n\n            instance(x: 91, y: -20) not_equal_56f5db root.Std_k98ojb.Logic.NotEqual {}\n            current_a4bb6c -> not_equal_56f5db.left\n            2 -> not_equal_56f5db.right\n            _7dd980 -> not_equal_56f5db.result\n        } -> filter_d0e5d1.handler\n        instance(x: -12, y: -45) add_8b9a43 root.Std_k98ojb.Math.Add {}\n        current_a4bb6c -> add_8b9a43.first\n        1 -> add_8b9a43.second\n        add_8b9a43.result -> _7dd980\n    }\n\n    \n\n    instance(x: -27, y: 509) contain_consecutive_c5f2e4 root.main.contain_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -202, y: 19, name: \"list\") property(List) list_4d21a9\n\n        out(x: 1081, y: -27, name: \"output\") property(Bool) output_d7e5ac\n\n        instance(x: 76, y: -53, name: \"previous_number\") get_previous_number {}\n        instance(x: 295, y: 11, name: \"difference\") calculate_difference {}\n        instance(x: 12, y: 22) if_0a1f7 root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -192, y: -24, name: \"current_number\") property(Number) current_number_db6e5d\n\n            out(x: 1228, y: -19, name: \"\") property(Number) difference_5f4c66\n\n            instance(x: 0, y: 0) modulo_9a2b7 root.Std_k98ojb.Math.Modulo {}\n            current_number_db6e5d -> modulo_9a2b7.value\n            -1 -> modulo_9a2b7.divisor\n            difference_5f4c66 -> modulo_9a2b7.result\n        } -> get_previous_number.handler\n        list_4d21a9 -> get_previous_number.items\n        get_previous_number.previous_number -> calculate_difference.first\n        calculate_difference.difference -> if_0a1f7.predicate\n        list_4d21a9 -> calculate_difference.list\n        1 -> calculate_difference.index\n        modulo_9a2b7.result -> difference_5f4c66\n        get_previous_number.output_list -> if_0a1f7.execute\n        -1 -> if_0a1f7.value\n        if_0a1f7.result -> output_d7e5ac\n        calculate_difference.count -> if_0a1f7.execute\n        2 -> calculate_difference.index\n        if_0a1f7.else -> calculate_difference.next\n    }\n\n    \n\n    instance(x: -59, y: 63) is_consecutive_e8b65d root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given list contains consecutive numbers or not.\") contains_consecutive {\n        in(x: -201, y: 1, name: \"list\") property(List) list_59e9d0\n\n        out(x: 1214, y: 22, name: \"output\") property(Bool) output_d2c6f3\n\n        instance(x: 76, y: -36, name: \"is_consecutive\") filter_f7fda5 root.Std_k98ojb.Iteration.Filter {}\n        list_59e9d0 -> filter_f7fda5.items\n        func() {\n            in(x: -113, y: 23, name: \"a\") property(Number) a_d1c8d6\n\n            out(x: 233, y: 34, name: \"\") property(Number) _bde2f4\n\n            instance(x: 90, y: 0) modulo_3e9db5 root.Std_k98ojb.Math.Modulo {}\n            a_d1c8d6 -> modulo_3e9db5.value\n            1 -> modulo_3e9db5.divisor\n            _bde2f4 -> modulo_3e9db5.result\n        } -> filter_f7fda5.handler\n        func() {\n            in(x: -25, y: 36, name: \"prev\") property(Number) prev_8d0a71\n\n            out(x: 114, y: 47, name: \"\") property(Number) _e6c59b\n\n            instance(x: 69, y: 35) subtract_67f9ac root.Std_k98ojb.Math.Sub {}\n            modulo_3e9db5.result -> subtract_67f9ac.first\n            a_d1c8d6 -> subtract_67f9ac.second\n            subtract_67f9ac.result -> _e6c59b\n        } -> filter_f7fda5.handler\n        filter_f7fda5.output_list -> output_d2c6f3\n    }\n\n    \n\n    instance(x: -38, y: 13) contains_consecutive_96d0a4 root.main.contains_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -208, y: 2, name: \"list\") property(List) list_c8d0e5\n\n        out(x: 1094, y: -1, name: \"output\") property(Bool) output_6b9c7f\n\n        instance(x: 95, y: 55) for_3bb2cb root.Std_k98ojb.Std.For {}\n        instance(x: 1010, y: 76) next_f8aee4 root.Std_k98ojb.Std.For {}\n        instance(x: 1096, y: -62, name: \"current\") property(Number) current_9e7ef3\n        instance(x: 1111, y: 73, name: \"prev\") property(Number) prev_5fcd95\n\n        out(x: 1000, y: 24, name: \"\") property(Bool) bool_4d8a2c\n        list_c8d0e5 -> for_3bb2cb.items\n        for_3bb2cb.index -> prev_5fcd95\n        next_f8aee4.index -> current_9e7ef3\n        list_c8d0e5 -> next_f8aee4.items\n        for_3bb2cb.done -> bool_4d8a2c\n        1 -> for_3bb2cb.reset\n        prev_5fcd95 -> for_3bb2cb.item\n        current_9e7ef3 -> for_3bb2cb.next\n        current_9e7ef3 -> next_f8aee4.item\n        prev_5fcd95 + 1 -> next_f8aee4.index\n        prev_5fcd95 + 1 -> next_f8aee4.next\n        list_c8d0e5[prev_5fcd95] -> for_3bb2cb.item\n        for_3bb2cb.onItem -> if_9c7b6f.execute\n        is_consecutive.predicate -> if_9c7b6f.predicate\n        for_3bb2cb.next -> next_f8aee4.index\n    }\n\n    \n\n    instance(x: 1, y: 0) is_consecutive_e60d5e root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive {\n        in(x: -234, y: 25, name: \"list\") property(List) list_5d1e34\n\n        out(x: 1169, y: -21, name: \"output\") property(Bool) output_6a99c7\n\n        instance(x: 109, y: 55) for_0f7fb root.Std_k98ojb.Std.For {}\n        list_5d1e34 -> for_0f7fb.items\n        func() {\n            in(x: -192, y: 59, name: \"i\") property(Number) i_3a2dd4\n\n            out(x: 1146, y: 23, name: \"\") property(Number) diff_98c9ab\n\n            instance(x: 0, y: 34) count_f1e5d7 root.Std_k98ojb.Std.Count {}\n            list_5d1e34 -> count_f1e5d7.items\n            i_3a2dd4 -> for_0f7fb.index\n            for_0f7fb.item -> diff_98c9ab\n            2 -> diff_98c9ab\n        } -> for_0f7fb.handler\n        instance(x: 111, y: -45) equal_ba5e44 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 215, y: 42) if_8d3ce1 root.Std_k98ojb.Std.If {}\n        diff_98c9ab -> for_0f7fb.item\n        i_3a2dd4 -> equal_ba5e44.left\n        for_0f7fb.item -> equal_ba5e44.right\n        for_0f7fb.index -> if_8d3ce1.predicate\n        for_0f7fb.onItem -> if_8d3ce1.execute\n        equal_ba5e44.result -> if_8d3ce1.predicate\n        if_8d3ce1.else -> for_0f7fb.next\n        for_0f7fb.index -> if_8d3ce1.new_value\n    }\n\n    \n\n    instance(x: 83, y: -31) has_consecutive_b0b4a9 root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") conseq {\n        in(x: -201, y: 2, name: \"list\") property(List) list_5e89f3\n\n        out(x: 1084, y: -1, name: \"output\") property(Bool) output_a8c6d4\n\n        instance(x: 94, y: -28) count_93bfb9 root.Std_k98ojb.Std.Count {}\n        list_5e89f3 -> count_93bfb9.items\n        count_93bfb9.reset -> true_86a2bc\n        list_5e89f3 -> count_93bfb9.items\n        count_93bfb9.count -> conseq_counter\n        func() {\n            in(x: -11, y: 46, name: \"current\") property(Number) current_97c7d6\n\n            out(x: 118, y: 57, name: \"\") property(Number) next_5e95ad\n\n            instance(x: 89, y: 44) sub_74f0b8 root.Std_k98ojb.Math.Sub {}\n            list_5e89f3 -> sub_74f0b8.items\n            current_97c7d6 -> sub_74f0b8.first\n            next_5e95ad -> sub_74f0b8.second\n        } -> count_93bfb9.handler\n        conseq_counter -> count_93bfb9.count\n        list_5e89f3 -> count_93bfb9.items\n        true_86a2bc -> output_a8c6d4\n        next_5e95ad -> output_a8c6d4\n    }\n\n    \n\n    instance(x: -59, y: 67) conseq_9aa2df root.main.conseq {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -227, y: 4, name: \"list\") property(List) list_1e9f0a\n\n        out(x: 1005, y: -2, name: \"output\") property(Bool) output_b7b8c3\n\n        instance(x: 22, y: 13) filter_f6d4ef root.Std_k98ojb.Query.Filter {}\n        instance(x: 114, y: 33) not_87fbb5 root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -103, y: -15, name: \"current\") property(Number) current_8df7a9\n\n            out(x: 1130, y: -18, name: \"\") property(Number) _difference_4e3f6d\n\n            instance(x: 90, y: 24) sub_0c2f28 root.Std_k98ojb.Math.Sub {}\n            current_8df7a9 -> sub_0c2f28.first\n            -1 -> sub_0c2f28.second\n            sub_0c2f28.result -> _difference_4e3f6d\n        } -> filter_f6d4ef.handler\n        list_1e9f0a -> filter_f6d4ef.items\n        not_87fbb5.input -> _difference_4e3f6d\n        filter_f6d4ef.result -> current_8df7a9\n        func() {\n            in(x: -69, y: 38, name: \"current\") property(Number) current_b93b5c\n\n            out(x: 1111, y: -26, name: \"\") property(Number) _difference_4e3f6d\n\n            instance(x: 70, y: 44) sub_0c2f28 root.Std_k98ojb.Math.Sub {}\n            current_b93b5c -> sub_0c2f28.first\n            -1 -> sub_0c2f28.second\n            sub_0c2f28.result -> _difference_4e3f6d\n        } -> filter_f6d4ef.handler\n        list_1e9f0a -> filter_f6d4ef.items\n        not_87fbb5.input -> _difference_4e3f6d\n        filter_f6d4ef.result -> current_b93b5c\n        func() {\n            in(x: -100, y: 40, name: \"current\") property(Number) current_d85a2d\n\n            out(x: 1130, y: -18, name: \"\") property(Number) _difference_4e3f6d\n\n            instance(x: 70, y: 44) sub_0c2f28 root.Std_k98ojb.Math.Sub {}\n            current_d85a2d -> sub_0c2f28.first\n            -1 -> sub_0c2f28.second\n            sub_0c2f28.result -> _difference_4e3f6d\n        } -> filter_f6d4ef.handler\n        list_1e9f0a -> filter_f6d4ef.items\n        not_87fbb5.input -> _difference_4e3f6d\n        filter_f6d4ef.result -> current_d85a2d\n        if_7c284f.predicate -> output_b7b8c3\n    }\n\n    \n\n    instance(x: -44, y: 0) is_consecutive_9cd41b root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: 3, y: -14, name: \"main_list\") property(List) main_list_4a5e6f\n        in(x: 4, y: -44, name: \"sublist\") property(List) sublist_d9c9d2\n\n        out(x: 1071, y: -29, name: \"continue\") trigger() continue_0ad3db\n        out(x: 964, y: 26, name: \"output\") property(Bool) output_4a6f5e\n\n        setter(x: 0, y: 0, name: \"setter_a1d8c9\") setter_a1d8c9 = index\n        instance(x: -42, y: 20) for_34cafe root.Std_k98ojb.Std.For {}\n        getter(x: 1085, y: 28, name: \"getter_b3a1bb\") getter_b3a1bb = index\n        setter_a1d8c9.continue -> for_34cafe.reset\n        main_list_4a5e6f -> for_34cafe.items\n        sublist_d9c9d2 -> for_34cafe.items\n        -1 -> setter_a1d8c9.new_value\n        for_34cafe.done -> continue_0ad3db\n        getter_b3a1bb.value -> output_4a6f5e\n    }\n\n    \n\n    instance(x: 22, y: 105) is_sublist_98d15b root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -245, y: 1, name: \"main_list\") property(List) main_list_4f8e43\n        in(x: 106, y: -63, name: \"sublist\") property(List) sublist_97c2d9\n\n        out(x: 1017, y: 40, name: \"continue\") trigger() continue_3eb1a0\n        out(x: 1084, y: 74, name: \"output\") property(Number) output_f1f8bb\n\n        instance(x: -19, y: 27) is_sublist_b36c32 root.Std_k98ojb.List.IsSubset {}\n        main_list_4f8e43 -> is_sublist_b36c32.main\n        sublist_97c2d9 -> is_sublist_b36c32.subset\n        func() {\n            in(x: -104, y: 27, name: \"elem\") property(Number) elem_66b5f7\n\n            out(x: 1093, y: 39, name: \")index\" property(Number) index_f1f8bb\n\n            instance(x: 0, y: 0) count_a95e45 root.Std_k98ojb.Std.Count {}\n            sublist_97c2d9 -> count_a95e45.items\n            count_a95e45.count -> index_f1f8bb\n        } -> is_sublist_b36c32.handler\n    }\n\n    \n\n    instance(x: -29, y: 89) is_sublist_d6a3b7 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -509, y: 2, name: \"mainList\") property(List) mainList_0df4d1\n        in(x: -514, y: -34, name: \"subList\") property(List) subList_ae6c5f\n\n        out(x: 1363, y: -28, name: \"continue\") trigger() continue_2b8a3b\n        out(x: 1289, y: -35, name: \"output\") property(Bool) output_e7ed49\n\n        instance(x: 0, y: 0) map_bf5e6c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1083, y: -41) for_1a2d8f root.Std_k98ojb.Std.For {}\n        instance(x: 1038, y: -38) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1144, y: 32) if_7c284f root.Std_k98ojb.Std.If {}\n        setter(x: 0, y: 0, name: \"setter_5a2d37\") setter_5a2d37 = index\n        instance(x: 1096, y: -47) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1141, y: 34) not_equal_84e0f9 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 1154, y: -41) list_slice_5c7a2f root.Std_k98ojb.List.Slice {}\n        instance(x: 1093, y: -48) sub_list_6d8d24 root.Std_k98ojb.List.Slice {}\n\n        mainList_0df4d1 -> map_bf5e6c.items\n        subList_ae6c5f -> contains_32727d.item\n        for_1a2d8f.index -> setter_5a2d37.new_value\n        sub_list_6d8d24.start -> list_slice_5c7a2f.start\n        sub_list_6d8d24.end -> list_slice_5c7a2f.end\n        contains_32727d.is_contained -> not_equal_84e0f9.input\n        mainList_0df4d1 -> sub_list_6d8d24.items\n        equal_aabb6e.result -> if_7c284f.predicate\n        for_1a2d8f.item -> if_7c284f.right\n        map_bf5e6c.output_list -> output_e7ed49\n        not_equal_84e0f9.result -> is_sublist.output\n    }\n\n    \n\n    instance(x: -44, y: 529) is_sublist_3b1a15 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -215, y: 46, name: \"main_list\") property(List) list_3d4f5e\n        in(x: -222, y: 2, name: \"sublist\") property(List) sublist_ba0c25\n\n        out(x: 1049, y: 30, name: \"output\") property(Bool) output_a1dd46\n\n        instance(x: 0, y: 0) for_0d7f4b root.Std_k98ojb.Std.For {}\n        instance(x: -59, y: 40) contains_f6c91e root.Std_k98ojb.List.Contains {}\n        instance(x: 100, y: 28) equal_3a2bc9 root.Std_k98ojb.Logic.Equal {}\n        function_1b5fbb root.Std_k98ojb.Std.If {}\n\n        list_3d4f5e -> for_0d7f4b.items\n        sublist_ba0c25 -> contains_f6c91e.list\n        contains_f6c91e.is_contained -> equal_3a2bc9.predicate\n        function_1b5fbb.execute -> contains_f6c91e.item\n    }\n\n    \n\n    instance(x: 114, y: -55) is_sublist_dbf8df root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -217, y: 15, name: \"main_list\") property(List) main_list_d0f1e4\n        in(x: -245, y: 38, name: \"sublist\") property(List) sublist_2d9f7d\n\n        out(x: 1295, y: 40, name: \"continue\") trigger() continue_6c98ef\n        out(x: 1348, y: 26, name: \"output\") property(Bool) output_f77e3b\n\n        instance(x: -13, y: -15, name: \"for_each_item\") for_0d86a2 root.Std_k98ojb.Iteration.For {}\n        instance(x: 253, y: -11, name: \"index_of_item\") index_of_item_4c5f8e root.Std_k98ojb.List.IndexOf {}\n        instance(x: 346, y: 25) equal_0cd9ff root.Std_k98ojb.Logic.Equal {}\n        instance(x: 446, y: -28) if_e1d3a2 root.Std_k98ojb.Std.If {}\n        instance(x: 549, y: 38) list_at_5c3f4e root.Std_k98ojb.List.At {}\n        instance(x: 648, y: 30) contains_a7a0e9 root.Std_k98ojb.List.Contains {}\n        for_0d86a2.onItem -> if_e1d3a2.execute\n        main_list_d0f1e4 -> for_0d86a2.items\n        sublist_2d9f7d -> index_of_item_4c5f8e.list\n        list_at_5c3f4e.value -> contains_a7a0e9.item\n        contains_a7a7eb -> output_f77e3b\n        for_0d86a2.index -> equal_0cd9ff.left\n        sublist_2d9f7d -> equal_0cd9ff.right\n        if_e1d3a2.then -> continue_6c98ef\n        index_of_item_4c5f8e.result -> output_f77e3b\n        for_0d86a2.index -> contains_a7a7eb\n    }\n\n    \n\n    instance(x: 102, y: -16) is_sublist_e63bf1 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -253, y: 1, name: \"main_list\") property(List) list_3fdd21\n        in(x: -246, y: 0, name: \"sublist_list\") property(List) list_a9c4ab\n\n        out(x: 1898, y: 39, name: \"output\") property(Bool) output_eb5e2a\n\n        instance(x: 19, y: 17) contains_6d2f67 root.Std_k98ojb.List.Contains {}\n        list_a9c4ab -> contains_6d2f67.item\n        list_3fdd21 -> contains_6d2f67.list\n        contains_6d2f67.is_contained -> output_eb5e2a\n    }\n\n    \n\n    instance(x: 0, y: -1) is_sublist_a7a9a4 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: 0, y: -1, name: \"mainList\") property(List) mainList_9d6e41\n        in(x: 2, y: -12, name: \"sublist\") property(List) sublist_a5f7c4\n\n        out(x: 1208, y: -106, name: \"continue\") trigger() continue_ebfaa3\n        out(x: 1040, y: -19, name: \"output\") property(Bool) output_2eef67\n\n        instance(x: 18, y: -5) count_c1c9d8 root.Std_k98ojb.Std.Count {}\n        count_c1c9d8.reset -> sublist_a5f7c4.isEmpty\n        count_c1c9d8.count -> sublist_a5f7c4.length\n        mainList_9d6e41 -> count_c1c9d8.items\n        instance(x: 109, y: -15) list_slice_0bba42 root.Std_k98ojb.List.Slice {}\n        sublist_a5f7c4 -> list_slice_0bba42.slice\n        list_slice_0bba42.start -> count_c1c9d8.value\n        instance(x: 109, y: -15) contains_0e7f70 root.Std_k98ojb.List.Contains {}\n        sublist_a5f7c4 -> contains_0e7f70.item\n        count_c1c9d8.value -> contains_0e7f70.search\n        contains_0e7f70.is_contained -> output_2eef67\n    }\n\n    \n\n    instance(x: -64, y: 547) is_sublist_5eb4a3 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -219, y: 0, name: \"main_list\") property(List) main_list_9e2d84\n        in(x: -221, y: 1, name: \"sublist\") property(List) sublist_ebd7c5\n\n        out(x: 1273, y: 39, name: \"output\") property(Bool) output_d6aee3\n\n        instance(x: 0, y: 0) eq_9e38f8 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -17, y: 1) if_7c284f root.Std_k98ojb.Std.If {}\n        setter(x: 0, y: 0, name: \"setter_6e7b4e\") setter_6e7b4e = index\n        getter(x: 13, y: -109, name: \"getter_84fbbe\") getter_84fbbe = main_list_9e2d84.length\n        setter(x: 20, y: -105, name: \"setter_7e2b42\") setter_7e2b42 = index\n        instance(x: 0, y: 1) eq_e6f33c root.Std_k98ojb.Logic.Equal {}\n        instance(x: -13, y: -107) if_7c284f root.Std_k98ojb.Std.If {}\n        setter_6e7b4e.continue -> eq_e6f33c.execute\n        main_list_9e2d84 -> eq_e6f33c.left\n        sublist_ebd7c5 -> eq_e6f33c.right\n        eq_e6f33c.result -> if_7c284f.predicate\n        if_7c284f.else -> setter_7e2b42.execute\n        main_list_9e2d84.length -> setter_7e2b42.new_value\n        sublist_ebd7c5.length -> eq_e6f33c.gen_0\n    }\n\n    \n\n    instance(x: 0, y: -4) is_sublist_b8cd34 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 17, name: \"main_list\") property(List) main_list_8e1f0b\n        in(x: -306, y: 27, name: \"sublist\") property(List) sublist_ba66d2\n\n        out(x: 1133, y: -31, name: \"continue\") trigger() continue_18cdd5\n        out(x: 1014, y: 17, name: \"output\") property(Number) output_c8f4a1\n\n        instance(x: 0, y: 0) for_07d9e3 root.Std_k98ojb.Std.For {}\n        instance(x: -296, y: 55) is_equal_a2ca57 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 10, y: 19) if_f7c63a root.Std_k98ojb.Std.If {}\n        for_07d9e3.reset -> continue_18cdd5\n        main_list_8e1f0b -> for_07d9e3.items\n        sublist_ba66d2 -> for_07d9e3.items\n        execute_18cdd5 -> for_07d9e3.execute\n        0 -> for_07d9e3.index\n        is_equal_a2ca57.result -> if_f7c63a.predicate\n        main_list_8e1f0b -> is_equal_a2ca57.left\n        sublist_ba66d2 -> is_equal_a2ca57.right\n        for_07d9e3.onItem -> if_f7c63a.execute\n        if_f7c63a.else -> for_07d9e3.next\n        if_f7c63a.then -> continue_18cdd5\n    }\n\n    \n\n    instance(x: 0, y: -35) is_sublist_8f23b1 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -531, y: 3, name: \"main_list\") property(List) main_list_4f1e77\n        in(x: -219, y: -13, name: \"sublist\") property(List) sublist_7c6a2b\n\n        out(x: 1269, y: -109, name: \"output\") property(Bool) output_8d08da\n\n        instance(x: 0, y: 0) contains_e87c4e root.Std_k98ojb.List.Contains {}\n        main_list_4f1e77 -> contains_e87c4e.list\n        sublist_7c6a2b -> contains_e87c4e.item\n        func() {\n            in(x: -30, y: 0, name: \"index\") property(Number) index_8d36e3\n\n            out(x: 705, y: 49, name: \")\") property(Number) index_7f5dfb\n\n            instance(x: 23, y: 46) eq_d9d6db root.Std_k98ojb.Logic.Equal {}\n            sublist_7c6a2b -> eq_d9d6db.left\n            main_list_4f1e77 -> eq_d9d6db.right\n            index_8d36e3 -> eq_d9d6db.value\n            eq_d9d6db.result -> output_8d08da\n        } -> contains_e87c4e.handler\n        contains_e87c4e.is_contained -> is_sublist.predicate\n    }\n\n    \n\n    instance(x: -341, y: 26) is_sublist_b1a0cc root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: 3, y: -16, name: \"list\") property(List) list_4a9d65\n\n        out(x: 2, y: -44, name: \"missing\") property(Number) missing_f6e1c8\n\n        instance(x: 0, y: 0) find_missing_a3fbd root.Std_k98ojb.Iteration.Find {}\n        list_4a9d65 -> find_missing_a3fbd.items\n        func() {\n            in(x: -32, y: 21, name: \"num\") property(Number) num_f2c7f0\n\n            out(x: 2, y: 28, name: \"\") property(Bool) bool_5a4b38\n\n            instance(x: 1, y: 25) sub_e6d9e3 root.Std_k98ojb.Math.Sub {}\n            1 -> sub_e6d9e3.first\n            list_4a9d65[0] -> sub_e6d9e3.second\n            sub_e6d9e3.result -> num_f2c7f0\n        } -> find_missing_a3fbd.predicate\n        find_missing_a3fbd.item -> missing_f6e1c8\n    }\n\n    \n\n    instance(x: 17, y: -36) find_smallest_missing_5a4d44 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -234, y: 0, name: \"list\") property(List) list_3e4d5a\n\n        out(x: 1358, y: 29, name: \"smallest\") property(Number) smallest_7f91b6\n\n        instance(x: -318, y: -21, name: \"start_index\") Count start_count {}\n        instance(x: 1151, y: 19, name: \"current_number\") get_item current_get {}\n        instance(x: 1134, y: 45, name: \"next_number\") next_number next_num {}\n        instance(x: -304, y: 43, name: \"smallest_missing\") set_value smallest_set {}\n        instance(x: -315, y: 48, name: \"continue\") continue_85bb28\n\n        start_count.reset -> current_get.index\n        list_3e4d5a -> current_get.items\n        current_get.item -> next_num.item\n        next_num.next -> smallest_missing.item\n        smallest_set.value -> smallest_7f91b6\n        0 -> next_num.new_value\n        -1 -> continue_85bb28.continue\n        start_count.count -> continue_85bb28.reset\n    }\n\n    \n\n    instance(x: -288, y: 523) find_smallest_missing_a4d3c8 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -246, y: 2, name: \"list\") property(List) list_c1f5b0\n\n        out(x: 1238, y: -11, name: \"missing_num\") property(Number) missing_num_7c6e9a\n\n        instance(x: 12, y: 10) for_0d98d5 root.Std_k98ojb.Std.For {}\n        instance(x: 107, y: 18) equal_f2f3fa root.Std_k98ojb.Logic.Equal {}\n        instance(x: 117, y: -67) if_ebbf9a root.Std_k98ojb.Std.If {}\n        instance(x: 100, y: 23) next_6e7d4a root.Std_k98ojb.Std.For {}\n        instance(x: 92, y: 27) count_86de8c root.Std_k98ojb.Std.Count {}\n        list_c1f5b0 -> for_0d98d5.items\n        missing_num_7c6e9a -> next_6e7d4a.new_value\n\n        instance(x: -103, y: 22) generate_range_4ec8df root.Std_k98ojb.List.GenerateRange {}\n        list_c1f5b0 -> generate_range_4ec8df.from\n        1 -> generate_range_4ec8df.to\n        generate_range_4ec8df.list -> for_0d98d5.items\n    }\n\n    \n\n    instance(x: -76, y: 56) find_smallest_missing_b9f4c2 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -255, y: 30, name: \"list\") property(List) list_ba9f8d\n\n        out(x: 1423, y: -38, name: \"missing\") property(Number) missing_7c1e56\n\n        instance(x: 23, y: 0) count_c0bf6b root.Std_k98ojb.Std.Count {}\n        instance(x: 101, y: 28) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 139, y: -18) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 191, y: 19) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"n+1\"\n        }\n        instance(x: 193, y: 33) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        data_instance(x: -17, y: -14) data_bc9c4d  = [0]\n        list_ba9f8d -> for_8cb3f6.items\n        count_c0bf6b.reset -> for_8cb3f6.reset\n        for_8cb3f6.index -> sub_852f2e.first\n        data_bc9c4d -> sub_852f2e.second\n        1 -> sub_852f2e.second\n        list_ba9f8d[0] -> expression_b720d7.gen_0\n        expression_b720d7.result -> sub_852f2e.first\n        for_8cb3f6.item -> if_07b8c7.left\n        data_bc9c4d -> if_07b8c7.right\n        1 -> if_07b8c7.right\n        expression_b720d7.result -> sub_852f2e.first\n        for_8cb3f6.next -> if_07b8c7.execute\n        if_07b8c7.value -> output_7c1e56\n        count_c0bf6b.count -> missing_7c1e56\n    }\n\n    \n\n    instance(x: 195, y: -22) find_missing_9d2f5b root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -249, y: 15, name: \"list\") property(List) list_9d74a1\n\n        out(x: 1137, y: -5, name: \"missing_number\") property(Number) missing_number_ae56f3\n        out(x: -31, y: 22, name: \"output\") trigger() output_8ddcf2\n\n        instance(x: 0, y: 0) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 0, y: 0) count_c94d45 root.Std_k98ojb.Std.Count {}\n        instance(x: -33, y: 52) if_7c284f root.Std_k98ojb.Std.If {}\n        instance(x: 134, y: 29) less_than_d6c8a1 root.Std_k98ojb.Math.LessThan {}\n        instance(x: 0, y: 0) list_slice_c2d5e9 root.Std_k98ojb.List.Slice {}\n        instance(x: -16, y: 30) not_equal_85f4dd root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 1, y: 29) subtract_6c7a54 root.Std_k98ojb.Math.Subtract {}\n        list_slice_c2d5e9.list -> list_9d74a1\n        firstitem_870503.item -> less_than_d6c8a1.left\n        count_c94d45.value -> not_equal_85f4dd.right\n        subtract_6c7a54.result -> missing_number_ae56f3\n        if_7c284f.value -> output_8ddcf2\n    }\n\n    \n\n    instance(x: 97, y: -11) find_smallest_missing_f0d5f1 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -213, y: 3, name: \"list\") property(List) list_19b0d9\n\n        out(x: 1117, y: -14, name: \"missing_number\") property(Number) missing_number_4e1df5\n        instance(x: 89, y: 40) for_2a60c6 root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: 54) count_c8e4d3 root.Std_k98ojb.Std.Count {}\n        instance(x: 124, y: -17) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 105, y: 22) if_7c284f root.Std_k98ojb.Std.If {}\n        setter(x: 0, y: 0, name: \"setter_6e7b4e\") setter_6e7b4e = index\n        getter(x: 305, y: -18, name: \"getter_84fbbe\") getter_84fbbe = count\n        instance(x: 341, y: -9) add_e8f2d1 root.Std_k98ojb.Math.Add {}\n        list_19b0d9 -> for_2a60c6.items\n        1 -> for_2a60c6.index\n        missing_number_4e1df5 -> count_c8e4d3.count\n        missing_number_4e1df5 -> add_e8f2d1.first\n        list_19b0d9[missing_number_4e1df5-1] -> add_e8f2d1.second\n        add_e8f2d1.result -> count_c8e4d3.count\n        equal_aabb6e.result -> if_7c284f.predicate\n        for_2a60c6.item -> equal_aabb6e.left\n        list_19b0d9[missing_number_4e1df5] -> equal_aabb6e.right\n        for_2a60c6.index -> setter_6e7b4e.new_value\n    }\n\n    \n\n    instance(x: 102, y: 539) find_smallest_missing_e8f2d1 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: 5, y: 218, name: \"list\") property(List) list_d128d8\n        in(x: -252, y: -11, name: \"execute\") trigger() execute_467172\n        out(x: 1217, y: 29, name: \"continue\") trigger() continue_075eef\n\n        instance(x: 340, y: 60) for_065883 root.Std_k98ojb.Std.For {}\n        getter(x: 704, y: 170, name: \"getter_84fbbe\") getter_84fbbe = index\n        setter(x: 955, y: -158, name: \"setter_7e2b42\") setter_7e2b42 = index\n        instance(x: 551, y: -105) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        setter_6e7b4e.continue -> for_065883.reset\n        list_d128d8 -> for_065883.items\n        execute_467172 -> setter_6e7b4e.execute\n        -1 -> setter_6e7b4e.new_value\n        for_065883.done -> continue_075eef\n        getter_84fbbe.value -> output_3ae271\n        list_d128d8 -> equal_aabb6e.items\n        equal_aabb6e.result -> if_7c284f.predicate\n        if_7c284f.else -> for_065883.next\n        if_7c284f.then -> setter_7e2b42.execute\n        setter_7e2b42.continue -> continue_075eef\n        for_065883.index -> setter_7e2b42.new_value\n\n        instance(x: 0, y: 0, name: \"setter_6e7b4e\") setter_6e7b4e = index\n        instance(x: -9, y: -70) greaterthan_d8ba41 root.Std_k98ojb.Math.GreaterThan {}\n        list_d128d8 -> greaterthan_d8ba41.left\n        1 -> greaterthan_d8ba41.right\n        greaterthan_d8ba41.result -> setter_6e7b4e.input\n\n        instance(x: -341, y: 521) if_e19a62 root.Std_k98ojb.Std.If {}\n        list_d128d8 -> if_e19a62.items\n        greaterthan_d8ba41.result -> if_e19a62.predicate\n        if_e19a62.then -> setter_6e7b4e.execute\n        -1 -> setter_6e7b4e.new_value\n        for_065883.index -> setter_6e7b4e.value\n        greaterthan_d8ba41.result -> output_3ae271\n\n    }\n\n    \n\n    instance(x: 777, y: 760) find_smallest_missing_6e6bfd root.main.find_smallest_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -245, y: 0, name: \"list\") property(List) list_5f6a55\n\n        out(x: 1038, y: -1, name: \"missing\") property(Number) missing_a0db9d\n\n        instance(x: 121, y: 33) count_2b65e3 root.Std_k98ojb.Std.Count {}\n        instance(x: 123, y: -4, name: \"target\") property(Number) target_d0f8ac\n        instance(x: 141, y: 55) for_0a83c9 root.Std_k98ojb.Std.For {}\n        instance(x: 144, y: 52) if_7d2ce1 root.Std_k98ojb.Std.If {}\n        instance(x: 155, y: -17, name: \"continue\") trigger() continue_b8af0f\n        instance(x: 166, y: 42) equal_86a4e5 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 169, y: -27, name: \"index\") property(Number) index_d2d7c3\n\n        count_2b65e3.reset -> for_0a83c9.reset\n        list_5f6a55 -> for_0a83c9.items\n        target_d0f8ac -> equal_86a4e5.left\n        for_0a83c9.item -> equal_86a4e5.right\n        count_2b65e3.count -> index_d2d7c3\n        if_7d2ce1.predicate -> equal_86a4e5.result\n        target_d0f8ac - 1 -> for_0a83c9.index\n        equal_86a4e5.result -> if_7d2ce1.execute\n        for_0a83c9.item -> if_7d2ce1.then\n        count_2b65e3.count -> target_d0f8ac\n        if_7d2ce1.else -> continue_b8af0f\n        for_0a83c9.index -> equal_86a4e5.left\n        equal_86a4e5.result -> missing_a0db9d\n        missing_a0db9d.value -> target_d0f8ac - count_2b65e3.count + 1\n    }\n\n    \n\n    instance(x: 103, y: 768) find_smallest_missing_b94fdd root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -261, y: 44, name: \"list\") property(List) list_9d1c3e\n\n        out(x: 1008, y: 25, name: \"missing\") property(Number) missing_7fde34\n\n        instance(x: 0, y: 0, name: \"first_item\") property(Number) firstitem_6b2a21\n        instance(x: 0, y: -17, name: \"difference\") property(Number) diff_5c1e4d\n        instance(x: 0, y: 46, name: \"next_diff\") property(Number) nextdiff_9f38aa\n\n        setter(x: 0, y: 0, name: \"setter_d2bda7\") setter_d2bda7 = firstitem_6b2a21\n        instance(x: -10, y: -17, name: \"subtracter_c8bbd5\") subtracter_c8bbd5 = diff_5c1e4d\n        instance(x: 0, y: 46, name: \"divisor_e7f3b9\") divisor_e7f3b9 = nextdiff_9f38aa\n        instance(x: -10, y: -17, name: \"quotient_a8a5c4\") quotient_a8a5c4 = diff_5c1e4d\n\n        list_9d1c3e -> firstitem_6b2a21.items\n        firstitem_6b2a21.item -> subtracter_c8bbd5.first\n        nextdiff_9f38aa.list -> quotient_a8a5c4.second\n        0 -> divisor_e7f3b9.value\n        diff_5c1e4d.result -> subtracter_c8bbd5.first\n        firstitem_6b2a21.item -> quotient_a8a5c4.second\n        nextdiff_9f38aa.list -> missing_7fde34\n    }\n\n    \n\n    instance(x: 0, y: -12) find_smallest_missing_1e3ae9 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -228, y: 1, name: \"list\") property(List) list_3b8f0a\n        out(x: 1055, y: 28, name: \"output\") property(Number) output_2c6e9d\n\n        instance(x: 13, y: 21) count_4a34d7 root.Std_k98ojb.Std.Count {}\n        instance(x: 1090, y: -85, name: \"target\") property(Number) target_c3fdd1\n        instance(x: 1119, y: 23) expression_1c5e40 root.Std_k98ojb.Math.Expression {\n            expression: \"(n + 1)\"\n        }\n        instance(x: 1024, y: -66) if_0d7a14 root.Std_k98ojb.Std.If {}\n        instance(x: 1132, y: 18) sub_3c76e5 root.Std_k98ojb.Math.Sub {}\n        list_3b8f0a -> count_4a34d7.items\n        target_c3fdd1 -> expression_1c5e40.gen_0\n        expression_1c5e40.result -> sub_3c76e5.first\n        sub_3c76e5.result -> if_0d7a14.predicate\n        count_4a34d7.reset -> if_0d7a14.execute\n        list_3b8f0a[0] + 1 -> target_c3fdd1\n        count_4a34d7.count -> output_2c6e9d\n    }\n\n    \n\n    instance(x: -92, y: 55) find_smallest_missing_e3d5d9 root.main.find_smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -261, y: 3, name: \"input\") property(String) input_9b4d36\n\n        out(x: 1107, y: -1, name: \"output\") property(String) output_f6a2e8\n\n        instance(x: 101, y: 0) replace_c5f2c3 root.Std_k98ojb.Strings.Replace {}\n        input_9b4d36 -> replace_c5f2c3.input\n        \", \".tostring() -> replace_c5f2c3.search\n        \":\" -> replace_c5f2c3.replace\n        replace_c5f2c3.output -> output_f6a2e8\n    }\n\n    \n\n    instance(x: -53, y: 44) replace_with_colon_63b0ba root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -234, y: 23, name: \"input\") property(String) input_1d5f8a\n\n        out(x: 1333, y: 59, name: \"output\") property(String) output_d7e4dd\n\n        instance(x: 0, y: 40) replace_c6b66f root.Std_k98ojb.Strings.Replace {}\n        input_1d5f8a -> replace_c6b66f.input\n        \" \" -> replace_c6b66f.search\n        \":\" -> replace_c6b66f.replace\n        replace_c6b66f.output -> output_d7e4dd\n    }\n\n    \n\n    instance(x: 0, y: 40) replace_special_chars_3d8bf2 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -201, y: 23, name: \"text\") property(String) text_5d9da6\n\n        out(x: 1334, y: 44, name: \"result\") property(String) result_b2b7c1\n\n        instance(x: 95, y: 30) replace_f3f8e3 root.Std_k98ojb.Strings.Replace {}\n        text_5d9da6 -> replace_f3f8e3.input\n        \", \". -> replace_f3f8e3.search\n        \":\" -> replace_f3f8e3.replace\n        replace_f3f8e3.result -> result_b2b7c1\n    }\n\n    \n\n    instance(x: -25, y: 57) replace_punctuation_6a5f50 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_characters {\n        in(x: -215, y: 6, name: \"string\") property(String) string_5a8f4d\n\n        out(x: 1101, y: -2, name: \"new_string\") property(String) new_string_e9c2e7\n\n        instance(x: 109, y: 12) replace_a3b6d0 root.Std_k98ojb.Strings.Replace {}\n        string_5a8f4d -> replace_a3b6d0.input\n        \",.\" -> replace_a3b6d0.search\n        \":\" -> replace_a3b6d0.replace\n        replace_a3b6d0.output -> new_string_e9c2e7\n    }\n\n    \n\n    instance(x: 342, y: 565) replace_characters_8f4a7d root.main.replace_characters {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -103, y: 0, name: \"input\") property(String) input_65a5d3\n\n        out(x: 1122, y: 30, name: \"output\") property(String) output_6f3c42\n\n        instance(x: 76, y: -10, name: \"replace_chars\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        replace_special_chars -> filter_c91965.items\n        func() {\n            in(x: -34, y: -5, name: \"char\") property(String) char_9f0d7a\n\n            out(x: 1294, y: -1, name: \"\") property(String) _out_58c2b9\n\n            instance(x: 82, y: -12) replace_f9dd8e root.Std_k98ojb.Strings.Replace {}\n            char_9f0d7a -> replace_f9dd8e.search\n            ':' -> replace_f9dd8e.replace\n            replace_f9dd8e.result -> _out_58c2b9\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> output_6f3c42\n    }\n\n    \n\n    instance(x: -92, y: 47) replace_special_chars_b5d7a4 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -202, y: 16, name: \"input\") property(String) input_a6a5b8\n\n        out(x: 1007, y: -12, name: \"output\") property(String) output_0f9c1e\n\n        instance(x: 59, y: -43) replace_2d3d33 root.Std_k98ojb.Strings.Replace {}\n        input_a6a5b8 -> replace_2d3d33.input\n        \",.\" -> replace_2d3d33.search\n        \":\" -> replace_2d3d33.replace\n        replace_2d3d33.output -> output_0f9c1e\n    }\n\n    \n\n    instance(x: 111, y: -5) replace_special_chars_1b4a6b root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -242, y: 3, name: \"string\") property(String) string_1a2f0b\n\n        out(x: 1059, y: 69, name: \"newString\") property(String) new_string_5c8d7e\n\n        instance(x: 121, y: -13) replace_c3bc94 root.Std_k98ojb.Strings.Replace {}\n        string_1a2f0b -> replace_c3bc94.input\n        \",.\" -> replace_c3bc94.search\n        \":\" -> replace_c3bc94.replace\n        replace_c3bc94.output -> new_string_5c8d7e\n    }\n\n    \n\n    instance(x: -58, y: 528) replace_special_chars_a9fdd6 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -193, y: 3, name: \"input\") property(String) input_5f1e43\n\n        out(x: 1050, y: 21, name: \"output\") property(String) output_4d2d17\n\n        instance(x: 108, y: 20) replace_a9a7b6 root.Std_k98ojb.Strings.Replace {}\n        replace_a9a7b6.search -> \" \"\n        replace_a9a7b6.replace -> \":\"\n        input_5f1e43 -> replace_a9a7b6.input\n        output_4d2d17 -> replace_a9a7b6.output\n\n        instance(x: 202, y: 22) replace_d0eb8c root.Std_k98ojb.Strings.Replace {}\n        replace_d0eb8c.search -> \",\"\n        replace_d0eb8c.replace -> \":\"\n        input_5f1e43 -> replace_d0eb8c.input\n        output_4d2d17 -> replace_d0eb8c.output\n\n        instance(x: 313, y: 24) replace_6ba9b5 root.Std_k98ojb.Strings.Replace {}\n        replace_6ba9b5.search -> \".\"\n        replace_6ba9b5.replace -> \":\"\n        input_5f1e43 -> replace_6ba9b5.input\n        output_4d2d17 -> replace_6ba9b5.output\n    }\n\n    \n\n    instance(x: 0, y: 0) replace_chars_d7a3eb root.main.replace_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -123, y: 2, name: \"input\") property(String) input_5e87b6\n\n        out(x: 1128, y: 7, name: \"output\") property(String) output_9f0c4a\n\n        instance(x: 102, y: -34, name: \"replace_space\") Strings.Replace {}\n        input_5e87b6 -> replace_space.input\n        replace_space.replace -> \":\"\n        replace_space.search -> [\",\", \".\", \" \"]\n        replace_space.output -> output_9f0c4a\n\n        instance(x: 104, y: -28) replace_comma() Strings.Replace {}\n        input_5e87b6 -> replace_comma.input\n        replace_comma.replace -> \":\"\n        replace_comma.search -> [\",\"]\n        replace_comma.output -> output_9f0c4a\n\n        instance(x: 105, y: -25) replace_dot() Strings.Replace {}\n        input_5e87b6 -> replace_dot.input\n        replace_dot.replace -> \":\"\n        replace_dot.search -> [\".\"]\n        replace_dot.output -> output_9f0c4a\n    }\n\n    \n\n    instance(x: -91, y: 70) replace_punctuation_d2d8da root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -305, y: 2, name: \"input\") property(String) input_0f5e21\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_3d4b7c\n\n        instance(x: 772, y: 76) replace_f6a5af root.Std_k98ojb.Strings.Replace {}\n        input_0f5e21 -> replace_f6a5af.input\n        \",.\" -> replace_f6a5af.search\n        \":\" -> replace_f6a5af.replace\n        replace_f6a5af.output -> output_3d4b7c\n    }\n\n    \n\n    instance(x: 118, y: -26) replace_special_chars_c1e63f root.main.replace_special_chars {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") same_chars {\n        in(x: -201, y: 3, name: \"string\") property(String) string_4a5d2f\n\n        out(x: 1028, y: -23, name: \"output\") property(Bool) output_ae9b25\n\n        instance(x: 0, y: 0) map_6c1ef3 root.Std_k98ojb.Iteration.Map {}\n        string_4a5d2f -> map_6c1ef3.items\n        func() {\n            in(x: -112, y: 12, name: \"char\") property(String) char_5f7e28\n\n            out(x: 439, y: -10, name: \"count\") property(Number) count_8a2b6c\n\n            instance(x: 97, y: 1) equal_e48d4a root.Std_k98ojb.Logic.Equal {}\n            char_5f7e28 -> equal_e48d4a.left\n            string_4a5d2f[0] -> equal_e48d4a.right\n            count_8a2b6c -> 1\n            equal_e48d4a.result -> count_8a2b6c\n        } -> map_6c1ef3.handler\n        if_7c284f.value -> output_ae9b25\n    }\n\n    \n\n    instance(x: -43, y: 530) same_chars_5dfdb5 root.main.same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -194, y: 28, name: \"input\") property(String) input_5f6a94\n\n        out(x: 0, y: 78, name: \"output\") property(Bool) output_35c3d2\n\n        instance(x: 98, y: 21) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: -109, y: 34) strings_lower_c54d43 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 305, y: 25) strings_contains_5f4df7 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 1068, y: 14) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        func() {\n            in(x: -20, y: -19, name: \"current\") property(Number) current_0d2aeb\n\n            out(x: 0, y: -19, name: \"\") property(Bool) _7dd980\n\n            instance(x: 95, y: 16) not_equal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            strings_lower_c54d43.input -> not_equal_7836b4.left\n            current_0d2aeb -> not_equal_7836b4.right\n            not_equal_7836b4.result -> _7dd980\n        } -> if_e19a62.handler\n        input_5f6a94 -> if_e19a62.input\n        strings_lower_c54d43.input -> all_same.input\n        strings_contains_5f4df7.input -> equal_aabb6e.left\n        current_0d2aeb -> equal_aabb6e.right\n        equal_aabb6e.result -> output_35c3d2\n        if_e19a62.then -> continue_cda95b\n        all_same.input -> strings_contains_5f4df7.item\n        strings_contains_5f4df7.is_contained -> not_equal_7836b4.input\n    }\n\n    \n\n    instance(x: 97, y: -23) all_same_fcd0d8 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") all_same {\n        in(x: -194, y: -0, name: \"string\") property(String) string_93a3a8\n\n        out(x: 107, y: 15, name: \"result\") property(Bool) result_e7c4eb\n\n        instance(x: 23, y: 0) map_5e9df1 root.Std_k98ojb.Iteration.Map {}\n        string_93a3a8 -> map_5e9df1.items\n        func() {\n            in(x: -20, y: 2, name: \"char\") property(Number) char_bf7c89\n\n            out(x: 108, y: -13, name: \"\") property(Bool) bool_a24b21\n\n            instance(x: 45, y: -3) tolower_5e6a4 root.Std_k98ojb.Strings.ToLower {}\n            char_bf7c89 -> tolower_5e6a4.input\n            tolower_5e6a4.output -> bool_a24b21\n        } -> map_5e9df1.handler\n        map_5e9df1.output_list -> result_e7c4eb\n    }\n\n    \n\n    instance(x: 0, y: 23) all_same_8d77cc root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters in a given string are same or not.\") all_characters_same {\n        in(x: -261, y: 14, name: \"input\") property(String) input_4d1e5a\n\n        out(x: 1036, y: -24, name: \"output\") property(Bool) output_2f0c7b\n\n        instance(x: 95, y: 26) count_9d3e8b root.Std_k98ojb.Std.Count {}\n        input_4d1e5a -> count_9d3e8b.items\n        count_9d3e8b.count -> output_2f0c7b\n    }\n\n    \n\n    instance(x: -19, y: 46) all_characters_same_70cd6f root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: -101, y: 0, name: \"input\") property(List) input_9f2e77\n\n        out(x: 196, y: -1, name: \"same\") property(Bool) same_abefb3\n\n        instance(x: 11, y: 36) setequal_c7a6c8 root.Std_k98ojb.Logic.Equal {}\n        input_9f2e77 -> setequal_c7a6c8.left\n        input_9f2e77 -> setequal_c7a6c8.right\n        same_abefb3 -> setequal_c7a6c8.result\n    }\n\n    \n\n    instance(x: -23, y: 29) all_characters_same_4d0bc5 root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -204, y: 36, name: \"str\") property(String) str_0a5f35\n\n        out(x: 1088, y: -22, name: \"output\") property(Bool) output_b2dd34\n        out(x: 1054, y: 19, name: \"continue\") trigger() continue_2f6d9b\n        out(x: 1020, y: 53, name: \"result\") property(Number) result_8c5f7e\n\n        instance(x: -123, y: -45, name: \"char\") property(String) char_d4e3a1\n        instance(x: -125, y: -36, name: \"index\") property(Number) index_d56b49\n\n        func() {\n            in(x: 0, y: 0, name: \"i\") property(Number) i_8f5d7c\n\n            out(x: 1, y: -3, name: \"\") property(Bool) bool_a35e13\n\n            instance(x: 108, y: 39) equal_b6e1d4 root.Std_k98ojb.Logic.Equal {}\n            char_d4e3a1 -> equal_b6e1d4.left\n            str_0a5f35 -> equal_b6e1d4.right\n            i_8f5d7c -> index_d56b49\n            0 -> equal_b6e1d4.index\n            equal_b6e1d4.result -> bool_a35e13\n        } -> is_all_same.handler\n        str_0a5f35 -> is_all_same.items\n        is_all_same.continue -> continue_2f6d9b\n        0 -> is_all_same.new_value\n    }\n\n    \n\n    instance(x: -64, y: 74) is_all_same_4f5c7b root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") same_chars {\n        in(x: -243, y: 30, name: \"input\") property(String) input_8f1a88\n\n        out(x: 0, y: 28, name: \"output\") property(Bool) output_b5c7d4\n\n        instance(x: 104, y: 59) map_a2e9cf root.Std_k98ojb.Iteration.Map {}\n        input_8f1a88 -> map_a2e9cf.items\n        func() {\n            in(x: -114, y: 43, name: \"char\") property(String) char_c3db7c\n\n            out(x: 26, y: 29, name: \"\") property(Number) count_5d3a36\n\n            instance(x: 74, y: 44) count_9b8d2e root.Std_k98ojb.List.Count {}\n            char_c3db7c -> count_9b8d2e.item\n            count_9b8d2e.value -> count_5d3a36\n        } -> map_a2e9cf.handler\n        map_a2e9cf.output_list -> output_b5c7d4\n    }\n\n    \n\n    instance(x: -48, y: 72) same_chars_6f1f45 root.main.same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether all the characters are same or not.\") all_same {\n        in(x: -202, y: 2, name: \"string\") property(String) string_1a8cd4\n\n        out(x: 1009, y: -10, name: \"result\") property(Bool) result_d98d0e\n\n        instance(x: 103, y: 22) map_f2330b root.Std_k98ojb.Iteration.Map {}\n        string_1a8cd4 -> map_f2330b.items\n        func() {\n            in(x: -198, y: 53, name: \"char\") property(Char) char_a7c8f3\n\n            out(x: 1029, y: 25, name: \"\") property(Bool) bool_6eb5d2\n\n            instance(x: 83, y: 47) equal_93a8e4 root.Std_k98ojb.Logic.Equal {}\n            char_a7c8f3 -> equal_93a8e4.left\n            string_1a8cd4[0] -> equal_93a8e4.right\n            equal_93a8e4.result -> bool_6eb5d2\n        } -> map_f2330b.handler\n        map_f2330b.output_list -> result_d98d0e\n    }\n\n    \n\n    instance(x: 85, y: -23) all_same_8f86c9 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters in a given string are same or not.\") all_same {\n        in(x: -509, y: 38, name: \"string\") property(String) input_9e2d4b\n\n        out(x: 1128, y: -36, name: \"output\") property(Bool) output_f1f23a\n\n        instance(x: 34, y: 32) map_6c5dd5 root.Std_k98ojb.Iteration.Map {}\n        input_9e2d4b -> map_6c5dd5.items\n        func() {\n            in(x: -108, y: 63, name: \"char\") property(String) char_8f1d41\n\n            out(x: 1037, y: 28, name: \"\") property(Number) _count_f4e9a0\n\n            instance(x: 14, y: 58) count_b5cbb1 root.Std_k98ojb.Std.Count {}\n            char_8f1d41 -> count_b5cbb1.value\n        } -> map_6c5dd5.handler\n        map_6c5dd5.output_list -> output_f1f23a\n    }\n\n    \n\n    instance(x: 108, y: -55) all_same_4e66b0 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -191, y: 28, name: \"str\") property(String) str_6e7d8a\n\n        out(x: 0, y: 22, name: \"same\") property(Bool) same_1b9f66\n\n        instance(x: 95, y: -5) map_c3c25b root.Std_k98ojb.Iteration.Map {}\n        str_6e7d8a -> map_c3c25b.items\n        func() {\n            in(x: -129, y: 39, name: \"char\") property(String) char_bf0d4f\n\n            out(x: 1, y: -23, name: \"\") property(Number) bool_7e0a5d\n\n            instance(x: 93, y: 32) equal_c9c3dd root.Std_k98ojb.Logic.Equal {}\n            char_bf0d4f -> equal_c9c3dd.left\n            char_bf0d4f -> equal_c9c3dd.right\n            equal_c9c3dd.result -> bool_7e0a5d\n        } -> map_c3c25b.handler\n        map_c3c25b.output_list -> same_1b9f66\n    }\n\n    \n\n    instance(x: -62, y: 527) is_same_e2a4d6 root.main.is_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -229, y: 1, name: \"input\") property(String) input_9a5d64\n\n        out(x: 1068, y: -69, name: \"count\") property(Number) count_2e0b95\n\n        instance(x: 104, y: 27) map_3f6c38 root.Std_k98ojb.Iteration.Map {}\n        input_9a5d64 -> map_3f6c38.items\n        func() {\n            in(x: -233, y: -15, name: \"element\") property(String) element_0e8f47\n\n            out(x: 1284, y: 56, name: \"\") property(Number) _count_9a7b42\n\n            instance(x: 0, y: 16) is_numeric_c1d6c3 root.Std_k98ojb.Strings.IsNumeric {}\n            element_0e8f47 -> is_numeric_c1d6c3.input\n            is_numeric_c1d6c3.result -> _count_9a7b42\n        } -> map_3f6c38.handler\n        map_3f6c38.output_list -> count_digits.count\n    }\n\n    \n\n    instance(x: -46, y: 542) count_digits_b6e21a root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Count the number of digits in a given string.\") count_digits {\n        in(x: -243, y: 24, name: \"input\") property(String) input_8f6d4e\n\n        out(x: 1159, y: 19, name: \"output\") property(Number) output_f3a5fa\n\n        instance(x: 0, y: 27) filter_2b15ca root.Std_k98ojb.Query.Filter {}\n        list_instance(x: -249, y: -12, name: \"digits\") property(List) digits_e9db49\n        instance(x: 0, y: 45) map_c7f3e5 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 124, y: -22) length_0a1c42 root.Std_k98ojb.List.Length {}\n        instance(x: 234, y: -9) count_fbe4ea root.Std_k98ojb.Math.Count {}\n        digits_e9db49 -> map_c7f3e5.items\n        input_8f6d4e -> filter_2b15ca.input\n        length_0a1c42.length -> map_c7f3e5.output_list\n        map_c7f3e5.output_list -> count_fbe4ea.list\n        count_fbe4ea.result -> output_f3a5fa\n    }\n\n    \n\n    instance(x: 100, y: -14) count_digits_4c2d8b root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -234, y: 2, name: \"input\") property(String) input_acd6f3\n\n        out(x: 1341, y: -29, name: \"count\") property(Number) count_93e7a9\n\n        instance(x: 0, y: 0) map_5c8b35 root.Std_k98ojb.Iteration.Map {}\n        list_instance(x: -234, y: -12, name: \"digits\") property(List) digits_acd6f3\n        input_acd6f3 -> map_5c8b35.items\n\n        instance(x: 106, y: -20) length_7caeb9 root.Std_k98ojb.List.Length {}\n        digits_acd6f3 -> length_7caeb9.list\n        length_7caeb9.result -> count_93e7a9\n    }\n\n    \n\n    instance(x: 105, y: 53) map_5c8b35_c2fa root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts the number of digits in a given string.\") digit_count {\n        in(x: -215, y: 17, name: \"string\") property(String) str_5a3f6d\n\n        out(x: 345, y: 24, name: \"count\") property(Number) count_7e1b8c\n\n        instance(x: 10, y: 0) filter_f9dd45 root.Std_k98ojb.List.Filter {}\n        list_instance(x: -194, y: 15, name: \"digits\") property(List) digits_d4d3ad\n        instance(x: 83, y: 19) count_25c7f2 root.Std_k98ojb.List.Count {}\n        str_5a3f6d -> filter_f9dd45.list\n        filter_f9dd45.result -> count_25c7f2.items\n        func() {\n            in(x: -196, y: 18, name: \"elem\") property(Number) elem_93e0ae\n\n            out(x: 1, y: 13, name: \"\") property(Number) _1\n            out(x: 3, y: 8, name: \"\") property(Number) _2\n            out(x: 5, y: -7, name: \"\") property(Number) _3\n            out(x: 7, y: 35, name: \"\") property(Number) _4\n\n            instance(x: 0, y: 12) isnumeric_9a8d57 root.Std_k98ojb.Strings.IsNumeric {}\n            elem_93e0ae -> isnumeric_9a8d57.input\n            isnumeric_9a8d57.result -> _1\n        } -> filter_f9dd45.handler\n        digits_d4d3ad -> count_25c7f2.items\n        count_25c7f2.result -> count_7e1b8c\n    }\n\n    \n\n    instance(x: -44, y: 53) digit_count_e5a77c root.main.digit_count {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts the number of digits in a given string.\") count_digits {\n        in(x: -123, y: 13, name: \"str\") property(String) str_5ed1d6\n\n        out(x: 246, y: 69, name: \"count\") property(Number) count_9fba2c\n\n        instance(x: 92, y: -38) map_72b8a4 root.Std_k98ojb.Iteration.Map {}\n        str_5ed1d6 -> map_72b8a4.items\n        func() {\n            in(x: -141, y: -11, name: \"char\") property(String) char_d93f0e\n\n            out(x: 142, y: -23, name: \"\") property(Number) _count_bef3eb\n\n            instance(x: 83, y: -26) IsNumeric_f7c8dd root.Std_k98ojb.Strings.IsNumeric {}\n            char_d93f0e -> IsNumeric_f7c8dd.input\n            IsNumeric_f7c8dd.result -> _count_bef3eb\n        } -> map_72b8a4.handler\n        map_72b8a4.output_list -> count_9fba2c\n    }\n\n    \n\n    instance(x: -73, y: 74) count_digits_0d9f47 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -192, y: 23, name: \"input\") property(String) input_74a0d1\n\n        out(x: 345, y: 44, name: \"output\") property(Number) output_b7b3c9\n\n        instance(x: 109, y: 54) list_2e5f8d root.Std_k98ojb.List {\n            items: function() { return input_74a0d1.split(\"\") }\n        }\n        instance(x: -41, y: 71) filter_4c7dc3 root.Std_k98ojb.Query.Filter {}\n        instance(x: 202, y: 54) count_f9f8a6 root.Std_k98ojb.Std.Count {}\n        input_74a0d1 -> filter_4c7dc3.where\n        filter_4c7dc3.output_list -> count_f9f8a6.items\n        false -> count_f9f8a6.reset\n    }\n\n    \n\n    instance(x: 191, y: -20) count_digits_b9e5d0 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -231, y: 2, name: \"input\") property(String) input_f1f4a8\n\n        out(x: 1149, y: 19, name: \"count\") property(Number) count_6e7c0d\n\n        instance(x: 15, y: 10) len_63b71f root.Std_k98ojb.List.Length {}\n        input_f1f4a8 -> len_63b71f.input\n        len_63b71f.result -> count_6e7c0d\n    }\n\n    \n\n    instance(x: -201, y: 52) count_digits_e38e95 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Counts the number of digits in a given string.\") count_digits {\n        in(x: -193, y: 3, name: \"input\") property(String) input_5f6a34\n\n        out(x: 1042, y: -14, name: \"count\") property(Number) count_9b45c1\n\n        instance(x: 12, y: 0) list_0d8bce root.Std_k98ojb.List.GenerateRange {}\n        input_5f6a34 -> list_0d8bce.from\n        -1 -> list_0d8bce.to\n        func() {\n            in(x: -124, y: 11, name: \"char\") property(Number) char_7c4e3f\n\n            out(x: 1042, y: 23, name: \"num_digits\") property(Number) num_digits_9dcd0a\n\n            instance(x: 8, y: -37) is_digit_f0f5b6 root.Std_k98ojb.Strings.IsNumeric {}\n            char_7c4e3f -> is_digit_f0f5b6.input\n            is_digit_f0f5b6.result -> num_digits_9dcd0a\n        } -> list_0d8bce.handler\n        list_0d8bce.output_list -> count_9b45c1\n    }\n\n    \n\n    instance(x: -193, y: 58) count_digits_e7f2e9 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Counts the number of digits in a given string.\") digit_count {\n        in(x: -222, y: 44, name: \"input\") property(String) input_5f3b0a\n\n        out(x: 1119, y: 28, name: \"count\") property(Number) count_c2c4d8\n\n        instance(x: 83, y: 17) list_d3e43f root.Std_k98ojb.List {}\n        instance(x: 102, y: -18, name: \"list_1a8f7a\") property(List) list_1a8f7a\n        instance(x: 143, y: 56) for_loop_94c6e5 root.Std_k98ojb.Std.For {}\n        instance(x: 242, y: -28) count_6db0d3 root.Std_k98ojb.Math.Count {}\n        list_d3e43f -> for_loop_94c6e5.items\n        input_5f3b0a -> for_loop_94c6e5.index\n\n        instance(x: 114, y: -4) is_digit_9a2d56 root.Std_k98ojb.Strings.IsNumeric {}\n        list_1a8f7a -> is_digit_9a2d56.input\n        is_digit_9a2d56.result -> count_6db0d3.reset\n        instance(x: 234, y: -21) if_4c5f51 root.Std_k98ojb.Std.If {}\n        list_1a8f7a -> if_4c5f51.items\n        input_5f3b0a -> if_4c5f51.index\n\n        instance(x: 305, y: -38) add_b4554f root.Std_k98ojb.Math.Add {}\n        count_6db0d3.result -> add_b4554f.first\n        list_1a8f7a -> add_b4554f.second\n        for_loop_94c6e5.item -> add_b4554f.input\n        if_4c5f51.then -> continue_075eef\n        count_6db0d3.result -> output_c2c4d8\n    }\n\n    \n\n    instance(x: 102, y: -26) digit_count_d7a7b1 root.main.digit_count {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -475, y: 4, name: \"input\") property(String) input_1a3d9e\n\n        out(x: 253, y: 13, name: \"count\") property(Number) count_8fdd0c\n\n        instance(x: 91, y: -12, name: \"transform string to digits\") map_5fb2ec root.Std_k98ojb.Iteration.Map {}\n        input_1a3d9e -> map_5fb2ec.items\n        func() {\n            in(x: -44, y: 54, name: \"char\") property(Number) char_2c4f7c\n\n            out(x: 0, y: 28, name: \"\") property(Number) _digit_57d6b4\n\n            instance(x: 74, y: 43) isnumeric_a8eb1e root.Std_k98ojb.Strings.IsNumeric {}\n            char_2c4f7c -> isnumeric_a8eb1e.input\n            isnumeric_a8eb1e.result -> _digit_57d6b4\n        } -> map_5fb2ec.handler\n        map_5fb2ec.output_list -> count_8fdd0c\n    }\n\n    \n\n    instance(x: -53, y: 38) count_digits_b4a3bb root.main.count_digits {}\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_of_fourth_power {\n        in(x: -215, y: 22, name: \"n\") property(Number) n_8f0a9d\n\n        out(x: 1391, y: -24, name: \"sum\") property(Number) sum_f5e3d4\n\n        instance(x: 112, y: -11, name: \"i\") property(Number) i_7ebc66\n        data_instance(x: 312, y: 137) data_cde0dc  = 1\n        instance(x: 20, y: 141) sum_9d8f77 root.Std_k98ojb.Math.Sum {}\n        instance(x: -31, y: 138) add_e74c4a root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> add_e74c4a.first\n        i_7ebc66 -> add_e74c4a.second\n        n_8f0a9d -> sum_9d8f77.n\n        add_e74c4a.result -> sum_9d8f77.result\n        func() {\n            in(x: -106, y: 67, name: \"current\") property(Number) current_9b8e1f\n\n            out(x: 0, y: 55, name: \"\") property(Number) _4c5c3b\n\n            instance(x: 118, y: 51) power_1d4a6e root.Std_k98ojb.Math.Pow {}\n            current_9b8e1f -> power_1d4a6e.x\n            4 -> power_1d4a6e.y\n            power_1d4a6e.result -> _4c5c3b\n        } -> sum_9d8f77.handler\n        sum_9d8f77.output_list -> list_cde0dc.items\n    }\n\n    \n\n    instance(x: -19, y: 59) sum_of_fourth_power_2a71e1 root.main.sum_of_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -234, y: 24, name: \"n\") property(Number) n_6f5d4b\n\n        out(x: 1578, y: 7, name: \"sum\") property(Number) sum_1c23a2\n\n        instance(x: -113, y: -56, name: \"odd numbers\") filter_fdb3d0 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 304, y: 36) for_c4fbb6 root.Std_k98ojb.Std.For {}\n        instance(x: 1069, y: 23) mul_d97e89 root.Std_k98ojb.Math.Mul {}\n        instance(x: 1552, y: -28, name: \"expression\") expression_2d7d3c root.Std_k98ojb.Math.Expression {\n            expression: \"(n^4)\"\n        }\n        instance(x: 1056, y: 49) sub_c9f6e8 root.Std_k98ojb.Math.Sub {}\n        instance(x: 1351, y: -22, name: \"sum\") add_0d7c3a root.Std_k98ojb.Math.Add {}\n\n        list_63c248 -> filter_fdb3d0.items\n        for_c4fbb6.index -> mul_d97e89.first\n        n_6f5d4b -> mul_d97e89.second\n        expression_2d7d3c.result -> sub_c9f6e8.first\n        sum_c9f6e8 -> add_0d7c3a.first\n    }\n\n    \n\n    instance(x: -59, y: 63) sum_fourth_power_1b5a36 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -191, y: 57, name: \"n\") property(Number) n_4d0dd9\n\n        out(x: 1038, y: 11, name: \"sum\") property(Number) sum_1e2c34\n\n        instance(x: 105, y: -123, name: \"odd_numbers\") filter_b5bb7a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 288, y: 17, name: \"fourth_power\") map_d87d42 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 451, y: -25, name: \"sum_fourth_power\") iterreduce_2a8e6c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 114, y: -31, name: \"pow_5f7d26\") pow_5f7d26 = Math.Pow\n        instance(x: 342, y: -35, name: \"add_a8bf6e\") add_a8bf6e = Math.Add\n\n        list_63c248 -> filter_b5bb7a.items\n        n_4d0dd9 -> filter_b5bb7a.new_value\n        filter_b5bb7a.result -> fourth_power.items\n        map_d87d42.output_list -> sum_fourth_power.items\n        pow_5f7d26.result -> add_a8bf6e.first\n        1 -> add_a8bf6e.second\n        add_a8bf6e.result -> sum_fourth_power.value\n    }\n\n    \n\n    instance(x: -44, y: 63) sum_fourth_power_9c7f4b root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -203, y: 4, name: \"n\") property(Number) n_5e8d0b\n\n        out(x: 1421, y: -10, name: \"sum\") property(Number) sum_f9fdd3\n\n        instance(x: 95, y: 28) for_06f3c4 root.Std_k98ojb.Std.For {}\n        instance(x: 108, y: 44) expression_b0d7ab root.Std_k98ojb.Math.Expression {\n            expression: \"(x^4)\"\n        }\n        instance(x: 275, y: 25) add_9f2e34 root.Std_k98ojb.Math.Add {}\n        n_5e8d0b -> for_06f3c4.n\n        for_06f3c4.list -> expression_b0d7ab.items\n        expression_b0d7ab.result -> add_9f2f32\n        add_9f2f32.result -> sum_f9fdd3\n    }\n\n    \n\n    instance(x: 341, y: -19) sum_fourth_power_5a6bf1 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -192, y: -19, name: \"n\") property(Number) n_5df3f4\n\n        out(x: 1141, y: -29, name: \"sum\") property(Number) sum_0d45c7\n\n        instance(x: 134, y: 34) iter_8a2dd6 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 313, y: -55, name: \"generate_numbers\") list_generate_numbers = []\n        instance(x: 191, y: -15, name: \"sum_numbers\") sum_numbers = []\n        instance(x: 244, y: -49) modulo_1c4d96 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 475, y: 24) add_b5f2e9 root.Std_k98ojb.Math.Add {}\n        instance(x: 643, y: 20) pow_8e21a9 root.Std_k98ojb.Math.Pow {}\n        instance(x: 753, y: -22) if_0d4c1b root.Std_k98ojb.Std.If {}\n        instance(x: 1065, y: -58) append_f3f3d7 root.Std_k98ojb.List.Append {}\n        instance(x: 1392, y: -35) count_d9e9a8 root.Std_k98ojb.Std.Count {}\n\n        data_instance(x: -191, y: 59) data_1c8dc6 = [4]\n        instance(x: 0, y: 10) expression_3d8f44 root.Std_k98ojb.Math.Expression {\n            expression: \"(4*n)\"\n        }\n        instance(x: 255, y: -25) div_5dfc7e root.Std_k98ojb.Math.Div {}\n        modulo_1c4d96.result -> div_5dfc7e.first\n        data_1c8dc6 -> div_5dfc7e.second\n        div_5dfc7e.result -> sum_numbers\n        pow_8e21a9.result -> add_b5f2e9.first\n        n_5df3f4 -> expression_3d8f44.gen_0\n        expression_3d8f44.result -> sum_numbers\n        if_0d4c1b.value -> iter_8a2dd6.predicate\n        generate_numbers -> iter_8a2dd6.items\n        append_f3f3d7.item -> pow_8e21a9.second\n        count_d9e9a8.value -> n_5df3f4\n        sum_numbers -> sum_0d45c7\n    }\n\n    \n\n    instance(x: 104, y: -19) sum_fourth_power_b59b22 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_of_fourth_power {\n        in(x: -242, y: 57, name: \"n\") property(Number) n_9a0e2b\n\n        out(x: 1627, y: -38, name: \"sum\") property(Number) sum_3cfe1f\n\n        instance(x: 100, y: 26) for_0bdc5d root.Std_k98ojb.Std.For {}\n        instance(x: 215, y: 59) generate_range_ea9e8b root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 336, y: -17) power_a6f3c4 root.Std_k98ojb.Math.Pow {}\n        instance(x: 342, y: 55) add_2e77cd root.Std_k98ojb.Math.Add {}\n        list_instance(x: 0, y: -45, name: \"sum\") property(List) sum_ab8d7f\n\n        for_0bdc5d.index -> generate_range_ea9e8b.from\n        n_9a0e2b -> generate_range_ea9e8b.to\n        generate_range_ea9e8b.list -> power_a6f3c4.items\n        power_a6f3c4.result -> add_2e77cd.first\n        1 -> add_2e77cd.second\n        add_2e77cd.result -> sum_ab8d7f\n        for_0bdc5d.item -> power_a6f3c4.value\n        generate_range_ea9e8b.index -> power_a6f3c4.exponent\n    }\n\n    \n\n    instance(x: 346, y: 19) sum_of_fourth_power_b4ac48 root.main.sum_of_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_fourth_power {\n        in(x: -213, y: -1, name: \"n\") property(Number) n_0e3f5a\n\n        out(x: 1059, y: 12, name: \"sum\") property(Number) sum_4d7c6b\n\n        instance(x: 24, y: -64, name: \"i\") generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 106, y: 73, name: \"odd\") filter_a9e38f root.Std_k98ojb.Query.Filter {}\n        instance(x: 184, y: -25, name: \"pow\") pow_584bfd root.Std_k98ojb.Math.Pow {}\n        instance(x: 266, y: 44) add_b4554f root.Std_k98ojb.Math.Add {}\n        data_instance(x: 121, y: 59) data_f8e0a2  = 1\n        instance(x: 23, y: 62) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*i*i*i*i\"\n        }\n        data_f8e0a2 -> add_b4554f.first\n        pow_584bfd.result -> add_b4554f.second\n        expression_2d6da6.result -> add_b4554f.gen_0\n        n_0e3f5a -> filter_a9e38f.from\n        odd -> filter_a9e38f.to\n        filter_a9e38f.list -> pow.items\n        pow.items -> add.items\n        for(i in generaterange_038fce) {\n            if ((i % 2 == 1)) {\n                add_b4554f.first = i \n                pow_584bfd.x = 4\n                expression_2d6da6.gen_0 = i\n                pow_584bfd.y = 4\n                data_f8e0a2.value = 1\n            }\n        }\n        sum_4d7c6b -> add_b4554f.result\n\n    }\n\n    \n\n    instance(x: -195, y: -56) sum_odd_fourth_power_9f5ac3 root.main.sum_odd_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_of_fourth_power {\n        in(x: -228, y: 2, name: \"n\") property(Number) n_1e6a3f\n\n        out(x: 1089, y: 7, name: \"sum\") property(Number) sum_a5c6d8\n\n        instance(x: 121, y: 72) list_49b1c2 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 102, y: -63, name: \"i\") property(Number) i_c7aeb9\n        instance(x: 191, y: 58) add_e3fbb6 root.Std_k98ojb.Math.Add {}\n        instance(x: 101, y: 73) pow_5d8ea1 root.Std_k98ojb.Math.Pow {}\n        instance(x: 103, y: -56) modulo_1092bc root.Std_k98ojb.Math.Modulo {}\n        instance(x: 102, y: 69) equal_f7df33 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 105, y: 79) if_e0e3f1 root.Std_k98ojb.Std.If {}\n        instance(x: 107, y: -51) add_8fdd4a root.Std_k98ojb.Math.Add {}\n        instance(x: 104, y: 71) div_6c9d5e root.Std_k98ojb.Math.Div {}\n        list_49b1c2.list -> pow_5d8ea1.items\n        i_c7aeb9 -> pow_5d8ea1.first\n        i_c7aeb9 -> add_e3fbb6.second\n        modulo_1092bc.result -> equal_f7df33.left\n        2 -> equal_f7df33.right\n        equal_f7df33.result -> if_e0e3f1.predicate\n        pow_5d8ea1.result -> add_e3fbb6.first\n        i_c7aeb9 -> div_6c9d5e.second\n        div_6c9d5e.result -> sum_a5c6d8\n        if_e0e3f1.then -> add_8fdd4a.execute\n        1 -> add_8fdd4a.first\n        i_c7aeb9 -> add_8fdd4a.second\n        add_8fdd4a.result -> sum_a5c6d8\n    }\n\n    \n\n    instance(x: -24, y: 509) sum_of_fourth_power_b35b0e root.main.sum_of_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -199, y: 28, name: \"n\") property(Number) n_5e56a8\n\n        out(x: 1029, y: -16, name: \"sum\") property(Number) sum_f7d0f3\n\n        instance(x: 74, y: -4) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -151, y: -22) data_8c2ae6  = 5\n        instance(x: 12, y: 26) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^3-1\"\n        }\n        instance(x: 305, y: -11) div_64046c root.Std_k98ojb.Math.Div {}\n        data_8c2ae6 -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_5e56a8 -> mul_f892a4.first\n        n_5e56a8 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_f7d0f3\n    }\n\n    \n\n    instance(x: -74, y: 47) sum_fourth_power_b1fb22 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_of_fourth_powers {\n        in(x: -215, y: 5, name: \"n\") property(Number) n_1d6a85\n\n        out(x: 1293, y: 7, name: \"sum\") property(Number) sum_2c9e8b\n\n        instance(x: 0, y: 0) list_cff4ec root.Std_k98ojb.List.GenerateRange {}\n        instance(x: -44, y: -35, name: \"even_list\") filter_1f7f6a root.Std_k98ojb.Query.Filter {}\n        instance(x: 0, y: -33) is_odd_f45d21 root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: -23) pow_c8c9d3 root.Std_k98ojb.Math.Pow {}\n        instance(x: -31, y: 2) add_8a87eb root.Std_k98ojb.Math.Add {}\n        instance(x: 19, y: 5) sum_c4f7d1 root.Std_k98ojb.List.Sum {}\n        list_cff4ec.from -> is_odd_f45d21.items\n        n_1d6a85 -> list_cff4ec.to\n        generate_range_038fce.list -> even_list.items\n        is_odd_f45d21.result -> pow_c8c9d3.first\n        add_8a87eb.result -> sum_c4f7d1.value\n    }\n\n    \n\n    instance(x: -43, y: 73) sum_of_fourth_powers_a2e5c4 root.main.sum_of_fourth_powers {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the surface area of a cube of a given size.\") find_surface_area {\n        in(x: 3, y: -15, name: \"side\") property(Number) side_0e8b2f\n\n        out(x: 594, y: 19, name: \"surface_area\") property(Number) surface_area_a6c5df\n\n        instance(x: 9, y: 7) for_0e3a11 root.Std_k98ojb.Std.For {}\n        instance(x: 20, y: -1, name: \"area\") property(Number) area_2ea1f3\n        instance(x: 12, y: 15) mul_9c22eb root.Std_k98ojb.Math.Mul {}\n        side_0e8b2f -> mul_9c22eb.first\n        6 -> mul_9c22eb.second\n        mul_9c22eb.result -> area_2ea1f3\n        function() {\n            in(x: -11, y: 4, name: \"i\") property(Number) i_f0e4ec\n\n            out(x: 0, y: 28, name: \"\") property(Number) output_9d34a7\n\n            instance(x: 5, y: 24) add_2b1f33 root.Std_k98ojb.Math.Add {}\n            area_2ea1f3 -> add_2b1f33.first\n            i_f0e4ec -> add_2b1f33.second\n            add_2b1f33.result -> output_9d34a7\n        } -> for_0e3a11.handler\n        for_0e3a11.items -> area_2ea1f3\n        function() {\n            in(x: 8, y: -4, name: \"output\") property(Number) output_f1c6df\n\n            instance(x: 12, y: 22) sum_c87d7b root.Std_k98ojb.Math.Sum {}\n            area_2ea1f3 -> sum_c87d7b.items\n            output_f1c6df -> sum_c87d7b.result\n        } -> for_0e3a11.handler\n        sum_c87d7b.output_list -> surface_area_a6c5df\n    }\n\n    \n\n    instance(x: 12, y: -31) find_surface_area_e4f8bb root.main.find_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -243, y: 19, name: \"side\") property(Number) side_5d4f0b\n\n        out(x: 1591, y: -28, name: \"area\") property(Number) area_b9ec6a\n\n        data_instance(x: -194, y: -29, name: \"data_2d7e30\") data_2d7e30 = side_5d4f0b\n        instance(x: 24, y: 54) math_f1c76f root.Std_k98ojb.Math.Pow {}\n        instance(x: 108, y: -21) mul_a74a60 root.Std_k98ojb.Math.Mul {}\n        data_2d7e30 -> mul_a74a60.first\n        side_5d4f0b -> mul_a74a60.second\n        math_f1c76f.result -> mul_a74a60.second\n        6 -> math_f1c76f.y\n        data_2d7e30 -> mul_a74a60.first\n        mul_a74a60.result -> area_b9ec6a\n    }\n\n    \n\n    instance(x: -197, y: 35) surface_area_ac9b5d root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -234, y: 2, name: \"side_length\") property(Number) side_length_5e65b9\n\n        out(x: 1596, y: -12, name: \"surface_area\") property(Number) surface_area_c1d8c4\n\n        instance(x: 0, y: 0) pow_f2f7a3 root.Std_k98ojb.Math.Pow {}\n        instance(x: 0, y: -15) sub_6e71dd root.Std_k98ojb.Math.Sub {}\n        instance(x: 0, y: -28) mul_dff5c8 root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: 29) add_f7d6df root.Std_k98ojb.Math.Add {}\n        data_instance(x: -216, y: -2) data_9db4e1  = [side_length_5e65b9]\n        data_instance(x: 193, y: -18) data_0fba42  = [6, 12]\n\n        for_065883 -> pow_f2f7a3.items\n        pow_f2f7a3.result -> sub_6e71dd.first\n        side_length_5e65b9 -> sub_6e71dd.second\n        sub_6e71dd.result -> mul_dff5c8.first\n        2 -> mul_dff5c8.second\n        mul_dff5c8.result -> add_f7d6df.first\n        data_0fba42[0] -> add_f7d6df.second\n        add_f7d6df.result -> surface_area_c1d8c4\n    }\n\n    \n\n    instance(x: 243, y: -21) cube_surface_area_5e2a9b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the surface area of a cube of a given size.\") find_surface_area {\n        in(x: -191, y: 6, name: \"size\") property(Number) size_2d0f8b\n\n        out(x: 288, y: 7, name: \"surface_area\") property(Number) surface_area_1a9e5c\n\n        instance(x: 24, y: -12, name: \"side\") property(Number) side_4d3c6d\n        instance(x: 34, y: 8, name: \"calculate_surface_area\") property(Number) calculate_surface_area_bf88d7\n\n        data_instance(x: 0, y: 0) data_e2a64b  = (size_2d0f8b * 6)\n        instance(x: 22, y: -11) mul_29c4e1 root.Std_k98ojb.Math.Mul {}\n        side_4d3c6d -> mul_29c4e1.first\n        data_e2a64b -> mul_29c4e1.second\n        mul_29c4e1.result -> calculate_surface_area_bf88d7\n    }\n\n    \n\n    instance(x: 11, y: -27) find_surface_area_5ef23d root.main.find_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -204, y: 56, name: \"side\") property(Number) side_49e2d5\n\n        out(x: 588, y: 44, name: \"surfaceArea\") property(Number) surfacearea_0f9f1d\n\n        instance(x: 89, y: -24) mul_d45df6 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 345, y: 103) data_f2c7e4  = side\n        instance(x: 21, y: 109) pow_9f5ce8 root.Std_k98ojb.Math.Pow {}\n        instance(x: 246, y: 78) add_0a6bb1 root.Std_k98ojb.Math.Add {}\n        instance(x: 335, y: -63) mul_d45df6.root = 6\n        data_f2c7e4 -> pow_9f5ce8.x\n        side_49e2d5 -> add_0a6bb1.first\n        pow_9f5ce8.result -> add_0a6bb1.second\n        data_f2c7e4 -> mul_d45df6.first\n        mul_d45df6.result -> surfacearea_0f9f1d\n    }\n\n    \n\n    instance(x: 234, y: -14) surface_area_a3b5ad root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -192, y: 11, name: \"side_length\") property(Number) side_length_4a1d0e\n\n        out(x: 1056, y: -10, name: \"surface_area\") property(Number) area_f79c62\n\n        instance(x: 13, y: -3) square_7df5f9 root.Std_k98ojb.Math.Pow {}\n        side_length_4a1d0e -> square_7df5f9.x\n        2 -> square_7df5f9.y\n        square_7df5f9.result -> area_f79c62\n        side_length_4a1d0e -> area_f79c62\n    }\n\n    \n\n    instance(x: -189, y: 34) surface_area_8b66ca root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -247, y: 3, name: \"size\") property(Number) size_1e0f4d\n\n        out(x: 258, y: 19, name: \"area\") property(Number) area_f5c9a8\n\n        instance(x: 93, y: -105) pow_b2ce31 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 109, y: 35) data_0d1e14  = size\n        instance(x: 94, y: 18) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        pow_b2ce31.result -> mul_f2330d.first\n        size_1e0f4d -> pow_b2ce31.x\n        3 -> pow_b2ce31.y\n        mul_f2330d.second -> area_f5c9a8\n    }\n\n    \n\n    instance(x: -69, y: 83) surface_area_6bca95 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the surface area of a cube of a given size.\") find_surface_area {\n        in(x: -219, y: 0, name: \"size\") property(Number) size_5f6a43\n\n        out(x: 192, y: -1, name: \"surface_area\") property(Number) surface_area_b6dd4c\n\n        instance(x: 0, y: 0) side_length_5ef2b root.Std_k98ojb.List.GetAt {}\n        getter(x: 101, y: -15, name: \"getter_9e8f1d\") getter_9e8f1d = size\n        side_length_5ef2b.index -> getter_9e8f1d\n        instance(x: 0, y: 20) square_6a3c4c root.Std_k98ojb.Math.Pow {}\n        instance(x: 96, y: -16) mul_7aa1ba root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: 22) sum_a5f55e root.Std_k98ojb.Math.Add {}\n        side_length_5ef2b -> square_6a3c4c.input\n        6 -> square_6a3c4c.y\n        mul_7aa1ba.result -> sum_a5f55e.first\n        size_5f6a43 -> mul_7aa1ba.second\n        sum_a5f55e.result -> surface_area_b6dd4c\n    }\n\n    \n\n    instance(x: 102, y: -24) find_surface_area_58b3d9 root.main.find_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -231, y: 10, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name: \"surface_area\") property(Number) surface_area_e9c74b\n    }\n\n    instance(x: 0, y: 0, name: \"cube_surface_area_f2d3a8\") calculate_surface_area {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name: \"surface_area\") property(Number) surface_area_e9c74b\n    }\n\n    instance(x: 111, y: 34) set_side_length {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        setter(x: 1, y: 2, name: \"setter_4b3c8d\") setter_4b3c8d = set_side\n    }\n\n    instance(x: -34, y: 53) calculate_surface_area_c5a7bb {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name: \"surface_area\") property(Number) surface_area_e9c74b\n    }\n\n    instance(x: 1, y: 2) set_side {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name: \"\") property(Number) new_side\n    }\n\n    instance(x: 3, y: 11) calculate_surface_area_f1d0bb {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name: \"surface_area\") property(Number) surface_area_e9c74b\n    }\n\n    instance(x: 2, y: 4) set_side_length_f2d3a8 {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name: \"\") property(Number) new_side\n    }\n\n    instance(x: 1, y: 2) set_side_f1d0bb {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name \"\") property(Number) new_side\n    }\n\n    instance(x: 3, y: 11) calculate_surface_area_c5a7bb_f1d0bb {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name: \"surface_area\") property(Number) surface_area_e9c74b\n    }\n\n    instance(x: 2, y: 4) set_side_length_f2d3a8_f1d0bb {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name: \"\") property(Number) new_side\n    }\n\n    instance(x: 2, y: 4) set_side_f1d0bb_f2d3a8 {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name \"\") property(Number) new_side\n    }\n\n    instance(x: 111, y: 34) calculate_surface_area_f2d3a8_c5a7bb {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name: \"surface_area\") property(Number) surface_area_e9c74b\n    }\n\n    instance(x: 3, y: 11) calculate_surface_area_c5a7bb_f2d3a8 {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name: \"surface_area\") property(Number) surface_area_e9c74b\n    }\n\n    instance(x: 2, y: 4) set_side_length_f1d0bb_f2d3a8 {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name \"\") property(Number) new_side\n    }\n\n    instance(x: 1, y: 2) set_side_f2d3a8_f1d0bb {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name \"\") property(Number) new_side\n    }\n\n    instance(x: 2, y: 4) set_side_f1d0bb_f2d3a8 {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name \"\") property(Number) new_side\n    }\n\n    instance(x: 111, y: 34) calculate_surface_area_f2d3a8_c5a7bb_f1d0bb {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name: \"surface_area\") property(Number) surface_area_e9c74b\n    }\n\n    instance(x: 3, y: 11) calculate_surface_area_c5a7bb_f2d3a8_f1d0bb {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name: \"surface_area\") property(Number) surface_area_e9c74b\n    }\n\n    instance(x: 2, y: 4) set_side_length_f1d0bb_f2d3a8_f1d0bb {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name \"\") property(Number) new_side\n    }\n\n    instance(x: 111, y: 34) calculate_surface_area_f2d3a8_c5a7bb_f1d0bb_f1d0bb {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name: \"surface_area\") property(Number) surface_area_e9c74b\n    }\n\n    instance(x: 3, y: 11) calculate_surface_area_c5a7bb_f2d3a8_f1d0bb_f1d0bb {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name: \"surface_area\") property(Number) surface_area_e9c74b\n    }\n\n    instance(x: 2, y: 4) set_side_length_f1d0bb_f2d3a8_f1d0bb {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name \"\") property(Number) new_side\n    }\n\n    instance(x: 111, y: 34) calculate_surface_area_f2d3a8_c5a7bb_f1d0bb_f1d0bb {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name: \"surface_area\") property(Number) surface_area_e9c74b\n    }\n\n    instance(x: 3, y: 11) calculate_surface_area_c5a7bb_f2d3a8_f1d0bb_f1d0bb {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5eaa6f\n\n        out(x: 216, y: -4, name: \"surface_area\") property(Number) surface",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -123, y: 2, name: \"side\") property(Number) side_4f6a47\n\n        out(x: 192, y: 7, name: \"surface_area\") property(Number) surface_area_9e3b34\n\n        instance(x: 91, y: 5) mul_d1c0c2 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -44, y: -19, name: \"data_8a4d6f\") data_8a4d6f  = 6\n        instance(x: 97, y: 43) expression_a3df7c root.Std_k98ojb.Math.Expression {\n            expression: \"(side ** 2)\"\n        }\n        instance(x: 92, y: 10) div_f64e22 root.Std_k98ojb.Math.Div {}\n        data_8a4d6f -> div_f64e22.second\n        mul_d1c0c2.result -> div_f64e22.first\n        expression_a3df7c.result -> mul_d1c0c2.second\n        side_4f6a47 -> mul_d1c0c2.first\n        div_f64e22.result -> surface_area_9e3b34\n    }\n\n    \n\n    instance(x: 69, y: -26) surface_area_5d7f85 root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -235, y: 2, name: \"list\") property(List) list_0b5d25\n\n        out(x: 1071, y: 29, name: \"diff\") property(Number) diff_b7e6c9\n\n        instance(x: 105, y: -101, name: \"max\") filter_c91965 root.Std_k98ojb.List.Max {}\n        instance(x: 288, y: 74) min_8f3a5d root.Std_k98ojb.List.Min {}\n        list_0b5d25 -> max.items\n        list_0b5d25 -> min_items\n        max.result -> diff_b7e6c9\n        min_8f3a5d.result -> diff_b7e6c9\n    }\n\n    \n\n    instance(x: -91, y: 45) diff_largest_smallest_c7ea29 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -245, y: 4, name: \"list\") property(List) list_1a3d5f\n\n        out(x: 1122, y: 31, name: \"difference\") property(Number) difference_f5e7c0\n\n        instance(x: 0, y: 2) max_8f23aa root.Std_k98ojb.List.Max {}\n        instance(x: 340, y: -97, name: \"min\") min_e1e9ce root.Std_k98ojb.List.Min {}\n        list_1a3d5f -> max_8f23aa.items\n        list_1a3d5f -> min_e1e9ce.items\n        instance(x: 1234, y: -105) sub_85c7dd root.Std_k98ojb.Math.Sub {}\n        difference_f5e7c0 -> sub_85c7dd.result\n    }\n\n    \n\n    instance(x: -74, y: 58) diff_max_min_c3d9a6 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -222, y: 4, name: \"list\") property(List) list_c2f1b0\n\n        out(x: 1359, y: 25, name: \"difference\") property(Number) difference_e3e6c8\n\n        instance(x: 85, y: 26) max_5d7a15 root.Std_k98ojb.List.Max {}\n        instance(x: 111, y: -35, name: \"min\") property(Number) min_c2f1bb\n        instance(x: 201, y: -13, name: \"max\") property(Number) max_54e8d3\n\n        list_c2f1b0 -> max_5d7a15.items\n        max_5d7a15.result -> max_54e8d3\n        min_c2f1bb -> max_5d7a15.result\n        max_54e8d3.result -> difference_e3e6c8\n    }\n\n    \n\n    instance(x: 94, y: -34) diff_max_min_9bfc7c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -234, y: 47, name: \"list\") property(List) list_2d0f8a\n\n        out(x: 1017, y: 19, name: \"result\") property(Number) result_3c1b5e\n\n        instance(x: 13, y: 36) max_f4cd56 root.Std_k98ojb.List.Max {}\n        instance(x: -23, y: 59) min_8f7d66 root.Std_k98ojb.List.Min {}\n        instance(x: 1030, y: 3) sub_6c15a1 root.Std_k98ojb.Math.Sub {}\n        list_2d0f8a -> max_f4cd56.items\n        list_2d0f8a -> min_8f7d66.items\n        max_f4cd56.result -> sub_6c15a1.first\n        min_8f7d66.result -> sub_6c15a1.second\n        sub_6c15a1.result -> result_3c1b5e\n    }\n\n    \n\n    instance(x: 105, y: 72) diff_max_min_e34f0c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -531, y: 28, name: \"list\") property(List) list_5f85a6\n\n        out(x: 1219, y: -14, name: \"difference\") property(Number) difference_f1e4ac\n\n        instance(x: 305, y: 45) min_c3c9d7 root.Std_k98ojb.List.Min {}\n        instance(x: 746, y: -96) max_2a6ebd root.Std_k98ojb.List.Max {}\n        list_5f85a6 -> min_c3c9d7.items\n        list_5f85a6 -> max_2a6ebd.items\n        min_c3c9d7.min -> difference_f1e4ac\n        max_2a6ebd.max -> difference_f1e4ac\n    }\n\n    \n\n    instance(x: -293, y: 541) diff_max_min_e65f38 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -227, y: 6, name: \"list\") property(List) list_59b4d9\n\n        out(x: 1207, y: -202, name: \"difference\") property(Number) difference_b0f8e3\n\n        instance(x: -315, y: 16) find_min_max_1c6c62 root.Std_k98ojb.List.Find {}\n        instance(x: 118, y: -104, name: \"max\") property(Number) max_5d8a4c\n        instance(x: 243, y: -43, name: \"min\") property(Number) min_f3f6ad\n\n        list_59b4d9 -> find_min_max_1c6c62.items\n        find_min_max_1c6c62.item -> max_5d8a4c\n        find_min_max_1c6c62.item -> min_f3f6ad\n        max_5d8a4c -> difference_b0f8e3\n        min_f3f6ad -> difference_b0f8e3\n    }\n\n    \n\n    instance(x: -208, y: 554) diff_largest_smallest_df54bb root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -142, y: 0, name: \"list\") property(List) list_f1e8a3\n\n        out(x: 1117, y: 23, name: \"difference\") property(Number) difference_2c4f9d\n\n        instance(x: 0, y: 0) min_c67b42 root.Std_k98ojb.List.Min {}\n        instance(x: -6, y: 28) max_e1e56a root.Std_k98ojb.List.Max {}\n        instance(x: 3, y: 43) sub_2f7c23 root.Std_k98ojb.Math.Sub {}\n        list_f1e8a3 -> min_c67b42.items\n        list_f1e8a3 -> max_e1e56a.items\n        min_c67b42.min -> difference_2c4f9d\n        max_e1e56a.max -> difference_2c4f9d\n    }\n\n    \n\n    instance(x: 6, y: -33) diff_largest_smallest_0dcd35 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -193, y: 28, name: \"list\") property(List) list_5f6a55\n\n        out(x: 1038, y: -29, name: \"difference\") property(Number) difference_1e31d3\n\n        instance(x: 95, y: 2) min_c9c6cd root.Std_k98ojb.List.Min {}\n        list_5f6a55 -> min_c9c6cd.items\n        func() {\n            in(x: -120, y: 57, name: \"current\") property(Number) current_d3e5d0\n\n            out(x: 1094, y: -49, name: \"\") property(Number) _7dd980\n\n            instance(x: 105, y: 45) max_8f6c83 root.Std_k98ojb.List.Max {}\n            list_5f6a55 -> max_8f6c83.items\n            current_d3e5d0 -> max_8f6c83.value\n            max_8f6c83.result -> _7dd980\n        } -> min_c9c6cd.handler\n        list_5f6a55 -> diff_max_min.output_list\n        diff_max_min.output_list -> max_8f6c83.items\n        min_c9c6cd.min -> difference_1e31d3\n    }\n\n    \n\n    instance(x: 275, y: -11) diff_max_min_b4b51d root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -209, y: 2, name: \"list\") property(List) list_0d9d1b\n\n        out(x: 1234, y: -19, name: \"difference\") property(Number) difference_7f6e5a\n\n        instance(x: 12, y: 60) min_f2ed55 root.Std_k98ojb.List.Min {}\n        list_0d9d1b -> min_f2ed55.items\n        func() {\n            in(x: -112, y: 19, name: \"current\") property(Number) current_a89f8c\n\n            out(x: 1003, y: 34, name: \"\") property(Number) _7dd980\n\n            instance(x: 0, y: 25) max_6b1ca2 root.Std_k98ojb.List.Max {}\n            current_a89f8c -> max_6b1ca2.items\n            max_6b1ca2.max -> difference_7f6e5a\n        } -> min_f2ed55.handler\n        list_0d9d1b -> min_f2ed55.list\n        min_f2ed55.min -> difference_7f6e5a\n    }\n\n    \n\n    instance(x: -64, y: 74) diff_max_min_c66c63 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -194, y: 2, name: \"list\") property(List) list_6b5f3e\n\n        out(x: 1287, y: -9, name: \"difference\") property(Number) difference_4dcaaa\n\n        instance(x: 0, y: 0) min_c1a95c root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) max_d8f3f5 root.Std_k98ojb.List.Max {}\n        instance(x: 133, y: -69) sub_85d6e4 root.Std_k98ojb.Math.Sub {}\n        list_6b5f3e -> min_c1a95c.items\n        list_6b5f3e -> max_d8f3f5.items\n\n        out_c1a95c.result -> difference_4dcaaa\n    }\n\n    \n\n    instance(x: 98, y: -17) diff_largest_smallest_9c7ef2 root.main.diff_largest_smallest {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -222, y: 0, name: \"number\") property(Number) number_1d3a2e\n\n        out(x: 1066, y: -26, name: \"output\") property(Bool) output_f8c4b5\n\n        instance(x: 98, y: -18) modulo_9f7a4b root.Std_k98ojb.Math.Modulo {}\n        number_1d3a2e -> modulo_9f7a4b.value\n        2 -> modulo_9f7a4b.divisor\n        modulo_9f7a4b.result -> output_f8c4b5\n    }\n\n    \n\n    instance(x: -59, y: 26) is_even_e1d9d3 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -191, y: 0, name: \"number\") property(Number) number_3d8f5e\n\n        out(x: 1126, y: 1, name: \"result\") property(Bool) result_d7a2ed\n\n        instance(x: 0, y: -25, name: \"modulo_7d85b4\") modulo_7d85b4 root.Std_k98ojb.Math.Modulo {}\n        number_3d8f5e -> modulo_7d85b4.value\n        2 -> modulo_7d85b4.divisor\n        modulo_7d85b4.result -> result_d7a2ed\n    }\n\n    \n\n    instance(x: -74, y: 21) is_even_b9dd34 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -528, y: 2, name: \"number\") property(Number) n_3d1df5\n\n        out(x: 1054, y: -10, name: \"output\") property(Bool) output_b0a9c8\n\n        instance(x: 97, y: 25) modulo_f7f6b9 root.Std_k98ojb.Math.Modulo {}\n        n_3d1df5 -> modulo_f7f6b9.value\n        2 -> modulo_f7f6b9.divisor\n        modulo_f7f6b9.result -> output_b0a9c8\n    }\n\n    \n\n    instance(x: -195, y: 44) is_even_6e1d56 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -531, y: 2, name: \"input\") property(Number) input_b5e4a9\n\n        out(x: 1053, y: -16, name: \"output\") property(Bool) output_93c6d8\n\n        instance(x: 0, y: 0) modulo_d7f8b2 root.Std_k98ojb.Math.Modulo {}\n        input_b5e4a9 -> modulo_d7f8b2.value\n        2 -> modulo_d7f8b2.divisor\n        modulo_d7f8b2.result -> output_93c6d8\n    }\n\n    \n\n    instance(x: -179, y: 30) is_even_5e3a1b root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -217, y: 5, name: \"input\") property(Number) input_9f89a3\n\n        out(x: 1014, y: -1, name: \"output\") property(Bool) output_bdfc21\n\n        instance(x: 0, y: 17) modulo_a9d2be root.Std_k98ojb.Math.Modulo {}\n        input_9f89a3 -> modulo_a9d2be.value\n        2 -> modulo_a9d2be.divisor\n        modulo_a9d2be.result -> output_bdfc21\n    }\n\n    \n\n    instance(x: -208, y: 32) is_even_f87b4e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -113, y: 0, name: \"n\") property(Number) n_95f9e1\n\n        out(x: 1293, y: -55, name: \"output\") property(Bool) output_b6d5b4\n\n        instance(x: 83, y: 12) modulo_e8a3c2 root.Std_k98ojb.Math.Modulo {}\n        n_95f9e1 -> modulo_e8a3c2.value\n        2 -> modulo_e8a3c2.divisor\n        modulo_e8a3c2.result -> output_b6d5b4\n    }\n\n    \n\n    instance(x: -24, y: 69) is_even_7f2e56 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -513, y: 2, name: \"number\") property(Number) num_6e9f3d\n\n        out(x: 1181, y: -10, name: \"result\") property(Bool) result_a4c5b8\n\n        instance(x: 0, y: 0) modulo_e2db21 root.Std_k98ojb.Math.Modulo {}\n        modulo_e2db21.divisor -> num_6e9f3d\n        modulo_e2db21.result -> result_a4c5b8\n        instance(x: 1, y: -101) notequal_83cd7a root.Std_k98ojb.Logic.NotEqual {}\n        notequal_83cd7a.left -> result_a4c5b8\n        num_6e9f3d % 2 -> notequal_83cd7a.right\n        result_a4c5b8 -> num_6e9f3d % 2 == 0\n    }\n\n    \n\n    instance(x: -179, y: 29) is_even_f1ef48 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_5f9a23\n\n        out(x: 340, y: 19, name: \"output\") property(Bool) output_b7d4b8\n    }\n\n    instance(x: 0, y: 0) modulo_d3e1ec root.Std_k98ojb.Math.Modulo {}\n    number_5f9a23 -> modulo_d3e1ec.value\n    2 -> modulo_d3e1ec.divisor\n    modulo_d3e1ec.result -> output_b7d4b8\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -251, y: 14, name: \"number\") property(Number) number_5e34a1\n\n        out(x: 0, y: 59, name: \"output\") property(Bool) output_4c7d45\n\n        instance(x: 105, y: 57) modulo_e6f89b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 104, y: -2, name: \"setEven\") property(Number) set_even_5a8e66\n        instance(x: 88, y: 44) if_05d74c root.Std_k98ojb.Std.If {}\n        instance(x: 73, y: -49) notequal_7df54f root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 58, y: 48) tolower_ba5af0 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 92, y: 32) expression_a6c4ca root.Std_k98ojb.Math.Expression {\n            expression: \"n % 2 == 0\"\n        }\n\n        set_even_5a8e66 -> modulo_e6f89b.divisor\n        number_5e34a1 -> modulo_e6f89b.value\n        modulo_e6f89b.result -> notequal_7df54f.left\n        0 -> notequal_7df54f.right\n        tolower_ba5af0.input -> expression_a6c4ca.input\n        number_5e34a1 -> expression_a6c4ca.gen_0\n        expression_a6c4ca.result -> output_4c7d45\n        if_05d74c.value -> set_even_5a8e66\n        notequal_7df54f.result -> output_4c7d45\n    }\n\n    \n\n    instance(x: 75, y: -26) is_even_c2cd0b root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -305, y: 0, name: \"number\") property(Number) number_2f8e34\n\n        out(x: 1199, y: -1, name: \"output\") property(Bool) output_3d3a7c\n\n        instance(x: 77, y: 17) modulo_c6b4ef root.Std_k98ojb.Math.Modulo {}\n        number_2f8e34 -> modulo_c6b4ef.value\n        0 -> modulo_c6b4ef.divisor\n        modulo_c6b4ef.result -> output_3d3a7c\n    }\n\n    \n\n    instance(x: -26, y: 57) is_even_bda8ae root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: 3, y: -15, name: \"input\") property(String) input_9a2f67\n\n        out(x: 1090, y: -5, name: \"continue\") trigger() continue_6c1e38\n        out(x: 1154, y: 22, name: \"output\") property(Number) output_3d7b5c\n\n        instance(x: -13, y: -28, name: \"map_2f8a90\") map_2f8a90 = Iteration.Map {}\n        input_9a2f67 -> map_2f8a90.items\n        func() {\n            in(x: 0, y: -30, name: \"char\") property(Number) char_a71b6d\n\n            out(x: 1093, y: 20, name: \"\") property(Bool) bool_c7e77c\n\n            instance(x: -31, y: -24) islower_5f9a4f root.Std_k98ojb.Strings.IsLower {}\n            char_a71b6d -> islower_5f9a4f.char\n            0 -> islower_5f9a4f.value\n            true -> islower_5f9a4f.result -> bool_c7e77c\n        } -> map_2f8a90.handler\n        instance(x: 1, y: -10) count_6d43d root.Std_k98ojb.List.Count {}\n        input_9a2f67 -> count_6d43d.items\n        count_6d43d.value -> output_3d7b5c\n        map_2f8a90.output_list -> count_6d43d.list\n        islower_5f9a4f.result -> bool_c7e77c\n        continue_6c1e38 -> for_0ac2cd\n        input_9a2f67 -> for_0ac2cd.items\n        1 -> for_0ac2cd.new_value\n        map_2f8a90.output_list -> for_0ac2cd.list\n        output_3d7b5c -> for_0ac2cd.value\n    }\n\n    \n\n    instance(x: -63, y: 54) first_repeated_char_b1e4ea root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") find_first_repeated {\n        in(x: -255, y: 0, name: \"input\") property(String) input_6e8f5d\n\n        out(x: 1187, y: 29, name: \"output\") property(Number) output_b1c64b\n        instance(x: -209, y: 56, name: \"indexer\") getter_84fbbe root.Std_k98ojb.List.Index {}\n        instance(x: -203, y: -9, name: \"char_map\") map_d7a3d2 root.Std_k98ojb.Iteration.Map {}\n        instance(x: -223, y: 54) contains_f4e1c6 root.Std_k98ojb.List.Contains {}\n        instance(x: 342, y: -5, name: \"map\") map_8f33da root.Std_k98ojb.Iteration.Map {}\n        function_index_f0d6a2 root.Std_k98ojb.Function {}\n\n        input_6e8f5d -> contains_f4e1c6.item\n        char_map.result -> function_index_f0d6a2.input\n        map_d7a3d2.items -> map\n        0 -> map.d\n        map_8f33da.items -> map_d7a3d2.items\n        -1 -> map.d\n        map_8f33da.list -> char_map.output_list\n        function_index_f0d6a2.value -> output_b1c64b\n    }\n\n    \n\n    instance(x: 275, y: 528) find_first_repeated_d6ae66 root.main.find_first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -191, y: 2, name: \"input\") property(String) input_abd3f6\n\n        out(x: 193, y: 83, name: \"output\") property(Number) output_59e7a8\n\n        instance(x: 0, y: 0) map_1c9b5a root.Std_k98ojb.Iteration.Map {}\n        instance(x: -6, y: 35) strings_lower_65d4f3 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 113, y: -101) strings_contains_7bb34e root.Std_k98ojb.Strings.Contains {}\n        instance(x: 342, y: -104) if_6c2a8e root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: 44) count_9ea63d root.Std_k98ojb.List.Count {}\n        instance(x: 0, y: 48) set_7cf1bb root.Std_k98ojb.Set {}\n\n        map_1c9b5a -> strings_lower_65d4f3\n        input_abd3f6 -> strings_lower_65d4f3.input\n        strings_lower_65d4f3.output -> strings_contains_7bb34e\n        strings_contains_7bb34e.contains -> set_7cf1bb\n        if_6c2a8e.value -> count_9ea63d\n        map_1c9b5a.handler -> if_6c2a8e.execute\n        input_abd3f6 -> if_6c2a8e.input\n        strings_lower_65d4f3.output -> if_6c2a8e.then\n        set_7cf1bb.items -> count_9ea63d\n        map_1c9b5a.output_list -> strings_contains_7bb34e\n        if_6c2a8e.else -> map_1c9b5a.next\n    }\n\n    \n\n    instance(x: 109, y: -18) first_repeated_c0f4d3 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -234, y: 17, name: \"s\") property(String) s_2d9f8a\n\n        out(x: 1044, y: -10, name: \"result\") property(Number) result_e7b6c3\n\n        instance(x: 0, y: 0) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        s_2d9f8a -> map_f2330d.items\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_5c6e1d\n\n            out(x: 515, y: 44, name: \"\") property(Number) _count_7dc8f4\n\n            instance(x: 89, y: 29) count_2b3f45 root.Std_k98ojb.List.Count {}\n            char_5c6e1d -> count_2b3f45.value\n            count_2b3f45.result -> _count_7dc8f4\n        } -> map_f2330d.handler\n        list_2b3f45 -> map_f2330d.output_list\n        func() {\n            in(x: -121, y: -37, name: \"current\") property(String) current_1e6aeb\n\n            out(x: 333, y: -50, name: \"\") property(Number) _count_7dc8f4\n\n            instance(x: 92, y: -22) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            current_1e6aeb -> modulo_c76d2b.value\n            1 -> modulo_c76d2b.divisor\n            _count_7dc8f4 -> modulo_c76d2b.result\n        } -> map_f2330d.handler\n        map_f2330d.output_list -> result_e7b6c3\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_59e5a9 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -228, y: 11, name: \"s\") property(String) s_5fbd23\n\n        out(x: 1081, y: -21, name: \"continue\") trigger() continue_07d2c3\n        out(x: 1018, y: -25, name: \"repeated\") property(Number) repeated_97b0e4\n\n        instance(x: 83, y: -17, name: \"counter\") property(List) counter_9f6a5a\n        instance(x: 255, y: -33, name: \"map\") map_a2df7d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1184, y: -51, name: \"filter\") filter_58e77c root.Std_k98ojb.Query.Filter {}\n        instance(x: 1448, y: -69, name: \"set\") set_9d7f6a root.Std_k98ojb.List.Set {}\n        instance(x: 2030, y: -78, name: \"list\") list_e65c3b root.Std_k98ojb.List.List {}\n\n        counter_9f6a5a -> map_a2df7d.items\n        s_5fbd23 -> filter_58e77c.list\n        filter_58e77c.result -> set_9d7f6a.value\n        for each character in s_5fbd23 {\n            counter_9f6a5a.add(1)\n            map_a2df7d.handler(char, 0) {\n                if (counter_9f6a5a.getAt(char) > 1) {\n                    repeated_97b0e4 = char\n                    continue_07d2c3.execute\n                }\n            }\n        }\n    }\n\n    \n\n    instance(x: -28, y: 74) first_repeated_66af45 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -202, y: 1, name: \"string\") property(String) str_e77a5e\n\n        out(x: 1040, y: -15, name: \"output\") property(Number) output_8d2bf9\n        out(x: 1114, y: -27, name: \"continue\") trigger() continue_1b95c6\n\n        instance(x: 22, y: 26) map_b0e5f3 root.Std_k98ojb.Iteration.Map {}\n        str_e77a5e -> map_b0e5f3.items\n        func() {\n            in(x: -208, y: 2, name: \"char\") property(String) char_1c4d9c\n\n            out(x: 1197, y: -25, name: \"\") property(Number) _result_f35bca\n\n            instance(x: 47, y: -32) count_d43e3f root.Std_k98ojb.List.Count {}\n            char_1c4d9c -> count_d43e3f.item\n            count_d43e3f.value -> _result_f35bca\n        } -> map_b0e5f3.handler\n        map_b0e5f3.output_list -> str_e77a5e\n        func() {\n            in(x: -208, y: 26, name: \"char\") property(String) char_1c4d9c\n\n            out(x: 1142, y: -14, name: \"\") property(Number) _result_f35bca\n\n            instance(x: 44, y: -22) contains_5eef55 root.Std_k98ojb.List.Contains {}\n            str_e77a5e -> contains_5eef55.item\n            char_1c4d9c -> contains_5eef55.item\n            contains_5eef55.is_contained -> _result_f35bca\n        } -> map_b0e5f3.handler\n        map_b0e5f3.output_list -> str_e77a5e\n        func() {\n            in(x: -208, y: 26, name: \"char\") property(String) char_1c4d9c\n\n            out(x: 1142, y: -14, name: \"\") property(Number) _result_f35bca\n\n            instance(x: 44, y: -22) if_7c284f root.Std_k98ojb.Std.If {}\n            str_e77a5e -> if_7c284f.left\n            char_1c4d9c -> if_7c284f.right\n            _result_f35bca -> if_7c284f.predicate\n        } -> map_b0e5f3.handler\n        if_7c284f.then -> continue_1b95c6\n        str_e77a5e -> contains_5eef55.item\n        char_1c4d9c -> contains_5eef55.item\n        contains_5eef55.is_contained -> _result_f35bca\n        if_7c284f.else -> continue_1b95c6\n    }\n\n    \n\n    instance(x: 101, y: 760) first_repeated_2d5a83 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: 4, y: -0, name: \"input\") property(String) input_f5f9a6\n\n        out(x: 1232, y: -1, name: \"continue\") trigger() continue_07c7e3\n        out(x: 1048, y: 219, name: \"output\") property(Number) output_64d15b\n\n        setter(x: 0, y: 0, name: \"setter_6e7b4e\") setter_6e7b4e = char\n        instance(x: 350, y: -2) for_065883 root.Std_k98ojb.Std.For {}\n        getter(x: 703, y: 66, name: \"getter_84fbbe\") getter_84fbbe = index\n        setter_6e7b4e.continue -> for_065883.reset\n        input_f5f9a6 -> for_065883.items\n        -1 -> setter_6e7b4e.new_value\n        for_065883.done -> continue_07c7e3\n        getter_84fbbe.value -> output_64d15b\n        instance(x: 234, y: -34) count_a2f5a0 root.Std_k98ojb.List.Count {}\n        input_f5f9a6 -> count_a2f5a0.list\n        count_a2f5a0.reset -> continue_07c7e3\n        instance(x: 102, y: 27) if_7c284f root.Std_k98ojb.Std.If {}\n        getter_84fbbe.value -> count_a2f5a0.count\n        input_f5f9a6 -> if_7c284f.left\n        for_065883.item -> if_7c284f.right\n        if_7c284f.onItem -> continue_07c7e3.execute\n        instance(x: 103, y: -11) notequal_bca73d root.Std_k98ojb.Logic.NotEqual {}\n        input_f5f9a6 -> notequal_bca73d.left\n        1 -> notequal_bca73d.right\n        if_7c284f.predicate -> notequal_bca73d.result\n        for_065883.item -> notequal_bca73d.input\n        if_7c284f.else -> continue_07c7e3.next\n        instance(x: 104, y: -26) equal_2a6b28 root.Std_k98ojb.Logic.Equal {}\n        input_f5f9a6 -> equal_2a6b28.left\n        char -> equal_2a6b28.right\n        equal_2a6b28.result -> if_7c284f.then.predicate\n        for_065883.item -> equal_2a6b28.input\n        if_7c284f.then -> setter_6e7b4e.execute\n        continue_07c7e3.done -> setter_6e7b4e.new_value\n    }\n\n    \n\n    instance(x: 777, y: 760) first_repeated_e5a1d9 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -243, y: 3, name: \"string\") property(String) string_5d9a95\n\n        out(x: 1314, y: -1, name: \"char\") property(Number) char_c36f0c\n        out(x: 1238, y: -11, name: \"index\") property(Number) index_d6d38e\n\n        instance(x: 13, y: 0) count_9bfc2a root.Std_k98ojb.List.Count {}\n        instance(x: 246, y: 20) map_3f66c5 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 103, y: -15) strings_isnumeric_f4d64e root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 13, y: 40) if_7a6de9 root.Std_k98ojb.Std.If {}\n        instance(x: 16, y: 45) get_5cd34c root.Std_k98ojb.List.GetAt {}\n        instance(x: 23, y: 49) equal_5d4f2e root.Std_k98ojb.Logic.Equal {}\n        setter(x: -33, y: 0, name: \"setter_2e8a1e\") setter_2e8a1e = char\n        instance(x: 104, y: 57) if_e3a7db root.Std_k98ojb.Std.If {}\n        instance(x: 14, y: -11) stringstolower_9d43c6 root.Std_k98ojb.Strings.ToLower {}\n        string_5d9a95 -> map_3f66c5.input\n        map_3f66c5.output_list -> count_9bfc2a.items\n        strings_isnumeric_f4d64e(input) -> count_9bfc2a.value\n        if_e3a7db.predicate -> equal_5d4f2e.left\n        for(c in string_5d9a95) {\n            get_5cd34c.index -> map_3f66c5.gen_0\n            stringstolower_9d43c6(c) -> map_3f66c5.gen_1\n            if_e3a7db.then -> count_9bfc2a.reset\n            equal_5d4f2e.left -> get_5cd34c.value\n            equal_5d4f2e.right -> map_3f66c5.gen_0\n        }\n        count_9bfc2a.result -> if_e3a7db.execute\n        get_5cd34c.index -> setter_2e8a1e\n        strings_isnumeric_f4d64e(input) -> equal_5d4f2e.right\n        if_e3a7db.else -> for_065883.next\n    }\n\n    \n\n    instance(x: 17, y: -31) first_repeated_d6d96b root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -208, y: 28, name: \"input\") property(String) input_5f3b0a\n\n        out(x: 1084, y: -29, name: \"output\") property(Number) output_6e8cd7\n        out(x: 1159, y: 55, name: \"continue\") trigger() continue_b1c2d3\n\n        instance(x: 0, y: 0, name: \"setter_5f4a95\") setter_5f4a95 = index\n        instance(x: 123, y: -105) map_85b9e8 root.Std_k98ojb.Iteration.Map {}\n        list_instance(x: 190, y: -25) list_map_85b9e8 input_map_85b9e8 = [input_5f3b0a]\n        instance(x: 143, y: -75) count_93c35d root.Std_k98ojb.Std.Count {}\n        map_85b9e8 -> count_93c35d.items\n        map_85b9e8.output_list -> list_map_85b9e8\n        input_map_85b9e8 -> count_93c35d.input\n        0 -> count_93c35d.new_value\n        count_93c35d.result -> output_6e8cd7\n        map_85b9e8.output_list -> list_instance_1a3d2f\n        list_map_85b9e8.output_list -> input_map_85b9e8\n        instance(x: 114, y: -105) if_e4c0da root.Std_k98ojb.Std.If {}\n        map_85b9e8.output_list -> input_map_85b9e8\n        list_instance_1a3d2f -> input_map_85b9e8\n        input_map_85b9e8 -> if_e4c0da.predicate\n        1 -> if_e4c0da.new_value\n        output_6e8cd7 -> if_e4c0da.then\n        list_instance_1a3d2f -> if_e4c0da.else\n        input_map_85b9e8.output_list -> if_e4c0da.else\n    }\n\n    \n\n    instance(x: 777, y: 768) first_repeated_char_5eeaa3 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: 6, y: -24, name: \"input\") property(String) input_8a5f9b\n\n        out(x: 1134, y: -25, name: \"continue\") trigger() continue_0e2c47\n        out(x: 1057, y: -26, name: \"output\") property(Number) output_a3d1bd\n\n        instance(x: 0, y: 0, name: \"setter_9fda95\") setter_9fda95 = index\n        instance(x: 118, y: 15, name: \"map_54c2b4\") map_54c2b4 root.Std_k98ojb.Iteration.Map {}\n        instance(x: -16, y: 19, name: \"filter_8dce1a\") filter_8dce1a root.Std_k98ojb.Query.Filter {}\n        instance(x: 94, y: -5, name: \"strings_contains_9f3e25\") strings_contains_9f3e25 root.Std_k98ojb.Strings.Contains {}\n        function_0c6e2f4 root.Std_k98ojb.Function {}\n\n        input_8a5f9b -> map_54c2b4.items\n        map_54c2b4.output_list -> filter_8dce1a.list\n        map_54c2b4.handler -> function_0c6e2f4\n        strings_contains_9f3e25.is_contained -> function_0c6e2f4.input\n        function_0c6e2f4.result -> output_a3d1bd\n        filter_8dce1a.predicate -> strings_contains_9f3e25.where\n        function_0c6e2f4.output_list -> output_a3d1bd\n    }\n\n    \n\n    instance(x: 113, y: -26) first_repeated_0dd5b7 root.main.first_repeated {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -217, y: 4, name: \"list\") property(List) list_5f6a1d\n\n        out(x: 1203, y: -7, name: \"number\") property(Number) number_c9b0c2\n\n        instance(x: 88, y: 34) map_8e8c47 root.Std_k98ojb.Iteration.Map {}\n        list_5f6a1d -> map_8e8c47.items\n        func() {\n            in(x: -128, y: 43, name: \"current\") property(Number) current_33db9f\n\n            out(x: 245, y: 39, name: \"\") property(Number) _5dd6dc\n\n            instance(x: 85, y: 37) min_c3e343 root.Std_k98ojb.List.Min {}\n            current_33db9f -> min_c3e343.items\n            min_c3e343.min -> number_c9b0c2\n        } -> map_8e8c47.handler\n        instance(x: -20, y: 36) second_min_f1d17a root.Std_k98ojb.List.SecondMin {}\n        list_5f6a1d -> second_min_f1d17a.items\n        second_min_f1d17a.second -> number_c9b0c2\n    }\n\n    \n\n    instance(x: -63, y: 523) second_smallest_5fda4e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -247, y: 2, name: \"list\") property(List) list_4f3e1d\n\n        out(x: 1039, y: -6, name: \"min1\") property(Number) min1_e87a0c\n        out(x: 1185, y: -11, name: \"output\") property(Number) output_d2d3dd\n\n        instance(x: 98, y: -104, name: \"first_min\") Std.If {}\n        instance(x: -25, y: -75, name: \"second_min\") Std.If {}\n        instance(x: 0, y: 1, name: \"min1_setter\") setter_6e7b4e = min1_e87a0c\n        instance(x: 2, y: 3, name: \"min2_setter\") setter_6e7b4e = output_d2d3dd\n\n        list_4f3e1d -> first_min.items\n        -1 -> first_min.then\n        1 -> second_min.then\n        first_min.execute -> min1_e87a0c.new_value\n    }\n\n    \n\n    instance(x: 101, y: 29) second_smallest_6a5f7b root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -528, y: 2, name: \"list\") property(List) list_5d36f4\n\n        out(x: 1068, y: 35, name: \"second\") property(Number) second_7ebc31\n\n        instance(x: 0, y: 0) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        list_5d36f4 -> map_f2330d.items\n        func() {\n            in(x: -114, y: 34, name: \"x\") property(Number) x_2cbb8a\n\n            out(x: 313, y: 48, name: \"\") property(Number) _min_5b4f67\n\n            instance(x: 98, y: 44) min_c3e343 root.Std_k98ojb.List.Min {}\n            x_2cbb8a -> min_c3e343.items\n            min_c3e343.min -> _min_5b4f67\n        } -> map_f2330d.handler\n        instance(x: -346, y: 61) second_smallest_b6c1bf root.Std_k98ojb.List.Second {}\n        list_5d36f4 -> second_smallest_b6c1bf.items\n        _min_5b4f67 -> second_smallest_b6c1bf.value\n    }\n\n    \n\n    instance(x: 0, y: -47) second_smallest_b6c1bf root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -248, y: 2, name: \"list\") property(List) list_1df6c4\n\n        out(x: 1073, y: -8, name: \"secondSmallest\") property(Number) second_smallest_e5d9a0\n\n        instance(x: 13, y: -16, name: \"firstSmallest\") filter_c91965 root.Std_k98ojb.Query.Filter {}\n        instance(x: 246, y: -19, name: \"secondSmallestFilter\") filter_4d4556 root.Std_k98ojb.Query.Filter {}\n        instance(x: 1057, y: -64, name: \"mapSecondSmallest\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -121, y: -21, name: \"current\") property(Number) current_8c5d26\n\n            out(x: 343, y: 13, name: \"\") property(Number) _smallest_7ea3f1\n\n            instance(x: 0, y: 16) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 288, y: -18) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> notequal_7836b4.right\n            modulo_c76d2b.result -> notequal_7836b4.left\n            current_8c5d26 -> modulo_c76d2b.value\n            notequal_7836b4.result -> _smallest_7ea3f1\n        } -> filter_c91965.handler\n        list_1df6c4 -> filter_c91965.items\n        filter_c91965.output_list -> map_c73e3b.items\n        func() {\n            in(x: -113, y: 25, name: \"current\") property(Number) current_7f8d84\n\n            out(x: 521, y: 40, name: \"\") property(Number) _smallest_9c2a6b\n\n            instance(x: 83, y: 36) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 286, y: -28) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_7f8d84 -> modulo_ad7b2a.value\n            3 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            1 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> _smallest_9c2a6b\n        } -> map_c73e3b.handler\n        map_c73e3b.output_list -> second_smallestFilter.list\n        false -> second_smallestFilter.item\n        not_75283f.result -> _smallest_7ea3f1\n        filter_4d4556.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: 0, y: -28) second_smallest_d5c0df root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -193, y: 33, name: \"list\") property(List) list_8dd3d4\n\n        out(x: 191, y: 17, name: \"smallest\") property(Number) smallest_f2b1e5\n        out(x: 1069, y: -63, name: \"second_smallest\") property(Number) second_smallest_81a6f4\n\n        instance(x: 0, y: 0) map_d34d15 root.Std_k98ojb.Iteration.Map {}\n        list_8dd3d4 -> map_d34d15.items\n        func() {\n            in(x: -120, y: 57, name: \"element\") property(Number) element_5f6c9a\n\n            out(x: 0, y: 17, name: \"bool\") property(Bool) bool_e4e2ff\n\n            instance(x: 103, y: 50) lessThanOrEqual_7b8ad3 root.Std_k98ojb.Math.LessThanOrEqual {}\n            instance(x: 191, y: -35, name: \"smallest\") property(Number) smallest_f2b1e5\n            instance(x: 1069, y: -63, name: \"second_smallest\") property(Number) second_smallest_81a6f4\n\n            element_5f6c9a -> lessThanOrEqual_7b8ad3.left\n            smallest_f2b1e5 -> lessThanOrEqual_7b8ad3.right\n            0 -> lessThanOrEqual_7b8ad3.value\n            element_5f6c9a -> lessThanOrEqual_7b8ad3.item\n            bool_e4e2ff -> second_smallest_81a6f4\n        } -> map_d34d15.handler\n        map_d34d15.output_list -> list_8dd3d4\n    }\n\n    \n\n    instance(x: 0, y: 73) second_smallest_7c9cf1 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -248, y: 21, name: \"list\") property(List) list_1dce15\n\n        out(x: 1136, y: 14, name: \"second\") property(Number) second_7f9e3c\n        out(x: 1342, y: -55, name: \"first\") property(Number) first_b4a0b8\n\n        instance(x: 95, y: 10) min_f7d2f6 root.Std_k98ojb.List.Min {}\n        list_1dce15 -> min_f7d2f6.items\n        func() {\n            in(x: -123, y: 38, name: \"a\") property(Number) a_e8c0e3\n\n            out(x: 533, y: 21, name: \"\") property(Number) _first_5eb4b9\n\n            instance(x: 78, y: 36) count_b6fde5 root.Std_k98ojb.Std.Count {}\n            a_e8c0e3 -> count_b6fde5.input\n            list_1dce15 -> count_b6fde5.items\n            count_b6fde5.count -> first_b4a0b8\n        } -> min_f7d2f6.handler\n        min_f7d2f6.min -> second_7f9e3c\n    }\n\n    \n\n    instance(x: 102, y: -23) second_smallest_c1ab51 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -217, y: 20, name: \"list\") property(List) list_9da5a8\n\n        out(x: 1092, y: -31, name: \"second_smallest\") property(Number) second_smallest_f3f1c4\n\n        instance(x: 91, y: -24, name: \"first_smallest\") get_first_smallest root.Std_k98ojb.List.FirstItem {}\n        instance(x: 240, y: -22, name: \"second_smallest_candidate\") map_0a8d34 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 123, y: -31, name: \"is_greater\") compare_f7f6b9 root.Std_k98ojb.Math.GreaterThan {}\n        func() {\n            in(x: -193, y: 14, name: \"x\") property(Number) x_3c8d45\n\n            out(x: 1031, y: -27, name: \"\") property(Bool) bool_ba2e0f\n\n            instance(x: 242, y: 5) min_9a6aa7 root.Std_k98ojb.List.Min {}\n            list_9da5a8 -> min_9a6aa7.items\n            x_3c8d45 -> min_9a6aa7.value\n            min_9a6aa7.min -> second_smallest_f3f1c4\n        } -> get_first_smallest.handler\n        list_9da5a8 -> map_0a8d34.items\n        get_first_smallest.item -> compare_f7f6b9.left\n        x_3c8d45 -> compare_f7f6b9.right\n        compare_f7f6b9.result -> bool_ba2e0f\n        if (bool_ba2e0f) {\n            map_0a8d34.output_list -> second_smallest_candidate\n            second_smallest_candidate.item -> is_greater.left\n            x_3c8d45 -> is_greater.right\n            is_greater.result -> bool_ba2e0f\n        } else {\n            continue_f7b9bf root.Std_k98ojb.Std.For {}\n            list_9da5a8 -> continue_f7b9bf.items\n            continue_f7b9bf.index -> second_smallest_candidate.new_value\n        }\n    }\n\n    \n\n    instance(x: 104, y: 570) second_smallest_c0c2d6 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -275, y: 0, name: \"list\") property(List) list_1f8d2e\n\n        out(x: 1119, y: 27, name: \"output\") property(Number) output_4c3dfc\n\n        instance(x: 12, y: 34) sort_f35a31 root.Std_k98ojb.List.Sort {}\n        list_1f8d2e -> sort_f35a31.items\n        func() {\n            in(x: -193, y: -25, name: \"first\") property(Number) first_a9ad24\n\n            out(x: 1156, y: 49, name: \"\") property(Number) second_5f1d3c\n\n            instance(x: 0, y: -11) min_f7c4b2 root.Std_k98ojb.List.Min {}\n            first_a9ad24 -> min_f7c4b2.items\n            func() {\n                in(x: -191, y: -23, name: \"x\") property(Number) x_8a6ff1\n\n                out(x: 1155, y: 51, name: \"\") property(Number) result_66d0f9\n\n                instance(x: 97, y: 28) greaterthan_f2c7e1 root.Std_k98ojb.Math.GreaterThan {}\n                x_8a6ff1 -> greaterthan_f2c7e1.left\n                first_a9ad24 -> greaterthan_f2c7e1.right\n                greaterthan_f2c7e1.result -> result_66d0f9\n            } -> min_f7c4b2.handler\n            min_f7c4b2.min -> second_5f1d3c\n        } -> sort_f35a31.execute\n        sort_f35a31.output_list -> list_1f8d2e\n    }\n\n    \n\n    instance(x: 0, y: -18) second_smallest_5c9c89 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -269, y: 24, name: \"list\") property(List) list_3d2f8e\n\n        out(x: 1334, y: 23, name: \"output\") property(Number) output_e9c7a5\n\n        instance(x: 0, y: 1) filter_c91965 root.Std_k98ojb.Query.Filter {}\n        func() {\n            in(x: -127, y: 24, name: \"a\") property(Number) a_7d3f6e\n            in(x: -122, y: -73, name: \"b\") property(Number) b_8df77c\n\n            out(x: 0, y: 1, name: \"\") property(Bool) bool_ae4ba9\n\n            instance(x: 91, y: -26) equal_7d6bb2 root.Std_k98ojb.Logic.Equal {}\n            a_7d3f6e -> equal_7d6bb2.left\n            b_8df77c -> equal_7d6bb2.right\n            lessThanOrEqual_7ed5b0.left -> equal_7d6bb2.result\n            1 -> lessThanOrEqual_7ed5b0.right\n            a_7d3f6e -> lessThanOrEqual_7ed5b0.value\n        } -> filter_c91965.handler\n        list_3d2f8e -> filter_c91965.items\n        func() {\n            in(x: -126, y: 22, name: \"current\") property(Number) current_6ba7c9\n\n            out(x: 0, y: 1, name: \"\") property(Bool) bool_eb3f36\n\n            instance(x: 91, y: -26) equal_ba2dca root.Std_k98ojb.Logic.Equal {}\n            lessThanOrEqual_7ed5b0.left -> equal_ba2dca.left\n            current_6ba7c9 -> lessThanOrEqual_7ed5b0.value\n        } -> filter_c91965.handler\n        list_3d2f8e -> filter_c91965.items\n        func() {\n            in(x: -126, y: 22, name: \"current\") property(Number) current_6ba7c9\n\n            out(x: 0, y: 1, name: \"\") property(Bool) bool_eb3f36\n\n            instance(x: 91, y: -26) equal_ba2dca root.Std_k98ojb.Logic.Equal {}\n            lessThanOrEqual_7ed5b0.left -> equal_ba2dca.right\n            current_6ba7c9 -> lessThanOrEqual_7ed5b0.value\n        } -> filter_c91965.handler\n        list_3d2f8e -> filter_c91965.items\n        func() {\n            in(x: -126, y: 22, name: \"current\") property(Number) current_6ba7c9\n\n            out(x: 0, y: 1, name: \"\") property(Bool) bool_eb3f36\n\n            instance(x: 91, y: -26) lessThanOrEqual_7ed5b0 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_6ba7c9 -> lessThanOrEqual_7ed5b0.value\n        } -> filter_c91965.handler\n        list_3d2f8e -> filter_c91965.items\n        func() {\n            in(x: -126, y: 22, name: \"current\") property(Number) current_6ba7c9\n\n            out(x: 0, y: 1, name: \"\") property(Bool) bool_eb3f36\n\n            instance(x: 91, y: -26) lessThanOrEqual_7ed5b0 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_6ba7c9 -> lessThanOrEqual_7ed5b0.value\n        } -> filter_c91965.handler\n        list_3d2f8e -> filter_c91965.items\n        func() {\n            in(x: -126, y: 22, name: \"current\") property(Number) current_6ba7c9\n\n            out(x: 0, y: 1, name: \"\") property(Bool) bool_eb3f36\n\n            instance(x: 91, y: -26) lessThanOrEqual_7ed5b0 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_6ba7c9 -> lessThanOrEqual_7ed5b0.value\n        } -> filter_c91965.handler\n        list_3d2f8e -> filter_c91965.items\n        func() {\n            in(x: -126, y: 22, name: \"current\") property(Number) current_6ba7c9\n\n            out(x: 0, y: 1, name: \"\") property(Bool) bool_eb3f36\n\n            instance(x: 91, y: -26) lessThanOrEqual_7ed5b0 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_6ba7c9 -> lessThanOrEqual_7ed5b0.value\n        } -> filter_c91965.handler\n        list_3d2f8e -> filter_c91965.items\n        func() {\n            in(x: -126, y: 22, name: \"current\") property(Number) current_6ba7c9\n\n            out(x: 0, y: 1, name: \"\") property(Bool) bool_eb3f36\n\n            instance(x: 91, y: -26) lessThanOrEqual_7ed5b0 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_6ba7c9 -> lessThanOrEqual_7ed5b0.value\n        } -> filter_c91965.handler\n        list_3d2f8e -> filter_c91965.items\n        func() {\n            in(x: -126, y: 22, name: \"current\") property(Number) current_6ba7c9\n\n            out(x: 0, y: 1, name: \"\") property(Bool) bool_eb3f36\n\n            instance(x: 91, y: -26) lessThanOrEqual_7ed5b0 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_6ba7c9 -> lessThanOrEqual_7ed5b0.value\n        } -> filter_c91965.handler\n        list_3d2f8e -> filter_c91965.items\n        func() {\n            in(x: -126, y: 22, name: \"current\") property(Number) current_6ba7c9\n\n            out(x: 0, y: 1, name: \"\") property(Bool) bool_eb3f36\n\n            instance(x: 91, y: -26) lessThanOrEqual_7ed5b0 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_6ba7c9 -> lessThanOrEqual_7ed5b0.value\n        } -> filter_c91965.handler\n        list_3d2f8e -> filter_c91965.items\n        func() {\n            in(x: -126, y: 22, name: \"current\") property(Number) current_6ba7c9\n\n            out(x: 0, y: 1, name: \"\") property(Bool) bool_eb3f36\n\n            instance(x: 91, y: -26) lessThanOrEqual_7ed5b0 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_6ba7c9 -> lessThanOrEqual_7ed5b0.value\n        } -> filter_c91965.handler\n        list_3d2f8e -> filter_c91965.items\n        func() {\n            in(x: -126, y: 22, name: \"current\") property(Number) current_6ba7c9\n\n            out(x: 0, y: 1, name: \"\") property(Bool) bool_eb3f36\n\n            instance(x: 91, y: -26) lessThanOrEqual_7ed5b0 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_6ba7c9 -> lessThanOrEqual_7ed5b0.value\n        } -> filter_c91965.handler\n        list_3d2f8e -> filter_c91965.items\n        func() {\n            in(x: -126, y: 22, name: \"current\") property(Number) current_6ba7c9\n\n            out(x: 0, y: 1, name: \"\") property(Bool) bool_eb3f36\n\n            instance(x: 91, y: -26) lessThanOrEqual_7ed5b0 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_6ba7c9 -> lessThanOrEqual_7ed5b0.value\n        } -> filter_c91965.handler\n        list_",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -202, y: 55, name: \"list\") property(List) list_0a9e3d\n\n        out(x: 1076, y: -14, name: \"output\") property(Number) output_4f8f2b\n\n        instance(x: 134, y: 56) sort_c5c7c6 root.Std_k98ojb.List.Sort {}\n        list_0a9e3d -> sort_c5c7c6.items\n        func() {\n            in(x: -115, y: 31, name: \"current\") property(Number) current_bcd4ac\n\n            out(x: 1212, y: -28, name: \"output\") property(Number) _7dd98d\n\n            instance(x: 110, y: 40) count_c6e5b9 root.Std_k98ojb.Std.Count {}\n            list_0a9e3d -> count_c6e5b9.items\n            count_c6e5b9.value -> current_bcd4ac\n            count_c6e5b9.reset -> _7dd98d\n            count_c6e5b9.count -> current_bcd4ac\n        } -> sort_c5c7c6.handler\n        sort_c5c7c6.result -> second_smallest\n    }\n\n    \n\n    instance(x: 97, y: -24) second_smallest_8de2f1 root.main.second_smallest {}\n}"
            ]
        }
    }
]