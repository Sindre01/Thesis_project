[
    {
        "experiment_name": "regular_similarity_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 18500,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -175, y: 15, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_7c6b3d\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_5e0c4a\n\n        instance(x: 133, y: -131) intersection_1f9c1 root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2f9e -> intersection_1f9c1.left\n        list2_7c6b3d -> intersection_1f9c1.right\n        instance(x: 360, y: -95) notempty_4b0c5 root.Std_k98ojb.List.NotEmpty {}\n        intersection_1f9c1.intersection -> notempty_4b0c5.list\n        notempty_4b0c5.isEmpty -> output_5e0c4a\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -175, y: 18, name: \"list1\") property(List) list1_4e9f8a\n        in(x: -163, y: -122, name: \"list2\") property(List) list2_7b0c3d\n\n        out(x: 786, y: -103, name: \"output\") property(Bool) output_6e5c1e\n\n        instance(x: 135, y: -131) intersection_4f8a9f root.Std_k98ojb.Sets.Intersection {}\n        list1_4e9f8a -> intersection_4f8a9f.left\n        list2_7b0c3d -> intersection_4f8a9f.right\n        instance(x: 365, y: -102) notempty_5f8b6f root.Std_k98ojb.List.NotEmpty {}\n        intersection_4f8a9f.intersection -> notempty_5f8b6f.list\n        notempty_5f8b6f.isEmpty -> output_6e5c1e\n    }\n\n    \n\n    instance(x: 94, y: -62) has_common_element_e7d3cc root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -173, y: 18, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        instance(x: 360, y: -95) notempty_8e8c54 root.Std_k98ojb.List.NotEmpty {}\n        intersection_201051.intersection -> notempty_8e8c54.list\n        notempty_8e8c54.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -171, y: 18, name: \"list1\") property(List) list1_9e6f8a\n        in(x: -157, y: -121, name: \"list2\") property(List) list2_7c3d5b\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_0a4b1e\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_8f9a6 root.Std_k98ojb.Sets.Intersection {}\n        list1_9e6f8a -> intersection_8f9a6.left\n        list2_7c3d5b -> intersection_8f9a6.right\n        instance(x: 188, y: -50) notempty_4e0a3 root.Std_k98ojb.List.NotEmpty {}\n        intersection_8f9a6.intersection -> notempty_4e0a3.list\n        notempty_4e0a3.isEmpty -> output_0a5b1e\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_2c7d2 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -175, y: 18, name: \"list1\") property(List) list1_3a8f9e\n        in(x: -165, y: -120, name: \"list2\") property(List) list2_e5b6c7\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_0d9c4e\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_c1a8f3 root.Std_k98ojb.Sets.Intersection {}\n        list1_3a8f9e -> intersection_c1a8f3.left\n        list2_e5b6c7 -> intersection_c1a8f3.right\n        instance(x: -11, y: 9) notempty_0d4f5c root.Std_k98ojb.List.NotEmpty {}\n        intersection_c1a8f3.intersection -> notempty_0d4f5c.list\n        notempty_0d4f5c.isEmpty -> output_0d9c4e\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_6b7f1f root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -178, y: 18, name: \"list1\") property(List) list1_4a8b3e\n        in(x: -172, y: -111, name: \"list2\") property(List) list2_7c6f0d\n\n        out(x: 555, y: -98, name: \"output\") property(Bool) output_9a1f7f\n\n        instance(x: 147, y: -96) intersection_c5e8b4 root.Std_k98ojb.Sets.Intersection {}\n        list1_4a8b3e -> intersection_c5e8b4.left\n        list2_7c6f0d -> intersection_c5e8b4.right\n        instance(x: 362, y: -95) notempty_9b9a5f root.Std_k98ojb.List.NotEmpty {}\n        intersection_c5e8b4.intersection -> notempty_9b9a5f.list\n        notempty_9b9a5f.isEmpty -> output_9a1f7f\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_a6d3c2 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -174, y: 19, name: \"list1\") property(List) list1_8e9f2a\n        in(x: -163, y: -117, name: \"list2\") property(List) list2_6c7d5b\n\n        out(x: 504, y: -52, name: \"output\") property(Bool) output_3e4a0f\n\n        instance(x: 222, y: -49, name: \"intersection\") intersection_c9e8ee root.Std_k98ojb.Sets.Intersection {}\n        list1_8e9f2a -> intersection_c9e8ee.left\n        list2_6c7d5b -> intersection_c9e8ee.right\n        instance(x: 108, y: -20) notempty_4f0a8c root.Std_k98ojb.List.NotEmpty {}\n        intersection_c9e8ee.intersection -> notempty_4f1a8c.list\n        notempty_4f1a8c.isEmpty -> output_3e4a0f\n    }\n\n    \n\n    instance(x: -136, y: 45) has_common_element_a5d7b2 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -178, y: 18, name: \"list1\") property(List) list1_4a8b9f\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_7e3c5d\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_e6c1ec\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_4f9b8a root.Std_k98ojb.Sets.Intersection {}\n        list1_4a8b9f -> intersection_4f9b8a.left\n        list2_7e3c5d -> intersection_4f9b8a.right\n        instance(x: -11, y: 9) notempty_6a9c8a root.Std_k98ojb.List.NotEmpty {}\n        intersection_4f9b8a.intersection -> notempty_6a9c8a.list\n        notempty_6a9c8a.isEmpty -> output_e6c1ec\n    }\n\n    \n\n    instance(x: -138, y: -63) common_element_5d0e7c root.main.common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -172, y: 18, name: \"list1\") property(List) list1_94ca93\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_aa3106\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_20b99a\n\n        instance(x: 221, y: -48, name: \"has_common_element\") intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_94ca93 -> intersection_c7c7e6.left\n        list2_aa3106 -> intersection_c7c7e6.right\n        instance(x: -11, y: 9) notempty_4aeea6 root.Std_k98ojb.List.NotEmpty {}\n        intersection_c7c7e6.intersection -> notempty_4aeea6.list\n        notempty_4aeea6.isEmpty -> output_20b99a\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_aad0c2 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -176, y: 20, name: \"list1\") property(List) list1_8e6a3f\n        in(x: -172, y: -123, name: \"list2\") property(List) list2_7b9c0d\n\n        out(x: 505, y: -47, name: \"output\") property(Bool) output_4f1b5e\n\n        instance(x: 221, y: -45, name: \"intersection\") intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_8e6a3f -> intersection_c7c7e6.left\n        list2_7b9c0d -> intersection_c7c7e6.right\n        instance(x: -11, y: 9) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 188, y: -47) length_8166b0 root.Std_k98ojb.List.Length {}\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> not_75283f.input\n        not_75283f.result -> output_4f1b5e\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_aad0c2 root.main.has_common_element {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 5, name: \"list\") property(List) list_3a0f9e\n\n        out(x: 1227, y: 2, name: \"output\") property(Bool) output_eb1d8c\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"First even number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"First odd number\") ``First even number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_3a0f9e -> filter_f3b46d.list\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        list_3a0f9e -> ``First even number_0b1361``.items\n        find_de624f.item -> sub_852f2e.first\n        ``First even number_0b1361``.item -> sub_852f2e.second\n        sub_852f2e.result -> output_eb1d8c\n    }\n\n    \n\n    instance(x: -291, y: 177) is_consecutive_f53d27 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -277, y: 3, name: \"list\") property(List) list_1a8f9e\n\n        out(x: 800, y: -2, name: \"output\") property(Bool) output_eb7c6d\n\n        instance(x: 0, y: 0) for_4b9c3f root.Std_k98ojb.Std.For {}\n        instance(x: 528, y: 5) and_1e9a8c root.Std_k98ojb.Logic.And {}\n        instance(x: 532, y: -145) lessthan_7d0b2c root.Std_k98ojb.Math.LessThan {}\n        instance(x: 531, y: -65) add_5f6b1e root.Std_k98ojb.Math.Add {}\n        instance(x: 529, y: -251) getat_e9a8ed root.Std_k98ojb.List.GetAt {}\n        list_1a8f9e -> for_4b9c3f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_5d0c6f\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_5d0c6f -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> for_4b9c3f.handler\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_5d0c6f\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_5d0c6f -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> for_4b9c3f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_5d0c6f\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_5d0c6f -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> for_4b9c3f.filter\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_5d0c6f\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_5d0c6f -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> for_4b9c3f.sort\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_5d0c6f\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_5d0c6f -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> for_4b9c3f.sortOn\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_5d0c6f\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_5d0c6f -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> for_4b9c3f.reverse\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_5d0c6f\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_5d0c6f -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> for_4b9c3f.mapEntries\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_5d0c6f\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_5d0c6f -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> for_4b9c3f.zip\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_5d0c6f\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_5d",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 0, name: \"list\") property(List) list_1e3f8a\n\n        out(x: 1217, y: 11, name: \"output\") property(Bool) output_eb9c4d\n\n        instance(x: 1006, y: -5) ifexpression_0a2c9c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 389, y: 122, name: \"getter_7f3e6d\") getter_7f3e6d = previous\n        setter(x: 835, y: -315, name: \"setter_b8a2b9\") setter_b8a2b9 = previous\n        instance(x: 366, y: -19) for_d1c5ef root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -120, name: \"setter_b8a2b9\") setter_4f7d6e = previous\n        instance(x: -276, y: -34) getat_e3d9ee root.Std_k98ojb.List.GetAt {}\n        ifexpression_0a2c9c.else -> output_eb9c4d\n        ifexpression_0a2c9c.value -> output_eb9c4d\n        ifexpression_0a2c9c.then -> setter_b8a2b9.execute\n        list_1e3f8a -> for_d1c5ef.items\n        for_d1c5ef.item -> ifexpression_0a2c9c.gen_2\n        for_d1c5ef.index -> ifexpression_0a2c9c.gen_0\n        getter_7f3e6d.value -> ifexpression_0a2c9c.gen_1\n        for_d1c5ef.onItem -> ifexpression_0a2c9c.execute\n        for_d1c5ef.done -> output_eb9c4d\n        for_d1c5ef.item -> setter_b8a2b9.new_value\n        list_1e3f8a -> getat_e3d9ee.list\n        0 -> getat_e3d9ee.index\n        getat_e3d9ee.itemAtIndex -> setter_4f7d6e.new_value\n        setter_4f7d6e.continue -> for_d1c5ef.reset\n        setter_b8a2b9.continue -> for_d1c5ef.next\n    }\n\n    \n\n    instance(x: -82, y: 57) is_consecutive_0c3c5f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -285, y: 1, name: \"list\") property(List) list_3f0a8e\n\n        out(x: 1227, y: 2, name: \"output\") property(Bool) output_9b5d4c\n\n        instance(x: 752, y: -6) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 73, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -309, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -135) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -236, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -151) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_9b5d4c\n        ifexpression_875761.value -> output_9b5d4c\n        list_3f0a8e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        list_3f0a8e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        getter_b280eb.value -> setter_9d4f1c.old_value\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_d26972.done -> output_9b5d4c\n        for_d26972.item -> setter_9d4f1c.new_value\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_2b8a6f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -278, y: 4, name: \"list\") property(List) list_1a8f9e\n\n        out(x: 1225, y: 7, name: \"output\") property(Bool) output_e6b3c0\n\n        instance(x: 0, y: 11) sort_1d2a2f root.Std_k98ojb.List.Sort {}\n        instance(x: -92, y: 88, name: \"filter\") filter_7e9f4f root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 0, y: 167) map_1c8d6a root.Std_k98ojb.Iteration.Map {}\n        instance(x: -89, y: 253, name: \"filter\") filter_7e9f4f_0 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 262) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 341, name: \"filter\") filter_7e9f4f_1 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 350) length_6e87f2_0 root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 429, name: \"filter\") filter_7e9f4f_2 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 438) length_6e87f2_1 root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 517, name: \"filter\") filter_7e9f4f_3 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 526) length_6e87f2_2 root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 605, name: \"filter\") filter_7e9f4f_4 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 614) length_6e87f2_3 root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 693, name: \"filter\") filter_7e9f4f_5 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 702) length_6e87f2_4 root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 781, name: \"filter\") filter_7e9f4f_6 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 790) length_6e87f2_5 root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 869, name: \"filter\") filter_7e9f4f_7 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 878) length_6e87f2_6 root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 957, name: \"filter\") filter_7e9f4f_8 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 966) length_6e87f2_7 root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 1045, name: \"filter\") filter_7e9f4f_9 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 1054) length_6e87f2_8 root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 1133, name: \"filter\") filter_7e9f4f_a root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 1142) length_6e87f2_9 root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 1221, name: \"filter\") filter_7e9f4f_b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 1230) length_6e87f2_a root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 1309, name: \"filter\") filter_7e9f4f_c root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 1318) length_6e87f2_b root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 1397, name: \"filter\") filter_7e9f4f_d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 1406) length_6e87f2_c root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 1485, name: \"filter\") filter_7e9f4f_e root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 1494) length_6e87f2_d root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 1573, name: \"filter\") filter_7e9f4f_f root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 1582) length_6e87f2_e root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 1661, name: \"filter\") filter_7e9f4f_10 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 1670) length_6e87f2_f root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 1749, name: \"filter\") filter_7e9f4f_11 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 1758) length_6e87f2_10 root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 1837, name: \"filter\") filter_7e9f4f_12 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 1846) length_6e87f2_11 root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 1925, name: \"filter\") filter_7e9f4f_13 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 1934) length_6e87f2_12 root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 2013, name: \"filter\") filter_7e9f4f_14 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 2022) length_6e87f2_13 root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 2101, name: \"filter\") filter_7e9f4f_15 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 189, y: 2110) length_6e87f2_14 root.Std_k98ojb.List.Length {}\n        instance(x: -89, y: 2189, name: \"filter\") filter_7e9",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 3, name: \"list\") property(List) list_1a0f2e\n\n        out(x: 1127, y: 6, name: \"output\") property(Bool) output_9c4b5d\n\n        instance(x: 1048, y: -13) ifexpression_7e3a1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e3a1.else -> output_9c4b5d\n        ifexpression_7e3a1.value -> setter_9d4f1c.execute\n        list_1a0f2e -> for_d26972.items\n        for_d26972.item -> ifexpression_7e3a1.gen_2\n        for_d26972.index -> ifexpression_7e3a1.gen_0\n        getter_b280eb.value -> ifexpression_7e3a1.gen_1\n        for_d26972.onItem -> ifexpression_7e3a1.execute\n        for_d26972.done -> output_9c4b5d\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1a0f2e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_2a3b6 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -277, y: 2, name: \"list\") property(List) list_1a8f0e\n\n        out(x: 1023, y: 77, name: \"output\") property(Bool) output_9c7d5b\n\n        instance(x: 772, y: 76) filter_4e2a8c root.Std_k98ojb.Query.Filter {\n            where: \"it + 1 == next\"\n        }\n        instance(x: -49, y: 372) firstitem_6f3f7d root.Std_k98ojb.List.FirstItem {}\n        instance(x: -48, y: 517) lastitem_5a8e2c root.Std_k98ojb.List.LastItem {}\n        instance(x: 188, y: 425) length_9b4a0c root.Std_k98ojb.List.Length {}\n        instance(x: 189, y: -95) equal_1f7d6c root.Std_k98ojb.Logic.Equal {}\n        list_1a8f0e -> filter_4e2a8c.list\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_9a3c5f\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_7b4d1e\n\n            instance(x: 112, y: 80) modulo_6e8c2f root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_5a9f3f root.Std_k98ojb.Logic.Equal {}\n            current_9a3c5f -> modulo_6e8c2f.value\n            2 -> modulo_6e8c2f.divisor\n            modulo_6e8c2f.result -> equal_5a9f3f.left\n            0 -> equal_5a9f3f.right\n            equal_5a9f3f.result -> bool_7b4d1e\n        } -> filter_4e2a8c.predicate\n        list_1a8f0e -> firstitem_6f3f7d.list\n        list_1a8f0e -> lastitem_5a8e2c.list\n        list_1a8f0e -> length_9b4a0c.list\n        filter_4e2a8c.result -> equal_1f7d6c.left\n        1 -> equal_1f7d6c.right\n        lastitem_5a8e2c.item -> equal_1f7d6c.gen_1\n        firstitem_6f3f7d.item -> equal_1f7d6c.gen_0\n        length_9b4a0c.length -> equal_1f7d6c.gen_2\n        filter_4e2a8c.result -> output_9c7d5b\n    }\n\n    \n\n    instance(x: -67, y: 127) is_consecutive_3b9f5c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 3, name: \"list\") property(List) list_1a0f2e\n\n        out(x: 1059, y: 4, name: \"output\") property(Bool) output_7b8c8d\n\n        instance(x: 0, y: -10) sort_on_3e5e6f root.Std_k98ojb.Query.SortOn {\n            key: \"it\"\n        }\n        instance(x: 252, y: 4) map_1a2b9c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 528, y: -8) sub_3d7e6f root.Std_k98ojb.Math.Sub {}\n        instance(x: 778, y: 0) lessthanorequal_4a5d1f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1012, y: -9) and_8c3e7f root.Std_k98ojb.Logic.And {}\n        instance(x: 1256, y: 0) reduce_7b4a5d root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"it && previous + 1 == current\"\n        }\n        sort_on_3e5e6f.result -> map_1a2b9c.items\n        func() {\n            in(x: -121, y: 44, name: \"current\") property(Number) current_7d8c0f\n\n            out(x: 383, y: 31, name: \"\") property(Number) _6e5b3f\n\n            instance(x: 92, y: 38) index_9a1b2f root.Std_k98ojb.Iteration.Map {}\n            current_7d8c0f -> index_9a1b2f.item\n            map_1a2b9c.index -> index_9a1b2f.items\n            index_9a1b2f.output_list -> sub_3d7e6f.first\n            1 -> sub_3d7e6f.second\n            sub_3d7e6f.result -> _6e5b3f\n        } -> map_1a2b9c.handler\n        map_1a2b9c.output_list -> reduce_7b4a5d.items\n        1 -> reduce_7b4a5d.initial_value\n        lessthanorequal_4a5d1f.result -> and_8c3e7f.right\n        sub_3d7e6f.result -> lessthanorequal_4a5d1f.left\n        0 -> lessthanorequal_4a5d1f.right\n        map_1a2b9c.output_list -> reduce_7b4a5d.previous\n        and_8c3e7f.result -> reduce_7b4a5d.current\n        list_1a0f2e -> sort_on_3e5e6f.list\n        reduce_7b4a5d.result -> output_7b8c8d\n    }\n\n    \n\n    instance(x: -56, y: 54) is_consecutive_9f5b8c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -285, y: 0, name: \"list\") property(List) list_1a9d5e\n\n        out(x: 1067, y: 3, name: \"output\") property(Bool) output_6f2b8c\n\n        instance(x: 1054, y: -17) for_0f7b8f root.Std_k98ojb.Std.For {}\n        instance(x: 1011, y: 70) if_3a9e5d root.Std_k98ojb.Std.If {}\n        instance(x: 1032, y: -111) sub_6c4c8c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1050, y: -197) equal_1f7c5f root.Std_k98ojb.Logic.Equal {}\n        list_1a9d5e -> for_0f7b8f.items\n        func() {\n            in(x: -114, y: 48, name: \"current\") property(Number) current_6e2c3f\n\n            out(x: 792, y: 39, name: \"bool\") property(Bool) bool_5a9d4b\n\n            instance(x: 112, y: 34) modulo_1b8f7f root.Std_k98ojb.Math.Modulo {}\n            instance(x: 423, y: 41) notequal_3c6e9f root.Std_k98ojb.Logic.NotEqual {}\n            current_6e2c3f -> modulo_1b8f7f.value\n            2 -> modulo_1b8f7f.divisor\n            modulo_1b8f7f.result -> notequal_3c6e9f.left\n            0 -> notequal_3c6e9f.right\n            notequal_3c6e9f.result -> bool_5a9d4b\n        } -> for_0f7b8f.handler\n        func() {\n            in(x: -114, y: 48, name: \"current\") property(Number) current_6e2c3f\n\n            out(x: 792, y: 39, name: \"bool\") property(Bool) bool_5a9d4b\n\n            instance(x: 112, y: 34) modulo_1b8f7f root.Std_k98ojb.Math.Modulo {}\n            instance(x: 423, y: 41) equal_3c6e9f root.Std_k98ojb.Logic.Equal {}\n            current_6e2c3f -> modulo_1b8f7f.value\n            2 -> modulo_1b8f7f.divisor\n            modulo_1b8f7f.result -> equal_3c6e9f.left\n            0 -> equal_3c6e9f.right\n            equal_3c6e9f.result -> bool_5a9d4b\n        } -> if_3a9e5d.handler\n        for_0f7b8f.index -> sub_6c4c8c.first\n        1 -> sub_6c4c8c.second\n        for_0f7b8f.item -> sub_6c4c8c.second\n        if_3a9e5d.predicate -> equal_1f7c5f.left\n        sub_6c4c8c.result -> equal_1f7c5f.right\n        0 -> equal_1f7c5f.left\n        for_0f7b8f.onItem -> if_3a9e5d.execute\n        if_3a9e5d.value -> output_6f2b8c\n        for_0f7b8f.done -> output_6f2b8c\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_f4f1a8 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -278, y: 4, name: \"list\") property(List) list_9e8a0f\n\n        out(x: 1023, y: -5, name: \"output\") property(Bool) output_1b7c6d\n\n        instance(x: 0, y: 12) sort_on_f4f2aa root.Std_k98ojb.Query.SortOn {\n            key: \"it\"\n        }\n        instance(x: 252, y: -8) for_5e9a3c root.Std_k98ojb.Std.For {}\n        instance(x: 526, y: 13) lessthanorequal_f1f2d4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 776, y: -6) if_7a5e8c root.Std_k98ojb.Std.If {}\n        instance(x: 1010, y: -77) and_3e9f0f root.Std_k98ojb.Logic.And {}\n        sort_on_f4f2aa.output_list -> for_5e9a3c.items\n        func() {\n            in(x: -113, y: 36, name: \"item\") property(Number) item_7d8b9f\n\n            out(x: 515, y: 45, name: \"\") property(Number) _0c2b6e\n\n            instance(x: 89, y: 30) add_1a3f4c root.Std_k98ojb.Math.Add {}\n            item_7d8b9f -> add_1a3f4c.first\n            1 -> add_1a3f4c.second\n            add_1a3f4c.result -> _0c2b6e\n        } -> for_5e9a3c.onItem\n        for_5e9a3c.index -> lessthanorequal_f1f2d4.left\n        func() {\n            in(x: -113, y: 36, name: \"item\") property(Number) item_7d8b9f\n\n            out(x: 515, y: 45, name: \"\") property(Number) _0c2b6e\n\n            instance(x: 89, y: 30) add_1a3f4c root.Std_k98ojb.Math.Add {}\n            item_7d8b9f -> add_1a3f4c.first\n            1 -> add_1a3f4c.second\n            add_1a3f4c.result -> _0c2b6e\n        } -> lessthanorequal_f1f2d4.right\n        for_5e9a3c.item -> if_7a5e8c.predicate\n        func() {\n            in(x: -113, y: 36, name: \"item\") property(Number) item_7d8b9f\n\n            out(x: 515, y: 45, name: \"\") property(Number) _0c2b6e\n\n            instance(x: 89, y: 30) add_1a3f4c root.Std_k98ojb.Math.Add {}\n            item_7d8b9f -> add_1a3f4c.first\n            1 -> add_1a3f4c.second\n            add_1a3f4c.result -> _0c2b6e\n        } -> and_3e9f0f.left\n        for_5e9a3c.index -> and_3e9f0f.right\n        lessthanorequal_f1f2d4.result -> if_7a5e8c.value\n        if_7a5e8c.then -> and_3e9f0f.execute\n        for_5e9a3c.onItem -> if_7a5e8c.execute\n        if_7a5e8c.else -> output_1b7c6d\n        and_3e9f0f.result -> if_7a5e8c.predicate\n        for_5e9a3c.done -> output_1b7c6d\n        list_9e8a0f -> sort_on_f4f2aa.list\n    }\n\n    \n\n    instance(x: -56, y: 59) is_consecutive_3e9f0f root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 20, name: \"sublist\") property(List) sublist_0f8a9e\n        in(x: -292, y: -150, name: \"list\") property(List) list_1c7b5d\n\n        out(x: 1116, y: -115, name: \"output\") property(Bool) output_4e2f9c\n\n        instance(x: -93, y: -152, name: \"sublist length\") length_3a8b0c root.Std_k98ojb.List.Length {}\n        instance(x: 146, y: -153, name: \"list length\") length_1d7e4f root.Std_k98ojb.List.Length {}\n        instance(x: 362, y: -154) greaterthan_3a9a2c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 577, y: -153) sub_5f8f0d root.Std_k98ojb.Math.Sub {}\n        instance(x: 797, y: -152) greaterthan_7e6b3c root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        instance(x: 1012, y: -151) for_d9a4d8 root.Std_k98ojb.Std.For {}\n        sublist_0f8a9e -> length_3a8b0c.list\n        list_1c7b5d -> length_1d7e4f.list\n        length_3a8b0c.length -> greaterthan_3a9a2c.left\n        length_1d7e4f.length -> greaterthan_3a9a2c.right\n        greaterthan_3a9a2c.result -> sub_5f8f0d.first\n        1 -> sub_5f8f0d.second\n        sub_5f8f0d.result -> for_d9a4d8.items\n        list_1c7b5d -> for_d9a4d8.items\n        func() {\n            in(x: -193, y: 47, name: \"index\") property(Number) index_2e6b9c\n\n            out(x: 704, y: 48, name: \"output\") property(Bool) output_7f1a3d\n\n            instance(x: 225, y: 54) slice_5a0a9c root.Std_k98ojb.List.Slice {}\n            instance(x: 461, y: 53) equal_4e6a8c root.Std_k98ojb.Logic.Equal {}\n            index_2e6b9c -> slice_5a0a9c.start\n            sublist_0f8a9e.length -> slice_5a0a9c.end\n            for_d9a4d8.item -> slice_5a0a9c.list\n            slice_5a0a9c.slice -> equal_4e6a8c.left\n            sublist_0f8a9e -> equal_4e6a8c.right\n            equal_4e6a8c.result -> output_7f1a3d\n        } -> for_d9a4d8.onItem\n        func() {\n            in(x: -193, y: 47, name: \"index\") property(Number) index_2e6b9c\n\n            out(x: 704, y: 48, name: \"output\") property(Bool) output_7f1a3d\n\n            instance(x: 225, y: 54) slice_5a0a9c root.Std_k98ojb.List.Slice {}\n            instance(x: 461, y: 53) equal_4e6a8c root.Std_k98ojb.Logic.Equal {}\n            index_2e6b9c -> slice_5a0a9c.start\n            sublist_0f8a9e.length -> slice_5a0a9c.end\n            for_d9a4d8.item -> slice_5a0a9c.list\n            slice_5a0a9c.slice -> equal_4e6a8c.left\n            sublist_0f8a9e -> equal_4e6a8c.right\n            equal_4e6a8c.result -> output_7f1a3d\n        } -> for_d9a4d8.handler\n        greaterthan_7e6b3c.result -> output_4e2f9c\n        for_d9a4d8.index -> greaterthan_7e6b3c.left\n        0 -> greaterthan_7e6b3c.right\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_a1c5f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 20, name: \"sublist\") property(List) sublist_1a8f9e\n        in(x: -284, y: -160, name: \"list\") property(List) list_5c7b2d\n\n        out(x: 558, y: -127, name: \"output\") property(Bool) output_e4a6ee\n\n        instance(x: -91, y: -126, name: \"is sublist\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -21, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_5c7b2d -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> sublist_1a8f9e.map_c73e3b.handler\n        filter_c91965.output_list -> sublist_1a8f9e.map_c73e3b.items\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        sublist_1a8f9e.map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_e4a6ee\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 5, name: \"sublist\") property(List) sublist_1f9a3b\n        in(x: -303, y: -145, name: \"list\") property(List) list_7e8c6d\n\n        out(x: 1040, y: -90, name: \"output\") property(Bool) output_4c2b5f\n\n        instance(x: -91, y: -140, name: \"length of sublist\") length_1a9a3f root.Std_k98ojb.List.Length {}\n        instance(x: 108, y: -139, name: \"length of list\") length_c8d0c6 root.Std_k98ojb.List.Length {}\n        instance(x: 318, y: -138, name: \"is sublist\") filter_1e7a3f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 527, y: -139) greaterthan_8d0c6 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 737, y: -138, name: \"is sublist\") filter_1e7a3f_2 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 946, y: -139) greaterthan_8d0c6_2 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1156, y: -138, name: \"is sublist\") filter_1e7a3f_3 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1365, y: -139) greaterthan_8d0c6_3 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1575, y: -138, name: \"is sublist\") filter_1e7a3f_4 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1784, y: -139) greaterthan_8d0c6_4 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1994, y: -138, name: \"is sublist\") filter_1e7a3f_5 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 2203, y: -139) greaterthan_8d0c6_5 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 2413, y: -138, name: \"is sublist\") filter_1e7a3f_6 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 2622, y: -139) greaterthan_8d0c6_6 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 2832, y: -138, name: \"is sublist\") filter_1e7a3f_7 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 3041, y: -139) greaterthan_8d0c6_7 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 3251, y: -138, name: \"is sublist\") filter_1e7a3f_8 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 3460, y: -139) greaterthan_8d0c6_8 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 3670, y: -138, name: \"is sublist\") filter_1e7a3f_9 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 3879, y: -139) greaterthan_8d0c6_9 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 4089, y: -138, name: \"is sublist\") filter_1e7a3f_10 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 4298, y: -139) greaterthan_8d0c6_10 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 4508, y: -138, name: \"is sublist\") filter_1e7a3f_11 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 4717, y: -139) greaterthan_8d0c6_11 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 4927, y: -138, name: \"is sublist\") filter_1e7a3f_12 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 5136, y: -139) greaterthan_8d0c6_12 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 5346, y: -138, name: \"is sublist\") filter_1e7a3f_13 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 5555, y: -139) greaterthan_8d0c6_13 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 5765, y: -138, name: \"is sublist\") filter_1e7a3f_14 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 5974, y: -139) greaterthan_8d0c6_14 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 6184, y: -138, name: \"is sublist\") filter_1e7a3f_15 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 6393, y: -139) greaterthan_8d0c6_15 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 6603, y: -138, name: \"is sublist\") filter_1e7a3f_16 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 6812, y: -139) greaterthan_8d0c6_16 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 7022, y: -138, name: \"is sublist\") filter_1e7a3f_17 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 7231, y: -139) greaterthan_8d0c6_17 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 7441, y: -138, name: \"is sublist\") filter_1e7a3f_18 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 7650, y: -139) greaterthan_8d0c6_18 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 7860, y: -138, name: \"is sublist\") filter_1e7a3f_19 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 8069, y: -139) greaterthan_8d0c6_19 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 8279, y: -138, name: \"is sublist\") filter_1e7a3f_20 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 8488, y: -139) greaterthan_8d0c6_20 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 8698, y: -138, name: \"is sublist\") filter_1e7a3f_21 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 8907, y: -139) greaterthan_8d0c6_21 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 9117, y: -138, name: \"is sublist\") filter_1e7a3f_22 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 9326, y: -139) greaterthan_8d0c6_22 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 9536, y: -138, name: \"is sublist\") filter_1e7a3f_23 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 9745, y: -139) greaterthan_8d0c6_23 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 9955, y: -138, name: \"is sublist\") filter_1e7a3f_24 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 10164, y: -139) greaterthan_8d0c6_24 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 10374, y: -138, name: \"is sublist\") filter_1e7a3f_25 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 10583, y: -139) greaterthan_8d",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -277, y: 166, name: \"list1\") property(List) list1_09fcba\n        in(x: -285, y: -86, name: \"list2\") property(List) list2_07cae4\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list1_09fcba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list2_07cae4 -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        list1_09fcba -> length_8166b0.list\n        equal_f89569.result -> output_c7097f\n        1 -> equal_f89569.right\n    }\n\n    \n\n    instance(x: -291, y: 177) is_sublist_f53d27 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -277, y: 166, name: \"sublist\") property(List) sublist_09fcba\n        in(x: -277, y: -86, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_edc2e3\n\n        instance(x: 532, y: 147) mul_7e1ce0 root.Std_k98ojb.Math.Mul {}\n        instance(x: -39, y: 26, name: \"First even number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"First odd number\") ``First even number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        sublist_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        list_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) is_sublist_f53d27 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 20, name: \"sublist\") property(List) sublist_1d9f6a\n        in(x: -296, y: -145, name: \"list\") property(List) list_5e7b4c\n\n        out(x: 1000, y: -80, name: \"output\") property(Bool) output_e8f3ee\n\n        instance(x: -91, y: -144, name: \"length of sublist\") length_1a9d6f root.Std_k98ojb.List.Length {}\n        instance(x: 108, y: -143, name: \"length of list\") length_5c0e2a root.Std_k98ojb.List.Length {}\n        instance(x: 320, y: -144) sub_3f1d7f root.Std_k98ojb.Math.Sub {}\n        instance(x: 538, y: -143) greaterthan_or_equal_9b8d5c root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        instance(x: 760, y: -142) for_2a3e6c root.Std_k98ojb.Std.For {}\n        sublist_1d9f6a -> length_1a9d6f.list\n        list_5e7b4c -> length_5c0e2a.list\n        length_1a9d6f.length -> sub_3f1d7f.first\n        length_5c0e2a.length -> sub_3f1d7f.second\n        sub_3f1d7f.result -> greaterthan_or_equal_9b8d5c.left\n        0 -> greaterthan_or_equal_9b8d5c.right\n        greaterthan_or_equal_9b8d5c.result -> for_2a3e6c.reset\n        list_5e7b4c -> for_2a3e6c.items\n        func() {\n            in(x: -0, y: 30, name: \"index\") property(Number) index_1f9b2d\n\n            out(x: 700, y: 20, name: \"\") property(Bool) _7dd980\n\n            instance(x: 110, y: 50) slice_3e8a6c root.Std_k98ojb.List.Slice {}\n            instance(x: 340, y: 30) equal_9d4f1c root.Std_k98ojb.Logic.Equal {}\n            index_1f9b2d -> slice_3e8a6c.start\n            sublist_1d9f6a -> slice_3e8a6c.list\n            sub_3f1d7f.result -> slice_3e8a6c.end\n            slice_3e8a6c.slice -> equal_9d4f1c.left\n            sublist_1d9f6a -> equal_9d4f1c.right\n            equal_9d4f1c.result -> _7dd980\n        } -> for_2a3e6c.onItem\n        func() {\n            in(x: -0, y: 30, name: \"index\") property(Number) index_1f9b2d\n\n            out(x: 700, y: 20, name: \"\") property(Bool) _7dd980\n\n            instance(x: 110, y: 50) slice_3e8a6c root.Std_k98ojb.List.Slice {}\n            instance(x: 340, y: 30) equal_9d4f1c root.Std_k98ojb.Logic.Equal {}\n            index_1f9b2d -> slice_3e8a6c.start\n            sublist_1d9f6a -> slice_3e8a6c.list\n            sub_3f1d7f.result -> slice_3e8a6c.end\n            slice_3e8a6c.slice -> equal_9d4f1c.left\n            sublist_1d9f6a -> equal_9d4f1c.right\n            equal_9d4f1c.result -> _7dd980\n        } -> for_2a3e6c.handler\n        for_2a3e6c.done -> output_e8f3ee\n    }\n\n    \n\n    instance(x: -91, y: 20) is_sublist_f5b0d9 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 10, name: \"sublist\") property(List) sublist_1a0f8e\n        in(x: -286, y: -120, name: \"list\") property(List) list_2b9d7c\n\n        out(x: 556, y: -97, name: \"output\") property(Bool) output_5c3e4b\n\n        instance(x: -96, y: -97) contains_1f0a6c root.Std_k98ojb.List.Contains {}\n        list_2b9d7c -> contains_1f0a6c.list\n        sublist_1a0f8e -> contains_1f0a6c.item\n        contains_1f0a6c.is_contained -> output_5c3e4b\n    }\n\n    \n\n    instance(x: -83, y: 59) is_sublist_a7d2c9 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 20, name: \"sublist\") property(List) sublist_1d9f6a\n        in(x: -297, y: -155, name: \"list\") property(List) list_7e8b5c\n\n        out(x: 1000, y: -105, name: \"output\") property(Bool) output_4a3b8c\n\n        instance(x: -80, y: -156, name: \"length of sublist\") length_1d9f6a root.Std_k98ojb.List.Length {}\n        instance(x: 230, y: -105, name: \"slice list\") slice_list root.Std_k98ojb.List.Slice {}\n        instance(x: 560, y: -106) equal_f7c3e4 root.Std_k98ojb.Logic.Equal {}\n        sublist_1d9f6a -> length_1d9f6a.list\n        list_7e8b5c -> slice_list.list\n        func() {\n            in(x: 0, y: -20, name: \"index\") property(Number) index_2b4a3c\n\n            out(x: 400, y: -30, name: \"\") property(List) _1d9f6a\n\n            instance(x: 120, y: -25) slice_7e8b5c root.Std_k98ojb.List.Slice {}\n            index_2b4a3c -> slice_7e8b5c.start\n            length_1d9f6a.length + index_2b4a3c -> slice_7e8b5c.end\n            slice_7e8b5c.slice -> _1d9f6a\n        } -> slice_list.handler\n        equal_f7c3e4.result -> output_4a3b8c\n        sublist_1d9f6a -> equal_f7c3e4.left\n        slice_list.zipped -> equal_f7c3e4.right\n    }\n\n    \n\n    instance(x: -83, y: 10) is_sublist_2b4a3c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -275, y: 5, name: \"sublist\") property(List) sublist_1d8a3f\n        in(x: -277, y: -165, name: \"list\") property(List) list_0b075e\n\n        out(x: 1017, y: -111, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 1042, y: -113) contains_32727d root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -0, y: -25, name: \"current\") property(List) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_32727d.handler\n        list_0b075e -> contains_32727d.list\n        sublist_1d8a3f -> contains_32727d.item\n        contains_32727d.is_contained -> output_5bbcd7\n    }\n\n    \n\n    instance(x: -291, y: 177) is_sublist_f53d27 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -265, y: 35, name: \"sublist\") property(List) sublist_3a8d6f\n        in(x: -266, y: -133, name: \"list\") property(List) list_7c9b5e\n\n        out(x: 1010, y: -10, name: \"output\") property(Bool) output_4e2c1e\n\n        instance(x: -82, y: -132) length_3a6f8d root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 25) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 416, y: -10) find_1c9e4f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 628, y: -12) contains_32727d root.Std_k98ojb.List.Contains {}\n        greaterthan_cb50ae.result -> output_4e2c1e\n        sublist_3a8d6f -> length_3a6f8d.list\n        list_7c9b5e -> length_3a6f8d.list\n        length_3a6f8d.length -> greaterthan_cb50ae.right\n        length_3a6f8d.length -> greaterthan_cb50ae.left\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            sublist_3a8d6f.length -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_1c9e4f.predicate\n        list_7c9b5e -> find_1c9e4f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            sublist_3a8d6f.length -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> contains_32727d.handler\n        find_1c9e4f.item -> contains_32727d.list\n        sublist_3a8d6f -> contains_32727d.item\n    }\n\n    \n\n    instance(x: -293, y: 59) is_sublist_7a4dad root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -280, y: 2, name: \"list\") property(List) list_3a1f9e\n        in(x: -281, y: -224, name: \"execute\") trigger() execute_7b8c0d\n\n        out(x: 1225, y: 11, name: \"continue\") trigger() continue_4f6c1d\n        out(x: 1219, y: 146, name: \"output\") property(Number) output_ea3e1f\n\n        instance(x: -0, y: -120, name: \"previous\") setter_7b8c0d root.Std_k98ojb.List.SetAt {\n            list: list\n            index: 0\n            value: 1\n        }\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: -275, y: -35, name: \"getter_ce2a48\") getter_ce2a48 = list\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_4f6c1d\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3a1f9e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_4f6c1d\n        for_d26972.item -> setter_9d4f1c.new_value\n        getter_ce2a48.value -> getat_ce2a48.list\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_7b8c0d.value\n        execute_7b8c0d -> setter_7b8c0d.execute\n        setter_7b8c0d.continue -> for_d26972.reset\n        ifexpression_875761.value -> output_ea3e1f\n        getter_ce2a48.value -> list\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_7b8c0d root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 2, name: \"list\") property(List) list_9e3f8a\n        in(x: -356, y: -225, name: \"execute\") trigger() execute_0c7b1d\n\n        out(x: 801, y: -229, name: \"continue\") trigger() continue_5e2b6f\n        out(x: 795, y: 205, name: \"output\") property(Number) output_9a8b4f\n\n        instance(x: 151, y: -120) for_7d1c0f root.Std_k98ojb.Std.For {}\n        instance(x: 465, y: 5) ifexpression_ae2c3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        setter(x: -187, y: -246, name: \"setter_6a6081\") setter_6a6081 = output\n        getter(x: 502, y: 166, name: \"getter_cc0721\") getter_cc0721 = output\n        instance(x: 780, y: -125) add_3f9b5c root.Std_k98ojb.Math.Add {}\n        list_9e3f8a -> for_7d1c0f.items\n        execute_0c7b1d -> setter_6a6081.execute\n        1 -> setter_6a6081.new_value\n        getter_cc0721.value -> output_9a8b4f\n        for_7d1c0f.done -> continue_5e2b6f\n        setter_6a6081.continue -> for_7d1c0f.reset\n        for_7d1c0f.onItem -> ifexpression_ae2c3c.execute\n        0 -> add_3f9b5c.first\n        for_7d1c0f.index -> add_3f9b5c.second\n        add_3f9b5c.result -> ifexpression_ae2c3c.gen_0\n        for_7d1c0f.item -> ifexpression_ae2c3c.gen_1\n        ifexpression_ae2c3c.then -> setter_6a6081.execute\n        ifexpression_ae2c3c.else -> for_7d1c0f.next\n    }\n\n    \n\n    instance(x: -203, y: -53) find_missing_8b4a9f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -279, y: 0, name: \"list\") property(List) list_9e6f1d\n        in(x: -280, y: -226, name: \"execute\") trigger() execute_5c7b8a\n\n        out(x: 1003, y: -228, name: \"continue\") trigger() continue_2c4b0f\n        out(x: 1011, y: 6, name: \"output\") property(Number) output_9e7d3f\n\n        instance(x: 0, y: 0) for_8a5b6c root.Std_k98ojb.Std.For {}\n        getter(x: -150, y: 112, name: \"getter_e1b4ef\") getter_e1b4ef = index\n        setter(x: 104, y: -252, name: \"setter_7e9f2d\") setter_7e9f2d = index\n        instance(x: 351, y: -15) ifexpression_8a3c5e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 332, y: 162, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 677, y: -317, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        ifexpression_8a3c5e.else -> continue_2c4b0f\n        list_9e6f1d -> for_8a5b6c.items\n        for_8a5b6c.onItem -> ifexpression_8a3c5e.execute\n        for_8a5b6c.done -> continue_2c4b0f\n        getter_e1b4ef.value -> ifexpression_8a3c5e.gen_0\n        list_9e6f1d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        for_8a5b6c.item -> ifexpression_8a3c5e.gen_2\n        getter_b280eb.value -> ifexpression_8a3c5e.gen_1\n        execute_5c7b8a -> setter_7e9f2d.execute\n        -1 -> setter_7e9f2d.new_value\n        for_8a5b6c.index -> setter_7e9f2d.new_value\n        ifexpression_8a3c5e.then -> setter_9d4f1c.execute\n        for_8a5b6c.item -> setter_9d4f1c.new_value\n        getat_ce2a48.itemAtIndex -> setter_7e9f2d.new_value\n        ifexpression_8a3c5e.value -> output_9e7d3f\n        setter_7e9f2d.continue -> for_8a5b6c.reset\n        setter_9d4f1c.continue -> for_8a5b6c.next\n    }\n\n    \n\n    instance(x: -34, y: 127) find_missing_node root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 0, name: \"list\") property(List) list_9e8b5f\n        in(x: -298, y: -226, name: \"execute\") trigger() execute_1a7d4c\n\n        out(x: 1056, y: -224, name: \"continue\") trigger() continue_2b0b9c\n        out(x: 1063, y: 24, name: \"output\") property(Number) output_e5f8e7\n\n        instance(x: 0, y: 0) for_4d6a8c root.Std_k98ojb.Std.For {}\n        getter(x: -1, y: 124, name: \"getter_9e2f3d\") getter_9e2f3d = index\n        setter(x: 450, y: -221, name: \"setter_7a8c0f\") setter_7a8c0f = index\n        instance(x: 698, y: -5) ifexpression_1b4f6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 321, y: 110, name: \"getter_9e2f3d\") getter_a8a5c7 = previous\n        setter(x: -6, y: -245, name: \"setter_7a8c0f\") setter_1b4c9e = previous\n        list_9e8b5f -> for_4d6a8c.items\n        execute_1a7d4c -> setter_1b4c9e.execute\n        0 -> setter_1b4c9e.new_value\n        getter_a8a5c7.value -> ifexpression_1b4f6f.gen_2\n        for_4d6a8c.index -> ifexpression_1b4f6f.gen_0\n        getter_9e2f3d.value -> ifexpression_1b4f6f.gen_1\n        for_4d6a8c.onItem -> ifexpression_1b4f6f.execute\n        ifexpression_1b4f6f.then -> setter_7a8c0f.execute\n        for_4d6a8c.item -> setter_7a8c0f.new_value\n        ifexpression_1b4f6f.else -> continue_2b0b9c\n        getter_9e2f3d.value -> output_e5f8e7\n        for_4d6a8c.done -> continue_2b0b9c\n        setter_1b4c9e.continue -> for_4d6a8c.reset\n        setter_7a8c0f.continue -> for_4d6a8c.next\n    }\n\n    \n\n    instance(x: 11, y: -17) find_missing_f3a5d2 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -283, y: 2, name: \"list\") property(List) list_9f0b8e\n        in(x: -282, y: -230, name: \"execute\") trigger() execute_1c6a3d\n\n        out(x: 1217, y: 29, name: \"continue\") trigger() continue_2a4b9c\n        out(x: 966, y: 219, name: \"output\") property(Number) output_e5e8f0\n\n        instance(x: -1, y: -120) for_7d3a6f root.Std_k98ojb.Std.For {}\n        getter(x: 704, y: 170, name: \"getter_84fbbe\") getter_84fbbe = index\n        setter(x: 955, y: -158, name: \"setter_7e2b42\") setter_7e2b42 = index\n        instance(x: 551, y: -105) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        list_9f0b8e -> for_7d3a6f.items\n        execute_1c6a3d -> setter_7e2b42.execute\n        1 -> setter_7e2b42.new_value\n        for_7d3a6f.done -> continue_2a4b9c\n        getter_84fbbe.value -> output_e5e8f0\n        for_7d3a6f.onItem -> if_7c284f.execute\n        for_7d3a6f.index -> equal_aabb6e.left\n        for_7d3a6f.item -> equal_aabb6e.right\n        equal_aabb6e.result -> if_7c284f.predicate\n        if_7c284f.else -> for_7d3a6f.next\n        if_7c284f.then -> setter_7e2b42.execute\n        setter_7e2b42.continue -> continue_2a4b9c\n    }\n\n    \n\n    instance(x: 777, y: 760) find_missing_5e8d0f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 1, name: \"list\") property(List) list_9f0b2e\n        in(x: -284, y: -223, name: \"execute\") trigger() execute_5a7d3c\n\n        out(x: 1046, y: -221, name: \"continue\") trigger() continue_e8f1ed\n        out(x: 1039, y: 129, name: \"output\") property(Number) output_2e0b4f\n\n        instance(x: 0, y: 0) for_5a3d6c root.Std_k98ojb.Std.For {}\n        getter(x: -187, y: 162, name: \"getter_e9f8ee\") getter_e9f8ee = index\n        setter(x: 778, y: -127, name: \"setter_7e2b42\") setter_7e2b42 = index\n        instance(x: 550, y: -103) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 757, y: -73) if_7c284f root.Std_k98ojb.Std.If {}\n        getter_e9f8ee.value -> output_2e0b4f\n        list_9f0b2e -> for_5a3d6c.items\n        execute_5a7d3c -> setter_7e2b42.execute\n        1 -> setter_7e2b42.new_value\n        for_5a3d6c.done -> continue_e8f1ed\n        setter_7e2b42.continue -> for_5a3d6c.reset\n        for_5a3d6c.onItem -> if_7c284f.execute\n        equal_aabb6e.result -> if_7c284f.predicate\n        index + 1 -> equal_aabb6e.left\n        for_5a3d6c.item -> equal_aabb6e.right\n        if_7c284f.else -> for_5a3d6c.next\n        if_7c284f.then -> setter_7e2b42.execute\n        for_5a3d6c.index -> setter_7e2b42.new_value\n    }\n\n    \n\n    instance(x: 777, y: 760) find_missing_6e6bfd root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9e8f6a\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index != elem\"\n            }\n            getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = index\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = index\n            instance(x: 310, y: 35) add_5f8a0e root.Std_k98ojb.Math.Add {}\n            ifexpression_e38995.then -> add_5f8a0e.execute\n            getter_9cceb3.value -> add_5f8a0e.first\n            1 -> add_5f8a0e.second\n            add_5f8a0e.result -> setter_1cedb2.new_value\n            ifexpression_e38995.else -> setter_1cedb2.execute\n            index -> ifexpression_e38995.gen_0\n            elem_9f6850 -> ifexpression_e38995.gen_1\n            setter_1cedb2.continue -> find_6d05b0.predicate\n            bool_af09a7 -> find_6d05b0.predicate\n        } -> find_6d05b0.predicate\n        list_9e8f6a -> find_6d05b0.items\n        1 -> find_6d05b0.index\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -271, y: 1, name: \"list\") property(List) list_9f0b2e\n        in(x: -281, y: -226, name: \"execute\") trigger() execute_7a3d5c\n\n        out(x: 1024, y: -229, name: \"continue\") trigger() continue_6a8b7c\n        out(x: 1012, y: 145, name: \"output\") property(Number) output_9e1f0b\n\n        instance(x: 0, y: 0) for_3d4a5c root.Std_k98ojb.Std.For {}\n        getter(x: -137, y: 160, name: \"getter_e7b2ea\") getter_e7b2ea = index\n        setter(x: 676, y: -312, name: \"setter_9e1f0a\") setter_9e1f0a = index\n        instance(x: 0, y: 0) ifexpression_5c6d3f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -137, y: 160, name: \"getter_e7b2ea\") getter_9e8a4e = index\n        setter(x: 676, y: -312, name: \"setter_9e1f0a\") setter_b6d3c5 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_5c6d3f.else -> continue_6a8b7c\n        ifexpression_5c6d3f.then -> setter_9e1f0a.execute\n        list_9f0b2e -> for_3d4a5c.items\n        for_3d4a5c.item -> ifexpression_5c6d3f.gen_2\n        for_3d4a5c.index -> ifexpression_5c6d3f.gen_0\n        getter_e7b2ea.value -> ifexpression_5c6d3f.gen_1\n        for_3d4a5c.onItem -> ifexpression_5c6d3f.execute\n        for_3d4a5c.done -> continue_6a8b7c\n        list_9f0b2e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_b6d3c5.new_value\n        execute_7a3d5c -> setter_b6d3c5.execute\n        -1 -> setter_b6d3c5.new_value\n        for_3d4a5c.next -> setter_9e1f0a.continue\n        getter_9e8a4e.value -> output_9e1f0b\n        ifexpression_5c6d3f.then -> setter_9e1f0a.new_value\n        for_3d4a5c.index -> setter_9e1f0a.new_value\n        setter_b6d3c5.continue -> for_3d4a5c.reset\n    }\n\n    \n\n    instance(x: -50, y: 127) find_missing_8b2c6f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -465, y: 0, name: \"list\") property(List) list_9f5e1d\n        in(x: -480, y: -225, name: \"execute\") trigger() execute_8a3c4b\n\n        out(x: 1227, y: -229, name: \"continue\") trigger() continue_e6c0ee\n        out(x: 1218, y: 205, name: \"output\") property(Number) output_9e1f5d\n\n        instance(x: 151, y: -120) for_7b2a8d root.Std_k98ojb.Std.For {}\n        instance(x: 465, y: 5) ifexpression_6c15d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        setter(x: -187, y: -246, name: \"setter_6a6081\") setter_6a6081 = index\n        getter(x: 502, y: 166, name: \"getter_cc0721\") getter_cc0721 = index\n        setter(x: 780, y: -125, name: \"setter_60cfcd\") setter_60cfcd = index\n        list_9f5e1d -> for_7b2a8d.items\n        execute_8a3c4b -> setter_6a6081.execute\n        -1 -> setter_6a6081.new_value\n        getter_cc0721.value -> output_9e1f5d\n        for_7b2a8d.done -> continue_e6c0ee\n        setter_6a6081.continue -> for_7b2a8d.reset\n        for_7b2a8d.onItem -> ifexpression_6c15d4.execute\n        ifexpression_6c15d4.then -> setter_60cfcd.execute\n        for_7b2a8d.index -> setter_60cfcd.new_value\n        1 + getter_cc0721.value -> ifexpression_6c15d4.gen_0\n        for_7b2a8d.item -> ifexpression_6c15d4.gen_1\n        ifexpression_6c15d4.else -> for_7b2a8d.next\n        setter_60cfcd.continue -> for_7b2a8d.next\n    }\n\n    \n\n    instance(x: -203, y: -53) find_missing_9e3f1c root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -283, y: 2, name: \"list\") property(List) list_1e9b3f\n        in(x: -298, y: -223, name: \"execute\") trigger() execute_5a8c6d\n\n        out(x: 1217, y: -229, name: \"continue\") trigger() continue_2f4f0d\n        out(x: 795, y: 205, name: \"output\") property(Number) output_eb9e1e\n\n        instance(x: 151, y: -120) for_8a7c5c root.Std_k98ojb.Std.For {}\n        instance(x: 465, y: 5) ifexpression_a6d3f4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        setter(x: -187, y: -246, name: \"setter_7e2b42\") setter_7e2b42 = index\n        getter(x: 502, y: 166, name: \"getter_cc0721\") getter_cc0721 = index\n        instance(x: 780, y: -125) add_a8f9d6 root.Std_k98ojb.Math.Add {}\n        list_1e9b3f -> for_8a7c5c.items\n        execute_5a8c6d -> setter_7e2b42.execute\n        0 -> setter_7e2b42.new_value\n        getter_cc0721.value -> output_eb9e1e\n        for_8a7c5c.done -> continue_2f4f0d\n        setter_7e2b42.continue -> for_8a7c5c.reset\n        for_8a7c5c.onItem -> ifexpression_a6d3f4.execute\n        1 -> add_a8f9d6.second\n        for_8a7c5c.index -> add_a8f9d6.first\n        add_a8f9d6.result -> setter_7e2b42.new_value\n        ifexpression_a6d3f4.then -> continue_2f4f0d\n        ifexpression_a6d3f4.else -> for_8a7c5c.next\n    }\n\n    \n\n    instance(x: -203, y: -53) find_missing_1e9b3f root.main.find_missing {}\n\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -200, y: 2, name: \"input\") property(String) input_1d0f9e\n\n        out(x: 500, y: 78, name: \"output\") property(String) output_5c7a8b\n\n        instance(x: 100, y: 76) replace_f3e6b2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: -19) regex_firstmatch_9d0f4f root.Std_k98ojb.Strings.Regex.FirstMatch {\n            pattern: \"[ ,.]\"\n        }\n        input_1d0f9e -> replace_f3e6b2.input\n        \":\" -> replace_f3e6b2.replace\n        regex_firstmatch_9d0f4f.match -> replace_f3e6b2.search\n        input_1d0f9e -> regex_firstmatch_9d0f4f.input\n        replace_f3e6b2.output -> output_5c7a8b\n    }\n\n    \n\n    instance(x: -138, y: 43) replace_spaces_commas_dots_9e7f2f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -200, y: 0, name: \"input\") property(String) input_8f1a9d\n\n        out(x: 500, y: -2, name: \"output\") property(String) output_5e7c4b\n\n        instance(x: 0, y: 0) replace_6f8f1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_3a9d9d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_5c7e2d root.Std_k98ojb.Strings.Replace {}\n        input_8f1a9d -> replace_6f8f1f.input\n        \" \" -> replace_6f8f1f.search\n        \":\" -> replace_6f8f1f.replace\n        replace_6f8f1f.output -> replace_3a9d9d.input\n        \",\" -> replace_3a9d9d.search\n        \":\" -> replace_3a9d9d.replace\n        replace_3a9d9d.output -> replace_5c7e2d.input\n        \".\" -> replace_5c7e2d.search\n        \":\" -> replace_5c7e2d.replace\n        replace_5c7e2d.output -> output_5e7c4b\n    }\n\n    \n\n    instance(x: -140, y: 45, name: \"replace\") replace_1f3a6f root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3c9b7e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5a4f8d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_2b6b9d root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3c9b7e.input\n        \" \" -> replace_3c9b7e.search\n        \":\" -> replace_3c9b7e.replace\n        replace_3c9b7e.output -> replace_5a4f8d.input\n        \",\" -> replace_5a4f8d.search\n        \":\" -> replace_5a4f8d.replace\n        replace_5a4f8d.output -> replace_2b6b9d.input\n        \".\" -> replace_2b6b9d.search\n        \":\" -> replace_2b6b9d.replace\n        replace_2b6b9d.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -199, y: 2, name: \"input\") property(String) input_0\n        out(x: 505, y: 76, name: \"output\") property(String) output_1\n\n        instance(x: 94, y: -5) regex_firstmatch_7e3f6c root.Std_k98ojb.Strings.Regex.FirstMatch {\n            pattern: \"[ ,.]\"\n        }\n        instance(x: 294, y: 76) replace_9a2d4d root.Std_k98ojb.Strings.Replace {}\n        input_0 -> regex_firstmatch_7e3f6c.input\n        \": \" -> replace_9a2d4d.replace\n        input_0 -> replace_9a2d4d.input\n        regex_firstmatch_7e3f6c.match -> replace_9a2d4d.search\n        replace_9a2d4d.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 30) replace_8b5c8c root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -200, y: 0, name: \"input\") property(String) input_9f1a8e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_7b4c3d\n\n        instance(x: 0, y: 1) replace_5a3a6d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8f9e7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_2c4c1e root.Std_k98ojb.Strings.Replace {}\n        input_9f1a8e -> replace_5a3a6d.input\n        \" \" -> replace_5a3a6d.search\n        \":\" -> replace_5a3a6d.replace\n        replace_5a3a6d.output -> replace_8f9e7f.input\n        \",\" -> replace_8f9e7f.search\n        \":\" -> replace_8f9e7f.replace\n        replace_8f9e7f.output -> replace_2c4c1e.input\n        \".\" -> replace_2c4c1e.search\n        \":\" -> replace_2c4c1e.replace\n        replace_2c4c1e.output -> output_7b4c3d\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_5a8f9c root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -156, y: 0, name: \"input\") property(String) input_8e9b2f\n\n        out(x: 505, y: -1, name: \"output\") property(String) output_7c3d6a\n\n        instance(x: 94, y: -37) replace_f4f5e0 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 92, y: 9) template_8a2c1f root.Std_k98ojb.Strings.Template {\n            template: \"{{input}}\\n\"\n        }\n        input_8e9b2f -> replace_f4f5e0.input\n        \"[ ,.]\" -> replace_f4f5e0.search\n        \":\" -> replace_f4f5e0.replace\n        replace_f4f5e0.output -> template_8a2c1f.input\n        template_8a2c1f.result -> output_7c3d6a\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_9b3b8c root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -172, y: 2, name: \"input\") property(String) input_1f0a9e\n\n        out(x: 656, y: 78, name: \"output\") property(String) output_7b8c4d\n\n        instance(x: 94, y: -105) replace_5f6a3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 92, y: -22) regex_firstmatch_1e2f0c root.Std_k98ojb.Strings.Regex.FirstMatch {\n            pattern: \"[ ,.]\"\n        }\n        input_1f0a9e -> replace_5f6a3c.input\n        \": \" -> replace_5f6a3c.replace\n        regex_firstmatch_1e2f0c.match -> replace_5f6a3c.search\n        input_1f0a9e -> regex_firstmatch_1e2f0c.input\n        replace_5f6a3c.output -> output_7b8c4d\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_b3c9d8 root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -227, y: 0, name: \"input\") property(String) input_8e9b3f\n\n        out(x: 506, y: -2, name: \"output\") property(String) output_7c1d4a\n\n        instance(x: 0, y: 0) replace_d5a6a1 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_3f9e8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_7d4c9c root.Std_k98ojb.Strings.Replace {}\n        input_8e9b3f -> replace_d5a6a1.input\n        \" \" -> replace_d5a6a1.search\n        \":\" -> replace_d5a6a1.replace\n        replace_d5a6a1.output -> replace_3f9e8f.input\n        \",\" -> replace_3f9e8f.search\n        \":\" -> replace_3f9e8f.replace\n        replace_3f9e8f.output -> replace_7d4c9c.input\n        \".\" -> replace_7d4c9c.search\n        \":\" -> replace_7d4c9c.replace\n        replace_7d4c9c.output -> output_7c1d4a\n    }\n\n    \n\n    instance(x: -176, y: 43) replace_spaces_commas_dots_5f8e0b root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -122, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) regex_1f8a5c root.Std_k98ojb.Strings.Regex.AllMatches {\n            pattern: \"[ ,.]\"\n        }\n        input_ai -> regex_1f8a5c.input\n        instance(x: 0, y: -20) replace_7d3e4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 50) concat_2c9c1c root.Std_k98ojb.Strings.Concat {}\n        regex_1f8a5c.matches -> replace_7d3e4f.search\n        \":\" -> replace_7d3e4f.replace\n        input_ai -> replace_7d3e4f.input\n        concat_2c9c1c.result -> output_ai\n        instance(x: 0, y: -100) iter_list_5b6a5f root.Std_k98ojb.IterList {}\n        regex_1f8a5c.matches -> iter_list_5b6a5f.list\n        func() {\n            in(x: -121, y: -37, name: \"item\") property(List) item_7e9d4f\n\n            out(x: 333, y: -50, name: \"\") property(String) _0c1b8a\n\n            instance(x: 92, y: -22) getat_3b2b6f root.Std_k98ojb.List.GetAt {}\n            item_7e9d4f -> getat_3b2b6f.list\n            0 -> getat_3b2b6f.index\n            instance(x: 92, y: -22) concat_5c1a2c root.Std_k98ojb.Strings.Concat {}\n            replace_7d3e4f.output -> concat_5c1a2c.left\n            getat_3b2b6f.value -> concat_5c1a2c.right\n            concat_5c1a2c.result -> _0c1b8a\n        } -> iter_list_5b6a5f.onItem\n        instance(x: 0, y: -150) relay_7d3e4f root.Std_k98ojb.Std.Relay {}\n        iter_list_5b6a5f.output -> relay_7d3e4f.input\n        relay_7d3e4f.value -> concat_2c9c1c.left\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_59bc6e root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -232, y: 0, name: \"string\") property(String) string_8f2e1d\n\n        out(x: 505, y: -2, name: \"result\") property(String) result_9a7c6b\n\n        instance(x: 0, y: 1) replace_5e4c3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8f8d2e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_9a7f9f root.Std_k98ojb.Strings.Replace {}\n        string_8f2e1d -> replace_5e4c3c.input\n        \" \" -> replace_5e4c3c.search\n        \":\" -> replace_5e4c3c.replace\n        replace_5e4c3c.output -> replace_8f8d2e.input\n        \",\" -> replace_8f8d2e.search\n        \":\" -> replace_8f8d2e.replace\n        replace_8f8d2e.output -> replace_9a7f9f.input\n        \".\" -> replace_9a7f9f.search\n        \":\" -> replace_9a7f9f.replace\n        replace_9a7f9f.output -> result_9a7c6b\n    }\n\n    \n\n    instance(x: 81, y: -52, name: \"replace\") replace_5e4c3c root.main.replace {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same_char {\n        in(x: -283, y: 1, name: \"string\") property(String) string_3f8a9e\n\n        out(x: 593, y: 0, name: \"output\") property(Bool) output_5c7d6b\n\n        instance(x: 0, y: 2) characters_d4e1ee root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -1) contains_3f9a8c root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) length_7d6f2f root.Std_k98ojb.List.Length {}\n        characters_d4e1ee.characters -> contains_3f9a8c.list\n        string_3f8a9e -> characters_d4e1ee.input\n        characters_d4e1ee.characters -> length_7d6f2f.list\n        0 -> contains_3f9a8c.item\n        length_7d6f2f.length -> contains_3f9a8c.index\n        contains_3f9a8c.is_contained -> output_5c7d6b\n    }\n\n    \n\n    instance(x: -55, y: 529) check_same_char_4e1c6f root.main.check_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -283, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 530, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_7c8d5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -3) allmatcheswithrange_6a4e9f root.Std_k98ojb.Strings.AllMatchesWithRange {\n            pattern: \"(.)\\\\1*\"\n        }\n        characters_7c8d5f.characters -> allmatcheswithrange_6a4e9f.input\n        string_1 -> characters_7c8d5f.string\n        0 -> allmatcheswithrange_6a4e9f.start\n        func() {\n            in(x: -23, y: 26, name: \"match\") property(List) match_2\n\n            out(x: 518, y: 24, name: \"bool\") property(Bool) bool_3\n\n            instance(x: 75, y: 21) length_7b8c5f root.Std_k98ojb.List.Length {}\n            instance(x: 290, y: 23) equal_1e9a6d root.Std_k98ojb.Logic.Equal {}\n            match_2 -> length_7b8c5f.list\n            1 -> equal_1e9a6d.right\n            length_7b8c5f.length -> equal_1e9a6d.left\n            equal_1e9a6d.result -> bool_3\n        } -> allmatcheswithrange_6a4e9f.handler\n        allmatcheswithrange_6a4e9f.matches -> output_1\n    }\n\n    \n\n    instance(x: -55, y: 529) is_same_2c856f root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same_char {\n        in(x: -285, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 553, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_3c8a9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -1) allmatcheswithrange_e7e5d2 root.Std_k98ojb.Strings.AllMatchesWithRange {\n            pattern: \"(.)\\\\1*\"\n        }\n        instance(x: 0, y: 0) length_9a3c6f root.Std_k98ojb.Strings.Length {}\n        characters_3c8a9f.characters -> allmatcheswithrange_e7e5d2.input\n        string_1 -> characters_3c8a9f.string\n        length_9a3c6f.length -> allmatcheswithrange_e7e5d2.end\n        0 -> length_9a3c6f.string\n        func() {\n            in(x: -10, y: 34, name: \"list\") property(List) list_1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2\n\n            instance(x: 89, y: 29) length_3c8a9f root.Std_k98ojb.List.Length {}\n            instance(x: 310, y: 35) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            list_1 -> length_3c8a9f.list\n            1 -> equal_f89569.right\n            length_3c8a9f.length -> equal_f89569.left\n            equal_f89569.result -> bool_2\n        } -> allmatcheswithrange_e7e5d2.handler\n        allmatcheswithrange_e7e5d2.matches -> output_1\n    }\n\n    \n\n    instance(x: -56, y: 53) check_same_char_6a9f0c root.main.check_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -280, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 530, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_7c3d8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 260, y: -1) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) length_8166b0 root.Std_k98ojb.List.Length {}\n        characters_7c3d8f.characters -> contains_d42dce.list\n        string_1 -> characters_7c3d8f.input\n        func() {\n            in(x: -115, y: 33, name: \"current\") property(String) current_2\n\n            out(x: 520, y: 44, name: \"bool\") property(Bool) bool_3\n\n            instance(x: 88, y: 29) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            current_2 -> equal_f89569.left\n            characters_7c3d8f.characters[0] -> equal_f89569.right\n            equal_f89569.result -> bool_3\n        } -> contains_d42dce.predicate\n        length_8166b0.list -> contains_d42dce.item\n        string_1 -> length_8166b0.list\n        contains_d42dce.is_contained -> output_1\n    }\n\n    \n\n    instance(x: -53, y: 51) is_same_7c3f9e root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -283, y: 0, name: \"string\") property(String) string_3a8f9e\n\n        out(x: 553, y: 1, name: \"output\") property(Bool) output_5b7d6c\n\n        instance(x: 0, y: 0) characters_4f9c1c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 267, y: -2) uniquelist_8e3a5c root.Std_k98ojb.List.UniqueList {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        characters_4f9c1c.characters -> uniquelist_8e3a5c.list\n        string_3a8f9e -> characters_4f9c1c.string\n        uniquelist_8e3a5c.unique_list -> length_6e87f2.list\n        1 -> equal_f89569.right\n        length_6e87f2.length -> equal_f89569.left\n        instance(x: 495, y: -4) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        equal_f89569.result -> output_5b7d6c\n    }\n\n    \n\n    instance(x: -55, y: 529) is_same_2c856f root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same_char {\n        in(x: -287, y: 0, name: \"string\") property(String) string_3f8d6a\n\n        out(x: 530, y: -1, name: \"output\") property(Bool) output_b9e5b7\n\n        instance(x: 0, y: 0) characters_2c7b8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) uniquelist_3a4f1d root.Std_k98ojb.List.UniqueList {}\n        instance(x: 530, y: -1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 745, y: 0) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        characters_2c7b8c.characters -> uniquelist_3a4f1d.list\n        uniquelist_3a4f1d.unique_list -> length_6e87f2.list\n        1 -> equal_f89569.right\n        length_6e87f2.length -> equal_f89569.left\n        string_3f8d6a -> characters_2c7b8c.input\n        equal_f89569.result -> output_b9e5b7\n    }\n\n    \n\n    instance(x: -1, y: 54) check_same_char_4c7b2c root.main.check_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -299, y: 0, name: \"string\") property(String) string_2\n\n        out(x: 557, y: 1, name: \"output\") property(Bool) output_3\n\n        instance(x: 0, y: 0) characters_5f8a4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 266, y: -2) allmatch_7e6d9f root.Std_k98ojb.List.Contains {}\n        instance(x: 267, y: 29) length_3b1b5c root.Std_k98ojb.List.Length {}\n        characters_5f8a4c.characters -> allmatch_7e6d9f.list\n        characters_5f8a4c.characters -> length_3b1b5c.list\n        1 -> length_3b1b5c.length\n        allmatch_7e6d9f.is_contained -> output_3\n        string_2 -> characters_5f8a4c.string\n    }\n\n    \n\n    instance(x: -55, y: 528) is_same_f3a0c9 root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same_char {\n        in(x: -287, y: 0, name: \"string\") property(String) string_3f8d9a\n\n        out(x: 560, y: 1, name: \"output\") property(Bool) output_7c2b4e\n\n        instance(x: 0, y: 0) characters_6c5b4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 268, y: -1) uniquelist_9a8d3f root.Std_k98ojb.List.UniqueList {}\n        instance(x: 493, y: 2) length_7e0a8c root.Std_k98ojb.List.Length {}\n        characters_6c5b4c.characters -> uniquelist_9a8d3f.list\n        uniquelist_9a8d3f.unique_list -> length_7e0a8c.list\n        1 -> equal_2a3c4e.right\n        length_7e0a8c.length -> equal_2a3c4e.left\n        instance(x: 718, y: 1) equal_2a3c4e root.Std_k98ojb.Logic.Equal {}\n        equal_2a3c4e.result -> output_7c2b4e\n        string_3f8d9a -> characters_6c5b4c.input\n    }\n\n    \n\n    instance(x: -15, y: 10) check_same_char_f0b7d1 root.main.check_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -284, y: 0, name: \"string\") property(String) string_3f9a6e\n\n        out(x: 593, y: -1, name: \"output\") property(Bool) output_7b8d2c\n\n        instance(x: 0, y: 0) allmatcheswithrange_5a7c4c root.Std_k98ojb.Strings.AllMatchesWithRange {\n            pattern: \"(.)\\\\1*\"\n        }\n        instance(x: 265, y: -1) length_3f9e6d root.Std_k98ojb.Strings.Length {}\n        instance(x: 490, y: 0) equal_5a7c4c root.Std_k98ojb.Logic.Equal {}\n        allmatcheswithrange_5a7c4c.matches -> length_3f9e6d.string\n        string_3f9a6e -> allmatcheswithrange_5a7c4c.input\n        1 -> equal_5a7c4c.right\n        length_3f9e6d.length -> equal_5a7c4c.left\n        equal_5a7c4c.result -> output_7b8d2c\n    }\n\n    \n\n    instance(x: -55, y: 529) is_same_0a1b9f root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -288, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 530, y: 0, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_c9e8d4 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -2) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 265, y: 1) not_75283f root.Std_k98ojb.Logic.Not {}\n        characters_c9e8d4.characters -> contains_d42dce.list\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_2\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3\n\n            instance(x: 89, y: 29) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: 35) substring_7e9c1f root.Std_k98ojb.Strings.Substring {}\n            elem_2 -> notequal_7836b4.left\n            characters_c9e8d4.characters[0] -> notequal_7836b4.right\n            notequal_7836b4.result -> bool_3\n        } -> contains_d42dce.predicate\n        not_75283f.input -> output_1\n        contains_d42dce.is_contained -> not_75283f.input\n        string_1 -> characters_c9e8d4.string\n    }\n\n    \n\n    instance(x: -55, y: 529) is_same_2c856f root.main.is_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) regex_allmatches_7b3b7b root.Std_k98ojb.Strings.Regex.AllMatches {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        \"[0-9]\" -> regex_allmatches_7b3b7b.pattern\n        input_ai -> regex_allmatches_7b3b7b.input\n        length_6e87f2.list -> regex_allmatches_7b3b7b.result\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) matchindices_7b3b7b root.Std_k98ojb.Strings.MatchIndices {}\n        instance(x: 772, y: -76) length_7b3b7b root.Std_k98ojb.List.Length {}\n        \"[0-9]\" -> matchindices_7b3b7b.pattern\n        input_ai -> matchindices_7b3b7b.input\n        length_7b3b7b.list -> matchindices_7b3b7b.matches\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) regex_allmatches_7b3b7b root.Std_k98ojb.Strings.Regex.AllMatches {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(List) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Number) bool_af09a7\n\n            instance(x: 89, y: 29) length_1088d5 root.Std_k98ojb.List.Length {}\n            length_1088d5.length -> bool_af09a7\n            elem_9f6850 -> length_1088d5.list\n        } -> length_6e87f2.handler\n        \"[0-9]\" -> regex_allmatches_7b3b7b.pattern\n        input_ai -> regex_allmatches_7b3b7b.input\n        regex_allmatches_7b3b7b.result -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) matchindices_7b3b7b root.Std_k98ojb.Strings.MatchIndices {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        \"0|1|2|3|4|5|6|7|8|9\" -> matchindices_7b3b7b.pattern\n        input_ai -> matchindices_7b3b7b.input\n        length_6e87f2.list -> matchindices_7b3b7b.matches\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) matchindices_7b3b7b root.Std_k98ojb.Strings.MatchIndices {}\n        instance(x: 1030, y: 75) length_8f9c1a root.Std_k98ojb.List.Length {}\n        \"0|1|2|3|4|5|6|7|8|9\" -> matchindices_7b3b7b.pattern\n        input_ai -> matchindices_7b3b7b.input\n        length_8f9c1a.list -> matchindices_7b3b7b.matches\n        length_8f9c1a.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) regex_allmatches_7b3b7b root.Std_k98ojb.Strings.Regex.AllMatches {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        \"[0-9]\" -> regex_allmatches_7b3b7b.pattern\n        input_ai -> regex_allmatches_7b3b7b.input\n        length_6e87f2.list -> regex_allmatches_7b3b7b.result\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) matchindices_7b3b7b root.Std_k98ojb.Strings.MatchIndices {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        \"0|1|2|3|4|5|6|7|8|9\" -> matchindices_7b3b7b.pattern\n        input_ai -> matchindices_7b3b7b.input\n        length_6e87f2.list -> matchindices_7b3b7b.matches\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) regex_allmatches_7b3b7b root.Std_k98ojb.Strings.Regex.AllMatches {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        \"[0-9]\" -> regex_allmatches_7b3b7b.pattern\n        input_ai -> regex_allmatches_7b3b7b.input\n        length_6e87f2.list -> regex_allmatches_7b3b7b.result\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) matchindices_7b3b7b root.Std_k98ojb.Strings.MatchIndices {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        \"0|1|2|3|4|5|6|7|8|9\" -> matchindices_7b3b7b.pattern\n        input_ai -> matchindices_7b3b7b.input\n        length_6e87f2.list -> matchindices_7b3b7b.matches\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) matchindices_7b3b7b root.Std_k98ojb.Strings.MatchIndices {}\n        instance(x: 1030, y: 76) length_9f5a1c root.Std_k98ojb.List.Length {}\n        \"[0-9]\" -> matchindices_7b3b7b.pattern\n        input_ai -> matchindices_7b3b7b.input\n        length_9f5a1c.list -> matchindices_7b3b7b.matches\n        length_9f5a1c.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        4 -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_fourth_power\n        pow_f892a4.result -> sum_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e4c8d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9e4c8d.second\n        4 -> pow_9e4c8d.first\n        expression_2d6da6.result -> pow_9e4c8d.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_365f7b\n        pow_9e4c8d.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        4 -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_fourth_power\n        pow_f892a4.result -> sum_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4c0e2d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c0e2d.second\n        expression_2d6da6.result -> pow_4c0e2d.first\n        4 -> data_cde0dc\n        data_cde0dc -> pow_4c0e2d.exponent\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_4c0e2d.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e4c8d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9e4c8d.second\n        4 -> pow_9e4c8d.first\n        expression_2d6da6.result -> pow_9e4c8d.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_365f7b\n        pow_9e4c8d.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        4 -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_fourth_power\n        pow_f892a4.result -> sum_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4c9d8e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c9d8e.second\n        4 -> pow_4c9d8e.first\n        expression_2d6da6.result -> pow_4c9d8e.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_365f7b\n        pow_4c9d8e.output -> data_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        4 -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_fourth_power\n        pow_f892a4.result -> sum_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4c9e0d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c9e0d.second\n        4 -> pow_4c9e0d.first\n        expression_2d6da6.result -> pow_4c9e0d.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_365f7b\n        pow_4c9e0d.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e8c2d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9e8c2d.second\n        4 -> pow_9e8c2d.first\n        expression_2d6da6.result -> pow_9e8c2d.value\n        data_cde0dc -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -452, y: -420, name: \"execute\") trigger() execute_3a8f9e\n        in(x: -437, y: -213, name: \"side_length\") property(Number) side_length_7c0d5b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_e1a2ee\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_8f4e9f\n\n        instance(x: 80, y: -417) ifexpression_7b5c0d root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_1a2e9f root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_3c7d5d root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) mul_8a6f9c root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_1e3f7f\") setter_1e3f7f = surface_area\n        setter(x: 875, y: -518, name: \"setter_2a4d8c\") setter_2a4d8c = surface_area\n        getter(x: 902, y: -314, name: \"getter_3b5e9d\") getter_3b5e9d = surface_area\n        instance(x: -202, y: -236) floor_6f7b8e root.Std_k98ojb.Math.Floor {}\n        6 -> mul_3c7d5d.first\n        side_length_7c0d5b -> mul_3c7d5d.second\n        mul_3c7d5d.result -> mul_8a6f9c.first\n        side_length_7c0d5b -> mul_8a6f9c.second\n        0 -> setter_1e3f7f.new_value\n        setter_1e3f7f.continue -> ifexpression_7b5c0d.execute\n        ifexpression_7b5c0d.then -> continue_e1a2ee\n        execute_3a8f9e -> setter_1e3f7f.execute\n        ifexpression_7b5c0d.else -> surface_area_cube_1a2e9f.execute\n        surface_area_cube_1a2e9f.continue -> setter_2a4d8c.execute\n        mul_8a6f9c.result -> setter_2a4d8c.new_value\n        setter_2a4d8c.continue -> continue_e1a2ee\n        getter_3b5e9d.value -> output_8f4e9f\n        side_length_7c0d5b -> floor_6f7b8e.input\n        floor_6f7b8e.output -> ifexpression_7b5c0d.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_1a2e9f root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_2f3e9a\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_1c8b5d\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_7e0e5f\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_4a3f2c\n\n        instance(x: 80, y: -417) ifexpression_eb8d6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_1e9a3f root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_2c8d5f root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_6f0f4c root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_3a9e2\") setter_3a9e2 = surface_area\n        getter(x: 902, y: -314, name: \"getter_5d0f6c\") getter_5d0f6c = surface_area\n        instance(x: -202, y: -236) floor_b1b7f root.Std_k98ojb.Math.Floor {}\n        10 -> mul_2c8d5f.second\n        mul_2c8d5f.result -> add_6f0f4c.first\n        6 -> add_6f0f4c.second\n        floor_b1b7f.output -> surface_area_cube_1e9a3f.side_length_1c8b5d\n        execute_2f3e9a -> setter_3a9e2.execute\n        0 -> setter_3a9e2.new_value\n        ifexpression_eb8d6.then -> continue_7e0e5f\n        ifexpression_eb8d6.else -> surface_area_cube_1e9a3f.execute_2f3e9a\n        surface_area_cube_1e9a3f.continue_7e0e5f -> add_6f0f4c.first\n        surface_area_cube_1e9a3f.output_4a3f2c -> add_6f0f4c.second\n        add_6f0f4c.result -> getter_5d0f6c.value\n        side_length_1c8b5d -> floor_b1b7f.input\n        floor_b1b7f.output -> ifexpression_eb8d6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_9a3e4 root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -100, y: 0, name: \"size\") property(Number) size_1a9d8f\n\n        out(x: 50, y: 0, name: \"surface_area\") property(Number) surface_area_3c2e6b\n\n        instance(x: -40, y: 0) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size * size\"\n        }\n        size_1a9d8f -> math_expr_node.gen_0\n        math_expr_node.result -> surface_area_3c2e6b\n    }\n\n    \n\n    instance(x: -100, y: 0, name: \"surface_area_cube\") expression_7c5b9f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -451, y: -423, name: \"execute\") trigger() execute_1e9a8f\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_96023e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_adfa16 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_547f34 root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        execute_1e9a8f -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        ifexpression_3d7de6.else -> surface_area_cube_96023e.execute_cdac2a\n        surface_area_cube_96023e.continue_d9efd7 -> setter_375321.execute\n        surface_area_cube_96023e.output_732a8a -> add_88bb8a.second\n        mul_adfa16.result -> add_88bb8a.first\n        6 -> mul_adfa16.second\n        side_length_6b655b -> mul_adfa16.first\n        setter_375321.new_value -> add_88bb8a.first\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        2 -> mul_547f34.second\n        side_length_6b655b -> mul_547f34.first\n        mul_547f34.result -> surface_area_cube_96023e.side_length_6b655b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        setter_41e4ad.execute -> continue_d9efd7\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -426, y: -421, name: \"execute\") trigger() execute_3e8f9a\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_96023e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_adfa16 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_547f34 root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        execute_3e8f9a -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        ifexpression_3d7de6.else -> surface_area_cube_.execute_3e8f9a\n        surface_area_cube_.continue_d9efd7 -> setter_375321.execute\n        surface_area_cube_.output_732a8a -> add_88bb8a.second\n        mul_adfa16.result -> add_88bb8a.first\n        6 -> mul_adfa16.second\n        side_length_6b655b -> mul_adfa16.first\n        setter_375321.new_value -> add_88bb8a.result\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.execute -> ifexpression_3d7de6.execute\n        setter_41e4ad.continue -> continue_d9efd7\n        side_length_6b655b -> mul_547f34.first\n        2 -> mul_547f34.second\n        mul_547f34.result -> surface_area_cube_.side_length_6b655b\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -102, y: 1, name: \"size\") property(Number) size_9e6f0a\n\n        out(x: 1168, y: 4, name: \"surface_area\") property(Number) surface_area_7b3c2d\n\n        instance(x: 11, y: -12) mul_1b5f6f root.Std_k98ojb.Math.Mul {}\n        instance(x: 10, y: 42) pow_9a8e0c root.Std_k98ojb.Math.Pow {}\n        instance(x: 10, y: 99) mul_7d3f1c root.Std_k98ojb.Math.Mul {}\n        instance(x: 11, y: 156) mul_2c5e4f root.Std_k98ojb.Math.Mul {}\n        size_9e6f0a -> pow_9a8e0c.x\n        2 -> pow_9a8e0c.y\n        pow_9a8e0c.result -> mul_1b5f6f.first\n        6 -> mul_1b5f6f.second\n        mul_1b5f6f.result -> mul_7d3f1c.first\n        size_9e6f0a -> mul_2c5e4f.first\n        pow_9a8e0c.result -> mul_2c5e4f.second\n        mul_2c5e4f.result -> mul_7d3f1c.second\n        mul_7d3f1c.result -> surface_area_7b3c2d\n    }\n\n    \n\n    instance(x: 11, y: -12) surface_area_cube_9a6c1f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9e6f8a\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_7b3c4d\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_1e5c2f\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_0a8a5f\n\n        instance(x: 80, y: -417) ifexpression_7b6d4f root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_9c1e5a root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_f8d3f4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_6a2b7f root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_1e5c8d\") setter_1e5c8d = sum\n        getter(x: 902, y: -314, name: \"getter_2a9f3f\") getter_2a9f3f = sum\n        instance(x: -202, y: -236) floor_7b6f0f root.Std_k98ojb.Math.Floor {}\n        10 -> mul_f8d3f4.second\n        mul_f8d3f4.result -> add_6a2b7f.first\n        6 -> add_6a2b7f.second\n        add_6a2b7f.result -> setter_1e5c8d.new_value\n        0 -> setter_1e5c8d.new_value\n        setter_1e5c8d.continue -> ifexpression_7b6d4f.execute\n        ifexpression_7b6d4f.then -> continue_1e5c2f\n        execute_9e6f8a -> setter_1e5c8d.execute\n        ifexpression_7b6d4f.else -> surface_area_cube_9c1e5a.execute_9e6f8a\n        surface_area_cube_9c1e5a.continue_1e5c2f -> getter_2a9f3f.execute\n        surface_area_cube_9c1e5a.output_0a8a5f -> continue_1e5c2f\n        getter_2a9f3f.value -> output_0a8a5f\n        side_length_7b36d4 -> floor_7b6f0f.input\n        floor_7b6f0f.output -> mul_f8d3f4.first\n        floor_7b6f0f.output -> ifexpression_7b6d4f.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_9c1e5a root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -102, y: 1, name: \"size\") property(Number) size_9e6f0a\n\n        out(x: 1144, y: 7, name: \"surface_area\") property(Number) surface_area_8b2c8d\n\n        instance(x: 15, y: -5) mul_1f9a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 14, y: 56) pow_6e7f0 root.Std_k98ojb.Math.Pow {}\n        instance(x: 12, y: 109) mul_3d8c5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 10, y: 160) mul_2a1c4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 9, y: 211) add_f7e6f root.Std_k98ojb.Math.Add {}\n        size_9e6f0a -> pow_6e7f0.x\n        2 -> pow_6e7f0.y\n        pow_6e7f0.result -> mul_1f9a4.first\n        6 -> mul_1f9a4.second\n        mul_1f9a4.result -> add_f7e6f.left\n        size_9e6f0a -> mul_2a1c4.first\n        size_9e6f0a -> mul_3d8c5.first\n        mul_2a1c4.result -> mul_3d8c5.second\n        mul_3d8c5.result -> add_f7e6f.right\n        add_f7e6f.result -> surface_area_8b2c8d\n    }\n\n    \n\n    instance(x: 48, y: -23) surface_area_cube_1a4b9c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -451, y: -421, name: \"execute\") trigger() execute_1a9d3f\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_7c0b5e\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_4c8c8e\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_1f2a3d\n\n        instance(x: 80, y: -417) ifexpression_e5b6b0 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_1c9a8f root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_3e7d5f root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_e6e2aa root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_4a1c9d\") setter_4a1c9d = sum\n        getter(x: 902, y: -314, name: \"getter_3e5f7a\") getter_3e5f7a = sum\n        instance(x: -202, y: -236) floor_6b8a0f root.Std_k98ojb.Math.Floor {}\n        10 -> mul_3e7d5f.second\n        mul_3e7d5f.result -> add_e6e2aa.first\n        6 -> add_e6e2aa.second\n        add_e6e2aa.result -> setter_4a1c9d.new_value\n        0 -> setter_4a1c9d.new_value\n        setter_4a1c9d.continue -> ifexpression_e5b6b0.execute\n        ifexpression_e5b6b0.then -> continue_4c8c8e\n        execute_1a9d3f -> setter_4a1c9d.execute\n        ifexpression_e5b6b0.else -> surface_area_cube_1c9a8f.execute_1a9d3f\n        surface_area_cube_1c9a8f.continue_4c8c8e -> getter_3e5f7a.execute\n        surface_area_cube_1c9a8f.output_1f2a3d -> continue_4c8c8e\n        side_length_7c0b5e -> floor_6b8a0f.input\n        floor_6b8a0f.output -> mul_3e7d5f.first\n        getter_3e5f7a.value -> output_1f2a3d\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_9c4b1e root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -426, y: -421, name: \"execute\") trigger() execute_3e1f0d\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_a7c9a6\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_8b2f5c\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_1d0e3c\n\n        instance(x: 80, y: -417) ifexpression_ea6f4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_9e7d2e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_f8c1a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_e5f3ed root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_2d7e6\") setter_2d7e6 = sum\n        getter(x: 902, y: -314, name: \"getter_1c8a3f\") getter_1c8a3f = sum\n        instance(x: -202, y: -236) floor_9b5f0 root.Std_k98ojb.Math.Floor {}\n        10 -> mul_f8c1a4.second\n        mul_f8c1a4.result -> add_e5f3ed.first\n        6 -> add_e5f3ed.second\n        add_e5f3ed.result -> setter_2d7e6.new_value\n        0 -> setter_2d7e6.new_value\n        setter_2d7e6.continue -> ifexpression_ea6f4.execute\n        ifexpression_ea6f4.then -> continue_8b2f5c\n        execute_3e1f0d -> setter_2d7e6.execute\n        ifexpression_ea6f4.else -> surface_area_cube_9e7d2e.execute_3e1f0d\n        surface_area_cube_9e7d2e.continue_8b2f5c -> getter_1c8a3f.execute\n        getter_1c8a3f.value -> output_1d0e3c\n        surface_area_cube_9e7d2e.output_1d0e3c -> setter_2d7e6.new_value\n        setter_2d7e6.continue -> continue_8b2f5c\n        side_length_a7c9a6 -> floor_9b5f0.input\n        floor_9b5f0.output -> mul_f8c1a4.first\n        floor_9b5f0.output -> ifexpression_ea6f4.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_7d3e9 root.main.surface_area_cube {}\n\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -293, y: 158, name: \"list\") property(List) list_9a3f8e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5b1d7c\n\n        instance(x: 201, y: 62) sub_4f6c2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_9a8f3c root.Std_k98ojb.Query.Filter {\n            where: \"it == max\"\n        }\n        instance(x: -49, y: 372) firstitem_1d7e2f root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") minlist_6a9c8c root.Std_k98ojb.Query.Filter {\n            where: \"it == min\"\n        }\n        instance(x: -48, y: 517) firstitem_1f7e2f root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1049, y: -375) length_4c8a0d root.Std_k98ojb.List.Length {}\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_9a3f8e -> maxlist_9a8f3c.list\n        list_9a3f8e -> minlist_6a9c8c.list\n        instance(x: -753, y: -588) data_instance_1 root.Std_k98ojb.List.Flatten {}\n        data_instance_1.items = [max, middle, min]\n        maxlist_9a8f3c.result -> data_instance_1.flattened.last\n        minlist_6a9c8c.result -> data_instance_1.flattened.first\n        list_9a3f8e -> slice_3f3ee6.list\n        1 -> slice_3f3ee6.start\n        slice_3f3ee6.slice -> data_instance_1.flattened.middle\n        length_4c8a0d.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> slice_3f3ee6.end\n        list_9a3f8e -> length_4c8a0d.list\n        maxlist_9a8f3c.result -> firstitem_1d7e2f.list\n        minlist_6a9c8c.result -> firstitem_1f7e2f.list\n        firstitem_1d7e2f.item -> sub_4f6c2e.first\n        firstitem_1f7e2f.item -> sub_4f6c2e.second\n        sub_4f6c2e.result -> output_5b1d7c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_15f9e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -284, y: 156, name: \"list\") property(List) list_0d3b9f\n\n        out(x: 546, y: 127, name: \"output\") property(Number) output_ea7c1e\n\n        instance(x: 201, y: 125) sub_5b8b2c root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 178, name: \"Max list\") maxlist_0d3f4c root.Std_k98ojb.Query.Filter {\n            where: \"it == max\"\n        }\n        instance(x: -318, y: 359, name: \"Min list\") minlist_1a9e8c root.Std_k98ojb.Query.Filter {\n            where: \"it == min\"\n        }\n        instance(x: -49, y: 373) firstitem_5f3d4f root.Std_k98ojb.List.FirstItem {}\n        instance(x: -48, y: 457) firstitem_7a1e2c root.Std_k98ojb.List.FirstItem {}\n        list_0d3b9f -> maxlist_0d3f4c.list\n        list_0d3b9f -> minlist_1a9e8c.list\n        instance(x: -105, y: 156) length_7b5c6c root.Std_k98ojb.List.Length {}\n        instance(x: -104, y: 237) max_2b4b2d root.Std_k98ojb.List.Max {}\n        instance(x: -103, y: 318) min_1e8f9a root.Std_k98ojb.List.Min {}\n        length_7b5c6c.length -> sub_5b8b2c.right\n        maxlist_0d3f4c.result -> firstitem_5f3d4f.list\n        minlist_1a9e8c.result -> firstitem_7a1e2c.list\n        max_2b4b2d.value -> sub_5b8b2c.first\n        min_1e8f9a.value -> length_7b5c6c.list\n        firstitem_5f3d4f.item -> sub_5b8b2c.second\n        sub_5b8b2c.result -> output_ea7c1e\n    }\n\n    \n\n    instance(x: 48, y: -12) diff_max_min_9f0f4f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 155, name: \"list\") property(List) list_1f9b8e\n\n        out(x: 446, y: 142, name: \"output\") property(Number) output_e5a7c6\n\n        instance(x: 192, y: 140) sub_4d0c2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -106, y: 155) max_9f1f8c root.Std_k98ojb.List.Max {}\n        instance(x: -105, y: 354) min_f6a3ed root.Std_k98ojb.List.Min {}\n        list_1f9b8e -> max_9f1f8c.list\n        list_1f9b8e -> min_f6a3ed.list\n        max_9f1f8c.max -> sub_4d0c2e.first\n        min_f6a3ed.min -> sub_4d0c2e.second\n        sub_4d0c2e.result -> output_e5a7c6\n    }\n\n    \n\n    instance(x: 46, y: 160) diff_max_min_1b9f8c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_f624f root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_``Max value_0b1361`` root.Std_k98ojb.List.Min {}\n        list_09fcba -> max_f624f.list\n        list_09fcba -> min_``Max value_0b1361``.list\n        max_f624f.max -> sub_7e1ce0.first\n        min_``Max value_0b1361``.min -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 158, name: \"list\") property(List) list_1a8f9e\n\n        out(x: 546, y: 127, name: \"output\") property(Number) output_7c3d5b\n\n        instance(x: 201, y: 62) sub_6b2b0c root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_9e1a8f root.Std_k98ojb.Query.Filter {\n            where: \"it == max\"\n        }\n        instance(x: -318, y: 521, name: \"Min list\") minlist_7d3c6c root.Std_k98ojb.Query.Filter {\n            where: \"it == min\"\n        }\n        instance(x: -49, y: 372) firstitem_1a9f2e root.Std_k98ojb.List.FirstItem {}\n        instance(x: -48, y: 517) firstitem_d8c3d6 root.Std_k98ojb.List.FirstItem {}\n        list_1a8f9e -> maxlist_9e1a8f.list\n        list_1a8f9e -> minlist_7d3c6c.list\n        instance(x: -1059, y: -696) length_4f2b5c root.Std_k98ojb.List.Length {}\n        instance(x: -978, y: -566) max_1d0f7a root.Std_k98ojb.List.Max {}\n        list_1a8f9e -> length_4f2b5c.list\n        length_4f2b5c.length -> maxlist_9e1a8f.max\n        list_1a8f9e -> max_1d0f7a.list\n        max_1d0f7a.max -> maxlist_9e1a8f.min\n        instance(x: -1191, y: -492) min_3c2b5c root.Std_k98ojb.List.Min {}\n        list_1a8f9e -> min_3c2b5c.list\n        min_3c2b5c.min -> minlist_7d3c6c.max\n        maxlist_9e1a8f.result -> firstitem_1a9f2e.list\n        minlist_7d3c6c.result -> firstitem_d8c3d6.list\n        firstitem_1a9f2e.item -> sub_6b2b0c.first\n        firstitem_d8c3d6.item -> sub_6b2b0c.second\n        sub_6b2b0c.result -> output_7c3d5b\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_1a9f2e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -281, y: 158, name: \"list\") property(List) list_1a3f2e\n\n        out(x: 512, y: 147, name: \"output\") property(Number) output_eb9d5c\n\n        instance(x: 0, y: 0) sub_4f7f8c root.Std_k98ojb.Math.Sub {}\n        instance(x: -105, y: -110) max_1e3a2f root.Std_k98ojb.List.Max {}\n        instance(x: -105, y: 112) min_5d6a8c root.Std_k98ojb.List.Min {}\n        list_1a3f2e -> max_1e3a2f.list\n        list_1a3f2e -> min_5d6a8c.list\n        max_1e3a2f.max -> sub_4f7f8c.first\n        min_5d6a8c.min -> sub_4f7f8c.second\n        sub_4f7f8c.result -> output_eb9d5c\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_2e1f1c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1a9f3e\n\n        out(x: 593, y: -1, name: \"output\") property(Number) output_e5b2d7\n\n        instance(x: 0, y: 0) max_4c6f8c root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 0) min_9a9e3f root.Std_k98ojb.List.Min {}\n        instance(x: 752, y: 93) sub_7d1a2e root.Std_k98ojb.Math.Sub {}\n        list_1a9f3e -> max_4c6f8c.list\n        list_1a9f3e -> min_9a9e3f.list\n        max_4c6f8c.max -> sub_7d1a2e.first\n        min_9a9e3f.min -> sub_7d1a2e.second\n        sub_7d1a2e.result -> output_e5b2d7\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_max_min_6c0c4e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -281, y: 165, name: \"list\") property(List) list_1a3f0e\n\n        out(x: 800, y: 147, name: \"output\") property(Number) output_9b8c7d\n\n        instance(x: 532, y: 145) sub_6f2c5c root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_f3a1e4 root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_9f6c7d root.Std_k98ojb.List.Min {}\n        list_1a3f0e -> max_f3a1e4\n        list_1a3f0e -> min_9f6c7d\n        max_f3a1e4 -> sub_6f2c5c.first\n        min_9f6c7d -> sub_6f2c5c.second\n        sub_6f2c5c.result -> output_9b8c7d\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_1e4a0f root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_f624f root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_``Max value_0b1361`` root.Std_k98ojb.List.Min {}\n        list_09fcba -> max_f624f.list\n        list_09fcba -> min_``Max value_0b1361``.list\n        max_f624f.max -> sub_7e1ce0.first\n        min_``Max value_0b1361``.min -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 154, name: \"list\") property(List) list_0f9d6e\n\n        out(x: 545, y: 133, name: \"output\") property(Number) output_eb2c1a\n\n        instance(x: 201, y: 132) sub_7c8a3e root.Std_k98ojb.Math.Sub {}\n        instance(x: -104, y: 154) max_5f0d9c root.Std_k98ojb.List.Max {}\n        instance(x: -105, y: 34) min_6f4f2c root.Std_k98ojb.List.Min {}\n        list_0f9d6e -> max_5f0d9c.list\n        list_0f9d6e -> min_6f4f2c.list\n        max_5f0d9c.max -> sub_7c8a3e.first\n        min_6f4f2c.min -> sub_7c8a3e.second\n        sub_7c8a3e.result -> output_eb2c1a\n    }\n\n    \n\n    instance(x: 48, y: -5) diff_max_min_9d7b0c root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 11, name: \"input\") property(Number) input_5e8f1d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_7c9b0a\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_e6a3cf\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_f8e2d1\n\n        instance(x: 201, y: 62) modulo_5b7f9c root.Std_k98ojb.Math.Modulo {}\n        instance(x: -105, y: -110) ifexpression_6a3c0f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_5e8f1d -> modulo_5b7f9c.value\n        2 -> modulo_5b7f9c.divisor\n        ifexpression_6a3c0f.then -> continue_e6a3cf\n        execute_7c9b0a -> ifexpression_6a3c0f.execute\n        modulo_5b7f9c.result -> ifexpression_6a3c0f.gen_0\n        ifexpression_6a3c0f.value -> output_f8e2d1\n    }\n\n    \n\n    instance(x: -174, y: 11) is_even_4c7d0f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 20, name: \"input\") property(Number) input_1a8f9e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_eb0c6d\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_f4a7ec\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_1f3e5c\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output\n        input_1a8f9e -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> output_1f3e5c\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        false -> setter_37db7f.new_value\n        execute_eb0c6d -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_f4a7ec\n        setter_37db7f.continue -> continue_f4a7ec\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_8e3c9d root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 0, name: \"input\") property(Number) input_1f9a3e\n        in(x: -451, y: -115, name: \"execute\") trigger() execute_e5b7c4\n\n        out(x: 515, y: 6, name: \"output\") property(Bool) output_f0d8ef\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_9f1a3e\n\n        instance(x: -104, y: -110) ifexpression_e5b7c4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1f9a3e -> ifexpression_e5b7c4.gen_0\n        execute_e5b7c4 -> ifexpression_e5b7c4.execute\n        ifexpression_e5b7c4.then -> continue_9f1a3e\n        ifexpression_e5b7c4.value -> output_f0d8ef\n    }\n\n    \n\n    instance(x: -173, y: 12) is_even_6a2d6f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 165, name: \"input\") property(Number) input_1f3e9d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_5b8a0c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_6b4a9c\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_e2f3d1\n\n        instance(x: -0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -275, y: -35, name: \"setter_ce2a48\") setter_ce2a48 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_6b4a9c\n        ifexpression_875761.value -> output_e2f3d1\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        input_1f3e9d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_6b4a9c\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_1f3e9d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_ce2a48.new_value\n        execute_5b8a0c -> setter_ce2a48.execute\n        setter_ce2a48.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_even_f3e8b5 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 26, name: \"input\") property(Number) input_1a8f9e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_5b3d6c\n\n        out(x: 1267, y: -113, name: \"continue\") trigger() continue_2e0b9e\n        out(x: 1238, y: 62, name: \"output\") property(Bool) output_ea1f9f\n\n        instance(x: 1086, y: 54) modulo_5c7d8f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1050, y: -4) equal_3e9a2f root.Std_k98ojb.Logic.Equal {}\n        input_1a8f9e -> modulo_5c7d8f.value\n        2 -> modulo_5c7d8f.divisor\n        modulo_5c7d8f.result -> equal_3e9a2f.left\n        0 -> equal_3e9a2f.right\n        equal_3e9a2f.result -> output_ea1f9f\n        execute_5b3d6c -> continue_2e0b9e\n    }\n\n    \n\n    instance(x: -83, y: 64) is_even_7c4f8c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 17, name: \"input\") property(Number) input_1a3f0e\n        in(x: -452, y: -114, name: \"execute\") trigger() execute_eb9d6c\n\n        out(x: 1217, y: -112, name: \"continue\") trigger() continue_f8a4ea\n        out(x: 1208, y: 127, name: \"output\") property(Bool) output_1f3e2d\n\n        instance(x: 1046, y: 119) ifexpression_e5c7b9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a3f0e -> ifexpression_e5c7b9.gen_0\n        execute_eb9d6c -> ifexpression_e5c7b9.execute\n        ifexpression_e5c7b9.then -> continue_f8a4ea\n        ifexpression_e5c7b9.else -> continue_f8a4ea\n        ifexpression_e5c7b9.value -> output_1f3e2d\n    }\n\n    \n\n    instance(x: -175, y: 12) is_even_6b0b5f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 16, name: \"input\") property(Number) input_1a9f0e\n        in(x: -451, y: -115, name: \"execute\") trigger() execute_eb2d7c\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_5a3a6e\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_f9f1ab\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a9f0e -> ifexpression_e38995.gen_0\n        execute_eb2d7c -> ifexpression_e38995.execute\n        ifexpression_e38995.then -> output_5a3a6e\n        ifexpression_e38995.else -> continue_f9f1ab\n        ifexpression_e38995.value -> continue_f9f1ab\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_7b2d4c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 17, name: \"input\") property(Number) input_1a3f0e\n        in(x: -451, y: -113, name: \"execute\") trigger() execute_7b2c9d\n\n        out(x: 513, y: -114, name: \"continue\") trigger() continue_5e8b4e\n        out(x: 1226, y: 10, name: \"output\") property(Bool) output_1a3f0e\n\n        instance(x: 1187, y: -113) ifexpression_2c9d0e root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a3f0e -> ifexpression_2c9d0e.gen_0\n        execute_7b2c9d -> ifexpression_2c9d0e.execute\n        ifexpression_2c9d0e.then -> continue_5e8b4e\n        ifexpression_2c9d0e.value -> output_1a3f0e\n        ifexpression_2c9d0e.else -> continue_5e8b4e\n    }\n\n    \n\n    instance(x: -175, y: 11) is_even_f6b9a7 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 166, name: \"input\") property(Number) input_1e8a3f\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_edc2e3\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: 532, y: 147) modulo_7e1ce0 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 679, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        input_1e8a3f -> modulo_7e1ce0.value\n        2 -> modulo_7e1ce0.divisor\n        execute_12bf99 -> ifexpression_875761.execute\n        modulo_7e1ce0.result -> ifexpression_875761.gen_0\n        ifexpression_875761.then -> continue_685c8f\n        ifexpression_875761.value -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) is_even_f53d27 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 1, name: \"input\") property(Number) input_8e9a5f\n        in(x: -449, y: -115, name: \"execute\") trigger() execute_eb2c0d\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_6b7a1f\n        out(x: 1218, y: 5, name: \"output\") property(Bool) output_9e4c9e\n\n        instance(x: -103, y: -110) ifexpression_2d0f8f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_ba7c1e\") getter_ba7c1e = output\n        setter(x: 116, y: -268, name: \"setter_8b9f6d\") setter_8b9f6d = output\n        input_8e9a5f -> ifexpression_2d0f8f.gen_0\n        getter_ba7c1e.value -> output_9e4c9e\n        ifexpression_2d0f8f.then -> setter_8b9f6d.execute\n        true -> setter_8b9f6d.new_value\n        false -> setter_8b9f6d.new_value\n        execute_eb2c0d -> ifexpression_2d0f8f.execute\n        setter_8b9f6d.continue -> continue_6b7a1f\n    }\n\n    \n\n    instance(x: -173, y: -63) is_even_f5e4d3 root.main.is_even {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5f4c8a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_0b1361`` root.Std_k98ojb.List.Contains {}\n        characters_7b3b7b.characters -> find_5f4c8a.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_54bdc root.Std_k98ojb.Logic.NotEqual {}\n            characters_7b3b7b.characters -> slice_45e806.list\n            current_afd5b1 -> slice_45e806.start\n            -1 -> slice_45e806.end\n            slice_45e806.slice -> contains_d42dce.list\n            current_afd5b1 -> ``first occurrence_0b1361``.list\n            contains_d42dce.contains -> notequal_54bdc.left\n            false -> notequal_54bdc.right\n            notequal_54bdc.result -> bool_1eb6e9\n        } -> find_5f4c8a.predicate\n        find_5f4c8a.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_807ffd.left\n            \"\" -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        input_0 -> find_6d05b0.items\n        find_6d05b0.item -> output_3bc2ae\n    }\n\n    \n\n    instance(x: -81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -287, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3a8d7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4c6e9f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"char\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"index < list.IndexOf(it)\"\n        }\n        instance(x: 62, y: -226, name: \"first repeated char\") ``char_0`` root.Std_k98ojb.Iteration.Find {}\n        characters_3a8d7f.characters -> find_4d6e9f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) indexof_45e806 root.Std_k98ojb.List.IndexOf {}\n            instance(x: 415, y: 86) lt_a54bdc root.Std_k98ojb.Math.LessThan {}\n            current_afd5b1 -> indexof_45e806.item\n            characters_3a8d7f.characters -> indexof_45e806.list\n            indexof_45e806.index -> expression_634b7e.gen_0\n            find_4d6e9f.index -> expression_634b7e.gen_1\n            lt_a54bdc.left -> expression_634b7e.result\n            expression_634b7e.output -> bool_1eb6e9\n        } -> find_4c6e9f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) indexof_45e806 root.Std_k98ojb.List.IndexOf {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> indexof_45e806.item\n            characters_3a8d7f.characters -> indexof_45e806.list\n            indexof_45e86.index -> ``char_0``.predicate.gen_0\n            find_4c6e9f.index -> ``char_0``.predicate.gen_1\n            notequal_148aeb.left -> ``char_0``.predicate.result\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``char_0``.predicate\n        characters_3a8d7f.characters -> ``char_0``.items\n        find_4c6e9f.item -> output_0\n        ``char_0``.item -> output_0\n        input_1 -> characters_3a8d7f.input\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3c7d9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4e6a8f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -11) contains_5e1a8f root.Std_k98ojb.List.Contains {}\n        characters_3c7d9f.characters -> find_4e6a8f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1\n\n            instance(x: 112, y: 80) ``list_2`` root.Std_k98ojb.List.Slice {}\n            contains_5e1a8f.list -> ``list_2``.list\n            current_0 -> ``list_2``.item\n            0 -> ``list_2``.start\n            -1 -> ``list_2``.end\n            ``list_2``.slice -> contains_5e1a8f.list\n            contains_5e1a8f.result -> bool_1\n        } -> find_4e6a8f.predicate\n        input_1 -> characters_3c7d9f.input\n        find_4e6a8f.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) ``first repeated char_634b7e`` root.Std_k98ojb.Iteration.Map {\n            handler: root.main.first_repeated_char.find_7e1ce0\n        }\n        instance(x: -39, y: 26, name: \"find\") find_de624f root.Std_k98ojb.Query.Find {}\n        input_0 -> ``first repeated char_634b7e``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_de624f.where\n        ``first repeated char_634b7e``.output_list -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) indexof_45e806 root.Std_k98ojb.Strings.IndexOf {}\n            input_0 -> indexof_45e806.input\n            current_afd5b1 -> indexof_45e806.contains\n            indexof_45e806.index -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        find_7e1ce0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5b9c4e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3a8f6d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -10) contains_7c2a1c root.Std_k98ojb.List.Contains {}\n        characters_5b9c4e.characters -> find_3a8f6d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 112, y: 80) ``list_0`` root.Std_k98ojb.List.Slice {}\n            contains_7c2a1c.list -> ``list_0``.list\n            current_0 -> ``list_0``.start\n            -1 -> ``list_0``.end\n            ``list_0``.slice -> contains_7c2a1c.list\n            current_0 -> contains_7c2a1c.contains\n            contains_7c2a1c.result -> bool_0\n        } -> find_3a8f6d.predicate\n        input_0 -> characters_5b9c4e.input\n        find_3a8f6d.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_7a1b2f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_2\n\n        instance(x: 0, y: 0) find_3 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_1\n            in(x: -113, y: 68, name: \"seen\") property(List) seen_2\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3\n\n            instance(x: 89, y: 29) contains_4 root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) notequal_5 root.Std_k98ojb.Logic.NotEqual {}\n            current_1 -> contains_4.item\n            seen_2 -> contains_4.list\n            contains_4.result -> notequal_5.left\n            false -> notequal_5.right\n            notequal_5.result -> bool_3\n        } -> find_3.predicate\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_1\n\n            out(x: 515, y: 44, name: \"list\") property(List) list_2\n\n            instance(x: 89, y: 29) add_6 root.Std_k98ojb.List.Add {}\n            current_1 -> add_6.item\n            seen_2 -> add_6.list\n            add_6.listWithItem -> list_2\n        } -> find_3.onItem\n        input_1 -> find_3.items\n        find_3.item -> output_2\n    }\n\n    \n\n    instance(x: -81, y: 52) first_repeated_char_7 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5b9c4e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7f3a8d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -2) contains_6a1c5d root.Std_k98ojb.List.Contains {}\n        characters_5b9c4e.characters -> find_7f3a8d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 112, y: 80) ``list_0`` root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) contains_1e3c8d root.Std_k98ojb.List.Contains {}\n            characters_5b9c4e.characters -> ``list_0``.list\n            current_0 -> ``list_0``.start\n            -1 -> ``list_0``.end\n            ``list_0``.slice -> contains_1e3c8d.list\n            current_0 -> contains_1e3c8d.contains\n            contains_1e3c8d.result -> bool_0\n        } -> find_7f3a8d.predicate\n        find_7f3a8d.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_6e6bfd root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3a9b7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5e8f4d root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"first occurrence\") ``first occurrence_2a9c1d`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"second occurrence\") ``second occurrence_0f3e8c`` root.Std_k98ojb.Iteration.Find {}\n        characters_3a9b7c.characters -> find_5e8f4d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 112, y: 80) contains_7f9c8d root.Std_k98ojb.Strings.Contains {}\n            ``first occurrence_2a9c1d``.item -> contains_7f9c8d.input\n            current_1 -> contains_7f9c8d.contains\n            contains_7f9c8d.result -> bool_0\n        } -> find_5e8f4d.predicate\n        characters_3a9b7c.characters -> ``first occurrence_2a9c1d``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 112, y: 80) contains_7f9c8d root.Std_k98ojb.Strings.Contains {}\n            ``first occurrence_2a9c1d``.item -> contains_7f9c8d.input\n            current_1 -> contains_7f9c8d.contains\n            contains_7f9c8d.result -> bool_0\n        } -> ``second occurrence_0f3e8c``.predicate\n        characters_3a9b7c.characters -> ``second occurrence_0f3e8c``.items\n        find_5e8f4d.item -> output_0\n        ``first occurrence_2a9c1d``.item -> ``second occurrence_0f3e8c``.predicate\n        input_1 -> characters_3a9b7c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_6e6bfd root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) ``first repeated char_634b7e`` root.Std_k98ojb.Iteration.Map {\n            handler: func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                input_0 -> contains_d42dce.input\n                current_afd5b1 -> contains_d42dce.contains\n                contains_d42dce.result -> bool_1eb6e9\n            }\n        }\n        instance(x: 62, y: -226) ``first repeated char_2d44da`` root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                input_0 -> contains_d42dce.input\n                current_afd5b1 -> contains_d42dce.contains\n                contains_d42dce.result -> bool_1eb6e9\n            }\n        }\n        instance(x: 62, y: -226) ``first repeated char_2d44da`` root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                input_0 -> contains_d42dce.input\n                current_afd5b1 -> contains_d42dce.contains\n                contains_d42dce.result -> bool_1eb6e9\n            }\n        }\n        instance(x: 62, y: -226) ``first repeated char_2d44da`` root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                input_0 -> contains_d42dce.input\n                current_afd5b1 -> contains_d42dce.contains\n                contains_d42dce.result -> bool_1eb6e9\n            }\n        }\n        instance(x: 62, y: -226) ``first repeated char_2d44da`` root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                input_0 -> contains_d42dce.input\n                current_afd5b1 -> contains_d42dce.contains\n                contains_d42dce.result -> bool_1eb6e9\n            }\n        }\n        instance(x: 62, y: -226) ``first repeated char_2d44da`` root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                input_0 -> contains_d42dce.input\n                current_afd5b1 -> contains_d42dce.contains\n                contains_d42dce.result -> bool_1eb6e9\n            }\n        }\n        instance(x: 62, y: -226) ``first repeated char_2d44da`` root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                input_0 -> contains_d42dce.input\n                current_afd5b1 -> contains_d42dce.contains\n                contains_d42dce.result -> bool_1eb6e9\n            }\n        }\n        instance(x: 62, y: -226) ``first repeated char_2d44da`` root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                input_0 -> contains_d42dce.input\n                current_afd5b1 -> contains_d42dce.contains\n                contains_d42dce.result -> bool_1eb6e9\n            }\n        }\n        instance(x: 62, y: -226) ``first repeated char_2d44da`` root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                input_0 -> contains_d42dce.input\n                current_afd5b1 -> contains_d42dce.contains\n                contains_d42dce.result -> bool_1eb6e9\n            }\n        }\n        instance(x: 62, y: -226) ``first repeated char_2d44da`` root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                input_0 -> contains_d42dce.input\n                current_afd5b1 -> contains_d42dce.contains\n                contains_d42dce.result -> bool_1eb6e9\n            }\n        }\n        instance(x: 62, y: -226) ``first repeated char_2d44da`` root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n                input_0 -> contains_d42dce.input\n                current_afd5b1 -> contains_d42dce.contains\n                contains_d42dce.result -> bool_1eb6e9\n            }\n        }\n        instance(x: 62, y: -226) ``first repeated char_2d44da`` root.Std_k98ojb.Iteration.Filter {\n            handler: func()"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_9f7759\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_9cceb3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1cedb2\") getter_1cedb2 = second_min\n        setter(x: 116, y: -268, name: \"setter_37db7f\") setter_37db7f = second_min\n        instance(x: -105, y: -110) ifexpression_37db7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1cedb2\") getter_1cedb2 = second_min\n        setter(x: 116, y: -268, name: \"setter_37db7f\") setter_37db7f = second_min\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min\n        min -> ifexpression_e38995.gen_0\n        second_min -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> min_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        min -> setter_1cedb2.new_value\n        list_min_node.min -> ifexpression_9cceb3.gen_0\n        second_min -> ifexpression_9cceb3.gen_1\n        getter_1cedb2.value -> second_min_9f7759\n        ifexpression_9cceb3.then -> setter_37db7f.execute\n        min -> setter_37db7f.new_value\n        list_min_node.min -> ifexpression_37db7f.gen_0\n        second_min -> ifexpression_37db7f.gen_1\n        getter_1cedb2.value -> second_min_9f7759\n        ifexpression_37db7f.then -> setter_37db7f.execute\n        min -> setter_37db7f.new_value\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_8e6f9a\n\n        out(x: 593, y: 29, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_1b7c5d root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_1b7c5d.predicate\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> min_c3e343.predicate\n        list_8e6f9a -> find_1b7c5d.items\n        list_8e6f9a -> min_c3e343.list\n        find_1b7c5d.item -> number_3bc2ae\n        min_c3e343.min -> find_1b7c5d.predicate.second_smallest\n    }\n\n    \n\n    instance(x: -55, y: 129) second_smallest_6a8f4c root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) min_7b5a8f root.Std_k98ojb.List.Min {}\n        instance(x: -39, y: 26, name: \"First smallest number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Second smallest number\") ``First smallest number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> min_7b5a8f.items\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            min_7b5a8f.min -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        list_09fcba -> ``First smallest number_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            min_7b5a8f.min -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First smallest number_0b1361``.predicate\n        find_de624f.item -> min_7b5a8f.items\n        ``First smallest number_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) second_smallest_f53d27 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 0, name: \"list\") property(List) list_9e8a1f\n\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_7c2d6b\n\n        instance(x: -105, y: -110) min_c3e343 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_remove_f9a1d4 root.Std_k98ojb.List.Remove {}\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        list_9e8a1f -> min_c3e343.items\n        min_c3e343.min -> list_remove_f9a1d4.index\n        list_9e8a1f -> list_remove_f9a1d4.list\n        list_remove_f9a1d4.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_7c2d6b\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 2, name: \"list\") property(List) list_9f6a8e\n\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_a3b1c7\n\n        instance(x: -105, y: -110) min_4d0c8f root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_remove_c6e9a2 root.Std_k98ojb.List.Remove {}\n        instance(x: 426, y: -303) min_b1a3a5 root.Std_k98ojb.List.Min {}\n        list_9f6a8e -> min_4d0c8f.list\n        min_4d0c8f.min -> list_remove_c6e9a2.index\n        list_9f6a8e -> list_remove_c6e9a2.list\n        list_remove_c6e9a2.listWithoutItem -> min_b1a3a5.list\n        min_b1a3a5.min -> second_min_a3b1c7\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_8f4d0f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: 0, name: \"list\") property(List) list_9f2a5e\n\n        out(x: 157, y: 1, name: \"second_smallest\") property(Number) second_smallest_8c7d4b\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268,",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f2a8e\n\n        out(x: 593, y: 1, name: \"number\") property(Number) number_7b3c5d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_9f2a8e -> min_c3e343.items\n        min_c3e343.min -> find_6d05b0.predicate.second_smallest\n        list_9f2a8e -> find_6d05b0.items\n        find_6d05b0.item -> number_7b3c5d\n    }\n\n    \n\n    instance(x: -55, y: 127) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: 1, name: \"list\") property(List) list_9f5a3e\n\n        out(x: 159, y: -119, name: \"second_min\") property(Number) second_min_7c8b4d\n\n        instance(x: -105, y: -110) min_c3e343 root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_remove_1f9a6e root.Std_k98ojb.List.Remove {}\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        list_9f5a3e -> min_c3e343.items\n        min_c3e343.min -> list_remove_1f9a6e.index\n        list_9f5a3e -> list_remove_1f9a6e.list\n        list_remove_1f9a6e.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_7c8b4d\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: 0, name: \"list\") property(List) list_9e3a1f\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_8c2b4d\n\n        instance(x: -105, y: -110) find_7f0b7f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -144, y: 112, name: \"elem\") property(Number) elem_9a6c1e\n\n            out(x: 116, y: -268, name: \"\") property(Bool) _3d8f0a\n\n            instance(x: 89, y: 29) min_2b7d5c root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_1e9f4f root.Std_k98ojb.Logic.NotEqual {}\n            list_9e3a1f -> min_2b7d5c.first\n            elem_9a6c1e -> min_2b7d5c.second\n            min_2b7d5c.result -> notequal_1e9f4f.left\n            0 -> notequal_1e9f4f.right\n            notequal_1e9f4f.result -> _3d8f0a\n        } -> find_7f0b7f.predicate\n        list_9e3a1f -> find_7f0b7f.items\n        find_7f0b7f.item -> second_min_8c2b4d\n    }\n\n    \n\n    instance(x: -174, y: -63) second_smallest_b5a6ec root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 3, name: \"list\") property(List) list_1e9a2f\n\n        out(x: 593, y: 4, name: \"second_smallest\") property(Number) second_smallest_5c8b6d\n\n        instance(x: 0, y: 0) min_7e3a8c root.Std_k98ojb.List.Min {}\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_1e9a2f -> filter_f3b46d.list\n        filter_f3b46d.result -> firstitem_870503.list\n        list_1e9a2f -> filter_4d4556.list\n        filter_4d4556.result -> firstitem_3078c6.list\n        instance(x: 0, y: 0) min_7e3a8c root.Std_k98ojb.List.Min {}\n        list_1e9a2f -> min_7e3a8c.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> min_7e3a8c.predicate\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        min_7e3a8c.min -> second_smallest_5c8b6d\n        sub_852f2e.result -> list_1e9a2f\n    }\n\n    \n\n    instance(x: -67, y: 27) second_smallest_f21f44 root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 18500,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -175, y: 15, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_7c6b3d\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_5e0c4a\n\n        instance(x: 133, y: -131) intersection_1f9c1 root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2f9e -> intersection_1f9c1.left\n        list2_7c6b3d -> intersection_1f9c1.right\n        instance(x: 360, y: -95) notempty_4b0c5 root.Std_k98ojb.List.NotEmpty {}\n        intersection_1f9c1.intersection -> notempty_4b0c5.list\n        notempty_4b0c5.isEmpty -> output_5e0c4a\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -171, y: 19, name: \"list1\") property(List) list1_8a2b9f\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_4c6d7e\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_3b5f8a\n\n        instance(x: 133, y: -131) intersection_1b9b0f root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2b9f -> intersection_1b9b0f.left\n        list2_4c6d7e -> intersection_1b9b0f.right\n        instance(x: 360, y: -95) notempty_3b5c6f root.Std_k98ojb.List.NotEmpty {}\n        intersection_1b9b0f.intersection -> notempty_3b5c6f.list\n        notempty_3b5c6f.isEmpty -> output_3b5f8a\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -179, y: 11, name: \"list1\") property(List) list1_8a2f5e\n        in(x: -165, y: -91, name: \"list2\") property(List) list2_9c0b4d\n\n        out(x: 1013, y: -74, name: \"output\") property(Bool) output_7a1f6c\n\n        instance(x: 334, y: -51, name: \"intersection\") intersection_8e5b3c root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2f5e -> intersection_8e5b3c.left\n        list2_9c0b4d -> intersection_8e5b3c.right\n        instance(x: 695, y: -74) notempty_7f6f3f root.Std_k98ojb.List.NotEmpty {}\n        intersection_8e5b3c.intersection -> notempty_7f6f3f.list\n        notempty_7f6f3f.isEmpty -> output_7a1f6c\n    }\n\n    \n\n    instance(x: -133, y: 36) common_element_e2d9ed root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -172, y: 19, name: \"list1\") property(List) list1_4a8f5e\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_9c0b6d\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_3f7b4a\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_5e8b1f root.Std_k98ojb.Sets.Intersection {}\n        list1_4a8f5e -> intersection_5e8b1f.left\n        list2_9c0b6d -> intersection_5e8b1f.right\n        instance(x: -11, y: 9) notempty_3f7a8c root.Std_k98ojb.List.NotEmpty {}\n        intersection_5e8b1f.intersection -> notempty_3f7a8c.list\n        notempty_3f7a8c.isEmpty -> output_3f7b4a\n    }\n\n    \n\n    instance(x: -138, y: -63) common_element_6d9a2f root.main.common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -171, y: 18, name: \"list1\") property(List) list1_9a3b6f\n        in(x: -159, y: -121, name: \"list2\") property(List) list2_8c7e0d\n\n        out(x: 504, y: -50, name: \"output\") property(Bool) output_5b1a4c\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_c6f3b9 root.Std_k98ojb.Sets.Intersection {}\n        list1_9a3b6f -> intersection_c6f3b9.left\n        list2_8c7e0d -> intersection_c6f3b9.right\n        instance(x: -11, y: 9) notempty_5b4f3c root.Std_k98ojb.List.NotEmpty {}\n        intersection_c6f3b9.intersection -> notempty_5b4f3c.list\n        notempty_5b4f3c.isEmpty -> output_5b1a4c\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_8d7e2f root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -179, y: 14, name: \"list1\") property(List) list1_9e3f5a\n        in(x: -181, y: -11, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 360, y: -95) notempty_4e8c54 root.Std_k98ojb.List.NotEmpty {}\n        list1_9e3f5a -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersection -> notempty_4e8c54.list\n        notempty_4e8c54.isEmpty -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_cbc0b6 root.main.common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -175, y: 18, name: \"list1\") property(List) list1_3a8b9f\n        in(x: -164, y: -123, name: \"list2\") property(List) list2_7c6d5e\n\n        out(x: 786, y: -110, name: \"output\") property(Bool) output_e0b4ee\n\n        instance(x: 132, y: -131) intersection_9f8a3 root.Std_k98ojb.Sets.Intersection {}\n        list1_3a8b9f -> intersection_9f8a3.left\n        list2_7c6d5e -> intersection_9f8a3.right\n        instance(x: 361, y: -110) notempty_0e4f2 root.Std_k98ojb.List.NotEmpty {}\n        intersection_9f8a3.intersection -> notempty_0e4f2.list\n        notempty_0e4f2.isEmpty -> output_e0b4ee\n    }\n\n    \n\n    instance(x: 94, y: -67) common_element_c5c1d6 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -171, y: 19, name: \"list1\") property(List) list1_9e3f8a\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_7c0b6d\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_e5e1dc\n\n        instance(x: 133, y: -131) intersection_3f9a8f root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3f8a -> intersection_3f9a8f.left\n        list2_7c0b6d -> intersection_3f9a8f.right\n        instance(x: 360, y: -95) notempty_4a5f5f root.Std_k98ojb.List.NotEmpty {}\n        intersection_3f9a8f.intersection -> notempty_4a5f5f.list\n        notempty_4a5f5f.isEmpty -> output_e5e1dc\n    }\n\n    \n\n    instance(x: 93, y: -122) common_element_7c6b0d root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -179, y: 10, name: \"list1\") property(List) list1_3e8a6f\n        in(x: -163, y: -115, name: \"list2\") property(List) list2_7b0c9d\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list1_3e8a6f -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list2_7b0c9d -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -174, y: 11, name: \"list1\") property(List) list1_8a3f6b\n        in(x: -182, y: -108, name: \"list2\") property(List) list2_9e5c75\n\n        out(x: 785, y: -112, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_8a3f6b -> intersection_201051.left\n        list2_9e5c75 -> intersection_201051.right\n        instance(x: 360, y: -95) notempty_f89569 root.Std_k98ojb.List.NotEmpty {}\n        intersection_201051.intersection -> notempty_f89569.list\n        notempty_f89569.isEmpty -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 5, name: \"list\") property(List) list_3a0f9e\n\n        out(x: 1227, y: 2, name: \"output\") property(Bool) output_eb1d8c\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"First even number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"First odd number\") ``First even number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_3a0f9e -> filter_f3b46d.list\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        list_3a0f9e -> ``First even number_0b1361``.items\n        find_de624f.item -> sub_852f2e.first\n        ``First even number_0b1361``.item -> sub_852f2e.second\n        sub_852f2e.result -> output_eb1d8c\n    }\n\n    \n\n    instance(x: -291, y: 177) is_consecutive_f53d27 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 5, name: \"list\") property(List) list_1e8f3a\n\n        out(x: 1050, y: 2, name: \"output\") property(Bool) output_9c6d7b\n\n        instance(x: 1044, y: -13) ifexpression_5a7c1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 527, y: 22, name: \"getter_9f3d2e\") getter_9f3d2e = previous\n        setter(x: 1014, y: -245, name: \"setter_b8a7b5\") setter_b8a7b5 = previous\n        instance(x: 496, y: -32) for_d0c1ed root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -143, name: \"setter_b8a7b5\") setter_9f3d2e = previous\n        instance(x: -274, y: -49) getat_6c7c4f root.Std_k98ojb.List.GetAt {}\n        ifexpression_5a7c1.else -> output_9c6d7b\n        ifexpression_5a7c1.value -> output_9c6d7b\n        ifexpression_5a7c1.then -> setter_b8a7b5.execute\n        list_1e8f3a -> for_d0c1ed.items\n        for_d0c1ed.item -> ifexpression_5a7c1.gen_2\n        for_d0c1ed.index -> ifexpression_5a7c1.gen_0\n        getter_9f3d2e.value -> ifexpression_5a7c1.gen_1\n        for_d0c1ed.onItem -> ifexpression_5a7c1.execute\n        for_d0c1ed.done -> output_9c6d7b\n        for_d0c1ed.item -> setter_b8a7b5.new_value\n        list_1e8f3a -> getat_6c7c4f.list\n        0 -> getat_6c7c4f.index\n        getat_6c7c4f.itemAtIndex -> setter_9f3d2e.new_value\n    }\n\n    \n\n    instance(x: -62, y: 59) is_consecutive_5a8b5 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 1, name: \"list\") property(List) list_9e3d8f\n\n        out(x: 1237, y: -4, name: \"output\") property(Bool) output_5b2c0a\n\n        instance(x: 772, y: 11) ifexpression_1f6f7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 128, name: \"getter_8a9e5d\") getter_8a9e5d = previous\n        setter(x: 679, y: -333, name: \"setter_7f0b4c\") setter_7f0b4c = previous\n        instance(x: 321, y: -18) for_3e6a2f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -119, name: \"setter_7f0b4c\") setter_d5d9ef = previous\n        instance(x: -275, y: -33) getat_1f8e3a root.Std_k98ojb.List.GetAt {}\n        ifexpression_1f6f7c.else -> continue_2f9c8f\n        ifexpression_1f6f7c.value -> output_5b2c0a\n        ifexpression_1f6f7c.then -> setter_7f0b4c.execute\n        list_9e3d8f -> for_3e6a2f.items\n        for_3e6a2f.item -> ifexpression_1f6f7c.gen_2\n        for_3e6a2f.index -> ifexpression_1f6f7c.gen_0\n        getter_8a9e5d.value -> ifexpression_1f6f7c.gen_1\n        for_3e6a2f.onItem -> ifexpression_1f6f7c.execute\n        for_3e6a2f.done -> continue_2f9c8f\n        for_3e6a2f.item -> setter_7f0b4c.new_value\n        list_9e3d8f -> getat_1f8e3a.list\n        0 -> getat_1f8e3a.index\n        getat_1f8e3a.itemAtIndex -> setter_d5d9ef.new_value\n        execute_7b6c4c -> setter_d5d9ef.execute\n        setter_d5d9ef.continue -> for_3e6a2f.reset\n        setter_7f0b4c.continue -> for_3e6a2f.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_8c1b1c root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 0, name: \"list\") property(List) list_9a1f6e\n\n        out(x: 1007, y: -3, name: \"output\") property(Bool) output_8c2d5b\n\n        instance(x: 104, y: 4) sort_b1b0ce root.Std_k98ojb.List.Sort {}\n        instance(x: 365, y: 10) map_9e6f3a root.Std_k98ojb.Iteration.Map {}\n        instance(x: 658, y: -2) sub_7d5c1f root.Std_k98ojb.Math.Sub {}\n        instance(x: 886, y: 11) lessthanorequal_e8f0e9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1036, y: -2) and_7a4d1c root.Std_k98ojb.Logic.And {}\n        instance(x: 1173, y: -5) allmatcheswithrange_7f0e9a root.Std_k98ojb.Strings.AllMatchesWithRange {\n            pattern: \"(\\\\d+)\"\n        }\n        instance(x: 1302, y: 10) contains_1c8b6f root.Std_k98ojb.List.Contains {}\n        list_9a1f6e -> sort_b1b0ce.list\n        sort_b1b0ce.sortedList -> map_9e6f3a.items\n        func() {\n            in(x: -113, y: 42, name: \"current\") property(Number) current_8d5c4f\n\n            out(x: 511, y: 43, name: \"bool\") property(Bool) bool_7b1e9f\n\n            instance(x: 87, y: 39) sub_3a6b0f root.Std_k98ojb.Math.Sub {}\n            current_8d5c4f -> sub_3a6b0f.first\n            1 -> sub_3a6b0f.second\n            sub_3a6b0f.result -> bool_7b1e9f\n        } -> map_9e6f3a.handler\n        map_9e6f3a.output_list -> contains_1c8b6f.list\n        0 -> contains_1c8b6f.item\n        sort_b1b0ce.sortedList -> allmatcheswithrange_7f0e9a.input\n        allmatcheswithrange_7f0e9a.matches -> sub_7d5c1f.second\n        map_9e6f3a.output_list -> sub_7d5c1f.first\n        lessthanorequal_e8f0e9.result -> and_7a4d1c.left\n        0 -> lessthanorequal_e8f0e9.right\n        sub_7d5c1f.result -> lessthanorequal_e8f0e9.left\n        and_7a4d1c.result -> output_8c2d5b\n    }\n\n    \n\n    instance(x: -65, y: 177) is_consecutive_3b9c6c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 2, name: \"list\") property(List) list_1e6f0a\n\n        out(x: 1233, y: -5, name: \"output\") property(Bool) output_9b7d4c\n\n        instance(x: 774, y: 8) ifexpression_2a1c0e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 333, y: -16, name: \"getter_9d7f6c\") getter_9d7f6c = previous\n        setter(x: 680, y: -310, name: \"setter_8a4b3e\") setter_8a4b3e = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_8a4b3e\") setter_1c7f2d = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_2a1c0e.else -> continue_a96db6\n        ifexpression_2a1c0e.value -> output_5bbcd7\n        ifexpression_2a1c0e.then -> setter_8a4b3e.execute\n        list_1e6f0a -> for_d26972.items\n        for_d26972.item -> ifexpression_2a1c0e.gen_2\n        for_d26972.index -> ifexpression_2a1c0e.gen_0\n        getter_9d7f6c.value -> ifexpression_2a1c0e.gen_1\n        for_d26972.onItem -> ifexpression_2a1c0e.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_8a4b3e.new_value\n        list_1e6f0a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_1c7f2d.new_value\n        execute_90aaec -> setter_1c7f2d.execute\n        setter_1c7f2d.continue -> for_d26972.reset\n        setter_8a4b3e.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_f5e6f9 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 1, name: \"list\") property(List) list_0e9f8a\n\n        out(x: 1115, y: -4, name: \"output\") property(Bool) output_eb7c6d\n\n        instance(x: 1023, y: 13) ifexpression_1a2c8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 504, y: 41, name: \"getter_e7f6d9\") getter_e7f6d9 = previous\n        setter(x: 1012, y: -240, name: \"setter_8b4c0e\") setter_8b4c0e = previous\n        instance(x: 483, y: -19) for_1a3c9f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -120, name: \"setter_8b4c0e\") setter_7d6f5e = previous\n        instance(x: -276, y: -35) getat_2a1c9f root.Std_k98ojb.List.GetAt {}\n        ifexpression_1a2c8c.else -> continue_a96db6\n        ifexpression_1a2c8c.value -> output_eb7c6d\n        ifexpression_1a2c8c.then -> setter_8b4c0e.execute\n        list_0e9f8a -> for_1a3c9f.items\n        for_1a3c9f.item -> ifexpression_1a2c8c.gen_2\n        for_1a3c9f.index -> ifexpression_1a2c8c.gen_0\n        getter_e7f6d9.value -> ifexpression_1a2c8c.gen_1\n        for_1a3c9f.onItem -> ifexpression_1a2c8c.execute\n        for_1a3c9f.done -> continue_a96db6\n        for_1a3c9f.item -> setter_8b4c0e.new_value\n        list_0e9f8a -> getat_2a1c9f.list\n        0 -> getat_2a1c9f.index\n        getat_2a1c9f.itemAtIndex -> setter_7d6f5e.new_value\n        execute_90aaec -> setter_7d6f5e.execute\n        setter_7d6f5e.continue -> for_1a3c9f.reset\n        setter_8b4c0e.continue -> for_1a3c9f.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_f2c7f5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 4, name: \"list\") property(List) list_1a9f2e\n\n        out(x: 1065, y: 13, name: \"output\") property(Bool) output_7b8d3c\n\n        instance(x: 752, y: 12) ifexpression_4b0c8f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 139, name: \"getter_ea7d3e\") getter_ea7d3e = previous\n        setter(x: 679, y: -333, name: \"setter_8c9f6b\") setter_8c9f6b = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_8c9f6b\") setter_2a7e1d = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_4b0c8f.else -> continue_a96db6\n        ifexpression_4b0c8f.value -> output_7b8d3c\n        ifexpression_4b0c8f.then -> setter_8c9f6b.execute\n        list_1a9f2e -> for_d26972.items\n        for_d26972.item -> ifexpression_4b0c8f.gen_2\n        for_d26972.index -> ifexpression_4b0c8f.gen_0\n        getter_ea7d3e.value -> ifexpression_4b0c8f.gen_1\n        for_d26972.onItem -> ifexpression_4b0c8f.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_8c9f6b.new_value\n        list_1a9f2e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_2a7e1d.new_value\n        execute_90aaec -> setter_2a7e1d.execute\n        setter_2a7e1d.continue -> for_d26972.reset\n        setter_8c9f6b.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_f4c3e5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 3, name: \"list\") property(List) list_1e8a9f\n\n        out(x: 1267, y: -2, name: \"output\") property(Bool) output_5b0d7c\n\n        instance(x: 0, y: 0) for_4b6b3c root.Std_k98ojb.Std.For {}\n        instance(x: 1071, y: 26) lessthan_2a8f9e root.Std_k98ojb.Math.LessThan {}\n        instance(x: 1107, y: -20) if_0e4d6f root.Std_k98ojb.Std.If {}\n        instance(x: 1085, y: -119) add_1c3f2a root.Std_k98ojb.Math.Add {}\n        instance(x: 1128, y: -223) getat_9b7d7e root.Std_k98ojb.List.GetAt {}\n        instance(x: 1070, y: -326) lessthan_5f1c3f root.Std_k98ojb.Math.LessThan {}\n        list_1e8a9f -> for_4b6b3c.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_4b6b3c.onItem\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_4b6b3c.predicate\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_4b6b3c.handler\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_4b6b3c.filter\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_4b6b3c.map\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_4b6b3c.reduce\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_4b6b3c.find\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_4b6b3c.zip\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -277, y: 5, name: \"list\") property(List) list_3e8a1f\n\n        out(x: 1020, y: 2, name: \"output\") property(Bool) output_9c6b7d\n\n        instance(x: 352, y: -10) sort_4a5f6f root.Std_k98ojb.List.Sort {}\n        instance(x: 712, y: 12) for_8e1c2f root.Std_k98ojb.Std.For {}\n        instance(x: 1090, y: -11) sub_9d7c3c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1446, y: 13) lessthanorequal_f5a8ef root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1692, y: -11) if_9f7d4c root.Std_k98ojb.Std.If {}\n        list_3e8a1f -> sort_4a5f6f.list\n        sort_4a5f6f.sortedList -> for_8e1c2f.items\n        func() {\n            in(x: -114, y: 41, name: \"item\") property(Number) item_7d9b0e\n\n            out(x: 678, y: 49, name: \"bool\") property(Bool) bool_e5a6ad\n\n            instance(x: 112, y: 35) sub_1f3c4f root.Std_k98ojb.Math.Sub {}\n            item_7d9b0e -> sub_1f3c4f.first\n            for_8e1c2f.index -> sub_1f3c4f.second\n            sub_1f3c4f.result -> lessthanorequal_f5a8ef.left\n            1 -> lessthanorequal_f5a8ef.right\n            lessthanorequal_f5a8ef.result -> bool_e5a6ad\n        } -> for_8e1c2f.handler\n        func() {\n            in(x: -114, y: 41, name: \"item\") property(Number) item_7d9b0e\n\n            out(x: 678, y: 49, name: \"bool\") property(Bool) bool_e5a6ad\n\n            instance(x: 112, y: 35) sub_1f3c4f root.Std_k98ojb.Math.Sub {}\n            item_7d9b0e -> sub_1f3c4f.first\n            for_8e1c2f.index -> sub_1f3c4f.second\n            sub_1f3c4f.result -> lessthanorequal_f5a8ef.left\n            1 -> lessthanorequal_f5a8ef.right\n            lessthanorequal_f5a8ef.result -> bool_e5a6ad\n        } -> if_9f7d4c.predicate\n        for_8e1c2f.onItem -> if_9f7d4c.execute\n        if_9f7d4c.else -> output_9c6b7d\n        0 -> sub_9d7c3c.first\n        for_8e1c2f.index -> sub_9d7c3c.second\n        sub_9d7c3c.result -> if_9f7d4c.then\n        for_8e1c2f.done -> output_9c6b7d\n    }\n\n    \n\n    instance(x: -55, y: 527) is_consecutive_5a0d8f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -277, y: 2, name: \"list\") property(List) list_0f9a3e\n\n        out(x: 1067, y: 11, name: \"output\") property(Bool) output_eb8d1c\n\n        instance(x: 772, y: 12) filter_5f6c4c root.Std_k98ojb.Query.Filter {\n            where: \"it + 1 == next\"\n        }\n        instance(x: -49, y: 116) length_7e9a8d root.Std_k98ojb.List.Length {}\n        instance(x: 146, y: 119) equal_f5c0f2 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 360, y: 118) minus_1e6f4f root.Std_k98ojb.Math.Sub {}\n        list_0f9a3e -> filter_5f6c4c.list\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_8d2b1e\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_7a9f5f\n\n            instance(x: 112, y: 80) modulo_4c6c0f root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_8d2b1e -> modulo_4c6c0f.value\n            2 -> modulo_4c6c0f.divisor\n            modulo_4c6c0f.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_7a9f5f\n        } -> filter_5f6c4c.predicate\n        list_0f9a3e -> minus_1e6f4f.first\n        length_7e9a8d.length -> minus_1e6f4f.second\n        minus_1e6f4f.result -> equal_f5c0f2.left\n        filter_5f6c4c.output_list.length -> equal_f5c0f2.right\n        equal_f5c0f2.result -> output_eb8d1c\n    }\n\n    \n\n    instance(x: -67, y: 177) is_consecutive_7a9e1f root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 20, name: \"sublist\") property(List) sublist_0f8a9e\n        in(x: -292, y: -150, name: \"list\") property(List) list_1c7b5d\n\n        out(x: 1116, y: -115, name: \"output\") property(Bool) output_4e2f9c\n\n        instance(x: -93, y: -152, name: \"sublist length\") length_3a8b0c root.Std_k98ojb.List.Length {}\n        instance(x: 146, y: -153, name: \"list length\") length_1d7e4f root.Std_k98ojb.List.Length {}\n        instance(x: 362, y: -154) greaterthan_3a9a2c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 577, y: -153) sub_5f8f0d root.Std_k98ojb.Math.Sub {}\n        instance(x: 797, y: -152) greaterthan_7e6b3c root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        instance(x: 1012, y: -151) for_d9a4d8 root.Std_k98ojb.Std.For {}\n        sublist_0f8a9e -> length_3a8b0c.list\n        list_1c7b5d -> length_1d7e4f.list\n        length_3a8b0c.length -> greaterthan_3a9a2c.left\n        length_1d7e4f.length -> greaterthan_3a9a2c.right\n        greaterthan_3a9a2c.result -> sub_5f8f0d.first\n        1 -> sub_5f8f0d.second\n        sub_5f8f0d.result -> for_d9a4d8.items\n        list_1c7b5d -> for_d9a4d8.items\n        func() {\n            in(x: -193, y: 47, name: \"index\") property(Number) index_2e6b9c\n\n            out(x: 704, y: 48, name: \"output\") property(Bool) output_7f1a3d\n\n            instance(x: 225, y: 54) slice_5a0a9c root.Std_k98ojb.List.Slice {}\n            instance(x: 461, y: 53) equal_4e6a8c root.Std_k98ojb.Logic.Equal {}\n            index_2e6b9c -> slice_5a0a9c.start\n            sublist_0f8a9e.length -> slice_5a0a9c.end\n            for_d9a4d8.item -> slice_5a0a9c.list\n            slice_5a0a9c.slice -> equal_4e6a8c.left\n            sublist_0f8a9e -> equal_4e6a8c.right\n            equal_4e6a8c.result -> output_7f1a3d\n        } -> for_d9a4d8.onItem\n        func() {\n            in(x: -193, y: 47, name: \"index\") property(Number) index_2e6b9c\n\n            out(x: 704, y: 48, name: \"output\") property(Bool) output_7f1a3d\n\n            instance(x: 225, y: 54) slice_5a0a9c root.Std_k98ojb.List.Slice {}\n            instance(x: 461, y: 53) equal_4e6a8c root.Std_k98ojb.Logic.Equal {}\n            index_2e6b9c -> slice_5a0a9c.start\n            sublist_0f8a9e.length -> slice_5a0a9c.end\n            for_d9a4d8.item -> slice_5a0a9c.list\n            slice_5a0a9c.slice -> equal_4e6a8c.left\n            sublist_0f8a9e -> equal_4e6a8c.right\n            equal_4e6a8c.result -> output_7f1a3d\n        } -> for_d9a4d8.handler\n        greaterthan_7e6b3c.result -> output_4e2f9c\n        for_d9a4d8.index -> greaterthan_7e6b3c.left\n        0 -> greaterthan_7e6b3c.right\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_a1c5f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 20, name: \"sublist\") property(List) sublist_1f8a0e\n        in(x: -283, y: -160, name: \"list\") property(List) list_3c9d5b\n\n        out(x: 1007, y: -110, name: \"output\") property(Bool) output_6a2f7f\n\n        instance(x: -82, y: -161) length_1e4a8c root.Std_k98ojb.List.Length {}\n        instance(x: 186, y: -109) equal_9d3a0f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 444, y: -111) greaterthan_5a7b6f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 686, y: -110) or_4e8c54 root.Std_k98ojb.Logic.Or {}\n        instance(x: 938, y: -109) and_3d0c9c root.Std_k98ojb.Logic.And {}\n        sublist_1f8a0e -> length_1e4a8c.list\n        list_3c9d5b -> length_1e4a8c.list\n        greaterthan_5a7b6f.result -> or_4e8c54.left\n        0 -> equal_9d3a0f.right\n        sublist_1f8a0e -> equal_9d3a0f.left\n        length_1e4a8c.length -> greaterthan_5a7b6f.left\n        length_1e4a8c.length -> greaterthan_5a7b6f.right\n        or_4e8c54.result -> and_4e8c9c.left\n        equal_9d3a0f.result -> and_4e8c9c.right\n        sublist_1f8a0e -> slice_2f7f5c.list\n        0 -> slice_2f7f5c.start\n        length_1e4a8c.length -> slice_2f7f5c.end\n        list_3c9d5b -> slice_2f7f5c.list\n        instance(x: -69, y: -11) equal_6f0b9c root.Std_k98ojb.Logic.Equal {}\n        sublist_1f8a0e -> equal_6f0b9c.left\n        slice_2f7f5c.slice -> equal_6f0b9c.right\n        equal_6f0b9c.result -> and_4e8c9c.output\n        instance(x: -68, y: -111) slice_2f7f5c root.Std_k98ojb.List.Slice {}\n        and_4e8c9c.result -> output_6a2f7f\n    }\n\n    \n\n    instance(x: 100, y: 30) is_sublist_1d0d3f root.main.is_sublist {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 15, name: \"sublist\") property(List) sublist_3a9d8f\n        in(x: -303, y: -205, name: \"list\") property(List) list_ec88cd\n\n        out(x: 1269, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: -0, y: -121, name: \"previous\") setter_38e107 = previous\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 679, y: -313, name: \"previous\") setter_9d4f1c = previous\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        sublist_3a9d8f -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        for_d26972.reset -> setter_38e107.execute\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 5, name: \"sublist\") property(List) sublist_3f9a1e\n        in(x: -295, y: -155, name: \"list\") property(List) list_7c8d6b\n\n        out(x: 1210, y: -120, name: \"output\") property(Bool) output_e5c4ee\n\n        instance(x: -93, y: -150, name: \"length of sublist\") length_9e1a3f root.Std_k98ojb.List.Length {}\n        instance(x: 146, y: -149, name: \"length of list\") length_8d7b5c root.Std_k98ojb.List.Length {}\n        instance(x: 365, y: -148) greaterthan_or_equal_9a1f6e root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        instance(x: 581, y: -147) sub_2a8d3c root.Std_k98ojb.Math.Sub {}\n        instance(x: 801, y: -146) generate_range_7c5b0f root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1031, y: -145) slice_9e6b2a root.Std_k98ojb.List.Slice {}\n        instance(x: 1253, y: -144) contains_8d7b9c root.Std_k98ojb.List.Contains {}\n        sublist_3f9a1e -> length_9e1a3f.list\n        list_7c8d6b -> length_8d7b5c.list\n        length_9e1a3f.length -> greaterthan_or_equal_9a1f6e.left\n        length_8d7b5c.length -> greaterthan_or_equal_9a1f6e.right\n        greaterthan_or_equal_9a1f6e.result -> sub_2a8d3c.first\n        0 -> sub_2a8d3c.second\n        sub_2a8d3c.result -> generate_range_7c5b0f.to\n        0 -> generate_range_7c5b0f.from\n        list_7c8d6b -> slice_9e6b2a.list\n        generate_range_7c5b0f.range -> slice_9e6b2a.start\n        sublist_3f9a1e -> contains_8d7b9c.item\n        slice_9e6b2a.slice -> contains_8d7b9c.list\n        contains_8d7b9c.is_contained -> output_e5c4ee\n    }\n\n    \n\n    instance(x: -91, y: 15) is_sublist_f3f0f1 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 15, name: \"sublist\") property(List) sublist_1f9a0e\n        in(x: -280, y: -160, name: \"list\") property(List) list_7c6b3d\n\n        out(x: 1065, y: -121, name: \"output\") property(Bool) output_e2f8ec\n\n        instance(x: -82, y: -157, name: \"is sublist\") filter_9a0e4f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 198, y: -120) length_1d3c5f root.Std_k98ojb.List.Length {}\n        instance(x: 410, y: -121) sub_7e8b2f root.Std_k98ojb.Math.Sub {}\n        instance(x: 622, y: -122) greaterthan_c9a6f4 root.Std_k98ojb.Math.GreaterThan {}\n        sublist_1f9a0e -> filter_9a0e4f.items\n        func() {\n            in(x: -232, y: -53, name: \"item\") property(List) item_7d5c8\n\n            out(x: 245, y: -54, name: \"\") property(Bool) _6b1f3\n\n            instance(x: -9, y: -52) contains_2e4a8 root.Std_k98ojb.List.Contains {}\n            list_7c6b3d -> contains_2e4a8.list\n            item_7d5c8 -> contains_2e4a8.item\n            contains_2e4a8.is_contained -> _6b1f3\n        } -> filter_9a0e4f.handler\n        list_7c6b3d -> length_1d3c5f.list\n        sublist_1f9a0e -> length_1d3c5f.list\n        sub_7e8b2f.result -> greaterthan_c9a6f4.left\n        length_1d3c5f.length -> sub_7e8b2f.first\n        filter_9a0e4f.output_list -> sub_7e8b2f.second\n        greaterthan_c9a6f4.result -> output_e2f8ec\n    }\n\n    \n\n    instance(x: 93, y: -122) is_sublist_1d3c5f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 15, name: \"sublist\") property(List) sublist_9f1a8e\n        in(x: -300, y: -150, name: \"list\") property(List) list_a5c7b4\n\n        out(x: 1110, y: -85, name: \"output\") property(Bool) output_6d3f2d\n\n        instance(x: -50, y: -144, name: \"is sublist\") filter_1e8a9c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 360, y: -84) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        func() {\n            in(x: -192, y: -25, name: \"current\") property(List) current_1e7f8a\n\n            out(x: 705, y: -10, name: \"output\") property(Bool) output_9c0d5b\n\n            instance(x: 226, y: -23) contains_32727d root.Std_k98ojb.List.Contains {}\n            sublist_9f1a8e -> contains_32727d.list\n            current_1e7f8a -> contains_32727d.item\n            contains_32727d.is_contained -> output_9c0d5b\n        } -> filter_1e8a9c.handler\n        list_a5c7b4 -> filter_1e8a9c.items\n        func() {\n            in(x: -192, y: 79, name: \"current\") property(List) current_6f3d7e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_eb1c5a\n\n            instance(x: 226, y: 56) length_8166b0 root.Std_k98ojb.List.Length {}\n            sublist_9f1a8e -> length_8166b0.list\n            length_8166b0.length -> current_6f3d7e\n            output_eb1c5a -> output_9c0d5b\n        } -> filter_1e8a9c.predicate\n        func() {\n            in(x: -192, y: 79, name: \"current\") property(List) current_6f3d7e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_eb1c5a\n\n            instance(x: 226, y: 56) length_8166b0 root.Std_k98ojb.List.Length {}\n            sublist_9f1a8e -> length_8166b0.list\n            length_8166b0.length -> current_6f3d7e\n        } -> equal_f89569.left\n        filter_1e8a9c.output_list -> equal_f89569.right\n        equal_f89569.result -> output_6d3f2d\n    }\n\n    \n\n    instance(x: -290, y: 5) is_sublist_4b0f0f root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 35, name: \"sublist\") property(List) sublist_1d0f2a\n        in(x: -283, y: -120, name: \"list\") property(List) list_5e7b9c\n\n        out(x: 1043, y: -55, name: \"output\") property(Bool) output_e6c4ba\n\n        instance(x: -82, y: -115, name: \"find sublist in list\") find_f1d8a0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -193, y: 3, name: \"current\") property(List) current_9e7f5c\n\n            out(x: 700, y: 10, name: \"\") property(Bool) _1d0a8d2\n\n            instance(x: 115, y: -4) contains_6b8c3f root.Std_k98ojb.List.Contains {}\n            current_9e7f5c -> contains_6b8c3f.list\n            sublist_1d0f2a -> contains_6b8c3f.item\n            contains_6b8c3f.is_contained -> _1d0a8d2\n        } -> find_f1d8a0.predicate\n        list_5e7b9c -> find_f1d8a0.items\n        find_f1d8a0.item -> output_e6c4ba\n    }\n\n    \n\n    instance(x: -83, y: 55) is_sublist_2f1d9f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 30, name: \"sublist\") property(List) sublist_1f8d9a\n        in(x: -304, y: -150, name: \"list\") property(List) list_7e6c4b\n\n        out(x: 1060, y: -109, name: \"output\") property(Bool) output_3f5a8d\n\n        instance(x: -92, y: -108) contains_9e1f0f root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -192, y: 79, name: \"current\") property(List) current_7c6c2f\n            in(x: -191, y: -26, name: \"sublist\") property(List) sublist_1f8d9a\n\n            out(x: 698, y: 49, name: \"\") property(Bool) _0b3e5a\n\n            instance(x: 112, y: 44) filter_7c6a8c root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -192, y: 79, name: \"current\") property(Number) current_1d0f3e\n                in(x: -191, y: -26, name: \"sublist\") property(List) sublist_1f8d9a\n\n                out(x: 698, y: 49, name: \"\") property(Bool) _7b2c4a\n\n                instance(x: 112, y: 44) contains_3e5f6f root.Std_k98ojb.List.Contains {}\n                sublist_1f8d9a -> contains_3e5f6f.list\n                current_1d0f3e -> contains_3e5f6f.item\n                contains_3e5f6f.is_contained -> _7b2c4a\n            } -> filter_7c6a8c.handler\n            sublist_1f8d9a -> filter_7c6a8c.items\n            func() {\n                in(x: -192, y: 79, name: \"current\") property(List) current_7c6c2f\n\n                out(x: 698, y: 49, name: \"\") property(Number) _0b3e5a\n\n                instance(x: 112, y: 44) length_9d8b1f root.Std_k98ojb.List.Length {}\n                filter_7c6a8c.output_list -> length_9d8b1f.list\n                length_9d8b1f.length -> _0b3e5a\n            } -> current_7c6c2f.execute\n            func() {\n                in(x: -192, y: 79, name: \"current\") property(List) current_7c6c2f\n\n                out(x: 698, y: 49, name: \"\") property(Bool) _0b3e5a\n\n                instance(x: 112, y: 44) length_9d8b1f root.Std_k98ojb.List.Length {}\n                sublist_1f8d9a -> length_9d8b1f.list\n                length_9d8b1f.length -> _0b3e5a\n            } -> sublist_1f8d9a.execute\n            filter_7c6a8c.output_list -> current_7c6c2f\n            sublist_1f8d9a -> sublist_1f8d9a.execute\n        } -> contains_9e1f0f.handler\n        list_7e6c4b -> contains_9e1f0f.list\n        contains_9e1f0f.is_contained -> output_3f5a8d\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_a9b7c2 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 15, name: \"sublist\") property(List) sublist_2a8d6f\n        in(x: -279, y: -160, name: \"list\") property(List) list_1b9e4c\n\n        out(x: 1000, y: -120, name: \"output\") property(Bool) output_7c3f5f\n\n        instance(x: -88, y: -161, name: \"is sublist\") filter_8d2a6c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 224, y: -120) length_9e1f0c root.Std_k98ojb.List.Length {}\n        instance(x: 438, y: -119) sub_3a7a4f root.Std_k98ojb.List.Slice {}\n        instance(x: 652, y: -118) equal_f8d6d2 root.Std_k98ojb.Logic.Equal {}\n        sublist_2a8d6f -> filter_8d2a6c.items\n        func() {\n            in(x: -230, y: -56, name: \"item\") property(List) item_1e7e3\n\n            out(x: 242, y: -45, name: \"\") property(Bool) _0b4f5c\n\n            instance(x: 80, y: -41) length_8d9a2 root.Std_k98ojb.List.Length {}\n            instance(x: 284, y: -40) sub_1e7f1f root.Std_k98ojb.Math.Sub {}\n            item_1e7e3 -> length_8d9a2.list\n            sublist_2a8d6f -> length_8d9a2.list\n            length_8d9a2.length -> sub_1e7f1f.first\n            length_8d9a2.length -> sub_1e7f1f.second\n            0 -> sub_1e7f1f.right\n            sub_1e7f1f.result -> _0b4f5c\n        } -> filter_8d2a6c.handler\n        list_1b9e4c -> sub_3a7a4f.list\n        func() {\n            in(x: -230, y: -56, name: \"item\") property(List) item_1e7e3\n\n            out(x: 242, y: -45, name: \"\") property(Number) _0b4f5c\n\n            instance(x: 80, y: -41) length_8d9a2 root.Std_k98ojb.List.Length {}\n            sublist_2a8d6f -> length_8d9a2.list\n            item_1e7e3 -> length_8d9a2.list\n            length_8d9a2.length -> _0b4f5c\n        } -> sub_3a7a4f.start\n        filter_8d2a6c.result -> sub_3a7a4f.end\n        sub_3a7a4f.slice -> equal_f8d6d2.left\n        sublist_2a8d6f -> equal_f8d6d2.right\n        equal_f8d6d2.result -> output_7c3f5f\n    }\n\n    \n\n    instance(x: -87, y: 16) is_sublist_1e9b4 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 10, name: \"sublist\") property(List) sublist_0f9a1e\n        in(x: -287, y: -166, name: \"list\") property(List) list_2c7d3b\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        sublist_0f9a1e -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_2c7d3b -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        sublist_0f9a1e -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_2c3d4 root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -280, y: 2, name: \"list\") property(List) list_3a1f9e\n        in(x: -281, y: -224, name: \"execute\") trigger() execute_7b8c0d\n\n        out(x: 1225, y: 11, name: \"continue\") trigger() continue_4f6c1d\n        out(x: 1219, y: 146, name: \"output\") property(Number) output_ea3e1f\n\n        instance(x: -0, y: -120, name: \"previous\") setter_7b8c0d root.Std_k98ojb.List.SetAt {\n            list: list\n            index: 0\n            value: 1\n        }\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: -275, y: -35, name: \"getter_ce2a48\") getter_ce2a48 = list\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_4f6c1d\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3a1f9e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_4f6c1d\n        for_d26972.item -> setter_9d4f1c.new_value\n        getter_ce2a48.value -> getat_ce2a48.list\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_7b8c0d.value\n        execute_7b8c0d -> setter_7b8c0d.execute\n        setter_7b8c0d.continue -> for_d26972.reset\n        ifexpression_875761.value -> output_ea3e1f\n        getter_ce2a48.value -> list\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_7b8c0d root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 1, name: \"list\") property(List) list_9e3f6a\n        in(x: -281, y: -223, name: \"execute\") trigger() execute_5b8d4c\n\n        out(x: 1020, y: -224, name: \"continue\") trigger() continue_1b7c8f\n        out(x: 1012, y: 74, name: \"output\") property(Number) output_9a6e3e\n\n        instance(x: 0, y: 0) for_5e4d0a root.Std_k98ojb.Std.For {}\n        getter(x: -150, y: 111, name: \"getter_7c1f8c\") getter_7c1f8c = index\n        setter(x: 755, y: -153, name: \"setter_5e4d0a\") setter_5e4d0a = index\n        instance(x: 551, y: -107) ifexpression_6b9c3e root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        list_9e3f6a -> for_5e4d0a.items\n        execute_5b8d4c -> setter_5e4d0a.execute\n        1 -> setter_5e4d0a.new_value\n        getter_7c1f8c.value -> output_9a6e3e\n        for_5e4d0a.done -> continue_1b7c8f\n        setter_5e4d0a.continue -> for_5e4d0a.reset\n        for_5e4d0a.onItem -> ifexpression_6b9c3e.execute\n        for_5e4d0a.index -> ifexpression_6b9c3e.gen_0\n        for_5e4d0a.item -> ifexpression_6b9c3e.gen_1\n        ifexpression_6b9c3e.then -> setter_5e4d0a.execute\n        ifexpression_6b9c3e.else -> for_5e4d0a.next\n        setter_5e4d0a.continue -> continue_1b7c8f\n    }\n\n    \n\n    instance(x: 776, y: -11) find_missing_2f9b6f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -279, y: 1, name: \"list\") property(List) list_3e8b9f\n        in(x: -282, y: -240, name: \"execute\") trigger() execute_5a7d0c\n\n        out(x: 1056, y: -243, name: \"continue\") trigger() continue_4f2c1f\n        out(x: 1048, y: 18, name: \"output\") property(Number) output_eb9e9e\n\n        instance(x: 0, y: 0) for_5d3a6f root.Std_k98ojb.Std.For {}\n        getter(x: -2, y: 1, name: \"getter_8c7c4e\") getter_8c7c4e = index\n        setter(x: 350, y: -241, name: \"setter_e5d3a9\") setter_e5d3a9 = index\n        instance(x: 0, y: 0) ifexpression_1f2b6e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 333, y: 20, name: \"getter_e5c9a7\") getter_e5c9a7 = previous\n        instance(x: -276, y: -35) getat_3f2b8e root.Std_k98ojb.List.GetAt {}\n        ifexpression_1f2b6e.else -> continue_4f2c1f\n        ifexpression_1f2b6e.then -> setter_e5d3a9.execute\n        list_3e8b9f -> for_5d3a6f.items\n        execute_5a7d0c -> getter_8c7c4e.getter\n        0 -> getat_3f2b8e.index\n        getat_3f2b8e.itemAtIndex -> setter_e5d3a9.new_value\n        for_5d3a6f.onItem -> ifexpression_1f2b6e.execute\n        getter_e5c9a7.value -> ifexpression_1f2b6e.gen_1\n        for_5d3a6f.index -> ifexpression_1f2b6e.gen_0\n        for_5d3a6f.item -> ifexpression_1f2b6e.gen_2\n        getter_8c7c4e.value -> output_eb9e9e\n        setter_e5d3a9.continue -> continue_4f2c1f\n        for_5d3a6f.done -> continue_4f2c1f\n        list_3e8b9f -> getat_3f2b8e.list\n        getter_8c7c4e.getter -> for_5d3a6f.reset\n        setter_e5d3a9.continue -> for_5d3a6f.next\n    }\n\n    \n\n    instance(x: -35, y: 126) find_missing_2b1b7c root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_1a3f8e\n        in(x: -356, y: -224, name: \"execute\") trigger() execute_9b7d6c\n\n        out(x: 1194, y: -225, name: \"continue\") trigger() continue_e5a0aa\n        out(x: 1183, y: 209, name: \"output\") property(Number) output_8e2f1e\n\n        instance(x: 0, y: 0) for_9b7d6c root.Std_k98ojb.Std.For {}\n        getter(x: 502, y: 166, name: \"getter_4a5d3f\") getter_4a5d3f = index\n        setter(x: 780, y: -125, name: \"setter_1e8c9f\") setter_1e8c9f = index\n        instance(x: 465, y: 5) ifexpression_eb7b2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        list_1a3f8e -> for_9b7d6c.items\n        execute_9b7d6c -> setter_1e8c9f.execute\n        0 -> setter_1e8c9f.new_value\n        getter_4a5d3f.value -> output_8e2f1e\n        for_9b7d6c.done -> continue_e5a0aa\n        setter_1e8c9f.continue -> for_9b7d6c.reset\n        for_9b7d6c.onItem -> ifexpression_eb7b2c.execute\n        for_9b7d6c.index -> ifexpression_eb7b2c.gen_0\n        for_9b7d6c.item -> ifexpression_eb7b2c.gen_1\n        ifexpression_eb7b2c.then -> setter_1e8c9f.execute\n        for_9b7d6c.index -> setter_1e8c9f.new_value\n        ifexpression_eb7b2c.else -> for_9b7d6c.next\n        setter_1e8c9f.continue -> for_9b7d6c.next\n    }\n\n    \n\n    instance(x: -206, y: 10) find_missing_5a4f0c root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -465, y: 2, name: \"list\") property(List) list_9e3f5a\n        in(x: -470, y: -232, name: \"execute\") trigger() execute_1b8c7d\n\n        out(x: 1226, y: -228, name: \"continue\") trigger() continue_e4f2ec\n        out(x: 1219, y: 148, name: \"output\") property(Number) output_3e0a8e\n\n        instance(x: 753, y: 93) ifexpression_7b5c1d root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_7b5c1d.else -> continue_e4f2ec\n        ifexpression_7b5c1d.then -> setter_9d4f1c.execute\n        list_9e3f5a -> for_d26972.items\n        for_d26972.item -> ifexpression_7b5c1d.gen_2\n        for_d26972.index -> ifexpression_7b5c1d.gen_0\n        getter_b280eb.value -> ifexpression_7b5c1d.gen_1\n        ifexpression_7b5c1d.then -> setter_9d4f1c.execute\n        ifexpression_7b5c1d.else -> continue_e4f2ec\n        for_d26972.onItem -> ifexpression_7b5c1d.execute\n        for_d26972.done -> continue_e4f2ec\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_9e3f5a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_1b8c7d -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        ifexpression_7b5c1d.value -> output_3e0a8e\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_2a6c4f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 1, name: \"list\") property(List) list_2e9f8d\n        in(x: -284, y: -224, name: \"execute\") trigger() execute_5b7c6a\n\n        out(x: 1014, y: -221, name: \"continue\") trigger() continue_e3b1ef\n        out(x: 1009, y: 148, name: \"output\") property(Number) output_2f8e8d\n\n        instance(x: 0, y: 0) for_7c6a5d root.Std_k98ojb.Std.For {}\n        getter(x: -1, y: 166, name: \"getter_9f3f1f\") getter_9f3f1f = index\n        setter(x: 755, y: -158, name: \"setter_7e2b42\") setter_7e2b42 = index\n        instance(x: 461, y: -106) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 668, y: -76) if_7c284f root.Std_k98ojb.Std.If {}\n        getter_9f3f1f.value -> output_2f8e8d\n        list_2e9f8d -> for_7c6a5d.items\n        execute_5b7c6a -> for_7c6a5d.reset\n        for_7c6a5d.done -> continue_e3b1ef\n        if_7c284f.else -> for_7c6a5d.next\n        for_7c6a5d.onItem -> equal_aabb6e.execute\n        for_7c6a5d.item -> equal_aabb6e.right\n        0 -> equal_aabb6e.left\n        equal_aabb6e.result -> if_7c284f.predicate\n        if_7c284f.then -> setter_7e2b42.execute\n        for_7c6a5d.index -> setter_7e2b42.new_value\n        1 -> setter_7e2b42.new_value\n        setter_7e2b42.continue -> continue_e3b1ef\n    }\n\n    \n\n    instance(x: -9, y: 127) find_missing_8f5c6d root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 2, name: \"list\") property(List) list_9e8f5a\n        in(x: -281, y: -239, name: \"execute\") trigger() execute_7c1d6b\n\n        out(x: 1183, y: 29, name: \"continue\") trigger() continue_e2a0aa\n        out(x: 1084, y: 210, name: \"output\") property(Number) output_5e8f1e\n\n        instance(x: -11, y: -119, name: \"index\") expression_6b7c9d root.Std_k98ojb.Math.Expression {\n            expression: \"i + 1\"\n        }\n        getter(x: 0, y: 0, name: \"getter_e5f8a2\") getter_e5f8a2 = index\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 679, y: -313) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[index] != i + 1\"\n        }\n        setter(x: 0, y: 0, name: \"setter_6a6081\") setter_6a6081 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.then -> continue_e2a0aa\n        getter_e5f8a2.value -> output_5e8f1e\n        for_d26972.done -> continue_e2a0aa\n        list_9e8f5a -> for_d26972.items\n        execute_7c1d6b -> setter_6a6081.execute\n        0 -> setter_6a6081.new_value\n        -1 -> expression_6b7c9d.gen_0\n        for_d26972.index -> expression_6b7c9d.gen_1\n        expression_6b7c9d.result -> index\n        ifexpression_875761.else -> setter_9d4f1c.execute\n        list_9e8f5a -> getat_ce2a48.list\n        getter_e5f8a2.value -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> ifexpression_875761.gen_0\n        for_d26972.onItem -> ifexpression_875761.execute\n        setter_6a6081.continue -> for_d26972.reset\n        setter_9d4f1c.new_value -> index\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_7b5a0e root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -279, y: 1, name: \"list\") property(List) list_9e3b8f\n        in(x: -280, y: -223, name: \"execute\") trigger() execute_7a2c5d\n\n        out(x: 1220, y: -221, name: \"continue\") trigger() continue_6a4a9c\n        out(x: 1211, y: 127, name: \"output\") property(Number) output_e8f3e9\n\n        instance(x: 0, y: 0) for_2b7d3f root.Std_k98ojb.Std.For {}\n        getter(x: -145, y: 137, name: \"getter_5c1a6d\") getter_5c1a6d = index\n        setter(x: 0, y: 0, name: \"setter_7e2b42\") setter_7e2b42 = index\n        instance(x: -4, y: -120) ifexpression_8f3b8e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 338, y: 163, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 682, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 320, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_8f3b8e.else -> continue_6a4a9c\n        ifexpression_8f3b8e.then -> setter_7e2b42.execute\n        list_9e3b8f -> for_2b7d3f.items\n        for_2b7d3f.item -> ifexpression_8f3b8e.gen_2\n        for_2b7d3f.index -> ifexpression_8f3b8e.gen_0\n        getter_b280eb.value -> ifexpression_8f3b8e.gen_1\n        for_2b7d3f.onItem -> ifexpression_8f3b8e.execute\n        for_2b7d3f.done -> continue_6a4a9c\n        for_2b7d3f.item -> setter_7e2b42.new_value\n        list_9e3b8f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        execute_7a2c5d -> setter_9d4f1c.execute\n        getter_5c1a6d.value -> output_e8f3e9\n        setter_9d4f1c.continue -> for_2b7d3f.reset\n        setter_7e2b42.continue -> for_2b7d3f.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_5a8b6f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 2, name: \"list\") property(List) list_1a8b5e\n        out(x: 592, y: 29, name: \"output\") property(Number) output_7c6d9f\n\n        instance(x: 0, y: 0) for_3a4b2f root.Std_k98ojb.Std.For {}\n        getter(x: -1, y: 0, name: \"getter_5e8c6d\") getter_5e8c6d = index\n        setter(x: 0, y: 0, name: \"setter_3a4b2f\") setter_3a4b2f = index\n        instance(x: -1, y: 0) ifexpression_9e7b5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == item\"\n        }\n        getter(x: 0, y: 0, name: \"getter_3a4b2f\") getter_3a4b2f = index\n        instance(x: -1, y: 0) if_5e8c6d root.Std_k98ojb.Std.If {}\n        list_1a8b5e -> for_3a4b2f.items\n        for_3a4b2f.onItem -> ifexpression_9e7b5f.execute\n        getter_5e8c6d.value -> ifexpression_9e7b5f.gen_0\n        for_3a4b2f.item -> ifexpression_9e7b5f.gen_1\n        ifexpression_9e7b5f.then -> setter_3a4b2f.execute\n        getter_3a4b2f.value -> if_5e8c6d.predicate\n        for_3a4b2f.index -> setter_3a4b2f.new_value\n        ifexpression_9e7b5f.else -> if_5e8c6d.execute\n        if_5e8c6d.then -> output_7c6d9f\n        for_3a4b2f.done -> output_7c6d9f\n    }\n\n    \n\n    instance(x: -54, y: 127) find_missing_1c8f0e root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_2f1b8e\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index != elem\"\n            }\n            getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = index\n            setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = index\n            instance(x: 310, y: 35) add_7f0e6a root.Std_k98ojb.Math.Add {}\n            ifexpression_e38995.then -> add_7f0e6a.execute\n            getter_9cceb3.value -> add_7f0e6a.first\n            1 -> add_7f0e6a.second\n            add_7f0e6a.result -> setter_1cedb2.new_value\n            ifexpression_e38995.else -> setter_1cedb2.execute\n            index -> ifexpression_e38995.gen_0\n            elem_9f6850 -> ifexpression_e38995.gen_1\n            setter_1cedb2.continue -> find_6d05b0.predicate\n            bool_af09a7 -> find_6d05b0.predicate\n        } -> find_6d05b0.predicate\n        list_2f1b8e -> find_6d05b0.items\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -200, y: 2, name: \"input\") property(String) input_1d0f9e\n\n        out(x: 500, y: 78, name: \"output\") property(String) output_5c7a8b\n\n        instance(x: 100, y: 76) replace_f3e6b2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: -19) regex_firstmatch_9d0f4f root.Std_k98ojb.Strings.Regex.FirstMatch {\n            pattern: \"[ ,.]\"\n        }\n        input_1d0f9e -> replace_f3e6b2.input\n        \":\" -> replace_f3e6b2.replace\n        regex_firstmatch_9d0f4f.match -> replace_f3e6b2.search\n        input_1d0f9e -> regex_firstmatch_9d0f4f.input\n        replace_f3e6b2.output -> output_5c7a8b\n    }\n\n    \n\n    instance(x: -138, y: 43) replace_spaces_commas_dots_9e7f2f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -227, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 656, y: -3, name: \"output\") property(String) output_1\n\n        instance(x: 94, y: -19) replace_7a8c5e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 294, y: 18) template_9f0d4f root.Std_k98ojb.Strings.Template {\n            template: \"{{input}}\\n\"\n        }\n        input_0 -> template_9f0d4f.input\n        replace_7a8c5e.search -> template_9f0d4f.replace\n        \"[ ,.]\" -> replace_7a8c5e.search\n        \":\" -> replace_7a8c5e.replace\n        input_0 -> replace_7a8c5e.input\n        template_9f0d4f.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_2b3d1e root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -156, y: 0, name: \"input\") property(String) input_1a9f6e\n\n        out(x: 500, y: -2, name: \"output\") property(String) output_5c7d4b\n\n        instance(x: 0, y: 0) replace_8e3c0f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_1a9b6c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_5d4a2c root.Std_k98ojb.Strings.Replace {}\n        input_1a9f6e -> replace_8e3c0f.input\n        \" \" -> replace_8e3c0f.search\n        \":\" -> replace_8e3c0f.replace\n        replace_8e3c0f.output -> replace_1a9b6c.input\n        \",\" -> replace_1a9b6c.search\n        \":\" -> replace_1a9b6c.replace\n        replace_1a9b6c.output -> replace_5d4a2c.input\n        \".\" -> replace_5d4a2c.search\n        \":\" -> replace_5d4a2c.replace\n        replace_5d4a2c.output -> output_5c7d4b\n    }\n\n    \n\n    instance(x: -89, y: 32, name: \"replace_spaces_commas_dots\") replace_spaces_commas_dots_1e9f6e root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -122, y: 0, name: \"input\") property(String) input_9b1d4f\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7e8a5c\n\n        instance(x: 94, y: -22) replace_6e1c3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 9) template_1d4f2f root.Std_k98ojb.Strings.Template {\n            template: \"{{input}}.replace(/[\\s,.]/g, ':')\"\n        }\n        input_9b1d4f -> template_1d4f2f.input\n        replace_6e1c3c.search -> template_1d4f2f.gen_0\n        \":\\\" -> replace_6e1c3c.replace\n        \" \\\",.\\\"\" -> replace_6e1c3c.search\n        template_1d4f2f.output -> replace_6e1c3c.input\n        replace_6e1c3c.output -> output_7e8a5c\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_0b9b1c root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -199, y: 2, name: \"input\") property(String) input_0\n        out(x: 504, y: 1, name: \"output\") property(String) output_0\n\n        instance(x: 92, y: -6) regex_firstmatch_f9f3d8 root.Std_k98ojb.Strings.Regex.FirstMatch {\n            pattern: \"[ ,.]\"\n        }\n        instance(x: 92, y: 59) replace_7e1c4a root.Std_k98ojb.Strings.Replace {}\n        input_0 -> regex_firstmatch_f9f3d8.input\n        \" : \" -> replace_7e1c4a.replace\n        input_0 -> replace_7e1c4a.input\n        regex_firstmatch_f9f3d8.match -> replace_7e1c4a.search\n        replace_7e1c4a.output -> output_0\n    }\n\n    \n\n    instance(x: -139, y: 29) replace_2b5b1f root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -199, y: 18, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 94, y: -19) replace_3a7b5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 9) template_4e8d1f root.Std_k98ojb.Strings.Template {\n            template: \"{{input}}.replace(/[\\s,.]/g, ':')\"\n        }\n        input_0 -> template_4e8d1f.input\n        template_4e8d1f.output -> replace_3a7b5c.search\n        \":\" -> replace_3a7b5c.replace\n        input_0 -> replace_3a7b5c.input\n        replace_3a7b5c.output -> output_1\n    }\n\n    \n\n    instance(x: -138, y: 45) replace_spaces_commas_dots_9e4f8d root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -200, y: 0, name: \"input\") property(String) input_8f1b9e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5c7d6a\n\n        instance(x: 0, y: 1) replace_d3b4b8 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) template_9f8e7c root.Std_k98ojb.Strings.Template {\n            template: \"{{input}}\\n\"\n        }\n        instance(x: 530, y: -2) concat_5a1d4c root.Std_k98ojb.Strings.Concat {}\n        replace_d3b4b8.search -> concat_5a1d4c.left\n        \":\" -> replace_d3b4b8.replace\n        \",. \" -> replace_d3b4b8.search\n        input_8f1b9e -> replace_d3b4b8.input\n        template_9f8e7c.output -> concat_5a1d4c.right\n        replace_d3b4b8.output -> template_9f8e7c.input\n        concat_5a1d4c.result -> output_5c7d6a\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_spaces_commas_dots_2a0c4f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -227, y: 0, name: \"input\") property(String) input_1f2b9e\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7c8a6d\n\n        instance(x: 94, y: -105) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 221, y: -48, name: \"replace_spaces_commas_dots\") replace_06d2e5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) regex_firstmatch_4aeea6 root.Std_k98ojb.Strings.Regex.FirstMatch {\n            pattern: \"[ ,.]\"\n        }\n        list_instance(x: 92, y: -22) data_instance_d5c1e7 = [\":\", \" \", \",\", \".\"]\n        instance(x: 0, y: 0) join_9a8d4f root.Std_k98ojb.Strings.Join {}\n        input_1f2b9e -> map_f2330d.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(String) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(String) _7dd980\n\n            instance(x: 92, y: -22) ifexpression_584bfd root.Std_k98ojb.Std.IfExpression {\n                expression: \"x == match\"\n            }\n            x_8ee839 -> regex_firstmatch_4aeea6.input\n            regex_firstmatch_4aeea6.match -> ifexpression_584bfd.gen_0\n            replace_06d2e5.search -> ifexpression_584bfd.gen_1\n            data_instance_d5c1e7.first -> join_9a8d4f.separator\n            data_instance_d5c1e7 -> join_9a8d4f.string_list\n            ifexpression_584bfd.then -> replace_06d2e5.replace\n            ifexpression_584bfd.else -> _7dd980\n            replace_06d2e5.result -> _7dd980\n        } -> map_f2330d.handler\n        map_f2330d.output_list -> output_7c8a6d\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_9b3f4e root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -227, y: 44, name: \"string\") property(String) string_8e3a1f\n\n        out(x: 744, y: 146, name: \"output\") property(String) output_c4a1a8\n\n        instance(x: 52, y: 47, name: \"replace\") replace_7b5d2c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 69, y: 185, name: \"regex\") regex_9e6f0f root.Std_k98ojb.Strings.Regex.FirstMatch {\n            pattern: \"[ ,.]\"\n        }\n        string_8e3a1f -> replace_7b5d2c.input\n        \":\" -> replace_7b5d2c.replace\n        string_8e3a1f -> regex_9e6f0f.input\n        replace_7b5d2c.output -> output_c4a1a8\n    }\n\n    \n\n    instance(x: -280, y: 136) replace_7f1d9f root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -172, y: 0, name: \"input\") property(String) input_9a1f6e\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_8b7d3c\n\n        instance(x: 0, y: 0) replace_all_f4f5f4 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_all_9a6e2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_all_1d8c3f root.Std_k98ojb.Strings.Replace {}\n        input_9a1f6e -> replace_all_f4f5f4.input\n        \" \" -> replace_all_f4f5f4.search\n        \":\" -> replace_all_f4f5f4.replace\n        replace_all_f4f5f4.output -> replace_all_9a6e2f.input\n        \",\" -> replace_all_9a6e2f.search\n        \":\" -> replace_all_9a6e2f.replace\n        replace_all_9a6e2f.output -> replace_all_1d8c3f.input\n        \".\" -> replace_all_1d8c3f.search\n        \":\" -> replace_all_1d8c3f.replace\n        replace_all_1d8c3f.output -> output_8b7d3c\n    }\n\n    \n\n    instance(x: -139, y: 30) replace_b5a6d2 root.main.replace {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same_char {\n        in(x: -283, y: 1, name: \"string\") property(String) string_3f8a9e\n\n        out(x: 593, y: 0, name: \"output\") property(Bool) output_5c7d6b\n\n        instance(x: 0, y: 2) characters_d4e1ee root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -1) contains_3f9a8c root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) length_7d6f2f root.Std_k98ojb.List.Length {}\n        characters_d4e1ee.characters -> contains_3f9a8c.list\n        string_3f8a9e -> characters_d4e1ee.input\n        characters_d4e1ee.characters -> length_7d6f2f.list\n        0 -> contains_3f9a8c.item\n        length_7d6f2f.length -> contains_3f9a8c.index\n        contains_3f9a8c.is_contained -> output_5c7d6b\n    }\n\n    \n\n    instance(x: -55, y: 529) check_same_char_4e1c6f root.main.check_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same_char {\n        in(x: -286, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 553, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) allmatcheswithrange_eb7f8c root.Std_k98ojb.Strings.AllMatchesWithRange {\n            pattern: \"(.)\\\\1*\"\n        }\n        instance(x: 272, y: -2) length_3e4a5d root.Std_k98ojb.List.Length {}\n        instance(x: 490, y: 0) equal_7f8c6f root.Std_k98ojb.Logic.Equal {}\n        allmatcheswithrange_eb7f8c.matches -> length_3e4a5d.list\n        string_1 -> allmatcheswithrange_eb7f8c.input\n        length_3e4a5d.length -> equal_7f8c6f.left\n        1 -> equal_7f8c6f.right\n        equal_7f8c6f.result -> output_1\n    }\n\n    \n\n    instance(x: -17, y: 10) check_same_char_3b9e0a root.main.check_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same_char {\n        in(x: -290, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 560, y: 0, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_3a2c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 240, y: -1) allmatch_5e9d6f root.Std_k98ojb.List.AllMatch {}\n        instance(x: 480, y: 0) equal_7a9f4c root.Std_k98ojb.Logic.Equal {}\n        characters_3a2c8f.characters -> allmatch_5e9d6f.list\n        string_1 -> characters_3a2c8f.string\n        allmatch_5e9d6f.result -> equal_7a9f4c.left\n        0 -> equal_7a9f4c.right\n        equal_7a9f4c.result -> output_1\n    }\n\n    \n\n    instance(x: -12, y: 14) check_same_char_eb3d8e root.main.check_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same_char {\n        in(x: -284, y: 0, name: \"string\") property(String) string_3f8a1e\n\n        out(x: 593, y: -2, name: \"output\") property(Bool) output_7c6b4d\n\n        instance(x: 0, y: 1) characters_5b9d5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -49, y: 2) length_6e87f2 root.Std_k98ojb.List.Length {}\n        characters_5b9d5c.characters -> contains_d42dce.list\n        string_3f8a1e -> characters_5b9d5c.string\n        characters_5b9d5c.characters -> length_6e87f2.list\n        0 -> contains_d42dce.item\n        \"!\" -> contains_d42dce.contains\n        length_6e87f2.length -> contains_d42dce.contains\n        contains_d42dce.result -> output_7c6b4d\n    }\n\n    \n\n    instance(x: -67, y: 52) check_same_char_1a8c9e root.main.check_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -280, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 533, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_c7f8a6 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -3) allmatcheswithrange_e9e5d2 root.Std_k98ojb.Strings.AllMatchesWithRange {\n            pattern: \"(.)\\\\1*\"\n        }\n        instance(x: 0, y: 0) length_7c6a4f root.Std_k98ojb.List.Length {}\n        instance(x: 265, y: -3) equal_2d8e9c root.Std_k98ojb.Logic.Equal {}\n        characters_c7f8a6.characters -> allmatcheswithrange_e9e5d2.input\n        length_7c6a4f.length -> equal_2d8e9c.left\n        1 -> equal_2d8e9c.right\n        string_1 -> characters_c7f8a6.string\n        string_1 -> length_7c6a4f.list\n        allmatcheswithrange_e9e5d2.matches -> equal_2d8e9c.left\n        equal_2d8e9c.result -> output_1\n    }\n\n    \n\n    instance(x: -63, y: 10) is_same_3b0d7a root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same_char {\n        in(x: -290, y: 2, name: \"string\") property(String) string_0\n\n        out(x: 530, y: 1, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 0) characters_7b3f4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -2) allmatcheswithrange_5e8a6d root.Std_k98ojb.Strings.AllMatchesWithRange {\n            pattern: \"(.)\\\\1*\"\n        }\n        characters_7b3f4c.characters -> allmatcheswithrange_5e8a6d.input\n        string_0 -> characters_7b3f4c.string\n        1 -> allmatcheswithrange_5e8a6d.start_index\n        func() {\n            in(x: -30, y: 34, name: \"item\") property(List) item_9\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_a\n\n            instance(x: 89, y: 29) length_1088d5 root.Std_k98ojb.List.Length {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            item_9 -> length_1088d5.list\n            1 -> equal_807ffd.right\n            length_1088d5.length -> equal_807ffd.left\n            equal_807ffd.result -> bool_a\n        } -> allmatcheswithrange_5e8a6d.handler\n        allmatcheswithrange_5e8a6d.matches -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_char_e54b7f root.main.check_same_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same_char {\n        in(x: -283, y: 0, name: \"string\") property(String) string_3a9d8e\n\n        out(x: 560, y: 1, name: \"output\") property(Bool) output_eb7f6c\n\n        instance(x: 0, y: 0) characters_2f4f7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 272, y: -3) length_5e8d1a root.Std_k98ojb.List.Length {}\n        instance(x: 490, y: 0) equal_6c9c8c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 708, y: -2) not_7f4f3f root.Std_k98ojb.Logic.Not {}\n        instance(x: 930, y: 1) for_5a7d1e root.Std_k98ojb.Std.For {}\n        characters_2f4f7c.characters -> length_5e8d1a.list\n        string_3a9d8e -> characters_2f4f7c.string\n        func() {\n            in(x: -110, y: 0, name: \"current\") property(String) current_6b8d6c\n\n            out(x: 704, y: 5, name: \"output\") property(Bool) output_1e9a4f\n\n            instance(x: 224, y: 2) equal_7c3b8c root.Std_k98ojb.Logic.Equal {}\n            current_6b8d6c -> equal_7c3b8c.left\n            characters_2f4f7c.characters[0] -> equal_7c3b8c.right\n            equal_7c3b8c.result -> output_1e9a4f\n        } -> for_5a7d1e.handler\n        length_5e8d1a.length -> for_5a7d1e.items\n        for_5a7d1e.item -> equal_6c9c8c.left\n        characters_2f4f7c.characters[0] -> equal_6c9c8c.right\n        not_7f4f3f.result -> output_eb7f6c\n        equal_6c9c8c.result -> not_7f4f3f.input\n        for_5a7d1e.onItem -> equal_6c9c8c.execute\n        for_5a7d1e.done -> output_eb7f6c\n    }\n\n    \n\n    instance(x: -11, y: 13) check_same_char_f0e3e4 root.main.check_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same_char {\n        in(x: -286, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 555, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_7c9f8a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -3) allmatcheswithrange_6e4d2f root.Std_k98ojb.Strings.AllMatchesWithRange {\n            pattern: \"(.)\\\\1*\"\n        }\n        instance(x: 530, y: 0) length_5c9a7c root.Std_k98ojb.List.Length {}\n        characters_7c9f8a.characters -> allmatcheswithrange_6e4d2f.input\n        string_1 -> characters_7c9f8a.string\n        allmatcheswithrange_6e4d2f.matches -> length_5c9a7c.list\n        1 -> length_5c9a7c.length\n        length_5c9a7c.result -> output_1\n    }\n\n    \n\n    instance(x: -11, y: 12) check_same_char_8e4d2f root.main.check_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -287, y: 1, name: \"string\") property(String) string_3f8d5a\n\n        out(x: 559, y: 0, name: \"output\") property(Bool) output_7c2e9b\n\n        instance(x: 0, y: 0) characters_4a1f6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -1) contains_3d5b7c root.Std_k98ojb.List.Contains {}\n        instance(x: 490, y: 0) not_9e2f2f root.Std_k98ojb.Logic.Not {}\n        characters_4a1f6f.characters -> contains_3d5b7c.list\n        string_3f8d5a -> characters_4a1f6f.string\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_0\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 89, y: 29) notequal_1 root.Std_k98ojb.Logic.NotEqual {}\n            current_0 -> notequal_1.left\n            string_3f8d5a -> notequal_1.right\n            notequal_1.result -> bool_0\n        } -> contains_3d5b7c.predicate\n        not_9e2f2f.input -> contains_3d5b7c.is_contained\n        not_9e2f2f.result -> output_7c2e9b\n    }\n\n    \n\n    instance(x: -67, y: 52) is_same_1a8f4f root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -299, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 529, y: 2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 3) characters_7f8b5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 1) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 265, y: -2) length_8166b0 root.Std_k98ojb.List.Length {}\n        characters_7f8b5c.characters -> contains_d42dce.list\n        characters_7f8b5c.characters -> length_8166b0.list\n        \"a\" -> contains_d42dce.item\n        1 -> length_8166b0.length\n        string_0 -> characters_7f8b5c.input\n        contains_d42dce.is_contained -> result_0\n    }\n\n    \n\n    instance(x: -9, y: 12) is_same_f3a4e2 root.main.is_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) regex_allmatches_7b3b7b root.Std_k98ojb.Strings.Regex.AllMatches {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        \"[0-9]\" -> regex_allmatches_7b3b7b.pattern\n        input_ai -> regex_allmatches_7b3b7b.input\n        length_6e87f2.list -> regex_allmatches_7b3b7b.result\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) regex_allmatches_7b3b7b root.Std_k98ojb.Strings.Regex.AllMatches {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        \"[0-9]\" -> regex_allmatches_7b3b7b.pattern\n        input_ai -> regex_allmatches_7b3b7b.input\n        length_6e87f2.list -> regex_allmatches_7b3b7b.result\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) regex_allmatches_7b3b7b root.Std_k98ojb.Strings.Regex.AllMatches {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        \"[0-9]\" -> regex_allmatches_7b3b7b.pattern\n        input_ai -> regex_allmatches_7b3b7b.input\n        length_6e87f2.list -> regex_allmatches_7b3b7b.result\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) regex_allmatches_7b3b7b root.Std_k98ojb.Strings.Regex.AllMatches {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(List) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Number) bool_af09a7\n\n            instance(x: 89, y: 29) getat_1088d5 root.Std_k98ojb.List.GetAt {}\n            instance(x: 310, y: 35) isnumeric_807ffd root.Std_k98ojb.Strings.IsNumeric {}\n            0 -> getat_1088d5.index\n            elem_9f6850 -> getat_1088d5.list\n            getat_1088d5.item -> isnumeric_807ffd.input\n            isnumeric_807ffd.result -> bool_af09a7\n        } -> length_6e87f2.list\n        \"\\\\d\" -> regex_allmatches_7b3b7b.pattern\n        input_ai -> regex_allmatches_7b3b7b.input\n        regex_allmatches_7b3b7b.all_matches -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) matchindices_7b3b7b root.Std_k98ojb.Strings.MatchIndices {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        \"0|1|2|3|4|5|6|7|8|9\" -> matchindices_7b3b7b.pattern\n        input_ai -> matchindices_7b3b7b.input\n        length_6e87f2.list -> matchindices_7b3b7b.matches\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) regex_allmatches_7b3b7b root.Std_k98ojb.Strings.Regex.AllMatches {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        \"[0-9]\" -> regex_allmatches_7b3b7b.pattern\n        input_ai -> regex_allmatches_7b3b7b.input\n        length_6e87f2.list -> regex_allmatches_7b3b7b.result\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) regex_allmatches_7b3b7b root.Std_k98ojb.Strings.Regex.AllMatches {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        \"[0-9]\" -> regex_allmatches_7b3b7b.pattern\n        input_ai -> regex_allmatches_7b3b7b.input\n        length_6e87f2.list -> regex_allmatches_7b3b7b.result\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) regex_allmatches_7b3b7b root.Std_k98ojb.Strings.Regex.AllMatches {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        \"[0-9]\" -> regex_allmatches_7b3b7b.pattern\n        input_ai -> regex_allmatches_7b3b7b.input\n        length_6e87f2.list -> regex_allmatches_7b3b7b.result\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) matchindices_7b3b7b root.Std_k98ojb.Strings.MatchIndices {}\n        instance(x: 0, y: 0) length_2a8c6e root.Std_k98ojb.List.Length {}\n        \"0|1|2|3|4|5|6|7|8|9\" -> matchindices_7b3b7b.pattern\n        input_ai -> matchindices_7b3b7b.input\n        length_2a8c6e.list -> matchindices_7b3b7b.matches\n        length_2a8c6e.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) matchindices_7b3b7b root.Std_k98ojb.Strings.MatchIndices {}\n        instance(x: 0, y: 0) length_2a8d6e root.Std_k98ojb.List.Length {}\n        \"0|1|2|3|4|5|6|7|8|9\" -> matchindices_7b3b7b.pattern\n        input_ai -> matchindices_7b3b7b.input\n        length_2a8d6e.list -> matchindices_7b3b7b.matches\n        length_2a8d6e.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        4 -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_fourth_power\n        pow_f892a4.result -> sum_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        4 -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_fourth_power\n        pow_f892a4.result -> sum_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        4 -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_fourth_power\n        pow_f892a4.result -> sum_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        4 -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_fourth_power\n        pow_f892a4.result -> sum_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e8d0c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c9e7f.gen_0\n        pow_4c9e7f.result -> sum_365f7b\n        4 -> pow_4c9e7f.exponent\n        expression_2d6da6.result -> pow_4c9e7f.base\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        4 -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_fourth_power\n        pow_f892a4.result -> sum_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        4 -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_fourth_power\n        pow_f892a4.result -> sum_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        4 -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_fourth_power\n        pow_f892a4.result -> sum_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9c2e8d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9c2e8d.second\n        4 -> pow_9c2e8d.first\n        expression_2d6da6.result -> pow_9c2e8d.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_365f7b\n        pow_9c2e8d.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4d5e9c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4d5e9c.second\n        4 -> pow_4d5e9c.first\n        expression_2d6da6.result -> pow_4d5e9c.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_365f7b\n        pow_4d5e9c.result -> data_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -452, y: -420, name: \"execute\") trigger() execute_3a8f9e\n        in(x: -437, y: -213, name: \"side_length\") property(Number) side_length_7c0d5b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_e1a2ee\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_8f4e9f\n\n        instance(x: 80, y: -417) ifexpression_7b5c0d root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_1a2e9f root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_3c7d5d root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) mul_8a6f9c root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_1e3f7f\") setter_1e3f7f = surface_area\n        setter(x: 875, y: -518, name: \"setter_2a4d8c\") setter_2a4d8c = surface_area\n        getter(x: 902, y: -314, name: \"getter_3b5e9d\") getter_3b5e9d = surface_area\n        instance(x: -202, y: -236) floor_6f7b8e root.Std_k98ojb.Math.Floor {}\n        6 -> mul_3c7d5d.first\n        side_length_7c0d5b -> mul_3c7d5d.second\n        mul_3c7d5d.result -> mul_8a6f9c.first\n        side_length_7c0d5b -> mul_8a6f9c.second\n        0 -> setter_1e3f7f.new_value\n        setter_1e3f7f.continue -> ifexpression_7b5c0d.execute\n        ifexpression_7b5c0d.then -> continue_e1a2ee\n        execute_3a8f9e -> setter_1e3f7f.execute\n        ifexpression_7b5c0d.else -> surface_area_cube_1a2e9f.execute\n        surface_area_cube_1a2e9f.continue -> setter_2a4d8c.execute\n        mul_8a6f9c.result -> setter_2a4d8c.new_value\n        setter_2a4d8c.continue -> continue_e1a2ee\n        getter_3b5e9d.value -> output_8f4e9f\n        side_length_7c0d5b -> floor_6f7b8e.input\n        floor_6f7b8e.output -> ifexpression_7b5c0d.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_1a2e9f root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -452, y: -423, name: \"execute\") trigger() execute_1e8f2a\n        in(x: -438, y: -205, name: \"side_length\") property(Number) side_length_7b3d5c\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_9f4f0f\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_1e8a8c\n\n        instance(x: 80, y: -417) ifexpression_eb6d2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_9f1e7a root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_f6d8c2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_3e4b5f root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_1a7b6d\") setter_1a7b6d = sum\n        setter(x: 875, y: -518, name: \"setter_3c9f5e\") setter_3c9f5e = sum\n        getter(x: 902, y: -314, name: \"getter_4c8c2a\") getter_4c8c2a = sum\n        instance(x: -202, y: -236) floor_6d7b1 root.Std_k98ojb.Math.Floor {}\n        10 -> mul_f6d8c2.second\n        mul_f6d8c2.result -> add_3e4b5f.first\n        6 -> add_3e4b5f.second\n        0 -> setter_1a7b6d.new_value\n        setter_1a7b6d.continue -> ifexpression_eb6d2.execute\n        ifexpression_eb6d2.then -> continue_9f4f0f\n        execute_1e8f2a -> setter_1a7b6d.execute\n        ifexpression_eb6d2.else -> surface_area_cube_9f1e7a.execute\n        surface_area_cube_9f1e7a.continue -> setter_3c9f5e.execute\n        surface_area_cube_9f1e7a.output -> add_3e4b5f.first\n        add_3e4b5f.result -> setter_3c9f5e.new_value\n        setter_3c9f5e.continue -> continue_9f4f0f\n        getter_4c8c2a.value -> output_1e8a8c\n        side_length_7b3d5c -> floor_6d7b1.input\n        floor_6d7b1.output -> mul_f6d8c2.first\n        floor_6d7b1.output -> ifexpression_eb6d2.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_3a9e4f root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -100, y: 0, name: \"size\") property(Number) size_9f6d5e\n\n        out(x: 300, y: 0, name: \"surface_area\") property(Number) surface_area_7b1c2a\n\n        instance(x: 20, y: -10) mul_f8f3d4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 160, y: -10) mul_9e6b0f root.Std_k98ojb.Math.Mul {}\n        instance(x: 260, y: -10) mul_ba1c2e root.Std_k98ojb.Math.Mul {}\n        instance(x: 20, y: 30) add_3d7de6 root.Std_k98ojb.Math.Add {}\n        instance(x: 160, y: 30) add_96023e root.Std_k98ojb.Math.Add {}\n        size_9f6d5e -> mul_f8f3d4.first\n        size_9f6d5e -> mul_f8f3d4.second\n        mul_f8f3d4.result -> mul_9e6b0f.first\n        2 -> mul_9e6b0f.second\n        mul_ba1c2e.result -> add_96023e.left\n        mul_9e6b0f.result -> mul_ba1c2e.first\n        size_9f6d5e -> mul_ba1c2e.second\n        mul_f8f3d4.result -> add_3d7de6.left\n        add_96023e.result -> add_3d7de6.right\n        add_3d7de6.result -> surface_area_7b1c2a\n    }\n\n    \n\n    instance(x: 0, y: -20) surface_area_cube_a9f5f8 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -300, y: 0, name: \"execute\") trigger() execute_3a1f8e\n        in(x: -290, y: -100, name: \"side_length\") property(Number) side_length_9c6b5d\n\n        out(x: 600, y: 0, name: \"continue\") trigger() continue_e7d2cc\n        out(x: 590, y: -100, name: \"surface_area\") property(Number) surface_area_f8e1f4\n\n        instance(x: 20, y: -50, name: \"\") root.Std_k98ojb.Math.Expression {\n            expression: \"6 * side_length * side_length\"\n        }\n        execute_3a1f8e -> math_expr_node.execute\n        math_expr_node.result -> surface_area_f8e1f4\n        continue_e7d2cc -> execute_3a1f8e\n    }\n\n    \n\n    instance(x: -200, y: 0, name: \"surface_area_cube\") surface_area_cube_5c6b9c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9e8a3f\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_a1\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_eb7d5c\n        out(x: 1169, y: -269, name: \"surface_area\") property(Number) surface_area_3a\n\n        instance(x: 80, y: -417) ifexpression_2e6f1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_9c8d3a root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_2e1f5c root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_6c7f4f root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_9d8a3f root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_1e5f2c\") setter_1e5f2c = surface_area\n        getter(x: 902, y: -314, name: \"getter_4a3d7a\") getter_4a3d7a = surface_area\n\n        instance(x: -202, y: -236) floor_9b6a0 root.Std_k98ojb.Math.Floor {}\n        10 -> mul_2e1f5c.second\n        side_length_a1 -> mul_2e1f5c.first\n        mul_2e1f5c.result -> add_6c7f4f.first\n        6 -> mul_9d8a3f.second\n        floor_9b6a0.output -> mul_9d8a3f.first\n        mul_9d8a3f.result -> add_6c7f4f.second\n        add_6c7f4f.result -> surface_area_3a\n\n        0 -> setter_1e5f2c.new_value\n        setter_1e5f2c.continue -> ifexpression_2e6f1.execute\n        ifexpression_2e6f1.then -> continue_eb7d5c\n        execute_9e8a3f -> setter_1e5f2c.execute\n        ifexpression_2e6f1.else -> surface_area_cube_9c8d3a.execute\n        surface_area_cube_9c8d3a.continue -> continue_eb7d5c\n        getter_4a3d7a.value -> surface_area_3a\n\n        side_length_a1 -> floor_9b6a0.input\n        floor_9b6a0.output -> ifexpression_2e6f1.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_8c7d5 root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -102, y: 0, name: \"size\") property(Number) size_8f1e9a\n\n        out(x: 108, y: 0, name: \"surface_area\") property(Number) surface_area_f6c7d4\n\n        instance(x: 16, y: 0) mul_2b5c3f root.Std_k98ojb.Math.Mul {}\n        instance(x: -11, y: 0) pow_9e1a4c root.Std_k98ojb.Math.Pow {}\n        instance(x: 54, y: 0) add_7d6a8f root.Std_k98ojb.Math.Add {}\n        size_8f1e9a -> mul_2b5c3f.first\n        pow_9e1a4c.result -> mul_2b5c3f.second\n        6 -> add_7d6a8f.first\n        mul_2b5c3f.result -> add_7d6a8f.second\n        size_8f1e9a -> pow_9e1a4c.x\n        2 -> pow_9e1a4c.y\n        add_7d6a8f.result -> surface_area_f6c7d4\n    }\n\n    \n\n    instance(x: -85, y: -46, name: \"surface_area_cube\") expression_3e25a9 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -300, y: 10, name: \"execute\") trigger() execute_1a8f0e\n        in(x: -285, y: -111, name: \"side_length\") property(Number) side_length_a6cea7\n\n        out(x: 546, y: 63, name: \"continue\") trigger() continue_5b9d3c\n        out(x: 119, y: -90, name: \"surface_area\") property(Number) surface_area_b1d7f8\n\n        instance(x: -160, y: -110) mul_2e4a1f root.Std_k98ojb.Math.Mul {}\n        instance(x: -10, y: 11) constant_6c3f9f root.Std_k98ojb.Std.Constant {\n            value: 6\n        }\n        instance(x: -40, y: -90) mul_5e8a1d root.Std_k98ojb.Math.Mul {}\n        side_length_a6cea7 -> mul_2e4a1f.first\n        side_length_a6cea7 -> mul_2e4a1f.second\n        constant_6c3f9f.value -> mul_5e8a1d.first\n        mul_2e4a1f.result -> mul_5e8a1d.second\n        mul_5e8a1d.result -> surface_area_b1d7f8\n        execute_1a8f0e -> continue_5b9d3c\n    }\n\n    \n\n    instance(x: 264, y: -464) surface_area_cube_15f9e9 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -100, y: 0, name: \"size\") property(Number) size_9f8a6e\n\n        out(x: 200, y: 0, name: \"surface_area\") property(Number) surface_area_1c7b3d\n\n        instance(x: 50, y: -10) mul_f5f2b4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 150, y: -10) mul_8a9e0c root.Std_k98ojb.Math.Mul {}\n        instance(x: 250, y: -10) mul_1d7e3f root.Std_k98ojb.Math.Mul {}\n        instance(x: 350, y: -10) add_5a6b4d root.Std_k98ojb.Math.Add {}\n        instance(x: 450, y: -10) mul_c9c8c2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 550, y: -10) add_1f7e3f root.Std_k98ojb.Math.Add {}\n\n        size_9f8a6e -> mul_f5f2b4.first\n        size_9f8a6e -> mul_f5f2b4.second\n        mul_f5f2b4.result -> mul_8a9e0c.first\n        6 -> mul_8a9e0c.second\n        mul_8a9e0c.result -> add_5a6b4d.first\n        mul_f5f2b4.result -> mul_1d7e3f.first\n        size_9f8a6e -> mul_1d7e3f.second\n        mul_1d7e3f.result -> add_5a6b4d.second\n        add_5a6b4d.result -> mul_c9c8c2.first\n        2 -> mul_c9c8c2.second\n        mul_c9c8c2.result -> add_1f7e3f.first\n        mul_f5f2b4.result -> add_1f7e3f.second\n        add_1f7e3f.result -> surface_area_1c7b3d\n    }\n\n    \n\n    instance(x: 0, y: -10, name: \"surface_area_cube\") surface_area_cube_9a6c5d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9f0d1e\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_a6cea7\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_8b2a5c\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_9e5c1f root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_2d7a4f root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        6 -> mul_2d7a4f.second\n        side_length_a6cea7 -> mul_2d7a4f.first\n        mul_2d7a4f.result -> add_88bb8a.first\n        mul_2d7a4f.result -> add_88bb8a.second\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_8b2a5c\n        execute_9f0d1e -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> surface_area_cube_9e5c1f.execute_9f0d1e\n        surface_area_cube_9e5c1f.continue_8b2a5c -> getter_38583a.get\n        add_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> continue_8b2a5c\n        getter_38583a.value -> output_b1d7f8\n        side_length_a6cea7 -> floor_61b38d.input\n        floor_61b38d.output -> surface_area_cube_9e5c1f.side_length_a6cea7\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9f0d8e\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_7c3a5b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_e2f1bf\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_4d8e7b\n\n        instance(x: 80, y: -417) ifexpression_c0c3a6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_1d8e4f root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_3a7c5c root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_6f9f2f root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_c4d1e8 root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_5c7a0f\") setter_5c7a0f = surface_area\n        getter(x: 902, y: -314, name: \"getter_1e8d6f\") getter_1e8d6f = surface_area\n        instance(x: -202, y: -236) floor_9b3b2c root.Std_k98ojb.Math.Floor {}\n        10 -> mul_c4d1e8.second\n        mul_c4d1e8.result -> add_6f9f2f.first\n        6 -> mul_3a7c5c.second\n        mul_3a7c5c.result -> surface_area_cube_1d8e4f.side_length_7c3a5b\n        0 -> setter_5c7a0f.new_value\n        setter_5c7a0f.continue -> ifexpression_c0c3a6.execute\n        ifexpression_c0c3a6.then -> continue_e2efd7\n        execute_9f0d8e -> setter_5c7a0f.execute\n        ifexpression_c0c3a6.else -> surface_area_cube_1d8e4f.execute_9f0d8e\n        surface_area_cube_1d8e4f.continue_e2efd7 -> add_6f9f2f.second\n        add_6f9f2f.result -> setter_5c7a0f.new_value\n        setter_5c7a0f.continue -> continue_e2efd7\n        getter_1e8d6f.value -> output_4d8e7b\n        side_length_7c3a5b -> floor_9b3b2c.input\n        floor_9b3b2c.output -> mul_3a7c5c.first\n        floor_9b3b2c.output -> ifexpression_c0c3a6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_1d8e4f root.main.surface_area_cube {}\n\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -293, y: 158, name: \"list\") property(List) list_9a3f8e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5b1d7c\n\n        instance(x: 201, y: 62) sub_4f6c2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_9a8f3c root.Std_k98ojb.Query.Filter {\n            where: \"it == max\"\n        }\n        instance(x: -49, y: 372) firstitem_1d7e2f root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") minlist_6a9c8c root.Std_k98ojb.Query.Filter {\n            where: \"it == min\"\n        }\n        instance(x: -48, y: 517) firstitem_1f7e2f root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1049, y: -375) length_4c8a0d root.Std_k98ojb.List.Length {}\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_9a3f8e -> maxlist_9a8f3c.list\n        list_9a3f8e -> minlist_6a9c8c.list\n        instance(x: -753, y: -588) data_instance_1 root.Std_k98ojb.List.Flatten {}\n        data_instance_1.items = [max, middle, min]\n        maxlist_9a8f3c.result -> data_instance_1.flattened.last\n        minlist_6a9c8c.result -> data_instance_1.flattened.first\n        list_9a3f8e -> slice_3f3ee6.list\n        1 -> slice_3f3ee6.start\n        slice_3f3ee6.slice -> data_instance_1.flattened.middle\n        length_4c8a0d.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> slice_3f3ee6.end\n        list_9a3f8e -> length_4c8a0d.list\n        maxlist_9a8f3c.result -> firstitem_1d7e2f.list\n        minlist_6a9c8c.result -> firstitem_1f7e2f.list\n        firstitem_1d7e2f.item -> sub_4f6c2e.first\n        firstitem_1f7e2f.item -> sub_4f6c2e.second\n        sub_4f6c2e.result -> output_5b1d7c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_15f9e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -283, y: 157, name: \"list\") property(List) list_1f3b8a\n\n        out(x: 546, y: 127, name: \"output\") property(Number) output_7c2d5e\n\n        instance(x: 201, y: 126) sub_9a4f6f root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 157) max_1a3e8c root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 186) min_7d5b0f root.Std_k98ojb.List.Min {}\n        list_1f3b8a -> max_1a3e8c.list\n        list_1f3b8a -> min_7d5b0f.list\n        max_1a3e8c.max -> sub_9a4f6f.first\n        min_7d5b0f.min -> sub_9a4f6f.second\n        sub_9a4f6f.result -> output_7c2d5e\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 156, name: \"list\") property(List) list_0d3f9e\n\n        out(x: 446, y: 137, name: \"output\") property(Number) output_eb1a6c\n\n        instance(x: 186, y: 135) sub_7f8c2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_3d9b4c root.Std_k98ojb.List.Max {}\n        instance(x: -105, y: -375) min_6a5b1c root.Std_k98ojb.List.Min {}\n        list_0d3f9e -> max_3d9b4c.list\n        list_0d3f9e -> min_6a5b1c.list\n        max_3d9b4c.max -> sub_7f8c2e.first\n        min_6a5b1c.min -> sub_7f8c2e.second\n        sub_7f8c2e.result -> output_eb1a6c\n    }\n\n    \n\n    instance(x: 48, y: -67) diff_max_min_4d9f9c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -293, y: 155, name: \"list\") property(List) list_1a3f8e\n\n        out(x: 444, y: 144, name: \"output\") property(Number) output_7b4c0d\n\n        instance(x: 201, y: 142) sub_6b2b9e root.Std_k98ojb.Math.Sub {}\n        instance(x: -79, y: 155) max_1a8f3f root.Std_k98ojb.List.Max {}\n        instance(x: -81, y: 372) min_7c5d0c root.Std_k98ojb.List.Min {}\n        list_1a3f8e -> max_1a8f3f.list\n        list_1a3f8e -> min_7c5d0c.list\n        max_1a8f3f.max -> sub_6b2b9e.first\n        min_7c5d0c.min -> sub_6b2b9e.second\n        sub_6b2b9e.result -> output_7b4c0d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_15f9e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 158, name: \"list\") property(List) list_0f1e6a\n\n        out(x: 802, y: 143, name: \"output\") property(Number) output_5c9b2d\n\n        instance(x: 538, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_f8a3f4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -193, y: 84, name: \"acc\") property(Number) acc_1c9e5d\n                in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n                out(x: 698, y: 85, name: \"\") property(Number) _7a8f6d\n\n                instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n                acc_1c9e5d -> greaterthan_45e806.left\n                current_afd5b1 -> greaterthan_45e806.right\n                func() {\n                    in(x: -192, y: 84, name: \"acc\") property(Number) acc_1c9e5d\n\n                    out(x: 698, y: 85, name: \"\") property(Number) _7a8f6d\n\n                    instance(x: 112, y: 80) greaterthan_45e806 root.Std_k98ojb.Math.GreaterThan {}\n                    acc_1c9e5d -> greaterthan_45e806.left\n                    current_afd5b1 -> greaterthan_45e806.right\n                    greaterthan_45e806.result -> _7a8f6d\n                } -> ``if expression_0``.then\n                func() {\n                    in(x: -192, y: 84, name: \"acc\") property(Number) acc_1c9e5d\n\n                    out(x: 698, y: 85, name: \"\") property(Number) _7a8f6d\n\n                    current_afd5b1 -> _7a8f6d\n                } -> ``if expression_0``.else\n                greaterthan_45e806.result -> ``if expression_0``.value\n                ``if expression_0``.result -> _7a8f6d\n            }\n        }\n        instance(x: -39, y: 257, name: \"Min value\") min_0b1361 root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -193, y: 84, name: \"acc\") property(Number) acc_1c9e5d\n                in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n                out(x: 698, y: 85, name: \"\") property(Number) _7a8f6d\n\n                instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThan {}\n                acc_1c9e5d -> lessthan_45e806.left\n                current_afd5b1 -> lessthan_45e806.right\n                func() {\n                    in(x: -192, y: 84, name: \"acc\") property(Number) acc_1c9e5d\n\n                    out(x: 698, y: 85, name: \"\") property(Number) _7a8f6d\n\n                    instance(x: 112, y: 80) lessthan_45e806 root.Std_k98ojb.Math.LessThan {}\n                    acc_1c9e5d -> lessthan_45e806.left\n                    current_afd5b1 -> lessthan_45e806.right\n                    lessthan_45e806.result -> _7a8f6d\n                } -> ``if expression_0``.then\n                func() {\n                    in(x: -192, y: 84, name: \"acc\") property(Number) acc_1c9e5d\n\n                    out(x: 698, y: 85, name: \"\") property(Number) _7a8f6d\n\n                    current_afd5b1 -> _7a8f6d\n                } -> ``if expression_0``.else\n                lessthan_45e806.result -> ``if expression_0``.value\n                ``if expression_0``.result -> _7a8f6d\n            }\n        }\n        list_0f1e6a -> max_f8a3f4.items\n        list_0f1e6a -> min_0b1361.items\n        sub_7e1ce0.first -> max_f8a3f4.initialValue\n        0 -> sub_7e1ce0.second\n        min_0b1361.result -> sub_7e1ce0.second\n        max_f8a3f4.result -> sub_7e1ce0.first\n        sub_7e1ce0.result -> output_5c9b2d\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -281, y: 158, name: \"list\") property(List) list_0f9b5e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_e6a7c1\n\n        instance(x: 532, y: 147) sub_3d4a8f root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_2e9a5c root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_f1f8d4 root.Std_k98ojb.List.Min {}\n        list_0f9b5e -> max_2e9a5c\n        list_0f9b5e -> min_f1f8d4\n        max_2e9a5c.max -> sub_3d4a8f.first\n        min_f1f8d4.min -> sub_3d4a8f.second\n        sub_3d4a8f.result -> output_e6a7c1\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_2b9e5f root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -293, y: 158, name: \"list\") property(List) list_0d4b5f\n\n        out(x: 443, y: 143, name: \"difference\") property(Number) difference_6e7a8c\n\n        instance(x: 201, y: 142) sub_9e3a2c root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 178, name: \"Max list\") maxlist_0d5f4c root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 192) firstitem_6e9a3c root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 321, name: \"Min list\") minlist_1f0d5c root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 335) firstitem_7e9a3c root.Std_k98ojb.List.FirstItem {}\n        list_0d4b5f -> maxlist_0d5f4c.list\n        maxlist_0d5f4c.max -> firstitem_6e9a3c.list\n        list_0d4b5f -> minlist_1f0d5c.list\n        minlist_1f0d5c.min -> firstitem_7e9a3c.list\n        firstitem_6e9a3c.item -> sub_9e3a2c.first\n        firstitem_7e9a3c.item -> sub_9e3a2c.second\n        sub_9e3a2c.result -> difference_6e7a8c\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 157, name: \"list\") property(List) list_1f3a8d\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_5b7c6e\n\n        instance(x: 532, y: 147) sub_9e2f4e root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_f1a3d8 root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_7e9f0c root.Std_k98ojb.List.Min {}\n        list_1f3a8d -> max_f1a3d8\n        list_1f3a8d -> min_7e9f0c\n        sub_9e2f4e.first -> max_f1a3d8\n        sub_9e2f4e.second -> min_7e9f0c\n        sub_9e2f4e.result -> output_5b7c6e\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_1a3d8 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 156, name: \"list\") property(List) list_9a3b8f\n\n        out(x: 543, y: 140, name: \"output\") property(Number) output_1c2d7e\n\n        instance(x: 0, y: 0) sub_5f6f4f root.Std_k98ojb.Math.Sub {}\n        instance(x: -105, y: 154) max_9a3f7f root.Std_k98ojb.List.Max {}\n        instance(x: -106, y: -42) min_f1e2c8 root.Std_k98ojb.List.Min {}\n        list_9a3b8f -> max_9a3f7f.list\n        list_9a3b8f -> min_f1e2c8.list\n        max_9a3f7f.max -> sub_5f6f4f.first\n        min_f1e2c8.min -> sub_5f6f4f.second\n        sub_5f6f4f.result -> output_1c2d7e\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_max_min_3b9a9f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -284, y: 0, name: \"list\") property(List) list_6a3f8e\n\n        out(x: 594, y: 1, name: \"output\") property(Number) output_e5b9d7\n\n        instance(x: 0, y: 0) max_2c4a3c root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 0) min_6f8e2c root.Std_k98ojb.List.Min {}\n        instance(x: 189, y: -1) sub_7d9f5c root.Std_k98ojb.Math.Sub {}\n        list_6a3f8e -> max_2c4a3c.list\n        list_6a3f8e -> min_6f8e2c.list\n        max_2c4a3c.max -> sub_7d9f5c.first\n        min_6f8e2c.min -> sub_7d9f5c.second\n        sub_7d9f5c.result -> output_e5b9d7\n    }\n\n    \n\n    instance(x: -56, y: 528) diff_max_min_1a4c3c root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 11, name: \"input\") property(Number) input_5e8f1d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_7c9b0a\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_e6a3cf\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_f8e2d1\n\n        instance(x: 201, y: 62) modulo_5b7f9c root.Std_k98ojb.Math.Modulo {}\n        instance(x: -105, y: -110) ifexpression_6a3c0f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_5e8f1d -> modulo_5b7f9c.value\n        2 -> modulo_5b7f9c.divisor\n        ifexpression_6a3c0f.then -> continue_e6a3cf\n        execute_7c9b0a -> ifexpression_6a3c0f.execute\n        modulo_5b7f9c.result -> ifexpression_6a3c0f.gen_0\n        ifexpression_6a3c0f.value -> output_f8e2d1\n    }\n\n    \n\n    instance(x: -174, y: 11) is_even_4c7d0f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 5, name: \"input\") property(Number) input_1f8a0e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_9c6d3b\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_5bbcd7\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_a96db6\n\n        instance(x: 146, y: -96) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        input_1f8a0e -> modulo_1088d5.value\n        2 -> modulo_1088d5.divisor\n        modulo_1088d5.result -> equal_f89569.left\n        0 -> equal_f89569.right\n        equal_f89569.result -> output_5bbcd7\n        execute_9c6d3b -> continue_a96db6\n    }\n\n    \n\n    instance(x: -84, y: 59) is_even_ac7dfb root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 17, name: \"input\") property(Number) input_9e1a8f\n        in(x: -451, y: -113, name: \"execute\") trigger() execute_eb7d0c\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_f3b6ef\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_8a9f5e\n\n        instance(x: -106, y: -110) ifexpression_7d0c4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_9e1a8f -> ifexpression_7d0c4c.gen_0\n        ifexpression_7d0c4c.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_7d0c4c.else -> setter_1cedb2.execute\n        false -> setter_1cedb2.new_value\n        getter_9cceb3.value -> output_f3b6ef\n        execute_eb7d0c -> ifexpression_7d0c4c.execute\n        setter_1cedb2.continue -> continue_8a9f5e\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_9e9b3f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 0, name: \"input\") property(Number) input_9f1e6d\n        in(x: -454, y: -115, name: \"execute\") trigger() execute_7a3c4b\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_9f1e6d -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> output_b1d7f8\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        false -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_7a3c4b -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -55, y: 529) is_even_2c856f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 165, name: \"input\") property(Number) input_1f0a5e\n        in(x: -452, y: -113, name: \"execute\") trigger() execute_9c7b2d\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_e6f3ea\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_f1e5a0\n\n        instance(x: 532, y: 147) modulo_9c8b7d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 534, y: 27) equal_6f2c4c root.Std_k98ojb.Logic.Equal {}\n        input_1f0a5e -> modulo_9c8b7d.value\n        2 -> modulo_9c8b7d.divisor\n        modulo_9c8b7d.result -> equal_6f2c4c.left\n        0 -> equal_6f2c4c.right\n        equal_6f2c4c.result -> output_e6f3ea\n        execute_9c7b2d -> continue_f1e5a0\n    }\n\n    \n\n    instance(x: -291, y: 177) is_even_8f9b1f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 10, name: \"input\") property(Number) input_5f9a8e\n        in(x: -452, y: -111, name: \"execute\") trigger() execute_e1b7c0\n\n        out(x: 1194, y: -114, name: \"continue\") trigger() continue_f6d3ef\n        out(x: 1215, y: 63, name: \"output\") property(Bool) output_8f9e1a\n\n        instance(x: 1040, y: -110) modulo_7c4b2c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1036, y: 52) equal_f5d3ba root.Std_k98ojb.Logic.Equal {}\n        input_5f9a8e -> modulo_7c4b2c.value\n        2 -> modulo_7c4b2c.divisor\n        modulo_7c4b2c.result -> equal_f5d3ba.left\n        0 -> equal_f5d3ba.right\n        execute_e1b7c0 -> modulo_7c4b2c.execute\n        equal_f5d3ba.result -> output_8f9e1a\n        equal_f5d3ba.value -> continue_f6d3ef\n    }\n\n    \n\n    instance(x: -84, y: 11) is_even_1f0c0f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 11, name: \"input\") property(Number) input_1a9f2e\n        in(x: -451, y: -110, name: \"execute\") trigger() execute_eb0d7c\n\n        out(x: 545, y: 10, name: \"output\") property(Bool) output_f8c6ee\n        out(x: 511, y: -109, name: \"continue\") trigger() continue_1a3e5f\n\n        instance(x: -84, y: 11) modulo_9d4b7c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 0, y: 0) equal_2b8f6f root.Std_k98ojb.Logic.Equal {}\n        input_1a9f2e -> modulo_9d4b7c.value\n        2 -> modulo_9d4b7c.divisor\n        modulo_9d4b7c.result -> equal_2b8f6f.left\n        0 -> equal_2b8f6f.right\n        equal_2b8f6f.result -> output_f8c6ee\n        execute_eb0d7c -> continue_1a3e5f\n    }\n\n    \n\n    instance(x: -82, y: 57) is_even_9e9b4c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 20, name: \"input\") property(Number) input_1f0e9d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_7a1b3e\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_1f0e9d -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> output_7a1b3e\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        false -> output_7a1b3e\n        ifexpression_e38995.else -> output_7a1b3e\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f9d4b6 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 11, name: \"input\") property(Number) input_8f1a3e\n        in(x: -451, y: -112, name: \"execute\") trigger() execute_9c6d7b\n\n        out(x: 512, y: -113, name: \"continue\") trigger() continue_e5b2aa\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_8e1f4a\n\n        instance(x: -104, y: -111) ifexpression_7c6d9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_8f1a3e -> ifexpression_7c6d9f.gen_0\n        execute_9c6d9b -> ifexpression_7c6d9f.execute\n        ifexpression_7c6d9f.then -> continue_e5b2aa\n        ifexpression_7c6d9f.else -> continue_e5b2aa\n        ifexpression_7c6d9f.value -> output_8e1f4a\n    }\n\n    \n\n    instance(x: -174, y: 12) is_even_0e3d5f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 16, name: \"input\") property(Number) input_8f2a1e\n        in(x: -451, y: -114, name: \"execute\") trigger() execute_e9b3d7\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_f0c4ef\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_8e6a5f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_8f2a1e -> ifexpression_e38995.gen_0\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> continue_f0c4ef\n        false -> setter_1cedb2.new_value\n        getter_9cceb3.value -> output_8e6a5f\n        execute_e9b3d7 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_f0c4ef\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_1e7d5c root.main.is_even {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5f4c8a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_0b1361`` root.Std_k98ojb.List.Contains {}\n        characters_7b3b7b.characters -> find_5f4c8a.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_54bdc root.Std_k98ojb.Logic.NotEqual {}\n            characters_7b3b7b.characters -> slice_45e806.list\n            current_afd5b1 -> slice_45e806.start\n            -1 -> slice_45e806.end\n            slice_45e806.slice -> contains_d42dce.list\n            current_afd5b1 -> ``first occurrence_0b1361``.list\n            contains_d42dce.contains -> notequal_54bdc.left\n            false -> notequal_54bdc.right\n            notequal_54bdc.result -> bool_1eb6e9\n        } -> find_5f4c8a.predicate\n        find_5f4c8a.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) find_7b3b7b root.Std_k98ojb.Iteration.Find {}\n        instance(x: -53, y: 30) contains_d831ca root.Std_k98ojb.Strings.Contains {}\n        instance(x: -53, y: 127) characters_9b1bc3 root.Std_k98ojb.Strings.Characters {}\n        data_instance(x: -253, y: 76) data_cc1b1b  = [seen]\n        instance(x: -432, y: 620) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        input_ai -> characters_9b1bc3.input\n        characters_9b1bc3.characters -> find_7b3b6b.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``seen_0b1361`` root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> contains_d831ca.input\n            data_cc1b1b.seen -> contains_d831ca.contains\n            contains_d831ca.result -> bool_1eb6e9\n        } -> find_7b3b6b.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``seen_0b1361`` root.Std_k98ojb.List.Contains {}\n            current_afd5b1 -> contains_d831ca.input\n            data_cc1b1b.seen -> contains_d831ca.contains\n            contains_d831ca.result -> bool_1eb6e9\n        } -> find_7b3b6b.predicate\n        find_7b3b6b.item -> output_ai\n        characters_9b1bc3.characters -> flatten_c31c7c.items\n        data_cc1b1b.seen -> flatten_c31c7c.list\n        find_7b3b6b.item -> data_cc1b1b.seen\n        flatten_c31c7c.flattened -> data_cc1b1b.seen\n    }\n\n    \n\n    instance(x: -179, y: 30) first_repeated_char_59bc6e root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -287, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3e9c4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5d8a7f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 460, y: -11) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 665, y: 0) ``find_5d8a7f_1`` root.Std_k98ojb.Iteration.Find {}\n        characters_3e9c4f.characters -> find_5d8a7f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``find_5d8a7f_2`` root.Std_k98ojb.Iteration.Find {}\n            current_afd5b1 -> contains_d42dce.input\n            find_5d8a7f.item -> contains_d42dce.contains\n            ``find_5d8a7f_2``.item -> output_0\n            characters_3e9c4f.characters -> ``find_5d8a7f_2``.items\n            func() {\n                in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                instance(x: 112, y: 80) ``find_5d8a7f_3`` root.Std_k98ojb.Iteration.Find {}\n                current_afd5b1 -> contains_d42dce.input\n                find_5d8a7f.item -> contains_d42dce.contains\n                characters_3e9c4f.characters -> ``find_5d8a7f_3``.items\n                func() {\n                    in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n                    out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n                    instance(x: 112, y: 80) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n                    current_afd5b1 -> equal_a54bdc.left\n                    find_5d8a7f.item -> equal_a54bdc.right\n                    equal_a54bdc.result -> bool_1eb6e9\n                } -> ``find_5d8a7f_3``.predicate\n            } -> ``find_5d8a7f_2``.predicate\n        } -> contains_d42dce.predicate\n        contains_d42dce.result -> bool_1eb6e9\n        find_5d8a7f.item -> output_0\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> equal_a54bdc.left\n            ``find_5d8a7f_1``.item -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> ``find_5d8a7f_1``.predicate\n        characters_3e9c4f.characters -> ``find_5d8a7f_1``.items\n        input_0 -> characters_3e9c4f.input\n    }\n\n    \n\n    instance(x: -81, y: 52) first_repeated_char_2b6c6e root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5b8f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7a3d6e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"char\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"index == it\"\n        }\n        instance(x: 62, y: -226, name: \"first index\") ``First even number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"char\") ``First even number_0b1361``.expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"index == it\"\n        }\n        characters_5b8f9c.characters -> find_7a3d6e.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_7a3d6e.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        characters_5b8f9c.characters -> ``First even number_0b1361``.items\n        find_7a3d6e.item -> expression_634b7e.gen_0\n        ``First even number_0b1361``.item -> ``First even number_0b1361``.expression_634b7e.gen_0\n        characters_5b8f9c.characters -> output_0\n        find_7a3d6e.index -> expression_634b7e.index\n        ``First even number_0b1361``.index -> ``First even number_0b1361``.expression_634b7e.index\n        expression_634b7e.result -> find_7a3d6e.predicate\n        ``First even number_0b1361``.expression_634b7e.result -> ``First even number_0b1361``.predicate\n    }\n\n    \n\n    instance(x: -34, y: 127) first_repeated_char_5c8f9c root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3c8d5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4a9e7c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_0b1361`` root.Std_k98ojb.Strings.Contains {}\n        characters_3c8d5f.characters -> find_4a9e7c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``first occurrence_2`` root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            input_1 -> ``first occurrence_2``.input\n            current_afd5b1 -> ``first occurrence_2``.contains\n            ``first occurrence_2``.result -> notequal_148aeb.left\n            false -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_4a9e7c.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``first occurrence_2`` root.Std_k98ojb.Strings.Contains {}\n            input_1 -> ``first occurrence_2``.input\n            current_afd5b1 -> ``first occurrence_2``.contains\n            ``first occurrence_2``.result -> bool_1eb6e9\n        } -> ``first occurrence_0b1361``.predicate\n        find_4a9e7c.item -> output_0\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 531, y: -2, name: \"output\") property(Any) output_1\n\n        instance(x: 0, y: 1) characters_3a9c4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7d8e5f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_0b1361`` root.Std_k98ojb.Strings.Contains {}\n        characters_3a9c4f.characters -> find_7d8e5f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) substring_45e806 root.Std_k98ojb.Strings.Substring {}\n            instance(x: 415, y: 86) contains_a54bdc root.Std_k98ojb.Strings.Contains {}\n            input_1 -> substring_45e806.input\n            current_afd5b1 -> substring_45e806.start\n            -1 -> substring_45e806.end\n            substring_45e806.substring -> contains_a54bdc.contains\n            substring_45e806.substring -> ``first occurrence_0b1361``.contains\n            contains_a54bdc.result -> bool_1eb6e9\n        } -> find_7d8e5f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) substring_45e806 root.Std_k98ojb.Strings.Substring {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            input_1 -> substring_45e806.input\n            current_afd5b1 -> substring_45e806.start\n            -1 -> substring_45e806.end\n            substring_45e806.substring -> ``first occurrence_0b1361``.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> contains_d42dce.predicate\n        find_7d8e5f.item -> output_1\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) find_7b3b7b root.Std_k98ojb.Iteration.Find {}\n        instance(x: -105, y: 0, name: \"characters\") characters_1c2d9a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 100, y: 0, name: \"first repeated character\") find_7f3b7b root.Std_k98ojb.Iteration.Find {}\n        data_instance(x: -105, y: 0) data_1c2d9a  = [chars]\n        input_ai -> characters_1c2d9a.input\n        characters_1c2d9a.characters -> data_1c2d9a.chars\n        data_1c2d9a -> find_7b3b7b.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Any) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            data_1c2d9a.chars -> contains_d42dce.string\n            current_afd5b1 -> contains_d42dce.contains\n        } -> find_7b3b7b.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Any) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            data_1c2d9a.chars -> contains_d42dce.string\n            current_afd5b1 -> contains_d42dce.contains\n        } -> find_7f3b7b.predicate\n        find_7b3b7b.item -> find_7f3b7b.items\n        find_7f3b7b.item -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) first_repeated_char_59bc6e root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -287, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5e4b7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3a9f8d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_0b1361`` root.Std_k98ojb.Strings.Contains {}\n        characters_5e4b7c.characters -> find_3a9f8d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) substring_45e806 root.Std_k98ojb.Strings.Substring {}\n            instance(x: 415, y: 86) contains_a54bdc root.Std_k98ojb.Strings.Contains {}\n            input_0 -> substring_45e806.input\n            current_afd5b1 -> substring_45e806.start\n            substring_45e806.substring -> ``first occurrence_0b1361``.contains\n            contains_a54bdc.contains -> ``first occurrence_0b1361``.input\n            -1 -> substring_45e806.end\n            ``first occurrence_0b1361``.result -> bool_1eb6e9\n        } -> find_3a9f8d.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) substring_45e806 root.Std_k98ojb.Strings.Substring {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> substring_45e806.input\n            current_afd5b1 -> substring_45e806.start\n            substring_45e806.substring -> contains_d42dce.contains\n            contains_d42dce.contains -> contains_d42dce.input\n            -1 -> substring_45e806.end\n            contains_d42dce.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> characters_5e4b7c.predicate\n        find_3a9f8d.item -> output_0\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_807ffd.left\n            \"\" -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        input_0 -> find_6d05b0.items\n        find_6d05b0.item -> output_3bc2ae\n    }\n\n    \n\n    instance(x: -34, y: 127) first_repeated_char_node root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_2\n\n        instance(x: 0, y: 0) find_3 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_1\n            in(x: -113, y: 85, name: \"seen\") property(List) seen_2\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3\n\n            instance(x: 89, y: 29) contains_4 root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) notequal_5 root.Std_k98ojb.Logic.NotEqual {}\n            current_1 -> contains_4.item\n            seen_2 -> contains_4.list\n            contains_4.result -> notequal_5.left\n            false -> notequal_5.right\n            notequal_5.result -> bool_3\n        } -> find_3.predicate\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_1\n\n            out(x: 515, y: 44, name: \"list\") property(List) list_2\n\n            instance(x: 89, y: 29) add_6 root.Std_k98ojb.List.Add {}\n            current_1 -> add_6.item\n            seen_2 -> add_6.list\n            add_6.listWithItem -> list_2\n        } -> find_3.onItem\n        input_1 -> find_3.items\n        find_3.item -> output_2\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_7 root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_9f7759\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_9cceb3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1cedb2\") getter_1cedb2 = second_min\n        setter(x: 116, y: -268, name: \"setter_37db7f\") setter_37db7f = second_min\n        instance(x: -105, y: -110) ifexpression_37db7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1cedb2\") getter_1cedb2 = second_min\n        setter(x: 116, y: -268, name: \"setter_37db7f\") setter_37db7f = second_min\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min\n        min -> ifexpression_e38995.gen_0\n        second_min -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> min_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        min -> setter_1cedb2.new_value\n        list_min_node.min -> ifexpression_9cceb3.gen_0\n        second_min -> ifexpression_9cceb3.gen_1\n        getter_1cedb2.value -> second_min_9f7759\n        ifexpression_9cceb3.then -> setter_37db7f.execute\n        min -> setter_37db7f.new_value\n        list_min_node.min -> ifexpression_37db7f.gen_0\n        second_min -> ifexpression_37db7f.gen_1\n        getter_1cedb2.value -> second_min_9f7759\n        ifexpression_37db7f.then -> setter_37db7f.execute\n        min -> setter_37db7f.new_value\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 1, name: \"list\") property(List) list_9e3f5a\n\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_8b2d6c\n\n        instance(x: 426, y: -303) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -403) remove_f1a3f4 root.Std_k98ojb.List.Remove {}\n        instance(x: 426, y: -503) min_2d7c8e root.Std_k98ojb.List.Min {}\n        list_9e3f5a -> min_node.items\n        min_node.min -> remove_f1a3f4.index\n        list_9e3f5a -> remove_f1a3f4.list\n        remove_f1a3f4.listWithoutItem -> min_2d7c8e.items\n        min_2d7c8e.min -> second_min_8b2d6c\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) min_1a9b7f root.Std_k98ojb.List.Min {}\n        instance(x: -39, y: 26, name: \"First smallest number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Second smallest number\") ``First smallest number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> min_1a9b7f.items\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            min_1a9b7f.min -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        list_09fcba -> ``First smallest number_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            min_1a9b7f.min -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First smallest number_0b1361``.predicate\n        find_de624f.item -> min_1a9b7f.items\n        ``First smallest number_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) second_smallest_f53d27 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 0, name: \"list\") property(List) list_1a3f8e\n\n        out(x: 160, y: 79, name: \"second_min\") property(Number) second_min_7c2b4d\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name:",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: 158, name: \"list\") property(List) list_9f7759\n\n        out(x: 46, y: 158, name: \"second_min\") property(Number) second_min_f9110a\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_3e8c9d root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_d5e1f6\") getter_d5e1f6 = second_min\n        setter(x: 116, y: -268, name: \"setter_9b7c8d\") setter_9b7c8d = second_min\n        setter(x: 118, y: -56, name: \"setter_e4a2ba\") setter_e4a2ba = second_min\n        instance(x: -105, y: -110) ifexpression_a5e1f6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_3c9d7f\") getter_3c9d7f = second_min\n        setter(x: 116, y: -268, name: \"setter_d5e1f6\") setter_d5e1f6 = second_min\n        setter(x: 118, y: -56, name: \"setter_9b7c8d\") setter_9b7c8d = second_min\n        instance(x: -105, y: -110) ifexpression_37db7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_e4a2ba\") getter_e4a2ba = second_min\n        setter(x: 116, y: -268, name: \"setter_3c9d7f\") setter_3c9d7f = second_min\n        setter(x: 118, y: -56, name: \"setter_d5e1f6\") setter_d5e1f6 = second_min\n        instance(x: -105, y: -110) ifexpression_9b7c8d root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_e4a2ba\") getter_e4a2ba = second_min\n        setter(x: 116, y: -268, name: \"setter_37db7f\") setter_37db7f = second_min\n        setter(x: 118, y: -56, name: \"setter_3c9d7f\") setter_3c9d7f = second_min\n        instance(x: -105, y: -110) ifexpression_d5e1f6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9b7c8d\") getter_9b7c8d = second_min\n        setter(x: 116, y: -268, name: \"setter_e4a2ba\") setter_e4a2ba = second_min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = second_min\n        instance(x: -105, y: -110) ifexpression_3c9d7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_d5e1f6\") getter_d5e1f6 = second_min\n        setter(x: 116, y: -268, name: \"setter_9b7c8d\") setter_9b7c8d = second_min\n        setter(x: 118, y: -56, name: \"setter_e4a2ba\") setter_e4a2ba = second_min\n        instance(x: -105, y: -110) ifexpression_e4a2ba root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_37db7f\") getter_37db7f = second_min\n        setter(x: 116, y: -268, name: \"setter_d5e1f6\") setter_d5e1f6 = second_min\n        setter(x: 118, y: -56, name: \"setter_9b7c8d\") setter_9b7c8d = second_min\n        instance(x: -105, y: -110) ifexpression_37db7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_e4a2ba\") getter_e4a2ba = second_min\n        setter(x: 116, y: -268, name: \"setter_3c9d7f\") setter_3c9d7f = second_min\n        setter(x: 118, y: -56, name: \"setter_d5e1f6\") setter_d5e1f6 = second_min\n        instance(x: -105, y: -110) ifexpression_9b7c8d root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_e4a2ba\") getter_e4a2ba = second_min\n        setter(x: 116, y: -268, name: \"setter_37db7f\") setter_37db7f = second_min\n        setter(x: 118, y: -56, name: \"setter_3c9d7f\") setter_3c9d7f = second_min\n        instance(x: -105, y: -110) ifexpression_d5e1f6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9b7c8d\") getter_9b7c8d = second_min\n        setter(x: 116, y: -268, name: \"setter_e4a2ba\") setter_e4a2ba = second_min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = second_min\n        instance(x: -105, y: -110) ifexpression_3c9d7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_d5e1f6\") getter_d5e1f6 = second_min\n        setter(x: 116, y: -268, name: \"setter_9b7c8d\") setter_9b7c8d = second_min\n        setter(x: 118, y: -56, name: \"setter_e4a2ba\") setter_e4a2ba = second_min\n        instance(x: -105, y: -110) ifexpression_a5e1f6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_3c9d7f\") getter_3c9d7f = second_min\n        setter(x: 116, y: -268, name: \"setter_d5e1f6\") setter_d5e1f6 = second_min\n        setter(x: 118, y: -56, name: \"setter_9b7c8d\") setter_9b7c8d = second_min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: 0, name: \"list\") property(List) list_8e9f1a\n\n        out(x: 160, y: 79, name: \"second_min\") property(Number) second_min_a5c3d7\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 60) ifexpression_e38995_0 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 172, name: \"getter_9cceb3_1\") getter_9cceb3_1 = min\n        setter(x: 116, y: -48, name: \"setter_1cedb2_2\") setter_1cedb2_2 = min\n        setter(x: 118, y: 96, name: \"setter_37db7f_3\") setter_37db7f_3 = min\n        instance(x: -105, y: 240) ifexpression_e38995_4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 332, name: \"getter_9cceb3_5\") getter_9cceb3_5 = min\n        setter(x: 116, y: 168, name: \"setter_1cedb2_6\") setter_1cedb2_6 = min\n        setter(x: 118, y: 280, name: \"setter_37db7f_7\") setter_37db7f_7 = min\n        instance(x: -105, y: 400) ifexpression_e38995_8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 492, name: \"getter_9cceb3_9\") getter_9cceb3_9 = min\n        setter(x: 116, y: 328, name: \"setter_1cedb2_a\") setter_1cedb2_a = min\n        setter(x: 118, y: 440, name: \"setter_37db7f_b\") setter_37db7f_b = min\n        instance(x: -105, y: 560) ifexpression_e38995_c root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 652, name: \"getter_9cceb3_d\") getter_9cceb3_d = min\n        setter(x: 116, y: 488, name: \"setter_1cedb2_e\") setter_1cedb2_e = min\n        setter(x: 118, y: 600, name: \"setter_37db7f_f\") setter_37db7f_f = min\n        instance(x: -105, y: 680) ifexpression_e38995_10 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 772, name: \"getter_9cceb3_11\") getter_9cceb3_11 = min\n        setter(x: 116, y: 668, name: \"setter_1cedb2_12\") setter_1cedb2_12 = min\n        setter(x: 118, y: 780, name: \"setter_37db7f_13\") setter_37db7f_13 = min\n        instance(x: -105, y: 840) ifexpression_e38995_14 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 932, name: \"getter_9cceb3_15\") getter_9cceb3_15 = min\n        setter(x: 116, y: 788, name: \"setter_1cedb2_16\") setter_1cedb2_16 = min\n        setter(x: 118, y: 940, name: \"setter_37db7f_17\") setter_37db7f_17 = min\n        instance(x: -105, y: 1000) ifexpression_e38995_18 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1092, name: \"getter_9cceb3_19\") getter_9cceb3_19 = min\n        setter(x: 116, y: 988, name: \"setter_1cedb2_1a\") setter_1cedb2_1a = min\n        setter(x: 118, y: 1100, name: \"setter_37db7f_1b\") setter_37db7f_1b = min\n        instance(x: -105, y: 1160) ifexpression_e38995_1c root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1252, name: \"getter_9cceb3_1d\") getter_9cceb3_1d = min\n        setter(x: 116, y: 1148, name: \"setter_1cedb2_1e\") setter_1cedb2_1e = min\n        setter(x: 118, y: 1260, name: \"setter_37db7f_1f\") setter_37db7f_1f = min\n        instance(x: -105, y: 1320) ifexpression_e38995_20 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1412, name: \"getter_9cceb3_21\") getter_9cceb3_21 = min\n        setter(x: 116, y: 1308, name: \"setter_1cedb2_22\") setter_1cedb2_22 = min\n        setter(x: 118, y: 1420, name: \"setter_37db7f_23\") setter_37db7f_23 = min\n        instance(x: -105, y: 1480) ifexpression_e38995_24 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1572, name: \"getter_9cceb3_25\") getter_9cceb3_25 = min\n        setter(x: 116, y: 1468, name: \"setter_1cedb2_26\") setter_1cedb2_26 = min\n        setter(x: 118, y: 1580, name: \"setter_37db7f_27\") setter_37db7f_27 = min\n        instance(x: -105, y: 1640) ifexpression_e38995_28 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1732, name: \"getter_9cceb3_29\") getter_9cceb3_29 = min\n        setter(x: 116, y: 1628, name: \"setter_1cedb2_2a\") setter_1cedb2_2a = min\n        setter(x: 118, y: 1740, name: \"setter_37db7f_2b\") setter_37db7f_2b = min\n        instance(x: -105, y: 1800) ifexpression_e38995_2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1892, name: \"getter_9cceb3_2d\") getter_9cceb3_2d = min\n        setter(x: 116, y: 1788, name: \"setter_1cedb2_2e\") setter_1cedb2_2e = min\n        setter(x: 118, y: 1900, name: \"setter_37db7f_2f\") setter_37db7f_2f = min\n        instance(x: -105, y: 196",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 2, name: \"list\") property(List) list_9f0a5e\n\n        out(x: 159, y: -19, name: \"second_min\") property(Number) second_min_a8c1d7\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        data_instance(x: -609, y: -363) data_9a9c70  = [min, second_min]\n        instance(x: -105, y: -110) ifexpression_e38995_1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3_1\") getter_9cceb3_1 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2_1\") setter_1cedb2_1 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f_1\") setter_37db7f_1 = min\n        instance(x: 426, y: -303) list_min_node_1 root.Std_k98ojb.List.Min {}\n        data_instance(x: -609, y: -363) data_9a9c70_1  = [min, second_min]\n        a -> ifexpression_e38995.gen_0\n        b -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> min\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a -> setter_1cedb2.new_value\n        b -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        list_ai -> list_min_node.items\n        list_min_node.min -> min\n        data_9a9c70 -> list_min_node_1.items\n        list_min_node_1.min -> second_min_a8c1d7\n        a -> ifexpression_e38995_1.gen_0\n        b -> ifexpression_e38995_1.gen_1\n        getter_9cceb3_1.value -> min\n        ifexpression_e38995_1.then -> setter_1cedb2_1.execute\n        a -> setter_1cedb2_1.new_value\n        b -> setter_37db7f_1.new_value\n        ifexpression_e38995_1.else -> setter_37db7f_1.execute\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) min_1a7f8d root.Std_k98ojb.List.Min {}\n        instance(x: -39, y: 26, name: \"First smallest number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Second smallest number\") ``First smallest number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> min_1a7f8d.items\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            min_1a7f8d.min -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        list_09fcba -> ``First smallest number_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            min_1a7f8d.min -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First smallest number_0b1361``.predicate\n        find_de624f.item -> min_1a7f8d.items\n        ``First smallest number_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) second_smallest_f53d27 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_8f3e1a\n\n        out(x: 593, y: 79, name: \"number\") property(Number) number_5c7d6b\n\n        instance(x: 0, y: 0) min_4a9b2f root.Std_k98ojb.List.Min {}\n        instance(x: -341, y: -1) remove_f8e7a3 root.Std_k98ojb.List.Remove {}\n        instance(x: -174, y: -63) min_d6e930 root.main.min_of_three {}\n        list_8f3e1a -> min_4a9b2f.list\n        min_4a9b2f.min -> remove_f8e7a3.index\n        list_8f3e1a -> remove_f8e7a3.list\n        remove_f8e7a3.listWithoutItem -> min_d6e930.items\n        min_d6e930.smallest_8713cf -> number_5c7d6b\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_1f2c4c root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9e3a8f\n\n        out(x: 593, y: 1, name: \"number\") property(Number) number_7b4c2d\n\n        instance(x: 0, y: 0) find_5e6a1d root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_5e6a1d.predicate\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        data_instance(x: -609, y: -363) data_9a9c70  = [a, b, c]\n        a_f37c19 -> data_9a9c70.a\n        b_ca79ac -> data_9a9c70.b\n        c_a89f71 -> data_9a9c70.c\n        data_9a9c70 -> min_c3e343.items\n        min_c3e343.min -> smallest_8713cf\n        list_9e3a8f -> find_5e6a1d.items\n        instance(x: -341, y: -301) filter_7b3b7b root.Std_k98ojb.Query.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            smallest_8713cf -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> filter_7b3b7b.where\n        list_9e3a8f -> filter_7b3b7b.list\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        filter_7b3b7b.result -> min_c3e343.items\n        min_c3e343.min -> number_7b4c2d\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_2c856f root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 18500,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -175, y: 15, name: \"list1\") property(List) list1_8a2f9e\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_7c6b3d\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_5e0c4a\n\n        instance(x: 133, y: -131) intersection_1f9c1 root.Std_k98ojb.Sets.Intersection {}\n        list1_8a2f9e -> intersection_1f9c1.left\n        list2_7c6b3d -> intersection_1f9c1.right\n        instance(x: 360, y: -95) notempty_4b0c5 root.Std_k98ojb.List.NotEmpty {}\n        intersection_1f9c1.intersection -> notempty_4b0c5.list\n        notempty_4b0c5.isEmpty -> output_5e0c4a\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -176, y: 20, name: \"list1\") property(List) list1_8e9f0a\n        in(x: -172, y: -123, name: \"list2\") property(List) list2_eb7c6d\n\n        out(x: 504, y: -95, name: \"output\") property(Bool) output_4b3b5f\n\n        instance(x: 222, y: -92, name: \"intersection\") intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_8e9f0a -> intersection_c7c7e6.left\n        list2_eb7c6d -> intersection_c7c7e6.right\n        instance(x: 107, y: -95) notempty_4e5c1c root.Std_k98ojb.List.NotEmpty {}\n        intersection_c7c7e6.intersection -> notempty_4e5c1c.list\n        notempty_4e5c1c.isEmpty -> output_4b3b5f\n    }\n\n    \n\n    instance(x: -140, y: 44) common_element_e9a2d8 root.main.common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -177, y: 10, name: \"list1\") property(List) list1_8e9f0a\n        in(x: -171, y: -111, name: \"list2\") property(List) list2_7c3d5b\n\n        out(x: 1064, y: -104, name: \"output\") property(Bool) output_6c1b3e\n\n        instance(x: 1039, y: -102) intersection_8f0a8 root.Std_k98ojb.Sets.Intersection {}\n        list1_8e9f0a -> intersection_8f0a8.left\n        list2_7c3d5b -> intersection_8f0a8.right\n        instance(x: 1064, y: -102) notempty_6f8c4 root.Std_k98ojb.List.NotEmpty {}\n        intersection_8f0a8.intersection -> notempty_6f8c4.list\n        notempty_6f8c4.isEmpty -> output_6c1b3e\n    }\n\n    \n\n    instance(x: -138, y: 43) common_element_9d5d2 root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -171, y: 16, name: \"list1\") property(List) list1_8e9a6f\n        in(x: -161, y: -117, name: \"list2\") property(List) list2_5b7c0d\n\n        out(x: 1003, y: -104, name: \"output\") property(Bool) output_9e4f8e\n\n        instance(x: 240, y: -102, name: \"intersection\") intersection_6a1f3f root.Std_k98ojb.Sets.Intersection {}\n        list1_8e9a6f -> intersection_6a1f3f.left\n        list2_5b7c0d -> intersection_6a1f3f.right\n        instance(x: 1014, y: -102) notempty_7b3b7b root.Std_k98ojb.List.NotEmpty {}\n        intersection_6a1f3f.intersection -> notempty_7b3b7b.list\n        notempty_7b3b7b.isEmpty -> output_9e5f8e\n    }\n\n    \n\n    instance(x: -138, y: 45) common_element_aad0c2 root.main.common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -175, y: 18, name: \"list1\") property(List) list1_9a3b6f\n        in(x: -163, y: -121, name: \"list2\") property(List) list2_8e7c4d\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_0e1f5a\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_3b9b8c root.Std_k98ojb.Sets.Intersection {}\n        list1_9a3b6f -> intersection_3b9b8c.left\n        list2_8e7c4d -> intersection_3b9b8c.right\n        instance(x: -11, y: 9) notempty_0b5f6f root.Std_k98ojb.List.NotEmpty {}\n        intersection_3b9b8c.intersection -> notempty_0b5f6f.list\n        notempty_0b5f6f.isEmpty -> output_0e1f5a\n    }\n\n    \n\n    instance(x: -138, y: -63) common_element_7d4a9c root.main.common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -179, y: 20, name: \"list1\") property(List) list1_3e8f5a\n        in(x: -177, y: -123, name: \"list2\") property(List) list2_e6c7b9\n\n        out(x: 1010, y: -98, name: \"output\") property(Bool) output_c4d1ba\n\n        instance(x: 360, y: -95) intersection_5e3a8f root.Std_k98ojb.Sets.Intersection {}\n        list1_3e8f5a -> intersection_5e3a8f.left\n        list2_e6c7b9 -> intersection_5e3a8f.right\n        instance(x: 1020, y: -95) notempty_1a4d5c root.Std_k98ojb.List.NotEmpty {}\n        intersection_5e3a8f.intersection -> notempty_1a4d5c.list\n        notempty_1a4d5c.isEmpty -> output_c4d1ba\n    }\n\n    \n\n    instance(x: -92, y: 59) has_common_element_7b2c9f root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -175, y: 18, name: \"list1\") property(List) list1_3a9f8e\n        in(x: -183, y: -121, name: \"list2\") property(List) list2_4b7c6d\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 133, y: -131) intersection_1a8e3 root.Std_k98ojb.Sets.Intersection {}\n        list1_3a9f8e -> intersection_1a8e3.left\n        list2_4b7c6d -> intersection_1a8e3.right\n        instance(x: 360, y: -95) notempty_5c0f9 root.Std_k98ojb.List.NotEmpty {}\n        intersection_1a8e3.intersection -> notempty_5c0f9.list\n        notempty_5c0f9.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_a6d4c root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -177, y: 10, name: \"list1\") property(List) list1_8e9f0a\n        in(x: -165, y: -111, name: \"list2\") property(List) list2_7c3d5b\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list1_8e9f0a -> intersection_c7c7e6.left\n        list2_7c3d5b -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -175, y: 10, name: \"list1\") property(List) list1_9e3b8a\n        in(x: -183, y: -121, name: \"list2\") property(List) list2_6c0d7f\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3b8a -> intersection_c7c7e6.left\n        list2_6c0d7f -> intersection_c7c7e6.right\n        instance(x: 360, y: -95) notempty_4f5f2f root.Std_k98ojb.List.NotEmpty {}\n        intersection_c7c7e6.intersection -> notempty_4f5f2f.list\n        notempty_4f5f2f.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) common_element_ac7dfb root.main.common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") common_element {\n        in(x: -172, y: 18, name: \"list1\") property(List) list1_94ca93\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_aa3106\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_20b99a\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_06d2e5 root.Std_k98ojb.Sets.Intersection {}\n        list1_94ca93 -> intersection_06d2e5.left\n        list2_aa3106 -> intersection_06d2e5.right\n        instance(x: 321, y: -20) notempty_9d4f1c root.Std_k98ojb.List.NotEmpty {}\n        intersection_06d2e5.intersection -> notempty_9d4f1c.list\n        notempty_9d4f1c.isEmpty -> output_20b99a\n    }\n\n    \n\n    instance(x: -138, y: -63) common_element_aad0c2 root.main.common_element {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 5, name: \"list\") property(List) list_3a0f9e\n\n        out(x: 1227, y: 2, name: \"output\") property(Bool) output_eb1d8c\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -318, y: 521, name: \"Odd list\") filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 != 0\"\n        }\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"First even number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"First odd number\") ``First even number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_3a0f9e -> filter_f3b46d.list\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        list_3a0f9e -> ``First even number_0b1361``.items\n        find_de624f.item -> sub_852f2e.first\n        ``First even number_0b1361``.item -> sub_852f2e.second\n        sub_852f2e.result -> output_eb1d8c\n    }\n\n    \n\n    instance(x: -291, y: 177) is_consecutive_f53d27 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 5, name: \"list\") property(List) list_9a3f1e\n\n        out(x: 1267, y: -4, name: \"output\") property(Bool) output_eb0c8d\n\n        instance(x: 1052, y: 13) ifexpression_6f5a5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 333, y: 40, name: \"getter_e7d3e9\") getter_e7d3e9 = previous\n        setter(x: 678, y: -283, name: \"setter_6f5b2c\") setter_6f5b2c = previous\n        instance(x: 321, y: -19) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -120, name: \"setter_6f5b2c\") setter_3e9a8d = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_6f5a5f.else -> continue_a96db6\n        ifexpression_6f5a5f.value -> output_eb0c8d\n        ifexpression_6f5a5f.then -> setter_6f5b2c.execute\n        list_9a3f1e -> for_d26972.items\n        for_d26972.item -> ifexpression_6f5a5f.gen_2\n        for_d26972.index -> ifexpression_6f5a5f.gen_0\n        getter_e7d3e9.value -> ifexpression_6f5a5f.gen_1\n        for_d26972.onItem -> ifexpression_6f5a5f.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_6f5b2c.new_value\n        list_9a3f1e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_3e9a8d.new_value\n        execute_90aaec -> setter_3e9a8d.execute\n        setter_3e9a8d.continue -> for_d26972.reset\n        setter_6f5b2c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_1e0d7f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 2, name: \"list\") property(List) list_3f1e9a\n\n        out(x: 1056, y: 5, name: \"output\") property(Bool) output_7b0d8c\n\n        instance(x: 768, y: 76) ifexpression_2f3b7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 350, y: 160, name: \"getter_8e5a9d\") getter_8e5a9d = previous\n        setter(x: 695, y: -313, name: \"setter_7c0f6b\") setter_7c0f6b = previous\n        instance(x: 323, y: -20) for_1e3a2d root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7c0f6b\") setter_d9b8ee = previous\n        instance(x: -275, y: -35) getat_4f1e5a root.Std_k98ojb.List.GetAt {}\n        ifexpression_2f3b7c.else -> continue_8d0a9c\n        ifexpression_2f3b7c.value -> output_7b0d8c\n        ifexpression_2f3b7c.then -> setter_7c0f6b.execute\n        list_3f1e9a -> for_1e3a2d.items\n        for_1e3a2d.item -> ifexpression_2f3b7c.gen_2\n        for_1e3a2d.index -> ifexpression_2f3b7c.gen_0\n        getter_8e5a9d.value -> ifexpression_2f3b7c.gen_1\n        for_1e3a2d.onItem -> ifexpression_2f3b7c.execute\n        for_1e3a2d.done -> continue_8d0a9c\n        for_1e3a2d.item -> setter_7c0f6b.new_value\n        list_3f1e9a -> getat_4f1e5a.list\n        0 -> getat_4f1e5a.index\n        getat_4f1e5a.itemAtIndex -> setter_d9b8ee.new_value\n        execute_2c6d1c -> setter_d9b8ee.execute\n        setter_d9b8ee.continue -> for_1e3a2d.reset\n        setter_7c0f6b.continue -> for_1e3a2d.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_c5b9ed root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 5, name: \"list\") property(List) list_3a1f0e\n\n        out(x: 1047, y: -6, name: \"output\") property(Bool) output_8c9b2d\n\n        instance(x: 107, y: 13) sort_1e4b7c root.Std_k98ojb.List.Sort {}\n        instance(x: 427, y: 11) map_3f0a5c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 730, y: -2) sub_8d9a1c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1016, y: 7) alltrue_4e9c3f root.Std_k98ojb.List.AllTrue {}\n        instance(x: 1030, y: -16) and_5f9c2d root.Std_k98ojb.Logic.And {}\n        list_3a1f0e -> sort_1e4b7c.list\n        sort_1e4b7c.sortedList -> map_3f0a5c.items\n        func() {\n            in(x: -121, y: 44, name: \"current\") property(Number) current_8d9a6f\n\n            out(x: 333, y: 27, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: 31) sub_1e4b7c root.Std_k98ojb.Math.Sub {}\n            1 -> sub_1e4b7c.second\n            current_8d9a6f -> sub_1e4b7c.first\n            sub_1e4b7c.result -> _7dd980\n        } -> map_3f0a5c.handler\n        map_3f0a5c.output_list -> sub_8d9a1c.list\n        sort_1e4b7c.sortedList -> sub_8d9a1c.list\n        func() {\n            in(x: -121, y: 44, name: \"current\") property(Number) current_8d9a6f\n\n            out(x: 333, y: 27, name: \"\") property(Bool) _7dd980\n\n            instance(x: 92, y: 31) equal_1e4b7c root.Std_k98ojb.Math.Equal {}\n            map_3f0a5c.items -> equal_1e4b7c.left\n            sub_8d9a1c.list -> equal_1e4b7c.right\n            current_8d9a6f -> equal_1e4b7c.gen_0\n            current_8d9a6f -> equal_1e4b7c.gen_1\n            equal_1e4b7c.result -> _7dd980\n        } -> alltrue_4e9c3f.predicate\n        map_3f0a5c.output_list -> and_5f9c2d.left\n        sort_1e4b7c.sortedList -> and_5f9c2d.right\n        and_5f9c2d.result -> output_8c9b2d\n    }\n\n    \n\n    instance(x: -71, y: 119) is_consecutive_6a3c4f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 3, name: \"list\") property(List) list_1e6d9f\n\n        out(x: 1230, y: 2, name: \"output\") property(Bool) output_8b7c5a\n\n        instance(x: 752, y: -10) ifexpression_c4e3c8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 73, name: \"getter_9a2f5d\") getter_9a2f5d = previous\n        setter(x: 679, y: -263, name: \"setter_7e3c6b\") setter_7e3c6b = previous\n        instance(x: 321, y: -140) for_e8d1ee root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -241, name: \"setter_7e3c6b\") setter_2a5f4e = previous\n        instance(x: -275, y: -155) getat_9a8d8f root.Std_k98ojb.List.GetAt {}\n        ifexpression_c4e3c8.else -> output_8b7c5a\n        ifexpression_c4e3c8.value -> output_8b7c5a\n        ifexpression_c4e3c8.then -> setter_7e3c6b.execute\n        list_1e6d9f -> for_e8d1ee.items\n        for_e8d1ee.item -> ifexpression_c4e3c8.gen_2\n        for_e8d1ee.index -> ifexpression_c4e3c8.gen_0\n        getter_9a2f5d.value -> ifexpression_c4e3c8.gen_1\n        for_e8d1ee.onItem -> ifexpression_c4e3c8.execute\n        for_e8d1ee.done -> output_8b7c5a\n        for_e8d1ee.item -> setter_7e3c6b.new_value\n        list_1e6d9f -> getat_9a8d8f.list\n        0 -> getat_9a8d8f.index\n        getat_9a8d8f.itemAtIndex -> setter_2a5f4e.new_value\n        setter_2a5f4e.continue -> for_e8d1ee.reset\n        setter_7e3c6b.continue -> for_e8d1ee.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_f9f7e0 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 2, name: \"list\") property(List) list_3e8f1a\n\n        out(x: 1269, y: -5, name: \"output\") property(Bool) output_e6c7b0\n\n        instance(x: 0, y: 0) for_4a2d1c root.Std_k98ojb.Std.For {}\n        instance(x: 1058, y: 3) and_9f1e5c root.Std_k98ojb.Logic.And {}\n        instance(x: 1076, y: -157) lessthan_0f7b4a root.Std_k98ojb.Math.LessThan {}\n        instance(x: 1102, y: -317) expression_8d9f3e root.Std_k98ojb.Math.Expression {\n            expression: \"list[index + 1] == list[index] + 1\"\n        }\n        instance(x: 1094, y: -104) expression_ba6c5c root.Std_k98ojb.Math.Expression {\n            expression: \"index < len(list) - 1\"\n        }\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_4a2d1c.handler\n        list_3e8f1a -> for_4a2d1c.items\n        expression_ba6c5c.result -> lessthan_0f7b4a.left\n        0 -> lessthan_0f7b4a.right\n        for_4a2d1c.index -> expression_ba6c5c.gen_0\n        list_3e8f1a -> expression_ba6c5c.list\n        for_4a2d1c.index -> expression_8d9f3e.gen_0\n        list_3e8f1a -> expression_8d9f3e.list\n        lessthan_0f7b4a.result -> and_9f1e5c.left\n        expression_8d9f3e.result -> and_9f1e5c.right\n        for_4a2d1c.onItem -> and_9f1e5c.execute\n        and_9f1e5c.result -> output_e6c7b0\n        for_4a2d1c.done -> output_e6c7b0\n    }\n\n    \n\n    instance(x: -55, y: 529) is_consecutive_3f9c8f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 5, name: \"list\") property(List) list_1a9d8e\n\n        out(x: 593, y: -4, name: \"output\") property(Bool) output_3c2f0b\n\n        instance(x: 0, y: 0) for_7b6f5c root.Std_k98ojb.Std.For {}\n        instance(x: 357, y: 46) lessthan_f9a8d1 root.Std_k98ojb.Math.LessThan {}\n        instance(x: 357, y: -55) and_4e2f0f root.Std_k98ojb.Logic.And {}\n        instance(x: 637, y: 45) sub_3c7f6c root.Std_k98ojb.Math.Sub {}\n        instance(x: 637, y: -56) equal_f1a9d8 root.Std_k98ojb.Logic.Equal {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_7b6f5c.handler\n        list_1a9d8e -> for_7b6f5c.items\n        sub_3c7f6c.second -> equal_f1a9d8.left\n        1 -> sub_3c7f6c.first\n        for_7b6f5c.item -> sub_3c7f6c.second\n        lessthan_f9a8d1.result -> and_4e2f0f.right\n        equal_f1a9d8.result -> and_4e2f0f.left\n        0 -> for_7b6f5c.index\n        for_7b6f5c.onItem -> lessthan_f9a8d1.execute\n        list_1a9d8e -> lessthan_f9a8d1.right\n        for_7b6f5c.item -> lessthan_f9a8d1.left\n        and_4e2f0f.result -> output_3c2f0b\n        for_7b6f5c.done -> output_3c2f0b\n    }\n\n    \n\n    instance(x: -55, y: 529) is_consecutive_2c856f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -285, y: 2, name: \"list\") property(List) list_4f8a9e\n\n        out(x: 1217, y: 5, name: \"output\") property(Bool) output_1c0d3b\n\n        instance(x: 774, y: 76) ifexpression_6e2c5e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_7f3a9d\") getter_7f3a9d = previous\n        setter(x: 679, y: -313, name: \"setter_b8c6b5\") setter_b8c6b5 = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_b8c6b5\") setter_9e1f3d = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_6e2c5e.else -> continue_a96db6\n        ifexpression_6e2c5e.value -> output_1c0d3b\n        ifexpression_6e2c5e.then -> setter_b8c6b5.execute\n        list_4f8a9e -> for_d26972.items\n        for_d26972.item -> ifexpression_6e2c5e.gen_2\n        for_d26972.index -> ifexpression_6e2c5e.gen_0\n        getter_7f3a9d.value -> ifexpression_6e2c5e.gen_1\n        for_d26972.onItem -> ifexpression_6e2c5e.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_b8c6b5.new_value\n        list_4f8a9e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9e1f3d.new_value\n        execute_90aaec -> setter_9e1f3d.execute\n        setter_9e1f3d.continue -> for_d26972.reset\n        setter_b8c6b5.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_7a0c4c root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 5, name: \"list\") property(List) list_3e8a0f\n\n        out(x: 1229, y: -1, name: \"output\") property(Bool) output_6b2d7c\n\n        instance(x: 772, y: 25) ifexpression_5e4f2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 148, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -333, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -19) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_5e4f2c.else -> output_6b2d7c\n        ifexpression_5e4f2c.value -> output_6b2d7c\n        ifexpression_5e4f2c.then -> setter_9d4f1c.execute\n        list_3e8a0f -> for_d26972.items\n        for_d26972.item -> ifexpression_5e4f2c.gen_2\n        for_d26972.index -> ifexpression_5e4f2c.gen_0\n        getter_b280eb.value -> ifexpression_5e4f2c.gen_1\n        for_d26972.onItem -> ifexpression_5e4f2c.execute\n        for_d26972.done -> output_6b2d7c\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3e8a0f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_f5a7a8 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 0, name: \"list\") property(List) list_1a3e8f\n\n        out(x: 1229, y: -7, name: \"output\") property(Bool) output_eb2c5d\n\n        instance(x: 1046, y: 12) ifexpression_4e0b1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 529, y: 79, name: \"getter_7c3d9f\") getter_7c3d9f = previous\n        setter(x: 1014, y: -312, name: \"setter_8b0a2e\") setter_8b0a2e = previous\n        instance(x: 496, y: -21) for_5b6a1 root.Std_k98ojb.Std.For {}\n        setter(x: -3, y: -122, name: \"setter_8b0a2e\") setter_9f4c1d = previous\n        instance(x: -277, y: -36) getat_7f5a6f root.Std_k98ojb.List.GetAt {}\n        ifexpression_4e0b1.else -> continue_9e3c9c\n        ifexpression_4e0b1.value -> output_eb2c5d\n        ifexpression_4e0b1.then -> setter_8b0a2e.execute\n        list_1a3e8f -> for_5b6a1.items\n        for_5b6a1.item -> ifexpression_4e0b1.gen_2\n        for_5b6a1.index -> ifexpression_4e0b1.gen_0\n        getter_7c3d9f.value -> ifexpression_4e0b1.gen_1\n        for_5b6a1.onItem -> ifexpression_4e0b1.execute\n        for_5b6a1.done -> continue_9e3c9c\n        for_5b6a1.item -> setter_8b0a2e.new_value\n        list_1a3e8f -> getat_7f5a6f.list\n        0 -> getat_7f5a6f.index\n        getat_7f5a6f.itemAtIndex -> setter_9f4c1d.new_value\n        execute_2b7e0e -> setter_9f4c1d.execute\n        setter_9f4c1d.continue -> for_5b6a1.reset\n        setter_8b0a2e.continue -> for_5b6a1.next\n    }\n\n    \n\n    instance(x: -83, y: 59) is_consecutive_3b7b2 root.main.is_consecutive {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 20, name: \"sublist\") property(List) sublist_0f8a9e\n        in(x: -292, y: -150, name: \"list\") property(List) list_1c7b5d\n\n        out(x: 1116, y: -115, name: \"output\") property(Bool) output_4e2f9c\n\n        instance(x: -93, y: -152, name: \"sublist length\") length_3a8b0c root.Std_k98ojb.List.Length {}\n        instance(x: 146, y: -153, name: \"list length\") length_1d7e4f root.Std_k98ojb.List.Length {}\n        instance(x: 362, y: -154) greaterthan_3a9a2c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 577, y: -153) sub_5f8f0d root.Std_k98ojb.Math.Sub {}\n        instance(x: 797, y: -152) greaterthan_7e6b3c root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        instance(x: 1012, y: -151) for_d9a4d8 root.Std_k98ojb.Std.For {}\n        sublist_0f8a9e -> length_3a8b0c.list\n        list_1c7b5d -> length_1d7e4f.list\n        length_3a8b0c.length -> greaterthan_3a9a2c.left\n        length_1d7e4f.length -> greaterthan_3a9a2c.right\n        greaterthan_3a9a2c.result -> sub_5f8f0d.first\n        1 -> sub_5f8f0d.second\n        sub_5f8f0d.result -> for_d9a4d8.items\n        list_1c7b5d -> for_d9a4d8.items\n        func() {\n            in(x: -193, y: 47, name: \"index\") property(Number) index_2e6b9c\n\n            out(x: 704, y: 48, name: \"output\") property(Bool) output_7f1a3d\n\n            instance(x: 225, y: 54) slice_5a0a9c root.Std_k98ojb.List.Slice {}\n            instance(x: 461, y: 53) equal_4e6a8c root.Std_k98ojb.Logic.Equal {}\n            index_2e6b9c -> slice_5a0a9c.start\n            sublist_0f8a9e.length -> slice_5a0a9c.end\n            for_d9a4d8.item -> slice_5a0a9c.list\n            slice_5a0a9c.slice -> equal_4e6a8c.left\n            sublist_0f8a9e -> equal_4e6a8c.right\n            equal_4e6a8c.result -> output_7f1a3d\n        } -> for_d9a4d8.onItem\n        func() {\n            in(x: -193, y: 47, name: \"index\") property(Number) index_2e6b9c\n\n            out(x: 704, y: 48, name: \"output\") property(Bool) output_7f1a3d\n\n            instance(x: 225, y: 54) slice_5a0a9c root.Std_k98ojb.List.Slice {}\n            instance(x: 461, y: 53) equal_4e6a8c root.Std_k98ojb.Logic.Equal {}\n            index_2e6b9c -> slice_5a0a9c.start\n            sublist_0f8a9e.length -> slice_5a0a9c.end\n            for_d9a4d8.item -> slice_5a0a9c.list\n            slice_5a0a9c.slice -> equal_4e6a8c.left\n            sublist_0f8a9e -> equal_4e6a8c.right\n            equal_4e6a8c.result -> output_7f1a3d\n        } -> for_d9a4d8.handler\n        greaterthan_7e6b3c.result -> output_4e2f9c\n        for_d9a4d8.index -> greaterthan_7e6b3c.left\n        0 -> greaterthan_7e6b3c.right\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_a1c5f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 11, name: \"sublist\") property(List) sublist_3f1a8e\n        in(x: -294, y: -175, name: \"list\") property(List) list_0c7b9d\n\n        out(x: 557, y: -96, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        sublist_3f1a8e -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_0c7b9d -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        sublist_3f1a8e -> length_8166b0.list\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_2c5d4 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 10, name: \"sublist\") property(List) sublist_2f1a8e\n        in(x: -285, y: -139, name: \"list\") property(List) list_7c9d3b\n\n        out(x: 558, y: -120, name: \"output\") property(Bool) output_e5f6ef\n\n        instance(x: -95, y: -125, name: \"is sublist\") filter_1a2e4c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: 0, name: \"current\") property(List) current_7f8d9\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_1a2e4c.handler\n        list_7c9d3b -> filter_1a2e4c.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> sublist_2f1a8e\n        filter_1a2e4c.output_list -> is_sublist\n        instance(x: -95, y: -125) contains_32727d root.Std_k98ojb.List.Contains {}\n        sublist_2f1a8e -> contains_32727d.list\n        is_sublist -> contains_32727d.item\n        contains_32727d.is_contained -> output_e5f6ef\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_a7b3c0 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 20, name: \"sublist\") property(List) sublist_2a1f6b\n        in(x: -286, y: -160, name: \"list\") property(List) list_0c9e7d\n\n        out(x: 1053, y: -97, name: \"output\") property(Bool) output_e8f4ea\n\n        instance(x: -94, y: -157, name: \"length of sublist\") length_5a2b1f root.Std_k98ojb.List.Length {}\n        instance(x: 146, y: -96) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 346, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        sublist_2a1f6b -> length_5a2b1f.list\n        list_0c9e7d -> contains_32727d.list\n        func() {\n            in(x: 10, y: -25, name: \"current\") property(List) current_3a4a8\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) slice_5e9f1c root.Std_k98ojb.List.Slice {}\n            instance(x: 285, y: -25) length_6a2d7f root.Std_k98ojb.List.Length {}\n            instance(x: 465, y: -24) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            current_3a4a8 -> slice_5e9f1c.list\n            0 -> slice_5e9f1c.start\n            length_6a2d7f.length -> slice_5e9f1c.end\n            sublist_2a1f6b -> length_6a2d7f.list\n            slice_5e9f1c.slice -> equal_f89569.left\n            sublist_2a1f6b -> equal_f89569.right\n            equal_f89569.result -> bool_4524be\n        } -> contains_32727d.handler\n        length_5a2b1f.length -> equal_f89569.left\n        0 -> equal_f89569.right\n        equal_f89569.result -> output_e8f4ea\n    }\n\n    \n\n    instance(x: -92, y: 59) is_sublist_7c6e9d root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 20, name: \"sublist\") property(List) sublist_1f9d5a\n        in(x: -305, y: -110, name: \"list\") property(List) list_7e0b3c\n\n        out(x: 1056, y: -55, name: \"output\") property(Bool) output_8a2a4d\n\n        instance(x: 10, y: -11, name: \"is sublist\") filter_9f5c7f root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -0, y: -25, name: \"current\") property(List) current_8a1e4d\n\n            out(x: 707, y: -34, name: \"bool\") property(Bool) bool_5c7f3b\n\n            instance(x: 227, y: -31) contains_6b9c0c root.Std_k98ojb.List.Contains {}\n            sublist_1f9d5a -> contains_6b9c0c.list\n            current_8a1e4d -> contains_6b9c0c.item\n        } -> filter_9f5c7f.handler\n        list_7e0b3c -> filter_9f5c7f.items\n        instance(x: 728, y: -55) not_2a8a9c root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: 49, name: \"current\") property(List) current_1e6d0f\n\n            out(x: 707, y: 28, name: \"bool\") property(Bool) bool_5c7f3b\n\n            instance(x: 227, y: 31) contains_6b9c0c root.Std_k98ojb.List.Contains {}\n            sublist_1f9d5a -> contains_6b9c0c.list\n            current_1e6d0f -> contains_6b9c0c.item\n        } -> filter_9f5c7f.handler\n        list_7e0b3c -> filter_9f5c7f.items\n        instance(x: 728, y: -55) not_2a8a9c root.Std_k98ojb.Logic.Not {}\n        filter_9f5c7f.output_list -> not_2a8a9c.input\n        not_2a8a9c.result -> output_8a2a4d\n    }\n\n    \n\n    instance(x: -296, y: 59) is_sublist_1b3e9c root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 30, name: \"sublist\") property(List) sublist_3f8a1e\n        in(x: -278, y: -140, name: \"list\") property(List) list_0c9b5d\n\n        out(x: 1042, y: -107, name: \"output\") property(Bool) output_4a7a6d\n\n        instance(x: 110, y: -137, name: \"find sublist in list\") find_f8f3a1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -191, y: -67, name: \"current\") property(List) current_9e7c0d\n\n            out(x: 701, y: -68, name: \"bool\") property(Bool) bool_1f8a3b\n\n            instance(x: 111, y: -52) contains_d5d4cd root.Std_k98ojb.List.Contains {}\n            sublist_3f8a1e -> contains_d5d4cd.list\n            current_9e7c0d -> contains_d5d4cd.item\n            contains_d5d4cd.is_contained -> bool_1f8a3b\n        } -> find_f8f3a1.predicate\n        list_0c9b5d -> find_f8f3a1.items\n        find_f8f3a1.item -> output_4a7a6d\n    }\n\n    \n\n    instance(x: -291, y: 59) is_sublist_2e1c1e root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 20, name: \"sublist\") property(List) sublist_1a0d8f\n        in(x: -277, y: -157, name: \"list\") property(List) list_7c2e9b\n\n        out(x: 1056, y: -127, name: \"output\") property(Bool) output_e5f3ad\n\n        instance(x: 1021, y: -131) contains_4a8d0 root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_9e7c\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_1d0f\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_3a8b\n\n            instance(x: 226, y: 56) slice_f9c5 root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) contains_1e0d root.Std_k98ojb.List.Contains {}\n            list_7c2e9b -> slice_f9c5.list\n            _index_1d0f -> slice_f9c5.start\n            slice_f9c5.slice -> contains_1e0d.list\n            sublist_1a0d8f -> contains_1e0d.item\n            contains_1e0d.is_contained -> output_3a8b\n        } -> contains_4a8d0.handler\n        list_7c2e9b -> contains_4a8d0.list\n        sublist_1a0d8f -> contains_4a8d0.item\n        contains_4a8d0.is_contained -> output_e5f3ad\n    }\n\n    \n\n    instance(x: -287, y: 29) is_sublist_f7c9 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -275, y: 30, name: \"sublist\") property(List) sublist_0f1a8e\n        in(x: -277, y: -150, name: \"list\") property(List) list_7c2d3b\n\n        out(x: 1065, y: -120, name: \"output\") property(Bool) output_e9a6ec\n\n        instance(x: 0, y: -1, name: \"find sublist in list\") find_sublist_in_list root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -231, y: -25, name: \"item\") property(List) item_9e7c8f\n\n            out(x: 246, y: -37, name: \"\") property(Bool) _1a2d6f\n\n            instance(x: 76, y: -32) contains_5b3c4c root.Std_k98ojb.List.Contains {}\n            sublist_0f1a8e -> contains_5b3c4c.list\n            item_9e7c8f -> contains_5b3c4c.item\n            contains_5b3c4c.is_contained -> _1a2d6f\n        } -> find_sublist_in_list.predicate\n        list_7c2d3b -> find_sublist_in_list.items\n        find_sublist_in_list.item -> output_e9a6ec\n    }\n\n    \n\n    instance(x: -277, y: 30) is_sublist_f1e8f0 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 11, name: \"sublist\") property(List) sublist_9f8d6a\n        in(x: -298, y: -160, name: \"list\") property(List) list_1c0e4b\n\n        out(x: 1015, y: -105, name: \"output\") property(Bool) output_e2f7ee\n\n        instance(x: -92, y: -155, name: \"sublist length\") length_9d3a6 root.Std_k98ojb.List.Length {}\n        instance(x: 146, y: -156, name: \"list length\") length_c5c8e4 root.Std_k98ojb.List.Length {}\n        instance(x: 362, y: -155) sub_1f0b9d root.Std_k98ojb.List.Slice {}\n        instance(x: 577, y: -154) equal_3a7f6c root.Std_k98ojb.Logic.Equal {}\n        sublist_9f8d6a -> length_9d3a6.list\n        list_1c0e4b -> length_c5c8e4.list\n        func() {\n            in(x: -30, y: 39, name: \"index\") property(Number) index_7f2f2\n\n            out(x: 704, y: 49, name: \"\") property(Bool) _1d0a9b\n\n            instance(x: 225, y: 56) sub_3c6e8 root.Std_k98ojb.List.Slice {}\n            instance(x: 460, y: 51) equal_f5f7c2 root.Std_k98ojb.Logic.Equal {}\n            index_7f2f2 -> sub_3c6e8.start\n            list_1c0e4b -> sub_3c6e8.list\n            length_9d3a6.length -> sub_3c6e8.end\n            sublist_9f8d6a -> equal_f5f7c2.left\n            sub_3c6e8.slice -> equal_f5f7c2.right\n            equal_f5f7c2.result -> _1d0a9b\n        } -> for_d26972.handler\n        length_c5c8e4.length -> for_d26972.items\n        func() {\n            in(x: -30, y: 39, name: \"index\") property(Number) index_7f2f2\n\n            out(x: 704, y: 49, name: \"\") property(Bool) _1d0a9b\n\n            instance(x: 225, y: 56) sub_3c6e8 root.Std_k98ojb.List.Slice {}\n            instance(x: 460, y: 51) equal_f5f7c2 root.Std_k98ojb.Logic.Equal {}\n            index_7f2f2 -> sub_3c6e8.start\n            list_1c0e4b -> sub_3c6e8.list\n            length_9d3a6.length -> sub_3c6e8.end\n            sublist_9f8d6a -> equal_f5f7c2.left\n            sub_3c6e8.slice -> equal_f5f7c2.right\n            equal_f5f7c2.result -> _1d0a9b\n        } -> for_d26972.handler\n        length_c5c8e4.length -> for_d26972.items\n        instance(x: -303, y: -205) find_3a9a6 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_81298e\n\n            out(x: 521, y: -28, name: \"\") property(Bool) _7dd980\n\n            instance(x: 74, y: -23) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> notequal_cb8a55.left\n            false -> notequal_cb8a55.right\n            notequal_cb8a55.result -> _7dd980\n        } -> find_3a9a6.predicate\n        for_d26972.output_list -> find_3a9a6.items\n        find_3a9a6.item -> equal_3a7f6c.left\n        true -> equal_3a7f6c.right\n        equal_3a7f6c.result -> output_e2f7ee\n    }\n\n    \n\n    instance(x: -291, y: 11) is_sublist_9b8d1 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 5, name: \"sublist\") property(List) sublist_1d9a3f\n        in(x: -292, y: -139, name: \"list\") property(List) list_2c7b4e\n\n        out(x: 1060, y: -111, name: \"output\") property(Bool) output_5f8c6f\n\n        instance(x: -88, y: -137, name: \"is sublist\") filter_1d3a9f root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -0, y: 18, name: \"item\") property(List) item_7c8e5\n            out(x: 704, y: 2, name: \"\") property(Bool) _3d6a4f\n\n            instance(x: 227, y: 19) contains_9b0c9 root.Std_k98ojb.List.Contains {}\n            func() {\n                in(x: -30, y: -16, name: \"current\") property(List) current_1e8b7d\n                out(x: 705, y: -24, name: \"\") property(Bool) _3d6a4f\n\n                instance(x: 227, y: -17) equal_9c0d2 root.Std_k98ojb.Logic.Equal {}\n                current_1e8b7d -> equal_9c0d2.left\n                item_7c8e5 -> equal_9c0d2.right\n                equal_9c0d2.result -> _3d6a4f\n            } -> filter_1d3a9f.handler\n            sublist_1d9a3f -> contains_9b0c9.list\n            item_7c8e5 -> contains_9b0c9.item\n            contains_9b0c9.is_contained -> _3d6a4f\n        } -> filter_1d3a9f.handler\n        list_2c7b4e -> filter_1d3a9f.items\n        func() {\n            in(x: -30, y: 18, name: \"current\") property(List) current_1e8b7d\n\n            out(x: 705, y: 2, name: \"\") property(Bool) _3d6a4f\n\n            instance(x: 227, y: 19) contains_9b0c9 root.Std_k98ojb.List.Contains {}\n            sublist_1d9a3f -> contains_9b0c9.list\n            current_1e8b7d -> contains_9b0c9.item\n            contains_9b0c9.is_contained -> _3d6a4f\n        } -> filter_1d3a9f.predicate\n        filter_1d3a9f.output_list -> output_5f8c6f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ae7b2 root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -280, y: 2, name: \"list\") property(List) list_3a1f9e\n        in(x: -281, y: -224, name: \"execute\") trigger() execute_7b8c0d\n\n        out(x: 1225, y: 11, name: \"continue\") trigger() continue_4f6c1d\n        out(x: 1219, y: 146, name: \"output\") property(Number) output_ea3e1f\n\n        instance(x: -0, y: -120, name: \"previous\") setter_7b8c0d root.Std_k98ojb.List.SetAt {\n            list: list\n            index: 0\n            value: 1\n        }\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: -275, y: -35, name: \"getter_ce2a48\") getter_ce2a48 = list\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_4f6c1d\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3a1f9e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_4f6c1d\n        for_d26972.item -> setter_9d4f1c.new_value\n        getter_ce2a48.value -> getat_ce2a48.list\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_7b8c0d.value\n        execute_7b8c0d -> setter_7b8c0d.execute\n        setter_7b8c0d.continue -> for_d26972.reset\n        ifexpression_875761.value -> output_ea3e1f\n        getter_ce2a48.value -> list\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_7b8c0d root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 2, name: \"list\") property(List) list_1a9f8e\n        in(x: -284, y: -226, name: \"execute\") trigger() execute_5b7c6d\n\n        out(x: 1213, y: 0, name: \"continue\") trigger() continue_e4a2ee\n        out(x: 1181, y: 152, name: \"output\") property(Number) output_9e7f8b\n\n        instance(x: -5, y: -10, name: \"index\") expression_6c3d8e root.Std_k98ojb.Math.Expression {\n            expression: \"i + 1\"\n        }\n        getter(x: 0, y: 0, name: \"getter_e9a2f7\") getter_e9a2f7 = i\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = i\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 322, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_8e3c0f = i\n        expression_6c3d8e.gen_0 -> expression_6c3d8e.result\n        getter_e9a2f7.value -> expression_6c3d8e.gen_0\n        list_1a9f8e -> for_d26972.items\n        for_d26972.item -> getat_ce2a48.list\n        expression_6c3d8e.result -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> output_9e7f8b\n        execute_5b7c6d -> setter_9d4f1c.execute\n        0 -> setter_9d4f1c.new_value\n        for_d26972.onItem -> for_d26972.next\n        for_d26972.done -> continue_e4a2ee\n        list_1a9f8e -> getat_ce2a48.list\n        expression_6c3d8e.result -> setter_8e3c0f.new_value\n        for_d26972.index -> getter_e9a2f7.value\n        setter_9d4f1c.continue -> for_d26972.reset\n        setter_8e3c0f.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -34, y: 127) find_missing_6e6bfd root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -271, y: 0, name: \"list\") property(List) list_3e9f8d\n        in(x: -270, y: -232, name: \"execute\") trigger() execute_1b7a2c\n\n        out(x: 1024, y: -230, name: \"continue\") trigger() continue_e5f0ee\n        out(x: 1016, y: 30, name: \"output\") property(Number) output_3d9e8e\n\n        instance(x: 0, y: 0) for_1b2c7a root.Std_k98ojb.Std.For {}\n        getter(x: -187, y: 166, name: \"getter_6f5f7f\") getter_6f5f7f = index\n        setter(x: 755, y: -158, name: \"setter_e8d3c2\") setter_e8d3c2 = index\n        instance(x: 440, y: -105) ifexpression_9a1e9b root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        list_3e9f8d -> for_1b2c7a.items\n        execute_1b7a2c -> for_1b2c7a.reset\n        getter_6f5f7f.value -> output_3d9e8e\n        for_1b2c7a.done -> continue_e5f0ee\n        ifexpression_9a1e9b.then -> setter_e8d3c2.execute\n        for_1b2c7a.onItem -> ifexpression_9a1e9b.execute\n        for_1b2c7a.index -> ifexpression_9a1e9b.gen_0\n        for_1b2c7a.item -> ifexpression_9a1e9b.gen_1\n        0 -> setter_e8d3c2.new_value\n        setter_e8d3c2.continue -> continue_e5f0ee\n        ifexpression_9a1e9b.else -> for_1b2c7a.next\n    }\n\n    \n\n    instance(x: -11, y: 12) find_missing_4e6a6c root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -271, y: 2, name: \"list\") property(List) list_3a9f5e\n        in(x: -278, y: -223, name: \"execute\") trigger() execute_7c8b1d\n\n        out(x: 1016, y: -225, name: \"continue\") trigger() continue_e4f0aa\n        out(x: 1022, y: 147, name: \"output\") property(Number) output_5a9e8f\n\n        instance(x: 1, y: 0) for_7c6b3d root.Std_k98ojb.Std.For {}\n        getter(x: 339, y: 166, name: \"getter_e2f4ec\") getter_e2f4ec = index\n        setter(x: 683, y: -158, name: \"setter_9e7c8a\") setter_9e7c8a = index\n        instance(x: 444, y: -107) ifexpression_1b6d0e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 178, y: 160, name: \"getter_e2f4ec\") getter_9a7c8a = previous\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_1b6d0e.else -> continue_e4f0aa\n        ifexpression_1b6d0e.value -> output_5a9e8f\n        ifexpression_1b6d0e.then -> setter_9e7c8a.execute\n        list_3a9f5e -> for_7c6b3d.items\n        for_7c6b3d.item -> ifexpression_1b6d0e.gen_2\n        for_7c6b3d.index -> ifexpression_1b6d0e.gen_0\n        getter_e2f4ec.value -> ifexpression_1b6d0e.gen_1\n        for_7c6b3d.onItem -> ifexpression_1b6d0e.execute\n        for_7c6b3d.done -> continue_e4f0aa\n        for_7c6b3d.item -> setter_9e7c8a.new_value\n        list_3a9f5e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_7c8b1d -> setter_38e107.execute\n        setter_38e107.continue -> for_7c6b3d.reset\n        setter_9e7c8a.continue -> for_7c6b3d.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_f1f4d5 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -279, y: 2, name: \"list\") property(List) list_9e6b5f\n        in(x: -276, y: -232, name: \"execute\") trigger() execute_1a8d3c\n\n        out(x: 1020, y: -233, name: \"continue\") trigger() continue_7b2e4e\n        out(x: 1015, y: 30, name: \"output\") property(Number) output_e9f1ad\n\n        instance(x: 0, y: 0) for_3c8d3a root.Std_k98ojb.Std.For {}\n        getter(x: -140, y: 152, name: \"getter_7e6d2d\") getter_7e6d2d = index\n        setter(x: 560, y: -247, name: \"setter_e1c8a9\") setter_e1c8a9 = index\n        instance(x: 768, y: -75) ifexpression_5f0b4f root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        list_2bbadf -> for_3ed7e6.items\n        execute_076885 -> setter_6a6081.execute\n        getter_cc0721.value -> index_fc05e7\n        for_3ed7e6.done -> continue_9f5f84\n        setter_6a6081.continue -> for_3ed7e6.reset\n        for_3ed7e6.onItem -> ifexpression_6c15d4.execute\n        ifexpression_6c15d4.then -> setter_60cfcd.execute\n        for_3ed7e6.index -> setter_60cfcd.new_value\n        -1 -> setter_6a6081.new_value\n        list_2bbadf -> for_9ed60a.items\n        elem_94ca57 -> ifexpression_6c15d4.gen_0\n        for_9ed60a.item -> ifexpression_6c15d4.gen_1\n        -1 -> setter_6a6081.new_value\n        execute_076885 -> setter_6a6081.execute\n        getter_cc0721.value -> index_fc05e7\n        for_9ed60a.done -> continue_9f5f84\n        setter_6a6081.continue -> for_9ed60a.reset\n        for_9ed60a.onItem -> ifexpression_6c15d4.execute\n        ifexpression_6c15d4.then -> setter_60cfcd.execute\n        for_9ed60a.index -> setter_60cfcd.new_value\n        ifexpression_6c15d4.else -> for_9ed60a.next\n        setter_60cfcd.continue -> for_9ed60a.next\n\n        list_9e6b5f -> for_3c8d3a.items\n        execute_1a8d3c -> getter_7e6d2d.execute\n        0 -> getter_7e6d2d.value\n        ifexpression_5f0b4f.then -> setter_e1c8a9.execute\n        for_3c8d3a.index -> setter_e1c8a9.new_value\n        for_3c8d3a.item -> ifexpression_5f0b4f.gen_2\n        getter_7e6d2d.value -> ifexpression_5f0b4f.gen_0\n        for_3c8d3a.index -> ifexpression_5f0b4f.gen_1\n        setter_e1c8a9.continue -> continue_7b2e4e\n        ifexpression_5f0b4f.value -> output_e9f1ad\n        for_3c8d3a.onItem -> ifexpression_5f0b4f.execute\n        ifexpression_5f0b4f.else -> for_3c8d3a.next\n    }\n\n    \n\n    instance(x: -175, y: 160) find_missing_7e6f1e root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 2, name: \"list\") property(List) list_1a8f5e\n        out(x: 340, y: 77, name: \"output\") property(Number) output_7b9c3d\n\n        instance(x: 772, y: 76) for_6f4a2f root.Std_k98ojb.Std.For {}\n        getter(x: 704, y: 170, name: \"getter_1e8b5f\") getter_1e8b5f = index\n        setter(x: 955, y: -158, name: \"setter_e6a9d2\") setter_e6a9d2 = index\n        instance(x: 551, y: -105) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        getter_1e8b5f.value -> output_7b9c3d\n        list_1a8f5e -> for_6f4a2f.items\n        for_6f4a2f.onItem -> if_7c284f.execute\n        equal_aabb6e.result -> if_7c284f.predicate\n        for_6f4a2f.item -> equal_aabb6e.right\n        getter_1e8b5f.value -> equal_aabb6e.left\n        if_7c284f.else -> for_6f4a2f.next\n        if_7c284f.then -> setter_e6a9d2.execute\n        for_6f4a2f.index -> setter_e6a9d2.new_value\n        for_6f4a2f.done -> output_7b9c3d\n    }\n\n    \n\n    instance(x: 777, y: 760) find_missing_5e8c0f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 1, name: \"list\") property(List) list_9e8b5f\n        in(x: -284, y: -240, name: \"execute\") trigger() execute_7c6d4a\n\n        out(x: 593, y: -239, name: \"continue\") trigger() continue_e1f3ee\n        out(x: 594, y: 47, name: \"output\") property(Number) output_9e8b5f\n\n        instance(x: 0, y: 0) for_7c6d4a root.Std_k98ojb.Std.For {}\n        getter(x: -1, y: 44, name: \"getter_2e7f6f\") getter_2e7f6f = index\n        setter(x: 115, y: -272, name: \"setter_9c4d8a\") setter_9c4d8a = index\n        instance(x: 339, y: -20) ifexpression_5b3b2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 332, y: 161, name: \"getter_9e8b5f\") getter_9e8b5f = previous\n        setter(x: 678, y: -314, name: \"setter_9e8b5f\") setter_9e8b5f = previous\n        instance(x: -274, y: -30) getat_2d3a1c root.Std_k98ojb.List.GetAt {}\n        ifexpression_5b3b2f.else -> continue_e1f3ee\n        ifexpression_5b3b2f.then -> setter_9e8b5f.execute\n        list_9e8b5f -> for_7c6d4a.items\n        for_7c6d4a.item -> ifexpression_5b3b2f.gen_2\n        for_7c6d4a.index -> ifexpression_5b3b2f.gen_0\n        getter_9e8b5f.value -> ifexpression_5b3b2f.gen_1\n        for_7c6d4a.onItem -> ifexpression_5b3b2f.execute\n        for_7c6d4a.done -> continue_e1f3ee\n        for_7c6d4a.item -> setter_9e8b5f.new_value\n        list_9e8b5f -> getat_2d3a1c.list\n        0 -> getat_2d3a1c.index\n        getat_2d3a1c.itemAtIndex -> setter_9c4d8a.new_value\n        execute_7c6d4a -> setter_9c4d8a.execute\n        getter_2e7f6f.value -> output_9e8b5f\n        setter_9c4d8a.continue -> for_7c6d4a.reset\n        setter_9e8b5f.continue -> for_7c6d4a.next\n    }\n\n    \n\n    instance(x: -10, y: 129) find_missing_2d3a1c root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 0, name: \"list\") property(List) list_3a9f8e\n        in(x: -304, y: -224, name: \"execute\") trigger() execute_1b7d4c\n\n        out(x: 1045, y: -225, name: \"continue\") trigger() continue_e6c2ec\n        out(x: 1039, y: 147, name: \"output\") property(Number) output_8e3f7a\n\n        instance(x: 0, y: 0) for_1d5b4e root.Std_k98ojb.Std.For {}\n        getter(x: -2, y: 167, name: \"getter_6c1d9d\") getter_6c1d9d = index\n        setter(x: 0, y: -246, name: \"setter_5a8e3f\") setter_5a8e3f = index\n        instance(x: 339, y: -11) ifexpression_7b4f2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 333, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: 682, y: -120) math_add_7a2f9e root.Std_k98ojb.Math.Add {}\n        setter(x: 1020, y: -250, name: \"setter_6d5c1f\") setter_6d5c1f = index\n        list_3a9f8e -> for_1d5b4e.items\n        execute_1b7d4c -> setter_5a8e3f.execute\n        0 -> setter_5a8e3f.new_value\n        getter_b280eb.value -> ifexpression_7b4f2f.gen_1\n        for_1d5b4e.index -> ifexpression_7b4f2f.gen_0\n        for_1d5b4e.item -> ifexpression_7b4f2f.gen_2\n        getter_6c1d9d.value -> output_8e3f7a\n        for_1d5b4e.onItem -> ifexpression_7b4f2f.execute\n        ifexpression_7b4f2f.then -> setter_6d5c1f.execute\n        math_add_7a2f9e.result -> setter_6d5c1f.new_value\n        1 -> math_add_7a2f9e.second\n        getter_b280eb.value -> math_add_7a2f9e.first\n        ifexpression_7b4f2f.else -> for_1d5b4e.next\n        setter_6d5c1f.continue -> for_1d5b4e.next\n        for_1d5b4e.done -> continue_e6c2ec\n        setter_5a8e3f.continue -> for_1d5b4e.reset\n    }\n\n    \n\n    instance(x: -34, y: 127) find_missing_7e0f8e root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 2, name: \"list\") property(List) list_3e8b1f\n        in(x: -277, y: -226, name: \"execute\") trigger() execute_9a4d5c\n\n        out(x: 1040, y: -224, name: \"continue\") trigger() continue_6e7c9f\n        out(x: 1028, y: 76, name: \"output\") property(Number) output_3b2d1f\n\n        instance(x: 5, y: -180, name: \"index\") expression_4a0e7c root.Std_k98ojb.Math.Expression {\n            expression: \"i + 1\"\n        }\n        instance(x: 322, y: -120) ifexpression_9d8f6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"list[i] != index\"\n        }\n        getter(x: 0, y: 0, name: \"getter_7a1e2f\") getter_7a1e2f = i\n        setter(x: -0, y: -0, name: \"setter_9d4f1c\") setter_9d4f1c = i\n        instance(x: 655, y: 5) for_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: 1023, y: 77, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 860, y: -244, name: \"setter_60cfcd\") setter_60cfcd = i\n        list_3e8b1f -> for_d26972.items\n        execute_9a4d5c -> setter_9d4f1c.execute\n        0 -> setter_9d4f1c.new_value\n        getter_7a1e2f.value -> expression_4a0e7c.gen_0\n        for_d26972.index -> ifexpression_9d8f6c.gen_0\n        expression_4a0e7c.result -> ifexpression_9d8f6c.gen_1\n        getter_b280eb.value -> output_3b2d1f\n        for_d26972.onItem -> ifexpression_9d8f6c.execute\n        ifexpression_9d8f6c.then -> setter_60cfcd.execute\n        for_d26972.index -> setter_60cfcd.new_value\n        ifexpression_9d8f6c.else -> for_d26972.next\n        for_d26972.done -> continue_6e7c9f\n        setter_9d4f1c.continue -> for_d26972.reset\n        setter_60cfcd.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 0, y: -13) find_missing_8b3a2f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9f5e1d\n        in(x: -281, y: -246, name: \"execute\") trigger() execute_6c7b2a\n\n        out(x: 1023, y: -242, name: \"continue\") trigger() continue_8e4b0f\n        out(x: 1015, y: 14, name: \"output\") property(Number) output_9d1b6e\n\n        instance(x: 0, y: 0) for_7c3a2f root.Std_k98ojb.Std.For {}\n        getter(x: -187, y: 167, name: \"getter_5f4c1d\") getter_5f4c1d = index\n        setter(x: 779, y: -123, name: \"setter_7a3e2f\") setter_7a3e2f = index\n        instance(x: 554, y: -75) ifexpression_eb9c0f root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        getter(x: 0, y: 0, name: \"getter_5f4c1d\") getter_8a7e3f = index\n        setter(x: -186, y: -246, name: \"setter_6a6081\") setter_6a6081 = index\n        instance(x: 465, y: 5) ifexpression_6c15d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        list_9f5e1d -> for_7c3a2f.items\n        execute_6c7b2a -> setter_6a6081.execute\n        0 -> setter_6a6081.new_value\n        getter_8a7e3f.value -> output_9d1b6e\n        for_7c3a2f.done -> continue_8e4b0f\n        setter_6a6081.continue -> for_7c3a2f.reset\n        for_7c3a2f.onItem -> ifexpression_eb9c0f.execute\n        getter_5f4c1d.value -> ifexpression_eb9c0f.gen_1\n        for_7c3a2f.index -> ifexpression_eb9c0f.gen_0\n        ifexpression_eb9c0f.then -> setter_7a3e2f.execute\n        for_7c3a2f.item -> ifexpression_6c15d4.gen_1\n        ifexpression_eb9c0f.else -> for_7c3a2f.next\n        ifexpression_6c15d4.then -> for_7c3a2f.next\n        ifexpression_6c15d4.value -> ifexpression_6c15d4.gen_0\n        setter_7a3e2f.continue -> for_7c3a2f.next\n        for_7c3a2f.index -> setter_7a3e2f.new_value\n    }\n\n    \n\n    instance(x: -204, y: 1) find_missing_8b6d4f root.main.find_missing {}\n\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -200, y: 2, name: \"input\") property(String) input_1d0f9e\n\n        out(x: 500, y: 78, name: \"output\") property(String) output_5c7a8b\n\n        instance(x: 100, y: 76) replace_f3e6b2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: -19) regex_firstmatch_9d0f4f root.Std_k98ojb.Strings.Regex.FirstMatch {\n            pattern: \"[ ,.]\"\n        }\n        input_1d0f9e -> replace_f3e6b2.input\n        \":\" -> replace_f3e6b2.replace\n        regex_firstmatch_9d0f4f.match -> replace_f3e6b2.search\n        input_1d0f9e -> regex_firstmatch_9d0f4f.input\n        replace_f3e6b2.output -> output_5c7a8b\n    }\n\n    \n\n    instance(x: -138, y: 43) replace_spaces_commas_dots_9e7f2f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -232, y: 0, name: \"input\") property(String) input_9f1a3d\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_8c7b4e\n\n        instance(x: 0, y: 1) replace_5c9a6d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1f3f2e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_8c4c7f root.Std_k98ojb.Strings.Replace {}\n        input_9f1a3d -> replace_5c9a6d.input\n        \" \" -> replace_5c9a6d.search\n        \":\" -> replace_5c9a6d.replace\n        replace_5c9a6d.output -> replace_1f3f2e.input\n        \",\" -> replace_1f3f2e.search\n        \":\" -> replace_1f3f2e.replace\n        replace_1f3f2e.output -> replace_8c4c7f.input\n        \".\" -> replace_8c4c7f.search\n        \":\" -> replace_8c4c7f.replace\n        replace_8c4c7f.output -> output_8c7b4e\n    }\n\n    \n\n    instance(x: 101, y: -67) replace_spaces_commas_dots_9d0a2f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_ba9f8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3d7e4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6a5f7f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_ba9f8c.input\n        \" \" -> replace_ba9f8c.search\n        \":\" -> replace_ba9f8c.replace\n        replace_ba9f8c.output -> replace_3d7e4f.input\n        \",\" -> replace_3d7e4f.search\n        \":\" -> replace_3d7e4f.replace\n        replace_3d7e4f.output -> replace_6a5f7f.input\n        \".\" -> replace_6a5f7f.search\n        \":\" -> replace_6a5f7f.replace\n        replace_6a5f7f.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_9e3d2c root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -227, y: 18, name: \"input\") property(String) input_1f0b3e\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_7a9c8d\n\n        instance(x: 94, y: -105) replace_2f4a5d root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) template_1e6b3f root.Std_k98ojb.Strings.Template {\n            template: \"{{input}}.replace(/[\\s,.]/g, ':')\"\n        }\n        input_1f0b3e -> template_1e6b3f.input\n        template_1e6b3f.output -> replace_2f4a5d.search\n        \":\" -> replace_2f4a5d.replace\n        input_1f0b3e -> replace_2f4a5d.input\n        replace_2f4a5d.output -> output_7a9c8d\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_6f9f8f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -200, y: 0, name: \"input\") property(String) input_1d3b6f\n\n        out(x: 500, y: -2, name: \"output\") property(String) output_7c8e5a\n\n        instance(x: 0, y: 0) replace_9e4a8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_1d3f6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_d2c5b7 root.Std_k98ojb.Strings.Replace {}\n        input_1d3b6f -> replace_9e4a8c.input\n        \" \" -> replace_9e4a8c.search\n        \":\" -> replace_9e4a8c.replace\n        replace_9e4a8c.output -> replace_1d3f6f.input\n        \",\" -> replace_1d3f6f.search\n        \":\" -> replace_1d3f6f.replace\n        replace_1d3f6f.output -> replace_d2c5b7.input\n        \".\" -> replace_d2c5b7.search\n        \":\" -> replace_d2c5b7.replace\n        replace_d2c5b7.output -> output_7c8e5a\n    }\n\n    \n\n    instance(x: -85, y: 30, name: \"replace_spaces_commas_dots\") replace_spaces_commas_dots_9d3f1f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -156, y: 2, name: \"input\") property(String) input_1a8f6e\n\n        out(x: 504, y: 2, name: \"output\") property(String) output_5b7d4c\n\n        instance(x: 0, y: 0) replace_3d9c4e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_1a8f6e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_c5c2f7 root.Std_k98ojb.Strings.Replace {}\n        input_1a8f6e -> replace_3d9c4e.input\n        \" \" -> replace_3d9c4e.search\n        \":\" -> replace_3d9c4e.replace\n        replace_3d9c4e.output -> replace_1a8f6e.input\n        \",\" -> replace_1a8f6e.search\n        \":\" -> replace_1a8f6e.replace\n        replace_1a8f6e.output -> replace_c5c2f7.input\n        \".\" -> replace_c5c2f7.search\n        \":\" -> replace_c5c2f7.replace\n        replace_c5c2f7.output -> output_5b7d4c\n    }\n\n    \n\n    instance(x: -122, y: 30) replace_b9e3a8 root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -200, y: 0, name: \"input\") property(String) input_9f2a8e\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7b3c1d\n\n        instance(x: 0, y: 0) replace_all_4a6c2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_all_5e9f8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_all_1e7c9f root.Std_k98ojb.Strings.Replace {}\n        input_9f2a8e -> replace_all_4a6c2d.input\n        \" \" -> replace_all_4a6c2d.search\n        \":\" -> replace_all_4a6c2d.replace\n        replace_all_4a6c2d.output -> replace_all_5e9f8f.input\n        \",\" -> replace_all_5e9f8f.search\n        \":\" -> replace_all_5e9f8f.replace\n        replace_all_5e9f8f.output -> replace_all_1e7c9f.input\n        \".\" -> replace_all_1e7c9f.search\n        \":\" -> replace_all_1e7c9f.replace\n        replace_all_1e7c9f.output -> output_7b3c1d\n    }\n\n    \n\n    instance(x: -93, y: 45) replace_ba2c8f root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -172, y: 0, name: \"input\") property(String) input_9f1a3d\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7e8b6c\n\n        instance(x: 94, y: -105) replace_f5f4d0 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: -48) replace_9a3e1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_8c7a2f root.Std_k98ojb.Strings.Replace {}\n        input_9f1a3d -> replace_f5f4d0.input\n        \" \" -> replace_f5f4d0.search\n        \":\" -> replace_f5f4d0.replace\n        replace_f5f4d0.output -> replace_9a3e1f.input\n        \",\" -> replace_9a3e1f.search\n        \":\" -> replace_9a3e1f.replace\n        replace_9a3e1f.output -> replace_8c7a2f.input\n        \".\" -> replace_8c7a2f.search\n        \":\" -> replace_8c7a2f.replace\n        replace_8c7a2f.output -> output_7e8b6c\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_b9d0f4 root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -200, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 500, y: -1, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) replace_ae3d4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_9a2c5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_7b8c1d root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_ae3d4f.input\n        \" \" -> replace_ae3d4f.search\n        \":\" -> replace_ae3d4f.replace\n        replace_ae3d4f.output -> replace_9a2c5f.input\n        \",\" -> replace_9a2c5f.search\n        \":\" -> replace_9a2c5f.replace\n        replace_9a2c5f.output -> replace_7b8c1d.input\n        \".\" -> replace_7b8c1d.search\n        \":\" -> replace_7b8c1d.replace\n        replace_7b8c1d.output -> output_0\n    }\n\n    \n\n    instance(x: -140, y: 40) replace_spaces_commas_dots_9f2e6a root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -122, y: 2, name: \"input\") property(String) input_1d0f9e\n\n        out(x: 505, y: -68, name: \"output\") property(String) output_5a7c6b\n\n        instance(x: 94, y: -105) replace_4c3c8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) template_1d2f9e root.Std_k98ojb.Strings.Template {\n            template: \"{{input}}.replace(/[\\s,.]/g, ':')\"\n        }\n        input_1d0f9e -> template_1d2f9e.input\n        replace_4c3c8c.search -> template_1d2f9e.gen_0\n        \":\\\" -> replace_4c3c8c.replace\n        \"[\\\\s,.]\" -> replace_4c3c8c.search\n        \"g\" -> replace_4c3c8c.flags\n        input_1d0f9e -> replace_4c3c8c.input\n        template_1d2f9e.output -> replace_4c3c8c.execute\n        replace_4c3c8c.output -> output_5a7c6b\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_1d0f9e root.main.replace_spaces_commas_dots {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same_char {\n        in(x: -283, y: 1, name: \"string\") property(String) string_3f8a9e\n\n        out(x: 593, y: 0, name: \"output\") property(Bool) output_5c7d6b\n\n        instance(x: 0, y: 2) characters_d4e1ee root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -1) contains_3f9a8c root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: 0) length_7d6f2f root.Std_k98ojb.List.Length {}\n        characters_d4e1ee.characters -> contains_3f9a8c.list\n        string_3f8a9e -> characters_d4e1ee.input\n        characters_d4e1ee.characters -> length_7d6f2f.list\n        0 -> contains_3f9a8c.item\n        length_7d6f2f.length -> contains_3f9a8c.index\n        contains_3f9a8c.is_contained -> output_5c7d6b\n    }\n\n    \n\n    instance(x: -55, y: 529) check_same_char_4e1c6f root.main.check_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same_char {\n        in(x: -288, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 593, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) allmatcheswithrange_7a3d9f root.Std_k98ojb.Strings.AllMatchesWithRange {\n            pattern: \"(.)\\\\1*\"\n        }\n        instance(x: 265, y: -2) length_5e8c4c root.Std_k98ojb.List.Length {}\n        instance(x: 490, y: 0) equal_7a9f6d root.Std_k98ojb.Logic.Equal {}\n        string_1 -> allmatcheswithrange_7a3d9f.input\n        length_5e8c4c.length -> equal_7a9f6d.left\n        allmatcheswithrange_7a3d9f.matches -> length_5e8c4c.list\n        1 -> equal_7a9f6d.right\n        equal_7a9f6d.result -> output_1\n    }\n\n    \n\n    instance(x: -55, y: 529) check_same_char_f2b0d3 root.main.check_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same_char {\n        in(x: -280, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 540, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_3a8d9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 250, y: -4) allmatch_7c6e5f root.Std_k98ojb.List.Contains {}\n        instance(x: 450, y: 1) equal_2f3c0c root.Std_k98ojb.Logic.Equal {}\n        characters_3a8d9f.characters -> allmatch_7c6e5f.list\n        characters_3a8d9f.characters[0] -> allmatch_7c6e5f.item\n        equal_2f3c0c.result -> output_1\n        1 -> equal_2f3c0c.right\n        allmatch_7c6e5f.is_contained -> equal_2f3c0c.left\n        string_1 -> characters_3a8d9f.input\n    }\n\n    \n\n    instance(x: -11, y: 22) check_same_char_4b9c1f root.main.check_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same_char {\n        in(x: -286, y: 2, name: \"string\") property(String) string_0\n\n        out(x: 557, y: 1, name: \"output\") property(Bool) output_0\n\n        instance(x: 0, y: 0) characters_5f9b8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 264, y: -2) allmatch_7e3a6d root.Std_k98ojb.List.AllMatch {}\n        instance(x: 528, y: 1) equal_0a4b1f root.Std_k98ojb.Logic.Equal {}\n        characters_5f9b8c.characters -> allmatch_7e3a6d.list\n        string_0 -> characters_5f9f8c.string\n        allmatch_7e3a6d.result -> equal_0a4b1f.left\n        1 -> equal_0a4b1f.right\n        equal_0a4b1f.result -> output_0\n    }\n\n    \n\n    instance(x: -17, y: 53) check_same_char_e5e7c6 root.main.check_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same_char {\n        in(x: -283, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 540, y: 0, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_c5e7a9 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 270, y: -1) allmatch_8f3d4c root.Std_k98ojb.List.AllMatch {}\n        instance(x: 540, y: 0) equal_2f6a9c root.Std_k98ojb.Logic.Equal {}\n        characters_c5e7a9.characters -> allmatch_8f3d4c.list\n        string_1 -> characters_c5e7a9.string\n        allmatch_8f3d4c.result -> equal_2f6a9c.left\n        1 -> equal_2f6a9c.right\n        equal_2f6a9c.result -> output_1\n    }\n\n    \n\n    instance(x: -16, y: 5) check_same_char_e7b8e4 root.main.check_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -287, y: 0, name: \"string\") property(String) string_3f1a9e\n\n        out(x: 554, y: 5, name: \"output\") property(Bool) output_e7c6b8\n\n        instance(x: 0, y: 0) characters_4d2d7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 268, y: -1) uniquelist_3a9e4f root.Std_k98ojb.List.UniqueList {}\n        instance(x: 492, y: 0) length_5b6f9c root.Std_k98ojb.List.Length {}\n        characters_4d2d7c.characters -> uniquelist_3a9e4f.list\n        uniquelist_3a9e4f.unique_list -> length_5b6f9c.list\n        1 -> equal_8c0d5f.right\n        length_5b6f9c.length -> equal_8c0d5f.left\n        instance(x: 716, y: -2) equal_8c0d5f root.Std_k98ojb.Logic.Equal {}\n        equal_8c0d5f.result -> output_e7c6b8\n        string_3f1a9e -> characters_4d2d7c.input\n    }\n\n    \n\n    instance(x: -17, y: 11) is_same_5e8f6c root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -283, y: 0, name: \"string\") property(String) string_3a1f9e\n\n        out(x: 533, y: -2, name: \"output\") property(Bool) output_7b4d8c\n\n        instance(x: 0, y: 1) characters_5f9f6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -2, y: -3) length_8a7c4e root.Std_k98ojb.List.Length {}\n        characters_5f9f6f.characters -> contains_d42dce.list\n        0 -> length_8a7c4e.list\n        length_8a7c4e.length -> contains_d42dce.item\n        string_3a1f9e -> characters_5f9f6f.input\n        contains_d42dce.result -> output_7b4d8c\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_2f9d0 root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -299, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_7e3f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: -2) length_6e87f2 root.Std_k98ojb.List.Length {}\n        characters_7e3f9c.characters -> contains_d42dce.list\n        string_0 -> characters_7e3f9c.string\n        \"a\" -> contains_d42dce.item\n        length_6e87f2.length -> contains_d42dce.item\n        characters_7e3f9c.characters -> length_6e87f2.list\n        contains_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_e54b7f root.main.is_same {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same_char {\n        in(x: -283, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 533, y: 2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 3) characters_5e7f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 266, y: 1) allmatch_4d8a6f root.Std_k98ojb.List.Contains {}\n        instance(x: 0, y: -2) firstitem_3a8f1e root.Std_k98ojb.List.FirstItem {}\n        characters_5e7f9c.characters -> allmatch_4d8a6f.list\n        firstitem_3a8f1e.item -> allmatch_4d8a6f.item\n        string_0 -> characters_5e7f9c.string\n        string_0 -> firstitem_3a8f1e.list\n        allmatch_4d8a6f.is_contained -> result_0\n    }\n\n    \n\n    instance(x: 76, y: -2) check_same_char_eb1c9c root.main.check_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same_char {\n        in(x: -284, y: 0, name: \"string\") property(String) string_3f9a8e\n\n        out(x: 533, y: -1, name: \"output\") property(Bool) output_e5c7b4\n\n        instance(x: 0, y: 1) characters_6d5f2f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -319, y: 358, name: \"Even list\") filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        characters_6d5f2f.characters -> filter_f3b46d.list\n        filter_f3b46d.result -> contains_d42dce.list\n        filter_f3b46d.result -> firstitem_870503.list\n        firstitem_870503.item -> contains_d42dce.item\n        characters_6d5f2f.characters -> contains_d42dce.list\n        contains_d42dce.is_contained -> output_e5c7b4\n    }\n\n    \n\n    instance(x: -67, y: -37) check_same_char_f21f44 root.main.check_same_char {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) regex_allmatches_7b3b7b root.Std_k98ojb.Strings.Regex.AllMatches {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        \"[0-9]\" -> regex_allmatches_7b3b7b.pattern\n        input_ai -> regex_allmatches_7b3b7b.input\n        length_6e87f2.list -> regex_allmatches_7b3b7b.result\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) regex_allmatches_7b3b7b root.Std_k98ojb.Strings.Regex.AllMatches {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        \"[0-9]\" -> regex_allmatches_7b3b7b.pattern\n        input_ai -> regex_allmatches_7b3b7b.input\n        length_6e87f2.list -> regex_allmatches_7b3b7b.result\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) regex_allmatches_7b3b7b root.Std_k98ojb.Strings.Regex.AllMatches {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(List) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Number) bool_af09a7\n\n            instance(x: 89, y: 29) getat_1088d5 root.Std_k98ojb.List.GetAt {}\n            instance(x: 310, y: 35) isnumeric_807ffd root.Std_k98ojb.Strings.IsNumeric {}\n            0 -> getat_1088d5.index\n            elem_9f6850 -> getat_1088d5.list\n            getat_1088d5.item -> isnumeric_807ffd.input\n            isnumeric_807ffd.result -> bool_af09a7\n        } -> length_6e87f2.list\n        \"\\\\d\" -> regex_allmatches_7b3b7b.pattern\n        input_ai -> regex_allmatches_7b3b7b.input\n        regex_allmatches_7b3b7b.all_matches -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) regex_allmatches_7b3b7b root.Std_k98ojb.Strings.Regex.AllMatches {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        \"[0-9]\" -> regex_allmatches_7b3b7b.pattern\n        input_ai -> regex_allmatches_7b3b7b.input\n        length_6e87f2.list -> regex_allmatches_7b3b7b.result\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) regex_allmatches_7b3b7b root.Std_k98ojb.Strings.Regex.AllMatches {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        \"[0-9]\" -> regex_allmatches_7b3b7b.pattern\n        input_ai -> regex_allmatches_7b3b7b.input\n        length_6e87f2.list -> regex_allmatches_7b3b7b.result\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) matchindices_7b3b7b root.Std_k98ojb.Strings.MatchIndices {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        \"0|1|2|3|4|5|6|7|8|9\" -> matchindices_7b3b7b.pattern\n        input_ai -> matchindices_7b3b7b.input\n        length_6e87f2.list -> matchindices_7b3b7b.matches\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) matchindices_7b3b7b root.Std_k98ojb.Strings.MatchIndices {}\n        instance(x: 772, y: -1) length_7b3b7b root.Std_k98ojb.List.Length {}\n        \"[0-9]\" -> matchindices_7b3b7b.pattern\n        input_ai -> matchindices_7b3b7b.input\n        length_7b3b7b.list -> matchindices_7b3b7b.matches\n        length_7b3b7b.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) matchindices_7b3b7b root.Std_k98ojb.Strings.MatchIndices {}\n        instance(x: 0, y: 0) length_2a6d9e root.Std_k98ojb.List.Length {}\n        \"0|1|2|3|4|5|6|7|8|9\" -> matchindices_7b3b7b.pattern\n        input_ai -> matchindices_7b3b7b.input\n        length_2a6d9e.list -> matchindices_7b3b7b.matches\n        length_2a6d9e.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) regex_allmatches_7b3b7b root.Std_k98ojb.Strings.Regex.AllMatches {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        \"[0-9]\" -> regex_allmatches_7b3b7b.pattern\n        input_ai -> regex_allmatches_7b3b7b.input\n        length_6e87f2.list -> regex_allmatches_7b3b7b.result\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) regex_allmatches_7b3b7b root.Std_k98ojb.Strings.Regex.AllMatches {}\n        instance(x: 0, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(List) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Number) bool_af09a7\n\n            instance(x: 89, y: 29) length_1088d5 root.Std_k98ojb.List.Length {}\n            length_1088d5.length -> bool_af09a7\n            elem_9f6850 -> length_1088d5.list\n        } -> length_6e87f2.handler\n        \"[0-9]\" -> regex_allmatches_7b3b7b.pattern\n        input_ai -> regex_allmatches_7b3b7b.input\n        regex_allmatches_7b3b7b.result -> length_6e87f2.list\n        length_6e87f2.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        4 -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_fourth_power\n        pow_f892a4.result -> sum_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        4 -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_fourth_power\n        pow_f892a4.result -> sum_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        4 -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_fourth_power\n        pow_f892a4.result -> sum_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        4 -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_fourth_power\n        pow_f892a4.result -> sum_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        4 -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_fourth_power\n        pow_f892a4.result -> sum_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9c2e8d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9c2e8d.second\n        4 -> pow_9c2e8d.first\n        expression_2d6da6.result -> pow_9c2e8d.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_365f7b\n        pow_9c2e8d.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e4c2d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9e4c2d.second\n        4 -> pow_9e4c2d.first\n        expression_2d6da6.result -> pow_9e4c2d.value\n        data_cde0dc -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4d5c8e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4d5c8e.second\n        4 -> pow_4d5c8e.first\n        expression_2d6da6.result -> pow_4d5c8e.input\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_365f7b\n        pow_4d5c8e.output -> data_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        4 -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_fourth_power\n        pow_f892a4.result -> sum_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_f892a4.second\n        4 -> pow_f892a4.first\n        expression_2d6da6.result -> pow_f892a4.value\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_cde0dc -> sum_fourth_power\n        pow_f892a4.result -> sum_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -452, y: -420, name: \"execute\") trigger() execute_3a8f9e\n        in(x: -437, y: -213, name: \"side_length\") property(Number) side_length_7c0d5b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_e1a2ee\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_8f4e9f\n\n        instance(x: 80, y: -417) ifexpression_7b5c0d root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_1a2e9f root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_3c7d5d root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) mul_8a6f9c root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_1e3f7f\") setter_1e3f7f = surface_area\n        setter(x: 875, y: -518, name: \"setter_2a4d8c\") setter_2a4d8c = surface_area\n        getter(x: 902, y: -314, name: \"getter_3b5e9d\") getter_3b5e9d = surface_area\n        instance(x: -202, y: -236) floor_6f7b8e root.Std_k98ojb.Math.Floor {}\n        6 -> mul_3c7d5d.first\n        side_length_7c0d5b -> mul_3c7d5d.second\n        mul_3c7d5d.result -> mul_8a6f9c.first\n        side_length_7c0d5b -> mul_8a6f9c.second\n        0 -> setter_1e3f7f.new_value\n        setter_1e3f7f.continue -> ifexpression_7b5c0d.execute\n        ifexpression_7b5c0d.then -> continue_e1a2ee\n        execute_3a8f9e -> setter_1e3f7f.execute\n        ifexpression_7b5c0d.else -> surface_area_cube_1a2e9f.execute\n        surface_area_cube_1a2e9f.continue -> setter_2a4d8c.execute\n        mul_8a6f9c.result -> setter_2a4d8c.new_value\n        setter_2a4d8c.continue -> continue_e1a2ee\n        getter_3b5e9d.value -> output_8f4e9f\n        side_length_7c0d5b -> floor_6f7b8e.input\n        floor_6f7b8e.output -> ifexpression_7b5c0d.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_1a2e9f root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -300, y: 10, name: \"execute\") trigger() execute_3a9f8e\n        in(x: -285, y: -120, name: \"side_length\") property(Number) side_length_a1\n\n        out(x: 1166, y: 10, name: \"continue\") trigger() continue_7c2d0b\n        out(x: 1189, y: -104, name: \"surface_area\") property(Number) surface_area_b1\n\n        instance(x: 16, y: 8, name: \"\") mul_4a6f9e root.Std_k98ojb.Math.Mul {}\n        instance(x: 16, y: -110, name: \"\") mul_7d3c2c root.Std_k98ojb.Math.Mul {}\n        instance(x: 15, y: -221, name: \"\") mul_8a4f9e root.Std_k98ojb.Math.Mul {}\n        instance(x: 16, y: -332, name: \"\") add_1d7b6c root.Std_k98ojb.Math.Add {}\n        instance(x: 15, y: -443, name: \"\") mul_c5a8f9 root.Std_k98ojb.Math.Mul {}\n        instance(x: 16, y: -554, name: \"\") add_2e3d7c root.Std_k98ojb.Math.Add {}\n        side_length_a1 -> mul_4a6f9e.first\n        side_length_a1 -> mul_4a6f9e.second\n        mul_4a6f9e.result -> mul_7d3c2c.first\n        6 -> mul_7d3c2c.second\n        mul_7d3c2c.result -> add_1d7b6c.first\n        mul_8a4f9e.result -> add_1d7b6c.second\n        side_length_a1 -> mul_c5a8f9.first\n        2 -> mul_c5a8f9.second\n        mul_c5a8f9.result -> add_2e3d7c.first\n        mul_8a4f9e.result -> add_2e3d7c.second\n        add_1d7b6c.result -> surface_area_b1\n        side_length_a1 -> mul_8a4f9e.first\n        side_length_a1 -> mul_8a4f9e.second\n        execute_3a9f8e -> continue_7c2d0b\n    }\n\n    \n\n    instance(x: 426, y: -303) surface_area_cube_6f1d5 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -452, y: -379, name: \"execute\") trigger() execute_2e9f8a\n        in(x: -438, y: -212, name: \"side_length\") property(Number) side_length_1c0d5b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_3a7b3f\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_2e4f8f\n\n        instance(x: 80, y: -417) ifexpression_5d1c0f root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_9e7a8f root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_f1d3c6 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) mul_5a0b9c root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_4e8f2d\") setter_4e8f2d = surface_area\n        setter(x: 875, y: -518, name: \"setter_3a9c1f\") setter_3a9c1f = surface_area\n        getter(x: 902, y: -314, name: \"getter_6b7e4d\") getter_6b7e4d = surface_area\n        instance(x: -202, y: -236) floor_5a0b2d root.Std_k98ojb.Math.Floor {}\n        6 -> mul_f1d3c6.second\n        side_length_1c0d5b -> mul_f1d3c6.first\n        mul_f1d3c6.result -> mul_5a0b9c.first\n        side_length_1c0d5b -> mul_5a0b9c.second\n        0 -> setter_4e8f2d.new_value\n        setter_4e8f2d.continue -> ifexpression_5d1c0f.execute\n        ifexpression_5d1c0f.then -> continue_3a7b3f\n        execute_2e9f8a -> setter_4e8f2d.execute\n        ifexpression_5d1c0f.else -> surface_area_cube_9e7a8f.execute\n        surface_area_cube_9e7a8f.continue -> setter_3a9c1f.execute\n        mul_5a0b9c.result -> setter_3a9c1f.new_value\n        setter_3a9c1f.continue -> continue_3a7b3f\n        getter_6b7e4d.value -> output_2e4f8f\n        side_length_1c0d5b -> floor_5a0b2d.input\n        floor_5a0b2d.output -> ifexpression_5d1c0f.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_b9e8f6 root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -452, y: -423, name: \"execute\") trigger() execute_3a9f0e\n        in(x: -437, y: -205, name: \"side_length\") property(Number) side_length_a6cea7\n\n        out(x: 1148, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_96023e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_adfa16 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_547f34 root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        execute_3a9f0e -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        ifexpression_3d7de6.else -> surface_area_cube_.execute_3a9f0e\n        surface_area_cube_.continue_d9efd7 -> setter_375321.execute\n        surface_area_cube_.output_732a8a -> add_88bb8a.second\n        mul_adfa16.result -> add_88bb8a.first\n        6 -> mul_adfa16.second\n        side_length_a6cea7 -> mul_adfa16.first\n        setter_41e4ad.new_value = 0\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        setter_375321.new_value = add_88bb8a.result\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        side_length_a6cea7 -> mul_547f34.first\n        2 -> mul_547f34.second\n        mul_547f34.result -> surface_area_cube_.side_length_a6cea7\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -100, y: 0, name: \"size\") property(Number) size_9f8d1e\n\n        out(x: 50, y: 0, name: \"surface_area\") property(Number) surface_area_ba7c2b\n\n        instance(x: -10, y: 0) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size * size\"\n        }\n        size_9f8d1e -> math_expr_node.gen_0\n        math_expr_node.result -> surface_area_ba7c2b\n    }\n\n    \n\n    instance(x: -85, y: 11, name: \"surface_area_cube\") expression_3e25a9 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9f0d1e\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_96023e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_adfa16 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_547f34 root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        execute_9f0d1e -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        ifexpression_3d7de6.else -> surface_area_cube_96023e.execute_9f0d1e\n        surface_area_cube_96023e.continue_d9efd7 -> setter_375321.execute\n        surface_area_cube_96023e.output_732a8a -> add_88bb8a.first\n        mul_adfa16.result -> add_88bb8a.second\n        6 -> mul_547f34.first\n        side_length_6b655b -> mul_547f34.second\n        mul_547f34.result -> mul_adfa16.first\n        side_length_6b655b -> mul_adfa16.second\n        setter_375321.new_value -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.execute -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_2f8a3e\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_1b7d5c\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_e9a4cc\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_8e3f0c\n\n        instance(x: 80, y: -417) ifexpression_1b7d5c root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_2f8a3e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_1d7c9e root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_6e4b5c root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_f8f3a2 root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_1d7c9e\") setter_1d7c9e = surface_area\n        getter(x: 902, y: -314, name: \"getter_f8f3a2\") getter_f8f3a2 = surface_area\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        6 -> mul_f8f3a2.first\n        side_length_1b7d5c -> mul_f8f3a2.second\n        mul_f8f3a2.result -> add_6e4b5c.first\n        mul_1d7c9e.result -> add_6e4b5c.second\n        2 -> mul_1d7c9e.first\n        side_length_1b7d5c -> mul_1d7c9e.second\n        getter_f8f3a2.value -> output_8e3f0c\n        ifexpression_1b7d5c.then -> continue_e9efd7\n        execute_2f8a3e -> setter_1d7c9e.execute\n        0 -> setter_1d7c9e.new_value\n        ifexpression_1b7d5c.else -> surface_area_cube_2f8a3e.execute\n        surface_area_cube_2f8a3e.continue -> continue_e9efd7\n        add_6e4b5c.result -> setter_1d7c9e.new_value\n        setter_1d7c9e.continue -> continue_e9efd7\n        floor_61b38d.input -> ifexpression_1b7d5c.gen_0\n        side_length_1b7d5c -> floor_61b38d.input\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -451, y: -420, name: \"execute\") trigger() execute_3a9f8e\n        in(x: -437, y: -202, name: \"side_length\") property(Number) side_length_1c7d4b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_e5a2ea\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_8e3f7c\n\n        instance(x: 80, y: -417) ifexpression_c1b4d6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_8e9a2f root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_f1c6c4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) mul_7d0b9c root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_3a5f2e\") setter_3a5f2e = sum\n        setter(x: 875, y: -518, name: \"setter_1d9c7f\") setter_1d9c7f = sum\n        getter(x: 902, y: -314, name: \"getter_4b0f6a\") getter_4b0f6a = sum\n        instance(x: -202, y: -236) floor_2e3b8c root.Std_k98ojb.Math.Floor {}\n        10 -> mul_f1c6c4.second\n        side_length_1c7d4b -> mul_f1c6c4.first\n        mul_f1c6c4.result -> ifexpression_c1b4d6.gen_0\n        6 -> mul_7d0b9c.first\n        mul_f1c6c4.result -> mul_7d0b9c.second\n        0 -> setter_3a5f2e.new_value\n        setter_3a5f2e.continue -> ifexpression_c1b4d6.execute\n        ifexpression_c1b4d6.then -> continue_e5a2ea\n        execute_3a9f8e -> setter_3a5f2e.execute\n        ifexpression_c1b4d6.else -> surface_area_cube_8e9a2f.execute\n        surface_area_cube_8e9a2f.continue -> setter_1d9c7f.execute\n        mul_7d0b9c.result -> setter_1d9c7f.new_value\n        setter_1d9c7f.continue -> continue_e5a2ea\n        getter_4b0f6a.value -> output_8e3f7c\n        side_length_1c7d4b -> floor_2e3b8c.input\n        floor_2e3b8c.output -> surface_area_cube_8e9a2f.side_length_1c7d4b\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_b0f6a5 root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -102, y: 10, name: \"size\") property(Number) size_8f9d1e\n\n        out(x: 1062, y: 7, name: \"surface_area\") property(Number) surface_area_3c0a5b\n\n        instance(x: 15, y: -11) mul_f6f4c8 root.Std_k98ojb.Math.Mul {}\n        instance(x: 18, y: 40) pow_e1d9e2 root.Std_k98ojb.Math.Pow {}\n        instance(x: 88, y: 19) mul_7a5e0c root.Std_k98ojb.Math.Mul {}\n        instance(x: 97, y: -10) mul_3f8c4f root.Std_k98ojb.Math.Mul {}\n        size_8f9d1e -> pow_e1d9e2.x\n        2 -> pow_e1d9e2.y\n        pow_e1d9e2.result -> mul_f6f4c8.first\n        6 -> mul_f6f4c8.second\n        mul_f6f4c8.result -> mul_7a5e0c.first\n        size_8f9d1e -> mul_3f8c4f.first\n        size_8f9d1e -> mul_3f8c4f.second\n        mul_3f8c4f.result -> mul_7a5e0c.second\n        mul_7a5e0c.result -> surface_area_3c0a5b\n    }\n\n    \n\n    instance(x: 110, y: -27) surface_area_cube_9e1d2f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -300, y: 0, name: \"execute\") trigger() execute_1a3d8f\n        in(x: -286, y: -90, name: \"side_length\") property(Number) side_length_a6cea7\n\n        out(x: 1144, y: 0, name: \"continue\") trigger() continue_9c5b2e\n        out(x: 1168, y: -92, name: \"surface_area\") property(Number) surface_area_b1d7f8\n\n        instance(x: 15, y: -90) mul_3a6c4f root.Std_k98ojb.Math.Mul {}\n        instance(x: 15, y: -18) mul_9e5a2f root.Std_k98ojb.Math.Mul {}\n        instance(x: 15, y: 12) mul_f0d7f8 root.Std_k98ojb.Math.Mul {}\n        instance(x: 80, y: -90) add_3c1f6e root.Std_k98ojb.Math.Add {}\n        instance(x: 80, y: 12) add_5a2c9f root.Std_k98ojb.Math.Add {}\n        side_length_a6cea7 -> mul_3a6c4f.first\n        side_length_a6cea7 -> mul_3a6c4f.second\n        mul_3a6c4f.result -> mul_9e5a2f.first\n        6 -> mul_9e5a2f.second\n        mul_f0d7f8.first -> add_3c1f6e.first\n        mul_9e5a2f.result -> mul_f0d7f8.second\n        mul_f0d7f8.result -> add_3c1f6e.second\n        add_3c1f6e.result -> add_5a2c9f.first\n        side_length_a6cea7 -> mul_5b9a4f.first\n        2 -> mul_5b9a4f.second\n        mul_5b9a4f.result -> mul_9d3f8f.first\n        side_length_a6cea7 -> mul_9d3f8f.second\n        mul_9d3f8f.result -> add_5a2c9f.second\n        add_5a2c9f.result -> surface_area_b1d7f8\n        execute_1a3d8f -> continue_9c5b2e\n    }\n\n    \n\n    instance(x: 0, y: -90) surface_area_cube_6e87f2 root.main.surface_area_cube {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -293, y: 158, name: \"list\") property(List) list_9a3f8e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5b1d7c\n\n        instance(x: 201, y: 62) sub_4f6c2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_9a8f3c root.Std_k98ojb.Query.Filter {\n            where: \"it == max\"\n        }\n        instance(x: -49, y: 372) firstitem_1d7e2f root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") minlist_6a9c8c root.Std_k98ojb.Query.Filter {\n            where: \"it == min\"\n        }\n        instance(x: -48, y: 517) firstitem_1f7e2f root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1049, y: -375) length_4c8a0d root.Std_k98ojb.List.Length {}\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_9a3f8e -> maxlist_9a8f3c.list\n        list_9a3f8e -> minlist_6a9c8c.list\n        instance(x: -753, y: -588) data_instance_1 root.Std_k98ojb.List.Flatten {}\n        data_instance_1.items = [max, middle, min]\n        maxlist_9a8f3c.result -> data_instance_1.flattened.last\n        minlist_6a9c8c.result -> data_instance_1.flattened.first\n        list_9a3f8e -> slice_3f3ee6.list\n        1 -> slice_3f3ee6.start\n        slice_3f3ee6.slice -> data_instance_1.flattened.middle\n        length_4c8a0d.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> slice_3f3ee6.end\n        list_9a3f8e -> length_4c8a0d.list\n        maxlist_9a8f3c.result -> firstitem_1d7e2f.list\n        minlist_6a9c8c.result -> firstitem_1f7e2f.list\n        firstitem_1d7e2f.item -> sub_4f6c2e.first\n        firstitem_1f7e2f.item -> sub_4f6c2e.second\n        sub_4f6c2e.result -> output_5b1d7c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_15f9e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -293, y: 160, name: \"list\") property(List) list_0d4b9f\n\n        out(x: 446, y: 147, name: \"output\") property(Number) output_e5a7c1\n\n        instance(x: 198, y: 145) sub_6e3b8f root.Std_k98ojb.Math.Sub {}\n        instance(x: -79, y: 155) max_2a9d0f root.Std_k98ojb.List.Max {}\n        instance(x: -81, y: 36) min_7c5a4c root.Std_k98ojb.List.Min {}\n        list_0d4b9f -> max_2a9d0f.list\n        list_0d4b9f -> min_7c5a4c.list\n        max_2a9d0f.max -> sub_6e3b8f.first\n        min_7c5a4c.min -> sub_6e3b8f.second\n        sub_6e3b8f.result -> output_e5a7c1\n    }\n\n    \n\n    instance(x: -66, y: 178) diff_max_min_2d0d9f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -283, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_9f7759 root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_f9110a root.Std_k98ojb.List.Min {}\n        list_09fcba -> max_9f7759\n        list_09fcba -> min_f9110a\n        max_9f7759 -> sub_7e1ce0.first\n        min_f9110a -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -283, y: 157, name: \"list\") property(List) list_9a1f3e\n\n        out(x: 547, y: 145, name: \"output\") property(Number) output_eb2c8d\n\n        instance(x: 0, y: 0) sub_7b4f9f root.Std_k98ojb.Math.Sub {}\n        instance(x: -107, y: 155) max_3e1a6f root.Std_k98ojb.List.Max {}\n        instance(x: -108, y: -2) min_5d8c0c root.Std_k98ojb.List.Min {}\n        list_9a1f3e -> max_3e1a6f.list\n        list_9a1f3e -> min_5d8c0c.list\n        max_3e1a6f.max -> sub_7b4f9f.first\n        min_5d8c0c.min -> sub_7b4f9f.second\n        sub_7b4f9f.result -> output_eb2c8d\n    }\n\n    \n\n    instance(x: -56, y: 178) diff_max_min_3a1e6f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 154, name: \"list\") property(List) list_1f9d5e\n\n        out(x: 550, y: 147, name: \"output\") property(Number) output_7b8c0a\n\n        instance(x: 186, y: 146) sub_3e6a2d root.Std_k98ojb.Math.Sub {}\n        instance(x: -105, y: 156) max_1f4a5c root.Std_k98ojb.List.Max {}\n        instance(x: -107, y: -10) min_9f8c7f root.Std_k98ojb.List.Min {}\n        list_1f9d5e -> max_1f4a5c.list\n        list_1f9d5e -> min_9f8c7f.list\n        max_1f4a5c.max -> sub_3e6a2d.first\n        min_9f8c7f.min -> sub_3e6a2d.second\n        sub_3e6a2d.result -> output_7b8c0a\n    }\n\n    \n\n    instance(x: 49, y: -11) diff_max_min_e5b4ce root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 165, name: \"list\") property(List) list_1a8f0e\n\n        out(x: 799, y: 145, name: \"output\") property(Number) output_e9c3d4\n\n        instance(x: 532, y: 147) sub_7b5b2c root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_1a8f0e root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_1a8f0e root.Std_k98ojb.List.Min {}\n        list_1a8f0e -> max_1a8f0e\n        list_1a8f0e -> min_1a8f0e\n        max_1a8f0e -> sub_7b5b2c.first\n        min_1a8f0e -> sub_7b5b2c.second\n        sub_7b5b2c.result -> output_e9c3d4\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_6c7d2e root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 157, name: \"list\") property(List) list_0f9d8e\n\n        out(x: 546, y: 127, name: \"output\") property(Number) output_1b5c6a\n\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_9d7b3f root.Std_k98ojb.Query.Filter {\n            where: \"it == max\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") minlist_1e9c8f root.Std_k98ojb.Query.Filter {\n            where: \"it == min\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1049, y: -375) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -1405, y: -438) max_4c7a1d root.Std_k98ojb.List.Max {}\n        instance(x: -1191, y: -492) min_9e2b1f root.Std_k98ojb.List.Min {}\n        instance(x: -432, y: -620) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first, middle, last]\n        list_0f9d8e -> maxlist_9d7b3f.list\n        list_0f9d8e -> minlist_1e9c8f.list\n        max_4c7a1d.value -> maxlist_9d7b3f.max\n        min_9e2b1f.value -> minlist_1e9c8f.min\n        maxlist_9d7b3f.result -> firstitem_870503.list\n        minlist_1e9c8f.result -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> output_1b5c6a\n        list_0f9d8e -> length_4b8927.list\n        length_4b8927.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> slice_3f3ee6.end\n        list_0f9d8e -> slice_3f3ee6.list\n        1 -> slice_3f3ee6.start\n        slice_3f3ee6.slice -> data_cc1b1b.middle\n        flatten_c31c7c.flattened -> output_1b5c6a\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_f624f root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_``Max value_0b1361`` root.Std_k98ojb.List.Min {}\n        list_09fcba -> max_f624f.list\n        list_09fcba -> min_``Max value_0b1361``.list\n        max_f624f.max -> sub_7e1ce0.first\n        min_``Max value_0b1361``.min -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -281, y: 156, name: \"list\") property(List) list_0f1e6a\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5c9d3b\n\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_6a1f8c root.Std_k98ojb.Query.Filter {\n            where: \"it == max\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") minlist_7f1d9c root.Std_k98ojb.Query.Filter {\n            where: \"it == min\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1049, y: -375) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -1405, y: -438) max_1c9a0d root.Std_k98ojb.List.Max {}\n        instance(x: -1191, y: -492) min_2e7c4f root.Std_k98ojb.List.Min {}\n        instance(x: -432, y: -620) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first, middle, last]\n        list_0f1e6a -> maxlist_6a1f8c.list\n        list_0f1e6a -> minlist_7f1d9c.list\n        firstitem_870503.item -> data_cc1b1b.first\n        firstitem_3078c6.item -> data_cc1b1b.last\n        maxlist_6a1f8c.result -> firstitem_870503.list\n        minlist_7f1d9c.result -> firstitem_3078c6.list\n        list_0f1e6a -> slice_3f3ee6.list\n        1 -> slice_3f3ee6.start\n        slice_3f3ee6.slice -> data_cc1b1b.middle\n        flatten_c31c7c.flattened -> output_5c9d3b\n        list_0f1e6a -> length_4b8927.list\n        length_4b8927.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> slice_3f3ee6.end\n        max_1c9a0d.value -> maxlist_6a1f8c.max\n        min_2e7c4f.value -> minlist_7f1d9c.min\n        list_0f1e6a -> max_1c9a0d.list\n        list_0f1e6a -> min_2e7c4f.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> output_5c9d3b\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -293, y: 155, name: \"list\") property(List) list_0b075e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it == max\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it == min\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_0b075e -> max_f3b46d.list\n        max_f3b46d.result -> firstitem_870503.list\n        list_0b075e -> min_4d4556.list\n        min_4d4556.result -> firstitem_3078c6.list\n        instance(x: -318, y: 358) max_1a9f3c root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 521) min_d0e7da root.Std_k98ojb.List.Min {}\n        list_0b075e -> max_1a9f3c.list\n        list_0b075e -> min_d0e7da.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 11, name: \"input\") property(Number) input_5e8f1d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_7c9b0a\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_e6a3cf\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_f8e2d1\n\n        instance(x: 201, y: 62) modulo_5b7f9c root.Std_k98ojb.Math.Modulo {}\n        instance(x: -105, y: -110) ifexpression_6a3c0f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_5e8f1d -> modulo_5b7f9c.value\n        2 -> modulo_5b7f9c.divisor\n        ifexpression_6a3c0f.then -> continue_e6a3cf\n        execute_7c9b0a -> ifexpression_6a3c0f.execute\n        modulo_5b7f9c.result -> ifexpression_6a3c0f.gen_0\n        ifexpression_6a3c0f.value -> output_f8e2d1\n    }\n\n    \n\n    instance(x: -174, y: 11) is_even_4c7d0f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 6, name: \"input\") property(Number) input_9f1e8d\n        in(x: -451, y: -115, name: \"execute\") trigger() execute_ea7c0b\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b6d3ab\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_5f8e9b\n\n        instance(x: 201, y: 62) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 432, y: 67) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n        input_9f1e8d -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> equal_a54bdc.left\n        0 -> equal_a54bdc.right\n        equal_a54bdc.result -> output_b6d3ab\n        execute_ea7c0b -> continue_5f8e9b\n    }\n\n    \n\n    instance(x: -83, y: 59) is_even_1a2e7c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 20, name: \"input\") property(Number) input_5f9a8e\n        in(x: -451, y: -119, name: \"execute\") trigger() execute_1b3d6c\n\n        out(x: 1227, y: 2, name: \"output\") property(Bool) output_4b9f1e\n        out(x: 1218, y: -117, name: \"continue\") trigger() continue_5a0e6f\n\n        instance(x: 752, y: -115) ifexpression_7c3d2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_5f9a8e -> ifexpression_7c3d2f.gen_0\n        ifexpression_7c3d2f.value -> output_4b9f1e\n        execute_1b3d6c -> ifexpression_7c3d2f.execute\n        ifexpression_7c3d2f.then -> continue_5a0e6f\n        ifexpression_7c3d2f.else -> continue_5a0e6f\n    }\n\n    \n\n    instance(x: -291, y: 30) is_even_9b8b4f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 16, name: \"input\") property(Number) input_5e9f0d\n        in(x: -453, y: -114, name: \"execute\") trigger() execute_eb2c8a\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_1a7d3e\n        out(x: 1214, y: 16, name: \"output\") property(Bool) output_5f0b9f\n\n        instance(x: 1026, y: 16) ifexpression_2c8e4f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_5e9f0d -> ifexpression_2c8e4f.gen_0\n        execute_eb2c8a -> ifexpression_2c8e4f.execute\n        ifexpression_2c8e4f.value -> output_5f0b9f\n        ifexpression_2c8e4f.then -> continue_1a7d3e\n        ifexpression_2c8e4f.else -> continue_1a7d3e\n    }\n\n    \n\n    instance(x: -291, y: 11) is_even_5b9f0f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 16, name: \"input\") property(Number) input_1f8e6d\n        in(x: -452, y: -114, name: \"execute\") trigger() execute_9b2c0a\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_7b3a5e\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_8f6d1f\n\n        instance(x: -106, y: -110) ifexpression_e0c9ab root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1f8e6d -> ifexpression_e0c9ab.gen_0\n        execute_9b2c0a -> ifexpression_e0c9ab.execute\n        ifexpression_e0c9ab.value -> output_7b3a5e\n        ifexpression_e0c9ab.then -> continue_8f6d1f\n        ifexpression_e0c9ab.else -> continue_8f6d1f\n    }\n\n    \n\n    instance(x: -173, y: 12) is_even_2a4b1c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 11, name: \"input\") property(Number) input_9f8a6e\n        in(x: -451, y: -115, name: \"execute\") trigger() execute_e5b1d4\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output\n        input_9f8a6e -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> output_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        false -> setter_37db7f.new_value\n        execute_e5b1d4 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_5e9d0a root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 20, name: \"input\") property(Number) input_1a9d8f\n        in(x: -450, y: -115, name: \"execute\") trigger() execute_2c6b5e\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_e7f3ee\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_1a9d8f\n\n        instance(x: -105, y: -110) ifexpression_6e2c0b root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a9d8f -> ifexpression_6e2c0b.gen_0\n        execute_2c6b5e -> ifexpression_6e2c0b.execute\n        ifexpression_6e2c0b.then -> output_1a9d8f\n        ifexpression_6e2c0b.else -> continue_e7f3ee\n    }\n\n    \n\n    instance(x: -174, y: 39) is_even_4e7b5f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 0, name: \"input\") property(Number) input_5e9f1d\n        in(x: -485, y: 30, name: \"execute\") trigger() execute_7a8b6c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_e2c3ab\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_9e4d7f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = output\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = output\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = output\n        ifexpression_875761.else -> continue_e2c3ab\n        ifexpression_875761.value -> output_9e4d7f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_e2c3ab\n        getter_b280eb.value -> ifexpression_875761.gen_0\n        input_5e9f1d -> ifexpression_875761.gen_1\n        setter_9d4f1c.new_value -> output_9e4d7f\n        setter_38e107.new_value -> output_9e4d7f\n        execute_7a8b6c -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_even_f5a2a0 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 16, name: \"input\") property(Number) input_8e6a3f\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_1b7d0c\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_e9b5ec\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_6a8f2e\n\n        instance(x: -104, y: -110) ifexpression_1d0c3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_ba7e5f\") getter_ba7e5f = output\n        setter(x: 116, y: -268, name: \"setter_1d9c8b\") setter_1d9c8b = output\n        input_8e6a3f -> ifexpression_1d0c3c.gen_0\n        execute_1b7d0c -> ifexpression_1d0c3c.execute\n        getter_ba7e5f.value -> output_e9b5ec\n        ifexpression_1d0c3c.then -> setter_1d9c8b.execute\n        true -> setter_1d9c8b.new_value\n        false -> setter_1d9c8b.new_value\n        ifexpression_1d0c3c.else -> continue_6a8f2e\n        setter_1d9c8b.continue -> continue_6a8f2e\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_7a5d4f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 0, name: \"input\") property(Number) input_1a3e8f\n        in(x: -450, y: -115, name: \"execute\") trigger() execute_e9b7d2\n\n        out(x: 544, y: 62, name: \"output\") property(Bool) output_5c0f6f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_8a1e3e\n\n        instance(x: -80, y: 61, name: \"is even?\") ifexpression_9d7b2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a3e8f -> ifexpression_9d7b2f.gen_0\n        2 -> ifexpression_9d7b2f.gen_1\n        execute_e9b7d2 -> ifexpression_9d7b2f.execute\n        ifexpression_9d7b2f.value -> output_5c0f6f\n        ifexpression_9d7b2f.then -> continue_8a1e3e\n        ifexpression_9d7b2f.else -> continue_8a1e3e\n    }\n\n    \n\n    instance(x: -83, y: 529) is_even_f5c0c6 root.main.is_even {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_7b3b7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5f4c8a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_0b1361`` root.Std_k98ojb.List.Contains {}\n        characters_7b3b7b.characters -> find_5f4c8a.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_54bdc root.Std_k98ojb.Logic.NotEqual {}\n            characters_7b3b7b.characters -> slice_45e806.list\n            current_afd5b1 -> slice_45e806.start\n            -1 -> slice_45e806.end\n            slice_45e806.slice -> contains_d42dce.list\n            current_afd5b1 -> ``first occurrence_0b1361``.list\n            contains_d42dce.contains -> notequal_54bdc.left\n            false -> notequal_54bdc.right\n            notequal_54bdc.result -> bool_1eb6e9\n        } -> find_5f4c8a.predicate\n        find_5f4c8a.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_7e9b8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3a4d6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_0b1361`` root.Std_k98ojb.Strings.Contains {}\n        characters_7e9b8c.characters -> find_3a4d6f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``first occurrence_0b1361`` root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> ``first occurrence_0b1361``.input\n            input_0 -> ``first occurrence_0b1361``.contains\n            ``first occurrence_0b1361``.result -> bool_1eb6e9\n        } -> find_3a4d6f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_d42dce.input\n            input_0 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``first occurrence_0b1361``.predicate\n        find_3a4d6f.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_1\n\n        instance(x: 0, y: 1) characters_3c7a4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        data_instance(x: 394, y: -339) data_3c713b  = [seen]\n        characters_3c7a4f.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            data_3c713b -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            data_3c713b -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        input_1 -> characters_3c7a4f.input\n        data_3c713b -> output_1\n        find_6d05b0.item -> data_3c713b.seen\n    }\n\n    \n\n    instance(x: -81, y: 52) first_repeated_char_5e8a9f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) find_7b3b7b root.Std_k98ojb.Iteration.Find {}\n        instance(x: -105, y: 80, name: \"char_list\") map_0f8d9a root.Std_k98ojb.Iteration.Map {\n            handler: func() {\n                in(x: -193, y: 34, name: \"item\") property(String) item_ae\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1f9a7\n\n                instance(x: 89, y: 29) contains_d108d5 root.Std_k98ojb.Strings.Contains {}\n                instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                input_ai -> contains_d108d5.input\n                item_ae -> contains_d108d5.contains\n                contains_d108d5.result -> notequal_807ffd.left\n                false -> notequal_807ffd.right\n                notequal_807ffd.result -> bool_1f9a7\n            }\n        }\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(String) item_ae\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1f9a7\n\n            instance(x: 89, y: 29) contains_d108d5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_ai -> contains_d108d5.input\n            item_ae -> contains_d108d5.contains\n            contains_d108d5.result -> notequal_807ffd.left\n            false -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_1f9a7\n        } -> find_7b3b7b.predicate\n        characters_6d05b0.output -> map_0f8d9a.items\n        func() {\n            in(x: -193, y: 34, name: \"item\") property(String) item_ae\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1f9a7\n\n            instance(x: 89, y: 29) contains_d108d5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_ai -> contains_d108d5.input\n            item_ae -> contains_d108d5.contains\n            contains_d108d5.result -> notequal_807ffd.left\n            false -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_1f9a7\n        } -> map_0f8d9a.handler\n        map_0f8d9a.output_list -> find_7b3b7b.items\n        find_7b3b7b.item -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) first_repeated_char_59bc6e root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -287, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5e3c9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4a7d8c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -2) contains_6c1b3c root.Std_k98ojb.List.Contains {}\n        characters_5e3c9f.characters -> find_4a7d8c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 112, y: 80) slice_1b7c8f root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_5a9e3d root.Std_k98ojb.Logic.NotEqual {}\n            characters_5e3c9f.characters -> slice_1b7c8f.list\n            current_0 -> slice_1b7c8f.start\n            -1 -> slice_1b7c8f.end\n            slice_1b7c8f.slice -> contains_6c1b3c.list\n            current_0 -> contains_6c1b3c.contains\n            contains_6c1b3c.result -> notequal_5a9e3d.left\n            false -> notequal_5a9e3d.right\n            notequal_5a9e3d.result -> bool_0\n        } -> find_4a7d8c.predicate\n        input_0 -> characters_5e3c9f.input\n        find_4a7d8c.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_6e6bfd root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3c9b8a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4e6d5f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"char\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"index == chars.indexOf(it)\"\n        }\n        instance(x: 62, y: -226, name: \"chars\") ``string_0`` root.Std_k98ojb.List.Slice {}\n        data_instance(x: 394, y: -339) data_3c713b  = [index]\n        characters_3c9b8a.characters -> find_4d5f.find\n        input_0 -> characters_3c9b8a.input\n        ``string_0``.slice -> expression_634b7e.gen_1\n        data_3c713b -> expression_634b7e.gen_0\n        0 -> ``string_0``.start\n        -1 -> ``string_0``.end\n        find_4d5f.item -> output_0\n        expression_634b7e.result -> find_4d5f.predicate\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_807ffd.left\n            \"\" -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        input_0 -> find_6d05b0.items\n        find_6d05b0.item -> output_3bc2ae\n    }\n\n    \n\n    instance(x: -81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5a8c4e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3f9d7c root.Std_k98ojb.Iteration.Find {}\n        instance(x: -40, y: 50, name: \"occurrences\") filter_1a2b6e root.Std_k98ojb.Query.Filter {\n            where: \"it > 1\"\n        }\n        instance(x: -40, y: 150, name: \"first occurrence\") find_0f9d7c root.Std_k98ojb.Iteration.Find {}\n        characters_5a8c4e.characters -> filter_1a2b6e.list\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) count_4a8c4e root.Std_k98ojb.Iteration.Count {}\n            current_afd5b1 -> count_4a8c4e.item\n            characters_5a8c4e.characters -> count_4a8c4e.items\n            count_4a8c4e.count -> bool_1eb6e9\n        } -> filter_1a2b6e.predicate\n        instance(x: 0, y: 201) mapentries_5a8c4e root.Std_k98ojb.Iteration.MapEntries {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(List) current_afd5b1\n\n            out(x: 698, y: 85, name: \"output\") property(Any) output_1eb6e9\n\n            instance(x: 112, y: 80) firstitem_4a8c4e root.Std_k98ojb.List.FirstItem {}\n            current_afd5b1 -> mapentries_5a8c4e.list\n            firstitem_4a8c4e.item -> output_1eb6e9\n        } -> mapentries_5a8c4e.handler\n        filter_1a2b6e.result -> find_0f9d7c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_1 -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_0f9d7c.predicate\n        mapentries_5a8c4e.output_list -> find_3f9d7c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(List) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) length_4a8c4e root.Std_k98ojb.List.Length {}\n            current_afd5b1 -> length_4a8c4e.list\n            length_4a8c4e.length -> bool_1eb6e9\n        } -> find_3f9d7c.predicate\n        find_0f9d7c.item -> output_0\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -287, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_7e4c6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3d9a8c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 460, y: -50) contains_2f5b1c root.Std_k98ojb.List.Contains {}\n        characters_7e4c6f.characters -> find_3d9a8c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) list_0f8c3a root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_5d4f7f root.Std_k98ojb.Logic.NotEqual {}\n            characters_7e4c6f.characters -> list_0f8c3a.list\n            current_afd5b1 -> list_0f8c3a.start\n            -1 -> list_0f8c3a.end\n            list_0f8c3a.slice -> contains_2f5b1c.list\n            current_afd5b1 -> contains_2f5b1c.contains\n            contains_2f5b1c.result -> notequal_5d4f7f.left\n            false -> notequal_5d4f7f.right\n            notequal_5d4f7f.result -> bool_1eb6e9\n        } -> find_3d9a8c.predicate\n        find_3d9a8c.item -> output_0\n        input_0 -> characters_7e4c6f.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5e3b9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7a4d6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_0b1361`` root.Std_k98ojb.Strings.Contains {}\n        characters_5e3b9c.characters -> find_7a4d6f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``first occurrence_0b1361`` root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> ``first occurrence_0b1361``.input\n            input_0 -> ``first occurrence_0b1361``.contains\n            ``first occurrence_0b1361``.result -> bool_1eb6e9\n        } -> find_7a4d6f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_d42dce.input\n            input_0 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``first occurrence_0b1361``.predicate\n        find_7a4d6f.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_9f7759\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_9cceb3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1cedb2\") getter_1cedb2 = second_min\n        setter(x: 116, y: -268, name: \"setter_37db7f\") setter_37db7f = second_min\n        instance(x: -105, y: -110) ifexpression_37db7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1cedb2\") getter_1cedb2 = second_min\n        setter(x: 116, y: -268, name: \"setter_37db7f\") setter_37db7f = second_min\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min\n        min -> ifexpression_e38995.gen_0\n        second_min -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> min_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        min -> setter_1cedb2.new_value\n        list_min_node.min -> ifexpression_9cceb3.gen_0\n        second_min -> ifexpression_9cceb3.gen_1\n        getter_1cedb2.value -> second_min_9f7759\n        ifexpression_9cceb3.then -> setter_37db7f.execute\n        min -> setter_37db7f.new_value\n        list_min_node.min -> ifexpression_37db7f.gen_0\n        second_min -> ifexpression_37db7f.gen_1\n        getter_1cedb2.value -> second_min_9f7759\n        ifexpression_37db7f.then -> setter_37db7f.execute\n        min -> setter_37db7f.new_value\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 17, name: \"list\") property(List) list_1a9f8e\n\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_5b7c6d\n\n        instance(x: 426, y: -303) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) find_1f8e4a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            min_node.min -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_1f8e4a.predicate\n        list_1a9f8e -> find_1f8e4a.items\n        min_node.min -> second_min_5b7c6d\n        list_1a9f8e -> min_node.list\n        find_1f8e4a.item -> second_min_5b7c6d\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: 0, name: \"list\") property(List) list_8e9f1a\n\n        out(x: 160, y: 31, name: \"second_min\") property(Number) second_min_7c3d4b\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name:",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: 1, name: \"list\") property(List) list_4e9f5a\n\n        out(x: 161, y: 0, name: \"second_smallest\") property(Number) second_smallest_3c2b7d\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        data_instance(x: -609, y: -363) data_9a9c70  = [a, b]\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_min_node.min -> second_smallest_3c2b7d\n        a_9f7759 -> data_9a9c70.a\n        b_f9110a -> data_9a9c70.b\n        data_9a9c70 -> min_c3e343.items\n        list_4e9f5a -> list_min_node.items\n        ifexpression_e38995.gen_0 -> a_9f7759\n        ifexpression_e38995.gen_1 -> b_f9110a\n        getter_9cceb3.value -> min_c3e343.items\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n    }\n\n    \n\n    instance(x: -174, y: -63) second_smallest_d6e930 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) min_1a7b5f root.Std_k98ojb.List.Min {}\n        instance(x: -39, y: 26, name: \"First smallest number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Second smallest number\") ``First smallest number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> min_1a7b5f.list\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            min_1a7b5f.min -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        list_09fcba -> ``First smallest number_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            min_1a7b5f.min -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First smallest number_0b1361``.predicate\n        find_de624f.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) second_smallest_f53d27 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_8f3e1a\n\n        out(x: 593, y: 79, name: \"number\") property(Number) number_7b2d5c\n\n        instance(x: 0, y: 0) min_9f4b2f root.Std_k98ojb.List.Min {}\n        instance(x: -341, y: -301) remove_1a8e3c root.Std_k98ojb.List.Remove {}\n        instance(x: -171, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_8f3e1a -> min_9f4b2f.list\n        min_9f4b2f.min -> remove_1a8e3c.index\n        list_8f3f1a -> remove_1a8e3c.list\n        remove_1a8e3c.listWithoutItem -> min_c3e343.list\n        min_c3e343.min -> number_7b2d5c\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_6f4b0f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_8e3f6a\n\n        out(x: 593, y: 29, name: \"number\") property(Number) number_1b9d5c\n\n        instance(x: 0, y: 0) min_7a2a4f root.Std_k98ojb.List.Min {}\n        instance(x: -341, y: -1) remove_f3e8a6 root.Std_k98ojb.List.Remove {}\n        instance(x: -105, y: -110) min_9c5d7c root.Std_k98ojb.List.Min {}\n        list_8e3f6a -> min_7a2a4f.list\n        min_7a2a4f.min -> remove_f3e8a6.index\n        list_8e3f6a -> remove_f3e8a6.list\n        remove_f3e8a6.listWithoutItem -> min_9c5d7c.list\n        min_9c5d7c.min -> number_1b9d5c\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_4f2d0c root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: 0, name: \"list\") property(List) list_1a9f8e\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_7c2d6b\n\n        instance(x: -105, y: -110) find_4a5f0f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -144, y: 112, name: \"elem\") property(Number) elem_1e9c7d\n\n            out(x: 116, y: -268, name: \"\") property(Bool) _3a8f6f\n\n            instance(x: 89, y: 29) min_2b5f0a root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_7c1e4d root.Std_k98ojb.Logic.NotEqual {}\n            list_1a9f8e -> min_2b5f0a.first\n            elem_1e9c7d -> min_2b5f0a.second\n            min_2b5f0a.result -> notequal_7c1e4d.left\n            0 -> notequal_7c1e4d.right\n            notequal_7c1e4d.result -> _3a8f6f\n        } -> find_4a5f0f.predicate\n        list_1a9f8e -> find_4a5f0f.items\n        find_4a5f0f.item -> second_min_7c2d6b\n    }\n\n    \n\n    instance(x: -174, y: -63) second_smallest_b3b9ce root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) min_1f9b8a root.Std_k98ojb.List.Min {}\n        instance(x: -39, y: 26, name: \"First smallest number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"Second smallest number\") ``First smallest number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> min_1f9b8a.list\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            min_1f9b8a.min -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        list_09fcba -> ``First smallest number_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            min_1f9b8a.min -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First smallest number_0b1361``.predicate\n        find_de624f.item -> min_1f9b8a.list\n        ``First smallest number_0b1361``.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) second_smallest_f53d27 root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9f2e1a\n\n        out(x: 159, y: 81, name: \"second_min\") property(Number) second_min_a7c3b4\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        data_instance(x: -609, y: -363) data_9a9c70  = [min, second_min]\n        instance(x: -105, y: 0) ifexpression_1e7f8d root.Std_k98ojb.Std.IfExpression {\n            expression: \"second_min == min\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = second_min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_min\n        instance(x: 426, y: 0) list_min_node_5e7d8f root.Std_k98ojb.List.Min {}\n        data_instance(x: -609, y: -363) data_9a9c70_4d3c9c  = [min, second_min]\n        instance(x: -105, y: 0) ifexpression_1e7f8d_2c6d5b root.Std_k98ojb.Std.IfExpression {\n            expression: \"second_min == min\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = second_min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_min\n        instance(x: 426, y: 0) list_min_node_5e7d8f_6a9c8f root.Std_k98ojb.List.Min {}\n        data_instance(x: -609, y: -363) data_9a9c70_4d3c9c_1e2d8f  = [min, second_min]\n        instance(x: -105, y: 0) ifexpression_1e7f8d_2c6d5b_7b9c8f root.Std_k98ojb.Std.IfExpression {\n            expression: \"second_min == min\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = second_min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_min\n\n        list_9f2e1a -> data_9a9c70.list\n        list_9f2e1a -> ifexpression_e38995.gen_0\n        list_9f2e1a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> min\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        data_9a9c70.min -> setter_1cedb2.new_value\n        list_9f2e1a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        getter_9cceb3.value -> second_min\n        data_9a9c70.second_min -> list_min_node.items\n        list_min_node.min -> second_min_a7c3b4\n\n        list_9f2e1a -> ifexpression_1e7f8d.gen_0\n        min -> ifexpression_1e7f8d.gen_1\n        getter_9cceb3.value -> second_min\n        ifexpression_1e7f8d.then -> setter_1cedb2.execute\n        data_9a9c70.second_min -> setter_1cedb2.new_value\n        list_9f2e1a -> setter_37db7f.new_value\n        ifexpression_1e7f8d.else -> setter_37db7f.execute\n\n        list_9f2e1a -> data_9a9c70_4d3c9c.list\n        list_9f2e1a -> ifexpression_1e7f8d_2c6d5b.gen_0\n        min -> ifexpression_1e7f8d_2c6d5b.gen_1\n        getter_9cceb3.value -> second_min\n        ifexpression_1e7f8d_2c6d5b.then -> setter_1cedb2.execute\n        data_9a9c70_4d3c9c.second_min -> setter_1cedb2.new_value\n        list_9f2e1a -> setter_37db7f.new_value\n        ifexpression_1e7f8d_2c6d5b.else -> setter_37db7f.execute\n\n        list_9f2e1a -> data_9a9c70_4d3c9c_1e2d8f.list\n        list_9f2e1a -> ifexpression_1e7f8d_2c6d5b_7b9c8f.gen_0\n        min -> ifexpression_1e7f8d_2c6d5b_7b9c8f.gen_1\n        getter_9cceb3.value -> second_min\n        ifexpression_1e7f8d_2c6d5b_7b9c8f.then -> setter_1cedb2.execute\n        data_9a9c70_4d3c9c_1e2d8f.second_min -> setter_1cedb2.new_value\n        list_9f2e1a -> setter_37db7f.new_value\n        ifexpression_1e7f8d_2c6d5b_7b9c8f.else -> setter_37db7f.execute\n\n        data_9a9c70_4d3c9c.second_min -> list_min_node_5e7d8f.items\n        list_min_node_5e7d8f.min -> second_min_a7c3b4\n    }\n\n    \n\n    instance(x: -174, y: 31) second_smallest_1a6b2f root.main.second_smallest {}\n}"
            ]
        }
    }
]